import { tags } from "typia";

/**
 * Media files attached to chat messages supporting images and videos. Linked to
 * messages and stored with metadata including file URI, type, and timestamps.
 * Supports audit with creation timestamps and soft deletion for compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatAppMessageMediaAttachment = {
  /** Unique identifier of the media attachment record. */
  id: string & tags.Format<"uuid">;

  /** Foreign key reference to the chat message the media is attached to. */
  message_id: string & tags.Format<"uuid">;

  /** Type of the media: 'image' or 'video'. */
  media_type: "image" | "video";

  /** URI of the stored media file in the system. */
  uri: string & tags.MaxLength<80000>;

  /** Timestamp when the media attachment was created. */
  created_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. Null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatAppMessageMediaAttachment {
  /** Request parameters for searching and paginating media attachments. */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Maximum records per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Filtering criteria for media attachments. */
    filter?:
      | {
          /** Filter by message ID. */
          message_id?: (string & tags.Format<"uuid">) | null | undefined;

          /** Filter by media type. */
          media_type?: "image" | "video" | null | undefined;
        }
      | undefined;

    /** Search keyword for media attachments. */
    search?: string | null | undefined;

    /** Sorting order expression. */
    orderBy?: string | null | undefined;
  };

  /**
   * Information required to create a new media attachment linked to a chat
   * message.
   */
  export type ICreate = {
    /** Reference to message this media will attach. */
    message_id: string & tags.Format<"uuid">;

    /** Media type for the new attachment. */
    media_type: "image" | "video";

    /** URI location of the media file to attach. */
    uri: string & tags.MaxLength<80000>;
  };

  /** Data for updating an existing media attachment. All fields optional. */
  export type IUpdate = {
    /** Reference to message being attached to. Optional in update. */
    message_id?: (string & tags.Format<"uuid">) | undefined;

    /** Media type (image or video). Optional in update. */
    media_type?: "image" | "video" | undefined;

    /** URI of the media file. Optional in update. */
    uri?: (string & tags.MaxLength<80000>) | undefined;

    /** Soft deletion timestamp. Nullable in update. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary information for media attachments, used in paginated lists. */
  export type ISummary = {
    /** Unique media attachment identifier. */
    id: string & tags.Format<"uuid">;

    /** Type of media. */
    media_type: "image" | "video";

    /** URI of media file. */
    uri: string & tags.MaxLength<80000>;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;
  };
}
