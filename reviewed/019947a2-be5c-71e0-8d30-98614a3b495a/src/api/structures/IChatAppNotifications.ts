import { tags } from "typia";

/**
 * Notification records for system messages related to chat application users,
 * including message alerts, read status, and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatAppNotifications = {
  /** Primary key UUID identifier of the notification. */
  id: string & tags.Format<"uuid">;

  /** UUID of the user who receives the notification. */
  chat_app_regular_user_id: string & tags.Format<"uuid">;

  /** UUID of the associated message triggering the notification. */
  chat_app_message_id: string & tags.Format<"uuid">;

  /**
   * Notification type such as 'message_received', 'group_invite'. Defines the
   * category of notification for handling logic.
   */
  notification_type: string;

  /**
   * Read state flag. True if the notification has been acknowledged by the
   * user.
   */
  is_read: boolean;

  /** ISO 8601 timestamp when notification was created. */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp when notification was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Optional soft deletion timestamp for archival. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatAppNotifications {
  /**
   * Request body for filtering and paginating notifications list. Provides
   * options to filter by read state and paginate results.
   */
  export type IRequest = {
    /** Optional page number for pagination. */
    page?: (number & tags.Minimum<1>) | null | undefined;

    /** Optional limit for number of results per page. */
    limit?: (number & tags.Minimum<1>) | null | undefined;

    /** Optional filter by read/unread status of notifications. */
    is_read?: boolean | null | undefined;
  };

  /**
   * Summary view of notification information suitable for list display.
   *
   * Includes the unique identifier, notification type, read status, and
   * timestamps for creation and last update.
   *
   * Does NOT include sensitive or detailed message content.
   *
   * Use this type for notification listing endpoints.
   */
  export type ISummary = {
    /** Unique identifier of the notification */
    id: string & tags.Format<"uuid">;

    /** Type or category of notification, e.g., message_received */
    notification_type: string;

    /** Whether the notification has been read */
    is_read: boolean;

    /** Timestamp when the notification was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the notification was last updated */
    updated_at: string & tags.Format<"date-time">;
  };
}
