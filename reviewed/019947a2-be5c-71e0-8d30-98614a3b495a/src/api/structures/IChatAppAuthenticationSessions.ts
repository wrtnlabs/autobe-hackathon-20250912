import { tags } from "typia";

/**
 * Authentication session entity storing OAuth2 tokens issued to a regular user
 * via Snapchat.
 *
 * Contains token strings, timestamps, user linkage, and soft deletion
 * timestamp.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatAppAuthenticationSessions = {
  /** Primary key. */
  id: string & tags.Format<"uuid">;

  /** Belonged regular user ID. */
  chat_app_regular_user_id: string & tags.Format<"uuid">;

  /** OAuth2 access token string from Snapchat. */
  access_token: string;

  /** OAuth2 refresh token string from Snapchat. */
  refresh_token: string;

  /** Expiration timestamp of the access token. */
  expires_at: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp indicating revocation or expiry. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatAppAuthenticationSessions {
  /** Request for filtering authentication sessions. */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Search keyword for tokens. */
    search?: string | null | undefined;

    /** Sort order specification. */
    sort?: string | null | undefined;

    /** Filter by user ID. */
    chat_app_regular_user_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /**
   * Create a new authentication session record.
   *
   * This operation allows creation of a new OAuth2 authentication session
   * with access and refresh tokens for a Snapchat login user. It stores
   * details such as token strings, token expiration, and associated user ID.
   *
   * Security considerations mandate that only authenticated regular users can
   * create their own sessions, ensuring secure management of authentication
   * credentials.
   *
   * Proper validation of tokens and user existence is required to ensure
   * valid sessions are created.
   */
  export type ICreate = {
    /** Belonged user's {@link chat_app_regular_users.id}. */
    chat_app_regular_user_id: string & tags.Format<"uuid">;

    /** OAuth2 access token string provided by Snapchat for authentication. */
    access_token: string;

    /** OAuth2 refresh token string to obtain new access tokens. */
    refresh_token: string;

    /** Timestamp when the access token expires. */
    expires_at: string & tags.Format<"date-time">;

    /** Record creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Record last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** Soft delete timestamp indicating revocation or expiry. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Update an existing authentication session record. */
  export type IUpdate = {
    /** OAuth2 access token string. */
    access_token?: string | undefined;

    /** OAuth2 refresh token string. */
    refresh_token?: string | undefined;

    /** Expiration timestamp of the token. */
    expires_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft delete timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary information of an authentication session. */
  export type ISummary = {
    /** Unique identifier of the session. */
    id: string & tags.Format<"uuid">;

    /** OAuth2 access token string. */
    access_token: string;

    /** Expiration timestamp of the access token. */
    expires_at: string & tags.Format<"date-time">;
  };
}
