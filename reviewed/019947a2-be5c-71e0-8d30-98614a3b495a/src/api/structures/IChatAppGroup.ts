import { tags } from "typia";

/**
 * Community groups in the chatting application.
 *
 * Represents a group entity that users can create, join, and manage. Contains
 * group metadata including unique name, description, and status fields.
 *
 * Groups are independently managed core business entities with lifecycle states
 * and soft deletion support.
 *
 * Related to group memberships via chat_app_group_memberships.
 *
 * Enables group admins to organize and control membership and group settings.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatAppGroup = {
  /**
   * Primary Key.
   *
   * Unique identifier of the community group.
   */
  id: string & tags.Format<"uuid">;

  /** Unique name of the community group, used for identification and display. */
  name: string;

  /** Optional detailed description of the community group. */
  description?: string | null | undefined;

  /**
   * Current status of the group for workflow management, e.g., 'active',
   * 'inactive', 'archived'.
   */
  status: string;

  /** Additional business-specific status information, optional. */
  business_status?: string | null | undefined;

  /** Timestamp when the group was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the group was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp for soft deletion of the group; null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatAppGroup {
  /**
   * Request type for filtering and pagination of community groups.
   *
   * Includes pagination parameters to control page size and number, search
   * keyword, and filtering by name, status, and business status.
   *
   * Allows ordering results by specified fields and direction.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * @default 100
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Search keyword for filtering groups. */
    search?: string | null | undefined;

    /** Filter groups with exact or partial matching name. */
    name?: string | null | undefined;

    /**
     * Status filter for group states like 'active', 'inactive', or
     * 'archived'.
     */
    status?: string | null | undefined;

    /** Business specific status filter, optional. */
    business_status?: string | null | undefined;

    /**
     * Order by a property name with direction control, e.g., 'name_ASC',
     * 'created_at_DESC'.
     */
    orderBy?: string | null | undefined;
  };

  /**
   * Request type to create a new community group.
   *
   * Includes name, optional description, status, and optional business
   * status.
   *
   * Name must be unique within all community groups.
   */
  export type ICreate = {
    /** Unique name of the community group at creation. */
    name: string;

    /** Optional description of the new community group. */
    description?: string | null | undefined;

    /** Initial status of the group for workflow management. */
    status: string;

    /** Optional business specific status info. */
    business_status?: string | null | undefined;
  };

  /**
   * Request type to update existing community group.
   *
   * Includes partial properties for name, description, status, and business
   * status.
   *
   * Supports partial updates and optional fields, all nullable.
   */
  export type IUpdate = {
    /** Updated name of the community group. */
    name?: string | null | undefined;

    /** Updated description of the community group. */
    description?: string | null | undefined;

    /** Updated status of the community group. */
    status?: string | null | undefined;

    /** Updated business status info. */
    business_status?: string | null | undefined;
  };

  /**
   * Summary view of community group entity suitable for list display.
   *
   * Includes unique group ID, group name, current status, and optional
   * business-related status.
   *
   * Used for group listing endpoints where full group detail is unnecessary.
   */
  export type ISummary = {
    /** Unique identifier of the community group */
    id: string & tags.Format<"uuid">;

    /** Unique name of the community group */
    name: string;

    /** Current status of the group for workflow management */
    status: string;

    /** Additional business-specific status information, optional */
    business_status?: string | null | undefined;
  };
}
