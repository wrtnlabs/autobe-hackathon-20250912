import { tags } from "typia";

/**
 * Represents a notification record linked to a user or system-wide. Contains
 * type, content, read status, timestamps, and deletion flag.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEventRegistrationNotifications = {
  /** Primary Key of the notification record */
  id: string;

  /**
   * ID of the user receiving or triggering this notification. Nullable
   * because some notifications may be system-wide.
   */
  user_id?: string | null | undefined;

  /**
   * Type of notification, e.g., registration confirmation, waitlist
   * promotion, event schedule change, capacity adjustment
   */
  type: string;

  /** Detailed notification content describing the event or action */
  content: string;

  /** Flag indicating whether the notification has been read by the user */
  read: boolean;

  /** Timestamp when the notification was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the notification was last updated */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the notification was soft deleted; null if not deleted */
  deleted_at?: string | null | undefined;
};
export namespace IEventRegistrationNotifications {
  /**
   * Request schema for retrieving event registration notifications with
   * support for pagination and filtering. Supports optional fields for page,
   * limit, type filtering, and read status. Purpose is to allow API consumers
   * to query notifications efficiently with flexible criteria.
   */
  export type IRequest = {
    /**
     * 1-based page number for paginated results; nullable for default
     * behavior
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Number of records per page; nullable if default applies */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Filter notifications by type; e.g., "registration confirmation",
     * "waitlist promotion"; nullable disables filter
     */
    type?: string | null | undefined;

    /**
     * Filter based on read status; true for read, false for unread;
     * nullable disables filter
     */
    read?: boolean | null | undefined;
  };
}
