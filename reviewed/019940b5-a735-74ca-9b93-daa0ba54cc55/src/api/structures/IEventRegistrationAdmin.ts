import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Administrator user entity representing system-level admins with global
 * privileges, including authentication credentials and profile information.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEventRegistrationAdmin = {
  /** Primary Key. Unique identifier of the admin user. */
  id: string & tags.Format<"uuid">;

  /** Admin's unique email address for authentication. */
  email: string;

  /** Hashed password for secure authentication; never store plain passwords. */
  password_hash: string;

  /** Admin's full legal or preferred name. */
  full_name: string;

  /** Optional phone number for admin contact. */
  phone_number?: string | null | undefined;

  /** Optional URL of the admin's profile picture. */
  profile_picture_url?: string | null | undefined;

  /** Flag indicating if the admin's email is verified. */
  email_verified: boolean;

  /** Timestamp when the admin user record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the admin user record was last updated. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEventRegistrationAdmin {
  /**
   * Payload for creating a new admin user account with required
   * authentication and profile details.
   */
  export type ICreate = {
    /** Administrator's unique email address for login. */
    email: string & tags.Format<"email">;

    /** Hashed password for authentication security. */
    password_hash: string;

    /** Admin's full name for identification. */
    full_name: string;

    /** Optional phone number for admin contact. */
    phone_number?: string | null | undefined;

    /** Optional profile picture URL for admin users. */
    profile_picture_url?: string | null | undefined;

    /** Flag indicating if admin's email has been verified. */
    email_verified: boolean;
  };

  /** Payload for admin login authentication with email and password hash. */
  export type ILogin = {
    /** Administrator's unique email address for login. */
    email: string & tags.Format<"email">;

    /** Hashed password for authentication security. */
    password_hash: string;
  };

  /** Payload to refresh JWT authorization tokens for admin. */
  export type IRefresh = {
    /** Refresh JWT token to obtain new access tokens. */
    refresh_token: string;
  };

  /** Response schema for authorized admin user including JWT tokens. */
  export type IAuthorized = {
    /** Primary key of the admin user. */
    id: string & tags.Format<"uuid">;

    /** Administrator's unique email address. */
    email: string & tags.Format<"email">;

    /**
     * Hashed password for secure authentication; never store plain
     * passwords.
     */
    password_hash: string;

    /** Admin's full name for identification. */
    full_name: string;

    /** Optional phone number for admin contact. */
    phone_number?: string | null | undefined;

    /** Optional profile picture URL for admin users. */
    profile_picture_url?: string | null | undefined;

    /** Flag indicating if admin's email has been verified. */
    email_verified: boolean;

    /** Timestamp when the admin user record was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the admin user record was last updated. */
    updated_at: string & tags.Format<"date-time">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Request parameter object for filtering and paginating admin users. */
  export type IRequest = {
    /** Email filter. */
    email?: string | null | undefined;

    /** Full name filter. */
    full_name?: string | null | undefined;

    /** Email verified filter. */
    email_verified?: boolean | null | undefined;

    /** Phone number filter. */
    phone_number?: string | null | undefined;

    /** Pagination: current page. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Pagination: page size limit. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Sort field. */
    orderBy?: string | null | undefined;

    /** Sort direction. */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Partial update request for administrator user details. All fields are
   * optional to facilitate patch-like updates.
   */
  export type IUpdate = {
    /** Admin's unique email address for authentication. */
    email?: string | undefined;

    /**
     * Hashed password for secure authentication; never store plain
     * passwords.
     */
    password_hash?: string | undefined;

    /** Admin's full legal or preferred name. */
    full_name?: string | undefined;

    /** Optional phone number for admin contact. */
    phone_number?: string | null | undefined;

    /** Optional URL of the admin's profile picture. */
    profile_picture_url?: string | null | undefined;

    /** Flag indicating if the admin's email is verified. */
    email_verified?: boolean | undefined;
  };

  /**
   * Summary information for an administrator user, including identification,
   * contact, verification status, and audit timestamps.
   */
  export type ISummary = {
    /** Unique identifier of the admin user */
    id: string;

    /** Unique email address of the admin user */
    email: string;

    /** Full name of the administrator */
    full_name: string;

    /** Email verification status of the admin */
    email_verified: boolean;

    /** Phone number of the admin user (optional) */
    phone_number?: string | null | undefined;

    /** Profile picture URL of the admin user (optional) */
    profile_picture_url?: string | null | undefined;

    /** Timestamp when the admin record was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the admin record was last updated */
    updated_at: string & tags.Format<"date-time">;
  };
}
