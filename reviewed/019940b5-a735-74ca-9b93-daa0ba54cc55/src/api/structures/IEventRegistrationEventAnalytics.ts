import { tags } from "typia";

/**
 * Aggregated analytical data for event registrations.
 *
 * Captures total sign-ups, waitlist size, and popularity by event category.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEventRegistrationEventAnalytics = {
  /** Primary Key UUID */
  id: string & tags.Format<"uuid">;

  /** Belonged event unique identifier */
  event_registration_event_id: string & tags.Format<"uuid">;

  /** Total confirmed event sign-ups at the snapshot time */
  total_sign_ups: number & tags.Type<"int32">;

  /** Number of users currently on the waitlist at the snapshot time */
  waitlist_length: number & tags.Type<"int32">;

  /** Number of sign-ups to events categorized as 'workshop' */
  popularity_category_workshop: number & tags.Type<"int32">;

  /** Number of sign-ups to events categorized as 'seminar' */
  popularity_category_seminar: number & tags.Type<"int32">;

  /** Number of sign-ups to events categorized as 'social' */
  popularity_category_social: number & tags.Type<"int32">;

  /** Number of sign-ups to events categorized as 'networking' */
  popularity_category_networking: number & tags.Type<"int32">;

  /** ISO 8601 Creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 Last update timestamp */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEventRegistrationEventAnalytics {
  /**
   * Request parameters for search and pagination over event analytics data.
   *
   * Supports filtering by event ID and creation date range, with pagination.
   */
  export type IRequest = {
    /** Optional filtering by event ID */
    event_registration_event_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Pagination: Page number */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Pagination: Number of items per page */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional filtering by date greater or equal than created_at */
    created_after?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional filtering by date less than or equal to created_at */
    created_before?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary of event analytics including total sign-ups, waitlist length, and
   * popularity by event category.
   *
   * This entity provides a snapshot of key metrics for an event, supporting
   * reporting and dashboard summaries.
   */
  export type ISummary = {
    /**
     * Unique identifier of the event analytics record.
     *
     * This is the primary key as UUID string.
     */
    id: string;

    /**
     * The event ID associated with this analytics summary record.
     *
     * References the event_registration_events.id field.
     */
    event_registration_event_id: string;

    /**
     * Total confirmed sign-ups for the event at the snapshot time.
     *
     * Integer count of attendees.
     */
    total_sign_ups: number & tags.Type<"int32">;

    /**
     * Number of users currently on the waitlist.
     *
     * Integer count reflecting waitlist length.
     */
    waitlist_length: number & tags.Type<"int32">;

    /** Number of sign-ups for events categorized as 'workshop'. */
    popularity_category_workshop: number & tags.Type<"int32">;

    /** Number of sign-ups for events categorized as 'seminar'. */
    popularity_category_seminar: number & tags.Type<"int32">;

    /** Number of sign-ups for events categorized as 'social'. */
    popularity_category_social: number & tags.Type<"int32">;

    /** Number of sign-ups for events categorized as 'networking'. */
    popularity_category_networking: number & tags.Type<"int32">;

    /**
     * Record creation timestamp.
     *
     * Stored as ISO 8601 string in UTC time.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Record last update timestamp.
     *
     * Stored as ISO 8601 string in UTC time.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
