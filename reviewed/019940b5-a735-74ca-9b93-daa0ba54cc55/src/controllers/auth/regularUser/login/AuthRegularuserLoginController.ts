import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { postauthRegularUserLogin } from "../../../../providers/postauthRegularUserLogin";
import { RegularuserAuth } from "../../../../decorators/RegularuserAuth";
import { RegularuserPayload } from "../../../../decorators/payload/RegularuserPayload";

import { IEventRegistrationRegularUser } from "../../../../api/structures/IEventRegistrationRegularUser";

@Controller("/auth/regularUser/login")
export class AuthRegularuserLoginController {
  /**
   * Authenticate regular user (event_registration_regular_users) and issue
   * access tokens.
   *
   * Authenticates a regular user using their email and password and issues JWT
   * tokens if credentials are valid and email is verified in the
   * 'event_registration_regular_users' table.
   *
   * @param connection
   * @param body Request body containing login credentials of the regular user.
   * @setHeader token.access Authorization
   *
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async loginRegularUser(
    @RegularuserAuth()
    regularUser: RegularuserPayload,
    @TypedBody()
    body: IEventRegistrationRegularUser.ILogin,
  ): Promise<IEventRegistrationRegularUser.IAuthorized> {
    try {
      return await postauthRegularUserLogin({
        regularUser,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
