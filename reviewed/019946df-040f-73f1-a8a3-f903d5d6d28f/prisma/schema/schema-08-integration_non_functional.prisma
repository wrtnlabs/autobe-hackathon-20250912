/// Records of payment processing transactions related to course purchases,
/// subscriptions, and certifications within the Enterprise LMS. This model
/// captures details including transaction amounts, currencies, methods,
/// statuses, timestamps, and relevant references to external payment
/// gateways and users. It supports auditing and financial reconciliation
/// workflows, ensuring traceability and regulatory compliance.
///
/// @namespace IntegrationNonFunctional
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model enterprise_lms_payment_transactions {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Tenant organization owning this transaction. {@link
  /// enterprise_lms_tenants.id}.
  tenant_id String
  
  /// User who performed or authorized this transaction. {@link
  /// enterprise_lms_corporatelearner.id}.
  user_id String
  
  /// Unique code identifying this payment transaction for tracking and
  /// reconciliation.
  transaction_code String
  
  /// Transaction amount in the specified currency.
  amount Float
  
  /// ISO 4217 currency code for the transaction, e.g., USD, EUR.
  currency String
  
  /// Method used for payment, such as credit card, PayPal, bank transfer.
  payment_method String
  
  /// Current status of the transaction, e.g., pending, completed, failed.
  status String
  
  /// Reference code from the payment gateway or processor.
  gateway_reference String?
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record last update timestamp.
  updated_at DateTime
  
  /// Soft delete timestamp indicating logical deletion.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  tenant enterprise_lms_tenants @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  user enterprise_lms_corporatelearner @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@index([user_id])
  
  @@unique([transaction_code])
  @@index([tenant_id, status, created_at], map: "enterprise_lms_payment_transactions_tenant_id_status_c_3865ac88")
}

/// Logs of notifications sent by the LMS system including email, SMS, and
/// in-app alerts. This table records notification types, recipient
/// identifiers, message contents, delivery statuses, timestamps, and related
/// tenant context to support auditing and tracking communication efficacy.
///
/// @namespace IntegrationNonFunctional
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model enterprise_lms_notification_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Tenant organization associated with this notification. {@link
  /// enterprise_lms_tenants.id}.
  tenant_id String
  
  /// Type of notification, e.g., email, sms, push.
  notification_type String
  
  /// Recipient identifier such as email address, phone number, or device token.
  recipient_identifier String
  
  /// Content of the notification message.
  message_body String
  
  /// Current delivery status such as sent, failed, queued.
  delivery_status String
  
  /// Timestamp when notification was sent.
  sent_at DateTime?
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record last update timestamp.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  tenant enterprise_lms_tenants @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  
  @@index([tenant_id, notification_type, delivery_status, sent_at], map: "enterprise_lms_notification_logs_tenant_id_notificatio_343de3c8")
}

/// Configuration settings for external integrations used by the Enterprise
/// LMS, including API keys, endpoints, credentials, and toggles related to
/// third-party platforms such as payment gateways, notification services,
/// analytics providers, and security services. Supports multi-tenant
/// customization and secure storage of sensitive integration data.
///
/// @namespace IntegrationNonFunctional
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model enterprise_lms_integration_settings {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Tenant organization owning this configuration. {@link
  /// enterprise_lms_tenants.id}.
  tenant_id String
  
  /// Name of the external integration platform or service, e.g., Stripe,
  /// SendGrid, Mixpanel.
  integration_name String
  
  /// Key or identifier for this configuration entry.
  config_key String
  
  /// Configuration value, which may contain encrypted secrets or URLs.
  config_value String?
  
  /// Flag indicating whether this integration config is active.
  enabled Boolean
  
  /// Timestamp when this configuration was created.
  created_at DateTime
  
  /// Timestamp when this configuration was last updated.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  tenant enterprise_lms_tenants @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  
  @@unique([tenant_id, integration_name, config_key], map: "enterprise_lms_integration_settings_tenant_id_integrat_5f356f4a")
  @@index([tenant_id, enabled])
}

/// Performance metrics records collected periodically capturing system CPU
/// usage, memory, request rates, error rates, and latency statistics.
/// Metrics cover per-tenant and global system levels to enable monitoring,
/// alerting, and capacity planning.
///
/// @namespace IntegrationNonFunctional
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model enterprise_lms_performance_metrics {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Tenant organization this metric belongs to (nullable for global metrics).
  /// {@link enterprise_lms_tenants.id}.
  tenant_id String?
  
  /// Name of the performance metric, e.g., cpu_usage_percent, request_rate.
  metric_name String
  
  /// Value of the metric at the recorded time.
  metric_value Float
  
  /// Timestamp when the metric was recorded.
  recorded_at DateTime
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record last update timestamp.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  tenant enterprise_lms_tenants? @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  
  @@index([tenant_id, metric_name, recorded_at], map: "enterprise_lms_performance_metrics_tenant_id_metric_na_89efaf05")
}

/// Audit log entries capturing security-related events such as login
/// attempts, permission changes, configuration modifications, and access
/// violations. Supports compliance regulations and forensic investigations
/// across multiple tenants.
///
/// @namespace IntegrationNonFunctional
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model enterprise_lms_security_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Tenant organization related to this event. {@link
  /// enterprise_lms_tenants.id}.
  tenant_id String
  
  /// User who triggered or was affected by this security event. {@link
  /// enterprise_lms_corporatelearner.id}.
  user_id String?
  
  /// Type of security event, e.g., login_success, permission_change,
  /// access_denied.
  event_type String
  
  /// Detailed description or JSON payload of the event.
  event_details String?
  
  /// Timestamp when the event occurred.
  occurred_at DateTime
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record last update timestamp.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  tenant enterprise_lms_tenants @relation(fields: [tenant_id], references: [id], onDelete: Cascade)
  user enterprise_lms_corporatelearner? @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@index([user_id])
  
  @@index([tenant_id, event_type, occurred_at], map: "enterprise_lms_security_audit_logs_tenant_id_event_typ_978487e4")
}

/// Records of system backup snapshots including timestamps, backup types,
/// storage locations, sizes, and status. Supports disaster recovery,
/// compliance auditing, and operational transparency across the multi-tenant
/// LMS platform.
///
/// @namespace IntegrationNonFunctional
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model enterprise_lms_backup_records {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Timestamp when the backup was taken.
  backup_timestamp DateTime
  
  /// Type of backup such as full, incremental, differential.
  backup_type String
  
  /// Storage path or URL where the backup is stored.
  storage_location String
  
  /// Size of the backup in bytes.
  backup_size_bytes Int
  
  /// Current status of the backup, e.g., completed, failed, in_progress.
  status String
  
  /// Record creation timestamp.
  created_at DateTime
  
  /// Record last update timestamp.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  @@unique([backup_timestamp, backup_type, storage_location], map: "enterprise_lms_backup_records_backup_timestamp_backup__21e70eb3")
  @@index([backup_timestamp, status])
}