import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteenterpriseLmsDepartmentManagerForumsForumIdForumThreadsForumThreadIdForumPostsForumPostId } from "../../../../../../providers/deleteenterpriseLmsDepartmentManagerForumsForumIdForumThreadsForumThreadIdForumPostsForumPostId";
import { DepartmentmanagerAuth } from "../../../../../../decorators/DepartmentmanagerAuth";
import { DepartmentmanagerPayload } from "../../../../../../decorators/payload/DepartmentmanagerPayload";

@Controller(
  "/enterpriseLms/departmentManager/forums/:forumId/forumThreads/:forumThreadId/forumPosts/:forumPostId",
)
export class EnterpriselmsDepartmentmanagerForumsForumthreadsForumpostsController {
  /**
   * Delete a specific forum post in a forum thread for content moderation.
   *
   * This API endpoint allows authorized users to permanently delete a forum
   * post identified by the forumId, forumThreadId, and forumPostId path
   * parameters.
   *
   * The forum post resource corresponds to the enterprise_lms_forum_posts
   * table, which holds message content, author information, and timestamps.
   *
   * Deletion is permanent; once removed, the post cannot be recovered. This
   * operation is restricted to roles responsible for content moderation such as
   * organization administrators and department managers.
   *
   * Users must provide valid UUIDs for the forum, thread, and post identifiers.
   *
   * Unauthorized attempts or invalid identifiers will result in error
   * responses.
   *
   * This operation is crucial for maintaining the quality and relevance of
   * discussions within enterprise tenant forums.
   *
   * @param connection
   * @param forumId Unique identifier of the target forum
   * @param forumThreadId Unique identifier of the target forum thread
   * @param forumPostId Unique identifier of the forum post to delete
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @DepartmentmanagerAuth()
    departmentManager: DepartmentmanagerPayload,
    @TypedParam("forumId")
    forumId: string & tags.Format<"uuid">,
    @TypedParam("forumThreadId")
    forumThreadId: string & tags.Format<"uuid">,
    @TypedParam("forumPostId")
    forumPostId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteenterpriseLmsDepartmentManagerForumsForumIdForumThreadsForumThreadIdForumPostsForumPostId(
        {
          departmentManager,
          forumId,
          forumThreadId,
          forumPostId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
