import { tags } from "typia";

/**
 * Role-based permission settings defining access rights for system roles.
 * Enables granular control over operations and API authorization.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsRolePermissions = {
  /** Unique identifier of the role permission record. */
  id: string & tags.Format<"uuid">;

  /** Role ID this permission belongs to. */
  role_id: string & tags.Format<"uuid">;

  /** Unique permission key string identifying the permission. */
  permission_key: string;

  /** Description of the permission. */
  description?: string | null | undefined;

  /** Indicates if the permission is granted. */
  is_allowed: boolean;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEnterpriseLmsRolePermissions {
  /**
   * Paged request data for searching role permissions. Supports pagination,
   * sorting, and filtering.
   */
  export type IRequest = {
    /** Pagination: page number. Optional, non-negative integer. */
    page?: number | null | undefined;

    /** Pagination: records per page. Optional, non-negative integer. */
    limit?: number | null | undefined;

    /** Optional search string to filter permissions. */
    search?: string | null | undefined;

    /** Optional filter by permission key. */
    permission_key?: string | null | undefined;

    /** Optional filter by role ID. */
    role_id?: string | null | undefined;

    /** Optional filter by whether permission is allowed. */
    is_allowed?: boolean | null | undefined;

    /** Optional sorting by field name. */
    orderBy?: string | null | undefined;

    /** Optional sorting direction: asc or desc. */
    orderDirection?: string | null | undefined;
  };

  /**
   * Summary view of role permission entities.
   *
   * Includes the permission key, description, and whether the permission is
   * granted.
   *
   * This schema is used for listing and filtering role permissions
   * efficiently.
   */
  export type ISummary = {
    /** Unique identifier key for the permission. */
    permission_key: string;

    /** Optional human-readable description of the permission. */
    description?: string | null | undefined;

    /** Indicates if the permission is granted or denied. */
    is_allowed: boolean;
  };
}
