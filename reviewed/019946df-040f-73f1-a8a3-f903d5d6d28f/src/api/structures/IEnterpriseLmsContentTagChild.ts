import { tags } from "typia";

/**
 * Child content tag relationship entity representing a link between a parent
 * tag and a child tag in the hierarchical content classification system.
 *
 * This entity defines the parent-child tag association enabling complex tag
 * taxonomies within a tenant-scoped environment.
 *
 * Properties include unique IDs for the relationship and references to parent
 * and child tags alongside the relation creation timestamp.
 *
 * This schema supports efficient querying and management of content tag
 * hierarchies, enforcing tenant data isolation and providing foundational
 * structure for content classification.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsContentTagChild = {
  /**
   * Primary key representing the unique identifier of the child tag
   * relationship
   */
  id: string & tags.Format<"uuid">;

  /** Reference to the parent content tag entity */
  parent_tag_id: string & tags.Format<"uuid">;

  /** Reference to the child content tag entity */
  child_tag_id: string & tags.Format<"uuid">;

  /** Timestamp when the parent-child relation was established */
  created_at: string & tags.Format<"date-time">;
};
export namespace IEnterpriseLmsContentTagChild {
  /**
   * Search criteria and pagination parameters for querying child content tags
   * under a given parent tag.
   *
   * Facilitates filtering, sorting, and paginating within hierarchical
   * content tag structures.
   */
  export type IRequest = {
    /**
     * Filter parameters for paginated search of child tags under a parent
     * tag.
     *
     * Supports pagination, sorting, and filtering by child tag attributes.
     */
    search?: string | null | undefined;

    /**
     * Page number for pagination.
     *
     * Optional. If not provided, defaults applied.
     */
    page?: number | null | undefined;

    /**
     * Number of records per page.
     *
     * Optional. Defaults may apply.
     */
    limit?: number | null | undefined;

    /**
     * Sort order specifier.
     *
     * Optional string indicating the sort criteria (e.g., 'name asc').
     */
    sort?: string | null | undefined;
  };

  /**
   * Summary for child content tag relationship containing the identifiers of
   * the parent and child tags within the content taxonomy.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** Reference to the parent tag entity. */
    parent_tag_id: string & tags.Format<"uuid">;

    /** Reference to the child tag entity. */
    child_tag_id: string & tags.Format<"uuid">;
  };
}
