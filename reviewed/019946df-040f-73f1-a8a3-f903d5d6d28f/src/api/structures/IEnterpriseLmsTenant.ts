import { tags } from "typia";

/**
 * Tenant organizations representing distinct enterprise customers with isolated
 * data and configurations. Serves as the core multi-tenant entity governing
 * data isolation and customization.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsTenant = {
  /**
   * Primary Key.
   *
   * Unique identifier of the tenant organization.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique tenant code used as business identifier for the organization.
   *
   * Must be unique across all tenants.
   */
  code: string;

  /** Full name of the tenant organization. */
  name: string;

  /**
   * Timestamp when the tenant was registered.
   *
   * ISO 8601 formatted date-time string.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the tenant last updated information.
   *
   * ISO 8601 formatted date-time string.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp, null means active.
   *
   * Nullable ISO 8601 date-time string.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsTenant {
  /**
   * Request parameters for searching and paginating tenant records in the
   * Enterprise LMS system.
   *
   * Supports filtering by code, name, timestamps, deletion status, and
   * sorting options.
   */
  export type IRequest = {
    /**
     * Page number for pagination.
     *
     * Optional. If omitted or null, first page is assumed.
     */
    page?: number | null | undefined;

    /**
     * Limit of items per page.
     *
     * Default is 100 when omitted.
     */
    limit?: number | null | undefined;

    /**
     * Search string for tenant code or name.
     *
     * Optional. Allows partial matching.
     */
    search?: string | null | undefined;

    /**
     * Optional filter by created_at timestamp greater than or equal.
     *
     * ISO 8601 date-time format.
     */
    created_at_gte?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional filter by created_at timestamp less than or equal.
     *
     * ISO 8601 date-time format.
     */
    created_at_lte?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional filter by updated_at timestamp greater than or equal.
     *
     * ISO 8601 date-time format.
     */
    updated_at_gte?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional filter by updated_at timestamp less than or equal.
     *
     * ISO 8601 date-time format.
     */
    updated_at_lte?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional filtering for deleted tenants.
     *
     * True returns deleted tenants only. False returns active tenants only.
     * Null returns both.
     */
    deleted?: boolean | null | undefined;

    /**
     * Sort field name, such as `code`, `name`, or `created_at`.
     *
     * Optional.
     */
    sort_field?: string | null | undefined;

    /**
     * Sort order direction.
     *
     * Allowed values: "asc" or "desc".
     *
     * Optional.
     */
    sort_order?: "asc" | "desc" | null | undefined;
  };

  /**
   * Payload to create a new tenant organization. Requires unique code and
   * name properties.
   */
  export type ICreate = {
    /**
     * Unique tenant code used as business identifier for the organization.
     *
     * Must be unique across all tenants.
     */
    code: string;

    /** Full name of the tenant organization. */
    name: string;
  };

  /**
   * Payload to update an existing tenant organization. Supports partial
   * updates with optional soft deletion.
   */
  export type IUpdate = {
    /**
     * Unique tenant code used as business identifier for the organization.
     *
     * Must be unique across all tenants.
     *
     * Optional for update to allow partial updates.
     */
    code?: string | null | undefined;

    /**
     * Full name of the tenant organization.
     *
     * Optional for update to allow partial updates.
     */
    name?: string | null | undefined;

    /**
     * Soft deletion timestamp, null means active.
     *
     * Optional to clear or set soft deletion.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of a tenant organization containing the unique
   * identifier, tenant code, and full name.
   *
   * Used mainly for listing tenants with minimal essential data.
   */
  export type ISummary = {
    /** Unique identifier of the tenant */
    id: string & tags.Format<"uuid">;

    /** Unique tenant code used as business identifier */
    code: string;

    /** Full name of the tenant organization */
    name: string;
  };
}
