import { tags } from "typia";

/**
 * Audit logs capturing system-wide events and user activities for compliance
 * and traceability. Supports multi-tenant event tracking with detailed
 * metadata.
 *
 * This schema defines audit log record properties such as ID, tenant context,
 * action performed, optional description, user attribution, and creation
 * timestamp.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsAuditLog = {
  /** Primary Key UUID */
  id: string & tags.Format<"uuid">;

  /** Tenant organization ID, nullable */
  enterprise_lms_tenant_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Action performed e.g. 'login' */
  action: string;

  /** Event metadata */
  description?: string | null | undefined;

  /** User who performed action, nullable */
  user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** ISO 8601 datetime */
  created_at: string & tags.Format<"date-time">;
};
export namespace IEnterpriseLmsAuditLog {
  /**
   * Request body schema for searching audit logs with filtering and
   * pagination.
   *
   * Includes pagination parameters, search terms, filters, and sorting
   * controls.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * Optional query parameter for page index.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * Optional query parameter for page size, default 100.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Search term for filtering logs.
     *
     * Optional string for partial search on action or description.
     */
    search?: string | null | undefined;

    /**
     * Filter by tenant ID.
     *
     * Nullable tenant UUID to restrict logs.
     */
    tenantId?: string | null | undefined;

    /**
     * Filter by user ID.
     *
     * Nullable user UUID to restrict logs.
     */
    userId?: string | null | undefined;

    /**
     * Sort by field.
     *
     * Optional property name for sorting.
     */
    orderBy?: string | null | undefined;

    /**
     * Sort direction.
     *
     * Enum with 'asc' or 'desc'.
     */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary view of audit logs used for concise event representation.
   *
   * Includes the action performed, optional detailed description, and
   * creation timestamp.
   *
   * This schema helps to display logs efficiently in paginated listings.
   */
  export type ISummary = {
    /** Action performed in the audit log. */
    action: string;

    /** Optional detailed event metadata. */
    description?: string | null | undefined;

    /** Timestamp of when the event occurred. */
    created_at: string & tags.Format<"date-time">;
  };
}
