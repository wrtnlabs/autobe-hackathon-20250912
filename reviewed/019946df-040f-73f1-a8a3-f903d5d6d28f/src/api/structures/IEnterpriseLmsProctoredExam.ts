import { tags } from "typia";

/**
 * Proctored exam session linked to an assessment with scheduling, proctor data,
 * and lifecycle management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsProctoredExam = {
  /**
   * Primary Key.
   *
   * Unique identifier of the proctored exam.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Linked assessment for this proctored exam.
   *
   * Reference to assessment by ID.
   */
  assessment_id: string & tags.Format<"uuid">;

  /**
   * Unique identifier for the proctored exam session from the third-party
   * provider.
   */
  exam_session_id: string;

  /** Identifier for the proctor overseeing the exam, if applicable. */
  proctor_id?: string | null | undefined;

  /** Scheduled timestamp for the proctored exam. */
  scheduled_at: string & tags.Format<"date-time">;

  /** Current status of the proctored exam. */
  status: "scheduled" | "in_progress" | "completed" | "cancelled";

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp if applicable. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsProctoredExam {
  /**
   * Request parameters to list or search proctored exams with filtering,
   * pagination, and sorting.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of items per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Search terms to filter the proctored exams. */
    search?: string | null | undefined;

    /** Filter by status. */
    status?:
      | "scheduled"
      | "in_progress"
      | "completed"
      | "cancelled"
      | null
      | undefined;

    /** Filter by assessment ID. */
    assessment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Sort order, e.g., created_at ascending or descending. */
    orderBy?: string | null | undefined;
  };

  /** Payload required to create a new proctored exam session. */
  export type ICreate = {
    /** Linked assessment for this proctored exam. */
    assessment_id: string & tags.Format<"uuid">;

    /**
     * Unique identifier for the proctored exam session from the third-party
     * provider.
     */
    exam_session_id: string;

    /** Identifier for the proctor overseeing the exam, if applicable. */
    proctor_id?: string | null | undefined;

    /** Scheduled timestamp for the proctored exam. */
    scheduled_at: string & tags.Format<"date-time">;

    /** Current status of the proctored exam. */
    status: "scheduled" | "in_progress" | "completed" | "cancelled";
  };

  /** Properties for updating an existing proctored exam session. */
  export type IUpdate = {
    /** Linked assessment for this proctored exam. */
    assessment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Unique identifier for the proctored exam session. */
    exam_session_id?: string | null | undefined;

    /** Identifier for the proctor overseeing the exam, if applicable. */
    proctor_id?: string | null | undefined;

    /** Scheduled timestamp for the proctored exam. */
    scheduled_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Current status of the proctored exam. */
    status?:
      | "scheduled"
      | "in_progress"
      | "completed"
      | "cancelled"
      | null
      | undefined;

    /** Record last update timestamp. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Soft deletion timestamp if applicable. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
