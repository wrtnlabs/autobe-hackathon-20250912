import { tags } from "typia";

/**
 * Blended learning session entity representing a combined online and offline
 * instructional session within a tenant organization. Includes metadata fields
 * for session type, title, status, schedule timestamps, and audit information.
 * Soft deletion is supported to mark inactive sessions without removing them
 * physically.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsBlendedLearningSession = {
  /** Primary Key - unique identifier of the blended learning session. */
  id: string & tags.Format<"uuid">;

  /** Tenant organization owning this session. */
  tenant_id: string & tags.Format<"uuid">;

  /** Type of session (e.g., online, offline, hybrid). */
  session_type: string;

  /** Title or name of the blended learning session. */
  title: string;

  /** Detailed description of the session; may be null if not provided. */
  description?: string | null | undefined;

  /** Current status of the session (e.g., scheduled, completed, cancelled). */
  status: string;

  /** Scheduled start date and time of the session. */
  scheduled_start_at: string & tags.Format<"date-time">;

  /** Scheduled end date and time, if known (nullable). */
  scheduled_end_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Actual start date and time of the session (nullable). */
  actual_start_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Actual end date and time of the session (nullable). */
  actual_end_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp when the record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null means active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsBlendedLearningSession {
  /**
   * Request parameters for filtering and paginating blended learning
   * sessions.
   */
  export type IRequest = {
    /** Type of session (e.g., online, offline, hybrid). */
    session_type?: string | undefined;

    /** Title or name of the blended learning session. */
    title?: string | undefined;

    /**
     * Current status of the session (e.g., scheduled, completed,
     * cancelled).
     */
    status?: string | undefined;

    /** Start timestamp date range filter - from. */
    scheduled_start_at_from?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /** Start timestamp date range filter - to. */
    scheduled_start_at_to?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /** End timestamp date range filter - from. */
    scheduled_end_at_from?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /** End timestamp date range filter - to. */
    scheduled_end_at_to?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort expression for ordering the results. */
    order_by?: string | null | undefined;
  };

  /**
   * Request body for creating a new blended learning session. Includes
   * necessary fields such as tenant ID, session type, title, status, and
   * scheduling timestamps. Optional descriptive fields can be provided. Soft
   * deletion timestamp is not allowed in creation.
   */
  export type ICreate = {
    /** Tenant organization owning this session. */
    tenant_id: string & tags.Format<"uuid">;

    /** Type of session (e.g., online, offline, hybrid). */
    session_type: string;

    /** Title or name of the blended learning session. */
    title: string;

    /** Optional detailed description of the session. */
    description?: string | null | undefined;

    /** Initial status of the session (e.g., scheduled). */
    status: string;

    /** Scheduled start date and time of the session. */
    scheduled_start_at: string & tags.Format<"date-time">;

    /** Scheduled end date and time of the session (nullable). */
    scheduled_end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Actual start date and time of the session (nullable). */
    actual_start_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Actual end date and time of the session (nullable). */
    actual_end_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request body for updating a blended learning session. Contains optional
   * modifiable fields such as session type, title, description, status, and
   * scheduling timestamps.
   */
  export type IUpdate = {
    /** Type of session (e.g., online, offline, hybrid). */
    session_type?: string | undefined;

    /** Title or name of the blended learning session. */
    title?: string | undefined;

    /** Optional detailed description of the session. */
    description?: string | null | undefined;

    /**
     * Current status of the session (e.g., scheduled, completed,
     * cancelled).
     */
    status?: string | undefined;

    /** Scheduled start date and time of the session. */
    scheduled_start_at?: (string & tags.Format<"date-time">) | undefined;

    /** Scheduled end date and time of the session (nullable). */
    scheduled_end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Actual start date and time of the session (nullable). */
    actual_start_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Actual end date and time of the session (nullable). */
    actual_end_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of blended learning session entity.
   *
   * Includes basic identifying and status attributes for listing.
   */
  export type ISummary = {
    /** Primary key for the blended learning session entity. */
    id: string & tags.Format<"uuid">;

    /** Descriptive title for the session. */
    title: string;

    /** Lifecycle state of the session. */
    status: string;

    /** Date and time when the session is scheduled to start. */
    scheduled_start_at: string & tags.Format<"date-time">;
  };
}
