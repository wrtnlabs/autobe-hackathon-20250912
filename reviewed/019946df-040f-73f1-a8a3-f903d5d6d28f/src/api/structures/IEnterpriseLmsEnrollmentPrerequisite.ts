import { tags } from "typia";

/**
 * Represents an enrollment prerequisite which specifies the courses that must
 * be completed before enrollment can proceed.
 *
 * Every record uniquely identifies the prerequisite and links it to a specific
 * enrollment and course.
 *
 * This ensures consistency and validation of learner progress before allowing
 * enrollment continuation.
 *
 * Includes timestamps to support audit and business rule enforcement.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsEnrollmentPrerequisite = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Belonged enrollment's enterprise_lms_enrollments.id. */
  enrollment_id: string & tags.Format<"uuid">;

  /**
   * Prerequisite course's enterprise_lms_contents.id to be completed before
   * enrollment.
   */
  prerequisite_course_id: string & tags.Format<"uuid">;

  /** Creation time for this prerequisite link. */
  created_at: string & tags.Format<"date-time">;

  /** Last update time for this record. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IEnterpriseLmsEnrollmentPrerequisite {
  /**
   * Request body schema for creating a new enrollment prerequisite.
   *
   * Includes references to the enrollment and the prerequisite course
   * involved in the requirement.
   */
  export type ICreate = {
    /**
     * Belonged enrollment's enterprise_lms_enrollments.id.
     *
     * Specifies the enrollment record this prerequisite applies to.
     */
    enrollment_id: string & tags.Format<"uuid">;

    /**
     * Prerequisite course's enterprise_lms_contents.id to be completed
     * before
     *
     * Enrollment progression requires satisfying this prerequisite.
     */
    prerequisite_course_id: string & tags.Format<"uuid">;
  };

  /**
   * Request body for searching enrollment prerequisite records.
   *
   * Supports pagination, sorting, and filtering by enrollment or prerequisite
   * course IDs.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * @default 1
     */
    page?: number | null | undefined;

    /**
     * Number of records to return per page.
     *
     * @default 20
     */
    limit?: number | null | undefined;

    /** Optional sort order, e.g. 'created_at asc' or 'created_at desc'. */
    sort?: string | null | undefined;

    /** Optional filter by enrollment_id. */
    enrollment_id?: string | null | undefined;

    /** Optional filter by prerequisite_course_id. */
    prerequisite_course_id?: string | null | undefined;
  };

  /**
   * Update data for an enrollment prerequisite. The id property is mandatory
   * to identify the record.
   *
   * Other properties are optional and can be modified individually.
   *
   * All updates must maintain data integrity and tenancy isolation.
   */
  export type IUpdate = {
    /** Primary Key of the record. */
    id: string & tags.Format<"uuid">;

    /** Belonged enrollment's enterprise_lms_enrollments.id. */
    enrollment_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Prerequisite course's enterprise_lms_contents.id to be completed
     * before enrollment.
     */
    prerequisite_course_id?: (string & tags.Format<"uuid">) | undefined;

    /** Creation time for this prerequisite link. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Last update time for this record. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Summary view of an enrollment prerequisite record.
   *
   * Includes keys to enrollment and prerequisite course.
   *
   * Supports prerequisite tracking in learner lifecycle.
   */
  export type ISummary = {
    /** Unique identifier of the enrollment prerequisite */
    id: string & tags.Format<"uuid">;

    /** Identifier of the linked enrollment */
    enrollment_id: string & tags.Format<"uuid">;

    /** Reference to prerequisite course unique identifier */
    prerequisite_course_id: string & tags.Format<"uuid">;
  };
}
