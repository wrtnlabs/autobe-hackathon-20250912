import { tags } from "typia";

/**
 * User sessions for authentication, authorization, and audit.
 *
 * This schema captures session identifiers, tenant and user references,
 * security tokens, client metadata, and session time boundaries.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsSession = {
  /** Primary Key UUID */
  id: string & tags.Format<"uuid">;

  /** Tenant ID UUID */
  enterprise_lms_tenant_id: string & tags.Format<"uuid">;

  /** User ID UUID */
  user_id: string & tags.Format<"uuid">;

  /** Unique session token */
  session_token: string;

  /** IP address string or null */
  ip_address?: string | null | undefined;

  /** Device info string or null */
  device_info?: string | null | undefined;

  /** ISO 8601 date-time string */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 date-time string */
  updated_at: string & tags.Format<"date-time">;

  /** Expiration ISO 8601 date-time string */
  expires_at: string & tags.Format<"date-time">;
};
export namespace IEnterpriseLmsSession {
  /**
   * Request parameters for searching and paginating active user sessions.
   *
   * Includes tenant and user filters along with page and limit for standard
   * paginated queries.
   */
  export type IRequest = {
    /** Page number, uint32 */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Records per page, uint32 */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Filter by user ID, optional */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by tenant ID, optional */
    enterprise_lms_tenant_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /**
   * Create a new user session.
   *
   * This type includes required tenant and user references, secure session
   * token, client metadata, and session expiry timestamps.
   */
  export type ICreate = {
    /** Tenant ID UUID */
    enterprise_lms_tenant_id: string & tags.Format<"uuid">;

    /** User ID UUID */
    user_id: string & tags.Format<"uuid">;

    /** Secure opaque session token */
    session_token: string;

    /** IP address, optional */
    ip_address?: string | null | undefined;

    /** Device/browser info, optional */
    device_info?: string | null | undefined;

    /** ISO 8601 datetime */
    created_at: string & tags.Format<"date-time">;

    /** ISO 8601 datetime */
    updated_at: string & tags.Format<"date-time">;

    /** Expiry date ISO 8601 datetime */
    expires_at: string & tags.Format<"date-time">;
  };

  /**
   * Summary view of active user sessions.
   *
   * Highlights key session information such as the session token, optional
   * client IP, optional device information, creation, and expiry times.
   *
   * Supports lightweight session listings for administrative monitoring and
   * management.
   */
  export type ISummary = {
    /** Opaque session token string in use. */
    session_token: string;

    /** Client IP address, if known. */
    ip_address?: string | null | undefined;

    /** Information about client device or browser. */
    device_info?: string | null | undefined;

    /** Session creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Session expiration timestamp. */
    expires_at: string & tags.Format<"date-time">;
  };
}
