import { tags } from "typia";

/**
 * The Forum entity type returned by API responses. Represents full forum
 * records from database including audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsForum = {
  /** Unique identifier of the forum entity (UUID format). */
  id: string & tags.Format<"uuid">;

  /**
   * Tenant organization uniquely owning this forum (UUID). This enforces
   * multi-tenant data isolation.
   */
  tenant_id: string & tags.Format<"uuid">;

  /**
   * Owner user ID, typically organization admin managing this forum (UUID).
   * Used for access control and auditing.
   */
  owner_id: string & tags.Format<"uuid">;

  /** Name of the forum. Unique within tenant to avoid naming conflicts. */
  name: string;

  /**
   * Optional forum description providing context and purpose. Helps users
   * understand forum topics.
   */
  description?: string | null | undefined;

  /**
   * Record creation timestamp in ISO 8601 format. Used for audit and
   * chronological ordering.
   */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp in ISO 8601 format. Reflects most recent changes. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp; null means active. Used to logically delete
   * forums without removing data.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsForum {
  /**
   * Request type for paginated, filtered, possibly sorted list search
   * requests for forums. Supports tenant scoping, search terms, and
   * pagination parameters. Used in APIs that return a filtered list of
   * forums.
   */
  export type IRequest = {
    /** Optional search string to match forum names or descriptions. */
    search?: string | undefined;

    /** Current page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum records returned per page. Defaults to 100. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Optional sorting field name. Example: 'name', 'created_at',
     * 'updated_at'
     */
    sortField?: string | null | undefined;

    /** Sort direction: 'asc' or 'desc' */
    sortOrder?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary of a forum entity providing minimal information for list views
   * within the Enterprise LMS.
   */
  export type ISummary = {
    /** Unique identifier of the forum summary entity. */
    id: string & tags.Format<"uuid">;

    /** Name of the forum for display and identification. */
    name: string;

    /** Optional forum description for additional details. */
    description?: string | null | undefined;
  };
}
