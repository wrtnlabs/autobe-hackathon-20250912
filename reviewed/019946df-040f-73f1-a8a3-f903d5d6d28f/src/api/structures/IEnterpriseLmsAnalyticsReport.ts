import { tags } from "typia";

/**
 * Analytics report data entity representing comprehensive reports prepared for
 * dashboards and compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsAnalyticsReport = {
  /** Unique ID of the report. */
  id: string & tags.Format<"uuid">;

  /** Tenant organization ID that owns this report. */
  tenant_id: string & tags.Format<"uuid">;

  /** Descriptive name of the analytics report. */
  report_name: string;

  /** Type of the report, e.g., completion, engagement, compliance. */
  report_type: string;

  /** JSON-encoded string containing filter and aggregation parameters. */
  parameters_json: string;

  /** Timestamp when the report was generated. */
  generated_at: string & tags.Format<"date-time">;

  /** JSON-encoded string containing the full report content and metadata. */
  content_json: string;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp, null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsAnalyticsReport {
  /** Request interface for searching and paginating analytics reports. */
  export type IRequest = {
    /** Optional search text for report name or type. */
    search?: string | null | undefined;

    /** Filter by report type. */
    report_type?: string | null | undefined;

    /** Filter by tenant ID. */
    tenant_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Pagination: page number, default 1. */
    page: number & tags.Type<"int32">;

    /** Pagination: page size limit, default 100. */
    limit: number & tags.Type<"int32">;

    /** Optional sorting order. */
    order?: string | null | undefined;
  };

  /** Creation request payload for new analytics report. */
  export type ICreate = {
    /** Tenant organization ID that owns this report. */
    tenant_id: string & tags.Format<"uuid">;

    /** Descriptive name of the analytics report. */
    report_name: string;

    /** Type of the report, e.g., completion, engagement, compliance. */
    report_type: string;

    /** JSON-encoded string containing filter and aggregation parameters. */
    parameters_json: string;

    /** Timestamp when the report was generated. */
    generated_at: string & tags.Format<"date-time">;

    /** JSON-encoded string containing the full report content and metadata. */
    content_json: string;
  };

  /** Update request payload for existing analytics report. */
  export type IUpdate = {
    /** Unique ID of the report. */
    id: string & tags.Format<"uuid">;

    /** Tenant organization ID that owns this report. */
    tenant_id?: (string & tags.Format<"uuid">) | undefined;

    /** Descriptive name of the analytics report. */
    report_name?: string | undefined;

    /** Type of the report, e.g., completion, engagement, compliance. */
    report_type?: string | undefined;

    /** JSON-encoded string containing filter and aggregation parameters. */
    parameters_json?: string | undefined;

    /** Timestamp when the report was generated. */
    generated_at?: (string & tags.Format<"date-time">) | undefined;

    /** JSON-encoded string containing the full report content and metadata. */
    content_json?: string | undefined;
  };

  /**
   * Summary of analytics report entity.
   *
   * Includes essential identifiers and classification for convenient listing
   * and filtering.
   */
  export type ISummary = {
    /** Primary key for analytics report entity. */
    id: string & tags.Format<"uuid">;

    /** Human-readable name for the report. */
    report_name: string;

    /**
     * Classification of report for filtering such as completion or
     * engagement.
     */
    report_type: string;
  };
}
