import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patchstoryfieldAiSystemAdminTokenRevocations } from "../../../../providers/patchstoryfieldAiSystemAdminTokenRevocations";
import { SystemadminAuth } from "../../../../decorators/SystemadminAuth";
import { SystemadminPayload } from "../../../../decorators/payload/SystemadminPayload";
import { getstoryfieldAiSystemAdminTokenRevocationsTokenRevocationId } from "../../../../providers/getstoryfieldAiSystemAdminTokenRevocationsTokenRevocationId";

import { IPageIStoryfieldAiTokenRevocation } from "../../../../api/structures/IPageIStoryfieldAiTokenRevocation";
import { IStoryfieldAiTokenRevocation } from "../../../../api/structures/IStoryfieldAiTokenRevocation";

@Controller("/storyfieldAi/systemAdmin/tokenRevocations")
export class StoryfieldaiSystemadminTokenrevocationsController {
  /**
   * Search, filter, and retrieve a paginated list of token revocation events
   * (systemAdmin only; storyfield_ai_token_revocations).
   *
   * Retrieve a filtered and paginated list of all authentication token
   * revocation events from the system. This allows system administrators to
   * search for revoked tokens issued to any user or admin, filter by revocation
   * reason or time, and view which administrator acted on each revocation. Each
   * record includes the token hash, revocation rationale, related user or
   * admin, and timestamps for traceability.
   *
   * This operation operates on the storyfield_ai_token_revocations table in the
   * database. Security considerations require that only users with the
   * systemAdmin role should have access, since revocation event details may
   * reveal sensitive incident response actions or compromise context.
   *
   * The search parameters may include token hash, admin or user identifiers,
   * creation dates, and reason for revocation. Pagination and sorting are
   * supported for efficient auditing of large volumes of records. Results only
   * include summary views (no full session or token detail is returned here).
   *
   * Appropriate validation prevents exposure of sensitive token values and
   * ensures revocation audit logs remain readonly to admins only. Related
   * operations include viewing a single revocation record in detail and
   * creating a new revocation event (by business flow, not direct user API).
   *
   * Expected error cases include insufficient authorization (non-admin
   * attempting to access logs) or unmatchable query parameters. All query
   * activity should be tracked for compliance review.
   *
   * @param connection
   * @param body Query, filtering, and pagination parameters for revocation
   *   records, such as token hash, admin/user, date range, and reason.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedBody()
    body: IStoryfieldAiTokenRevocation.IRequest,
  ): Promise<IPageIStoryfieldAiTokenRevocation.ISummary> {
    try {
      return await patchstoryfieldAiSystemAdminTokenRevocations({
        systemAdmin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * View detailed information about a specific token revocation event
   * (systemAdmin only; storyfield_ai_token_revocations).
   *
   * Retrieve detailed information about an individual token revocation event
   * from the storyfield_ai_token_revocations table. This is typically used by
   * system administrators when investigating security incidents, abuse reports,
   * or user access control issues. The returned record includes contextual
   * data, such as which session or user was involved, which administrator
   * performed the revocation, the explicit reason recorded for revocation,
   * timestamp, relevant IP address, and the (hashed) token reference.
   *
   * For audit integrity, only systemAdmin users can access this information,
   * and full token values are never exposedâ€”only their hashes and related
   * metadata. This endpoint is closely related to the list/search of
   * revocations, and may be used after finding a record of interest via the
   * broader search API.
   *
   * Access and usage of this endpoint are logged for compliance. Authorization
   * failure and not-found errors are handled with clear, specific error
   * responses. No editing or deletion of revocation logs is possible.
   *
   * @param connection
   * @param tokenRevocationId Unique identifier (UUID) of the token revocation
   *   event to retrieve.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":tokenRevocationId")
  public async at(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("tokenRevocationId")
    tokenRevocationId: string & tags.Format<"uuid">,
  ): Promise<IStoryfieldAiTokenRevocation> {
    try {
      return await getstoryfieldAiSystemAdminTokenRevocationsTokenRevocationId({
        systemAdmin,
        tokenRevocationId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
