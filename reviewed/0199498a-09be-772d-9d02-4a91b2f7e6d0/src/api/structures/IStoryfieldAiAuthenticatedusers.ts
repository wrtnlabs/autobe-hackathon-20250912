import { tags } from "typia";

/**
 * Detailed record for a single Storyfield AI authenticated user as stored in
 * the service's registry. Contains all relevant identity, role, temporal, and
 * compliance fields mapped from both the external Spring identity and internal
 * audit lifecycle. Used by system administrators for account review, trace, and
 * GDPR compliance reporting. Does not include sensitive credentials or password
 * fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiAuthenticatedusers = {
  /** System primary key of the authenticated user (UUID). */
  id: string & tags.Format<"uuid">;

  /**
   * The unique external user identifier assigned by the Spring backend. Used
   * to correlate to external identity/auth and for all downstream content
   * ownership and audit.
   */
  external_user_id: string;

  /**
   * Registered email address belonging to the authenticated user. Must be
   * unique across all user accounts and is the canonical channel for business
   * notifications and account-related operations.
   */
  email: string;

  /**
   * Role descriptor. For standard end-users, always set to
   * 'authenticatedUser'. Defines access rights and context for downstream
   * authorization.
   */
  actor_type: string;

  /** Datetime the user account was created (ISO 8601, UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Datetime when the user's record was last updated (ISO 8601, UTC). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp (ISO 8601) of soft deletion for the user account. If null,
   * account is active; if set, account is logically disabled according to
   * compliance/audit policy.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiAuthenticatedusers {
  /**
   * Search, filter, and pagination parameters when querying Storyfield AI
   * authenticated users. All fields are optional and used to build flexible
   * query logic for administrative dashboards and audit workflows.
   */
  export type IRequest = {
    /**
     * Email of the authenticated user to filter by. Must match a registered
     * email address in the system.
     */
    email?: string | undefined;

    /**
     * External unique user identifier from the Spring backend. Used for
     * filtering by mapped external identity.
     */
    external_user_id?: string | undefined;

    /**
     * Role marker for filtering (should be always 'authenticatedUser' for
     * this context).
     */
    actor_type?: string | undefined;

    /** Filter for users created at or after this date (ISO 8601). */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for users created at or before this date (ISO 8601). */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for users updated at or after this date. */
    updated_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for users updated at or before this date. */
    updated_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * If true, include users marked as soft deleted (deleted_at not null).
     * If false or omitted, only active users returned.
     */
    deleted?: boolean | undefined;

    /** Page number for pagination (starts from 1, default is 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page (default is 20, max 100). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Field by which to sort results (email, created_at, etc.). */
    sort?: string | undefined;

    /** Sort order direction (ascending or descending). */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Mutable fields for updating a Storyfield AI authenticated user profile.
   * Only allows modifiable fields per business and compliance policy.
   * External_user_id, id, created_at, and updated_at are immutable for
   * updates.
   */
  export type IUpdate = {
    /**
     * Change email address for the authenticated user. Must remain unique
     * for all users and match required business format. Only allowed for
     * admin workflows.
     */
    email?: string | undefined;

    /**
     * Update the actor_type. Should remain 'authenticatedUser' for identity
     * integrity; changing is only possible with elevated business
     * permissions.
     */
    actor_type?: string | undefined;

    /**
     * Soft delete or restore the user. When set to a date-time, disables
     * login and system functions for the account; when null, account is
     * restored. Only systemAdmin should be allowed to change this field.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary representation for audited/filtered lists of authenticated users.
   * Provides essential identity and onboarding data for dashboards or
   * operational compliance. This type reflects the minimal safe subset for
   * listing users: UUID, external identity linking, contact email, and audit
   * timestamps.
   */
  export type ISummary = {
    /**
     * Primary key; internal UUID identifying this authenticated user.
     * Generated at onboarding.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Externally-verified unique identifier from the Spring backend for
     * mapping/authorization. Immutable and unique per user. Visible only to
     * admins for compliance reasons.
     */
    external_user_id: string;

    /**
     * Contact email of the user, uniquely enforced by the system. Used for
     * business/operational notifications. May not be a personal mailbox
     * depending on policy.
     */
    email: string & tags.Format<"email">;

    /**
     * When this user account was registered in the StoryField AI platform
     * (ISO 8601 format).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Most recent modification timestamp of this user's business data, for
     * operational/audit review.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft-deletion timestamp if the user account has been deactivated.
     * Null if currently active. Used for audit, legal compliance, and
     * incident investigation.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
