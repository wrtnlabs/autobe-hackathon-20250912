import { tags } from "typia";

/**
 * Authentication and authorization audit/event log entry.
 *
 * Represents a single event in the authentication or authorization lifecycle,
 * including logins, token issuance, revocation, refresh, or denial actions.
 * Each record is uniquely identified, may be associated with a user, system
 * admin, and/or session, and includes event type, outcome, descriptive context,
 * and a precise creation timestamp. Used in compliance, forensics, and security
 * audit workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiAuthAuditLog = {
  /**
   * Unique identifier for the authentication/authorization audit log event.
   * This field corresponds to the primary key in the database schema. It is
   * used in business operations to refer to a single audit log entry and
   * supports audit, compliance, and traceability. This value is a UUID string
   * as per standard across all ID fields.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Optional reference to the session ID associated with this event. A UUID
   * corresponding to storyfield_ai_token_sessions.id, or null if the event is
   * not linked to a session (such as failed logins or system events). Enables
   * session-level tracing for compliance and troubleshooting.
   */
  token_session_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional reference to the user involved in the event. UUID referring to
   * storyfield_ai_authenticatedusers.id, or null for events not linked to a
   * user (such as admin/system events). Used for user-focused audit and
   * compliance reporting.
   */
  authenticated_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional reference to the system administrator involved in the event.
   * UUID for storyfield_ai_systemadmins.id, or null if not applicable.
   * Enables privileged access auditing and system-level compliance
   * reporting.
   */
  system_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * High-level category or action for the audit event (e.g., 'issued',
   * 'validated', 'refreshed', 'expired', 'revoked', 'denied'). Used for
   * filtering, reporting, and business process auditing.
   */
  event_type: string;

  /**
   * Outcome for the event (e.g., 'success', 'failure', 'partial'). Indicates
   * the result and feeds into compliance, monitoring, and analytics
   * workflows.
   */
  event_outcome: string;

  /**
   * Optional descriptive and human-readable message for the event. Used to
   * record error details, status explanations, or investigation context for
   * compliance and auditability.
   */
  event_message?: string | null | undefined;

  /**
   * Optional IP address from which the auth event was triggered. Used for
   * operational security audit, IP-based access patterns, and anomaly
   * detection. Nullable for privacy and context.
   */
  source_ip?: string | null | undefined;

  /**
   * Optional user-agent string or device fingerprint associated with the
   * event. Used in business analytics, security investigation, or device
   * compliance checks.
   */
  user_agent?: string | null | undefined;

  /**
   * Timestamp when the audit event was created. This is an ISO8601 date-time
   * string, providing a precise record of when the event occurred, for audit
   * trail and compliance reporting.
   */
  created_at: string & tags.Format<"date-time">;
};
export namespace IStoryfieldAiAuthAuditLog {
  /**
   * Search and filter criteria for retrieving authentication/authorization
   * audit logs. Enables targeted review and pagination of key security and
   * compliance events in the system audit log.
   */
  export type IRequest = {
    /**
     * Filter audit logs by the recorded event type (e.g., issued,
     * validated, refreshed, revoked, denied). Partial or exact matches
     * supported.
     */
    event_type?: string | undefined;

    /**
     * Filter audit log search by event outcome result (e.g., success,
     * failure, partial).
     */
    event_outcome?: string | undefined;

    /** Optionally filter logs by the UUID of the authenticated user. */
    authenticated_user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optionally filter logs by the UUID of the system admin acting or
     * affected.
     */
    system_admin_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optionally filter audit logs to events linked to a specific
     * authentication token session.
     */
    token_session_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter for events created at or after this time (UTC). Used for
     * time-bounded incident or compliance review.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for events created before or up to this time (UTC). */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination of audit log results. Starts at 1. */
    page?: number | undefined;

    /**
     * Number of records per page for pagination (max determined by
     * implementation/policy).
     */
    limit?: number | undefined;

    /**
     * Search for audit log records originating from a given user-agent
     * string (browser/device info). Partial matches supported.
     */
    user_agent?: string | undefined;

    /**
     * Search for audit log records coming from, or affecting, a particular
     * source IP address.
     */
    source_ip?: string | undefined;

    /**
     * Text search within the event_message field, for diagnostic or
     * incident review.
     */
    event_message?: string | undefined;
  };

  /**
   * Summary/row-type object for authentication/authorization audit logs for
   * security compliance and review. Maps to storyfield_ai_auth_audit_logs
   * primary fields.
   */
  export type ISummary = {
    /**
     * Unique identifier for the audit event (PK from
     * storyfield_ai_auth_audit_logs).
     */
    id: string & tags.Format<"uuid">;

    /** Token session related to authentication event, if applicable. */
    token_session_id: (string & tags.Format<"uuid">) | null;

    /** Authenticated user impacted by the event, if applicable. */
    authenticated_user_id: (string & tags.Format<"uuid">) | null;

    /** System admin involved in the event, for admin actions or system ops. */
    system_admin_id: (string & tags.Format<"uuid">) | null;

    /**
     * Event type for the audit log. E.g., 'issued', 'refreshed', 'revoked',
     * 'denied', etc.
     */
    event_type: string;

    /**
     * Result/outcome for the event. Typically 'success', 'failure', or a
     * customized granular state.
     */
    event_outcome: string;

    /**
     * Additional contextual, human-readable information about the event.
     * May include error explanation, debug string, or system hints.
     */
    event_message: string | null;

    /**
     * Originating IP of the event. Useful for security audit, identifies
     * where request came from.
     */
    source_ip: string | null;

    /**
     * Device, browser, or script agent string for the event/applicable
     * device context.
     */
    user_agent: string | null;

    /** Timestamp (ISO 8601) when the audit event was recorded. */
    created_at: string & tags.Format<"date-time">;
  };
}
