import { tags } from "typia";

/**
 * Represents an authentication session (JWT or access token lifecycle) for a
 * user. Used for login, refresh, and session record viewing. Based on the
 * healthcare_platform_auth_sessions table.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformAuthSession = {
  /** Session record unique identifier (UUID). */
  id: string & tags.Format<"uuid">;

  /** Reference to the unique user record (UUID). */
  user_id: string & tags.Format<"uuid">;

  /** Discriminator for user type (systemadmin, orgadmin, doctor, etc). */
  user_type: string;

  /** Opaque session token or JWT. */
  session_token: string;

  /** Refresh token for session extension; null for some SSO providers. */
  refresh_token?: string | null | undefined;

  /** Timestamp for session creation (ISO8601). */
  issued_at: string & tags.Format<"date-time">;

  /** Timestamp for session expiration (ISO8601). */
  expires_at: string & tags.Format<"date-time">;

  /** If present, time when session was revoked, otherwise null. */
  revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** User agent or device fingerprint at session initiation. */
  user_agent?: string | null | undefined;

  /** IP address logged for this session. */
  ip_address?: string | null | undefined;
};
export namespace IHealthcarePlatformAuthSession {
  /**
   * Request body for searching authentication session records (audit,
   * compliance, and session management). Supports advanced filtering and
   * paging options for active, expired, or revoked user sessions.
   */
  export type IRequest = {
    /** Search for authentication sessions belonging to this user (optional). */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Type of user/actor (e.g., 'systemadmin', 'organizationadmin', etc.) */
    user_type?: string | undefined;

    /** Session token for the authentication session (JWT or opaque string). */
    session_token?: string | undefined;

    /** (Optional) Refresh token for session extension/rotation. */
    refresh_token?: string | null | undefined;

    /** Start of time window filter for session creation. */
    issued_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** End of time window filter for session creation. */
    issued_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Start of session expiration window (filter). */
    expires_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** End of session expiration window (filter). */
    expires_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Start time for revoked session filter window. */
    revoked_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** End time for revoked session filter window. */
    revoked_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** (Optional) Filter by user agent string (browser/device info). */
    user_agent?: string | undefined;

    /** (Optional) Filter by IP address associated with the session. */
    ip_address?: string | undefined;

    /** Requested page number (for pagination, starts at 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of results per page for paginated search. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sorting expression for results (e.g., '-created_at', 'expires_at
     * ASC').
     */
    sort?: string | undefined;
  };

  /**
   * Summary type for authentication session listings/audits.
   *
   * Captures session-level authentication metadata. Used for listing/search
   * by auditors, compliance or security dashboards, and session management
   * interfaces. All fields are guaranteed to be present except for optional
   * values (revoked_at, deleted_at, user_agent, ip_address).
   */
  export type ISummary = {
    /**
     * Unique identifier for this authentication session (UUID). Corresponds
     * to 'id' in healthcare_platform_auth_sessions.
     */
    id: string & tags.Format<"uuid">;

    /**
     * User type for the session actor (systemadmin, orgadmin, etc).
     * 'user_type' field in DB.
     */
    user_type: string;

    /** User UUID this session belongs to, corresponds to 'user_id'. */
    user_id: string & tags.Format<"uuid">;

    /** Session token (opaque or JWT string). */
    session_token: string;

    /** Session issue timestamp, ISO8601. 'issued_at' field. */
    issued_at: string & tags.Format<"date-time">;

    /** Session planned expiration timestamp (ISO8601). 'expires_at' field. */
    expires_at: string & tags.Format<"date-time">;

    /** Timestamp session was revoked, if applicable. Nullable. */
    revoked_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Soft-delete timestamp (never exposed unless for compliance).
     * Nullable.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional user_agent string for device identification, when recorded. */
    user_agent?: string | null | undefined;

    /** Optional IP address where session was created. */
    ip_address?: string | null | undefined;
  };
}
