import { tags } from "typia";

/**
 * Dashboard preferences record, linking a user to an analytics dashboard and
 * tracking their theme, layout, and last-view state. Preferences_json stores
 * the serialized config as a string. Soft deletion and audit fields for
 * compliance are included.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformDashboardPreference = {
  /** Unique identifier for this dashboard preference record. */
  id: string & tags.Format<"uuid">;

  /** ID of the analytics dashboard to which these preferences belong. */
  dashboard_id: string & tags.Format<"uuid">;

  /** ID of the user who owns these preferences. */
  user_id: string & tags.Format<"uuid">;

  /**
   * Serialized preferences/configuration (theme, layout, widget state, etc,
   * as a JSON string).
   */
  preferences_json: string;

  /**
   * Datetime this dashboard was last viewed by the user. Null if never
   * viewed.
   */
  last_viewed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp for this preference record; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformDashboardPreference {
  /**
   * Request body for searching dashboard preference records. Supports
   * filtering by dashboard/user, date ranges, text search, paging, sorting.
   * Used to query healthcare_platform_dashboard_preferences in UI and API.
   * Only supplied fields are filtered.
   */
  export type IRequest = {
    /** UUID for filtering preferences by dashboard context. Optional. */
    dashboard_id?: (string & tags.Format<"uuid">) | undefined;

    /** UUID for filtering by owner user account. Optional. */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter: lower bound for last_viewed_at timestamp (ISO 8601). */
    last_viewed_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: upper bound for last_viewed_at timestamp (ISO 8601). */
    last_viewed_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: lower bound for creation timestamp (ISO 8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: upper bound for creation timestamp (ISO 8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: lower bound for updated_at timestamp (ISO 8601). */
    updated_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: upper bound for updated_at timestamp (ISO 8601). */
    updated_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Free-text search string to match against dashboard title,
     * description, or other preference data.
     */
    search?: string | undefined;

    /** Page number for results pagination (1-based index). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Maximum number of results per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Sort key and direction (e.g., 'updated_at desc'). Optional. */
    sort?: string | undefined;
  };

  /**
   * DTO for creating a new dashboard preference. Links dashboard and user,
   * with required JSON config.
   */
  export type ICreate = {
    /**
     * ID of the analytics dashboard for which these preferences are being
     * created.
     */
    dashboard_id: string & tags.Format<"uuid">;

    /** User ID who will own these preferences. */
    user_id: string & tags.Format<"uuid">;

    /**
     * Dashboard customization config (theme, layout)—must be
     * JSON-serialized.
     */
    preferences_json: string;
  };

  /**
   * DTO for updating dashboard preferences—only preferences_json or
   * last_viewed_at fields can be modified.
   */
  export type IUpdate = {
    /**
     * Updated dashboard config, theme, or layout JSON (if changing
     * preferences).
     */
    preferences_json?: string | undefined;

    /**
     * Update last viewed timestamp for the dashboard preference record;
     * null if resetting.
     */
    last_viewed_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
