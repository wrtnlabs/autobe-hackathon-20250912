import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Main Organization Admin user entity for
 * healthcare_platform_organizationadmins table. This integrates all persistent
 * record fields capturing registration, identity, contact, org scoping, and
 * audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformOrganizationAdmin = {
  /** ID for this organization admin (UUID). */
  id: string & tags.Format<"uuid">;

  /** Business email for login (must be unique within platform). */
  email: string;

  /** Full legal name (for audit/identity). */
  full_name: string;

  /**
   * Contact number used for notifications, alerts. Optional. Example:
   * "+1-202-555-0123"
   */
  phone?: string | undefined;

  /** Timestamp when admin account was created (ISO 8601). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for the last update to this admin (ISO 8601). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-deletion marker for account closure: null if active, ISO8601 string
   * if deactivated.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformOrganizationAdmin {
  /**
   * Request DTO for onboarding a new organization administrator. Maps to the
   * healthcare_platform_organizationadmins and required authentication
   * fields. All supplied properties map to the onboarding API and support
   * local or federated registration.
   */
  export type IJoin = {
    /**
     * Organization-level administrator email for registration. Must be
     * unique in the system. Required for authentication and audit.
     */
    email: string & tags.Format<"email">;

    /**
     * Full legal name of the organization administrator for onboarding and
     * audit compliance. Required for identity verification and admin
     * assignment workflows.
     */
    full_name: string;

    /**
     * Optional phone number for login, MFA, alerting, and compliance
     * workflows. Can be null or omitted in non-MFA orgs.
     */
    phone?: string | null | undefined;

    /**
     * Login password. Must meet organizational password complexity
     * requirements unless using SSO/onboarding. Should be securely hashed
     * on backend storage, never returned in any response. May be
     * null/omitted if registering via federated identity/SSO.
     */
    password?: string | null | undefined;

    /**
     * Federated authentication provider (e.g., 'saml', 'oauth2', 'ad',
     * etc.). Required if registering via SSO.
     */
    provider?: string | undefined;

    /**
     * Unique provider key/id used with federated authentication. Required
     * for SSO registration.
     */
    provider_key?: string | undefined;
  };

  /**
   * Response DTO for an authorized organization administrator session,
   * containing admin info plus current JWT tokens. Returned after
   * organization admin join, login, or token refresh. Embeds reference to
   * IAuthorizationToken.
   */
  export type IAuthorized = {
    /**
     * Unique UUID for the newly onboarded administrator as per Prisma
     * schema. Returned on success.
     */
    id: string & tags.Format<"uuid">;

    /** Administrator's business email for future login and notifications. */
    email: string & tags.Format<"email">;

    /** Full legal name of org admin for identity and session display. */
    full_name: string;

    /** (Optional) Business phone for out-of-band communications. */
    phone?: string | null | undefined;

    /** Timestamp when admin account was created (ISO 8601). */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for the last update to this admin (ISO 8601). */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft-deletion marker for account closure: null if active, ISO8601
     * string if deactivated.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request DTO for organization administrator login. Maps to authentication
   * by email/password or SSO. Platform security policy may require SSO for
   * specific tenants or allow both local and federated authentication
   * according to business settings.
   */
  export type ILogin = {
    /**
     * Administrator email used to login. Case-insensitive per platform
     * normalization.
     */
    email: string & tags.Format<"email">;

    /** Password for login, or null if logging in via federated SSO provider. */
    password?: string | null | undefined;

    /**
     * Federated authentication provider (e.g., 'saml', 'oauth2', 'ad').
     * Required if not logging in with password.
     */
    provider?: string | undefined;

    /** Federated provider key/subject id for SSO login. */
    provider_key?: string | undefined;
  };

  /**
   * Request DTO for refreshing organization admin authentication with a valid
   * refresh token. Used for session renewal or token extension.
   */
  export type IRefresh = {
    /**
     * Existing, valid refresh token for the organization admin session.
     * Must follow JWT or platform-standard token format for refresh.
     */
    refresh_token: string;
  };

  /**
   * Filter, search, and pagination parameters for listing organization admin
   * users. The 'order' property is correctly defined as a string enum with
   * 'asc'/'desc'.
   */
  export type IRequest = {
    /**
     * Email filter for list search (case-insensitive, partial or full
     * match).
     */
    email?: string | undefined;

    /** Full name filter for list search; allows partial match. */
    full_name?: string | undefined;

    /** Limit list to active or archived organization admins. */
    is_active?: boolean | undefined;

    /** Sort field name. */
    sort?: "created_at" | "email" | "full_name" | undefined;

    /**
     * Sort direction for result sorting; must be one of: 'asc' (ascending)
     * or 'desc' (descending).
     */
    order?: "asc" | "desc" | undefined;

    /** Pagination: page number (1-based). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: number of results per page. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Structure for organization admin account creation – only business
   * required fields.
   */
  export type ICreate = {
    /** Unique business/organization email for admin registration. */
    email: string;

    /** Full legal name for administrative review/notifications. */
    full_name: string;

    /** Organization contact number; optional for notification/MFA. */
    phone?: string | undefined;
  };

  /** Structure for updating an organization admin account attribution fields. */
  export type IUpdate = {
    /** Update admin's email (business/organization/replacement). Optional. */
    email?: string | undefined;

    /** Update full legal name of the account. Optional. */
    full_name?: string | undefined;

    /** Update contact phone number for notifications; optional. */
    phone?: string | undefined;
  };

  /**
   * Summary-type representation of a single organization administrator
   * account. Used for paginated lists, admin search endpoints, and
   * organization-level account overviews. Maps to
   * {healthcare_platform_organizationadmins} entity. Email must be unique,
   * business-only, and required for all onboarding. Status tracks account
   * lifecycle (active, suspended, etc). Timestamps are ISO8601 formatted. All
   * RBAC and privacy rules MUST be enforced—this summary never returns
   * authentication secrets or password hashes. Suitable for admin dashboards,
   * audit views, and privileged management tooling. NEVER include
   * personal/PHI-sensitive fields here.
   */
  export type ISummary = {
    /**
     * Organization admin's unique identifier. References
     * {healthcare_platform_organizationadmins.id}.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Business email address for the organization admin. Must be unique
     * systemwide. Only business/clinic domains accepted.
     */
    email: string & tags.Format<"email">;

    /**
     * Legal full name of organization admin for account identity,
     * compliance review, and notifications.
     */
    full_name: string;

    /**
     * Current status of the org admin account (e.g., 'active',
     * 'awaiting_approval', 'suspended', 'deleted', etc.). Derived from
     * {healthcare_platform_organizationadmins.status}.
     */
    status: string;

    /**
     * Timestamp for when the org admin user was created. ISO8601 format for
     * audit.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp for last update of org admin details (profile, contact, or
     * status). ISO8601.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
