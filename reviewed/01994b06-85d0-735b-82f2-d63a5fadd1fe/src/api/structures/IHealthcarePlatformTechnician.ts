import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents a technician staff member, typically technical/diagnostic staff
 * such as radiology or lab technicians. Fields correspond directly to those
 * found in the healthcare_platform_technicians Prisma schema. Contains business
 * identity and HR/credential metadata, audit timestamps, and organization
 * communication fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformTechnician = {
  /** Unique identifier for this technician (UUID primary key). */
  id: string & tags.Format<"uuid">;

  /**
   * Organization-issued business email. Used for login, communication, and
   * identification. Must be unique among technicians.
   */
  email: string;

  /** Full legal name of the technician for credential, HR, and display. */
  full_name: string;

  /**
   * Professional license or registration number. Unique for credential
   * verification and audit. Used for regulatory compliance.
   */
  license_number: string;

  /**
   * Area of technical expertise. For example, 'Radiology', 'Lab', etc.
   * Optional for generic techs - nullable if not specified.
   */
  specialty?: string | null | undefined;

  /**
   * Organization/HR contact or work phone. Used for scheduling, notification,
   * or emergency contact. Optional.
   */
  phone?: string | null | undefined;

  /** Account/record creation timestamp as ISO 8601 date-time string. */
  created_at: string & tags.Format<"date-time">;

  /** Date/time (ISO 8601) of last modification, for audit and concurrency. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete/archive marker. Non-null if deactivated/archived. Nullable. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformTechnician {
  /**
   * Payload to register/join a technician account in the healthcare platform.
   * All fields are used to create a compliant staff profile for
   * clinical/technical assignment. Email and license_number must be unique.
   * See schema healthcare_platform_technicians for further constraints.
   */
  export type IJoin = {
    /**
     * The business email address for the technician. Must be unique, used
     * for login and notifications. Only business domains are allowed (no
     * public/personal domains).
     */
    email: string & tags.Format<"email">;

    /**
     * The full legal name of the technician as recognized for credentialing
     * and clinical assignments.
     */
    full_name: string;

    /**
     * The state or registry-issued license number for the technician.
     * Required for identity, compliance, and audit.
     */
    license_number: string;

    /**
     * (Optional) The technician's field of expertise (e.g., Radiology,
     * Phlebotomy). Can be null or omitted if not applicable.
     */
    specialty?: string | null | undefined;

    /**
     * (Optional) Business or personal phone number for communications and
     * shift notification. May be null.
     */
    phone?: string | null | undefined;
  };

  /**
   * Login credentials required for technician authentication. Email and
   * password are referenced in healthcare_platform_technicians and
   * healthcare_platform_user_authentications for credential check. Only
   * valid, non-deleted accounts may login.
   */
  export type ILogin = {
    /**
     * The technician's email address used for login and credential
     * verification.
     */
    email: string & tags.Format<"email">;

    /**
     * Password for technician authentication. Musn't be stored or returned
     * in cleartext.
     */
    password: string & tags.MinLength<8>;
  };

  /**
   * Refresh request structure for technician session. Only valid, active
   * refresh_token values are accepted, which are managed via
   * healthcare_platform_auth_sessions. Used to get updated JWT or session
   * tokens.
   */
  export type IRefresh = {
    /**
     * Valid refresh token as issued from prior authentication/token grant,
     * required for session continuation.
     */
    refresh_token: string;
  };

  /**
   * Response payload after technician authentication/register/login/refresh
   * actions. Returns full technician profile (excluding sensitive credential
   * hashes) and the current session token details. All fields match
   * healthcare_platform_technicians or platform auth session schema.
   */
  export type IAuthorized = {
    /**
     * Unique identifier for the technician account (UUID, matches
     * healthcare_platform_technicians.id).
     */
    id: string & tags.Format<"uuid">;

    /** Business email address registered for the technician. */
    email: string & tags.Format<"email">;

    /** Full legal name of the technician for identity and audit. */
    full_name: string;

    /**
     * Professional/state license number used for credentialing, audit, and
     * regulatory workflows.
     */
    license_number: string;

    /** (Optional) Technician's technical/clinical specialty. Nullable. */
    specialty?: string | null | undefined;

    /** (Optional) Business or personal phone number. Nullable. */
    phone?: string | null | undefined;

    /**
     * Timestamp when the technician account was created (ISO 8601
     * date-time).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the technician account was last updated (ISO 8601
     * date-time).
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft delete/archive marker. Non-null if deactivated/archived.
     * Nullable.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Filter/search entity for technician listing, used in pagination/search
   * API endpoints.
   */
  export type IRequest = {
    /**
     * Business email used for technician login and notifications. Used for
     * filtering.
     */
    email?: string | undefined;

    /** Full legal name of technician. Used for search/filter. */
    full_name?: string | undefined;

    /** Technical license or certification number. */
    license_number?: string | undefined;

    /** Search by technical specialty (lab, imaging, etc). */
    specialty?: string | undefined;

    /** Find by account status/flag. */
    status?: string | undefined;
  };

  /** Technician user creation (registration/onboarding) payload. */
  export type ICreate = {
    /**
     * Business email address used for login, notification, and audit. Must
     * be unique.
     */
    email: string & tags.Format<"email">;

    /**
     * Legal full name of the technician per organizational personnel
     * policies.
     */
    full_name: string;

    /**
     * Official technical/professional license number for compliance, audit,
     * and identity.
     */
    license_number: string;

    /**
     * Technician's technical specialty (e.g. Radiology, Phlebotomy).
     * Optional.
     */
    specialty?: string | null | undefined;

    /**
     * (Optional) Contact phone for scheduling, shift, and compliance
     * notifications.
     */
    phone?: string | null | undefined;
  };

  /** Payload for updating a technician's user profile information. */
  export type IUpdate = {
    /** Updates the full legal name of the technician. */
    full_name?: string | undefined;

    /** Updates the technical specialty for the technician (if any). */
    specialty?: string | null | undefined;

    /** Updates the technician's business/personal phone number. */
    phone?: string | null | undefined;
  };

  /** Summary view of technician user for lists/indexes. */
  export type ISummary = {
    /** Unique UUID identifier for the technician user row. */
    id: string & tags.Format<"uuid">;

    /** Business email address for notification, login, and audit tracking. */
    email: string & tags.Format<"email">;

    /**
     * Legal full name of the technician, used for compliance and
     * notification.
     */
    full_name: string;

    /** Technical specialty or focus area (if applicable). */
    specialty?: string | null | undefined;
  };
}
