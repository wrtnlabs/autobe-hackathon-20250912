import { tags } from "typia";

/**
 * Archived user credential record (healthcare_platform_user_credentials), used
 * for audit/rollback/security.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformUserCredential = {
  /** Unique identifier for the user credential record. */
  id: string & tags.Format<"uuid">;

  /** The associated user record for these credentials (any actor type). */
  user_id: string & tags.Format<"uuid">;

  /**
   * User table/type discriminator for credentials (systemadmin, orgadmin,
   * etc).
   */
  user_type: string;

  /** Type of credential archived (password, sso, certificate, webauthn, etc). */
  credential_type: string;

  /** Hash or encoded credential value (historical, not active). */
  credential_hash: string;

  /** Time when credential became inactive or was rotated (ISO8601). */
  archived_at: string & tags.Format<"date-time">;

  /** Timestamp credential was first active (ISO8601). */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformUserCredential {
  /**
   * Search request for archived user credential records, supporting filtering
   * by user, type, dates, and pagination.
   */
  export type IRequest = {
    /** ID of the actor/user. */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Table/type discriminator for user/actor type (systemadmin, orgadmin,
     * etc).
     */
    user_type?: string | undefined;

    /** Type of credential (password, sso, certificate, webauthn, etc). */
    credential_type?: string | undefined;

    /** Filter: archived at or after this time (ISO8601). */
    archived_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter: archived before this time (ISO8601). */
    archived_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Search: created after this time (ISO8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Search: created before this time (ISO8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Results page number (1-based indexing). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of results per page. */
    pageSize?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Create archived user authentication credential record for audit/rotation
   * prevention. All fields required, hashes must be securely computed.
   */
  export type ICreate = {
    /** User record ID this credential is for (required). */
    user_id: string & tags.Format<"uuid">;

    /** Type of user/actor associated with this credential (required). */
    user_type: string;

    /** Credential type being archived (required). */
    credential_type: string;

    /** Credential value (hashed, never cleartext). */
    credential_hash: string;

    /**
     * Timestamp when this credential was issued (usually system-generated,
     * ISO8601).
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * When credential became inactive or was rotated (system-generated,
     * ISO8601).
     */
    archived_at: string & tags.Format<"date-time">;
  };

  /**
   * Update contract for credential archive and metadata for user
   * authentication events. Allows updates to non-immutable fields such as
   * credential_type, archived_at.
   */
  export type IUpdate = {
    /**
     * Type of credential archived (password, sso, certificate, webauthn,
     * etc).
     */
    credential_type?: string | undefined;

    /** Hash or encoded credential value (historical, not active). */
    credential_hash?: string | undefined;

    /** Time when credential became inactive or was rotated. */
    archived_at?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Summary record for an archived user authentication credential.
   *
   * Does NOT include any sensitive/password hash information. Used for audit
   * and historical credential attestation purposes. Matches fields from
   * healthcare_platform_user_credentials: id, user_id, user_type,
   * credential_type, archived_at, and created_at.
   *
   * Timestamps are ISO8601-formatted.
   */
  export type ISummary = {
    /** Unique identifier for the credential archive record (UUID). */
    id: string & tags.Format<"uuid">;

    /** User ID this credential attaches to. */
    user_id: string & tags.Format<"uuid">;

    /** User type: systemadmin, orgadmin, etc. */
    user_type: string;

    /** Credential type (password, sso, certificate, webauthn, etc). */
    credential_type: string;

    /**
     * When the credential was archived (password rotated, etc; ISO8601
     * string).
     */
    archived_at: string & tags.Format<"date-time">;

    /** Credential record creation timestamp (ISO8601). */
    created_at: string & tags.Format<"date-time">;
  };
}
