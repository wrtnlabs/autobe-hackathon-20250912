import { tags } from "typia";

/**
 * Represents a configured/registered payment method in use by the
 * organization's billing platform. Contains metadata for payment type, provider
 * details, integration, and status for business workflow use.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformBillingPaymentMethod = {
  /** Primary Key: UUID of the payment method record. */
  id: string & tags.Format<"uuid">;

  /** Owning organization's UUID. */
  organization_id: string & tags.Format<"uuid">;

  /**
   * Kind of method (credit_card, ach, insurance, check, cash, bank_transfer,
   * external_service, other).
   */
  method_type: string;

  /**
   * Provider name/label (e.g. 'Visa', 'Stripe', 'Aetna', internal
   * designation).
   */
  provider_name?: string | undefined;

  /**
   * (Optional) Integration/configuration details, serialized as a string. Can
   * be used for API params, settings, etc.
   */
  details_json?: string | undefined;

  /** True if payment method is available for invoice/payment workflows. */
  is_active: boolean;

  /** Creation timestamp (ISO 8601). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp updated (ISO 8601). */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformBillingPaymentMethod {
  /**
   * Search and pagination parameters for billing payment methods. Used to
   * filter, sort, and page through available payment method records for an
   * organization.
   */
  export type IRequest = {
    /**
     * Type/category of payment method (e.g. credit_card, ach, insurance,
     * check, cash, bank_transfer, external_service, other).
     */
    method_type?: string | undefined;

    /**
     * External or internal provider label (e.g. Visa, Stripe, Aetna,
     * Company payroll).
     */
    provider_name?: string | undefined;

    /** Whether the payment method is currently active/usable in workflows. */
    is_active?: boolean | undefined;

    /** UUID of the organization this payment method belongs to. */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** Pagination: Page number (1-based). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: Number of records per page. */
    page_size?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort parameter (field name, may include order, e.g. 'created_at
     * desc').
     */
    sort?: string | undefined;
  };

  /**
   * Interface for creating a new payment method record. Used by
   * administrative UI or internal services to register a supported payment
   * method for an organization. All required fields are reflected in the
   * schema. Optional fields provide additional configuration or integration
   * context.
   */
  export type ICreate = {
    /** Owning organization's UUID. */
    organization_id: string & tags.Format<"uuid">;

    /**
     * Kind of method (credit_card, ach, insurance, check, cash,
     * bank_transfer, external_service, other).
     */
    method_type: string;

    /**
     * Provider name/label (e.g. 'Visa', 'Stripe', or payer company for
     * insurance).
     */
    provider_name?: string | undefined;

    /**
     * Serialized settings/configuration (optional JSON string for
     * gateway/API connection data, etc.).
     */
    details_json?: string | undefined;

    /** True if method is enabled for new payments/invoices. */
    is_active: boolean;
  };

  /**
   * Payload for updating a billing payment method. All fields optional;
   * PATCH/PUT semantics, only changed fields included.
   */
  export type IUpdate = {
    /**
     * Kind of method (e.g., credit_card, ach, insurance, check,
     * bank_transfer, external_service, other).
     */
    method_type?: string | undefined;

    /**
     * External or internal provider label (e.g., Visa, Stripe, Aetna,
     * Company payroll).
     */
    provider_name?: string | undefined;

    /**
     * Serialized details/settings for integration (e.g., JSON params for
     * gateways or insurance API config).
     */
    details_json?: string | undefined;

    /**
     * If true, method is offered for current payments; not deleted to
     * preserve audit trail.
     */
    is_active?: boolean | undefined;
  };

  /**
   * Minimal summary information for a billing payment method, suitable for
   * selection/listing in payment forms.
   */
  export type ISummary = {
    /** Unique identifier for the payment method record. */
    id: string & tags.Format<"uuid">;

    /**
     * Kind of payment method (e.g., credit_card, ach, insurance, cash,
     * etc.).
     */
    method_type: string;

    /**
     * Label or provider for the payment method (nullable or omitted if not
     * applicable).
     */
    provider_name?: string | null | undefined;

    /**
     * Indicates if this payment method is currently active for organization
     * use.
     */
    is_active: boolean;

    /** Reference to the organization this payment method belongs to. */
    organization_id: string & tags.Format<"uuid">;
  };
}
