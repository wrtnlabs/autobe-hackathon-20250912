import { tags } from "typia";

/**
 * Calendar/locale/regional settings entity for platform, organization, or
 * department. Used for scheduling UI, notifications, date/time/number
 * formatting, and role-based localization. Represents a unique context for
 * localization and availability logic.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformCalendarSetting = {
  /** Unique identifier for the calendar setting entry (UUID). */
  id: string & tags.Format<"uuid">;

  /**
   * Organization for which the calendar applies (nullable for
   * global/platform-wide).
   */
  healthcare_platform_organization_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * Department context for department-specific settings. Nullable if
   * org-wide/global.
   */
  healthcare_platform_department_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * Language code (e.g. en-US, es-ES) for localization of system outputs,
   * notifications, UI/date formatting, and scheduling events.
   */
  language: string;

  /**
   * IANA timezone string (e.g. America/New_York) for all date/time
   * calculations.
   */
  timezone: string;

  /**
   * Standard date display format (e.g. YYYY-MM-DD, MM/DD/YYYY) for all
   * scheduling output.
   */
  date_format: string;

  /**
   * Standard time display format (e.g. 24h, 12h) used for
   * calendar/timepickers and business rules.
   */
  time_format: string;

  /**
   * Number formatting convention for region/country, e.g. 1,234.56 vs
   * 1.234,56.
   */
  number_format: string;

  /** Timestamp of when the calendar setting was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of the last update to calendar setting. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp; null if settings are currently active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformCalendarSetting {
  /**
   * Advanced search/filtering request for calendar settings in the scheduling
   * system. Allows specifying organization/resource filters, business rules
   * (availability, lead/cancel window), and pagination/sorting controls.
   */
  export type IRequest = {
    /** Organization ID to search for calendar settings (optional). */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Resource type filter for calendar settings, e.g., 'room', 'provider',
     * 'equipment' (optional).
     */
    resource_type?: string | undefined;

    /** Specific resource ID to search for (optional). */
    resource_id?: (string & tags.Format<"uuid">) | undefined;

    /** List of business days (e.g., ['Mon', 'Tue']) to filter settings. */
    business_days?: string[] | undefined;

    /** Filter for availability hours (e.g., '08:00-18:00', optional). */
    availability_hours?: string | undefined;

    /** Minimum required lead time for a calendar setting (optional). */
    min_lead_time_minutes?: (number & tags.Type<"int32">) | undefined;

    /** Minimum allowed cancellation window in minutes (optional). */
    min_cancel_window_minutes?: (number & tags.Type<"int32">) | undefined;

    /**
     * Filter for blackout dates (comma-separated ISO 8601 date(s) or
     * range).
     */
    blackout_dates?: string | undefined;

    /**
     * Whether post-appointment survey is enabled for this setting
     * (optional).
     */
    post_appointment_survey_enabled?: boolean | undefined;

    /** Pagination control: page number (optional). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination control: number of records per page (optional). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Sort field name for results, e.g., 'created_at' or 'resource_type'
     * (optional).
     */
    sort_by?: string | undefined;

    /** Sort direction: 'asc' or 'desc' (optional). */
    sort_order?: "asc" | "desc" | undefined;
  };

  /**
   * Input DTO for creating a new calendar/locale/regional settings entity for
   * a platform, organization or department context.
   */
  export type ICreate = {
    /**
     * Organization for which the calendar applies (nullable for
     * global/platform-wide).
     */
    healthcare_platform_organization_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Department context for department-specific settings. Nullable if
     * org-wide/global.
     */
    healthcare_platform_department_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Language code (e.g. en-US, es-ES) for localization of system outputs,
     * notifications, UI/date formatting, and scheduling events.
     */
    language: string;

    /**
     * IANA timezone string (e.g. America/New_York) for all date/time
     * calculations.
     */
    timezone: string;

    /**
     * Standard date display format (e.g. YYYY-MM-DD, MM/DD/YYYY) for all
     * scheduling output.
     */
    date_format: string;

    /**
     * Standard time display format (e.g. 24h, 12h) used for
     * calendar/timepickers and business rules.
     */
    time_format: string;

    /**
     * Number formatting convention for region/country, e.g. 1,234.56 vs
     * 1.234,56.
     */
    number_format: string;
  };

  /**
   * Summary configuration for org/resource calendar setting, for scheduling
   * configuration and calendar set lookup.
   */
  export type ISummary = {
    /** Unique identifier of the calendar setting. */
    id: string & tags.Format<"uuid">;

    /** Organization for which the calendar setting applies. */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /**
     * Resource this calendar setting applies to (org-wide, provider, room,
     * equipment).
     */
    resource_type: string;

    /** Resource id if the setting is for a specific resource, else null. */
    resource_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Business open days (e.g., '["Mon","Tue"]'), JSON string. */
    business_days: string;

    /** Standard window for availability (e.g., '08:00-18:00'). */
    availability_hours: string;

    /** Minimum advance booking time in minutes. */
    min_lead_time_minutes: number & tags.Type<"int32">;

    /** Minimum allowed cancellation window in minutes. */
    min_cancel_window_minutes: number & tags.Type<"int32">;

    /** Blackout (holiday) dates, string/JSON. */
    blackout_dates?: string | null | undefined;

    /** Whether a post-appointment survey is enabled. */
    post_appointment_survey_enabled: boolean;

    /** Timestamp when this calendar setting was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when last updated. */
    updated_at: string & tags.Format<"date-time">;

    /** Soft deletion timestamp. Null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
