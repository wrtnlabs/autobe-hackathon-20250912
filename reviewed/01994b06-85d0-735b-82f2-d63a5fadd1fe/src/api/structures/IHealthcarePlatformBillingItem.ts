import { tags } from "typia";

/**
 * Main billing item entity. Singular, security-checked, with UUID and audit
 * fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformBillingItem = {
  /** Database UUID for the billing item row. */
  id: string;

  /** UUID of the parent invoice. */
  invoice_id: string;

  /** Linked billing code catalog identifier (UUID). */
  billing_code_id: string;

  /**
   * Service/product code description displayed to the administrator or end
   * user.
   */
  description: string;

  /** Number of units (integer). Must be >=1 for all items. */
  quantity: number & tags.Type<"int32">;

  /** Business price per unit in invoice currency. */
  unit_price: number;

  /** Calculated extended line price (quantity * unit_price). */
  total_amount: number;

  /** Timestamp when item was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for item update. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformBillingItem {
  /** Search request structure for billing item list/index endpoints. */
  export type IRequest = {
    /** Filter by billing code or partial billing code. */
    billing_code_id?: string | undefined;

    /** Filter by invoice id. */
    invoice_id?: string | undefined;

    /** Partial match for description. */
    description?: string | undefined;

    /** Filter by minimum total_amount. */
    min_total_amount?: number | undefined;

    /** Filter by maximum total_amount. */
    max_total_amount?: number | undefined;

    /** Pagination: result offset. */
    offset?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: result limit per page. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Sort order for results. */
    order_by?: string | undefined;
  };

  /** DTO for billing item creation. All fields required. */
  export type ICreate = {
    /** Parent invoice's UUID. */
    invoice_id: string;

    /** Billing code UUID. */
    billing_code_id: string;

    /** Free text or code description (required). */
    description: string;

    /** Units (must be >=1). */
    quantity: number & tags.Type<"int32">;

    /** Numeric unit price. */
    unit_price: number;
  };

  /**
   * Update DTO for billing item entity. Allows partial field updates:
   * description, quantity, unit price, and calculated total. Primary key,
   * invoice_id, and billing_code_id are immutable during update.
   */
  export type IUpdate = {
    /** Optional description update. */
    description?: string | undefined;

    /** Optional quantity update. */
    quantity?: (number & tags.Type<"int32">) | undefined;

    /** Optional unit price update. */
    unit_price?: number | undefined;

    /** Optional recalculated line total (business logic backed). */
    total_amount?: number | undefined;
  };

  /**
   * Summary variant for billing items to be used in list/search/paginated
   * responses. Omits audit and soft-delete detail.
   */
  export type ISummary = {
    /** Database UUID for the billing item row. */
    id: string;

    /** Linked invoice for context. */
    invoice_id: string;

    /** Simplified summary field for display in list views. */
    description: string;

    /** Number of units in list view. */
    quantity: number & tags.Type<"int32">;

    /** Unit price for high-level summary. */
    unit_price: number;

    /** Line total in summary context. */
    total_amount: number;
  };
}
