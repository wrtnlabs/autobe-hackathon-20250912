import { tags } from "typia";

/**
 * Emergency access override audit record (break-the-glass event)
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformEmergencyAccessOverride = {
  /** Override event UUID */
  id: string & tags.Format<"uuid">;

  /** User UUID who broke-glass */
  user_id: string & tags.Format<"uuid">;

  /** Organization UUID in which event occurred */
  organization_id: string & tags.Format<"uuid">;

  /** Reason for emergency access */
  reason: string;

  /** Scope/description of overridden access */
  override_scope: string;

  /** Start time of emergency override */
  override_start_at: string & tags.Format<"date-time">;

  /** End time; null if still open */
  override_end_at: (string & tags.Format<"date-time">) | null;

  /** Reviewer user UUID (if reviewed; null if pending) */
  reviewed_by_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Review completion timestamp */
  reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Audit record creation */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformEmergencyAccessOverride {
  /**
   * Request body for searching/filtering/paginating emergency access override
   * audit records. Used for dashboards, compliance review, and regulatory
   * reporting.
   *
   * Accepts industry-standard search fields based on
   * healthcare_platform_emergency_access_overrides table, including
   * organization, user, started/ended/reviewed windows, reason pattern, and
   * override scope. All filtering is RBAC-guarded and observe full audit and
   * tenant boundaries.
   *
   * See full table documentation for all query logic and security rules.
   */
  export type IRequest = {
    /** Filter by organization UUID. */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by user UUID who performed the override. */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Searches for override records with reason matching this (partial)
     * text.
     */
    reason?: string | undefined;

    /** Scope or resource targeted in the override (pattern match). */
    override_scope?: string | undefined;

    /** Override start window start (inclusive). */
    override_start_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Override start window end (inclusive). */
    override_start_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Override end window start (inclusive, for ended windows only). */
    override_end_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Override end window end (inclusive, for ended windows only). */
    override_end_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** User UUID for post-incident reviewer (compliance/audit scope). */
    reviewed_by_user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Review completion window start (inclusive). */
    reviewed_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Review completion window end (inclusive). */
    reviewed_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Page size for pagination. */
    page_size?: (number & tags.Type<"int32">) | undefined;

    /** Field by which to sort results, default = "override_start_at". */
    sort_by?: string | undefined;

    /** Sort direction (asc or desc). */
    sort_order?: string | undefined;
  };

  /**
   * Request body for updating an existing emergency access override record.
   * Used for workflow transitions such as ending overrides, recording review
   * outcomes, or appending additional business metadata post-incident.
   *
   * All updates are fully audited to support regulatory trace and
   * incident/follow-up review. Modifiable fields correspond to mutable
   * columns in the healthcare_platform_emergency_access_overrides table,
   * allowing for status, review, or timestamp updates (never for overwrite of
   * core historical characteristics).
   *
   * Update is typically performed by compliance or administrative staff after
   * incident review, using reviewed_by_user_id and reviewed_at, or to
   * explicitly close out an emergency window (setting override_end_at).
   *
   * For all permission and audit rules, consult business documentation and
   * table comments for break-the-glass event processing.
   */
  export type IUpdate = {
    /** Datetime override window ended, use null to leave unchanged. */
    override_end_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** User UUID of post-incident reviewer; set null to clear. */
    reviewed_by_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Datetime of review. */
    reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
