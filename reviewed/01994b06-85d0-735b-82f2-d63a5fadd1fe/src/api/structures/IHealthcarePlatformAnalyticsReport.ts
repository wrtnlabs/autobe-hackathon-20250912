import { tags } from "typia";

/**
 * Analytics report metadata and template configuration for the healthcare
 * platform. Each analytics report is a user- or org/department-defined report
 * definition, including access scope, owner, and template details. This schema
 * matches the healthcare_platform_analytics_reports table.
 *
 * All fields are required unless marked as nullable/optional. ID fields are
 * UUIDs; 'template_config_json' is a serialized JSON structure for the report's
 * configuration. 'created_by_user_id' is the creating user; 'organization_id'
 * is the owning organization; optionally linked to 'department_id' (nullable
 * UUID).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformAnalyticsReport = {
  /** UUID primary key of the analytics report. */
  id: string & tags.Format<"uuid">;

  /**
   * UUID referencing the user who created the analytics report. System-level
   * foreign key.
   */
  created_by_user_id: string & tags.Format<"uuid">;

  /** UUID referencing the owning organization (multi-tenant boundary). */
  organization_id: string & tags.Format<"uuid">;

  /**
   * Nullable UUID referencing department for department-scoped dashboards;
   * null for org-wide.
   */
  department_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Unique name of the report (within org/department scope). Must be
   * descriptive for end-user clarity.
   */
  name: string;

  /** Optional descriptive text explaining the report's purpose or scope. */
  description?: string | null | undefined;

  /**
   * JSON string containing the report configuration/template definition. Used
   * by the analytics/report rendering engine.
   */
  template_config_json: string;

  /**
   * Indicates whether this analytics report template is currently active and
   * available for use; false for archived/deleted templates.
   */
  is_active: boolean;

  /** ISO 8601 timestamp when the report was created. */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp when the report was last modified. */
  updated_at: string & tags.Format<"date-time">;

  /** ISO 8601 soft deletion timestamp (null if active/not archived). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformAnalyticsReport {
  /**
   * Request DTO for searching analytics reports. Allows filtering by name,
   * creator, organization, activation, and supports paging/sorting.
   */
  export type IRequest = {
    /** Report name (partial or full match for searching). */
    name?: string | undefined;

    /** User ID who created the report (filter). */
    created_by_user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Organization to which the report belongs (filter). */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional department context. */
    department_id?: (string & tags.Format<"uuid">) | undefined;

    /** Whether the report template is currently active (default: true). */
    is_active?: boolean | undefined;

    /** Pagination: page number to retrieve (default: 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: maximum records per page (default: 20). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Sort by which field (default: created_at or name). */
    sort?: string | undefined;

    /** Sort order: asc or desc. */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Creation payload for analytics report configuration. When creating a new
   * analytics report, the client must supply all required fields as described
   * here. This schema matches the DTO for creating rows in
   * healthcare_platform_analytics_reports.
   *
   * All UUIDs must be valid references; department_id is optional.
   * 'template_config_json' is a required string (serialized JSON).
   */
  export type ICreate = {
    /** UUID referencing creator user. */
    created_by_user_id: string & tags.Format<"uuid">;

    /** UUID referencing target organization (multi-tenant boundary). */
    organization_id: string & tags.Format<"uuid">;

    /**
     * Nullable UUID referencing department for department-level report
     * (omit or null for org-wide).
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Unique report name (within org/department). */
    name: string;

    /** Report description (optional, usually shown in report gallery). */
    description?: string | null | undefined;

    /**
     * JSON string defining widgets, data sources, and rendering
     * configuration.
     */
    template_config_json: string;

    /**
     * Whether the report is enabled for use; defaults to true on most
     * creation flows.
     */
    is_active: boolean;
  };

  /**
   * DTO for updating an analytics report definition in the platform. This
   * schema covers all allowed properties for patching or updating existing
   * report settings except immutable fields (e.g., created_by_user_id).
   *
   * All fields are optional; only provided fields are updated. Null values
   * are permitted for nullable fields (e.g., department_id).
   * 'template_config_json' must be a JSON-serialized string if supplied.
   */
  export type IUpdate = {
    /** New or updated analytics report name. */
    name?: string | undefined;

    /** Updated description for the analytics report (optional). */
    description?: string | null | undefined;

    /**
     * Updated JSON configuration of the report (serialized string, must be
     * valid JSON if present).
     */
    template_config_json?: string | undefined;

    /** Change active/archived state (e.g., to archive or revive report). */
    is_active?: boolean | undefined;

    /**
     * Update or clear department assignment for department-scoped analytics
     * reports.
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;
  };
}
