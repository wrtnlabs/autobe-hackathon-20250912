import { tags } from "typia";

/**
 * A legal hold record for freezing access to records, assets, or data due to
 * legal, regulatory, or compliance reasons. Maps to
 * healthcare_platform_legal_holds. Contains full scope, lifecycle, audit, and
 * compliance metadata. Subject_type/subject_id define the target;
 * organization_id is always required to define tenant boundary. Status denotes
 * active/released/expired; effective/release windows denote timeline. All times
 * ISO 8601.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformLegalHold = {
  /** Unique identifier for this legal hold record. Always UUID. */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the organization for which this legal hold is imposed. Defines
   * tenant boundary for compliance.
   */
  organization_id: string & tags.Format<"uuid">;

  /**
   * ID of the user/staff who imposed this hold, or null if imposed by the
   * system or imported.
   */
  imposed_by_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Optional department within the organization for scoped holds. Null for
   * org-wide holds.
   */
  department_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Business/entity type affected by the hold (e.g., 'patient_data',
   * 'org_data', etc).
   */
  subject_type: string;

  /**
   * UUID of the subject under hold (e.g., patient record, data asset), or
   * null for org-wide/blanket holds.
   */
  subject_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Business or legal justification for the hold, required for audit and
   * compliance review.
   */
  reason: string;

  /**
   * How the hold was imposed (system, legal request, investigation, manual,
   * policy, etc).
   */
  method: string;

  /** Current status: 'active', 'released', 'denied', 'expired', etc. */
  status: string;

  /** Start time when the hold becomes effective (ISO 8601 datetime). */
  effective_at: string & tags.Format<"date-time">;

  /** End time for the hold, if released/expired (ISO 8601 or null). */
  release_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Record creation timestamp (ISO 8601). */
  created_at: string & tags.Format<"date-time">;

  /** Latest update/modify timestamp for this hold (ISO 8601). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Time at which this legal hold was soft-deleted (retained for compliance
   * audit).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformLegalHold {
  /**
   * Request/search/filter criteria for listing or searching legal hold
   * records, supporting pagination, sorting, and advanced filters.
   */
  export type IRequest = {
    /** If provided, filter by specific organization UUID. */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * If provided, filter by department UUID. Null allowed to get org-wide
     * holds.
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by hold status (active, released, denied, expired, etc). */
    status?: string | undefined;

    /** Type of subject held (e.g., patient_data, org_data, audit_trail). */
    subject_type?: string | undefined;

    /** Filter by specific subject entity under hold (if applicable). */
    subject_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter holds matching a specific reason substring. */
    reason?: string | undefined;

    /**
     * Filter by method used to impose hold (e.g., system, manual, legal
     * request).
     */
    method?: string | undefined;

    /** Only holds with effective_at on or after this ISO datetime. */
    effective_at_start?: (string & tags.Format<"date-time">) | undefined;

    /** Only holds with effective_at on or before this datetime. */
    effective_at_end?: (string & tags.Format<"date-time">) | undefined;

    /** Only holds with release_at after this time. */
    release_at_start?: (string & tags.Format<"date-time">) | undefined;

    /** Only holds with release_at before this time. */
    release_at_end?: (string & tags.Format<"date-time">) | undefined;

    /** Pagination page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Maximum items to return per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Name of the field to sort results by. */
    sort_field?: string | undefined;

    /** Sort direction (asc/desc) for sort_field. */
    sort_direction?: "asc" | "desc" | undefined;
  };

  /**
   * Payload to create a new legal hold record, providing all assignable
   * fields except DB-generated IDs and audit timestamps. Required fields:
   * organization_id, subject_type, reason, method, status, effective_at.
   * Optional: department, subject_id (for targeted hold), imposed_by_id (for
   * staff-initiated hold), release_at (for time-boxed or pre-resolved
   * holds).
   */
  export type ICreate = {
    /**
     * UUID of the organization for which this legal hold is imposed
     * (required, tenant boundary).
     */
    organization_id: string & tags.Format<"uuid">;

    /**
     * Optional UUID of staff member initiating the legal hold (may be null
     * for system/legal requests).
     */
    imposed_by_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional department UUID within org for department-scoped holds. */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Entity/business type the hold applies to (e.g., patient_data,
     * org_data, audit_trail, external_document).
     */
    subject_type: string;

    /**
     * UUID of subject/entity under hold, or null for organization/dept-wide
     * hold.
     */
    subject_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * The business, legal, regulatory, or investigatory reason for imposing
     * the hold. Required for audit.
     */
    reason: string;

    /**
     * Describes how the hold was imposed (e.g., 'system', 'policy', 'legal
     * request', 'manual', etc).
     */
    method: string;

    /**
     * Initial business/operational status for the hold (usually 'active',
     * may be 'pending', etc).
     */
    status: string;

    /** Datetime at which the hold becomes effective (ISO 8601, required). */
    effective_at: string & tags.Format<"date-time">;

    /** Datetime for intended/actual release of the hold (can be null). */
    release_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Payload to update (patch) or release/expire a legal hold. All fields
   * optional; only supply values to be updated (partial update allowed).
   */
  export type IUpdate = {
    /** UUID of staff imposing or updating the hold, or null if system. */
    imposed_by_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** (Optional) Update department UUID for hold scope. */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Updated type/category the hold covers, if modifying scope. */
    subject_type?: string | undefined;

    /** Target subject/entity ID, if changing scope; null for org-wide hold. */
    subject_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Rationale, justification, or updated reason for modifying hold. */
    reason?: string | undefined;

    /** Updated method/context for the (revised) hold. */
    method?: string | undefined;

    /**
     * New hold status (e.g., 'released', 'expired', 'denied', etc), or
     * current status (if correct already).
     */
    status?: string | undefined;

    /** Update effective_at timestamp for hold window. */
    effective_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp for closing out the hold; may be set in status update. */
    release_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view for a legal hold event, capturing business/legal tracking
   * info: type, status, effective window, department. For index, dashboard,
   * notification, or operational audit. Derived from
   * healthcare_platform_legal_holds.
   */
  export type ISummary = {
    /** Unique identifier for the legal hold entity. */
    id: string & tags.Format<"uuid">;

    /**
     * Entity or object type held by the legal hold (patient_data, org_data,
     * audit_log, etc).
     */
    subject_type: string;

    /** Legal hold status (active, released, expired, denied, archived, etc). */
    status: string;

    /** Datetime when this legal hold was imposed. */
    effective_at: string & tags.Format<"date-time">;

    /** Datetime the legal hold is or was released. Can be null if active. */
    release_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional link to the department affected by the legal hold. */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;
  };
}
