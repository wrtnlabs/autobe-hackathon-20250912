import { tags } from "typia";

/**
 * Amendment record for patient clinical data in the healthcare platform.
 *
 * This object is used to strictly document regulatory-compliant record
 * amendments, corrections, or updates to patient data, as prescribed in the
 * healthcare_platform_record_amendments schema in Prisma.
 *
 * All actions are auditable, with structured information on the original and
 * amended values, the submitting and reviewing users, approval status, type of
 * amendment, rationale, and timestamps. This schema does not include actual
 * PHI; rather, it references serializable JSON blobs for old/new state, in full
 * compliance with data access and role isolation policy.
 *
 * All field descriptions reflect the business and regulatory practice for
 * maintaining an indelible amendment log, supporting regulatory, audit, and
 * compliance review. English-only, multi-paragraph documentation ensures
 * clarity and ensures all implementers follow business logic.
 *
 * This object is never used for direct business processing or as input for
 * amend operationsâ€”always for output/audit-oriented APIs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformRecordAmendment = {
  /** Primary key for the record amendment row. */
  id: string & tags.Format<"uuid">;

  /**
   * Patient record this amendment was applied to (FK to
   * healthcare_platform_patient_records).
   */
  patient_record_id: string & tags.Format<"uuid">;

  /** ID of user (e.g., nurse) that submitted the amendment request. */
  submitted_by_user_id: string & tags.Format<"uuid">;

  /**
   * User ID of the reviewer/approver, if present. FK to
   * healthcare_platform_departmentheads.
   */
  reviewed_by_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** EHR encounter affected, if specific to a clinical event. */
  ehr_encounter_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type/category of the amendment (e.g., correction, patient_request,
   * regulatory).
   */
  amendment_type: string;

  /** Serialized JSON of prior state/data for the amended field(s). */
  old_value_json: string;

  /** Serialized JSON of after-amendment state/data for the amended field(s). */
  new_value_json: string;

  /** Rationale, justification, or business context for the amendment event. */
  rationale: string;

  /**
   * Approval workflow status (pending, approved, rejected, null if not
   * applicable).
   */
  approval_status?: string | null | undefined;

  /** Timestamp for amendment row creation. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformRecordAmendment {
  /**
   * Request/filter criteria for searching record amendments including
   * amendment_type, approval_status, reviewer, creation time, and
   * pagination/sorting.
   */
  export type IRequest = {
    /**
     * Filter results to only amendments of a particular type (e.g.,
     * 'correction', 'patient_request', etc.). Optional.
     */
    amendment_type?: string | undefined;

    /**
     * Limit results to amendments of a specific approval status (pending,
     * approved, rejected, etc.). Optional.
     */
    approval_status?: string | undefined;

    /**
     * Earliest created_at timestamp for search/edit range (inclusive).
     * Optional.
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Latest created_at timestamp for editing/searching (inclusive).
     * Optional.
     */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Filter results to those reviewed by a particular user; optional. */
    reviewed_by_user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Index (zero-based) of the requested page of results. Optional. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;

    /** Maximum number of results per page. Optional. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Field to sort on (e.g., 'created_at', 'approval_status'). Optional. */
    sort?: string | undefined;

    /**
     * Sort direction: 'asc' for ascending or 'desc' for descending.
     * Optional.
     */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * Request payload for creating a new patient record amendment, supporting
   * regulatory audit, business workflow, and approval logic.
   */
  export type ICreate = {
    /** UUID of the patient record being amended; required. */
    patient_record_id: string & tags.Format<"uuid">;

    /** UUID of the submitting user (nurse, etc.), always required. */
    submitted_by_user_id: string & tags.Format<"uuid">;

    /** UUID of reviewer/approver user, if required by workflow; optional. */
    reviewed_by_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** UUID of the EHR encounter or null if N/A. */
    ehr_encounter_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Amendment type (e.g., 'correction', 'patient_request', 'regulatory'). */
    amendment_type: string;

    /** Prior value (JSON string) for audit. */
    old_value_json: string;

    /** New value (JSON string) for compliance. */
    new_value_json: string;

    /** Rationale/reason for the amendment; required. */
    rationale: string;

    /**
     * Approval status at submission (may be omitted or null if not set at
     * creation).
     */
    approval_status?: string | null | undefined;
  };

  /**
   * PATCH-style update schema for record amendments
   * (corrections/approvals/etc). All fields optional; mapped from
   * healthcare_platform_record_amendments.
   */
  export type IUpdate = {
    /**
     * Amendment type (correction, patient_request, regulatory, etc).
     * Optional in update.
     */
    amendment_type?: string | undefined;

    /** Serialized prior value (JSON). Optional. */
    old_value_json?: string | undefined;

    /** Serialized new value (JSON). Optional */
    new_value_json?: string | undefined;

    /** Clinical or business rationale for amendment. Optional. */
    rationale?: string | undefined;

    /**
     * Workflow approval status (pending, approved, rejected, or null).
     * Optional.
     */
    approval_status?: string | undefined;

    /** UUID for reviewer/approver. Optional. */
    reviewed_by_user_id?: string | undefined;

    /** UUID of targeted EHR encounter if applicable. Optional. */
    ehr_encounter_id?: string | undefined;
  };
}
