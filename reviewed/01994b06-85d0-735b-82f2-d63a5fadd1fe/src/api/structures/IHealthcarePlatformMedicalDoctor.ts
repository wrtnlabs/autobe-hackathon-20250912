import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents a licensed medical doctor account in the healthcarePlatform system
 * as described by the Prisma schema. Includes all core identity, licensure, and
 * compliance tracking fields. Used for provider assignment, credential
 * verification, and regulatory audit.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformMedicalDoctor = {
  /** Unique identifier for the medical doctor account (uuid primary key). */
  id: string & tags.Format<"uuid">;

  /**
   * Business email address for system login and clinical communication; must
   * be unique.
   */
  email: string & tags.Format<"email">;

  /**
   * Legal full name as registered for licensure and clinical privilege; used
   * for compliance and display.
   */
  full_name: string;

  /**
   * National Provider Identifier (NPI) number for professional credential
   * verification; must be unique.
   */
  npi_number: string;

  /**
   * Clinical specialty (e.g., Cardiology, Pediatrics); optional for initial
   * registration.
   */
  specialty?: string | null | undefined;

  /**
   * Contact phone number for notifications and emergency alerts (E.164 format
   * if international phone); optional.
   */
  phone?: string | null | undefined;

  /** Timestamp of account creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to doctor record. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null unless this account is archived/inactive. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformMedicalDoctor {
  /**
   * Sign-up payload for platform medical doctor: required fields include
   * email, legal name, NPI, password. Optional: specialty, phone. Used for
   * initial onboarding and credential creation.
   */
  export type IJoin = {
    /**
     * Medical doctor business email. Must be unique and used for
     * login/communication. Example: dr.john@examplehospital.com
     */
    email: string & tags.Format<"email">;

    /**
     * Doctor's legal full name for credentialing and clinical privileges.
     * Example: "John A. Smith, MD"
     */
    full_name: string;

    /**
     * Doctor's National Provider Identifier (NPI), unique and required for
     * licensing/credentialing (US only). Example: "1234567890"
     */
    npi_number: string;

    /**
     * Password for local login (8+ characters, required if not using SSO).
     * Never returned in any response.
     */
    password: string & tags.Format<"password">;

    /** Doctor's medical specialty. Optional on join. */
    specialty?: string | null | undefined;

    /** Doctor's phone (for alerts/MFA). Optional on join, nullable. */
    phone?: string | null | undefined;
  };

  /**
   * After successful join/login/refresh, returns doctor profile with
   * authorization token for continued access. Sensitive credential fields are
   * stripped; for compliance, only public/identity data and standard JWT
   * token are included.
   */
  export type IAuthorized = {
    /** Unique identifier for medical doctor, assigned on join. */
    id: string & tags.Format<"uuid">;

    /** Doctor's business email (login/notification, unique). */
    email: string & tags.Format<"email">;

    /** Doctor's legal name, for display and credentialing. */
    full_name: string;

    /** Doctor NPI number, required for provider validation. */
    npi_number: string;

    /** Medical specialty if available. */
    specialty?: string | null | undefined;

    /** Doctor's phone for notifications/MFA, nullable. */
    phone?: string | null | undefined;

    /** Doctor account creation timeâ€”ISO 8601 (UTC). */
    created_at: string & tags.Format<"date-time">;

    /** Doctor last update (profile/security). ISO 8601 (UTC). */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp; null unless this account is
     * archived/inactive.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Payload required to authenticate medical doctor with platform using
   * email/password credentials. SSO logins are handled via provider-specific
   * endpoints.
   */
  export type ILogin = {
    /** Doctor's login email. Example: dr.jane@hospital.org */
    email: string & tags.Format<"email">;

    /** Password credential for login. Not returned in response. */
    password: string & tags.Format<"password">;
  };

  /**
   * Payload for refreshing session tokens for doctor authentication. Submits
   * valid refresh token as issued by platform.
   */
  export type IRefresh = {
    /**
     * Valid, non-expired refresh token issued on previous
     * login/join/refresh operation.
     */
    refresh_token: string;
  };

  /** Search, pagination, and filtering parameters for listing doctors. */
  export type IRequest = {
    /**
     * Partial or full email address for search (case-insensitive,
     * GIN-searchable).
     */
    email?: string | undefined;

    /** Partial or full legal name for search. */
    full_name?: string | undefined;

    /** NPI number to search exact doctor credential. */
    npi_number?: string | undefined;

    /** Specialty (exact or substring). */
    specialty?: string | undefined;

    /** Search filter for created_at date range (ISO 8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Search filter for created_at date range (ISO 8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Only include doctors NOT soft-deleted (NULL deleted_at) if true. */
    active_only?: boolean | undefined;

    /** Page number (starting at 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Page size (max 100). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Field to sort by. */
    order_by?:
      | "email"
      | "full_name"
      | "created_at"
      | "npi_number"
      | "specialty"
      | undefined;

    /** Sort order. */
    order_direction?: "asc" | "desc" | undefined;
  };

  /**
   * DTO required for creating a medical doctor account in the platform (for
   * onboarding/registration). Excludes system fields.
   */
  export type ICreate = {
    /**
     * Business email address for system login and clinical communication
     * (must be unique).
     */
    email: string & tags.Format<"email">;

    /** Legal full name as registered for licensure and clinical privilege. */
    full_name: string;

    /**
     * National Provider Identifier (NPI) number; uniquely verified for
     * credentialing.
     */
    npi_number: string;

    /** Clinical specialty (optional). */
    specialty?: string | null | undefined;

    /** Business phone number for notifications (optional). */
    phone?: string | null | undefined;
  };

  /**
   * DTO allowed for updating medical doctor profile information. Modifies
   * updatable fields only.
   */
  export type IUpdate = {
    /**
     * Business email address; updatable if organization policy permits
     * (must not collide with existing doc email).
     */
    email?: (string & tags.Format<"email">) | undefined;

    /** Full name, as used for display or compliance adjustment. */
    full_name?: string | undefined;

    /** Clinical specialty (optional, for updating). */
    specialty?: string | null | undefined;

    /** Business phone for notifications (optional). */
    phone?: string | null | undefined;
  };

  /**
   * Summary view of the medical doctor entity for use in
   * pagination/list/search endpoints. Contains only fields required for
   * identification and list display as per API conventions.
   */
  export type ISummary = {
    /** Unique identifier for the medical doctor account (uuid primary key). */
    id: string & tags.Format<"uuid">;

    /** Legal full name for display and search. */
    full_name: string;

    /** Business email for communication and identity. */
    email: string & tags.Format<"email">;

    /** NPI number for credential verification and provider identity. */
    npi_number: string;

    /** Clinical specialty (optional, included if present). */
    specialty?: string | null | undefined;
  };
}
