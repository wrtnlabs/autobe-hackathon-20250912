import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * The core entity schema for a system administrator user. Represents privileged
 * users responsible for global platform management, audit, and regulatory
 * compliance. Sensitive credential and internal authentication information is
 * never exposed via this type.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformSystemAdmin = {
  /**
   * Globally unique identifier for the system administrator (UUID primary
   * key).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique business email for system administrator login and notifications.
   * Must match organizational business domains.
   */
  email: string & tags.Format<"email">;

  /**
   * Full legal name of the system administrator, used in audit, display, and
   * notifications.
   */
  full_name: string;

  /**
   * Optional contact number (may be null or omitted). Used for notification
   * and MFA.
   */
  phone?: string | null | undefined;

  /** ISO 8601 timestamp for when the admin account was created. */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 timestamp for the last modification to this account. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion marker for compliance retention. Omitted or null when
   * active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformSystemAdmin {
  /**
   * Registration payload when creating a new healthcare platform system admin
   * superuser account. Links email/identity to auth provider, sets profile
   * fields, and enforces uniqueness/audit for initial superuser onboarding.
   *
   * Provider-specific logic: if 'local', password must be included and
   * conform to policy; if SSO, password MUST NOT be included. Always write
   * confidential credentials to secure/auth domain tables, never expose in
   * response. Audit and compliance metadata must be captured for regulatory
   * reviews.
   */
  export type IJoin = {
    /**
     * Unique email address for the superuser admin. Must be a business
     * email, not a personal domain.
     *
     * This field is mandatory for initial onboarding, cross-system mapping,
     * and audited account identity. All registry and compliance actions
     * validate this email for uniqueness and organizational fit.
     *
     * Example: admin@enterprise-corp.com
     */
    email: string & tags.Format<"email">;

    /**
     * The legal full name of the administrator as used for auditing. This
     * field is required for credential verification, audit log entries, and
     * compliance mappings.
     */
    full_name: string;

    /**
     * Optional business phone number of the admin. Used for contact, MFA
     * challenges, and audit traceability.
     *
     * This is not required at registration, but if present, becomes part of
     * the audit metadata. Format as E.164 international number if possible
     * (e.g., +12125551212).
     */
    phone?: string | undefined;

    /**
     * Authentication provider in use for this registration. Supported
     * values: 'local', 'saml', 'oauth2', 'ad'.
     *
     * Business logic enforces provider-specific restrictions (e.g.,
     * password required for 'local', provider_key for SSO).
     */
    provider: string;

    /**
     * Provider key used for authentication context. For local, typically
     * email; for SSO, the federated identity subject or principal name as
     * assigned by the provider.
     */
    provider_key: string;

    /**
     * Password for local authentication registration. This field must
     * conform to platform credential complexity requirements and is only
     * used for provider: 'local'. Not required for SSO/OAuth flows.
     *
     * Passwords are NEVER returned in response types and are never stored
     * in plaintext.
     */
    password?: string | undefined;
  };

  /**
   * Login credentials for healthcare platform system administrator. Used to
   * validate identity and receive tokens for authenticated API usage.
   * Password is required for 'local', optional/omitted for SSO routes.
   */
  export type ILogin = {
    /**
     * Administrator email address for login. Unique key for credential
     * checks and auditing.
     *
     * Example: sysadmin@enterprise-health.com
     */
    email: string & tags.Format<"email">;

    /**
     * Authentication provider being used to sign in (e.g., 'local', 'saml',
     * 'oauth2', 'ad'). Determines which credential flows are checked.
     */
    provider: string;

    /**
     * Provider-specific identity key for authentication. For local, matches
     * email; for SSO, principal/subject as returned by provider.
     */
    provider_key: string;

    /**
     * Optional password credential for authentication when provider is
     * 'local'. Not required for SSO or external provider login. Never
     * returned in any read or response actions.
     */
    password?: string | undefined;
  };

  /**
   * Request body for system admin session/token refresh operation. Must
   * present an authorized, unexpired refresh token to receive a new access
   * token.
   */
  export type IRefresh = {
    /**
     * Refresh token string granted on previous authorization or login.
     * Required for session continuation and token renewal. Opaque, secure
     * value managed by the authentication/session service.
     */
    refresh_token: string;
  };

  /**
   * Authorization response object returned after successful system admin
   * registration, login, or token refresh. Provides admin profile and session
   * JWTs needed for authenticated API use.
   */
  export type IAuthorized = {
    /**
     * UUID for the authenticated system admin. Used for audit logging,
     * token subject claims, and account management.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Unique email for the admin; used for token claims, audit, and
     * compliance reporting. Business email only.
     */
    email: string & tags.Format<"email">;

    /**
     * Full legal (audited) name of the system administrator. Used in
     * compliance logs, messaging, and audit records.
     */
    full_name: string;

    /**
     * Optional phone number used for audit/compliance and minor
     * notification workflows. E.164 preferred.
     */
    phone?: string | undefined;

    /** ISO 8601 timestamp for when the admin account was created. */
    created_at: string & tags.Format<"date-time">;

    /** ISO 8601 timestamp for the last modification to this account. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion marker for compliance retention. Omitted or null when
     * active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request type for searching or filtering system administrator user
   * records. Contains only filter/pagination/search parameters. Used for
   * platform admin dashboards.
   */
  export type IRequest = {
    /**
     * Optional filter for matching admin account email address. May be used
     * for single or partial matches.
     */
    email?: string | undefined;

    /**
     * Optional filter for matching the full legal name of the system
     * administrator. Useful for partial or case-insensitive search.
     */
    full_name?: string | undefined;

    /**
     * Optional filter to include only accounts created on or after a
     * specific ISO 8601 timestamp.
     */
    created_at_gte?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional filter to include only accounts created on or before a
     * specific ISO 8601 timestamp.
     */
    created_at_lte?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional status filter for admin account lifecycle. Not present in
     * base entity but used for search/index (e.g. 'active', 'archived').
     */
    status?: string | undefined;

    /** Pagination control: page number (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Pagination control: number of items per page. Typical default 20â€“100. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Sort instruction for listing results. Example: 'created_at:desc' or
     * 'email:asc'.
     */
    sort?: string | undefined;
  };

  /**
   * Shape of a request to create a new system administrator. Only required
   * onboarding fields are accepted. Password/credential onboarding is handled
   * by authentication subsystem. Phone is optional.
   */
  export type ICreate = {
    /**
     * Business email address for the new system administrator. Must be
     * unique and match the organization's domain policy.
     */
    email: string & tags.Format<"email">;

    /**
     * Legal full name for the system administrator account to be created.
     * Used in display and audit logs.
     */
    full_name: string;

    /**
     * Optional phone for 2FA or notifications. Null or omitted if not
     * provided.
     */
    phone?: string | null | undefined;
  };

  /**
   * Fields accepted for updating a system administrator account record. Only
   * fields that are editable are included. Updating the email may trigger
   * verification or uniqueness errors.
   */
  export type IUpdate = {
    /**
     * New or updated unique business email for system administrator.
     * Uniqueness constraint applies if changed.
     */
    email?: (string & tags.Format<"email">) | undefined;

    /** Updated full legal name for the system administrator account. */
    full_name?: string | undefined;

    /** Set, change, or remove contact number. Null to remove. */
    phone?: string | null | undefined;

    /**
     * Soft deletion marker. Use ISO 8601 string to mark as deleted, or
     * null/omitted to clear deletion status.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of a system (platform) administrator user belonging to the
   * healthcare platform. Used for paginated index/listing endpoints where a
   * lighter, read-optimized representation is preferred. All fields map to
   * the columns in {healthcare_platform_systemadmins} table. Status reflects
   * account state (active, pending, suspended, deleted, etc). Does NOT
   * include sensitive fields such as password hashes or authentication
   * secrets. Email is required and must be unique across all admins.
   * Created_at and Updated_at are in ISO8601 format. The summary object is
   * RBAC-safe for admin-only index queries.
   *
   * This summary is essential for system/HR dashboards, audits, and
   * administrator management UIs. All output MUST omit password/security
   * fields and avoid exposing credential resets, tokens, or internal
   * implementation details. Intended for internal superuser/owner
   * management.
   */
  export type ISummary = {
    /**
     * System admin's unique identifier. References
     * {healthcare_platform_systemadmins.id}.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Business email address for the system administrator. Uniqueness
     * required. Personal domains (like gmail/yahoo) are not allowed.
     */
    email: string & tags.Format<"email">;

    /**
     * Legal full name of the system admin as registered for compliance,
     * audit, or legal use.
     */
    full_name: string;

    /**
     * Current status of the system admin account (e.g., 'active',
     * 'pending', 'suspended', 'deleted', etc.). Must reference the
     * {healthcare_platform_systemadmins.status} column.
     */
    status: string;

    /**
     * Timestamp for when the system admin account was created. ISO8601
     * format. Sourced from {healthcare_platform_systemadmins.created_at}.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp for last update of the admin's profile (including status
     * changes or contact modifications). ISO8601. Sourced from
     * {healthcare_platform_systemadmins.updated_at}.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
