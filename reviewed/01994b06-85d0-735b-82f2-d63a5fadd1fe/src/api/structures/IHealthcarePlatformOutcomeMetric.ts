import { tags } from "typia";

/**
 * Full analytic/business entity representing a single observed metric for
 * organizational/departmental analytic/reporting. Required for compliance, SLO
 * tracking, and continuous improvement programs. Supports full lifecycle
 * management and regulatory traceability (including soft-delete for
 * retention).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformOutcomeMetric = {
  /**
   * Unique identifier (UUID) for the outcome metric record. Required for
   * referencing, updating, and analytics trend linkage.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID identifying the organization to which the metric belongs. Enforces
   * multi-tenant data separation, RBAC, and compliance context.
   */
  organization_id: string & tags.Format<"uuid">;

  /**
   * Optional department UUID, indicating department-level granularity for
   * analytics or compliance purposes. Null if metric applies at the
   * organization level.
   */
  department_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * String metric name (e.g., 'readmission_rate', 'infection_rate'). Used for
   * querying, time-series aggregation, and analytics series construction.
   * Names should be unique per org/cohort/time.
   */
  metric_name: string;

  /**
   * Optional text description of what the outcome metric represents.
   * Documents purpose, business logic, calculation rationale, or reporting
   * notes.
   */
  description?: string | null | undefined;

  /**
   * A JSON-serialized string describing the patient or event cohort used to
   * generate the metric. Enables reproducibility, regulatory review, and
   * dashboard drilldown filters.
   */
  cohort_definition_json: string;

  /**
   * Recorded numeric value for the metric at the given observed_at timepoint.
   * Used for analytics, trend, benchmarking, and reporting.
   */
  observed_value: number;

  /**
   * Timestamp (ISO 8601) when the metric value was observed/recorded
   * (granularity may be daily, monthly, etc). Enables time-series analytics,
   * compliance SLO measurement, and trending.
   */
  observed_at: string & tags.Format<"date-time">;

  /**
   * Timestamp (ISO 8601) when the outcome metric record was created in the
   * platform. For audit and regulatory trace.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp (ISO 8601) when the outcome metric entity was last modified.
   * For analytic, operational, and regulatory audit compliance.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp (ISO 8601) when the metric record was soft-deleted, or null if
   * still active. Maintains long-term retention per compliance and audit
   * requirements.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformOutcomeMetric {
  /**
   * DTO specifying filters, search, and pagination for outcome metrics
   * analytics dashboards or reporting flows. Optional parameters enable
   * highly targeted cohort, range, and time-based outcome metric queries
   * aligned with RBAC and compliance requirements.
   */
  export type IRequest = {
    /**
     * Filter for metrics that belong to this organization (UUID as string).
     * Enables RBAC, compliance, and tenant partitioning.
     */
    organization_id?: string | undefined;

    /**
     * Optional filter for department scope (UUID as string). Limits metric
     * search to a specific department within an organization (nullable).
     */
    department_id?: string | undefined;

    /**
     * Optional filter for the metric name. Supports partial/text search for
     * targeted analytic queries or cohort analysis.
     */
    metric_name?: string | undefined;

    /**
     * Optional lower bound for observed_at time range filter. Only metrics
     * observed at or after this time will be included in results.
     */
    observed_at_start?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional upper bound for observed_at time range filter. Only metrics
     * observed before or at this time will be included.
     */
    observed_at_end?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional lower bound filter for observed_value (inclusive). Filters
     * metrics where observed_value >= this minimum.
     */
    value_min?: number | undefined;

    /**
     * Optional upper bound filter for observed_value (inclusive). Filters
     * metrics where observed_value <= this maximum.
     */
    value_max?: number | undefined;

    /** (Optional) Page number for pagination (1-indexed). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of results per page (default 25, maximum enforced by API). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Optional sort field and order, e.g.'observed_at:desc',
     * 'metric_name:asc'. Supports result ordering for trends and tableau
     * integration.
     */
    sort?: string | undefined;
  };

  /**
   * Arguments for creating a new healthcare platform outcome metric record,
   * including all required and optional fields.
   */
  export type ICreate = {
    /** Owning organization's unique identifier (UUID). */
    organization_id: string & tags.Format<"uuid">;

    /**
     * Department's unique identifier if department scoped; nullable (UUID
     * or null).
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Outcome metric or variable name (unique within the
     * organization/department).
     */
    metric_name: string;

    /** Human-readable description of the outcome metric. */
    description?: string | null | undefined;

    /**
     * JSON string describing the cohort, definition, or inclusion/exclusion
     * logic for the outcome metric.
     */
    cohort_definition_json: string;

    /** Observed numeric value for the outcome metric for the timepoint. */
    observed_value: number;

    /**
     * Timestamp representing when the outcome metric value was observed
     * (ISO 8601).
     */
    observed_at: string & tags.Format<"date-time">;
  };

  /**
   * Arguments for updating a healthcare platform outcome metric record. Only
   * specified fields will be updated.
   */
  export type IUpdate = {
    /**
     * Outcome metric or variable name (unique within the
     * organization/department).
     */
    metric_name?: string | undefined;

    /** Human-readable description of the outcome metric. */
    description?: string | null | undefined;

    /**
     * JSON string describing the cohort, definition, or inclusion/exclusion
     * logic for the outcome metric.
     */
    cohort_definition_json?: string | undefined;

    /** Observed numeric value for the outcome metric for the timepoint. */
    observed_value?: number | undefined;

    /**
     * Timestamp representing when the outcome metric value was observed
     * (ISO 8601).
     */
    observed_at?: (string & tags.Format<"date-time">) | undefined;

    /** Optional org/department reassignment. Org UUID. */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional department reassignment (UUID or null). */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Summary data for outcome metric timeseries/records for BI/analytics
   * dashboards. Includes name, context, timestamp, and numeric observed
   * value, with organizational and audit context for search and reporting.
   */
  export type ISummary = {
    /** The outcome metric record ID. */
    id: string & tags.Format<"uuid">;

    /** The parent organization's ID. */
    organization_id: string & tags.Format<"uuid">;

    /** The department's ID if department-scoped. */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** The metric name (e.g., 'readmission_rate'). */
    metric_name: string;

    /**
     * The time this metric value was observed (single-point, timeseries
     * timestamp).
     */
    observed_at: string & tags.Format<"date-time">;

    /** The main numeric outcome/score/benchmark value. */
    observed_value: number;

    /** When this record was created (for ingestion/audit purposes). */
    created_at: string & tags.Format<"date-time">;

    /** If this record is soft-deleted, when it was deleted (null if active). */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
