import { tags } from "typia";

/**
 * Canonical immutable business entity for versioned compliance, privacy, or
 * data policies.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformPolicyVersion = {
  /** Unique id (UUID) of the policy version. */
  id: string & tags.Format<"uuid">;

  /** Owning organization's UUID (required). */
  organization_id: string & tags.Format<"uuid">;

  /** Policy category for this version (required). */
  policy_type: string;

  /** Version label (required). */
  version: string;

  /** Policy effectivity start. */
  effective_at: string & tags.Format<"date-time">;

  /** Policy expiration timestamp (if any). */
  expires_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Display/legal policy document title (required). */
  title: string;

  /** URI to full, canonical, audited policy document. */
  document_uri: string;

  /** Cryptographic hash of policy document. */
  document_hash?: string | undefined;

  /** Timestamp of record creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last modification. */
  updated_at: string & tags.Format<"date-time">;

  /** If present, record is deleted (soft delete for audit). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformPolicyVersion {
  /**
   * Advanced search, filter, sort, and pagination criteria for policy version
   * retrieval.
   */
  export type IRequest = {
    /** Filter by organization UUID for this policy version. */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by policy category/type (e.g., 'privacy', 'HIPAA'). */
    policy_type?: string | undefined;

    /** Filter by version label (e.g., 'v1.2', '2024-01'). */
    version?: string | undefined;

    /** Filter by policy document title (search or keyword). */
    title?: string | undefined;

    /** Minimum effective_at date/time (ISO 8601). */
    effective_at_min?: (string & tags.Format<"date-time">) | undefined;

    /** Maximum effective_at date/time (ISO 8601). */
    effective_at_max?: (string & tags.Format<"date-time">) | undefined;

    /** Minimum expires_at date/time (ISO 8601). */
    expires_at_min?: (string & tags.Format<"date-time">) | undefined;

    /** Maximum expires_at date/time (ISO 8601). */
    expires_at_max?: (string & tags.Format<"date-time">) | undefined;

    /** Full-text search across all indexable fields. */
    search?: string | undefined;

    /** Sort field (e.g., 'effective_at', 'title'). */
    sort_field?: string | undefined;

    /** Sort direction (asc or desc). */
    sort_direction?: "asc" | "desc" | undefined;

    /** Page number (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of records per page. */
    page_size?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /** DTO contract for new policy version creation. */
  export type ICreate = {
    /** Owning organization UUID. */
    organization_id: string & tags.Format<"uuid">;

    /** Policy category (enum/string; required). */
    policy_type: string;

    /** Version label (required). */
    version: string;

    /** Effective start (ISO 8601 required). */
    effective_at: string & tags.Format<"date-time">;

    /** Expiration/retirement (optional/null=indefinite). */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Human policy/document name (required). */
    title: string;

    /** URI to official document version. */
    document_uri: string;

    /** Optional hash for tamperproofing. */
    document_hash?: string | undefined;
  };

  /**
   * DTO for allowed policy version modification (null/absent fields not
   * changed).
   */
  export type IUpdate = {
    /** Update the version label. */
    version?: string | undefined;

    /** Updated effective start. */
    effective_at?: (string & tags.Format<"date-time">) | undefined;

    /** Updated expiration/removal timestamp (null disables). */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Update display or legal document name. */
    title?: string | undefined;

    /** Update URI for the document. */
    document_uri?: string | undefined;

    /** Update or reset the document hash. */
    document_hash?: string | undefined;
  };

  /**
   * Summary information for a policy version entity as referenced in
   * compliance and consent, aggregating type, version, title, and time scope.
   * Suitable for dashboard/index listings and quick review. Derived from the
   * healthcare_platform_policy_versions table.
   */
  export type ISummary = {
    /** Unique identifier for the policy version entity. */
    id: string & tags.Format<"uuid">;

    /**
     * Category of this policy version (e.g. privacy, HIPAA, risk
     * management).
     */
    policy_type: string;

    /**
     * Semantic or document version identifier for this policy version (e.g.
     * 'v2.1', '2024-06').
     */
    version: string;

    /** Title of the policy version for quick identification. */
    title: string;

    /** Timestamp when the policy version becomes effective (ISO 8601). */
    effective_at: string & tags.Format<"date-time">;

    /**
     * Expiration timestamp for the policy version if it is not perpetual.
     * Can be null for no expiration.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
