import { tags } from "typia";

/**
 * Pharmacy system transaction entity, including type, status, related pharmacy
 * integration, and full audit fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformPharmacyTransaction = {
  /** Unique identifier for pharmacy transaction. */
  id: string & tags.Format<"uuid">;

  /** UUID of the organization associated with this pharmacy transaction. */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /** Reference to pharmacy integration (e.g. Surescripts, NCPDP, etc). */
  pharmacy_integration_id: string & tags.Format<"uuid">;

  /** Type of pharmacy operation (e.g., new eRx, refill, cancel, status_query). */
  transaction_type: string;

  /** External reference assigned by pharmacy network, if available. */
  external_transaction_id?: string | null | undefined;

  /** Transaction status (e.g. pending, sent, acknowledged, error). */
  status: string;

  /** Additional status message, error, or processing result text. */
  status_message?: string | null | undefined;

  /** Pointer/URI to stored payload for debugging/compliance, if available. */
  payload_reference?: string | null | undefined;

  /** Timestamp when transaction was initiated/requested. */
  requested_at: string & tags.Format<"date-time">;

  /** Timestamp when transaction was sent to external network, if transmitted. */
  transmitted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp of acknowledgement from pharmacy/external system. */
  acknowledged_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Audit: when transaction entity created. */
  created_at: string & tags.Format<"date-time">;

  /** Audit: latest updated timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp. Null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformPharmacyTransaction {
  /**
   * Pharmacy transaction search/filter request supporting filtering by
   * organization, pharmacy integration, transaction type, status, time, and
   * pagination.
   */
  export type IRequest = {
    /**
     * Organization UUID. Optional filter to restrict to a particular
     * organization's transactions.
     */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Pharmacy integration identifier. Used to filter by specific pharmacy
     * integration (e.g. Surescripts, NCPDP), optional.
     */
    pharmacy_integration_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Type of pharmacy transaction (e.g. 'new eRx', 'refill',
     * 'status_query'). Optional filter.
     */
    transaction_type?: string | undefined;

    /**
     * Transaction status for filtering (e.g. 'pending', 'sent',
     * 'acknowledged', 'error'). Optional filter.
     */
    status?: string | undefined;

    /**
     * Optional filter for transactions requested/transmitted within a date
     * window. Array of [start, end] ISO 8601 timestamps.
     */
    transaction_date_range?:
      | ((string & tags.Format<"date-time">)[] &
          tags.MinItems<2> &
          tags.MaxItems<2>)
      | undefined;

    /** Pagination: results page (starts at 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: number of results per page. */
    page_size?: (number & tags.Type<"int32">) | undefined;

    /** Sort field for results (e.g. 'requested_at DESC'). */
    sort?: string | undefined;
  };
}
