import { tags } from "typia";

/**
 * Main entity for user license verification (doctor/nurse/technician).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformUserLicenseVerification = {
  /** UUID */
  id: string;

  /** The actor undergoing credential/license check (doctor/nurse/tech). */
  user_id: string;

  /** Discriminator for user/actor type (medicaldoctor/nurse/technician). */
  user_type: string;

  /** License or registration number being checked. Invariant per user. */
  license_number: string;

  /** Type of license/credential (medical, nurse, tech, etc). */
  license_type: string;

  /** Result of current/most recent check (valid/expired/suspended/pending). */
  verification_status: string;

  /** Last time verification was attempted/recorded (ISO 8601 timestamp). */
  last_verified_at: string;

  /** Reason for suspension or problem, if applicable. */
  suspend_reason?: string | undefined;

  /** Record creation timestamp (ISO 8601). */
  created_at: string;

  /** Last update timestamp (may include failure, renewal, or audit event). */
  updated_at: string;
};
export namespace IHealthcarePlatformUserLicenseVerification {
  /** Request contract for searching and filtering user license verifications. */
  export type IRequest = {
    /** Optional user ID for filtering verifications by user. */
    user_id?: string | undefined;

    /** Optional user type discriminator (medicaldoctor/nurse/technician). */
    user_type?: string | undefined;

    /** Optional license number filter. */
    license_number?: string | undefined;

    /** Optional license type filter (medical, nurse, tech, etc). */
    license_type?: string | undefined;

    /**
     * Optional verification status filter
     * (valid/expired/suspended/pending).
     */
    verification_status?: string | undefined;

    /** Last verification date (start). */
    last_verified_at_start?: string | undefined;

    /** Last verification date (end). */
    last_verified_at_end?: string | undefined;

    /** Organization ID filter. */
    organization_id?: string | undefined;

    /** Sort order (e.g., 'asc', 'desc'). */
    sort_order?: string | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Page size for pagination. */
    page_size?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary object for professional user license verification
   * audit/reporting. Derived from
   * healthcare_platform_user_license_verifications and includes verification
   * metadata for admin or compliance dashboards.
   *
   * Fields: id, user_id, user_type, license_number, license_type,
   * verification_status, last_verified_at, created_at, updated_at.
   */
  export type ISummary = {
    /** Primary key for license verification record (UUID). */
    id: string & tags.Format<"uuid">;

    /** User ID for verified (actor, e.g., doctor, nurse, etc.). */
    user_id: string & tags.Format<"uuid">;

    /** User type this verification is for (medicaldoctor/nurse/technician). */
    user_type: string;

    /** License/credential value being checked. */
    license_number: string;

    /** Type of license/credential (medical, nurse, tech, etc.). */
    license_type: string;

    /** Status of license verification (valid/expired/suspended/pending). */
    verification_status: string;

    /** Last verified timestamp (ISO8601). */
    last_verified_at: string & tags.Format<"date-time">;

    /** Record creation timestamp (ISO8601). */
    created_at: string & tags.Format<"date-time">;

    /** Last updated timestamp (ISO8601). */
    updated_at: string & tags.Format<"date-time">;
  };
}
