import { tags } from "typia";

/**
 * Full snapshot (record) of a computed organization/department KPI for
 * analytics dashboarding. All timestamps are ISO8601. Supports referencing to
 * benchmarks, department, and audit context.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformKpiSnapshot = {
  /** Unique identifier for the KPI snapshot record. */
  id: string & tags.Format<"uuid">;

  /** Organization (tenant) to which this KPI snapshot is assigned. */
  organization_id: string & tags.Format<"uuid">;

  /** (Optional) Department context for this KPI snapshot. */
  department_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** (Optional) Reference to linked benchmark entity. */
  benchmark_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Canonical KPI identifier (must be unique per org and recorded_at). */
  kpi_name: string;

  /** Display label for the KPI snapshot (user-facing analytics/UI). */
  label: string;

  /** Description of the KPI, calculation method, or context. */
  description?: string | null | undefined;

  /**
   * Configuration, calculation, filter, and normalization parameters for the
   * KPI, as a serialized JSON string.
   */
  calculation_config_json: string;

  /** The observed/calculated KPI value for analytics/statistical processing. */
  value: number;

  /**
   * Timestamp representing the measure's period or point on the time axis.
   * ISO 8601.
   */
  recorded_at: string & tags.Format<"date-time">;

  /** Timestamp when the KPI snapshot was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of most recent update to this KPI snapshot. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the KPI snapshot was soft-deleted, or null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformKpiSnapshot {
  /**
   * Advanced filter and pagination request body for KPI snapshot analytics
   * dashboards. Provides business logic boundary for analytics pagination,
   * search, date, numeric, and label-based filtering. ISO8601 dates required
   * for date fields. All fields are optional.
   */
  export type IRequest = {
    /** Filter by organization (UUID) for KPI snapshot query. */
    organization_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** (Optional) Filter by department (UUID) for KPI snapshot query. */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** (Optional) Filter to KPI snapshots linked to this benchmark. */
    benchmark_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** (Optional) KPI name to search/filter on for this query. */
    kpi_name?: string | null | undefined;

    /** (Optional) Label text filter for KPI dashboard search. */
    label?: string | null | undefined;

    /** Earliest recorded_at value to include in query (ISO 8601). */
    recorded_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Latest recorded_at value to include in query (ISO 8601). */
    recorded_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Minimum value filter for time-series trend analysis. */
    min_value?: number | null | undefined;

    /** Maximum value filter for time-series trend analysis. */
    max_value?: number | null | undefined;

    /** Pagination—page number (>=1). */
    page?: number | null | undefined;

    /** Pagination—number of results per page. */
    limit?: number | null | undefined;

    /** Optional field name to sort by (e.g., recorded_at, value). */
    sort_by?: string | null | undefined;

    /** Sort order for results ('asc' for ascending, 'desc' for descending). */
    sort_direction?: "asc" | "desc" | null | undefined;
  };
}
