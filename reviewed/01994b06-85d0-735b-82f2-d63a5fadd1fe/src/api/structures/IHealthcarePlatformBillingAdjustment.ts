import { tags } from "typia";

/**
 * Billing adjustment applied to an invoice or item. May be positive
 * (increase/penalty) or negative (discount/waiver). Used for audit, correction,
 * charity care, or insurance action. Only exposes key adjustment fields, not
 * sensitive billing/patient financial data.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformBillingAdjustment = {
  /** Unique identifier for the billing adjustment (UUID). */
  id: string & tags.Format<"uuid">;

  /** Parent invoice id (UUID), if applied at the invoice level. */
  invoice_id?: (string & tags.Format<"uuid">) | undefined;

  /** If applicable, the specific item id adjusted. */
  item_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Type/category for business/audit: insurance, write-off, charity, patient
   * satisfaction, etc.
   */
  adjustment_type: string;

  /** Reason or explanation for the adjustment. */
  description?: string | undefined;

  /** Positive or negative numeric adjustment value. */
  amount: number;

  /** Adjustment row creation timestamp. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformBillingAdjustment {
  /**
   * Advanced search/filter and pagination for billing adjustment entities,
   * supporting review and analytics. Allows filtering by invoice, item,
   * adjustment type, custom business status, and date ranges for creation or
   * update. Used by admins, billing, and regulatory staff to target/monitor
   * adjustments. Pagination and sorting should always be provided when
   * working with large datasets. Not a persisted entity--filters only.
   */
  export type IRequest = {
    /** Optionally restrict query to adjustments belonging to this invoice. */
    invoice_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optionally restrict query to adjustments attached to this invoice
     * line item.
     */
    item_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optionally restrict to adjustment type (correction, charity,
     * insurance, etc). Should match agreed set per business or regulation.
     */
    adjustment_type?: string | undefined;

    /**
     * Custom business workflow status filter if used in API (nullable in
     * underlying schema). Used for UI flows or analytics, not in persisted
     * entity.
     */
    status?: string | undefined;

    /**
     * Optional filter: Only include adjustments created/updated at or after
     * this date. ISO 8601.
     */
    date_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional filter: Only include adjustments created/updated before or
     * at this date. ISO 8601.
     */
    date_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for paginated results. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Maximum number of results per page (default by business rule). */
    pageSize?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Payload for creating a new billing adjustment record. All fields are
   * required except invoice_id or item_id (only one is required - which
   * determines scope of adjustment). Must state compliant business reason for
   * change (correction, insurance, charity, etc.), and amount. All entries
   * trigger audit logs and regulatory review as per compliance rules. Matches
   * Prisma schema for allowable fields (no id - autogenerated; no timestamps
   * - set by provider).
   */
  export type ICreate = {
    /**
     * UUID of the associated billing invoice if this adjustment applies at
     * the invoice level. Nullable (omit if item_id is given).
     */
    invoice_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * UUID of the associated billing item if this adjustment is at the item
     * level. Nullable (omit if invoice_id is given).
     */
    item_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Category of adjustment (insurance, write-off, charity, error
     * correction, etc). Required. Should match allowed vocabularies.
     */
    adjustment_type: string;

    /**
     * Business/audit justification: required explanation for
     * audit/compliance. Must state compliant, policy reason or
     * documentation for the adjustment.
     */
    description: string;

    /**
     * The amount of adjustment to apply; required. May be negative
     * (decrease/discount) or positive (increase/reversal/correction).
     * Cannot be zero.
     */
    amount: number;
  };

  /**
   * Interface for updating a billing adjustment. Used to annotate
   * corrections, reduce or increase invoice amounts, and preserve audit trail
   * for all financial modifications. Only specific fields are mutable after
   * creation; id/invoice_id/item_id typically immutable.
   *
   * This record must correspond to an extant row in the
   * healthcare_platform_billing_adjustments table, as defined in the Prisma
   * schema. All non-specified fields remain unchanged.
   *
   * Business rules:
   *
   * - Authorization is required for financial role or administrator
   * - Adjustment reasons must always be auditable
   * - Excessive or repeated adjustment requires compliance flagging
   *
   * When applied, the update is recorded in the financial_audit_logs table
   * for compliance.
   */
  export type IUpdate = {
    /**
     * Description or reason for this adjustment/correction.
     *
     * Useful for audit trails, financial reconciliation, and ensuring each
     * adjustment is clearly explained. Referenced from the 'description'
     * column in the Prisma model.
     */
    description?: string | undefined;

    /**
     * New adjustment amount. May be positive (increase invoice/items) or
     * negative (discount/write-off/refund). Referenced from the 'amount'
     * column.
     *
     * Used in billing corrections, policy adjustments, and error handling.
     * Must reflect currency/financial rules for the invoice/organization
     * context.
     *
     * Validation:
     *
     * - Must be a valid double per Prisma: @db.DoublePrecision
     * - Usually non-zero
     * - Typically denominated in the system's currency.
     */
    amount?: number | undefined;

    /**
     * Type/category of adjustment:
     *
     * - Insurance, patient, charity, write-off, correction, etc. Indicates
     *   the business rationale for adjustment.
     *
     * Referenced from the 'adjustment_type' column.
     *
     * Usage:
     *
     * - Determines analytics and workflow reporting class
     * - Example values: 'charity', 'insurance', 'coding_error',
     *   'reconciliation', 'appeal_settlement', etc.
     */
    adjustment_type?: string | undefined;
  };
}
