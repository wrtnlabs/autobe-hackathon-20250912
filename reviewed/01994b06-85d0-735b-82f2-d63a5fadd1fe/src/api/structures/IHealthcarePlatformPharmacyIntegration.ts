import { tags } from "typia";

/**
 * Full pharmacy integration connector record for platform/organization,
 * includes core connection, status, and metadata fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformPharmacyIntegration = {
  /**
   * Unique integration ID for the pharmacy connector record (primary key,
   * UUID).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Organization UUID that owns this integration record and determines data
   * isolation boundary.
   */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /**
   * External or internal pharmacy network vendor identifier (e.g.
   * 'Surescripts', 'NCPDP').
   */
  pharmacy_vendor_code: string;

  /**
   * Integration connection URI or endpoint for the pharmacy system (may be
   * API URL, messaging address, etc).
   */
  connection_uri: string;

  /**
   * Supported communication protocol between platform and pharmacy
   * integration (e.g. 'NCPDP', 'FHIR', 'HL7').
   */
  supported_protocol: string;

  /**
   * Operational integration status (active, pending, failed, disabled), used
   * to manage runtime health.
   */
  status: string;

  /** Timestamp for integration record creation (ISO 8601, UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp for this integration record (ISO 8601, UTC). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-deletion marker for compliance retention (ISO 8601, UTC or null if
   * active).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformPharmacyIntegration {
  /** Pharmacy integration query/search and pagination parameters. */
  export type IRequest = {
    /**
     * Organization ID (UUID) to filter pharmacy integrations by
     * organization.
     */
    organization_id?: string | undefined;

    /**
     * Lab/pharmacy network vendor identifier (e.g. 'Surescripts') to filter
     * pharmacy integrations.
     */
    pharmacy_vendor_code?: string | undefined;

    /** Integration status filter (active, pending, disabled, failed, etc). */
    status?: string | undefined;

    /**
     * Supported communication protocol (NCPDP, FHIR, HL7, etc) to filter
     * results.
     */
    supported_protocol?: string | undefined;

    /**
     * Filter integrations created after this date-time (inclusive, ISO
     * 8601).
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter integrations created before this date-time (inclusive, ISO
     * 8601).
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Restrict to deleted (soft-deleted) integrations if set. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Pagination: results page number, default is 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Pagination: number of results per page. */
    pageSize?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Sort field (e.g. 'created_at', '-status', etc), minus means
     * descending.
     */
    sort?: string | undefined;
  };

  /** Payload for new pharmacy connector creation (all required fields). */
  export type ICreate = {
    /**
     * Organization UUID (required, must already exist) for connector
     * ownership and tenancy isolation.
     */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /**
     * Business or network pharmacy vendor identifier for this connector
     * (required, e.g. 'Surescripts').
     */
    pharmacy_vendor_code: string;

    /**
     * Full connection endpoint/URI for integration with the pharmacy
     * system.
     */
    connection_uri: string;

    /** Integration protocol for the pharmacy system (e.g., 'NCPDP', 'FHIR'). */
    supported_protocol: string;

    /** Initial status of the integration (e.g., 'active', 'pending', etc) */
    status: string;
  };

  /**
   * Update payload for modifying fields of a pharmacy connector; all fields
   * optional.
   */
  export type IUpdate = {
    /** New connection URI or endpoint for the pharmacy system. */
    connection_uri?: string | undefined;

    /**
     * New supported protocol for pharmacy integration (e.g., change to
     * 'FHIR').
     */
    supported_protocol?: string | undefined;

    /**
     * Operational status of the pharmacy connector (update to 'disabled',
     * 'active', etc).
     */
    status?: string | undefined;

    /**
     * Update the network/vendor code for the connector (rare, must remain
     * unique per org).
     */
    pharmacy_vendor_code?: string | undefined;
  };
}
