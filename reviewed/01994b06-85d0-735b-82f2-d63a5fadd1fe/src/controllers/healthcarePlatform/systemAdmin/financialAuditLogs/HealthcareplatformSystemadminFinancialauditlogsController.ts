import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patchhealthcarePlatformSystemAdminFinancialAuditLogs } from "../../../../providers/patchhealthcarePlatformSystemAdminFinancialAuditLogs";
import { SystemadminAuth } from "../../../../decorators/SystemadminAuth";
import { SystemadminPayload } from "../../../../decorators/payload/SystemadminPayload";
import { gethealthcarePlatformSystemAdminFinancialAuditLogsFinancialAuditLogId } from "../../../../providers/gethealthcarePlatformSystemAdminFinancialAuditLogsFinancialAuditLogId";

import { IPageIHealthcarePlatformFinancialAuditLog } from "../../../../api/structures/IPageIHealthcarePlatformFinancialAuditLog";
import { IHealthcarePlatformFinancialAuditLog } from "../../../../api/structures/IHealthcarePlatformFinancialAuditLog";

@Controller("/healthcarePlatform/systemAdmin/financialAuditLogs")
export class HealthcareplatformSystemadminFinancialauditlogsController {
  /**
   * List/search paginated financial audit logs
   * (healthcare_platform_financial_audit_logs).
   *
   * Allows authorized users to search and retrieve a paginated list of
   * financial audit logs, which record all significant financial, billing, and
   * insurance actions across organizations. Supports filtering by organization,
   * entity type (invoice, payment, claim), user, action, and time range.
   *
   * This operation serves compliance, internal audit, and financial reporting
   * needs, supporting detailed forensic investigation into billing, adjustment,
   * or insurance claim workflows. All returned entries conform to regulatory
   * audit standards, and access may be further filtered based on role-based
   * scoping. Related operations include detailed audit log retrieval,
   * entity-based audit reporting, and export endpoints. Expected errors include
   * insufficient permissions or invalid query filters.
   *
   * @param connection
   * @param body Criteria and pagination for searching financial audit logs.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedBody()
    body: IHealthcarePlatformFinancialAuditLog.IRequest,
  ): Promise<IPageIHealthcarePlatformFinancialAuditLog> {
    try {
      return await patchhealthcarePlatformSystemAdminFinancialAuditLogs({
        systemAdmin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve a financial audit log entry by ID from
   * healthcare_platform_financial_audit_logs.
   *
   * Fetches the complete details of a single financial audit log record
   * specified by the financialAuditLogId path parameter. This operation enables
   * authorized compliance, billing, or system administrator users to review the
   * exact nature, context, and status of a financial audit event. The
   * healthcare_platform_financial_audit_logs schema holds audit records for
   * invoice creation, modification, payments, adjustments, claim submissions,
   * and other significant financial activities.
   *
   * Each audit log entry contains references to the affected entity (invoice,
   * claim, payment, etc.), associated organization, user who performed the
   * action, audit action type (such as create, update, access, delete), and a
   * human-readable action description. The operation is critical for compliance
   * with business rules and regulatory mandates, supporting review,
   * investigation, and traceability for all financial and insurance operations
   * in the system.
   *
   * Authorization is strictly enforced: only users with appropriate roles
   * (systemAdmin or organizationAdmin) may access audit details, and all access
   * is logged for further review purposes. The returned data structure mirrors
   * the entity as defined in the Prisma schema, exposing all primary audit
   * properties.
   *
   * @param connection
   * @param financialAuditLogId Unique identifier of the audit log entry to
   *   retrieve
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":financialAuditLogId")
  public async at(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("financialAuditLogId")
    financialAuditLogId: string & tags.Format<"uuid">,
  ): Promise<IHealthcarePlatformFinancialAuditLog> {
    try {
      return await gethealthcarePlatformSystemAdminFinancialAuditLogsFinancialAuditLogId(
        {
          systemAdmin,
          financialAuditLogId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
