import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patchhealthcarePlatformDepartmentHeadAnalyticsReports } from "../../../../providers/patchhealthcarePlatformDepartmentHeadAnalyticsReports";
import { DepartmentheadAuth } from "../../../../decorators/DepartmentheadAuth";
import { DepartmentheadPayload } from "../../../../decorators/payload/DepartmentheadPayload";

import { IPageIHealthcarePlatformAnalyticsReport } from "../../../../api/structures/IPageIHealthcarePlatformAnalyticsReport";
import { IHealthcarePlatformAnalyticsReport } from "../../../../api/structures/IHealthcarePlatformAnalyticsReport";

@Controller("/healthcarePlatform/departmentHead/analyticsReports")
export class HealthcareplatformDepartmentheadAnalyticsreportsController {
  /**
   * Search and retrieve paginated analytics report records
   * (IHealthcarePlatformAnalyticsReport) with filters and sorting.
   *
   * Retrieves a filtered, paginated list of analytics report definitions to
   * which the user has access, based on search, filter, and sort criteria
   * specified in the request body. Operates on the
   * healthcare_platform_analytics_reports table and is used to provide users
   * with access to analytics configuration, reporting dashboards, and
   * organization/department-scoped reports. The
   * IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate
   * querying for report name, creator, department, and status, as well as
   * supports pagination and sorting. The results are returned as an
   * IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable
   * for reporting UIs. Authorization may include any authenticated user with
   * analytics/report permissions in the organization or platform. Error
   * handling includes validation of query parameters, enforcement of RBAC/data
   * scope, and paginated output for large result sets.
   *
   * @param connection
   * @param body Search, filter, pagination, and sort configuration for
   *   analytics reports.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedBody()
    body: IHealthcarePlatformAnalyticsReport.IRequest,
  ): Promise<IPageIHealthcarePlatformAnalyticsReport> {
    try {
      return await patchhealthcarePlatformDepartmentHeadAnalyticsReports({
        departmentHead,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
