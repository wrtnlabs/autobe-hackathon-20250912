import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patchhealthcarePlatformDepartmentHeadBillingInvoices } from "../../../../providers/patchhealthcarePlatformDepartmentHeadBillingInvoices";
import { DepartmentheadAuth } from "../../../../decorators/DepartmentheadAuth";
import { DepartmentheadPayload } from "../../../../decorators/payload/DepartmentheadPayload";

import { IPageIHealthcarePlatformBillingInvoice } from "../../../../api/structures/IPageIHealthcarePlatformBillingInvoice";
import { IHealthcarePlatformBillingInvoice } from "../../../../api/structures/IHealthcarePlatformBillingInvoice";

@Controller("/healthcarePlatform/departmentHead/billingInvoices")
export class HealthcareplatformDepartmentheadBillinginvoicesController {
  /**
   * Search and paginate billing invoices (BillingInvoices table) by business
   * filters for finance/admin roles.
   *
   * Search and retrieve billing invoice records in a paginated, filterable
   * manner. Only users with systemAdmin, organizationAdmin, or departmentHead
   * roles can access invoice listings in their organization context.
   *
   * Query criteria can include invoice status, patient, due date range,
   * organization, and more as defined in the request schema. Pagination ensures
   * scalable access for large financial datasets. Invoice summary info is
   * returned for display in dashboards or list views, with links to detailed
   * records for drill-down.
   *
   * Security enforces strict access isolation by organization; invoices cannot
   * be retrieved across tenant boundaries. Sensitive financial data is only
   * included with appropriate roles and audit logs are maintained for all
   * accesses.
   *
   * @param connection
   * @param body Advanced search parameters and pagination for billing invoice
   *   retrieval.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedBody()
    body: IHealthcarePlatformBillingInvoice.IRequest,
  ): Promise<IPageIHealthcarePlatformBillingInvoice.ISummary> {
    try {
      return await patchhealthcarePlatformDepartmentHeadBillingInvoices({
        departmentHead,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
