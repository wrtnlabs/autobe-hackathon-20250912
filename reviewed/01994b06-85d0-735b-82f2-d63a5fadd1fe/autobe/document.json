{"operations":[{"specification":"This operation allows a system administrator (admin kind role in healthcare_platform_systemadmins table) to register their account on the healthcarePlatform. Registration is open only to authorized superuser email addresses for initial platform setup and is strictly logged for compliance. Upon successful registration, the system will create a healthcare_platform_systemadmins record, set initial profile and contact fields, and establish a linked local or federated authentication in healthcare_platform_user_authentications. The operation also provisions a starter session, issues a JWT token, and writes a complete audit log entry into healthcare_platform_audit_logs and security_incidents. This endpoint must enforce email uniqueness by querying for an existing healthcare_platform_systemadmins record with the specified email. When using SSO, the endpoint sets the provider, provider_key, and omits password_hash. For password-based logins, the endpoint requires a password with sufficient complexity, hashes it, and records it. Only the essential fields listed in the schema must be accepted, and all outputs must be compliant with audit and session security logging requirements. This endpoint must not expose password_hashes or internal credential information in any response.","authorizationType":"join","description":"This operation supports the registration (join) flow for superuser administrators on the healthcarePlatform using the healthcare_platform_systemadmins table. When a new superuser registers, the operation creates a healthcare_platform_systemadmins record with the required profile fields, links to a healthcare_platform_user_authentications record, and provisions an initial JWT session with centralized audit logging in healthcare_platform_audit_logs. Strict audit controls, unique email enforcement, and password best practices apply. The operation never exposes password hashes or internal authentication properties and is only available for platform-level onboarding. Only organizations listed as permissible for admin registration are supported, and registration attempts are fully traced for compliance. Related operations: /auth/systemAdmin/login, /auth/systemAdmin/refresh (for session and credential management). Resource: healthcare_platform_systemadmins table.","summary":"Register a system administrator user (healthcare_platform_systemadmins table) and provision authentication credentials","parameters":[],"requestBody":{"description":"Superuser admin registration data (including email, full_name, phone, password or SSO info) for platform onboarding. Use typeName: IHealthcarePlatformSystemAdmin.IJoin for credential and profile details.","typeName":"IHealthcarePlatformSystemAdmin.IJoin"},"responseBody":{"description":"Payload containing registered admin profile, issued JWT tokens, and basic authorization state for system onboarding session. Use typeName: IHealthcarePlatformSystemAdmin.IAuthorized.","typeName":"IHealthcarePlatformSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/systemAdmin/join","method":"post"},{"specification":"This operation allows a previously registered system administrator to authenticate (log in) on the healthcarePlatform. The endpoint validates the submitted credentials (email plus password, or SSO provider and key) by consulting the healthcare_platform_user_authentications record matching the submitted details. If valid, the API issues new JWT session tokens, logs the authentication event (with user, IP, agent in healthcare_platform_audit_logs), and rotates/updates authentication session info in healthcare_platform_auth_sessions. Failed login attempts are recorded in healthcare_platform_security_incidents and must rate-limit or lockout after repeated failure as per system policy. Responses never expose internal password hashes or transient credential fields, and successful logins perform a full session and audit trail entry linking the admin and device/browser. Only system administrator records with active status and non-deleted states are permitted. This is a platform-level login, available only to healthcare_platform_systemadmins.","authorizationType":"login","description":"Authenticate (login) a platform system administrator via local credentials or federated SSO (fields present in healthcare_platform_user_authentications). The operation verifies credentials, issues JWT tokens, provisions a new session using healthcare_platform_auth_sessions, and triggers audit-compliant logging in healthcare_platform_audit_logs and security_incidents. On authentication failure, the event is logged with context and may trigger rate limiting or lockdown based on security policy. Never exposes password hashes; only operates on active, non-deleted healthcare_platform_systemadmins. Related operations include /auth/systemAdmin/join (registration) and /auth/systemAdmin/refresh (token/session renewal). Only system-level administrator accounts are supported in this operation.","summary":"Login for system administrators (authenticate against healthcare_platform_systemadmins and manage JWT session)","parameters":[],"requestBody":{"description":"Login credentials (email/password or SSO provider/key) for platform system administrator. Use typeName: IHealthcarePlatformSystemAdmin.ILogin.","typeName":"IHealthcarePlatformSystemAdmin.ILogin"},"responseBody":{"description":"Auth result with admin user profile and active JWT tokens for session (typeName: IHealthcarePlatformSystemAdmin.IAuthorized)","typeName":"IHealthcarePlatformSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/systemAdmin/login","method":"post"},{"specification":"This operation allows a currently authenticated system administrator to refresh their JWT access and refresh tokens using a valid refresh token. The endpoint locates the corresponding healthcare_platform_auth_sessions record, verifies the session and token validity, and issues a new token pair if the session is still active and not revoked. The refresh event is recorded in healthcare_platform_audit_logs and triggers security monitoring for suspicious or excessive refresh behaviors. On success, the endpoint returns a new access token and secondary refresh token for continued session usage. On failure (expired, revoked), the event is fully logged, and the session is forcibly terminated per policy. At no time does the endpoint return internal hashes or session secrets. Target table for this operation is healthcare_platform_auth_sessions. Related APIs: /auth/systemAdmin/login (initial login), /auth/systemAdmin/join (registration), and all session termination or audit endpoints.","authorizationType":"refresh","description":"Refresh an active JWT access/refresh token session for system administrator using healthcare_platform_auth_sessions. The operation validates the provided refresh token against recorded session, issues new access/refresh tokens for continued session, and logs event in healthcare_platform_audit_logs. Session revocation, security monitoring, and failed/expired refresh attempts are managed per incident logging and system security policy. Never exposes password hash or secret session details. Only active, non-revoked sessions linked to healthcare_platform_systemadmins are valid for this operation.","summary":"Refresh system administrator session/token (healthcare_platform_auth_sessions)","parameters":[],"requestBody":{"description":"Refresh token operation for platform system administrator account. Provide valid refresh token matching healthcare_platform_auth_sessions. Use typeName: IHealthcarePlatformSystemAdmin.IRefresh.","typeName":"IHealthcarePlatformSystemAdmin.IRefresh"},"responseBody":{"description":"Payload including admin profile and renewed access/refresh tokens for session continuation. Use typeName: IHealthcarePlatformSystemAdmin.IAuthorized.","typeName":"IHealthcarePlatformSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/systemAdmin/refresh","method":"post"},{"specification":"This operation creates a new healthcare organization-level administrator account (organizationAdmin) and issues the initial JWT tokens for authentication. The endpoint is designed based on the 'healthcare_platform_organizationadmins' table, which includes fields for unique email, full name, and phone (optional). The account is created and associated with the organization via downstream assignment logic.\n\nThe operation handles MFA and credential setup if required by tenant policy. Email and organization verification take place, and audit entries are created in compliance with business rules. It supports SSO options if provider-specific configuration is allowed, but defaults to local credentials for regular admin self-service onboarding. Account creation triggers welcome notifications and administrative review as described in the requirements.\n\nSecurity: This endpoint must be public for initial onboarding or admin self-registration, but undergoes strict duplicate email and audit checks. It must ensure that administrative users cannot be accidentally duplicated for the same organization.\n\nRelated APIs: Organization-admin login and token refresh endpoints. All downstream administrative operations assume this successful onboarding and token issuance. Account recoveries, credential resets, and audit log review depend on successful registration.\n\nExpected behavior: On success, returns a payload containing the admin account info and the authorized tokens using the unified 'IHealthcarePlatformOrganizationAdmin.IAuthorized' response DTO. Errors include duplicate email, policy violation, credential setup failure, or organization validation failure.","authorizationType":"join","description":"This API operation allows for the creation and onboarding of new healthcare platform organization administrator accounts based on the 'healthcare_platform_organizationadmins' table. It supports account self-registration or admin-assisted onboarding by accepting required fields such as email, full_name, and optional phone number. All email addresses must be unique and are verified in real-time against the database, which blocks duplicate organizations or re-use of prior admin accounts (soft-deleted status is checked).\n\nUpon account creation, this operation sets up MFA or SSO workflows as required by tenant policy, and generates secure credentials for the administrator. All registration attempts are audited in the 'healthcare_platform_audit_logs' table for compliance, including remote IP, user agent, and the organization context based on input mapping or downstream configuration.\n\nThe organizationAdmin's assignment to an organization is handled by downstream workflows (see assignment APIs), but the administrator record itself is provisioned and authorized here. If organization-specific configuration (timezone, language) exists, the system will use it for notifications and display settings.\n\nSecurity: Open to external users for onboarding but implements brute-force and duplicate-prevention controls as mandated by audit rules. Triggers welcome notification and logs full onboarding event. Strict audit and MFA handling ensure compliance with HIPAA and SOC 2.\n\nRelated Operations: Organization administrator login, session refresh, account recovery, and downstream assignment endpoints must all reference the output of this operation. Token issuance follows JWT standards, and onboarding-related errors are tracked for compliance review.\n\nOperating on: 'healthcare_platform_organizationadmins' table and creating related audit records.","summary":"Register a new healthcare platform organization administrator. Entry in 'healthcare_platform_organizationadmins', onboarding and JWT issuance. ","parameters":[],"requestBody":{"description":"Payload to register as an organization administrator (email, full_name, optional phone).","typeName":"IHealthcarePlatformOrganizationAdmin.IJoin"},"responseBody":{"description":"Organization admin profile plus JWT/refresh tokens and authorization context.","typeName":"IHealthcarePlatformOrganizationAdmin.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/organizationAdmin/join","method":"post"},{"specification":"This operation issues JWT access tokens for an existing organization administrator. The endpoint processes login by verifying the administrator's email and password against fields in the 'healthcare_platform_organizationadmins' and 'healthcare_platform_user_authentications' tables (password_hash for local auth, or federated provider workflow).\n\nAuthentication attempts are checked for credential correctness, user status (not soft-deleted), and organization assignment if multi-tenant logic applies. Audit entries log login attempt details, and MFA or password rotation is enforced based on policy and organization config. Success returns access/refresh tokens and authorization context; failures include explicit user/account lockout and logging for repeated error patterns.\n\nSecurity: This endpoint is public but implements brute-force, timing, and lockout security measures. Downstream session creation and session management workflows depend on successful login here. Credentials are hashed and compared per business logic.\n\nRelated APIs: Organization admin registration and token refresh, session list/revoke, audit log endpoints. All privileged operations require tokens generated here.\n\nExpected behavior: On successful login, returns JWT tokens using the 'IHealthcarePlatformOrganizationAdmin.IAuthorized' DTO, which includes user, role, and session metadata required for subsequent admin operations.","authorizationType":"login","description":"This API operation authenticates an existing organization administrator by accepting an email and password. It references the 'healthcare_platform_organizationadmins' and 'healthcare_platform_user_authentications' tables to find the admin user, check their password (password_hash), and confirm account is active (not soft-deleted).\n\nOn successful authentication, this endpoint issues JWT access and refresh tokens. The session and login events are tracked via 'healthcare_platform_auth_sessions' and audited for compliance. Account lockout and brute-force prevention are enforced based on failed attempts; events are logged in the audit log table. MFA or SSO workflows are executed if required by organizational policy and configuration.\n\nSecurity: Open to external login, but implements strong validation and audit logging for all authentication attempts. Blocked and suspended accounts trigger compliance and admin notifications.\n\nRelated: Organization administrator registration, token/session refresh, account recovery. All subsequent role-based admin actions rely on valid tokens issued here. MFA and SSO extensions depend on business and organization policy settings.\n\nDatabase tables: 'healthcare_platform_organizationadmins', 'healthcare_platform_user_authentications', 'healthcare_platform_auth_sessions', and 'healthcare_platform_audit_logs'.","summary":"Authenticate organization administrator and issue access tokens. Entry and validation for 'healthcare_platform_organizationadmins','healthcare_platform_user_authentications'.","parameters":[],"requestBody":{"description":"Credentials for organization admin login (email, password).","typeName":"IHealthcarePlatformOrganizationAdmin.ILogin"},"responseBody":{"description":"Authorized organization admin session info plus JWT/refresh tokens.","typeName":"IHealthcarePlatformOrganizationAdmin.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/organizationAdmin/login","method":"post"},{"specification":"This operation issues new JWT access/refresh tokens for an existing and valid organization administrator session. It utilizes a valid refresh token to authenticate the session against the 'healthcare_platform_auth_sessions' table, and ensures that the associated administrator (in 'healthcare_platform_organizationadmins') has not been deprovisioned or soft-deleted.\n\nThe endpoint checks expiration (expires_at), revocation (revoked_at), and compliance state for the session record. Token refresh is only allowed under compliant conditions (active, non-expired, non-revoked). The operation also logs the token refresh event to the audit log with IP and device information, and enforces session expiration and forced logout as needed.\n\nSecurity: Token refresh is protected under established JWT refresh protocols and subject to security timing, audit, and device fingerprint validation. Post-refresh events trigger session update and audit mechanisms in accordance with platform compliance policy.\n\nRelated APIs: Organization admin login, registration, and session revocation endpoints. All organization-admin API operations rely on valid up-to-date tokens from this process.\n\nExpected output: Payload includes the updated session and administrator context using the 'IHealthcarePlatformOrganizationAdmin.IAuthorized' response DTO. Errors are issued for expired, revoked, or malicious refresh attempts and are fully logged for compliance monitoring.","authorizationType":"refresh","description":"This operation refreshes authentication tokens (JWT/refresh) for an existing organization administrator session. It requires a valid, unexpired refresh token as implemented by the 'healthcare_platform_auth_sessions' table and verifies that the associated 'healthcare_platform_organizationadmins' record remains active and non-deleted.\n\nThe refresh process checks session validity (not expired, not revoked, not soft-deleted), updates audit logs with remote device/IP, and enforces logout on policy violation or account change. Full audit details are stored in the 'healthcare_platform_audit_logs' table as required by HIPAA and SOC 2.\n\nSecurity: Restricted to clients with a valid refresh token. Token/session rotation, forced expiration, and compliance lockout are triggered on violations or account updates.\n\nRelated: Organization admin login, onboarding, and admin session revocation. All subsequent admin API calls depend on refreshed tokens. Errors and session status changes are captured in audit streams for regulatory reporting.\n\nDatabase reference: 'healthcare_platform_auth_sessions', 'healthcare_platform_organizationadmins', 'healthcare_platform_audit_logs'.","summary":"Refresh JWT access and refresh tokens for organization admin session. Controls session timeout and compliance constraints.","parameters":[],"requestBody":{"description":"Payload containing the refresh token for session renewal.","typeName":"IHealthcarePlatformOrganizationAdmin.IRefresh"},"responseBody":{"description":"Updated organization admin profile plus JWT tokens and session metadata.","typeName":"IHealthcarePlatformOrganizationAdmin.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/organizationAdmin/refresh","method":"post"},{"specification":"This operation handles new registration (join) for the 'departmentHead' role in the healthcarePlatform system, issuing JWT tokens upon successful creation. It is specifically aligned with the 'healthcare_platform_departmentheads' table. The endpoint accepts required information for department head creation (including unique email, full legal name, and optionally phone). It provisions department-level admin accounts, subject to organization and audit requirements. The join endpoint ensures no duplicate emails are used, mandates valid business contact information, and on success issues access and refresh tokens as per platform security policy, storing relevant metadata for audit and compliance tracking. Security: Public registration endpoint, but subject to potential business verification (out of band). Integration: Onboarded users are further subject to department assignment workflows, and business logic for credential verification (by HR or compliance) may follow registration. This API integrates with platform-wide audit and consent systems as described in the business documentation, and error conditions are clearly logged and actionable.","authorizationType":"join","description":"Create a new department head account and issue authorization tokens. This onboarding operation is for users who will function as 'departmentHead' within an organization. It creates and persists a unique department head entity in the healthcare_platform_departmentheads table. Email must be unique, full name required. Upon success, returns JWT tokens using the IHealthcarePlatformDepartmentHead.IAuthorized DTO. Security audits are triggered for all join operations per compliance policy, and all data is subject to PHI and business audit bounds. This operation is essential for granting initial administrative access for a department context. Related operations include login, refresh, and role assignment endpoints. Error conditions: duplicate email, missing required fields, or invalid business data will result in a clear business error and audit log entry. Post-registration workflows may require additional verification (e.g., employment/credential validation) by organizational policy.","summary":"Register new department head (healthcare_platform_departmentheads) and issue JWT tokens.","parameters":[],"requestBody":{"description":"Department head registration payload (email, full name, optional phone) per IHealthcarePlatformDepartmentHead.IJoinRequest DTO. Required for initial administrator onboarding. All fields must comply with business input rules and be subject to audit policy.","typeName":"IHealthcarePlatformDepartmentHead.IJoinRequest"},"responseBody":{"description":"Authorized department head DTO including issued JWT tokens and basic profile, following IHealthcarePlatformDepartmentHead.IAuthorized. Returned on successful registration.","typeName":"IHealthcarePlatformDepartmentHead.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/departmentHead/join","method":"post"},{"specification":"This operation handles authentication for existing department head users in the healthcarePlatform, corresponding to records in the 'healthcare_platform_departmentheads' table. Credentials (typically email/password, or SSO if configured) are validated against stored user authentication records. Upon successful login, access and refresh JWT tokens are issued for secure session management. All login attempts (successes and failures) are logged in platform audit and security incident tables. This login endpoint is a critical entry-point for administrative functions at the department scope and is tightly integrated with business security policies (rate limiting, lockout, MFA if configured downstream). The login workflow is subject to compliance monitoring (HIPAA, SOC 2), alerting on abuse or repeated failure patterns, and feeds into session and risk management subsystems. This endpoint is typically used in conjunction with join and refresh authentication operations for full account lifecycle management.","authorizationType":"login","description":"Authenticate a department head (healthcare_platform_departmentheads) with credentials to issue JWT tokens. This operation validates supplied login data (email and password or SSO credentials) against system authentication tables. On success, returns access and refresh JWTs using the IHealthcarePlatformDepartmentHead.IAuthorized DTO. Failed logins, lockouts, or suspicious behavior trigger audit log and incident workflows. This is a core step in department-level administrative access. Errors: invalid credentials, account lockout, or policy violations result in business error and security incident logs. Related operations: join (for registration), refresh (for token renewal), logout or revoke flows where required.","summary":"Login existing department head and issue session tokens (healthcare_platform_departmentheads).","parameters":[],"requestBody":{"description":"Login credentials payload (email/password or SSO assertion) per IHealthcarePlatformDepartmentHead.ILoginRequest representation. Required for authentication. Validates that the email exists and credentials are correct. Compliant with platform-wide authentication rules.","typeName":"IHealthcarePlatformDepartmentHead.ILoginRequest"},"responseBody":{"description":"Authorized department head with JWTs and relevant profile (IHealthcarePlatformDepartmentHead.IAuthorized).","typeName":"IHealthcarePlatformDepartmentHead.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/departmentHead/login","method":"post"},{"specification":"This operation refreshes JWT tokens for a department head (healthcare_platform_departmentheads), based on a valid issued refresh token. Supports secure session continuation and rotation of access credentials per policy requirements. The 'refresh' endpoint validates the provided refresh token against issued session tokens, ensures the session is active (not revoked/suspended), and issues a new access (and possibly refresh) token for session continuity. On success, the operation updates session metadata (audit, last used, IP/device) and aligns with compliance requirements for audit, security monitoring, and token expiry policy. Error handling includes invalid or expired token, policy violation, or revoked sessions—all cause no new token issuance and generate security incident/audit log entries. This function is critical for enabling frictionless but secure long-lived department-level admin sessions in production.","authorizationType":"refresh","description":"Refresh JWT tokens for an authenticated department head session (healthcare_platform_departmentheads). Requires valid refresh token. Issues new access/refresh tokens if session is active. Supports seamless and secure continuation of department admin workflows subject to compliance and session-lifetime policy. All refresh attempts and outcomes are logged per business audit procedures. Related operations: login, logout/session revoke, and join for full account lifecycle. Errors: invalid/expired/revoked tokens result in error and audit log.","summary":"Department head JWT token refresh (healthcare_platform_departmentheads) via valid refresh token.","parameters":[],"requestBody":{"description":"Refresh token submission DTO (IHealthcarePlatformDepartmentHead.IRefreshRequest) for department head JWT refresh. Contains issued refresh token and (optionally) device/session context as per business session management policies.","typeName":"IHealthcarePlatformDepartmentHead.IRefreshRequest"},"responseBody":{"description":"Authorized department head DTO with newly issued tokens (IHealthcarePlatformDepartmentHead.IAuthorized) upon successful refresh.","typeName":"IHealthcarePlatformDepartmentHead.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/departmentHead/refresh","method":"post"},{"specification":"Defines the registration (join) operation for the 'medicalDoctor' member role of the healthcarePlatform system. This endpoint allows doctors to create a new account using their business email and credential details, issues an initial JWT token set, and onboards them for full clinical access. The request body must collect required fields for medical doctors, such as email, full_name, npi_number, and password. Validation logic confirms required NPI and unique email. Account status follows onboarding business rules. Tokens are issued on success, audit trails recorded per compliance requirements. Associated with the 'healthcare_platform_medicaldoctors' table in Prisma. This is a fundamental operation for medical staff role onboarding and should reference the schema field comments, business rules, and compliance documentation. Errors include duplicate email/NPI, weak password, or incomplete registration fields. This operation is functionally dependent on the existence of email and NPI fields in the schema, both of which are present.","authorizationType":"join","description":"Registers a new licensed medical doctor as a system user, validates all provided business credentials (email and NPI number), and issues an initial set of JWT access and refresh tokens for secure platform access. The registration process records audit events, creates a user record in 'healthcare_platform_medicaldoctors', and triggers credential verification and compliance workflows. Only doctors with valid, unique business email and NPI are onboarded; errors trigger actionable client feedback per business rules. All operation details and constraints are derived from the Prisma schema and business requirements for healthcare member roles.","summary":"Create/register new medical doctor account and issue initial tokens (healthcare_platform_medicaldoctors).","parameters":[],"requestBody":{"description":"Doctor registration/credential data for onboarding.","typeName":"IHealthcarePlatformMedicalDoctor.IJoin"},"responseBody":{"description":"Token and authorized session with doctor role onboarding outcome.","typeName":"IHealthcarePlatformMedicalDoctor.IAuthorized"},"authorizationRole":"medicalDoctor","name":"join","path":"/auth/medicalDoctor/join","method":"post"},{"specification":"Defines the login operation for the 'medicalDoctor' member role in the healthcarePlatform system. This endpoint processes credential authentication for licensed medical doctors using their unique business email and password. On successful authentication, the API issues new JWT access and refresh tokens for system access. The operation is tightly bound to the Prisma healthcare_platform_medicaldoctors table and its authentication flows, including hash verification, login audit recording, and credential review per compliance rules. Email/password pair must match a registered record; errors are returned for invalid credentials or disabled accounts. Strict authentication timing, account status, and audit constraints as per Prisma field design. This provides the primary workflow for member role (doctor) login.","authorizationType":"login","description":"Authenticates a registered medical doctor by verifying provided email and password credentials against the 'healthcare_platform_medicaldoctors' schema (ensuring the doctor account is active, email matches, and password hash is valid). On success, issues new JWT tokens and records all required login audit events. Returns access/refresh tokens using DTO response specification. Errors include invalid credentials, suspended accounts, or failed compliance checks. This operation forms part of the strict member login flow documented for the healthcarePlatform medical role.","summary":"Authenticate/login (issue tokens) for a medical doctor (healthcare_platform_medicaldoctors).","parameters":[],"requestBody":{"description":"Login credentials for doctor authentication (email, password).","typeName":"IHealthcarePlatformMedicalDoctor.ILogin"},"responseBody":{"description":"Doctor authenticated session and tokens for system access.","typeName":"IHealthcarePlatformMedicalDoctor.IAuthorized"},"authorizationRole":"medicalDoctor","name":"login","path":"/auth/medicalDoctor/login","method":"post"},{"specification":"Defines the refresh token operation for the 'medicalDoctor' member role in the healthcarePlatform system. This endpoint allows an authenticated medical doctor to use a valid refresh token (previously issued on login/join) to obtain a new JWT access/refresh token pair. The endpoint validates the presented refresh token's signature, assignment, and revocation status against the Prisma auth session records. On successful validation, it issues new tokens and records an audit trail entry. This operation is essential for stateless session renewal and is directly dependent on the 'healthcare_platform_auth_sessions' logic as referenced in the schema. Error handling includes expired, revoked, or malformed refresh tokens. Only valid/assigned tokens for medicalDoctor users are accepted.","authorizationType":"refresh","description":"Allows an authenticated medical doctor to exchange a valid and unexpired refresh token for a new pair of JWT tokens, prolonging authenticated platform access. The Prisma database table 'healthcare_platform_auth_sessions' is used to validate token status, assignment, and session context before issuing new tokens. Operation records audit logs for compliance. This endpoint is fundamental to secure session management for the doctor/member role within the healthcarePlatform system. Errors are returned for invalid, expired, or revoked tokens.","summary":"Refresh JWT tokens for medical doctor session (healthcare_platform_auth_sessions).","parameters":[],"requestBody":{"description":"Request a new session using an authorized refresh token.","typeName":"IHealthcarePlatformMedicalDoctor.IRefresh"},"responseBody":{"description":"New authorized session/tokens for the medical doctor.","typeName":"IHealthcarePlatformMedicalDoctor.IAuthorized"},"authorizationRole":"medicalDoctor","name":"refresh","path":"/auth/medicalDoctor/refresh","method":"post"},{"specification":"This operation provides a registration endpoint for nurse users (clinical staff) of a healthcare enterprise platform. It enables nurses to sign up for a new account within the system, referencing fields such as email, full_name, phone, and assignment to organization/department from the healthcare_platform_nurses table of the Prisma schema. This endpoint is for initially creating a nurse user entity and issuing initial JWT tokens so that nurse staff can access relevant workflows and permission scopes immediately after onboarding. The endpoint is public and does not require prior authentication. It enforces business logic such as unique email, capturing account creation metadata (created_at, updated_at), and defaulting status fields for assignment to 'active'. Confirmation and credential setup are managed according to organizational workflow but must reference real schema fields only. The response payload—as per business rules for authentication operations—must return an access token, refresh token, and nurse user descriptor as defined in schema. This operation MUST NOT reference soft-delete behaviors beyond the nullable deleted_at field present in the schema since account activation/deletion is managed separately; no profile edits or business preferences are allowed via this route (see separate APIs for updates).","authorizationType":"join","description":"This API endpoint allows the registration of a nurse (clinical staff) user within the healthcarePlatform service. The operation is based on the healthcare_platform_nurses Prisma model, which includes fields such as email (unique business email), full_name (legal name), phone (optional contact number), created_at, updated_at, and deleted_at for soft deletion. Upon successful registration, a new nurse record is created and initial authentication tokens (JWT) are provided.\n\nThis endpoint strictly enforces the uniqueness of the nurse's email and ensures essential fields are captured, with timestamps for regulatory compliance. Immediately after creation, the nurse receives an access token and refresh token for system login and workflow participation, utilizing the available fields within the nurse schema. The process reflects organizational policy for nurse onboarding and handed-off assignment to departments or organizations is tracked via separate assignment tables and not handled directly here.\n\nSecurity considerations include validation that the provided email is business-eligible and does not collide with existing active nurse accounts. The password or credential is managed per organization’s policy and may be provisioned at a later step, but must correspond to nurse schema fields and not infer non-existent schema attributes. Permission grants are automatic for the nurse role as defined in RBAC, constrained by Prisma schema enforcement.\n\nOther operations that may be needed in the nurse onboarding process (e.g., license verification, department assignment) are handled by separate APIs. This join endpoint is exclusively for creating the initial nurse account; audit, update, and deletion flows are not in scope here but are enforced via soft deletion using the deleted_at column.\n\nExpected behavior and error handling includes clear messaging on duplicate email, required field omission, and processing of business logic errors. Related authentication operations such as login and token refresh are separately implemented, and profile management is handled via the nurse update endpoint.","summary":"Register a new nurse account and issue authentication tokens (relates to healthcare_platform_nurses Prisma table).","parameters":[],"requestBody":{"description":"Payload required for nurse registration including fields email, full_name, phone (if present) referencing nurse schema.","typeName":"IHealthcarePlatformNurse.IJoin"},"responseBody":{"description":"Authenticated session and profile information for nurse user, including JWT tokens and user descriptor, following DTO response convention for auth operations.","typeName":"IHealthcarePlatformNurse.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/nurse/join","method":"post"},{"specification":"This API endpoint enables nurse users—members of clinical staff in a healthcare enterprise platform—to securely authenticate (log in) and obtain session tokens for accessing the system. It is based on the healthcare_platform_nurses model in Prisma, using the email and credential (password, or federation token/SSO) fields managed via the healthcare_platform_user_authentications table. The operation strictly performs credential validation without exposing any sensitive details, returning JWT tokens and nurse user descriptors per schema. It is a public endpoint: credentialed access is required, but no prior authentication is needed to hit this endpoint. Logins are audited in the associated user tables, and only active nurse account records (deleted_at is null) are valid for authentication. On successful login, business logic provides token pair (access, refresh) and nurse profile payload strictly conforming to existing database fields. This operation does NOT handle password resets, MFA verification, or account recovery—each covered by separate endpoints if supported in schema.","authorizationType":"login","description":"This API operation allows a nurse (clinical staff) user to log in to the healthcarePlatform system and receive authentication tokens. Login is performed using fields defined in the healthcare_platform_nurses and healthcare_platform_user_authentications tables (email for username, credential fields managed in the linked user authentication table). The operation enforces that only active nurses (deleted_at is null) with valid authentication credentials can login, referencing real Prisma schema fields only.\n\nImplementation details include validation of the nurse's email via the Prisma model and matching of submitted credentials via the user authentication provider, referencing the provider (local, SSO, etc.) and provider key. JWT and refresh tokens are issued for use in subsequent authenticated workflows and permissioned operations, linking session context to the authenticated nurse record. The nurse's record status and account creation/updates are reflected as per schema.\n\nBusiness context reflects that nurse logins must be fully auditable and comply with all organizational login policy regarding credential validity, unique user identity, and regulatory audit requirements. Login attempts against soft-deleted (deleted_at not null) or invalidated accounts are denied with explicit error reporting, and failed attempt outcomes are tracked externally for security.\n\nSecurity considerations are driven by compliance, ensuring that no non-existent schema fields (such as non-configured multi-factor authentication) are referenced. Token expiry, revocation, and related credential handling are deferred to session/token lifecycle operations. Audit trails are enforced via companion audit table entries in the broader enterprise system.\n\nRelated operations include registration (join), token refresh, and password reset (if available), which are separated per schema constraints. This endpoint does NOT implement MFA by default; password resets, recovery, or device binding are handled by other endpoints when fields exist.","summary":"Authenticate nurse user and issue tokens using nurse schema and authentication record (healthcare_platform_nurses).","parameters":[],"requestBody":{"description":"Login payload referencing nurse email/credential fields as in nurse schema and authentication table.","typeName":"IHealthcarePlatformNurse.ILogin"},"responseBody":{"description":"Authenticated nurse session/profile descriptor including JWTs and nurse DTO fields.","typeName":"IHealthcarePlatformNurse.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/nurse/login","method":"post"},{"specification":"This endpoint enables authenticated nurse users (clinical staff) to refresh their JWT authentication tokens using a valid refresh token. It is based on the healthcare_platform_nurses (user descriptor) and healthcare_platform_auth_sessions (token session and refresh_token) models in the schema. The operation requires a valid, unexpired refresh token linked to an active (not soft-deleted) nurse user account. The endpoint is public in the sense that it does not require prior authentication, but access is restricted by the validity of the refresh token provided. If the token is valid, it will issue a new pair of JWT and refresh tokens and return the current authenticated nurse user descriptor per schema. If the refresh token is invalid, expired, or does not map to an active/undeleted nurse, it returns an explicit error. Business logic ensures that refresh logic references only actual schema fields and does not infer extra behaviors (such as session listing/revocation or MFA prompts). No soft-delete or audit parameters are handled directly here; those are covered by other endpoints and the session/audit infrastructure.","authorizationType":"refresh","description":"This API operation refreshes an existing authenticated session for a nurse (clinical staff user), returning new JWT and refresh tokens for continued authenticated access to the healthcarePlatform system. The operation references healthcare_platform_nurses (for nurse user context) and healthcare_platform_auth_sessions (for refresh token lifecycle and audit), verifying that the provided refresh token corresponds to an active nurse account (deleted_at is null) per the Prisma schema.\n\nThe implementation checks the validity and expiry of the refresh token using only fields from the auth_sessions schema, performing error reporting for invalid or mismapped tokens. If validation succeeds, it issues new tokens and returns the latest nurse descriptor, reflecting updated fields as per schema (created_at, updated_at, etc.). Token refresh is required for long-running or session-limited workflows as per business rule, but does not alter or update underlying nurse user records or audit logs directly here.\n\nThis endpoint integrates with the overall authentication workflow for nurse users, enabling continued secure access without forcing re-login (as long as the session is valid and user is not soft-deleted). Successful flows are fully covered by current schema; failed or expired refresh operations are explicitly denied, referencing only those schema fields that exist.\n\nSecurity and audit logic is managed by other infrastructure; this endpoint does not add fields or logic for session termination or multi-device handling. Token lifetimes, audit events, and nurse user attribute integrity are covered by external workflows. Soft-delete (deleted_at) status must be null for account to be eligible for token refresh.\n\nRelated authentication operations for session management, login, or password reset (if implemented) are handled via separate endpoints, as per schema fields.","summary":"Refresh nurse authentication session (issue new JWTs) using nurse schema and session token (healthcare_platform_nurses, healthcare_platform_auth_sessions).","parameters":[],"requestBody":{"description":"Refresh token request referencing nurse session and refresh token fields only.","typeName":"IHealthcarePlatformNurse.IRefresh"},"responseBody":{"description":"Authenticated nurse session/profile descriptor including re-issued JWTs and nurse DTO fields.","typeName":"IHealthcarePlatformNurse.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/nurse/refresh","method":"post"},{"specification":"This endpoint implements the registration (join) process for the technician role for the healthcarePlatform system. It creates a new medical technician account within the system, handling storage of technical account details such as email, full legal name, phone (optional), and initializes requisite organizational links for diagnostic and technical workflows. On successful creation, a secure JWT access token and session (with related healthcare_platform_auth_sessions and healthcare_platform_user_authentications entries) are issued, allowing the new technician to login and access role-specific application areas immediately. The endpoint ensures that the technician's information is auditable, and the process is fully logged for compliance purposes. All referenced fields are directly supported by the healthcare_platform_technicians table (email, full_name, phone, created_at). Security and audit logic connects with the authentication tables for credential and session management. Any errors in registration (such as duplicate emails) generate a descriptive response. This endpoint is a critical entrypoint for onboarding technical staff (e.g., radiology, lab techs) and is the foundation for subsequent authentication workflows. Related endpoints: /auth/technician/login, /auth/technician/refresh.","authorizationType":"join","description":"This endpoint is used to register a new medical technician account as defined by the healthcare_platform_technicians schema. The purpose is to enable new technical users to join the healthcarePlatform, which then issues the initial JWT tokens for system access. The operation requires, at minimum, a unique email and full legal name (matching organizational identity requirements), with business phone number optional but supported for contact and MFA.\n\nThe operation interacts with the healthcare_platform_technicians table, which holds all technical user information (including email, full_name, phone, created_at), and writes audit events to the authentication-related tables such as healthcare_platform_user_authentications and healthcare_platform_auth_sessions to support secure login and token management.\n\nUpon successful registration, the endpoint issues an IHealthcarePlatformTechnician.IAuthorized response, which encapsulates both technician profile details and JWT access/refresh tokens necessary for first login and subsequent API access. This supports multi-tenant organizational onboarding for new staff and ties technical assignments to platform-wide tracing and compliance.\n\nSecurity considerations include strong validation of input values, prevention of duplicate accounts (unique email enforced), and creation of a full audit trail for compliance review. Registration errors due to business logic (duplicate emails, invalid data) are handled via descriptive error responses.\n\nThis join endpoint is typically used before calling /auth/technician/login (for subsequent sign-in) and /auth/technician/refresh (for access token renewal). The registration event triggers full audit logging of all created resources, tightly coupling with organizational technical onboarding flows and regulatory audit requirements.","summary":"Register (join) a new medical technician (technician) and issue authorized JWT tokens, using healthcare_platform_technicians table.","parameters":[],"requestBody":{"description":"Registration info for a new technician account","typeName":"IHealthcarePlatformTechnician.IJoin"},"responseBody":{"description":"Authorized session, technician user info, and JWT tokens","typeName":"IHealthcarePlatformTechnician.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/technician/join","method":"post"},{"specification":"Authenticate a medical technician using the login workflow for healthcarePlatform's authentication system. Validates credential information (typically email and password, but may support SSO in production) against records in healthcare_platform_technicians and associated healthcare_platform_user_authentications. Upon successful validation, records login event, issues new JWT access and refresh tokens, and creates a session record in healthcare_platform_auth_sessions with session security metadata (user agent, IP address, issued/expires). Errors for invalid credentials or disabled accounts are handled with descriptive business logic. Audit trail is written for every login attempt. Essential for role-based access enforcement and compliance tracking for diagnostic/technical staff.","authorizationType":"login","description":"This operation allows existing technician users to log in and receive new JWT tokens, as defined by the healthcare_platform_technicians and authentication schema. The workflow validates user credentials (e.g., email/password), checks the technician's status, and, on success, updates last_authenticated_at in healthcare_platform_user_authentications. It also records the session in healthcare_platform_auth_sessions for security and auditing.\n\nAll fields referenced (email, password hash, status, session tokens) are directly present in the schema tables relevant to technician authentication flows.\n\nRole-specific integration ensures that only users with technician privileges are authorized via this endpoint. Sessions are organization- and user-type scoped so that technical workflow boundaries are enforced.\n\nSecurity measures include timing attack mitigation, credential hashing verification, and multi-factor triggers where policy is enabled via healthcare_platform_user_mfa_factors. Failed attempts are notified via access logs and, after repeated failures, may trigger escalation or lockouts (as tracked in healthcare_platform_security_incidents).\n\nThis endpoint directly supports business flows for technical staff access and must be kept under strict operational audit as required by regulatory standards. Used together with /auth/technician/join for registration and /auth/technician/refresh for token renewal.","summary":"Authenticate and issue tokens for a technician (healthcare_platform_technicians table).","parameters":[],"requestBody":{"description":"Credential info (login) for medical technician","typeName":"IHealthcarePlatformTechnician.ILogin"},"responseBody":{"description":"Authorized session, technician profile, and JWT tokens","typeName":"IHealthcarePlatformTechnician.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/technician/login","method":"post"},{"specification":"Refresh access and refresh JWT tokens for an authenticated technician. Validates the supplied refresh token (associated with healthcare_platform_auth_sessions and technician's session). On success, returns new authorized tokens, keeping user context and security policies intact. Audits session update in healthcare_platform_auth_sessions and logs all critical events. Used to maintain seamless authenticated access without requiring a full login as long as session is valid and not revoked (revoked_at remains null). Handles errors for expired/revoked tokens according to business and regulatory requirements. Dependencies: successful prior login/join. Audit logging is handled in conjunction with the authentication session model.","authorizationType":"refresh","description":"This endpoint enables technician accounts to refresh their access and refresh JWT tokens for continued authorized access to the healthcarePlatform. The API validates the submitted refresh token against active session records as defined in healthcare_platform_auth_sessions (where revoked_at is null, expires_at not passed, and tied to a valid technician user_id and user_type).\n\nOn successful validation, the operation issues new access and refresh tokens—using the IHealthcarePlatformTechnician.IAuthorized response shape for seamless session continuation. Business and security audit trails are maintained, and each issuance is appended to authentication audit.\n\nSecurity considerations: Each refresh is subject to validation against revocation, session expiry, and role boundary. If the session is expired or revoked, the response indicates session invalidation. All refresh attempts are logged for future audit and anomaly review.\n\nThis endpoint is meant to be used by technician actors after successful /auth/technician/join or /auth/technician/login actions (as refresh to their authorized session/tokens). Together these support robust SSO and token rotation support per technician actor within the production environment.","summary":"Refresh authorized tokens for technician (IHealthcarePlatformTechnician.IAuthorized).","parameters":[],"requestBody":{"description":"Refresh token info for technician session","typeName":"IHealthcarePlatformTechnician.IRefresh"},"responseBody":{"description":"Authorized tokens and session for technician","typeName":"IHealthcarePlatformTechnician.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/technician/refresh","method":"post"},{"specification":"Create a new receptionist account and issue initial JWT tokens upon registration for the healthcarePlatform service. This operation targets the 'healthcare_platform_receptionists' table. It is available to public users (no authentication required). Only the fields defined in the schema—such as email, full_name, phone (optional), and timestamps—are accepted for receptionist account creation. On successful registration, a JWT access/refresh token pair is issued, as required for authenticated use within the receptionist scope.\n\nAccess is restricted by business rules to prevent registration of duplicate emails. All actions are logged for audit and compliance. Upon registration, receptionist is assigned member-level privileges for appointment management and related administrative workflows.  Failed registration attempts (email already in use, etc.) are responded to with appropriate error messages and audit logs. Password and credential handling is managed via cross-table logic in 'healthcare_platform_user_authentications'.\n\nThe 'receptionist' role is subject to RBAC constraints as configured by the organization's administrator and cannot self-elevate permissions. This operation should be used in workflows where external users are being onboarded either via self-registration or admin invitation. Follow-up security setup (e.g., MFA) is handled by subsequent endpoints.\n\nThis operation is often used in combination with login and token refresh endpoints to provide full authentication workflow for the receptionist role.","authorizationType":"join","description":"This endpoint allows a new receptionist user to register an account on the healthcarePlatform by providing required fields such as email and full_name. Registration is subject to unique email enforcement and triggers creation of a new receptionist entity in the 'healthcare_platform_receptionists' table. Upon successful registration, a JWT token pair (access and refresh) is issued, enabling authenticated participation in appointment management and non-clinical administrative workflows. \n\nPasswords and initial authentication credentials are written to the cross-entity 'healthcare_platform_user_authentications' table. Regulatory compliance is enforced via audit trails, and RBAC policies ensure the new receptionist is granted only member-level, logistics-related permissions. Duplicate email validation is strictly enforced. \n\nThis endpoint is accessible without authentication but is audited in compliance logs. It integrates with subsequent security operations (login, password reset, MFA enablement) required for production deployment. \n\nSecurity is enforced according to organizational policies and best practices for healthcare data onboarding. Failed registrations (e.g., duplicate, missing required fields) are returned with specific error codes and do not result in persistent entities. \n\nThis endpoint should be paired with the login and refresh endpoints to enable a complete authentication lifecycle for receptionists.","summary":"Register a new receptionist and issue initial JWT tokens (healthcare_platform_receptionists)","parameters":[],"requestBody":{"description":"Receptionist registration data for account creation","typeName":"IHealthcarePlatformReceptionist.ICreate"},"responseBody":{"description":"Authorized receptionist session with JWT issued","typeName":"IHealthcarePlatformReceptionist.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/receptionist/join","method":"post"},{"specification":"Authenticate an existing receptionist account and issue JWT tokens for secure platform access. This operation targets the 'healthcare_platform_receptionists' table, verifying provided credentials (email/password) against the stored password_hash in the 'healthcare_platform_user_authentications' table. The endpoint is public for credential validation; upon successful login, returns an access and refresh JWT pair for receptionist-authenticated session use.\n\nUpon login, failed authentication attempts are logged for security and compliance audits, and repeated failures may trigger incident workflows. Only approved, active receptionist accounts may be authenticated— those marked as deleted_at are rejected. Role privileges are enforced in accordance with organizational, department, and RBAC configuration. On success, the authenticated session context is created and tracked in 'healthcare_platform_auth_sessions'.\n\nThis operation is always used in coordination with receptionist registration (join) and token refresh endpoints, and should be protected by throttling/rate limits per healthcarePlatform security policy. MFA challenges may be invoked via separate endpoints based on organization configuration.","authorizationType":"login","description":"This endpoint allows a receptionist with an existing account to authenticate to the healthcarePlatform using credentials stored in the 'healthcare_platform_receptionists' and 'healthcare_platform_user_authentications' tables. It verifies the provided password or external authentication provider and, on success, returns a JWT access/refresh token pair for use in member-level administrative workflows.\n\nAuthentication is denied for inactive or deleted receptionist accounts, and all failed attempts are logged for compliance and security monitoring. Credentials are validated against records with strict enforcement of account status, RBAC policies, and audit trail requirements. \n\nRepeated failed logins may trigger account lockout or security incidents according to the organization's security posture.\n\nUse this endpoint as part of the core receptionist sign-in flow, typically following initial 'join' registration. Pair with the refresh endpoint to enable seamless session continuity.","summary":"Authenticate a receptionist and issue JWT tokens (healthcare_platform_receptionists)","parameters":[],"requestBody":{"description":"Receptionist login credential data","typeName":"IHealthcarePlatformReceptionist.ILogin"},"responseBody":{"description":"Authorized receptionist session with JWT issued","typeName":"IHealthcarePlatformReceptionist.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/receptionist/login","method":"post"},{"specification":"Refresh JWT access tokens for an authenticated receptionist. This operation extends a receptionist's authenticated session by validating the refresh token against the 'healthcare_platform_auth_sessions' table, ensuring the session is still valid and not revoked or expired. On successful refresh, new access and refresh tokens are issued, supporting seamless access continuity for member-level administrative use cases. The endpoint is only available to users presenting a valid refresh token.\n\nSession data and refresh events are fully audit-logged. Revoked, expired, or otherwise invalid tokens are rejected with security event recording. The associated receptionist account is checked for active status (not soft deleted) to ensure access compliance. The returned tokens are functionally identical to those issued at login, and all session state is updated in DB for traceability. \n\nThis operation should be used by the receptionist client in session renewal scenarios where interactive login is not required (e.g., background token refresh during long-lived use).","authorizationType":"refresh","description":"This endpoint allows an authenticated receptionist to refresh their access token using a valid refresh token. It looks up the receptionist's session in 'healthcare_platform_auth_sessions', ensuring the refresh token is still valid and active. If successful, new JWT credentials are returned, extending access for ongoing member-level administrative tasks.\n\nToken refresh is denied if the underlying receptionist account is inactive or deleted, or if the refresh token is expired or revoked. All operations are strictly audit logged for compliance, enabling full traceability of authentication lifecycle events.\n\nThis endpoint supports seamless session continuity for receptionist users and should always be paired with the login endpoint for initial sign-in flows. It is unavailable to unauthenticated or invalid sessions.","summary":"Refresh a receptionist's JWT tokens (healthcare_platform_auth_sessions)","parameters":[],"requestBody":{"description":"Credentials required to refresh receptionist access token","typeName":"IHealthcarePlatformReceptionist.IRefresh"},"responseBody":{"description":"Authorized receptionist session with new JWT tokens","typeName":"IHealthcarePlatformReceptionist.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/receptionist/refresh","method":"post"},{"specification":"This operation registers a new patient account in the healthcarePlatform system and issues the initial authorization tokens (JWT and refresh). Patient registration must validate against unique email and required demographic fields according to privacy and regulatory requirements. On successful registration, the user receives a token payload for authenticated access. Patient onboarding details are strictly managed for HIPAA compliance. The response tokens grant access to APIs appropriate for patients. Audit trails are initiated on each registration. Credential information is securely persisted according to password/SSO provider, as recorded in the healthcare_platform_user_authentications table. If the organization requires, email or identity verification may be enforced by a separate flow. Emergency access or override is not permitted from this flow. Related operations: patients may later update profile, set MFA, or manage consents through additional endpoints; these are out of scope here. This operation is critical for ensuring the patient's legal access to their health data and services. Errors for duplicate email, weak password, or missing required fields must be clearly conveyed and logged for security review.","authorizationType":"join","description":"Register a new patient account (healthcare_platform_patients) and issue the initial authorization token set (JWT and refresh) for platform access. Enforces unique email, required fields, and password policy or SSO logic through healthcare_platform_user_authentications. Triggers compliance audit trail on success, linking created patient to healthcare_platform_user_org_assignments and initializing notification/channel preferences. Response structure uses IHealthcarePlatformPatient.IAuthorized for token and identity details. Security warning: initial credentials are securely hashed and audit entries are created for registration, per HIPAA. Registration is subject to organizational consent and may require email or identity verification via a separate step if enabled by policy. Patient status is set to active upon success, pending further verification if business logic so dictates. All exception cases (duplication, violation of password/identity policy) yield explicit error responses. Related endpoints: /auth/patient/login, /auth/patient/refresh.","summary":"Register a new patient in healthcare_platform_patients and authorize via join.","parameters":[],"requestBody":{"description":"Information required for new patient registration, including identity and authentication fields; must match IHealthcarePlatformPatient.IJoin schema.","typeName":"IHealthcarePlatformPatient.IJoin"},"responseBody":{"description":"Authorized patient account token, refresh, and identity info per IHealthcarePlatformPatient.IAuthorized upon successful join.","typeName":"IHealthcarePlatformPatient.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/patient/join","method":"post"},{"specification":"This operation authenticates a patient in the healthcarePlatform system using either email/password or supported SSO provider. On success, returns newly issued JWT and refresh tokens using the patient role's configured permissions/policy. Authentication requires that the patient status is active and not suspended or pending, and credentials are validated via healthcare_platform_user_authentications (including password hash compare or SSO validation). On repeated failed login attempts, triggers incident audit logs and may enforce lockout per organization security policy. The response provides a full token payload plus any info required for session context per IHealthcarePlatformPatient.IAuthorized. Security event logs are recorded for both successful and failed logins. If the organization requires, MFA challenge is handled by a separate endpoint/context after successful primary authentication. Related operations: registration and password reset flows are separate; login is authentication-only. Any access for deactivated, closed, or banned patient accounts is explicitly denied and logged. Organizational scoping ensures that the issued tokens cannot be used for cross-tenant API calls. All credentials and tokens are managed according to healthcare_platform_auth_sessions and user authentication standards.","authorizationType":"login","description":"Authenticate a patient account (healthcare_platform_patients) via email/password or SSO; issue new authorization tokens (JWT & refresh) if credentials are valid and patient status is active. Uses healthcare_platform_user_authentications for credential validation; logs all attempts for compliance. Returns IHealthcarePlatformPatient.IAuthorized structure on successful login. Patient status and lockout policy are enforced to prevent unauthorized access after repeated failures or account suspension. Related endpoints: /auth/patient/join for registration, /auth/patient/refresh for session continuation. All error and security events are audit-logged.","summary":"Authenticate a patient and authorize via /auth/patient/login; update healthcare_platform_auth_sessions.","parameters":[],"requestBody":{"description":"Patient login/request credentials and authentication provider selection. Follows IHealthcarePlatformPatient.ILogin structure.","typeName":"IHealthcarePlatformPatient.ILogin"},"responseBody":{"description":"Authorized session tokens and context for patient login; see IHealthcarePlatformPatient.IAuthorized.","typeName":"IHealthcarePlatformPatient.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/patient/login","method":"post"},{"specification":"This operation allows a patient with a valid refresh token to obtain new JWT access and refresh tokens. It is mandatory for stateless session renewal in the multi-tenant healthcarePlatform system, and is required to comply with HIPAA session expiration and device security guidelines. Session validity and refresh token are validated against persists in healthcare_platform_auth_sessions. If the refresh token is valid and associated session is not revoked or expired, new tokens are issued with the same patient role/permissions. Any failure in token veracity, expiry, or revocation status returns a clear error and is audit-logged as a possible security event. On success, refresh the session record, and generate a new JWT/refresh, maintaining full audit compliance. Token scoping and organization boundaries are respected. If suspicious or repeated failures occur, the system may trigger user alerts or compliance investigation routines. Related flows: logout, forced logout, password change, or reset can invalidate all refresh tokens to prevent unauthorized reuse. Time-based or revocation-based event triggers are handled in session management business logic.","authorizationType":"refresh","description":"Allows a patient (healthcare_platform_patients) to obtain new authorization tokens given a valid refresh token. Refresh token and session mapping is validated via healthcare_platform_auth_sessions. Returns a new IHealthcarePlatformPatient.IAuthorized structure if successful, else logs error and returns explicit session invalid/expired response. Full audit of session activity for HIPAA compliance. Organizational security policies may enforce session expiration, forced logout, or consent review during refresh. Related API: /auth/patient/login (primary authentication). On any anomaly, system logs a security event for compliance monitoring.","summary":"Refresh and renew authentication tokens for an active patient session in healthcare_platform_auth_sessions.","parameters":[],"requestBody":{"description":"Payload to request new tokens with a valid refresh token; structure per IHealthcarePlatformPatient.IRefresh.","typeName":"IHealthcarePlatformPatient.IRefresh"},"responseBody":{"description":"New JWT/refresh tokens and authorized patient info as IHealthcarePlatformPatient.IAuthorized.","typeName":"IHealthcarePlatformPatient.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/patient/refresh","method":"post"},{"specification":"This operation retrieves a paginated list of healthcare organizations (e.g., hospital, clinic, practice), supporting advanced filtering, search, and sort functionality. The underlying Prisma model is healthcare_platform_organizations, which defines the multi-tenant boundaries and resource isolation for the platform. Query criteria can include organization code, name, status, and creation timestamps, and are useful for administrative, analytics, and onboarding use cases. Data isolation and access control are handled as per tenant RBAC configuration.","path":"/healthcarePlatform/systemAdmin/organizations","method":"patch","summary":"Search and retrieve a paginated list of healthcare organizations (multi-tenant boundary).","description":"Retrieves a filtered and paginated list of healthcare organizations in the system. Users can search based on organization code, name, operational status, and creation or update time, supporting advanced query and sort scenarios. This enables platform admins and organization admins to monitor, manage, and audit organization entities under appropriate compliance restrictions.\n\nSecurity policies ensure access is strictly limited to authorized administrative users; sensitive organizational information is excluded for roles with reduced privileges. Only non-deleted organizations are included unless explicit compliance search is required.\n\nDerived from the healthcare_platform_organizations table in the Prisma DB schema; only fields defined in that table are used. Supports integration with role-based application dashboards, onboarding wizards, and compliance reporting workflows.\n\nRelated endpoints include GET /organizations/{organizationId} for individual organization details, and POST /organizations for new organization creation.","parameters":[],"requestBody":{"description":"Search request criteria, filter, pagination, and sort parameters for retrieving healthcare organizations.","typeName":"IHealthcarePlatformOrganization.IRequest"},"responseBody":{"description":"Paginated list of organizations matching filter and search criteria, with summary view DTO.","typeName":"IPageIHealthcarePlatformOrganization.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation fetches detailed information for a specific healthcare organization using its unique identifier. The Prisma table is healthcare_platform_organizations, which stores all core data for an organization, including code, display name, status, and timestamps. The response includes all fields, along with RBAC context, current status, and any relevant compliance metadata.","path":"/healthcarePlatform/systemAdmin/organizations/{organizationId}","method":"get","summary":"Retrieve a single organization's detail record by ID (platform admin view).","description":"Retrieves the detailed organization record, including business code, name, current status, creation and last update timestamps. Used for administrative review, compliance, and resource management. This record serves as the master data anchor for all departments, configuration, and RBAC partitioning downstream.\n\nAccess is limited to authorized system or organization admins according to strict RBAC policies. Sensitive internal data is only available to high-privilege roles. The underlying data is loaded from the healthcare_platform_organizations table, using the provided organizationId as a UUID path parameter.\n\nThis endpoint is frequently used in conjunction with the organization search or onboarding flows, and appears in organization and compliance dashboards.","parameters":[{"name":"organizationId","description":"UUID of the organization to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed organization record with business fields and timestamps.","typeName":"IHealthcarePlatformOrganization"},"authorizationRoles":["systemAdmin"],"name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new healthcare organization record, defining a discrete tenant within the multi-tenant system. The request body must provide business code, display name, and status. The corresponding Prisma model is healthcare_platform_organizations; on creation, related data structures for downstream assignments will be provisioned per business logic. Compliance and audit trails are registered at time of creation for platform reporting.","path":"/healthcarePlatform/systemAdmin/organizations","method":"post","summary":"Create a new healthcare organization (tenant onboarding).","description":"Creates a new organization entity for use as a top-level tenant. Supply organization code (which must be unique), name, and initial status. This record serves as the parent for all organizational resources, compliance records, and department structures. Mandatory timestamps are established and audit-logged at creation time.\n\nThe operation is restricted to platform administrators to ensure that only authorized personnel can create new tenants in the system. After creation, downstream assignment flows for staff and configurations can be initiated.\n\nAll fields in the request and response map directly to the healthcare_platform_organizations schema; no additional properties may be specified. Unique constraint on code is enforced, and violation will return a business logic error.","parameters":[],"requestBody":{"description":"Payload for new organization creation (unique code, official name, status).","typeName":"IHealthcarePlatformOrganization.ICreate"},"responseBody":{"description":"Detail record for the newly created organization entity.","typeName":"IHealthcarePlatformOrganization"},"authorizationRoles":["systemAdmin"],"name":"create","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing healthcare organization record identified by organizationId (UUID). Fields that may be modified include code, name, and status. The underlying schema is healthcare_platform_organizations. Updates are fully audit-trailed with before/after images for compliance. Unique code constraint applies. Only specified fields in the update DTO may be altered; timestamps are updated on change.","path":"/healthcarePlatform/systemAdmin/organizations/{organizationId}","method":"put","summary":"Update properties of a healthcare organization by ID (platform admin only).","description":"Updates the selected organization entity with the supplied properties: code, display name, status. All changes are strictly audited, including actor identity, change timestamps, and before/after data states as required by regulatory compliance. The entity is referenced by the provided organizationId path parameter, which must be a valid UUID.\n\nOnly system administrators may execute this change, enforcing strict access controls on core tenant information. Unique constraints are applied at the database level for organization code; attempting to set a duplicate code will result in a business logic error. All changes are written to the corresponding Prisma healthcare_platform_organizations table and logged for compliance.\n\nNo destructive actions are performed; soft-delete and archival are handled by separate workflows. Downstream effects, such as resource and staff assignment updates, are managed asynchronously outside the scope of this endpoint.","parameters":[{"name":"organizationId","description":"UUID of the organization to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New organization data for updating properties, including name, code, and status. Only supplied fields are modified.","typeName":"IHealthcarePlatformOrganization.IUpdate"},"responseBody":{"description":"Updated organization detail including modified properties and timestamps.","typeName":"IHealthcarePlatformOrganization"},"authorizationRoles":["systemAdmin"],"name":"update","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently removes an organization identified by its UUID from the healthcarePlatform system. It operates on the healthcare_platform_organizations table. Organizations are the top-level structures for tenancy, compliance, and resource boundaries. Removal of an organization means all related resources, assignments, departments, and configurations are unlinked or subject to cascade deletion as per schema relations. Uses hard delete because the schema defines a nullable deleted_at (soft delete), so implementations should prefer marking deleted_at but may permanently remove as per business logic and retention policies.","description":"Permanently remove a healthcare organization identified by its UUID (organizationId) from the healthcarePlatform. The operation targets the healthcare_platform_organizations model, which represents tenants or top-level business entities—a critical operation for platform data isolation and compliance.\n\nSecurity: Only users with system-wide admin privileges should perform this operation. All soft-delete logic should be handled by setting `deleted_at` field; however, in situations requiring physical removal for legal compliance, actual data removal is possible.\n\nCascading: The removal detaches or deletes all sub-resources including departments, users, and configurations as per defined Prisma schema relations. It is critical to audit all related business rules and handle orphaned data appropriately.\n\nRelated: Deletion should trigger an audit log entry and may be referenced by compliance review APIs. Make sure ORM-level cascading actions and historic data retention rules are configured as required by business and regulatory needs.\n\nErrors: Attempting to delete a non-existent or already-deleted organization should result in an informative error indicating such state. Ensure proper authorization and auditability of this operation.","summary":"Permanently deletes an organization (top-level tenant) by organizationId (UUID) from healthcare_platform_organizations.","parameters":[{"name":"organizationId","description":"Unique identifier of the organization to be deleted (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/organizations/{organizationId}","method":"delete"},{"specification":"This operation retrieves a paginated, filtered list of all departments associated with a given organization in the healthcarePlatform system. It supports advanced searching, sorting, and pagination for use in administrative dashboards. It is based on the healthcare_platform_departments Prisma table. Result includes department business metadata and status.","description":"Fetch a filtered and paginated list of all departments belonging to a given organization (organizationId). Uses advanced query parameters provided in the request body to enable searching by department code, name, status, and supports paged view for large organizations.\n\nSecurity: Typically accessed by users with organization admin privileges or above. Ensure only authorized users of the appropriate organization scope can view the department list.\n\nThis operation is critical for admin dashboards, resource allocation, and staff assignment flows. Department data includes links to organization context and is subject to compliance/audit policy.\n\nErrors: If organizationId does not exist or is soft-deleted, the operation should return an informative error.","summary":"Retrieves a paginated, filtered list of departments for a specified organization (organizationId) from healthcare_platform_departments.","parameters":[{"name":"organizationId","description":"Unique identifier of the organization whose departments are being retrieved (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, search, and pagination criteria for departments within the organization.","typeName":"IHealthcarePlatformDepartment.IRequest"},"responseBody":{"description":"Paginated result set of department summaries that match search/filters for the organization.","typeName":"IPageIHealthcarePlatformDepartment.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/organizations/{organizationId}/departments","method":"patch"},{"specification":"This operation retrieves detailed information for a single department identified by departmentId within a specific organization (organizationId). It is based on the healthcare_platform_departments table. Returns comprehensive business and status data for the department, including its organization linkage for display or admin review.","description":"Obtain full details about a single department under a specific organization, identified by the combination of organizationId and departmentId. Returns metadata such as department code, status, timestamps, and parent organization reference. Useful in organization admin portals for configuration, scheduling, and compliance workflows.\n\nSecurity: Only users with organization admin or higher privileges should access this data. Ensure department and organization relationship integrity as per schema.\n\nRelated: This API is part of a suite of admin tools for managing organizational units. Detailed department records are referenced in staff management, resource scheduling, and analytics modules.\n\nErrors: If departmentId or organizationId is invalid, or if the department is not part of the organization, return an informative error. Soft-deleted records should only be returned for users with audit privileges.","summary":"Gets detailed information for a single department (departmentId) in a specified organization (organizationId) from healthcare_platform_departments.","parameters":[{"name":"organizationId","description":"UUID of the organization to which the department belongs.","schema":{"type":"string","format":"uuid"}},{"name":"departmentId","description":"UUID of the department to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed department data including business code, name, status, and organization linkage.","typeName":"IHealthcarePlatformDepartment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/organizations/{organizationId}/departments/{departmentId}","method":"get"},{"specification":"This operation creates a new department entity within a specified organization (organizationId) in the healthcarePlatform system. Operates on the healthcare_platform_departments Prisma table. Accepts business fields and linkage for department creation, enforcing uniqueness constraints and auditability as required at the organization level.","description":"Create a new department under an existing organization by specifying the organizationId in the path. The request body must provide the necessary department metadata, such as code, name, status, and any other required information per the Prisma schema. Ensures that the department is unique within the organization context and that all required business rules for cross-system mapping or audit are satisfied.\n\nSecurity: Only organization administrators or higher may invoke this operation. Automatically sets created_at/updated_at timestamps and audit trails.\n\nRelated: Newly created departments become the basis for resource, staff, and scheduling management within organizations.\n\nErrors: Violations of unique constraints (code, name within org) should be returned with appropriate error messages. Any business rule violation or schema constraint should be handled with clear feedback.","summary":"Creates a new department within a specified organization (organizationId) in healthcare_platform_departments.","parameters":[{"name":"organizationId","description":"UUID of the organization in which the new department is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Department creation data for the new department under the organization.","typeName":"IHealthcarePlatformDepartment.ICreate"},"responseBody":{"description":"Full information for the newly created department entity, including all assigned fields and organization linkage.","typeName":"IHealthcarePlatformDepartment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/organizations/{organizationId}/departments","method":"post"},{"specification":"This operation updates an existing department entity within a specific organization in the healthcarePlatform system. It allows authorized roles to modify departmental details such as code, name, status, and linkage to the organization. This is vital for maintaining organizational structure, RBAC boundaries, and resource allocations within a multi-tenant SaaS healthcare setting. The modification is restricted to legitimate business fields and follows compliance and data integrity protocols as outlined in the Prisma schema for the healthcare_platform_departments table, ensuring accurate audit trails and appropriate access control by role and organization hierarchy.","description":"This endpoint is used by authorized organizational administrators to update the key properties of a department within a healthcare organization. Updates may include altering the department code, display name, status (active, suspended, archived), organizational association, and timestamps. The operation enforces strict auditability—every change is recorded with before and after states, as required by compliance policies.\n\nAuthorization must be checked to ensure only organization admins and department heads with proper rights and current assignments may update this resource. The operation enforces business logic to prevent breaking unique constraints (such as unique (organization_id, code) per department) and forbids modification if the department is currently locked (for audit or legal hold).\n\nFull validation logic ensures that department information aligns with its parent organization's policies. Attempts to update deleted, retired, or archived departments are rejected. Success returns the updated department entity with all fields as defined in the Prisma schema. Errors are handled robustly with clear responses for constraint, permission, and not-found failures.","summary":"Update an existing department entity for a given organization (healthcare_platform_departments table).","parameters":[{"name":"organizationId","description":"Globally unique identifier of the target organization in which the department resides.","schema":{"type":"string","format":"uuid"}},{"name":"departmentId","description":"Globally unique identifier of the target department to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the department. Must match the updatable fields as defined in IHealthcarePlatformDepartment.IUpdate.","typeName":"IHealthcarePlatformDepartment.IUpdate"},"responseBody":{"description":"The updated department entity as persisted in the system.","typeName":"IHealthcarePlatformDepartment"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"update","path":"/healthcarePlatform/organizationAdmin/organizations/{organizationId}/departments/{departmentId}","method":"put"},{"specification":"This operation updates an existing department entity within a specific organization in the healthcarePlatform system. It allows authorized roles to modify departmental details such as code, name, status, and linkage to the organization. This is vital for maintaining organizational structure, RBAC boundaries, and resource allocations within a multi-tenant SaaS healthcare setting. The modification is restricted to legitimate business fields and follows compliance and data integrity protocols as outlined in the Prisma schema for the healthcare_platform_departments table, ensuring accurate audit trails and appropriate access control by role and organization hierarchy.","description":"This endpoint is used by authorized organizational administrators to update the key properties of a department within a healthcare organization. Updates may include altering the department code, display name, status (active, suspended, archived), organizational association, and timestamps. The operation enforces strict auditability—every change is recorded with before and after states, as required by compliance policies.\n\nAuthorization must be checked to ensure only organization admins and department heads with proper rights and current assignments may update this resource. The operation enforces business logic to prevent breaking unique constraints (such as unique (organization_id, code) per department) and forbids modification if the department is currently locked (for audit or legal hold).\n\nFull validation logic ensures that department information aligns with its parent organization's policies. Attempts to update deleted, retired, or archived departments are rejected. Success returns the updated department entity with all fields as defined in the Prisma schema. Errors are handled robustly with clear responses for constraint, permission, and not-found failures.","summary":"Update an existing department entity for a given organization (healthcare_platform_departments table).","parameters":[{"name":"organizationId","description":"Globally unique identifier of the target organization in which the department resides.","schema":{"type":"string","format":"uuid"}},{"name":"departmentId","description":"Globally unique identifier of the target department to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the department. Must match the updatable fields as defined in IHealthcarePlatformDepartment.IUpdate.","typeName":"IHealthcarePlatformDepartment.IUpdate"},"responseBody":{"description":"The updated department entity as persisted in the system.","typeName":"IHealthcarePlatformDepartment"},"authorizationRole":"departmentHead","authorizationType":null,"name":"update","path":"/healthcarePlatform/departmentHead/organizations/{organizationId}/departments/{departmentId}","method":"put"},{"specification":"This operation permanently removes (hard delete) an existing department entity within a specific organization in the healthcarePlatform system. The deletion is enforced at the database level if no soft-delete field exists or triggers a logical (soft) delete when the 'deleted_at' column is present, as per the Prisma schema for healthcare_platform_departments. All deletions follow compliance and data integrity guidelines, ensuring that removal is auditable and conforms to organizational policy regarding department archival and constraint dependencies.","description":"This endpoint is intended for use by authorized organization admins and department heads to delete a department from a healthcare organization. It performs either a soft or hard delete based on the presence of a 'deleted_at' column: here, as per the Prisma schema, deleted_at is present, so the operation will set this timestamp instead of physically removing the record to fulfill audit and compliance requirements.\n\nThe operation validates that the department is not under legal hold or audit lock and that there are no in-progress resources or active assignments that would block deletion. All dependent records are handled per defined referential integrity policies (cascading, restriction, etc.) as specified in the underlying Prisma schema.\n\nWhen successful, the department is marked as deleted (with 'deleted_at' set), effectively removing it from active lists but preserving it for compliance retention and recovery. A robust error handling process informs users if deletion is forbidden, blocked by business logic, or if the department does not exist.","summary":"Soft-delete a department entity for a given organization (healthcare_platform_departments table) by setting the deleted_at timestamp.","parameters":[{"name":"organizationId","description":"Globally unique identifier of the target organization.","schema":{"type":"string","format":"uuid"}},{"name":"departmentId","description":"Globally unique identifier of the department to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null,"name":"erase","path":"/healthcarePlatform/organizationAdmin/organizations/{organizationId}/departments/{departmentId}","method":"delete"},{"specification":"This operation permanently removes (hard delete) an existing department entity within a specific organization in the healthcarePlatform system. The deletion is enforced at the database level if no soft-delete field exists or triggers a logical (soft) delete when the 'deleted_at' column is present, as per the Prisma schema for healthcare_platform_departments. All deletions follow compliance and data integrity guidelines, ensuring that removal is auditable and conforms to organizational policy regarding department archival and constraint dependencies.","description":"This endpoint is intended for use by authorized organization admins and department heads to delete a department from a healthcare organization. It performs either a soft or hard delete based on the presence of a 'deleted_at' column: here, as per the Prisma schema, deleted_at is present, so the operation will set this timestamp instead of physically removing the record to fulfill audit and compliance requirements.\n\nThe operation validates that the department is not under legal hold or audit lock and that there are no in-progress resources or active assignments that would block deletion. All dependent records are handled per defined referential integrity policies (cascading, restriction, etc.) as specified in the underlying Prisma schema.\n\nWhen successful, the department is marked as deleted (with 'deleted_at' set), effectively removing it from active lists but preserving it for compliance retention and recovery. A robust error handling process informs users if deletion is forbidden, blocked by business logic, or if the department does not exist.","summary":"Soft-delete a department entity for a given organization (healthcare_platform_departments table) by setting the deleted_at timestamp.","parameters":[{"name":"organizationId","description":"Globally unique identifier of the target organization.","schema":{"type":"string","format":"uuid"}},{"name":"departmentId","description":"Globally unique identifier of the department to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"departmentHead","authorizationType":null,"name":"erase","path":"/healthcarePlatform/departmentHead/organizations/{organizationId}/departments/{departmentId}","method":"delete"},{"specification":"This operation retrieves a filtered, paginated list of roles (RBAC entities) within the healthcarePlatform system, supporting complex search, filtering, and sorting use cases. The operation corresponds to the healthcare_platform_roles table and enables administrative or privileged users to query for roles by code, name, status, or scope_type. It is critical for maintaining business role structures, permissions configurations, and auditability within a multi-tenant healthcare SaaS environment.","description":"This endpoint provides advanced search capabilities for listing roles managed by the platform. Users can apply flexible search criteria, sort results by creation date, name, or code, and paginate through potentially large result sets. The request body allows detailed filtering on properties such as code, name, scope_type (platform, organization, department), and status (active, retired, system-only, archived), reflecting the RBAC policy structure outlined in the Prisma schema.\n\nResults support organization-scoped queries and can be restricted or ordered by scope and status as necessary for administrative management of roles. Performance is optimized for filtered, paginated retrieval and integrates role-based access control logic to ensure users only view roles within their permitted administrative scope.\n\nThe output is a paginated container (IPageIHealthcarePlatformRole.ISummary) suitable for management UI and auditing functions. Errors related to invalid filters or lack of permission are clearly reported.","summary":"Search and paginate the list of roles in the platform (healthcare_platform_roles table).","parameters":[],"requestBody":{"description":"Role search and pagination parameters as described by IHealthcarePlatformRole.IRequest.","typeName":"IHealthcarePlatformRole.IRequest"},"responseBody":{"description":"Paginated list of role summaries matching the search/filter criteria.","typeName":"IPageIHealthcarePlatformRole.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/healthcarePlatform/systemAdmin/roles","method":"patch"},{"specification":"This operation retrieves a filtered, paginated list of roles (RBAC entities) within the healthcarePlatform system, supporting complex search, filtering, and sorting use cases. The operation corresponds to the healthcare_platform_roles table and enables administrative or privileged users to query for roles by code, name, status, or scope_type. It is critical for maintaining business role structures, permissions configurations, and auditability within a multi-tenant healthcare SaaS environment.","description":"This endpoint provides advanced search capabilities for listing roles managed by the platform. Users can apply flexible search criteria, sort results by creation date, name, or code, and paginate through potentially large result sets. The request body allows detailed filtering on properties such as code, name, scope_type (platform, organization, department), and status (active, retired, system-only, archived), reflecting the RBAC policy structure outlined in the Prisma schema.\n\nResults support organization-scoped queries and can be restricted or ordered by scope and status as necessary for administrative management of roles. Performance is optimized for filtered, paginated retrieval and integrates role-based access control logic to ensure users only view roles within their permitted administrative scope.\n\nThe output is a paginated container (IPageIHealthcarePlatformRole.ISummary) suitable for management UI and auditing functions. Errors related to invalid filters or lack of permission are clearly reported.","summary":"Search and paginate the list of roles in the platform (healthcare_platform_roles table).","parameters":[],"requestBody":{"description":"Role search and pagination parameters as described by IHealthcarePlatformRole.IRequest.","typeName":"IHealthcarePlatformRole.IRequest"},"responseBody":{"description":"Paginated list of role summaries matching the search/filter criteria.","typeName":"IPageIHealthcarePlatformRole.ISummary"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"index","path":"/healthcarePlatform/organizationAdmin/roles","method":"patch"},{"specification":"This operation retrieves the detailed information for a single specific role entity (RBAC) in the healthcarePlatform system by its unique identifier. It operates on the healthcare_platform_roles table, returning all business-relevant and compliance/audit properties of the role, including code, name, status, scope, and timestamps. This allows authorized administrators to review role configuration and assignment details for the purposes of access control review, governance, and platform security compliance.","description":"This endpoint enables platform and organizational administrators to retrieve full details about a specific role by its unique identifier (roleId). The output includes all fields annotated in the healthcare_platform_roles Prisma schema, such as the role's code, display name, scope_type (platform, organization, department), current status, and creation/update timestamps.\n\nAccess to this endpoint is governed by administrative privileges as outlined in the RBAC configuration. The operation is essential for reviewing and confirming role definitions, ensuring compliance with RBAC policies, and providing source-of-truth data for audits. Errors are returned when access is denied or the role is not found.","summary":"Get details for a specific role entity by ID (healthcare_platform_roles table).","parameters":[{"name":"roleId","description":"Globally unique identifier of the role to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the specified role entity.","typeName":"IHealthcarePlatformRole"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/systemAdmin/roles/{roleId}","method":"get"},{"specification":"This operation retrieves the detailed information for a single specific role entity (RBAC) in the healthcarePlatform system by its unique identifier. It operates on the healthcare_platform_roles table, returning all business-relevant and compliance/audit properties of the role, including code, name, status, scope, and timestamps. This allows authorized administrators to review role configuration and assignment details for the purposes of access control review, governance, and platform security compliance.","description":"This endpoint enables platform and organizational administrators to retrieve full details about a specific role by its unique identifier (roleId). The output includes all fields annotated in the healthcare_platform_roles Prisma schema, such as the role's code, display name, scope_type (platform, organization, department), current status, and creation/update timestamps.\n\nAccess to this endpoint is governed by administrative privileges as outlined in the RBAC configuration. The operation is essential for reviewing and confirming role definitions, ensuring compliance with RBAC policies, and providing source-of-truth data for audits. Errors are returned when access is denied or the role is not found.","summary":"Get details for a specific role entity by ID (healthcare_platform_roles table).","parameters":[{"name":"roleId","description":"Globally unique identifier of the role to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the specified role entity.","typeName":"IHealthcarePlatformRole"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/organizationAdmin/roles/{roleId}","method":"get"},{"specification":"This operation creates a new platform-wide, organization-level, or department-scoped role in the healthcarePlatform system. The operation references the healthcare_platform_roles table in the Prisma schema and allows creation of roles with specified codes, display names, scope types, and statuses. Roles define RBAC boundaries and are essential for strict permission allocation and access control workflows that underpin organizational segmentation in multi-tenant SaaS healthcare systems.","path":"/healthcarePlatform/systemAdmin/roles","method":"post","summary":"Create a new RBAC role (platform/org/department) in healthcarePlatform.","description":"Create a new role in the healthcarePlatform, which may apply at the platform, organization, or department scope, and is used for mapping permissions, controlling access, and managing role-based security. Roles created through this endpoint support hierarchical access models and support all compliance and audit requirements as described in the Prisma schema.\n\nSecurity: Only system administrators can create new top-level roles, while organization administrators may create organization or department specific roles, subject to business logic constraints and compliance reviews. Role codes must be unique within their scope. Care must be taken to avoid accidental creation of redundant or conflicting roles.\n\nRelationships: The role entity is referenced from user assignments and defines boundaries for all permission grants and business rule enforcement. Changes may impact user access and workflow eligibility across the system.\n\nValidation and Business Logic: Code and name fields are required; scope_type must be one of the supported RBAC segmentation types; status should reflect intended operational state; creation and update timestamps are managed by the system. After creation, roles are available for assignment to users or business operations.\n\nRelated Operations: Role creation is often performed prior to bulk user onboarding, permission mapping, or organization setup. Ensure that permissions are mapped for the new role via the permissions endpoint.","parameters":[],"requestBody":{"description":"Data required to define the new RBAC role, including code, display name, scope level, and operational status.","typeName":"IHealthcarePlatformRole.ICreate"},"responseBody":{"description":"Detailed information about the newly created role, including its identifiers, code, scope, status, and timestamps.","typeName":"IHealthcarePlatformRole"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"create"},{"specification":"This operation updates the display name, operational status, or other editable properties of an existing RBAC role within the healthcarePlatform system. It operates on the healthcare_platform_roles table and allows administrators to manage role naming, status (active/retired), and descriptive information. Role scope_type and unique code are not updatable once set, to preserve RBAC integrity throughout the system.","path":"/healthcarePlatform/systemAdmin/roles/{roleId}","method":"put","summary":"Update an existing RBAC role's display name, status, or description.","description":"Update mutable fields of a role entity, specifically supporting changes to name, status, and display information. Use case includes correcting nomenclature, retiring a role, or activating a dormant RBAC definition. Role codes and scope_type are immutable after creation for security and compliance reasons, as enforcing these constraints is critical for auditable identity and access management.\n\nSecurity: Only system administrators or organization administrators at the appropriate scope may perform updates. The operation checks for reference integrity to prevent updates that would violate downstream RBAC or workflow dependencies.\n\nRelationship and Impact: This change is reflected in all RBAC assignments, permissions, and workflow authorizations tied to the updated role. Inactive or retired roles may not be reassigned to users post-update, but all historical audit/use information is retained as per Prisma schema guidelines and regulatory compliance.\n\nValidation: All updates must comply with input validation logic—name and status fields must not be empty and status must match allowed business values. Attempting to change locked fields (code/scope_type) will result in validation errors.\n\nError Handling: If the roleId does not reference a valid existing role, the operation will return a 404 error; business rules violation or malformed update details will cause 400 validation errors.","parameters":[{"name":"roleId","description":"Unique identifier for the RBAC role to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the target RBAC role (name, status, description). Code and scope_type are immutable.","typeName":"IHealthcarePlatformRole.IUpdate"},"responseBody":{"description":"Updated RBAC role object reflecting the applied changes as defined in the Prisma schema.","typeName":"IHealthcarePlatformRole"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"update"},{"specification":"This operation permanently erases (hard deletes) an RBAC role from the healthcarePlatform system, referencing the healthcare_platform_roles table in the Prisma schema. Only roles not actively assigned to any users or referenced by workflow/business logic can be successfully deleted. The operation is irrevocable and removes the role data from the database.","path":"/healthcarePlatform/systemAdmin/roles/{roleId}","method":"delete","summary":"Permanently remove an unassigned RBAC role from the healthcarePlatform system.","description":"Permanently delete a role record from the healthcarePlatform. This operation enforces reference checks to guarantee the role is not assigned or in use before removal; attempts to delete assigned or active roles will result in error responses. Roles eligible for deletion are completely removed from system access lists and cannot be restored—this operation is a hard delete, not a soft delete, according to the Prisma schema. All audit trails of role usage persist per the system's compliance policies.\n\nSecurity: Erasure of roles can only be performed by a system administrator. This is typically a maintenance operation for deprecated or erroneous roles no longer required by business logic, and is subject to strict audit requirements.\n\nRelationship: If a role is referenced, deletion triggers validation errors. Deletion of unreferenced roles has no impact on audit logs or historical access.\n\nError Handling: Deleting a non-existent role, or any role still in use, results in 4XX error codes and descriptive error responses, in line with strict compliance enforcement demands.","parameters":[{"name":"roleId","description":"Unique identifier of the RBAC role to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase"},{"specification":"This operation retrieves a filtered and paginated list of platform permissions from the healthcare_platform_permissions table in the Prisma schema. It supports search and filtering by code, name, scope, or status. The endpoint provides administrators with view access to all available permissions for mapping to RBAC roles in the system.","path":"/healthcarePlatform/systemAdmin/permissions","method":"patch","summary":"Filter, search, and paginate RBAC permission definitions for mapping.","description":"Retrieve a paginated and filtered list of available RBAC permissions in the system. Permissions define discrete actionable functions or scopes granted to roles. This endpoint supports advanced filtering by permission code, name, scope_type, and status to allow administrators to understand, review, and manage available permissions.\n\nSecurity: This operation is limited to authenticated system or organization administrators, ensuring only privileged users can review and map system permissions. Business logic enforces role-based restrictions per the organization context, as defined in the Prisma schema.\n\nRelationship: Permissions retrieved via this operation are mapped to roles using the roles interface. Permission status, description, and allowed scope_type are included in the response for administrators to perform accurate role-based mapping and audits.\n\nValidation: Filtering supports partial and case-insensitive matching. Results are paginated for large systems; administrators should use pagination controls for efficient data discovery. Attempting to access without required RBAC context returns a 403 error.\n\nThis operation is typically used as a precursor to the assignment or update of role permissions in organization or platform setup workflows.","parameters":[],"requestBody":{"description":"Filter, search, and pagination parameters for permission retrieval.","typeName":"IHealthcarePlatformPermission.IRequest"},"responseBody":{"description":"Paginated, filtered list of permission summary objects available for RBAC mapping, including permission codes, names, description, scope, and status.","typeName":"IPageIHealthcarePlatformPermission.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index"},{"specification":"This operation retrieves the details of a specific permission in the healthcarePlatform system. It is associated with the healthcare_platform_permissions table, which defines specific actionable operations for the platform's role-based access control (RBAC) framework. Permissions map to available actions within the platform and are fundamental to enforcing granular authorization policies at the organization, department, and platform levels.","description":"Retrieves information for a single permission, identified by its unique permissionId. This permission may be associated with a given scope such as platform, organization, or department, and includes all fields defined in the permissions table, such as code, name, description, scope_type, and status.\n\nOnly authorized users with platform or organization-level administrative rights may view permission definitions to prevent unauthorized enumeration of sensitive permission codes. Path parameter validation must ensure a valid UUID is supplied. Returns the full permission record if found, or an appropriate error if not found or access is denied.\n\nPermission records are foundational to the system's RBAC design and may be referenced by role/permission assignment features. Related operations include listing all permissions, creating new permissions, updating existing permissions, and deleting permissions.","summary":"Retrieve a specific permission definition from the healthcare_platform_permissions table.","parameters":[{"name":"permissionId","description":"Unique identifier for the permission record to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed permission data as stored in the system for the specified permissionId.","typeName":"IHealthcarePlatformPermission"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/permissions/{permissionId}","method":"get"},{"specification":"This operation creates a new permission definition in the healthcarePlatform's RBAC system. It directly maps to the healthcare_platform_permissions table, which catalogues all possible permission codes and configuration for access policy.","description":"Creates a new permission in the system RBAC database by accepting details such as code, name, description, scope_type, and status. The POST request validates all required fields and implements uniqueness checks (e.g., code/scope_type pair) as enforced in the Prisma schema. All permission creation actions are strictly limited to users with 'systemAdmin' role to prevent unauthorized privilege escalation or RBAC modifications.\n\nOn successful creation, the detailed permission record is returned. If the provided code or scope_type is not unique, or input validation fails, an error is returned. Related operations include viewing, updating, listing, or deleting permissions as part of RBAC configuration and audit routines. All creation events must be audit-logged for compliance.","summary":"Create a new permission entry in the healthcare_platform_permissions table.","parameters":[],"requestBody":{"description":"Fields required for creation of a permission definition.","typeName":"IHealthcarePlatformPermission.ICreate"},"responseBody":{"description":"Details of the created permission as stored in the system.","typeName":"IHealthcarePlatformPermission"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/permissions","method":"post"},{"specification":"This operation updates an existing permission definition in the healthcarePlatform RBAC system. It is linked to the healthcare_platform_permissions table, allowing authorized admins to modify the code, name, description, scope_type, or status of an existing permission.","description":"Updates the definition of a specific permission identified by permissionId. All updates are restricted to users with 'systemAdmin' rights to prevent unauthorized RBAC manipulation. Update requests allow changes to any of the modifiable fields as per the schema and require validation that the new code/scope_type pair remains unique.\n\nThe underlying implementation should handle both full and partial updates, but as per the design, PUT is used for full updates of the permission entry. Returns the updated permission object upon success. Errors arise if the permissionId is not found, validation fails, or uniqueness constraints are violated. All updates must be recorded in the audit log for compliance tracking.","summary":"Update an existing permission entry in the healthcare_platform_permissions table.","parameters":[{"name":"permissionId","description":"Target permission's unique identifier (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"All modifiable fields for the targeted permission (code, name, description, scope_type, status, etc).","typeName":"IHealthcarePlatformPermission.IUpdate"},"responseBody":{"description":"Details of the updated permission.","typeName":"IHealthcarePlatformPermission"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/permissions/{permissionId}","method":"put"},{"specification":"This operation deletes (soft delete) a permission entry from the healthcare_platform_permissions table. In this architecture, soft deletes mark the permission entry as deleted but do not remove it from the database, supporting audit and compliance requirements. Only permissions not actively in use by any role should be deleted, and all delete actions are audit-logged.","description":"Marks a permission as deleted by setting the deleted_at timestamp, allowing for logical removal from access control flows while maintaining historical and compliance traceability. This operation enforces all business constraints regarding deletion, including preventing deletion of permissions currently assigned to roles. Strictly limited to 'systemAdmin' role users. If the permission cannot be deleted due to policy, the operation returns an error with an explanatory message.\n\nThis operation is part of the permission lifecycle management and must ensure all relevant references and audit trails remain intact. The actual record remains available for compliance retrieval as required by enterprise healthcare audit policy.","summary":"Soft-delete a permission entry from the healthcare_platform_permissions table.","parameters":[{"name":"permissionId","description":"Unique identifier for the permission entry to be deleted (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/permissions/{permissionId}","method":"delete"},{"specification":"This operation retrieves a filtered and paginated list of organization-department assignment records within the platform. It operates on the healthcare_platform_org_department_assignments table and supports search, filtering by organization or department, and sorting. The API enables administrators and other privileged users to review structural mappings between organizations and their constituent departments. All non-deleted records are returned with audit-relevant metadata for compliance review and operational management.","description":"Retrieve an advanced, paginated list of org-department assignments. This operation utilizes the healthcare_platform_org_department_assignments table comments, specifically focusing on the mapping between organizations and departments for complex organization structure management.\n\nThe endpoint supports advanced search parameters (such as organization_id, department_id, assignment dates, assignment status) and pagination for handling large datasets. Only users with appropriate organizational or system administrative permissions can access this list, ensuring strict platform RBAC.\n\nReturned assignment data includes all auditing fields: unique assignment id, organization info, department info, timestamps for creation and updates, and any soft-delete status for regulatory tracking. Filtering and searching help with daily operational audits and organization restructuring workflows, referencing the business need for compliance and effective management of healthcare hierarchies.\n\nThis operation is commonly used in conjunction with retrieve (GET by ID), create, and update operations for the healthcare_platform_org_department_assignments entity. Error handling covers invalid filtering parameters, insufficient permissions, and unexpected server errors. Soft-deleted assignments may be optionally excluded depending on business rules, but are included for compliance operations.","summary":"Get a filtered and paginated list of organization-department assignments from healthcare_platform_org_department_assignments.","parameters":[],"requestBody":{"description":"Request body specifying filter parameters, pagination, and sorting for org-department assignment retrieval.","typeName":"IHealthcarePlatformOrgDepartmentAssignment.IRequest"},"responseBody":{"description":"Paginated list of summary information for organization-department assignments matching the request criteria.","typeName":"IPageIHealthcarePlatformOrgDepartmentAssignment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/orgDepartmentAssignments","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of organization-department assignment records within the platform. It operates on the healthcare_platform_org_department_assignments table and supports search, filtering by organization or department, and sorting. The API enables administrators and other privileged users to review structural mappings between organizations and their constituent departments. All non-deleted records are returned with audit-relevant metadata for compliance review and operational management.","description":"Retrieve an advanced, paginated list of org-department assignments. This operation utilizes the healthcare_platform_org_department_assignments table comments, specifically focusing on the mapping between organizations and departments for complex organization structure management.\n\nThe endpoint supports advanced search parameters (such as organization_id, department_id, assignment dates, assignment status) and pagination for handling large datasets. Only users with appropriate organizational or system administrative permissions can access this list, ensuring strict platform RBAC.\n\nReturned assignment data includes all auditing fields: unique assignment id, organization info, department info, timestamps for creation and updates, and any soft-delete status for regulatory tracking. Filtering and searching help with daily operational audits and organization restructuring workflows, referencing the business need for compliance and effective management of healthcare hierarchies.\n\nThis operation is commonly used in conjunction with retrieve (GET by ID), create, and update operations for the healthcare_platform_org_department_assignments entity. Error handling covers invalid filtering parameters, insufficient permissions, and unexpected server errors. Soft-deleted assignments may be optionally excluded depending on business rules, but are included for compliance operations.","summary":"Get a filtered and paginated list of organization-department assignments from healthcare_platform_org_department_assignments.","parameters":[],"requestBody":{"description":"Request body specifying filter parameters, pagination, and sorting for org-department assignment retrieval.","typeName":"IHealthcarePlatformOrgDepartmentAssignment.IRequest"},"responseBody":{"description":"Paginated list of summary information for organization-department assignments matching the request criteria.","typeName":"IPageIHealthcarePlatformOrgDepartmentAssignment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/orgDepartmentAssignments","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific organization-department assignment using its unique ID. It works with the healthcare_platform_org_department_assignments table, providing full assignment metadata including related organization and department details, creation/update timestamps, and current status. This endpoint is pivotal for management and audit of departmental structure mappings in multi-tenant healthcare systems.","description":"Get detailed information for a single organization-department assignment from healthcare_platform_org_department_assignments by ID. The primary purpose is to allow privileged users to inspect or review the exact mapping between a specific organization and a department for operational, compliance, or structural management.\n\nThe endpoint requires a valid orgDepartmentAssignmentId path parameter referencing the assignment's unique identifier (UUID) in the database and returns all relevant fields in the record, including relational references, creation and update audit timestamps, and the soft delete timestamp if applicable. \n\nRoles with required permissions (systemAdmin, organizationAdmin) are able to retrieve this information for audit, troubleshooting, or compliance requirements. Related API operations include list, create, and update endpoints for org-department assignments. Error cases include not found, invalid identifier, or unauthorized access.","summary":"Get a specific organization-department assignment by ID from healthcare_platform_org_department_assignments.","parameters":[{"name":"orgDepartmentAssignmentId","description":"Unique ID of the organization-department assignment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the specified organization-department assignment.","typeName":"IHealthcarePlatformOrgDepartmentAssignment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/orgDepartmentAssignments/{orgDepartmentAssignmentId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific organization-department assignment using its unique ID. It works with the healthcare_platform_org_department_assignments table, providing full assignment metadata including related organization and department details, creation/update timestamps, and current status. This endpoint is pivotal for management and audit of departmental structure mappings in multi-tenant healthcare systems.","description":"Get detailed information for a single organization-department assignment from healthcare_platform_org_department_assignments by ID. The primary purpose is to allow privileged users to inspect or review the exact mapping between a specific organization and a department for operational, compliance, or structural management.\n\nThe endpoint requires a valid orgDepartmentAssignmentId path parameter referencing the assignment's unique identifier (UUID) in the database and returns all relevant fields in the record, including relational references, creation and update audit timestamps, and the soft delete timestamp if applicable. \n\nRoles with required permissions (systemAdmin, organizationAdmin) are able to retrieve this information for audit, troubleshooting, or compliance requirements. Related API operations include list, create, and update endpoints for org-department assignments. Error cases include not found, invalid identifier, or unauthorized access.","summary":"Get a specific organization-department assignment by ID from healthcare_platform_org_department_assignments.","parameters":[{"name":"orgDepartmentAssignmentId","description":"Unique ID of the organization-department assignment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the specified organization-department assignment.","typeName":"IHealthcarePlatformOrgDepartmentAssignment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/orgDepartmentAssignments/{orgDepartmentAssignmentId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new organization-department assignment record within the platform. It interacts with the healthcare_platform_org_department_assignments table, requiring references to a valid organization and department. The new assignment establishes a mapping used to drive department management, workflow partitioning, and RBAC inheritance throughout the multi-tenant system. Auditing, soft delete, and compliance tracking are supported through metadata.","description":"Create a new org-department assignment entry to establish structure within the multi-tenant healthcarePlatform system. The request body follows business validation rules from the healthcare_platform_org_department_assignments table and requires: a valid organization ID, department ID, and all assignment metadata for audit.\n\nAssignment creation is audited, recording timestamp and user reference for compliance. Only systemAdmins and organizationAdmins are authorized. Related operations for listing and inspecting assignments should be used to verify successful creation. Validation includes enforcement of unique organization-department mapping and checks against soft-deleted/archived organizations or departments.\n\nError handling includes failed validation (e.g., attempting to assign an already linked or deleted org/department), permission errors, and unexpected server failures. On success, full assignment details (per the schema) are returned.","summary":"Create a new organization-department assignment in healthcare_platform_org_department_assignments.","parameters":[],"requestBody":{"description":"Organization-department assignment information for creation.","typeName":"IHealthcarePlatformOrgDepartmentAssignment.ICreate"},"responseBody":{"description":"Details of the newly created organization-department assignment.","typeName":"IHealthcarePlatformOrgDepartmentAssignment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/orgDepartmentAssignments","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new organization-department assignment record within the platform. It interacts with the healthcare_platform_org_department_assignments table, requiring references to a valid organization and department. The new assignment establishes a mapping used to drive department management, workflow partitioning, and RBAC inheritance throughout the multi-tenant system. Auditing, soft delete, and compliance tracking are supported through metadata.","description":"Create a new org-department assignment entry to establish structure within the multi-tenant healthcarePlatform system. The request body follows business validation rules from the healthcare_platform_org_department_assignments table and requires: a valid organization ID, department ID, and all assignment metadata for audit.\n\nAssignment creation is audited, recording timestamp and user reference for compliance. Only systemAdmins and organizationAdmins are authorized. Related operations for listing and inspecting assignments should be used to verify successful creation. Validation includes enforcement of unique organization-department mapping and checks against soft-deleted/archived organizations or departments.\n\nError handling includes failed validation (e.g., attempting to assign an already linked or deleted org/department), permission errors, and unexpected server failures. On success, full assignment details (per the schema) are returned.","summary":"Create a new organization-department assignment in healthcare_platform_org_department_assignments.","parameters":[],"requestBody":{"description":"Organization-department assignment information for creation.","typeName":"IHealthcarePlatformOrgDepartmentAssignment.ICreate"},"responseBody":{"description":"Details of the newly created organization-department assignment.","typeName":"IHealthcarePlatformOrgDepartmentAssignment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/orgDepartmentAssignments","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing organization-department assignment by ID. It acts on the healthcare_platform_org_department_assignments table, allowing modification of assignment metadata and references as allowed by business rules. This is used in scenarios such as department realignment, merging, or audit remediation in multi-tenant healthcare organizations. All updates are audited by timestamp and user, preserving change history for regulatory requirements.","description":"Update the details of an existing org-department assignment identified by its unique ID. The request body must include permissible fields as specified by the healthcare_platform_org_department_assignments schema and observe business validation relating to unique organization-department relationships and non-editable fields (as appropriate for compliance).\n\nThe operation requires the orgDepartmentAssignmentId UUID path parameter and a compliant update request body. Security is enforced allowing only systemAdmin and organizationAdmin users to invoke updates. All changes are audited with timestamps and user references for compliance tracking. Error scenarios include record not found, attempts to update immutable relationships, permission violations, and other validation failures.\n\nThis API is commonly used alongside list (PATCH), get (GET by ID), and create (POST) endpoints to manage the lifecycle of department structure assignments. It is important to note that unique indices and business logic may prevent creating duplicate active assignments for the same department under one organization.","summary":"Update an organization-department assignment by ID in healthcare_platform_org_department_assignments.","parameters":[{"name":"orgDepartmentAssignmentId","description":"ID of the organization-department assignment record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated organization-department assignment data as per business rules.","typeName":"IHealthcarePlatformOrgDepartmentAssignment.IUpdate"},"responseBody":{"description":"The updated organization-department assignment entity data.","typeName":"IHealthcarePlatformOrgDepartmentAssignment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/orgDepartmentAssignments/{orgDepartmentAssignmentId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing organization-department assignment by ID. It acts on the healthcare_platform_org_department_assignments table, allowing modification of assignment metadata and references as allowed by business rules. This is used in scenarios such as department realignment, merging, or audit remediation in multi-tenant healthcare organizations. All updates are audited by timestamp and user, preserving change history for regulatory requirements.","description":"Update the details of an existing org-department assignment identified by its unique ID. The request body must include permissible fields as specified by the healthcare_platform_org_department_assignments schema and observe business validation relating to unique organization-department relationships and non-editable fields (as appropriate for compliance).\n\nThe operation requires the orgDepartmentAssignmentId UUID path parameter and a compliant update request body. Security is enforced allowing only systemAdmin and organizationAdmin users to invoke updates. All changes are audited with timestamps and user references for compliance tracking. Error scenarios include record not found, attempts to update immutable relationships, permission violations, and other validation failures.\n\nThis API is commonly used alongside list (PATCH), get (GET by ID), and create (POST) endpoints to manage the lifecycle of department structure assignments. It is important to note that unique indices and business logic may prevent creating duplicate active assignments for the same department under one organization.","summary":"Update an organization-department assignment by ID in healthcare_platform_org_department_assignments.","parameters":[{"name":"orgDepartmentAssignmentId","description":"ID of the organization-department assignment record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated organization-department assignment data as per business rules.","typeName":"IHealthcarePlatformOrgDepartmentAssignment.IUpdate"},"responseBody":{"description":"The updated organization-department assignment entity data.","typeName":"IHealthcarePlatformOrgDepartmentAssignment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/orgDepartmentAssignments/{orgDepartmentAssignmentId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation deletes an existing organization-department assignment record in the healthcare platform, using the unique assignment ID as the identifier. The operation directly targets the healthcare_platform_org_department_assignments table, permanently removing the record to disassociate a department from an organization. This is important for managing the structure of organizations and the departments under them, particularly when organizational restructures occur or an assignment is no longer valid according to business logic.","description":"This operation is designed to permanently delete an organization-to-department assignment within the healthcare platform. By specifying the unique orgDepartmentAssignmentId, administrators can remove the relationship between an organization and a department, reflecting changes in organizational structure or access policies.\n\nSecurity considerations dictate that this operation should only be usable by administrative roles, as deleting such links can have significant impacts on access control, department workflow, and reporting. The underlying Prisma schema model (healthcare_platform_org_department_assignments) tracks such assignments with audit trail timestamps and soft-delete capability, but this operation performs a hard deletion removing the entry entirely from the database.\n\nValidation ensures that the specified assignment exists and is not already deleted. Attempts to delete a non-existent or already-deleted assignment yield a clear error. As the operation is destructive, it is related to organization and department management APIs and should be used judiciously.","summary":"Permanently delete an organization-to-department assignment (healthcare_platform_org_department_assignments).","parameters":[{"name":"orgDepartmentAssignmentId","description":"Unique identifier of the organization-department assignment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/orgDepartmentAssignments/{orgDepartmentAssignmentId}","method":"delete"},{"specification":"This operation deletes an existing organization-department assignment record in the healthcare platform, using the unique assignment ID as the identifier. The operation directly targets the healthcare_platform_org_department_assignments table, permanently removing the record to disassociate a department from an organization. This is important for managing the structure of organizations and the departments under them, particularly when organizational restructures occur or an assignment is no longer valid according to business logic.","description":"This operation is designed to permanently delete an organization-to-department assignment within the healthcare platform. By specifying the unique orgDepartmentAssignmentId, administrators can remove the relationship between an organization and a department, reflecting changes in organizational structure or access policies.\n\nSecurity considerations dictate that this operation should only be usable by administrative roles, as deleting such links can have significant impacts on access control, department workflow, and reporting. The underlying Prisma schema model (healthcare_platform_org_department_assignments) tracks such assignments with audit trail timestamps and soft-delete capability, but this operation performs a hard deletion removing the entry entirely from the database.\n\nValidation ensures that the specified assignment exists and is not already deleted. Attempts to delete a non-existent or already-deleted assignment yield a clear error. As the operation is destructive, it is related to organization and department management APIs and should be used judiciously.","summary":"Permanently delete an organization-to-department assignment (healthcare_platform_org_department_assignments).","parameters":[{"name":"orgDepartmentAssignmentId","description":"Unique identifier of the organization-department assignment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/orgDepartmentAssignments/{orgDepartmentAssignmentId}","method":"delete"},{"specification":"This operation searches, filters, and paginates user-organization assignment records (healthcare_platform_user_org_assignments) in the healthcare platform. The operation enables advanced querying based on user_id, organization_id, role_code, assignment_status, and supports sorting and pagination, in order to facilitate RBAC administration, audit, and organizational management.","description":"The PATCH /userOrgAssignments endpoint retrieves a filtered, paginated list of user-organization-role assignments from the healthcare_platform_user_org_assignments Prisma model. Administrators and system staff can search, sort, and paginate assignments by user, organization, role code, and assignment status, which is essential for platform-wide RBAC enforcement and audits.\n\nThe request body supports granular filtering (e.g., users with a specific role within an organization, assignments pending approval, or recently updated links). Security is vital; only users with system, organization, or designated RBAC admin roles can access the full listing, and search results are filtered to the requesting user's scope.\n\nReturned records provide summary assignment details (user_id, organization_id, role, status, created/updated timestamps) useful for auditing, onboarding/offboarding, or role review workflows. This operation complements create, update, and erase endpoints for full user access management.","summary":"Search and paginate user-organization assignment records (healthcare_platform_user_org_assignments).","parameters":[],"requestBody":{"description":"Filter, sort, and pagination controls for user-organization assignments search.","typeName":"IHealthcarePlatformUserOrgAssignment.IRequest"},"responseBody":{"description":"Paginated and filtered list of user-organization-role assignment records.","typeName":"IPageIHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/userOrgAssignments","method":"patch"},{"specification":"This operation searches, filters, and paginates user-organization assignment records (healthcare_platform_user_org_assignments) in the healthcare platform. The operation enables advanced querying based on user_id, organization_id, role_code, assignment_status, and supports sorting and pagination, in order to facilitate RBAC administration, audit, and organizational management.","description":"The PATCH /userOrgAssignments endpoint retrieves a filtered, paginated list of user-organization-role assignments from the healthcare_platform_user_org_assignments Prisma model. Administrators and system staff can search, sort, and paginate assignments by user, organization, role code, and assignment status, which is essential for platform-wide RBAC enforcement and audits.\n\nThe request body supports granular filtering (e.g., users with a specific role within an organization, assignments pending approval, or recently updated links). Security is vital; only users with system, organization, or designated RBAC admin roles can access the full listing, and search results are filtered to the requesting user's scope.\n\nReturned records provide summary assignment details (user_id, organization_id, role, status, created/updated timestamps) useful for auditing, onboarding/offboarding, or role review workflows. This operation complements create, update, and erase endpoints for full user access management.","summary":"Search and paginate user-organization assignment records (healthcare_platform_user_org_assignments).","parameters":[],"requestBody":{"description":"Filter, sort, and pagination controls for user-organization assignments search.","typeName":"IHealthcarePlatformUserOrgAssignment.IRequest"},"responseBody":{"description":"Paginated and filtered list of user-organization-role assignment records.","typeName":"IPageIHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/userOrgAssignments","method":"patch"},{"specification":"This operation retrieves details of a specific user-to-organization assignment (healthcare_platform_user_org_assignments) in the healthcare platform. Using the unique userOrgAssignmentId, it returns all assignment information including user_id, organization_id, role_code, assignment_status, audit timestamps, and relevant related context for access management, permission enforcement, or audit review.","description":"GET /userOrgAssignments/{userOrgAssignmentId} provides complete details of a user-organization assignment mapping via the healthcare_platform_user_org_assignments Prisma table. It is used by system and organization administrators to audit, review, or verify membership, permission, and RBAC assignment history for a specific user within a tenant.\n\nThe operation requires a valid UUID for the assignment. It returns assignment metadata (user, organization, role, status, created/updated/deleted timestamps), enabling workflows like offboarding, reassignment, or compliance review. Security checks ensure only authorized staff can view sensitive assignment information, with scope filtering as required by business rules.\n\nThis operation is closely related to the search (list), create, update, and erase endpoints for assignment management. Error handling includes addressal of invalid, deleted, or non-existent IDs, returning useful HTTP errors.","summary":"Fetch details of a specific user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[{"name":"userOrgAssignmentId","description":"Unique identifier for the user-organization assignment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed assignment record including user ID, organization, role, status, timestamps.","typeName":"IHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/userOrgAssignments/{userOrgAssignmentId}","method":"get"},{"specification":"This operation retrieves details of a specific user-to-organization assignment (healthcare_platform_user_org_assignments) in the healthcare platform. Using the unique userOrgAssignmentId, it returns all assignment information including user_id, organization_id, role_code, assignment_status, audit timestamps, and relevant related context for access management, permission enforcement, or audit review.","description":"GET /userOrgAssignments/{userOrgAssignmentId} provides complete details of a user-organization assignment mapping via the healthcare_platform_user_org_assignments Prisma table. It is used by system and organization administrators to audit, review, or verify membership, permission, and RBAC assignment history for a specific user within a tenant.\n\nThe operation requires a valid UUID for the assignment. It returns assignment metadata (user, organization, role, status, created/updated/deleted timestamps), enabling workflows like offboarding, reassignment, or compliance review. Security checks ensure only authorized staff can view sensitive assignment information, with scope filtering as required by business rules.\n\nThis operation is closely related to the search (list), create, update, and erase endpoints for assignment management. Error handling includes addressal of invalid, deleted, or non-existent IDs, returning useful HTTP errors.","summary":"Fetch details of a specific user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[{"name":"userOrgAssignmentId","description":"Unique identifier for the user-organization assignment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed assignment record including user ID, organization, role, status, timestamps.","typeName":"IHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/userOrgAssignments/{userOrgAssignmentId}","method":"get"},{"specification":"This operation creates a new user-organization assignment (healthcare_platform_user_org_assignments) in the healthcare platform, mapping a user to a specific organization and role with a defined assignment status. Used in onboarding, access provisioning, and automated RBAC workflows. The request body includes user_id, organization_id, role_code, and assignment_status required for creation.","description":"POST /userOrgAssignments enables system or organization administrators to provision a new user-organization link by creating a row in the healthcare_platform_user_org_assignments Prisma table. This is essential for assigning staff, clinical users, or admin users to an organization context with clearly designated role and assignment metadata.\n\nInput validation ensures the referenced user and organization exist, the role_code is valid for the org, and the assignment_status is permissible (e.g., 'active', 'pending'). The operation triggers any onboarding or access provisioning hooks defined in business logic. Audit requirements ensure the assignment is recorded with all relevant metadata for review or compliance.\n\nError handling includes duplicate assignment detection, permission validation, and appropriate feedback for invalid data. This API is related to update, erase, and listing/search endpoints to provide the full RBAC management cycle.","summary":"Create a new user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[],"requestBody":{"description":"Required information for assigning a user to an organization and role.","typeName":"IHealthcarePlatformUserOrgAssignment.ICreate"},"responseBody":{"description":"Details of the created user-organization assignment record.","typeName":"IHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/userOrgAssignments","method":"post"},{"specification":"This operation creates a new user-organization assignment (healthcare_platform_user_org_assignments) in the healthcare platform, mapping a user to a specific organization and role with a defined assignment status. Used in onboarding, access provisioning, and automated RBAC workflows. The request body includes user_id, organization_id, role_code, and assignment_status required for creation.","description":"POST /userOrgAssignments enables system or organization administrators to provision a new user-organization link by creating a row in the healthcare_platform_user_org_assignments Prisma table. This is essential for assigning staff, clinical users, or admin users to an organization context with clearly designated role and assignment metadata.\n\nInput validation ensures the referenced user and organization exist, the role_code is valid for the org, and the assignment_status is permissible (e.g., 'active', 'pending'). The operation triggers any onboarding or access provisioning hooks defined in business logic. Audit requirements ensure the assignment is recorded with all relevant metadata for review or compliance.\n\nError handling includes duplicate assignment detection, permission validation, and appropriate feedback for invalid data. This API is related to update, erase, and listing/search endpoints to provide the full RBAC management cycle.","summary":"Create a new user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[],"requestBody":{"description":"Required information for assigning a user to an organization and role.","typeName":"IHealthcarePlatformUserOrgAssignment.ICreate"},"responseBody":{"description":"Details of the created user-organization assignment record.","typeName":"IHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/userOrgAssignments","method":"post"},{"specification":"This operation updates an existing user-organization assignment (userOrgAssignment) in the healthcare platform. It operates on the healthcare_platform_user_org_assignments table in the Systematic schema. The details that can be updated include role code, assignment status, or organizational assignment for a given user (usually an actor such as a system admin, medical doctor, nurse, etc.). Updating an assignment is crucial for maintaining accurate RBAC, permission escalation, and organizational re-assignments across multi-tenant data boundaries.\n\nThis endpoint enforces strong authorization and audit logging, as changes to user-organization linkage impact compliance and PHI boundaries. Only platform administrators or users with specific permissions can invoke this update. Every update should be audit-trailed with before/after details to ensure compliance with healthcare regulations and prevent privilege escalation.\n\nBusiness validations should check that: role_code changes map to allowed roles, assignment_status conforms to platform-supported states, and assignments are never duplicated for a user-organization pair. Related endpoints include the creation of new assignments and deletion when a user leaves an organization. Attempts to update non-existent IDs or perform unauthorized changes should return clear error responses.","description":"This endpoint allows authorized staff to update an existing user-organization assignment record in the healthcarePlatform. Multi-tenant healthcare organizations rely on correct, up-to-date mapping of users (system admins, medical staff, support) to their assigned organizations for all RBAC and business logic.\n\nOn update, only valid, active organization and role_code assignments are allowed, and changes are strictly audit-logged. Business rules enforce single assignment per user-org combination, requiring unique and active assignment status. Role assignments may trigger additional workflows such as credential checks or session invalidation for privilege downgrades. Critical roles (organizationAdmin, departmentHead, medicalDoctor) require additional verification and may affect open patient cases or operational approvals.\n\nAttempting to update with an invalid or deactivated role, inactive organization, or conflicting assignment produces explicit validation errors. All changes are tracked in financial, compliance, and core audit logs to support HIPAA and internal investigations. If a user attempts to update a record outside their permission scope or with insufficient privilege, the system denies the update and logs the access attempt.\n\nThis operation is closely related to userOrgAssignment creation (for onboarding) and deletion/termination endpoints (for offboarding).","summary":"Update an existing user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[{"name":"userOrgAssignmentId","description":"Unique identifier for the user-organization assignment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for this userOrgAssignment record.","typeName":"IHealthcarePlatformUserOrgAssignment.IUpdate"},"responseBody":{"description":"The updated user-organization assignment record with the new values applied.","typeName":"IHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/userOrgAssignments/{userOrgAssignmentId}","method":"put"},{"specification":"This operation updates an existing user-organization assignment (userOrgAssignment) in the healthcare platform. It operates on the healthcare_platform_user_org_assignments table in the Systematic schema. The details that can be updated include role code, assignment status, or organizational assignment for a given user (usually an actor such as a system admin, medical doctor, nurse, etc.). Updating an assignment is crucial for maintaining accurate RBAC, permission escalation, and organizational re-assignments across multi-tenant data boundaries.\n\nThis endpoint enforces strong authorization and audit logging, as changes to user-organization linkage impact compliance and PHI boundaries. Only platform administrators or users with specific permissions can invoke this update. Every update should be audit-trailed with before/after details to ensure compliance with healthcare regulations and prevent privilege escalation.\n\nBusiness validations should check that: role_code changes map to allowed roles, assignment_status conforms to platform-supported states, and assignments are never duplicated for a user-organization pair. Related endpoints include the creation of new assignments and deletion when a user leaves an organization. Attempts to update non-existent IDs or perform unauthorized changes should return clear error responses.","description":"This endpoint allows authorized staff to update an existing user-organization assignment record in the healthcarePlatform. Multi-tenant healthcare organizations rely on correct, up-to-date mapping of users (system admins, medical staff, support) to their assigned organizations for all RBAC and business logic.\n\nOn update, only valid, active organization and role_code assignments are allowed, and changes are strictly audit-logged. Business rules enforce single assignment per user-org combination, requiring unique and active assignment status. Role assignments may trigger additional workflows such as credential checks or session invalidation for privilege downgrades. Critical roles (organizationAdmin, departmentHead, medicalDoctor) require additional verification and may affect open patient cases or operational approvals.\n\nAttempting to update with an invalid or deactivated role, inactive organization, or conflicting assignment produces explicit validation errors. All changes are tracked in financial, compliance, and core audit logs to support HIPAA and internal investigations. If a user attempts to update a record outside their permission scope or with insufficient privilege, the system denies the update and logs the access attempt.\n\nThis operation is closely related to userOrgAssignment creation (for onboarding) and deletion/termination endpoints (for offboarding).","summary":"Update an existing user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[{"name":"userOrgAssignmentId","description":"Unique identifier for the user-organization assignment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for this userOrgAssignment record.","typeName":"IHealthcarePlatformUserOrgAssignment.IUpdate"},"responseBody":{"description":"The updated user-organization assignment record with the new values applied.","typeName":"IHealthcarePlatformUserOrgAssignment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/userOrgAssignments/{userOrgAssignmentId}","method":"put"},{"specification":"This operation deletes an existing user-organization assignment from the platform by userOrgAssignmentId. It targets the healthcare_platform_user_org_assignments table and performs a soft delete (logical archival via the deleted_at column), maintaining traceability for compliance and audit. Deletion is only allowed by system or organization admin users with appropriate permissions.","description":"Allows an authorized system or organization administrator to remove a user-organization assignment by marking it as deleted (soft delete).\n\nDeleting a user-org assignment is a sensitive operation affecting a user's RBAC and business workflow assignments. The endpoint enforces strict business validation to prevent removal of critical assignments unless safely transferable (for example, a department head role cannot be deleted if there are open duties). Attempts to delete non-existent or non-active assignments result in a clear error.\n\nAll deletions are recorded for audit/compliance review, and access is denied if the acting user lacks sufficient privilege. The operation is related to the update (for role/status changes) and create endpoints (when onboarding new staff or medical users).","summary":"Soft-delete a user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[{"name":"userOrgAssignmentId","description":"Unique identifier for the user-organization assignment to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/userOrgAssignments/{userOrgAssignmentId}","method":"delete"},{"specification":"This operation deletes an existing user-organization assignment from the platform by userOrgAssignmentId. It targets the healthcare_platform_user_org_assignments table and performs a soft delete (logical archival via the deleted_at column), maintaining traceability for compliance and audit. Deletion is only allowed by system or organization admin users with appropriate permissions.","description":"Allows an authorized system or organization administrator to remove a user-organization assignment by marking it as deleted (soft delete).\n\nDeleting a user-org assignment is a sensitive operation affecting a user's RBAC and business workflow assignments. The endpoint enforces strict business validation to prevent removal of critical assignments unless safely transferable (for example, a department head role cannot be deleted if there are open duties). Attempts to delete non-existent or non-active assignments result in a clear error.\n\nAll deletions are recorded for audit/compliance review, and access is denied if the acting user lacks sufficient privilege. The operation is related to the update (for role/status changes) and create endpoints (when onboarding new staff or medical users).","summary":"Soft-delete a user-organization assignment (healthcare_platform_user_org_assignments).","parameters":[{"name":"userOrgAssignmentId","description":"Unique identifier for the user-organization assignment to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/userOrgAssignments/{userOrgAssignmentId}","method":"delete"},{"specification":"This operation allows for advanced search, filtering, and retrieval of configuration records in the healthcare_platform_configuration table. Supports organization/global system settings for business logic and tenant customization. Advanced query parameters allow tenants and system admins to search for configurations by key, value, or organization_id, and filter by created/updated timestamps or status. Provides paginated, query-driven listings suitable for admin configuration dashboards.","description":"Enables platform/system administrators and authorized organization administrators to retrieve a filtered, paginated list of configuration records for the entire platform or by tenant. Supports advanced searching on configuration keys, values, and organizational scoping.\n\nThis endpoint powers configuration UI screens, platform policy review, and operational troubleshooting. Search criteria may include key patterns, partial matches, and date filtering based on changed/created/updated timestamps. Authorization and filtering respect tenant boundaries, and only system-wide global configs or the caller's organization are shown per user privileges.\n\nThe returned records are suitable for admin console views and configuration audit workflows. Related endpoints include individual configuration get/update by id. All access events are audit-logged for compliance. Improper or unauthorized queries result in explicit errors and no data leakage across tenant boundaries.","summary":"Search, filter, and paginate configuration records (healthcare_platform_configuration).","parameters":[],"requestBody":{"description":"Search and filter options for configuration retrieval.","typeName":"IHealthcarePlatformConfiguration.IRequest"},"responseBody":{"description":"Paginated list of configuration records matching search/query criteria.","typeName":"IPageIHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/configuration","method":"patch"},{"specification":"This operation allows for advanced search, filtering, and retrieval of configuration records in the healthcare_platform_configuration table. Supports organization/global system settings for business logic and tenant customization. Advanced query parameters allow tenants and system admins to search for configurations by key, value, or organization_id, and filter by created/updated timestamps or status. Provides paginated, query-driven listings suitable for admin configuration dashboards.","description":"Enables platform/system administrators and authorized organization administrators to retrieve a filtered, paginated list of configuration records for the entire platform or by tenant. Supports advanced searching on configuration keys, values, and organizational scoping.\n\nThis endpoint powers configuration UI screens, platform policy review, and operational troubleshooting. Search criteria may include key patterns, partial matches, and date filtering based on changed/created/updated timestamps. Authorization and filtering respect tenant boundaries, and only system-wide global configs or the caller's organization are shown per user privileges.\n\nThe returned records are suitable for admin console views and configuration audit workflows. Related endpoints include individual configuration get/update by id. All access events are audit-logged for compliance. Improper or unauthorized queries result in explicit errors and no data leakage across tenant boundaries.","summary":"Search, filter, and paginate configuration records (healthcare_platform_configuration).","parameters":[],"requestBody":{"description":"Search and filter options for configuration retrieval.","typeName":"IHealthcarePlatformConfiguration.IRequest"},"responseBody":{"description":"Paginated list of configuration records matching search/query criteria.","typeName":"IPageIHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/configuration","method":"patch"},{"specification":"This operation retrieves a single configuration record from the healthcare_platform_configuration table by configurationId. Used in admin dashboards and automated configuration management to load settings for specific organizational or platform use cases. Configuration records may control tenant-specific settings, feature toggles, or business policies. Requires admin or organization admin privileges matching the config's scope to access.","description":"Allows a platform/system admin or an authorized org admin to retrieve a specific configuration setting by its unique ID. This supports admin UI detail screens, platform/business logic injection, and real-time verification of organization or global settings.\n\nRetrieved records are filtered by organizational scope and permission; system admins may access global and tenant-owned configs, while org admins only see their own org's configs. Related endpoints include list/index/search and configuration update endpoints. Attempts to access non-existent or unauthorized configuration IDs result in explicit compliance error responses. All access attempts are audit-logged for regulatory review and security investigation.","summary":"Retrieve a single configuration record by id (healthcare_platform_configuration).","parameters":[{"name":"configurationId","description":"Unique identifier for the configuration record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed configuration record for the given id.","typeName":"IHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/configuration/{configurationId}","method":"get"},{"specification":"This operation retrieves a single configuration record from the healthcare_platform_configuration table by configurationId. Used in admin dashboards and automated configuration management to load settings for specific organizational or platform use cases. Configuration records may control tenant-specific settings, feature toggles, or business policies. Requires admin or organization admin privileges matching the config's scope to access.","description":"Allows a platform/system admin or an authorized org admin to retrieve a specific configuration setting by its unique ID. This supports admin UI detail screens, platform/business logic injection, and real-time verification of organization or global settings.\n\nRetrieved records are filtered by organizational scope and permission; system admins may access global and tenant-owned configs, while org admins only see their own org's configs. Related endpoints include list/index/search and configuration update endpoints. Attempts to access non-existent or unauthorized configuration IDs result in explicit compliance error responses. All access attempts are audit-logged for regulatory review and security investigation.","summary":"Retrieve a single configuration record by id (healthcare_platform_configuration).","parameters":[{"name":"configurationId","description":"Unique identifier for the configuration record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed configuration record for the given id.","typeName":"IHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/configuration/{configurationId}","method":"get"},{"specification":"This operation allows creation of a new configuration setting record within the healthcare platform. It maps to the healthcare_platform_configuration table in the Prisma schema. Configurations can be platform-global or organization-specific, enabling administrators to manage customizable, versioned, and auditable settings such as language, timezone, feature flags, or business-specific parameters. Only operational and technical configuration is permitted; clinical or PHI must not be stored here. On creation, each setting is validated for uniqueness (by key/organization), appropriate description, and auditability. Soft deletion is supported using the deleted_at field for compliance retention. Creation timestamps and last modification times are maintained for auditing.","path":"/healthcarePlatform/systemAdmin/configuration","method":"post","summary":"Create a new configuration record in the healthcare_platform_configuration table.","description":"Create a new configuration setting in the healthcarePlatform. The configuration may be specific to an organization (if organization_id is provided), or global for all tenants (if omitted/null). Administrators define the configuration key, its value, and provide a human-readable description of its impact or business purpose. This API restricts creation to operational and technical settings—storing clinical or PHI data here is not supported and may result in validation errors.\n\nAppropriate permissions are required to invoke this API, typically platform administrators or organization administrators with configuration privileges. The configuration key must be unique per organization; attempts to duplicate will result in an error. The newly created configuration can be updated or soft-deleted later through related endpoints.\n\nOn success, the new configuration record is returned, including its system-generated UUID, creation and update timestamps, and all supplied fields. Timestamps assist in tracking configuration changes for audit and rollback. This endpoint is integral for supporting tenant-level customizing, feature flags, business logic toggles, and compliance-related technical parameters.","parameters":[],"requestBody":{"description":"Details of the configuration to be created, including optional organization, key, value, and description.","typeName":"IHealthcarePlatformConfiguration.ICreate"},"responseBody":{"description":"The created configuration entity with UUID, timestamps, and all defined fields.","typeName":"IHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation allows creation of a new configuration setting record within the healthcare platform. It maps to the healthcare_platform_configuration table in the Prisma schema. Configurations can be platform-global or organization-specific, enabling administrators to manage customizable, versioned, and auditable settings such as language, timezone, feature flags, or business-specific parameters. Only operational and technical configuration is permitted; clinical or PHI must not be stored here. On creation, each setting is validated for uniqueness (by key/organization), appropriate description, and auditability. Soft deletion is supported using the deleted_at field for compliance retention. Creation timestamps and last modification times are maintained for auditing.","path":"/healthcarePlatform/organizationAdmin/configuration","method":"post","summary":"Create a new configuration record in the healthcare_platform_configuration table.","description":"Create a new configuration setting in the healthcarePlatform. The configuration may be specific to an organization (if organization_id is provided), or global for all tenants (if omitted/null). Administrators define the configuration key, its value, and provide a human-readable description of its impact or business purpose. This API restricts creation to operational and technical settings—storing clinical or PHI data here is not supported and may result in validation errors.\n\nAppropriate permissions are required to invoke this API, typically platform administrators or organization administrators with configuration privileges. The configuration key must be unique per organization; attempts to duplicate will result in an error. The newly created configuration can be updated or soft-deleted later through related endpoints.\n\nOn success, the new configuration record is returned, including its system-generated UUID, creation and update timestamps, and all supplied fields. Timestamps assist in tracking configuration changes for audit and rollback. This endpoint is integral for supporting tenant-level customizing, feature flags, business logic toggles, and compliance-related technical parameters.","parameters":[],"requestBody":{"description":"Details of the configuration to be created, including optional organization, key, value, and description.","typeName":"IHealthcarePlatformConfiguration.ICreate"},"responseBody":{"description":"The created configuration entity with UUID, timestamps, and all defined fields.","typeName":"IHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing configuration record in the healthcare_platform_configuration table. It enables administrators to modify settings for operational, technical, or feature flag configuration, which may be scoped globally or to a specific organization. The API supports updating the configuration key, value, or description and maintains auditability via updated_at timestamps. Modification is subject to uniqueness constraints—configuration keys must remain unique per organization. The update will not affect deleted records and enforces business logic to restrict storage of clinical/PHI in configuration records.","path":"/healthcarePlatform/systemAdmin/configuration/{configurationId}","method":"put","summary":"Update a configuration record by UUID in the healthcare_platform_configuration table.","description":"Update an existing configuration setting identified by its UUID. Only organization or system administrators are permitted to invoke this API, and upon execution, the system ensures that the configuration key and target organization uniqueness constraints are enforced. The operation allows updating fields such as key, value, or description, but prohibits clinical or PHI values.\n\nThe update operation will only affect active (non-soft-deleted) records. Attempts to modify keys/values resulting in logic conflicts (such as duplicate key/org pairs) will trigger error responses. All updates are timestamped for audit purposes. This API is primarily used for technical, operational, and business logic settings that may require periodic modification due to policy or feature changes.\n\nThe modified configuration record is returned—including its updated fields and audit timestamps—enabling downstream systems to react to updated configurations as needed.","parameters":[{"name":"configurationId","description":"UUID of the configuration setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for key, value, or description of the configuration setting.","typeName":"IHealthcarePlatformConfiguration.IUpdate"},"responseBody":{"description":"The updated configuration entity with latest fields and audit metadata.","typeName":"IHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation updates an existing configuration record in the healthcare_platform_configuration table. It enables administrators to modify settings for operational, technical, or feature flag configuration, which may be scoped globally or to a specific organization. The API supports updating the configuration key, value, or description and maintains auditability via updated_at timestamps. Modification is subject to uniqueness constraints—configuration keys must remain unique per organization. The update will not affect deleted records and enforces business logic to restrict storage of clinical/PHI in configuration records.","path":"/healthcarePlatform/organizationAdmin/configuration/{configurationId}","method":"put","summary":"Update a configuration record by UUID in the healthcare_platform_configuration table.","description":"Update an existing configuration setting identified by its UUID. Only organization or system administrators are permitted to invoke this API, and upon execution, the system ensures that the configuration key and target organization uniqueness constraints are enforced. The operation allows updating fields such as key, value, or description, but prohibits clinical or PHI values.\n\nThe update operation will only affect active (non-soft-deleted) records. Attempts to modify keys/values resulting in logic conflicts (such as duplicate key/org pairs) will trigger error responses. All updates are timestamped for audit purposes. This API is primarily used for technical, operational, and business logic settings that may require periodic modification due to policy or feature changes.\n\nThe modified configuration record is returned—including its updated fields and audit timestamps—enabling downstream systems to react to updated configurations as needed.","parameters":[{"name":"configurationId","description":"UUID of the configuration setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for key, value, or description of the configuration setting.","typeName":"IHealthcarePlatformConfiguration.IUpdate"},"responseBody":{"description":"The updated configuration entity with latest fields and audit metadata.","typeName":"IHealthcarePlatformConfiguration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation performs a soft deletion of an existing configuration record, setting the deleted_at timestamp instead of removing the record entirely from the healthcare_platform_configuration table. The API supports regulatory compliance and audit requirements by preserving the deletion event and retaining the record for future possible recovery or compliance review. Access is limited to system- or organization-level administrators, in accordance with platform RBAC policies.","path":"/healthcarePlatform/systemAdmin/configuration/{configurationId}","method":"delete","summary":"Soft-delete a configuration record by UUID, using the deleted_at field for compliance.","description":"Soft-delete a configuration setting by marking its deleted_at field (logical deletion), ensuring the entry is excluded from active configuration queries but retained in the database for audit/compliance. This operation is limited to active configuration records and cannot be applied to already-deleted records. The delete action is restricted to users with appropriate privileges and will be fully audited, including deletion timestamp and the deleting user's identity.\n\nSoft-deleted configurations do not participate in business or operational logic but remain available for audit and possible restoration as per compliance and business policy. Permanent deletion from the table is not supported from the API to ensure regulatory compliance for audit, rollback, or post-mortem purposes.","parameters":[{"name":"configurationId","description":"UUID of the configuration setting to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"This operation performs a soft deletion of an existing configuration record, setting the deleted_at timestamp instead of removing the record entirely from the healthcare_platform_configuration table. The API supports regulatory compliance and audit requirements by preserving the deletion event and retaining the record for future possible recovery or compliance review. Access is limited to system- or organization-level administrators, in accordance with platform RBAC policies.","path":"/healthcarePlatform/organizationAdmin/configuration/{configurationId}","method":"delete","summary":"Soft-delete a configuration record by UUID, using the deleted_at field for compliance.","description":"Soft-delete a configuration setting by marking its deleted_at field (logical deletion), ensuring the entry is excluded from active configuration queries but retained in the database for audit/compliance. This operation is limited to active configuration records and cannot be applied to already-deleted records. The delete action is restricted to users with appropriate privileges and will be fully audited, including deletion timestamp and the deleting user's identity.\n\nSoft-deleted configurations do not participate in business or operational logic but remain available for audit and possible restoration as per compliance and business policy. Permanent deletion from the table is not supported from the API to ensure regulatory compliance for audit, rollback, or post-mortem purposes.","parameters":[{"name":"configurationId","description":"UUID of the configuration setting to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation enables advanced querying and searching of locale or regional settings records (language, timezone, date/time/number formatting) within the healthcare platform. It targets the healthcare_platform_locale_settings table, supporting filtering and pagination by criteria such as organization, department, language, or timezone. The endpoint returns a paginated list of locale settings, facilitating administrative management of multi-lingual and region-aware healthcare operations, scheduling, notification, and reporting workflows.","path":"/healthcarePlatform/systemAdmin/localeSettings","method":"patch","summary":"Search and paginate locale settings in healthcare_platform_locale_settings.","description":"Retrieve a filtered, paginated list of locale settings for organizations and departments. This operation enables platform and organization administrators to search for locale preferences by organization or department ID, supported language (such as en-US or es-ES), timezone, or formatting standards. It supports advanced search, sorting, and pagination to facilitate management of localization and scheduling policies across multi-tenant and multinational environments.\n\nThe endpoint ensures that only users with administrative privileges can access the full spectrum of locale settings and that sensitive configuration details are managed in compliance with data privacy/operational policy. The response includes summary fields appropriate for list views and allows further detail queries by record ID through related endpoints.\n\nThis operation is crucial for maintaining regionally aware behaviors in notifications, reporting, and user display settings across diverse clinical and operational domains.","parameters":[],"requestBody":{"description":"Search and pagination parameters for locating locale settings.","typeName":"IHealthcarePlatformLocaleSettings.IRequest"},"responseBody":{"description":"Paginated list of locale setting summaries for administrative review.","typeName":"IPageIHealthcarePlatformLocaleSettings.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation enables advanced querying and searching of locale or regional settings records (language, timezone, date/time/number formatting) within the healthcare platform. It targets the healthcare_platform_locale_settings table, supporting filtering and pagination by criteria such as organization, department, language, or timezone. The endpoint returns a paginated list of locale settings, facilitating administrative management of multi-lingual and region-aware healthcare operations, scheduling, notification, and reporting workflows.","path":"/healthcarePlatform/organizationAdmin/localeSettings","method":"patch","summary":"Search and paginate locale settings in healthcare_platform_locale_settings.","description":"Retrieve a filtered, paginated list of locale settings for organizations and departments. This operation enables platform and organization administrators to search for locale preferences by organization or department ID, supported language (such as en-US or es-ES), timezone, or formatting standards. It supports advanced search, sorting, and pagination to facilitate management of localization and scheduling policies across multi-tenant and multinational environments.\n\nThe endpoint ensures that only users with administrative privileges can access the full spectrum of locale settings and that sensitive configuration details are managed in compliance with data privacy/operational policy. The response includes summary fields appropriate for list views and allows further detail queries by record ID through related endpoints.\n\nThis operation is crucial for maintaining regionally aware behaviors in notifications, reporting, and user display settings across diverse clinical and operational domains.","parameters":[],"requestBody":{"description":"Search and pagination parameters for locating locale settings.","typeName":"IHealthcarePlatformLocaleSettings.IRequest"},"responseBody":{"description":"Paginated list of locale setting summaries for administrative review.","typeName":"IPageIHealthcarePlatformLocaleSettings.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"Retrieve detailed information about a specific locale settings record by its UUID. This operation interacts with the healthcare_platform_locale_settings table, which stores localization information such as language, timezone, date and time formats, and number formatting for the platform, organizations, and optionally departments within an organization. Typically, this endpoint is used by system or organization administrators to view the properties and configuration of a locale setting before update, audit, or display in administrative UIs. Data isolation is enforced at the organizational or departmental level, and access control adheres strictly to the role-based access control model defined in the business rules.","path":"/healthcarePlatform/systemAdmin/localeSettings/{localeSettingId}","method":"get","summary":"Retrieve a specific locale setting by its UUID from the healthcare_platform_locale_settings table.","description":"This operation fetches a single locale setting record by its unique identifier. It is particularly useful in administrative or configuration UX flows, where a user needs to review, audit, or validate the locale settings for an organization or department.\n\nRole-specific access control is enforced. Only system administrators, organization administrators, or users with explicit organization/department-level privileges are permitted to invoke this operation. The locale setting includes detailed regional options such as language, timezone, date and time formats, and number formatting, which dictate how the platform delivers localized content to users.\n\nAuthorization and audit trails for this operation are enforced as per compliance and business policy. Error handling includes not-found, forbidden, or access violation responses if the locale setting does not exist, is deleted, or is outside the requesting user's scope. This operation depends on proper RBAC mapping and the user's organizational context.","parameters":[{"name":"localeSettingId","description":"The unique identifier (UUID) for the locale setting to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested locale setting, including language, timezone, formatting details, and configuration context.","typeName":"IHealthcarePlatformLocaleSettings"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at"},{"specification":"Retrieve detailed information about a specific locale settings record by its UUID. This operation interacts with the healthcare_platform_locale_settings table, which stores localization information such as language, timezone, date and time formats, and number formatting for the platform, organizations, and optionally departments within an organization. Typically, this endpoint is used by system or organization administrators to view the properties and configuration of a locale setting before update, audit, or display in administrative UIs. Data isolation is enforced at the organizational or departmental level, and access control adheres strictly to the role-based access control model defined in the business rules.","path":"/healthcarePlatform/organizationAdmin/localeSettings/{localeSettingId}","method":"get","summary":"Retrieve a specific locale setting by its UUID from the healthcare_platform_locale_settings table.","description":"This operation fetches a single locale setting record by its unique identifier. It is particularly useful in administrative or configuration UX flows, where a user needs to review, audit, or validate the locale settings for an organization or department.\n\nRole-specific access control is enforced. Only system administrators, organization administrators, or users with explicit organization/department-level privileges are permitted to invoke this operation. The locale setting includes detailed regional options such as language, timezone, date and time formats, and number formatting, which dictate how the platform delivers localized content to users.\n\nAuthorization and audit trails for this operation are enforced as per compliance and business policy. Error handling includes not-found, forbidden, or access violation responses if the locale setting does not exist, is deleted, or is outside the requesting user's scope. This operation depends on proper RBAC mapping and the user's organizational context.","parameters":[{"name":"localeSettingId","description":"The unique identifier (UUID) for the locale setting to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the requested locale setting, including language, timezone, formatting details, and configuration context.","typeName":"IHealthcarePlatformLocaleSettings"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"at"},{"specification":"Create a new locale setting for an organization or department. This operation interacts with the healthcare_platform_locale_settings table and allows administrators to define localization options such as language, timezone, date formats, and number formatting to customize the platform's behavior for users in specific organizational or departmental contexts. The creation process must validate that no duplicate active setting exists for the same organization/department and ensure compliance with regional and organizational policies.","path":"/healthcarePlatform/systemAdmin/localeSettings","method":"post","summary":"Create a new locale setting entry in the healthcare_platform_locale_settings table.","description":"This operation enables a system or organization administrator to create a new locale setting, specifying details like language code, timezone, date and time format preferences, and number formatting rules. Locale settings affect how users in the relevant organization or department experience date/time, number, and language localization within the platform.\n\nBusiness logic enforces that only one active locale setting per organization/department combination exists. Attempting to create a duplicate will result in a validation error. All creation events are audited, with user identity, configuration values, and timestamp recorded for compliance.\n\nOnly authorized roles may invoke this operation. The operation requires robust input validation to ensure supported languages, valid timezone values, and proper date/number formatting conventions in accordance with business and compliance requirements.","parameters":[],"requestBody":{"description":"The configuration and attributes for the new locale setting, including language, timezone, and formatting.","typeName":"IHealthcarePlatformLocaleSettings.ICreate"},"responseBody":{"description":"The newly created locale setting record, including all persisted configuration attributes and unique identifier.","typeName":"IHealthcarePlatformLocaleSettings"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"create"},{"specification":"Create a new locale setting for an organization or department. This operation interacts with the healthcare_platform_locale_settings table and allows administrators to define localization options such as language, timezone, date formats, and number formatting to customize the platform's behavior for users in specific organizational or departmental contexts. The creation process must validate that no duplicate active setting exists for the same organization/department and ensure compliance with regional and organizational policies.","path":"/healthcarePlatform/organizationAdmin/localeSettings","method":"post","summary":"Create a new locale setting entry in the healthcare_platform_locale_settings table.","description":"This operation enables a system or organization administrator to create a new locale setting, specifying details like language code, timezone, date and time format preferences, and number formatting rules. Locale settings affect how users in the relevant organization or department experience date/time, number, and language localization within the platform.\n\nBusiness logic enforces that only one active locale setting per organization/department combination exists. Attempting to create a duplicate will result in a validation error. All creation events are audited, with user identity, configuration values, and timestamp recorded for compliance.\n\nOnly authorized roles may invoke this operation. The operation requires robust input validation to ensure supported languages, valid timezone values, and proper date/number formatting conventions in accordance with business and compliance requirements.","parameters":[],"requestBody":{"description":"The configuration and attributes for the new locale setting, including language, timezone, and formatting.","typeName":"IHealthcarePlatformLocaleSettings.ICreate"},"responseBody":{"description":"The newly created locale setting record, including all persisted configuration attributes and unique identifier.","typeName":"IHealthcarePlatformLocaleSettings"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"create"},{"specification":"Update an existing locale settings record by its UUID. This operation allows authorized administrators to modify localization options (such as language, timezone, date/time formatting, and number formatting) for a given organization or department. It operates on the healthcare_platform_locale_settings table, enforcing validation so that updates do not create conflicting or duplicate settings for a given context. Audit trails are maintained for all changes to support compliance and rollback.","path":"/healthcarePlatform/systemAdmin/localeSettings/{localeSettingId}","method":"put","summary":"Update a locale setting in the healthcare_platform_locale_settings table by its UUID.","description":"With this operation, system or organization administrators can revise an existing locale setting record for an organization or department, such as changing language, timezone, or other localization preferences. The endpoint validates that the update does not create more than one active locale setting for the same scope and that all setting values conform to supported formats.\n\nAll updates are recorded in the audit trail, including who performed the change, the old values, and the time of the update. Security and RBAC requirements stipulate that only users with appropriate organizational or departmental privileges may invoke this operation. If the record does not exist, is deleted, or is not within scope, the operation will return an error.\n\nThe response provides the new state of the locale setting after update, with all updated attributes. Careful validation and conflict checking are critical to maintain platform integrity and localization coherence.","parameters":[{"name":"localeSettingId","description":"The unique identifier (UUID) for the locale setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated attributes and configuration for the locale setting.","typeName":"IHealthcarePlatformLocaleSettings.IUpdate"},"responseBody":{"description":"The updated locale setting record, reflecting all changes and new configuration.","typeName":"IHealthcarePlatformLocaleSettings"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"update"},{"specification":"Update an existing locale settings record by its UUID. This operation allows authorized administrators to modify localization options (such as language, timezone, date/time formatting, and number formatting) for a given organization or department. It operates on the healthcare_platform_locale_settings table, enforcing validation so that updates do not create conflicting or duplicate settings for a given context. Audit trails are maintained for all changes to support compliance and rollback.","path":"/healthcarePlatform/organizationAdmin/localeSettings/{localeSettingId}","method":"put","summary":"Update a locale setting in the healthcare_platform_locale_settings table by its UUID.","description":"With this operation, system or organization administrators can revise an existing locale setting record for an organization or department, such as changing language, timezone, or other localization preferences. The endpoint validates that the update does not create more than one active locale setting for the same scope and that all setting values conform to supported formats.\n\nAll updates are recorded in the audit trail, including who performed the change, the old values, and the time of the update. Security and RBAC requirements stipulate that only users with appropriate organizational or departmental privileges may invoke this operation. If the record does not exist, is deleted, or is not within scope, the operation will return an error.\n\nThe response provides the new state of the locale setting after update, with all updated attributes. Careful validation and conflict checking are critical to maintain platform integrity and localization coherence.","parameters":[{"name":"localeSettingId","description":"The unique identifier (UUID) for the locale setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated attributes and configuration for the locale setting.","typeName":"IHealthcarePlatformLocaleSettings.IUpdate"},"responseBody":{"description":"The updated locale setting record, reflecting all changes and new configuration.","typeName":"IHealthcarePlatformLocaleSettings"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"update"},{"specification":"Permanently delete or deactivate a locale settings record by its UUID, operating on the healthcare_platform_locale_settings table. This operation is used to remove localization configurations that are obsolete, incorrect, or superseded. The deletion enforces business rules: if soft delete is implemented via a deleted_at column, the operation will mark the record as deleted rather than removing it from the database, supporting compliance and potential recovery.","path":"/healthcarePlatform/systemAdmin/localeSettings/{localeSettingId}","method":"delete","summary":"Delete (soft-delete) a locale setting from the healthcare_platform_locale_settings table by UUID.","description":"This operation allows system or organization administrators to delete an existing locale setting entry by its unique ID, marking it as deleted through the deleted_at field instead of removing it entirely. This supports regulatory, business audit, and data retention requirements, and enables organizations to maintain a compliance-grade record of all locale configuration changes.\n\nOnly authorized users may execute deletions, and logic is enforced to prevent deletion of required or default settings. All deletion events are logged in the audit trail, with the initiator and timestamp for compliance.\n\nAttempting to delete a non-existent, already deleted, or out-of-scope locale setting returns a not-found error; attempting to remove a required/default setting returns a business logic error. All delete operations should ensure that soft deletion is handled as per the table's deleted_at semantics for compliance and potential restoration requirements.","parameters":[{"name":"localeSettingId","description":"The unique identifier (UUID) for the locale setting to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase"},{"specification":"Permanently delete or deactivate a locale settings record by its UUID, operating on the healthcare_platform_locale_settings table. This operation is used to remove localization configurations that are obsolete, incorrect, or superseded. The deletion enforces business rules: if soft delete is implemented via a deleted_at column, the operation will mark the record as deleted rather than removing it from the database, supporting compliance and potential recovery.","path":"/healthcarePlatform/organizationAdmin/localeSettings/{localeSettingId}","method":"delete","summary":"Delete (soft-delete) a locale setting from the healthcare_platform_locale_settings table by UUID.","description":"This operation allows system or organization administrators to delete an existing locale setting entry by its unique ID, marking it as deleted through the deleted_at field instead of removing it entirely. This supports regulatory, business audit, and data retention requirements, and enables organizations to maintain a compliance-grade record of all locale configuration changes.\n\nOnly authorized users may execute deletions, and logic is enforced to prevent deletion of required or default settings. All deletion events are logged in the audit trail, with the initiator and timestamp for compliance.\n\nAttempting to delete a non-existent, already deleted, or out-of-scope locale setting returns a not-found error; attempting to remove a required/default setting returns a business logic error. All delete operations should ensure that soft deletion is handled as per the table's deleted_at semantics for compliance and potential restoration requirements.","parameters":[{"name":"localeSettingId","description":"The unique identifier (UUID) for the locale setting to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null,"name":"erase"},{"specification":"This operation retrieves a paginated and filterable list of system administrator accounts used for platform management in the healthcarePlatform system. It operates on the healthcare_platform_systemadmins table, supporting advanced search, sorting, and pagination by typical fields such as email address, full name, or creation date. Filtering may include active vs deactivated admins (deleted_at = null vs not null) and fuzzy searches on names and email. The endpoint is designed for privileged use and is a critical compliance and security control component for overall SaaS operations.","description":"Retrieve a list of all system administrator accounts registered in the healthcarePlatform system. This operation allows privileged users to search, filter, and view admins by attributes such as email, full name, phone number, or account creation date.\n\nSecurity is of the utmost importance; this endpoint must be tightly restricted to users with system-level administrative rights, as it exposes platform management accounts. The resulting data includes audit fields, omits sensitive credential hashes, and highlights soft-deleted/inactive accounts as required for audit/compliance reviews.\n\nThis operation interacts with the healthcare_platform_systemadmins table, leveraging database indexes for fast searching and retrieval. Paginated responses are essential for large platforms with many admins. Error handling includes permission errors for unauthorized access and validation for invalid filters or sort parameters. Related endpoints include system administrator creation, detail retrieval, and updates.","summary":"Search and retrieve a paginated list of system administrators (healthcare_platform_systemadmins)","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for listing system admins","typeName":"IHealthcarePlatformSystemAdmin.IRequest"},"responseBody":{"description":"Paginated list of system admin summary information matching filter criteria","typeName":"IPageIHealthcarePlatformSystemadmin.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/systemadmins","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a single system administrator account, identified by UUID, from the healthcare_platform_systemadmins table. It is used for viewing platform admin profiles for audit, compliance, or privileged support functions. This operation returns all standard admin account fields except credential hash and is restricted to authorized high-privilege users only.","description":"Retrieve information about a specific system administrator using their unique ID. This is intended for privileged review or compliance actions.\n\nThis endpoint provides all stored profile details for the selected admin, including email, full name, phone, timestamps, and soft-deletion status. Credentials or authentication hashes are never returned. Access is limited to users with systemAdmin privileges for security reasons.\n\nThe operation is built upon the healthcare_platform_systemadmins model and will result in a 404 if no active or soft-deleted matching record is found. Validation includes UUID format for the ID parameter. This endpoint complements the system admin list, creation, and update operations.","summary":"Retrieve platform system administrator details by ID (healthcare_platform_systemadmins)","parameters":[{"name":"systemAdminId","description":"Unique identifier for the target system administrator","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed system administrator profile for the requested ID","typeName":"IHealthcarePlatformSystemAdmin"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/systemadmins/{systemAdminId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new system administrator account in the healthcare_platform_systemadmins table. Only existing system admins can invoke this operation, as new platform admins have the highest privileges. The input payload provides all required account fields (email, full name, and optional phone), and performs input validation such as email uniqueness and business domain requirements. On success, the new admin account is created and returned. Audit and compliance restrictions apply.","description":"Create a new system administrator account to manage the healthcarePlatform system. Only current system admins may create new admin accounts.\n\nThis operation requires required fields such as email (unique, business domain), full legal name, and may include business phone for account validation/MFA. Upon creation, the admin's created_at and status fields are set per platform defaults. The newly created admin account is returned in full, but without credential hashes or sensitive authentication data.\n\nFailure scenarios include uniqueness violations, missing required fields, or permission errors. This is a sensitive endpoint governed by the highest level of audit, requiring that invokers themselves be privileged systemAdmin users.","summary":"Create a new system administrator (healthcare_platform_systemadmins)","parameters":[],"requestBody":{"description":"New system administrator account information (email, full name, phone)","typeName":"IHealthcarePlatformSystemAdmin.ICreate"},"responseBody":{"description":"Created system admin profile, with business fields but no credential hashes","typeName":"IHealthcarePlatformSystemAdmin"},"authorizationRoles":["systemAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/systemadmins","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing system administrator account in the healthcare_platform_systemadmins table, identified by UUID. It allows changing non-credential fields (such as full name, phone, or status) for platform administration. Restricted to systemAdmin users only, who may not update their own authentication credentials via this endpoint. Business rules enforce valid state transitions and audit trail creation.","description":"Update non-credential information (such as full name, phone, or status) for an existing system administrator. Only other system admins may make profile changes, ensuring strong compliance and security posture.\n\nCore fields such as active/deactivated status, contact phone, and display name may be updated, but credential/authorization settings are managed via separate endpoints/lifecycle. Only systemAdmin users may use this endpoint, and all changes are logged for compliance.\n\nThe operation validates uniqueness and allowed transitions per business rules and links to audit trail logic. On success, the full updated system admin profile is returned, except for authentication hashes or sensitive information.","summary":"Update platform system administrator profile fields (healthcare_platform_systemadmins)","parameters":[{"name":"systemAdminId","description":"Unique identifier of the system administrator to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for system administrator profile","typeName":"IHealthcarePlatformSystemAdmin.IUpdate"},"responseBody":{"description":"Updated system administrator profile (excluding credentials)","typeName":"IHealthcarePlatformSystemAdmin"},"authorizationRoles":["systemAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/systemadmins/{systemAdminId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently removes a System Admin user account from the healthcarePlatform system. The operation is associated with the healthcare_platform_systemadmins table, which holds all system administrator users responsible for global platform management, integrations, security, and audit. Permanent deletion is only permitted for compliance purposes and is strictly audited; soft deletion is also tracked via the deleted_at field but this endpoint performs a hard removal. All related org assignments and audit trails must be considered in implementation logic.","description":"This API operation enables the permanent deletion of a System Admin account from the healthcarePlatform system. It is intended for rare, compliance-justified scenarios such as role revocation, security breaches, or organization restructuring. The healthcare_platform_systemadmins table records superuser identity and contact information, and is central to platform-wide operations.\n\nAuthorization is limited to other System Admins and service owner roles. The deletion process is logged for forensic audit purposes, removing the record and breaking all associated assignments. The operation does not cascade to lower-privilege user types and must carefully respect referential integrity. Deletion is irreversible, and all access by the user is immediately revoked.\n\nError handling includes rejection if the systemAdminId is invalid, the account is already deleted, or referential integrity is at risk. This endpoint is complementary to account deactivation endpoints and should be used with caution, only in scenarios where full removal is business-mandated.\n\nThe operation is tracked in compliance and audit logs for platform-wide monitoring. Records are permanently removed from the database, not simply marked as deleted. Manual internal review and clearance may be required before invocation.","summary":"Permanently erase a System Admin account from the healthcare_platform_systemadmins table.","parameters":[{"name":"systemAdminId","description":"Unique identifier (UUID) of the target System Admin to be permanently deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/systemadmins/{systemAdminId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation provides advanced search and pagination over the healthcare_platform_organizationadmins table, allowing authorized actors to efficiently filter, sort, and retrieve a paginated list of Organization Admin user records. Supports query by name, email, creation date, status, and organizational assignment.","description":"Use this operation to retrieve a filtered, paginated list of Organization Admin accounts within the healthcarePlatform system. This enables global and system administrators to locate, audit, or manage organziational admins, supporting scenarios such as compliance review and bulk updates.\n\nThe healthcare_platform_organizationadmins schema tracks the identity, contact, and status of each organization admin. Filters available include full name, email, account status, and date range. Results can be sorted and paginated for scalability. Sensitive fields and audit references are protected based on caller's role/privileges.\n\nSecurity rules restrict access to high-privilege roles, ensuring that only authorized actors with platform-wide or compliance responsibilities can request this data. The endpoint supports complex search requirements but does not expose raw credentials or unrelated organizational context details.\n\nError handling ensures invalid filters, pagination errors, or misuse will be rejected with clear feedback. The operation is typically used in conjunction with user detail retrieval and account management endpoints, providing an efficient backbone for administrative workflows.","summary":"Search and retrieve Organization Admin user records with advanced filtering and pagination.","parameters":[],"requestBody":{"description":"Filter, pagination, and sorting criteria for Organization Admin search queries.","typeName":"IHealthcarePlatformOrganizationAdmin.IRequest"},"responseBody":{"description":"Paginated, filtered list of Organization Admin user summary records matching the search criteria.","typeName":"IPageIHealthcarePlatformOrganizationadmin.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/organizationadmins","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves complete profile and status information for a single Organization Admin user from the healthcare_platform_organizationadmins table, identified by unique organizationAdminId. It is used for detailed management, audit, and compliance workflows at the organizational or system level.","description":"This API returns the detailed profile of a single Organization Admin account from the healthcarePlatform system, including display name, email, status, and contact information. It is based on the healthcare_platform_organizationadmins schema, which governs organization-specific admin users responsible for staff, compliance, billing, and reporting management.\n\nAuthorization is restricted to privileged roles with business or compliance need. The account is looked up by organizationAdminId (UUID). All returned data respects platform privacy and audit constraints and omits sensitive credential information.\n\nThe endpoint throws errors for invalid, deleted, or non-existent organizationAdminId records, and is designed to complement organization admin search, creation, and update endpoints. Used in administrative UIs and automated audit/compliance workflows.","summary":"Retrieve detailed profile for specific Organization Admin by organizationAdminId.","parameters":[{"name":"organizationAdminId","description":"Unique identifier (UUID) of the Organization Admin user to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed Organization Admin user record corresponding to specified organizationAdminId.","typeName":"IHealthcarePlatformOrganizationAdmin"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/organizationadmins/{organizationAdminId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new Organization Admin user in the healthcare_platform_organizationadmins table within the healthcarePlatform system. OrgAdmin accounts represent high-trust admins for individual healthcare organization tenants and are critical for operational separation, compliance, and delegated resource management.","description":"Use this operation to create a new Organization Admin user within the healthcarePlatform system. It inserts a fresh record into healthcare_platform_organizationadmins, assigning required identity, contact, and status fields. Organization Admins are responsible for managing their organization's users, policies, billing, reporting, and compliance operations.\n\nThe request body must provide a business email, full name, and other required fields as specified in the schema. Optional fields such as phone can also be included. The endpoint enforces uniqueness of email and legal full name as per healthcarePlatform business policies. On successful creation, a new record is returned representing the newly onboarded Organization Admin user.\n\nCaller must be a System Admin (or possess equivalent permissions), as OrgAdmin creation is a sensitive platform operation. Input validation, audit logging, and user notification flows are all triggered. Errors are returned on uniqueness violation, invalid input, or insufficient authorization.\n\nThis operation is designed to be part of onboarding, role assignment, and multi-tenant configuration workflows. It is complemented by search, read, update, and erase endpoints for full organization admin lifecycle management. System-level audit and compliance requirements are enforced for all creation actions.","summary":"Create a new Organization Admin user account in the healthcare_platform_organizationadmins table.","parameters":[],"requestBody":{"description":"Account creation details for new Organization Admin user.","typeName":"IHealthcarePlatformOrganizationAdmin.ICreate"},"responseBody":{"description":"The newly created Organization Admin user account record.","typeName":"IHealthcarePlatformOrganizationAdmin"},"authorizationRoles":["systemAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/organizationadmins","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates the details of an organization administrator in the healthcarePlatform system. It targets the 'healthcare_platform_organizationadmins' table from the Prisma schema, allowing update of contact details (such as full name, email, and phone), ensuring compliance with organizational policy and audit requirements. Only users with appropriate privilege can invoke this update operation. The operation takes the organization administrator's unique identifier as a path parameter and expects an update payload conforming to the DTO naming conventions with 'IHealthcarePlatformOrganizationadmin.IUpdate'. The response returns the updated administrator profile with all current values.","description":"Updates a specific organization administrator's information, including their full legal name, business email, and phone number as stored in the 'healthcare_platform_organizationadmins' table. This operation is subject to strict audit trails and can only be performed by users with suitable privileges within the healthcare organization.\n\nOn successful update, the response includes all current record fields and verification of the changes. The operation logs the update timestamp and ensures all business compliance workflows related to administrator updates are followed.\n\nValidation checks include email uniqueness, required fields, and enforcement of business logic for organization admin privileges. Conflict or access errors return clear business-oriented error messages. Only fields existent in the schema are used or returned. The update can only be performed if the record is not marked as deleted (soft-deleted).","summary":"Update an organization administrator (healthcare_platform_organizationadmins) record by its ID","parameters":[{"name":"organizationAdminId","description":"The unique identifier (UUID) of the organization administrator to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload containing updatable fields for the organization admin, such as full_name, email, phone.","typeName":"IHealthcarePlatformOrganizationAdmin.IUpdate"},"responseBody":{"description":"The updated organization admin record with all fields present in the schema.","typeName":"IHealthcarePlatformOrganizationAdmin"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/organizationadmins/{organizationAdminId}","method":"put"},{"specification":"This operation updates the details of an organization administrator in the healthcarePlatform system. It targets the 'healthcare_platform_organizationadmins' table from the Prisma schema, allowing update of contact details (such as full name, email, and phone), ensuring compliance with organizational policy and audit requirements. Only users with appropriate privilege can invoke this update operation. The operation takes the organization administrator's unique identifier as a path parameter and expects an update payload conforming to the DTO naming conventions with 'IHealthcarePlatformOrganizationadmin.IUpdate'. The response returns the updated administrator profile with all current values.","description":"Updates a specific organization administrator's information, including their full legal name, business email, and phone number as stored in the 'healthcare_platform_organizationadmins' table. This operation is subject to strict audit trails and can only be performed by users with suitable privileges within the healthcare organization.\n\nOn successful update, the response includes all current record fields and verification of the changes. The operation logs the update timestamp and ensures all business compliance workflows related to administrator updates are followed.\n\nValidation checks include email uniqueness, required fields, and enforcement of business logic for organization admin privileges. Conflict or access errors return clear business-oriented error messages. Only fields existent in the schema are used or returned. The update can only be performed if the record is not marked as deleted (soft-deleted).","summary":"Update an organization administrator (healthcare_platform_organizationadmins) record by its ID","parameters":[{"name":"organizationAdminId","description":"The unique identifier (UUID) of the organization administrator to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload containing updatable fields for the organization admin, such as full_name, email, phone.","typeName":"IHealthcarePlatformOrganizationAdmin.IUpdate"},"responseBody":{"description":"The updated organization admin record with all fields present in the schema.","typeName":"IHealthcarePlatformOrganizationAdmin"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/organizationadmins/{organizationAdminId}","method":"put"},{"specification":"This operation permanently deletes an organization administrator record from the 'healthcare_platform_organizationadmins' table. The operation enforces business-critical, audit-compliant hard deletion, as this table is used for managing role assignments and high-privilege access. Only platform or organization administrators can erase records, and the target record is specified by its UUID in the path parameter. This operation cannot be reversed and triggers an audit trail for regulatory compliance.","description":"Permanently removes the specified organization admin entry from the database, fully erasing associated administrator details. Access is restricted to system or organization administrators with the highest level permissions in the healthcarePlatform.\n\nUpon completion, the operation ensures the record can no longer be referenced or recovered and initiates a platform-wide audit log event. All access constraints and dependencies must be resolved before deletion. If the specified record is missing, already deleted, or protected by policy (active assignments or investigatory lock), the operation returns clear error messages.\n\nNo soft-deletion is performed for this operation, and care should be taken to comply with security and privacy best practices, including audit compliance for privileged actor actions.","summary":"Erase (hard-delete) an organization administrator by ID (healthcare_platform_organizationadmins)","parameters":[{"name":"organizationAdminId","description":"The unique identifier (UUID) of the organization administrator to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/organizationadmins/{organizationAdminId}","method":"delete"},{"specification":"This operation permanently deletes an organization administrator record from the 'healthcare_platform_organizationadmins' table. The operation enforces business-critical, audit-compliant hard deletion, as this table is used for managing role assignments and high-privilege access. Only platform or organization administrators can erase records, and the target record is specified by its UUID in the path parameter. This operation cannot be reversed and triggers an audit trail for regulatory compliance.","description":"Permanently removes the specified organization admin entry from the database, fully erasing associated administrator details. Access is restricted to system or organization administrators with the highest level permissions in the healthcarePlatform.\n\nUpon completion, the operation ensures the record can no longer be referenced or recovered and initiates a platform-wide audit log event. All access constraints and dependencies must be resolved before deletion. If the specified record is missing, already deleted, or protected by policy (active assignments or investigatory lock), the operation returns clear error messages.\n\nNo soft-deletion is performed for this operation, and care should be taken to comply with security and privacy best practices, including audit compliance for privileged actor actions.","summary":"Erase (hard-delete) an organization administrator by ID (healthcare_platform_organizationadmins)","parameters":[{"name":"organizationAdminId","description":"The unique identifier (UUID) of the organization administrator to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/organizationadmins/{organizationAdminId}","method":"delete"},{"specification":"This operation searches and retrieves a paginated, filterable list of all department head users in the healthcarePlatform. It accesses the 'healthcare_platform_departmentheads' table and supports advanced querying on fields such as name, email, and department assignments. The operation is useful for organization administrators conducting staff reviews, compliance assessments, or workflow management. It expects a search payload and returns paginated result data conforming to naming conventions.","description":"Retrieves a filtered and paginated list of department heads, leveraging the 'healthcare_platform_departmentheads' schema. The request body can contain search parameters such as partial name match, email keyword, and creation/update timeframe filters.\n\nThe returned page contains department head summary or detail records, supporting list display, selection, and bulk assignment workflows for administrators. Result metadata includes total items, page size, and pagination state.\n\nAccess is restricted to users with system or organizational admin privileges, enabling them to manage, review, and audit department head assignments. All searches are logged for compliance and visibility. If filters produce no results, the response is an empty page dataset.","summary":"Search and list department heads (healthcare_platform_departmentheads), with pagination and filters","parameters":[],"requestBody":{"description":"Query and filter parameters for searching department heads.","typeName":"IHealthcarePlatformDepartmentHead.IRequest"},"responseBody":{"description":"Paginated department head search results, each with available fields per schema.","typeName":"IPageIHealthcarePlatformDepartmenthead"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/departmentheads","method":"patch"},{"specification":"This operation searches and retrieves a paginated, filterable list of all department head users in the healthcarePlatform. It accesses the 'healthcare_platform_departmentheads' table and supports advanced querying on fields such as name, email, and department assignments. The operation is useful for organization administrators conducting staff reviews, compliance assessments, or workflow management. It expects a search payload and returns paginated result data conforming to naming conventions.","description":"Retrieves a filtered and paginated list of department heads, leveraging the 'healthcare_platform_departmentheads' schema. The request body can contain search parameters such as partial name match, email keyword, and creation/update timeframe filters.\n\nThe returned page contains department head summary or detail records, supporting list display, selection, and bulk assignment workflows for administrators. Result metadata includes total items, page size, and pagination state.\n\nAccess is restricted to users with system or organizational admin privileges, enabling them to manage, review, and audit department head assignments. All searches are logged for compliance and visibility. If filters produce no results, the response is an empty page dataset.","summary":"Search and list department heads (healthcare_platform_departmentheads), with pagination and filters","parameters":[],"requestBody":{"description":"Query and filter parameters for searching department heads.","typeName":"IHealthcarePlatformDepartmentHead.IRequest"},"responseBody":{"description":"Paginated department head search results, each with available fields per schema.","typeName":"IPageIHealthcarePlatformDepartmenthead"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/departmentheads","method":"patch"},{"specification":"This operation retrieves the complete details of a department head user from the 'healthcare_platform_departmentheads' table, referenced by the unique departmentHeadId path parameter. It returns all fields present in the schema and supports use cases where staff, admin, or auditor roles need to inspect or verify department head assignments and credentials. Only users with organizational or platform-wide roles have authority to perform this action.","description":"Fetches the full record for a single department head, as specified by their unique identifier, from the department heads dataset. Used for audits, staff management, or organizational workflow reviews, the operation returns data such as full legal name, email, phone, and timestamps.\n\nAccess is restricted by RBAC; only admins or platform roles may view this information in accordance with compliance and privacy policy. The operation logs access for regulatory review. If the record is missing or deleted, an error is returned with clear messaging around staff record status.","summary":"Get a department head's full record by ID (healthcare_platform_departmentheads)","parameters":[{"name":"departmentHeadId","description":"The unique identifier (UUID) of the department head to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete department head details (all fields in the schema).","typeName":"IHealthcarePlatformDepartmentHead"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/departmentheads/{departmentHeadId}","method":"get"},{"specification":"This operation retrieves the complete details of a department head user from the 'healthcare_platform_departmentheads' table, referenced by the unique departmentHeadId path parameter. It returns all fields present in the schema and supports use cases where staff, admin, or auditor roles need to inspect or verify department head assignments and credentials. Only users with organizational or platform-wide roles have authority to perform this action.","description":"Fetches the full record for a single department head, as specified by their unique identifier, from the department heads dataset. Used for audits, staff management, or organizational workflow reviews, the operation returns data such as full legal name, email, phone, and timestamps.\n\nAccess is restricted by RBAC; only admins or platform roles may view this information in accordance with compliance and privacy policy. The operation logs access for regulatory review. If the record is missing or deleted, an error is returned with clear messaging around staff record status.","summary":"Get a department head's full record by ID (healthcare_platform_departmentheads)","parameters":[{"name":"departmentHeadId","description":"The unique identifier (UUID) of the department head to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete department head details (all fields in the schema).","typeName":"IHealthcarePlatformDepartmentHead"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/departmentheads/{departmentHeadId}","method":"get"},{"specification":"This operation allows platform administrators to create a new Department Head within the healthcarePlatform system. The Department Head represents a mid-level organizational leader, responsible for overseeing clinical or operational departments (such as Cardiology or Billing) within healthcare organizations. The operation creates a new record in the 'healthcare_platform_departmentheads' table, capturing details such as email, full name, and optional phone number. Department Heads are subject to strict role-based audit controls and compliance workflows. Department Head creation is only accessible by high-privilege staff (such as Organization Admins or System Admins), and the new Department Head must be assigned to an existing organization and department by separate assignment workflows after creation. Security requirements ensure only authorized users are permitted to onboard new department leaders. Upon successful creation, full details of the Department Head, including business email and identification metadata, are returned for display or further assignment.","description":"This operation is used to create a new Department Head representing clinical or operational leadership within an existing healthcare organization. Department Heads are responsible for scheduling, performance management, and approvals within their domain. Department Heads must provide a business-verified email address for compliance purposes, and can have an optional phone number for notifications and alerting. The creation process enforces unique email and business-legal identity, reflected in the system's audit logs for onboarding and compliance validation.\n\nSecurity and permissions are enforced so that only organization-level administrators or system administrators may onboard Department Heads. The new Department Head record is linked to broader RBAC and department assignment workflows, but assignment to specific departments and organizations is handled separately from this creation process to ensure clean separation of concerns and auditability. Error responses include unique constraint violations (non-unique email) and insufficient permissions.\n\nOperation integration is critical for multi-tenant environments. All Department Head records support soft deletion and full auditability for role onboarding changes, meeting all business rules for clinical administration.","summary":"Create a new Department Head in the healthcare platform (table: healthcare_platform_departmentheads)","parameters":[],"requestBody":{"description":"Information required to create a new Department Head (email, full name, optional phone)","typeName":"IHealthcarePlatformDepartmentHead.ICreate"},"responseBody":{"description":"Details of the newly created Department Head including identifiers and business fields","typeName":"IHealthcarePlatformDepartmentHead"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/departmentheads","method":"post"},{"specification":"This operation allows platform administrators to create a new Department Head within the healthcarePlatform system. The Department Head represents a mid-level organizational leader, responsible for overseeing clinical or operational departments (such as Cardiology or Billing) within healthcare organizations. The operation creates a new record in the 'healthcare_platform_departmentheads' table, capturing details such as email, full name, and optional phone number. Department Heads are subject to strict role-based audit controls and compliance workflows. Department Head creation is only accessible by high-privilege staff (such as Organization Admins or System Admins), and the new Department Head must be assigned to an existing organization and department by separate assignment workflows after creation. Security requirements ensure only authorized users are permitted to onboard new department leaders. Upon successful creation, full details of the Department Head, including business email and identification metadata, are returned for display or further assignment.","description":"This operation is used to create a new Department Head representing clinical or operational leadership within an existing healthcare organization. Department Heads are responsible for scheduling, performance management, and approvals within their domain. Department Heads must provide a business-verified email address for compliance purposes, and can have an optional phone number for notifications and alerting. The creation process enforces unique email and business-legal identity, reflected in the system's audit logs for onboarding and compliance validation.\n\nSecurity and permissions are enforced so that only organization-level administrators or system administrators may onboard Department Heads. The new Department Head record is linked to broader RBAC and department assignment workflows, but assignment to specific departments and organizations is handled separately from this creation process to ensure clean separation of concerns and auditability. Error responses include unique constraint violations (non-unique email) and insufficient permissions.\n\nOperation integration is critical for multi-tenant environments. All Department Head records support soft deletion and full auditability for role onboarding changes, meeting all business rules for clinical administration.","summary":"Create a new Department Head in the healthcare platform (table: healthcare_platform_departmentheads)","parameters":[],"requestBody":{"description":"Information required to create a new Department Head (email, full name, optional phone)","typeName":"IHealthcarePlatformDepartmentHead.ICreate"},"responseBody":{"description":"Details of the newly created Department Head including identifiers and business fields","typeName":"IHealthcarePlatformDepartmentHead"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/departmentheads","method":"post"},{"specification":"This operation allows administrators to update an existing Department Head's record in the healthcarePlatform system. Department Head entities are responsible for managing departments within organizations and may change their business details—such as email, name, or phone—over time. The endpoint targets a specific record in the 'healthcare_platform_departmentheads' table by its unique identifier. Only high-privilege roles (such as Organization Admins or System Admins) may perform updates. The operation returns the updated, current Department Head record. All changes are audit-logged for regulatory compliance, with full traceability of before/after changes.","description":"This operation enables authorized platform or organization administrators to update key details of a Department Head, including business-verified email, full name, and optional phone number. Changes are validated for uniqueness (notably for email), business logic compliance, and consistency with organization role policies.\n\nSecurity validation ensures that only authorized roles—specifically Organization Admins or System Admins—can modify Department Head records. All updates are recorded in the system's audit log, allowing for retrospective review of clinical leadership changes for compliance, regulatory, or legal investigation. The operation does not handle department reassignments or role escalations, which are managed through separate APIs. Error responses cover missing Department Head, unique constraint violations, and permission errors.\n\nThe endpoint maintains conformance with RBAC best practices and supports all business certification requirements for leadership role management in healthcare organizations.","summary":"Update business details of a Department Head record (table: healthcare_platform_departmentheads)","parameters":[{"name":"departmentHeadId","description":"Unique identifier for the Department Head to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the Department Head (may include email, full name, phone)","typeName":"IHealthcarePlatformDepartmentHead.IUpdate"},"responseBody":{"description":"Latest version of the updated Department Head record","typeName":"IHealthcarePlatformDepartmentHead"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/departmentheads/{departmentHeadId}","method":"put"},{"specification":"This operation allows administrators to update an existing Department Head's record in the healthcarePlatform system. Department Head entities are responsible for managing departments within organizations and may change their business details—such as email, name, or phone—over time. The endpoint targets a specific record in the 'healthcare_platform_departmentheads' table by its unique identifier. Only high-privilege roles (such as Organization Admins or System Admins) may perform updates. The operation returns the updated, current Department Head record. All changes are audit-logged for regulatory compliance, with full traceability of before/after changes.","description":"This operation enables authorized platform or organization administrators to update key details of a Department Head, including business-verified email, full name, and optional phone number. Changes are validated for uniqueness (notably for email), business logic compliance, and consistency with organization role policies.\n\nSecurity validation ensures that only authorized roles—specifically Organization Admins or System Admins—can modify Department Head records. All updates are recorded in the system's audit log, allowing for retrospective review of clinical leadership changes for compliance, regulatory, or legal investigation. The operation does not handle department reassignments or role escalations, which are managed through separate APIs. Error responses cover missing Department Head, unique constraint violations, and permission errors.\n\nThe endpoint maintains conformance with RBAC best practices and supports all business certification requirements for leadership role management in healthcare organizations.","summary":"Update business details of a Department Head record (table: healthcare_platform_departmentheads)","parameters":[{"name":"departmentHeadId","description":"Unique identifier for the Department Head to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the Department Head (may include email, full name, phone)","typeName":"IHealthcarePlatformDepartmentHead.IUpdate"},"responseBody":{"description":"Latest version of the updated Department Head record","typeName":"IHealthcarePlatformDepartmentHead"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/departmentheads/{departmentHeadId}","method":"put"},{"specification":"Permanently erases a Department Head record from the healthcarePlatform system by primary key. The endpoint targets the 'healthcare_platform_departmentheads' table via the Department Head's unique identifier. The operation performs a hard delete, as there is no explicit soft-delete field ('deleted_at') in the department head schema. Only Organization Admins and System Admins are authorized to permanently remove Department Heads. All deletions are strictly audited for regulatory and business compliance.","description":"This operation allows privileged administrators (organizationAdmin and systemAdmin) to perform permanent removal of a Department Head from the healthcare platform. Hard deletion is enforced due to the lack of an explicit soft-delete ('deleted_at') column in the 'healthcare_platform_departmentheads' schema. This operation is restricted to ensure only highly privileged users can execute irreversible deletions, and all actions are logged in the system's audit trails for legal and compliance purposes.\n\nCare must be taken before deletion to avoid orphaning organizational department assignments. Pre-deletion checks are recommended in the front-end or service layer. No content is returned upon success, only a standard confirmation code. Attempting to delete a non-existent record will result in a meaningful error message and audit logging. Operation does not affect related department or user assignments, which must be handled independently.","summary":"Permanently delete a Department Head by ID (table: healthcare_platform_departmentheads)","parameters":[{"name":"departmentHeadId","description":"Unique identifier of the Department Head to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/departmentheads/{departmentHeadId}","method":"delete"},{"specification":"Permanently erases a Department Head record from the healthcarePlatform system by primary key. The endpoint targets the 'healthcare_platform_departmentheads' table via the Department Head's unique identifier. The operation performs a hard delete, as there is no explicit soft-delete field ('deleted_at') in the department head schema. Only Organization Admins and System Admins are authorized to permanently remove Department Heads. All deletions are strictly audited for regulatory and business compliance.","description":"This operation allows privileged administrators (organizationAdmin and systemAdmin) to perform permanent removal of a Department Head from the healthcare platform. Hard deletion is enforced due to the lack of an explicit soft-delete ('deleted_at') column in the 'healthcare_platform_departmentheads' schema. This operation is restricted to ensure only highly privileged users can execute irreversible deletions, and all actions are logged in the system's audit trails for legal and compliance purposes.\n\nCare must be taken before deletion to avoid orphaning organizational department assignments. Pre-deletion checks are recommended in the front-end or service layer. No content is returned upon success, only a standard confirmation code. Attempting to delete a non-existent record will result in a meaningful error message and audit logging. Operation does not affect related department or user assignments, which must be handled independently.","summary":"Permanently delete a Department Head by ID (table: healthcare_platform_departmentheads)","parameters":[{"name":"departmentHeadId","description":"Unique identifier of the Department Head to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/departmentheads/{departmentHeadId}","method":"delete"},{"specification":"Allows authorized users to retrieve a paginated, filtered list of Medical Doctor records from the healthcarePlatform system for administrative or clinical operations. The endpoint utilizes the 'healthcare_platform_medicaldoctors' table and supports advanced search by email, NPI number, specialty, full name, and organizational status. Designed for Org Admin and System Admin roles for credentialing, assignment, and analytics workflows. The response provides paginated Medical Doctor summary information, supporting operational and compliance reporting.","description":"This operation enables platform administrators and organization administrators with appropriate privileges to perform advanced, paginated search across the full set of Medical Doctor records in the system. Search may leverage any combination of fields such as email, NPI number, clinical specialty, or name for authentication, administrative assignment, and clinical compliance reporting purposes. Only authorized roles may access these capabilities due to the sensitive nature of provider records and licensure data.\n\nThe operation supports pagination and flexible filtering, with return structures optimized for administrative dashboards, analytics, and resource management. Secure auditing is ensured for all queries, and access is restricted to prevent inappropriate exposure of credential information. Responses may be filtered based on role scope (system-wide or organization-specific). Error states include invalid search parameters or permission errors. Operation is compliant with regulatory requirements for auditing provider access and credential reviews.","summary":"Paginated search/filter for Medical Doctors (table: healthcare_platform_medicaldoctors)","parameters":[],"requestBody":{"description":"Search criteria and paging/filter options for searching Medical Doctors","typeName":"IHealthcarePlatformMedicalDoctor.IRequest"},"responseBody":{"description":"Paginated summary of Medical Doctor records matching filters","typeName":"IPageIHealthcarePlatformMedicalDoctor.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/medicaldoctors","method":"patch"},{"specification":"Allows authorized users to retrieve a paginated, filtered list of Medical Doctor records from the healthcarePlatform system for administrative or clinical operations. The endpoint utilizes the 'healthcare_platform_medicaldoctors' table and supports advanced search by email, NPI number, specialty, full name, and organizational status. Designed for Org Admin and System Admin roles for credentialing, assignment, and analytics workflows. The response provides paginated Medical Doctor summary information, supporting operational and compliance reporting.","description":"This operation enables platform administrators and organization administrators with appropriate privileges to perform advanced, paginated search across the full set of Medical Doctor records in the system. Search may leverage any combination of fields such as email, NPI number, clinical specialty, or name for authentication, administrative assignment, and clinical compliance reporting purposes. Only authorized roles may access these capabilities due to the sensitive nature of provider records and licensure data.\n\nThe operation supports pagination and flexible filtering, with return structures optimized for administrative dashboards, analytics, and resource management. Secure auditing is ensured for all queries, and access is restricted to prevent inappropriate exposure of credential information. Responses may be filtered based on role scope (system-wide or organization-specific). Error states include invalid search parameters or permission errors. Operation is compliant with regulatory requirements for auditing provider access and credential reviews.","summary":"Paginated search/filter for Medical Doctors (table: healthcare_platform_medicaldoctors)","parameters":[],"requestBody":{"description":"Search criteria and paging/filter options for searching Medical Doctors","typeName":"IHealthcarePlatformMedicalDoctor.IRequest"},"responseBody":{"description":"Paginated summary of Medical Doctor records matching filters","typeName":"IPageIHealthcarePlatformMedicalDoctor.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/medicaldoctors","method":"patch"},{"specification":"This operation retrieves detailed information for a specific medical doctor within the healthcare platform. It operates on the healthcare_platform_medicaldoctors table from the Prisma schema. The operation enables authorized users to access all available business and clinical fields for the specified doctor, supporting applications such as provider dashboards, credential validation, or clinical assignment workflows. All fields retrieved reflect the current state of the provider's record, as well as associated metadata for audit and compliance purposes.","description":"Retrieve detailed information about a single medical doctor based on their unique identifier. This operation provides access to the full profile, credentials, and attributes as defined in the healthcare_platform_medicaldoctors table of the Prisma schema, ensuring up-to-date data for authorized consumers.\n\nSecurity considerations demand strict role-based access control, as viewing doctor information is reserved for users with appropriate clinical, administrative, or system-level rights. All access is logged for compliance and audit, and data may be filtered or masked in accordance with organization or regulatory policy.\n\nReturned properties include legal name, NPI number, specialty, email, phone, and timestamps for creation, update, and soft deletion status. Any attempt to access a record that is marked deleted or does not exist shall result in an access error. Other business logic such as data masking might apply based on caller's role or organization.\n\nRelated API operations include searching for providers, updating or deactivating profiles, and credential/license verification. For related actions, refer to provider search and assignment endpoints.","summary":"Get detailed information for a specific medical doctor profile (healthcare_platform_medicaldoctors).","parameters":[{"name":"medicalDoctorId","description":"The unique identifier (UUID) of the target medical doctor to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested medical doctor as reflected in the database.","typeName":"IHealthcarePlatformMedicalDoctor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/medicaldoctors/{medicalDoctorId}","method":"get"},{"specification":"This operation retrieves detailed information for a specific medical doctor within the healthcare platform. It operates on the healthcare_platform_medicaldoctors table from the Prisma schema. The operation enables authorized users to access all available business and clinical fields for the specified doctor, supporting applications such as provider dashboards, credential validation, or clinical assignment workflows. All fields retrieved reflect the current state of the provider's record, as well as associated metadata for audit and compliance purposes.","description":"Retrieve detailed information about a single medical doctor based on their unique identifier. This operation provides access to the full profile, credentials, and attributes as defined in the healthcare_platform_medicaldoctors table of the Prisma schema, ensuring up-to-date data for authorized consumers.\n\nSecurity considerations demand strict role-based access control, as viewing doctor information is reserved for users with appropriate clinical, administrative, or system-level rights. All access is logged for compliance and audit, and data may be filtered or masked in accordance with organization or regulatory policy.\n\nReturned properties include legal name, NPI number, specialty, email, phone, and timestamps for creation, update, and soft deletion status. Any attempt to access a record that is marked deleted or does not exist shall result in an access error. Other business logic such as data masking might apply based on caller's role or organization.\n\nRelated API operations include searching for providers, updating or deactivating profiles, and credential/license verification. For related actions, refer to provider search and assignment endpoints.","summary":"Get detailed information for a specific medical doctor profile (healthcare_platform_medicaldoctors).","parameters":[{"name":"medicalDoctorId","description":"The unique identifier (UUID) of the target medical doctor to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested medical doctor as reflected in the database.","typeName":"IHealthcarePlatformMedicalDoctor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/medicaldoctors/{medicalDoctorId}","method":"get"},{"specification":"This operation creates a new medical doctor entity within the healthcare platform. It directly interfaces with the healthcare_platform_medicaldoctors table as per the Prisma schema. Organization or system administrators can use this endpoint to onboard new doctors, providing all required fields including contact, credentials, and specialty data. On creation, the system enforces required validation, cross-checks for unique NPI numbers and email addresses, and initiates downstream credential verification as per business rules.","description":"Create a new medical doctor profile and add them to the healthcare platform. Consumers must supply all mandatory fields as defined by the healthcare_platform_medicaldoctors table, such as email, full name, NPI number, and other professional details. On successful creation, the provider record will be accessible for further assignment to departments, clinical scheduling, or license validation.\n\nOnly authorized users (system admins or organization admins) can execute this operation. The input request is validated for uniqueness constraints (email, NPI number) and field formats. Business logic may trigger credential verification and onboarding workflows as part of post-processing.\n\nRelated API operations include updating a doctor's profile, assigning provider to organizations/departments, or starting credential validation sequences. All creation actions are fully audited.","summary":"Create a new medical doctor record (healthcare_platform_medicaldoctors).","parameters":[],"requestBody":{"description":"Information required to create a new medical doctor profile, including required credential and contact fields.","typeName":"IHealthcarePlatformMedicalDoctor.ICreate"},"responseBody":{"description":"The fully created medical doctor profile, including its unique identifier and metadata.","typeName":"IHealthcarePlatformMedicalDoctor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/medicaldoctors","method":"post"},{"specification":"This operation creates a new medical doctor entity within the healthcare platform. It directly interfaces with the healthcare_platform_medicaldoctors table as per the Prisma schema. Organization or system administrators can use this endpoint to onboard new doctors, providing all required fields including contact, credentials, and specialty data. On creation, the system enforces required validation, cross-checks for unique NPI numbers and email addresses, and initiates downstream credential verification as per business rules.","description":"Create a new medical doctor profile and add them to the healthcare platform. Consumers must supply all mandatory fields as defined by the healthcare_platform_medicaldoctors table, such as email, full name, NPI number, and other professional details. On successful creation, the provider record will be accessible for further assignment to departments, clinical scheduling, or license validation.\n\nOnly authorized users (system admins or organization admins) can execute this operation. The input request is validated for uniqueness constraints (email, NPI number) and field formats. Business logic may trigger credential verification and onboarding workflows as part of post-processing.\n\nRelated API operations include updating a doctor's profile, assigning provider to organizations/departments, or starting credential validation sequences. All creation actions are fully audited.","summary":"Create a new medical doctor record (healthcare_platform_medicaldoctors).","parameters":[],"requestBody":{"description":"Information required to create a new medical doctor profile, including required credential and contact fields.","typeName":"IHealthcarePlatformMedicalDoctor.ICreate"},"responseBody":{"description":"The fully created medical doctor profile, including its unique identifier and metadata.","typeName":"IHealthcarePlatformMedicalDoctor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/medicaldoctors","method":"post"},{"specification":"This operation updates the details of an existing medical doctor entity in the healthcare platform by unique ID. It acts on the healthcare_platform_medicaldoctors table as defined in the Prisma schema. System admins and organization administrators can modify provider details, trigger credential validation, or manage profile status. The operation enforces business logic regarding updatable fields and audit trails, and protects immutable fields such as the primary key and NPI number (unless editing is explicitly allowed).","description":"Update an existing medical doctor's profile using their unique identifier. The payload must adhere to the update schema defined for the healthcare_platform_medicaldoctors table, supporting partial or complete edits to fields such as contact info, specialty, or other business attributes.\n\nThis operation is restricted to system admins and organization admins, subject to RBAC, and all changes are audited for compliance. Depending on the field, updates may trigger downstream business logic such as credential re-validation or workflow assignment.\n\nIf the specified medical doctor does not exist or is marked as deleted, the operation will return an error response. Related endpoints include creating a provider, viewing details, or deactivating their record. Audit trails will track who made the update, what fields changed, and when.","summary":"Update an existing medical doctor profile by ID (healthcare_platform_medicaldoctors).","parameters":[{"name":"medicalDoctorId","description":"The unique identifier (UUID) of the medical doctor to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update in the target medical doctor's profile. Only allowed and non-immutable fields may be modified.","typeName":"IHealthcarePlatformMedicalDoctor.IUpdate"},"responseBody":{"description":"The updated medical doctor profile reflecting all changes.","typeName":"IHealthcarePlatformMedicalDoctor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/medicaldoctors/{medicalDoctorId}","method":"put"},{"specification":"This operation updates the details of an existing medical doctor entity in the healthcare platform by unique ID. It acts on the healthcare_platform_medicaldoctors table as defined in the Prisma schema. System admins and organization administrators can modify provider details, trigger credential validation, or manage profile status. The operation enforces business logic regarding updatable fields and audit trails, and protects immutable fields such as the primary key and NPI number (unless editing is explicitly allowed).","description":"Update an existing medical doctor's profile using their unique identifier. The payload must adhere to the update schema defined for the healthcare_platform_medicaldoctors table, supporting partial or complete edits to fields such as contact info, specialty, or other business attributes.\n\nThis operation is restricted to system admins and organization admins, subject to RBAC, and all changes are audited for compliance. Depending on the field, updates may trigger downstream business logic such as credential re-validation or workflow assignment.\n\nIf the specified medical doctor does not exist or is marked as deleted, the operation will return an error response. Related endpoints include creating a provider, viewing details, or deactivating their record. Audit trails will track who made the update, what fields changed, and when.","summary":"Update an existing medical doctor profile by ID (healthcare_platform_medicaldoctors).","parameters":[{"name":"medicalDoctorId","description":"The unique identifier (UUID) of the medical doctor to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update in the target medical doctor's profile. Only allowed and non-immutable fields may be modified.","typeName":"IHealthcarePlatformMedicalDoctor.IUpdate"},"responseBody":{"description":"The updated medical doctor profile reflecting all changes.","typeName":"IHealthcarePlatformMedicalDoctor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/medicaldoctors/{medicalDoctorId}","method":"put"},{"specification":"This operation permanently deletes a specific medical doctor record from the system using their unique identifier. It acts directly on the healthcare_platform_medicaldoctors table as defined in the Prisma schema. This endpoint is restricted to system admin and organization admin users and is subject to compliance and audit trail requirements. As there is a deleted_at soft delete column, this operation performs a soft deletion—marking the record as deleted but retaining it for regulatory retention and potential restoration.","description":"Delete (soft delete) a specific medical doctor profile by unique ID. Instead of physically removing the provider record, this operation sets the deleted_at field to indicate logical deletion, in accordance with compliance retention policy. The profile will be excluded from routine queries but retained in the database for audit and recovery purposes.\n\nExecution of this operation requires system admin or organization administrator privileges. Business logic checks will prevent deletion if the medical doctor is tied to active clinical assignments, regulatory holds, or ongoing credentialing processes. All deletion actions are recorded in the audit trail, and restoration is possible via dedicated recovery workflows.\n\nIf the record does not exist or is already deleted, a not found or idempotent success response is returned. Related API operations include restoration, fetching active/deleted doctors, and compliance audit reporting.","summary":"Soft delete a medical doctor record by ID (healthcare_platform_medicaldoctors).","parameters":[{"name":"medicalDoctorId","description":"The unique identifier (UUID) of the medical doctor to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/medicaldoctors/{medicalDoctorId}","method":"delete"},{"specification":"This operation permanently deletes a specific medical doctor record from the system using their unique identifier. It acts directly on the healthcare_platform_medicaldoctors table as defined in the Prisma schema. This endpoint is restricted to system admin and organization admin users and is subject to compliance and audit trail requirements. As there is a deleted_at soft delete column, this operation performs a soft deletion—marking the record as deleted but retaining it for regulatory retention and potential restoration.","description":"Delete (soft delete) a specific medical doctor profile by unique ID. Instead of physically removing the provider record, this operation sets the deleted_at field to indicate logical deletion, in accordance with compliance retention policy. The profile will be excluded from routine queries but retained in the database for audit and recovery purposes.\n\nExecution of this operation requires system admin or organization administrator privileges. Business logic checks will prevent deletion if the medical doctor is tied to active clinical assignments, regulatory holds, or ongoing credentialing processes. All deletion actions are recorded in the audit trail, and restoration is possible via dedicated recovery workflows.\n\nIf the record does not exist or is already deleted, a not found or idempotent success response is returned. Related API operations include restoration, fetching active/deleted doctors, and compliance audit reporting.","summary":"Soft delete a medical doctor record by ID (healthcare_platform_medicaldoctors).","parameters":[{"name":"medicalDoctorId","description":"The unique identifier (UUID) of the medical doctor to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/medicaldoctors/{medicalDoctorId}","method":"delete"},{"specification":"Retrieve a filtered and paginated list of nursing staff accounts from the system, leveraging the healthcare_platform_nurses table. Supports advanced multi-field search, filtering by department, license number, and status, as well as configurable pagination and sorting. The target entity is individual nurses, complete with unique identifiers, names, emails, license numbers, department affiliation, and account metadata. This endpoint enables role-based access for organization administrators, department heads, and relevant HR or compliance functions to query staff rosters as required by business processes.","description":"This operation enables organizational stakeholders to access a comprehensive index of nurses registered in the healthcarePlatform system. Utilizing the healthcare_platform_nurses schema, it supports highly granular filtering and search—by name, license, email, status, department, and speciality. Results are paginated, facilitating large rosters and regulatory reporting needs.\n\nSecurity is enforced via strict authorization: only those with appropriate privileges (for example, organizationAdmin or departmentHead) can access non-anonymized nurse lists. Result details are limited according to role; PHI and sensitive contact details are exposed only to roles with proper clearance. Rate limiting and audit logging are implemented to deter misuse and provide traceability.\n\nImplemented pagination allows scalable listing suitable for dashboards or onboarding flows. Query logic adheres to organizational and department-level isolation, in compliance with HIPAA and internal data governance. The endpoint handles edge cases such as inactive, deleted, or pending account states, and provides actionable errors for permission violations or invalid query syntax.","summary":"Search and retrieve a filtered, paginated list of nurses from the healthcarePlatform system (healthcare_platform_nurses table).","parameters":[],"requestBody":{"description":"Filtering, searching, and pagination options for nurse index retrieval.","typeName":"IHealthcarePlatformNurse.IRequest"},"responseBody":{"description":"A paginated list of summary nurse records matching query criteria.","typeName":"IPageIHealthcarePlatformNurse.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/nurses","method":"patch"},{"specification":"Retrieve a filtered and paginated list of nursing staff accounts from the system, leveraging the healthcare_platform_nurses table. Supports advanced multi-field search, filtering by department, license number, and status, as well as configurable pagination and sorting. The target entity is individual nurses, complete with unique identifiers, names, emails, license numbers, department affiliation, and account metadata. This endpoint enables role-based access for organization administrators, department heads, and relevant HR or compliance functions to query staff rosters as required by business processes.","description":"This operation enables organizational stakeholders to access a comprehensive index of nurses registered in the healthcarePlatform system. Utilizing the healthcare_platform_nurses schema, it supports highly granular filtering and search—by name, license, email, status, department, and speciality. Results are paginated, facilitating large rosters and regulatory reporting needs.\n\nSecurity is enforced via strict authorization: only those with appropriate privileges (for example, organizationAdmin or departmentHead) can access non-anonymized nurse lists. Result details are limited according to role; PHI and sensitive contact details are exposed only to roles with proper clearance. Rate limiting and audit logging are implemented to deter misuse and provide traceability.\n\nImplemented pagination allows scalable listing suitable for dashboards or onboarding flows. Query logic adheres to organizational and department-level isolation, in compliance with HIPAA and internal data governance. The endpoint handles edge cases such as inactive, deleted, or pending account states, and provides actionable errors for permission violations or invalid query syntax.","summary":"Search and retrieve a filtered, paginated list of nurses from the healthcarePlatform system (healthcare_platform_nurses table).","parameters":[],"requestBody":{"description":"Filtering, searching, and pagination options for nurse index retrieval.","typeName":"IHealthcarePlatformNurse.IRequest"},"responseBody":{"description":"A paginated list of summary nurse records matching query criteria.","typeName":"IPageIHealthcarePlatformNurse.ISummary"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index","path":"/healthcarePlatform/departmentHead/nurses","method":"patch"},{"specification":"Retrieve detailed profile information for a single nurse identified by their UUID, targeting the healthcare_platform_nurses table. Used by authorized roles for personnel management, clinical assignment, auditing, or compliance workflows.","description":"Fetches a single nurse's complete record from the healthcarePlatform, as defined in the healthcare_platform_nurses table. This includes unique ID, business email, legal full name, license/certification number, specialty, phone number, and audit metadata.\n\nAuthorization is enforced so that only organization administrators, department heads, and staff with specific permissions may view sensitive or identifying staff information. Access attempts are logged for compliance. If a nurse's record is deactivated (soft-deleted), the operation will return an error or indicate account status accordingly.\n\nThis endpoint plays a key role in HR, compliance, and clinical scheduling interfaces, providing a consistent data source for profile viewing, onboarding, or credentialing verification workflows. Error handling gracefully manages lookup failures, permission violations, and invalid UUIDs.","summary":"Retrieve a detailed nurse profile by nurseId from the healthcare_platform_nurses table.","parameters":[{"name":"nurseId","description":"The unique identifier (UUID) of the target nurse to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed record for the requested nurse.","typeName":"IHealthcarePlatformNurse"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/nurses/{nurseId}","method":"get"},{"specification":"Retrieve detailed profile information for a single nurse identified by their UUID, targeting the healthcare_platform_nurses table. Used by authorized roles for personnel management, clinical assignment, auditing, or compliance workflows.","description":"Fetches a single nurse's complete record from the healthcarePlatform, as defined in the healthcare_platform_nurses table. This includes unique ID, business email, legal full name, license/certification number, specialty, phone number, and audit metadata.\n\nAuthorization is enforced so that only organization administrators, department heads, and staff with specific permissions may view sensitive or identifying staff information. Access attempts are logged for compliance. If a nurse's record is deactivated (soft-deleted), the operation will return an error or indicate account status accordingly.\n\nThis endpoint plays a key role in HR, compliance, and clinical scheduling interfaces, providing a consistent data source for profile viewing, onboarding, or credentialing verification workflows. Error handling gracefully manages lookup failures, permission violations, and invalid UUIDs.","summary":"Retrieve a detailed nurse profile by nurseId from the healthcare_platform_nurses table.","parameters":[{"name":"nurseId","description":"The unique identifier (UUID) of the target nurse to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed record for the requested nurse.","typeName":"IHealthcarePlatformNurse"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at","path":"/healthcarePlatform/departmentHead/nurses/{nurseId}","method":"get"},{"specification":"Create a new nurse staff member account, inserting a record into healthcare_platform_nurses. The creation payload includes required profile fields: email, full name, license number, specialty (optional), phone (optional), and any necessary department affiliation. Triggers onboarding, optionally sets initial status, and creates an auditable staff entry.","description":"Allows privileged organization administrators or department heads to register new nurses into the healthcarePlatform. The required properties are validated against the healthcare_platform_nurses schema: a business email (unique), full legal name, state-issued license number (unique for compliance), specialty (optional), phone contact (optional), and any additional structured fields required for business onboarding or audit. Creates metadata such as timestamps and initial status (e.g., 'active' or 'pending').\n\nBusiness logic applies strong email and license number uniqueness checks—duplicate entries trigger meaningful error messages. Creation events are fully audited, including the actor initiating creation. Any relationship mapping to departments or initial assignment is enforced per business rules.\n\nUpon success, the operation responds with the full nurse record, confirming all stored properties.","summary":"Create a new nurse staff account in the healthcare_platform_nurses table.","parameters":[],"requestBody":{"description":"Nurse profile information required for creation (email, name, license, etc).","typeName":"IHealthcarePlatformNurse.ICreate"},"responseBody":{"description":"The newly created nurse profile record.","typeName":"IHealthcarePlatformNurse"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/nurses","method":"post"},{"specification":"Create a new nurse staff member account, inserting a record into healthcare_platform_nurses. The creation payload includes required profile fields: email, full name, license number, specialty (optional), phone (optional), and any necessary department affiliation. Triggers onboarding, optionally sets initial status, and creates an auditable staff entry.","description":"Allows privileged organization administrators or department heads to register new nurses into the healthcarePlatform. The required properties are validated against the healthcare_platform_nurses schema: a business email (unique), full legal name, state-issued license number (unique for compliance), specialty (optional), phone contact (optional), and any additional structured fields required for business onboarding or audit. Creates metadata such as timestamps and initial status (e.g., 'active' or 'pending').\n\nBusiness logic applies strong email and license number uniqueness checks—duplicate entries trigger meaningful error messages. Creation events are fully audited, including the actor initiating creation. Any relationship mapping to departments or initial assignment is enforced per business rules.\n\nUpon success, the operation responds with the full nurse record, confirming all stored properties.","summary":"Create a new nurse staff account in the healthcare_platform_nurses table.","parameters":[],"requestBody":{"description":"Nurse profile information required for creation (email, name, license, etc).","typeName":"IHealthcarePlatformNurse.ICreate"},"responseBody":{"description":"The newly created nurse profile record.","typeName":"IHealthcarePlatformNurse"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create","path":"/healthcarePlatform/departmentHead/nurses","method":"post"},{"specification":"Update profile details for an existing nurse staff member, identified by UUID. Targeted at healthcare_platform_nurses, supports changing business email, name, license, specialty, phone, or other allowed fields, subject to business, legal, and audit constraints.","description":"Enables authorized organizationAdmin or departmentHead to update profile attributes of a nurse in the healthcare_platform_nurses table. Input payload is validated for field-level constraints, including email uniqueness, license number validity, and business process permissions (e.g., only certain fields modifiable post-onboarding). All updates are timestamped, and the actor's ID is logged for audit.\n\nRole checks restrict who can update which fields; attempts to alter immutable properties or modify inactive/deleted records will fail with detailed error feedback. The newly updated nurse profile is returned on success, reflecting all changes; sensitive data exposure is limited based on actor's permissions.\n\nThis operation is essential for HR change requests, compliance credential updates, or clinical staff onboarding adjustments. Edge cases (e.g., lockouts or inactive status) are handled with actionable error responses.","summary":"Update nurse staff member profile information in healthcare_platform_nurses by nurseId.","parameters":[{"name":"nurseId","description":"UUID of the nurse account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values for nurse profile update.","typeName":"IHealthcarePlatformNurse.IUpdate"},"responseBody":{"description":"Updated nurse profile reflecting latest changes.","typeName":"IHealthcarePlatformNurse"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/nurses/{nurseId}","method":"put"},{"specification":"Update profile details for an existing nurse staff member, identified by UUID. Targeted at healthcare_platform_nurses, supports changing business email, name, license, specialty, phone, or other allowed fields, subject to business, legal, and audit constraints.","description":"Enables authorized organizationAdmin or departmentHead to update profile attributes of a nurse in the healthcare_platform_nurses table. Input payload is validated for field-level constraints, including email uniqueness, license number validity, and business process permissions (e.g., only certain fields modifiable post-onboarding). All updates are timestamped, and the actor's ID is logged for audit.\n\nRole checks restrict who can update which fields; attempts to alter immutable properties or modify inactive/deleted records will fail with detailed error feedback. The newly updated nurse profile is returned on success, reflecting all changes; sensitive data exposure is limited based on actor's permissions.\n\nThis operation is essential for HR change requests, compliance credential updates, or clinical staff onboarding adjustments. Edge cases (e.g., lockouts or inactive status) are handled with actionable error responses.","summary":"Update nurse staff member profile information in healthcare_platform_nurses by nurseId.","parameters":[{"name":"nurseId","description":"UUID of the nurse account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values for nurse profile update.","typeName":"IHealthcarePlatformNurse.IUpdate"},"responseBody":{"description":"Updated nurse profile reflecting latest changes.","typeName":"IHealthcarePlatformNurse"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update","path":"/healthcarePlatform/departmentHead/nurses/{nurseId}","method":"put"},{"specification":"This operation permanently deletes a nurse record from the healthcarePlatform system by nurseId. It targets the healthcare_platform_nurses table, allowing for the deactivation or removal of nursing staff from the platform. A hard delete is performed since the Prisma schema includes a soft delete (deleted_at) column, ensuring the record is not physically removed but flagged as deleted for compliance and audit purposes. All associated relationships and audit trails remain for regulatory retention. This operation is available only to administrative or compliance-level roles, given the sensitivity of staff record deletion.","description":"This endpoint enables the logical (soft) deletion of a nurse record by its unique identifier. The API marks the nurse as deleted by updating the deleted_at column in the underlying healthcare_platform_nurses table, so the record remains present for future audit, compliance reviews, and potential restoration, as required by industry regulation and business rules.\n\nOnly administrators with sufficient privileges should be allowed to invoke this operation, as deleting or deactivating staff can have broad operational, clinical, and compliance implications. The action should be captured in audit logs with actor information and timestamp for traceability.\n\nThis operation is typically used during staff offboarding, compliance-driven deactivation, or resolution of staff transitions. Attempts to delete non-existent or already-deleted records should result in a clear error response and appropriate audit logging for compliance.\n\nRelated endpoints may include: creating or updating a nurse record, listing all nurses, and reactivating archived staff if business workflow supports it.","summary":"Soft delete (archive) a nurse record in healthcare_platform_nurses by ID.","parameters":[{"name":"nurseId","description":"Unique identifier of the nurse to delete (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/systemAdmin/nurses/{nurseId}","method":"delete","name":"erase","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes a nurse record from the healthcarePlatform system by nurseId. It targets the healthcare_platform_nurses table, allowing for the deactivation or removal of nursing staff from the platform. A hard delete is performed since the Prisma schema includes a soft delete (deleted_at) column, ensuring the record is not physically removed but flagged as deleted for compliance and audit purposes. All associated relationships and audit trails remain for regulatory retention. This operation is available only to administrative or compliance-level roles, given the sensitivity of staff record deletion.","description":"This endpoint enables the logical (soft) deletion of a nurse record by its unique identifier. The API marks the nurse as deleted by updating the deleted_at column in the underlying healthcare_platform_nurses table, so the record remains present for future audit, compliance reviews, and potential restoration, as required by industry regulation and business rules.\n\nOnly administrators with sufficient privileges should be allowed to invoke this operation, as deleting or deactivating staff can have broad operational, clinical, and compliance implications. The action should be captured in audit logs with actor information and timestamp for traceability.\n\nThis operation is typically used during staff offboarding, compliance-driven deactivation, or resolution of staff transitions. Attempts to delete non-existent or already-deleted records should result in a clear error response and appropriate audit logging for compliance.\n\nRelated endpoints may include: creating or updating a nurse record, listing all nurses, and reactivating archived staff if business workflow supports it.","summary":"Soft delete (archive) a nurse record in healthcare_platform_nurses by ID.","parameters":[{"name":"nurseId","description":"Unique identifier of the nurse to delete (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/organizationAdmin/nurses/{nurseId}","method":"delete","name":"erase","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of technician staff members from the healthcare_platform_technicians table. It supports advanced search, filtering, and ordering options for healthcare organizations or administrators wishing to review, audit, or manage clinical technical staff (e.g., imaging/lab techs) in the platform. The request and response DTOs enable search across name, license, specialty, status, and other attributes with pagination for scalable data listings.","description":"Use this endpoint to search for and list all technician records in the system, applying advanced filtering by fields such as full name, license number, specialty, creation date, current status, or other business attributes present in the underlying schema. Sorting and pagination allow organization administrators to efficiently manage large rosters of technical clinical staff.\n\nSecurity is enforced via role-based access control, allowing only authorized administrative users to access the full technician directory. Output does not include any sensitive personal data unless explicitly permitted by organizational or regulatory policy. Access logs should be maintained for all invocation of this endpoint as it may contain personally identifiable and credential information.\n\nInput is validated according to the request DTO, and all results returned are derived exclusively from the healthcare_platform_technicians table, joined with related roles or assignments if needed for presentation purposes. This operation is typically used by organization administrators, department heads, or HR/compliance staff.","summary":"Search, filter, and paginate the list of technicians in healthcare_platform_technicians.","parameters":[],"requestBody":{"description":"Search, filter, and pagination request for technician staff records.","typeName":"IHealthcarePlatformTechnician.IRequest"},"responseBody":{"description":"Paginated list of technician summary information.","typeName":"IPageIHealthcarePlatformTechnician.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/systemAdmin/technicians","method":"patch","name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of technician staff members from the healthcare_platform_technicians table. It supports advanced search, filtering, and ordering options for healthcare organizations or administrators wishing to review, audit, or manage clinical technical staff (e.g., imaging/lab techs) in the platform. The request and response DTOs enable search across name, license, specialty, status, and other attributes with pagination for scalable data listings.","description":"Use this endpoint to search for and list all technician records in the system, applying advanced filtering by fields such as full name, license number, specialty, creation date, current status, or other business attributes present in the underlying schema. Sorting and pagination allow organization administrators to efficiently manage large rosters of technical clinical staff.\n\nSecurity is enforced via role-based access control, allowing only authorized administrative users to access the full technician directory. Output does not include any sensitive personal data unless explicitly permitted by organizational or regulatory policy. Access logs should be maintained for all invocation of this endpoint as it may contain personally identifiable and credential information.\n\nInput is validated according to the request DTO, and all results returned are derived exclusively from the healthcare_platform_technicians table, joined with related roles or assignments if needed for presentation purposes. This operation is typically used by organization administrators, department heads, or HR/compliance staff.","summary":"Search, filter, and paginate the list of technicians in healthcare_platform_technicians.","parameters":[],"requestBody":{"description":"Search, filter, and pagination request for technician staff records.","typeName":"IHealthcarePlatformTechnician.IRequest"},"responseBody":{"description":"Paginated list of technician summary information.","typeName":"IPageIHealthcarePlatformTechnician.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/organizationAdmin/technicians","method":"patch","name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a single technician staff member from the healthcare_platform_technicians table by technicianId. It provides administrative users with the full record for HR, compliance, scheduling, or credentialing purposes. Only users with proper authorization may access the full contextual staff record, including audit and role assignment details.","description":"Retrieve the full profile of a specific technician by UUID. This operation queries the healthcare_platform_technicians entity, returning all defined fields such as full name, license number, specialty, contact info, creation and update chronology, and current status as specified in the schema.\n\nThis endpoint is restricted to administrative or HR-level users as it can expose sensitive or regulated credential and contact data. All access attempts are logged for compliance and audit purposes.\n\nRelated endpoints include listing technicians, creating or updating staff records, and managing staff role assignments. Errors are returned if the technicianId does not exist or if the user lacks the necessary privileges.","summary":"Retrieve a technician record in healthcare_platform_technicians by ID.","parameters":[{"name":"technicianId","description":"Unique identifier of the technician to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed technician record with all schema fields.","typeName":"IHealthcarePlatformTechnician"},"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/systemAdmin/technicians/{technicianId}","method":"get","name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a single technician staff member from the healthcare_platform_technicians table by technicianId. It provides administrative users with the full record for HR, compliance, scheduling, or credentialing purposes. Only users with proper authorization may access the full contextual staff record, including audit and role assignment details.","description":"Retrieve the full profile of a specific technician by UUID. This operation queries the healthcare_platform_technicians entity, returning all defined fields such as full name, license number, specialty, contact info, creation and update chronology, and current status as specified in the schema.\n\nThis endpoint is restricted to administrative or HR-level users as it can expose sensitive or regulated credential and contact data. All access attempts are logged for compliance and audit purposes.\n\nRelated endpoints include listing technicians, creating or updating staff records, and managing staff role assignments. Errors are returned if the technicianId does not exist or if the user lacks the necessary privileges.","summary":"Retrieve a technician record in healthcare_platform_technicians by ID.","parameters":[{"name":"technicianId","description":"Unique identifier of the technician to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed technician record with all schema fields.","typeName":"IHealthcarePlatformTechnician"},"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/organizationAdmin/technicians/{technicianId}","method":"get","name":"at","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new technician record in the healthcare_platform_technicians table, onboarding new clinical technical staff (such as imaging or lab technologists) into the healthcarePlatform. Inputs must satisfy the schema's required fields, such as email, full name, license number, and optional specialty, with validation checks for uniqueness and regulatory compliance. Result returns the technician record as stored.","description":"Onboard a new technician by submitting the required data fields—business email (must be unique), full legal name, professional license number (also unique), and other optional details such as specialty and phone. Data is validated against schema requirements and business rules (such as license uniqueness and format) before insertion.\n\nNew technician creation actions are restricted to HR personnel, department heads, or organization administrators with appropriate permissions. All new records are tracked in audit logs with the creating user, timestamp, and all input data for future review and compliance checks.\n\nIf creation fails due to duplication or validation issues, an appropriate error with remediation details is returned. Related endpoints include updating existing technicians, deactivating staff records, and searching the technician directory for recently added users.","summary":"Create a new technician record in healthcare_platform_technicians.","parameters":[],"requestBody":{"description":"Technician staff creation data.","typeName":"IHealthcarePlatformTechnician.ICreate"},"responseBody":{"description":"Newly created technician record as returned from the database.","typeName":"IHealthcarePlatformTechnician"},"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/systemAdmin/technicians","method":"post","name":"create","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new technician record in the healthcare_platform_technicians table, onboarding new clinical technical staff (such as imaging or lab technologists) into the healthcarePlatform. Inputs must satisfy the schema's required fields, such as email, full name, license number, and optional specialty, with validation checks for uniqueness and regulatory compliance. Result returns the technician record as stored.","description":"Onboard a new technician by submitting the required data fields—business email (must be unique), full legal name, professional license number (also unique), and other optional details such as specialty and phone. Data is validated against schema requirements and business rules (such as license uniqueness and format) before insertion.\n\nNew technician creation actions are restricted to HR personnel, department heads, or organization administrators with appropriate permissions. All new records are tracked in audit logs with the creating user, timestamp, and all input data for future review and compliance checks.\n\nIf creation fails due to duplication or validation issues, an appropriate error with remediation details is returned. Related endpoints include updating existing technicians, deactivating staff records, and searching the technician directory for recently added users.","summary":"Create a new technician record in healthcare_platform_technicians.","parameters":[],"requestBody":{"description":"Technician staff creation data.","typeName":"IHealthcarePlatformTechnician.ICreate"},"responseBody":{"description":"Newly created technician record as returned from the database.","typeName":"IHealthcarePlatformTechnician"},"authorizationRoles":["systemAdmin","organizationAdmin"],"path":"/healthcarePlatform/organizationAdmin/technicians","method":"post","name":"create","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates the profile and details of a technician in the healthcarePlatform system. It interacts with the healthcare_platform_technicians table, allowing changes to fields such as email, full_name, license_number, specialty, and phone. The update is auditable and restricted to users with proper authorization (typically systemAdmin or organizationAdmin).","description":"Update the information of an existing technician within the healthcarePlatform. This operation is essential when any of the technician's attributes—such as contact details, specialty, or credential data—need to be revised for accuracy, regulatory compliance, or organizational changes.\n\nSecurity safeguards ensure that only users with adequate privileges (e.g., systemAdmin, organizationAdmin) can modify technician records. All updates are logged for audit and compliance. Technicians' data supports workforce management, scheduling, and technical workflow assignment throughout the system.\n\nModification of key properties like license_number or specialty may trigger regulatory verification and must comply with unique and current standards as described in the schema. Data updates here may affect downstream scheduling/resource assignments and compliance audits. Error handling includes validation of field formats and detection of conflicts (e.g., duplicate emails or license numbers).\n\nRelated endpoints may provide technician listing and detail retrieval for broader admin workflows. This operation is fundamental to ongoing staff record maintenance and auditability.","summary":"Update a technician's profile in the healthcare_platform_technicians table.","parameters":[{"name":"technicianId","description":"Unique identifier of the technician to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and updated property values for the technician record.","typeName":"IHealthcarePlatformTechnician.IUpdate"},"responseBody":{"description":"The updated technician profile record after changes are applied.","typeName":"IHealthcarePlatformTechnician"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/technicians/{technicianId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates the profile and details of a technician in the healthcarePlatform system. It interacts with the healthcare_platform_technicians table, allowing changes to fields such as email, full_name, license_number, specialty, and phone. The update is auditable and restricted to users with proper authorization (typically systemAdmin or organizationAdmin).","description":"Update the information of an existing technician within the healthcarePlatform. This operation is essential when any of the technician's attributes—such as contact details, specialty, or credential data—need to be revised for accuracy, regulatory compliance, or organizational changes.\n\nSecurity safeguards ensure that only users with adequate privileges (e.g., systemAdmin, organizationAdmin) can modify technician records. All updates are logged for audit and compliance. Technicians' data supports workforce management, scheduling, and technical workflow assignment throughout the system.\n\nModification of key properties like license_number or specialty may trigger regulatory verification and must comply with unique and current standards as described in the schema. Data updates here may affect downstream scheduling/resource assignments and compliance audits. Error handling includes validation of field formats and detection of conflicts (e.g., duplicate emails or license numbers).\n\nRelated endpoints may provide technician listing and detail retrieval for broader admin workflows. This operation is fundamental to ongoing staff record maintenance and auditability.","summary":"Update a technician's profile in the healthcare_platform_technicians table.","parameters":[{"name":"technicianId","description":"Unique identifier of the technician to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and updated property values for the technician record.","typeName":"IHealthcarePlatformTechnician.IUpdate"},"responseBody":{"description":"The updated technician profile record after changes are applied.","typeName":"IHealthcarePlatformTechnician"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/technicians/{technicianId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation permanently removes a technician record from the healthcare_platform_technicians table. If soft delete is enabled, the deleted_at column is set; otherwise, the record is physically deleted. This API should only be available to privileged users such as systemAdmin or organizationAdmin to ensure regulatory and audit compliance.","description":"Erase a technician from the healthcarePlatform system by targeting the unique technicianId. This operation either marks the record as deleted by setting deleted_at (for audit trail and compliance preservation) or removes the record if no soft-delete is implemented.\n\nTechnician deletions are restricted to high-privilege users. All actions are recorded in compliance logs for traceability. Deletion may impact scheduling, workflow assignment, and overall organizational staffing configuration. Proper error handling ensures attempts to erase non-existent or already-deleted technicians are flagged for review.\n\nThis action is generally irreversible and must abide by business policies regarding historical data retention. Attempting to remove active or referenced technicians may result in constraint errors or blocked requests. Related endpoints include technician creation, information update, and detail retrieval.","summary":"Permanently remove a technician from the healthcare_platform_technicians table.","parameters":[{"name":"technicianId","description":"Unique identifier for the technician to be removed.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/technicians/{technicianId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently removes a technician record from the healthcare_platform_technicians table. If soft delete is enabled, the deleted_at column is set; otherwise, the record is physically deleted. This API should only be available to privileged users such as systemAdmin or organizationAdmin to ensure regulatory and audit compliance.","description":"Erase a technician from the healthcarePlatform system by targeting the unique technicianId. This operation either marks the record as deleted by setting deleted_at (for audit trail and compliance preservation) or removes the record if no soft-delete is implemented.\n\nTechnician deletions are restricted to high-privilege users. All actions are recorded in compliance logs for traceability. Deletion may impact scheduling, workflow assignment, and overall organizational staffing configuration. Proper error handling ensures attempts to erase non-existent or already-deleted technicians are flagged for review.\n\nThis action is generally irreversible and must abide by business policies regarding historical data retention. Attempting to remove active or referenced technicians may result in constraint errors or blocked requests. Related endpoints include technician creation, information update, and detail retrieval.","summary":"Permanently remove a technician from the healthcare_platform_technicians table.","parameters":[{"name":"technicianId","description":"Unique identifier for the technician to be removed.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/technicians/{technicianId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filtered list of all receptionists in the system, supporting advanced search, sorting, and filtering options. It operates against the healthcare_platform_receptionists table and is configured for administrative, organization management, or auditing purposes.","description":"Search and retrieve a paginated, optionally filtered and sorted list of receptionists from the healthcare_platform_receptionists table. This endpoint supports complex queries for administrative users, including filtering by name, email, creation date, and status per the schema specifications.\n\nThe system enforces proper permissions—typically only systemAdmin or organizationAdmin can access all receptionist records. Sensitive receptionist information is returned in adherence with privacy policies and must be handled according to organization policy.\n\nResponse includes summary data for each receptionist, optimized for management use (e.g., bulk communication, scheduling, access reviews). Errors are surfaced when query parameters are invalid or when authentication is insufficient. Related endpoints include creation, update, and single receptionist detail retrieval for granular user management.","summary":"List and search all receptionists with advanced filtering and paging.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for receptionist list queries.","typeName":"IHealthcarePlatformReceptionist.IRequest"},"responseBody":{"description":"Paginated list of summarized receptionist records matching the provided search/filter criteria.","typeName":"IPageIHealthcarePlatformReceptionist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/receptionists","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filtered list of all receptionists in the system, supporting advanced search, sorting, and filtering options. It operates against the healthcare_platform_receptionists table and is configured for administrative, organization management, or auditing purposes.","description":"Search and retrieve a paginated, optionally filtered and sorted list of receptionists from the healthcare_platform_receptionists table. This endpoint supports complex queries for administrative users, including filtering by name, email, creation date, and status per the schema specifications.\n\nThe system enforces proper permissions—typically only systemAdmin or organizationAdmin can access all receptionist records. Sensitive receptionist information is returned in adherence with privacy policies and must be handled according to organization policy.\n\nResponse includes summary data for each receptionist, optimized for management use (e.g., bulk communication, scheduling, access reviews). Errors are surfaced when query parameters are invalid or when authentication is insufficient. Related endpoints include creation, update, and single receptionist detail retrieval for granular user management.","summary":"List and search all receptionists with advanced filtering and paging.","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for receptionist list queries.","typeName":"IHealthcarePlatformReceptionist.IRequest"},"responseBody":{"description":"Paginated list of summarized receptionist records matching the provided search/filter criteria.","typeName":"IPageIHealthcarePlatformReceptionist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/receptionists","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the profile and details of a specific receptionist identified by their receptionistId. It interacts with the healthcare_platform_receptionists table to provide all information needed for admin or compliance oversight.","description":"Retrieve the complete profile and status information for a specific receptionist. This operation is used by administrators to verify, audit, or manage an individual receptionist based on their unique identifier. Accessible to systemAdmin or organizationAdmin users, the endpoint fetches all configured fields as described in the schema, including contact information, name, timestamps, and deletion status.\n\nSecurity is enforced, allowing only privileged users to access full receptionist record details. The returned object includes all information needed for downstream actions such as editing, auditing, or account lifecycle management.\n\nValidation ensures the receptionist exists and is not deleted; otherwise, an error is reported. This endpoint is foundational for receptionist personnel management and compliance verification within the organization.","summary":"Retrieve detailed information about a specific receptionist from the healthcare_platform_receptionists table.","parameters":[{"name":"receptionistId","description":"Unique identifier of the receptionist to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full receptionist profile and details object.","typeName":"IHealthcarePlatformReceptionist"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/receptionists/{receptionistId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the profile and details of a specific receptionist identified by their receptionistId. It interacts with the healthcare_platform_receptionists table to provide all information needed for admin or compliance oversight.","description":"Retrieve the complete profile and status information for a specific receptionist. This operation is used by administrators to verify, audit, or manage an individual receptionist based on their unique identifier. Accessible to systemAdmin or organizationAdmin users, the endpoint fetches all configured fields as described in the schema, including contact information, name, timestamps, and deletion status.\n\nSecurity is enforced, allowing only privileged users to access full receptionist record details. The returned object includes all information needed for downstream actions such as editing, auditing, or account lifecycle management.\n\nValidation ensures the receptionist exists and is not deleted; otherwise, an error is reported. This endpoint is foundational for receptionist personnel management and compliance verification within the organization.","summary":"Retrieve detailed information about a specific receptionist from the healthcare_platform_receptionists table.","parameters":[{"name":"receptionistId","description":"Unique identifier of the receptionist to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full receptionist profile and details object.","typeName":"IHealthcarePlatformReceptionist"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/receptionists/{receptionistId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new receptionist user for the healthcarePlatform. It targets the healthcare_platform_receptionists table, which defines receptionist staff accounts including essential details such as email, full name, phone, and timestamps. Creating receptionists is a privileged administrative action and enables reception desk appointment management, patient check-in/out, and non-clinical workflow assignment. The operation input references the IHealthcarePlatformReceptionist.ICreate DTO and returns the created receptionist entity. Only organization administrators or system administrators can perform this function. Business logic includes: validating unique email, enforcing hospital policies for reception, and ensuring required data for future consent/audit compliance.","path":"/healthcarePlatform/organizationAdmin/receptionists","method":"post","summary":"Create a new receptionist account in healthcare_platform_receptionists","description":"Creates a new receptionist account in the healthcarePlatform system. Receptionist users are responsible for appointment scheduling, patient check-in/out, and non-clinical desk operations. \n\nThe operation validates uniqueness of the email address and requires admin-level permission, as receptionist creation impacts scheduling and front-desk workflows. Created accounts include legal name, business email, (optional) contact number, and are auditable via creation timestamp and system logs.\n\nKey fields and business rules are defined in the Prisma schema's healthcare_platform_receptionists model: the 'email' field must be unique; 'full_name' is required for identification/notifications; 'created_at'/'updated_at' are set automatically. Soft-delete and archival for compliance is enabled via 'deleted_at'.\n\nAppropriate error handling is enforced for duplicate accounts and missing required fields. This endpoint is typically used by organization administrators. Related operations include updating or deleting a receptionist, or listing all currently active receptionists.","parameters":[],"requestBody":{"description":"Information required to create a new healthcarePlatform receptionist","typeName":"IHealthcarePlatformReceptionist.ICreate"},"responseBody":{"description":"Detailed information about the newly created receptionist user","typeName":"IHealthcarePlatformReceptionist"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates information for an existing receptionist user in the healthcare_platform_receptionists table. Organization administrators or system administrators can update key receptionist account fields such as full name, contact information, and status. The endpoint uses receptionistId as a path parameter to identify the target account. Update logic includes validation for unique email (if changed), recording of update time, and adherence to organization policy for account modifications. Modifications are recorded in audit logs for compliance.","path":"/healthcarePlatform/organizationAdmin/receptionists/{receptionistId}","method":"put","summary":"Update an existing receptionist account by receptionistId in healthcare_platform_receptionists","description":"Updates data for an existing receptionist in the healthcarePlatform, including fields such as full_name, phone, and potentially other organization-specific attributes. The receptionistId path parameter identifies the specific account. \n\nBusiness logic ensures the integrity of data: only authorized administrators (systemAdmin or organizationAdmin) can update receptionist details, and any modification is tracked via updated_at and audit logging. The operation enforces that email remains unique (if updatable) and checks for proper formatting of phone numbers. Attempts to update non-existent accounts or with invalid data yield clear error messages.\n\nThe receptionist schema as defined in Prisma supports soft deletion via deleted_at and tracking of all creation/update times. Related API operations are receptionist creation and deletion.","parameters":[{"name":"receptionistId","description":"Unique identifier of the target receptionist","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the receptionist user","typeName":"IHealthcarePlatformReceptionist.IUpdate"},"responseBody":{"description":"Information about the updated receptionist user","typeName":"IHealthcarePlatformReceptionist"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation permanently removes a receptionist account from the healthcare_platform_receptionists table using a hard delete. It uses the receptionistId path parameter to select the target account. Receptionist deletions should be performed only by organization administrators or system administrators with proper privileges. All deletions are irreversible and are designed for scenarios such as staff departure. If a record is archived for compliance, the system will reject hard deletion unless retention rules permit.","path":"/healthcarePlatform/organizationAdmin/receptionists/{receptionistId}","method":"delete","summary":"Permanently delete a receptionist account by receptionistId (hard delete) in healthcare_platform_receptionists","description":"Permanently deletes the specified receptionist entry from the database (hard delete, not soft). The receptionistId path parameter selects the target account. Only organization or system-level administrators can execute this operation.\n\nAll deletions are subject to compliance and data retention policy. If the account is linked to ongoing workflows or must be retained for audit, the system will block deletion and issue a clear business error. The operation returns no response body upon success, providing only standard HTTP status confirmation.\n\nDeletion is logged in system audit trails for regulatory compliance. Associated scheduling records should be reassigned or reviewed prior to deletion. Related operations include creation and updating of receptionist records.","parameters":[{"name":"receptionistId","description":"Unique identifier of the receptionist to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation retrieves a paginated, filtered list of patient records from the healthcare_platform_patients table. It supports advanced search, filtering, and ordering by fields such as name, date of birth, and creation date. Intended for administrators or authorized staff to audit or locate patient records. The operation returns a page of summary objects per provided search criteria using the IHealthcarePlatformPatient.IRequest structure. Results are returned in a secure, privacy-compliant manner with respect to organizational and role boundaries.","path":"/healthcarePlatform/organizationAdmin/patients","method":"patch","summary":"Search and list patient accounts with filters and pagination in healthcare_platform_patients","description":"Retrieves a filtered and paginated list of patients within the healthcarePlatform. Supports advanced search criteria and ordering for audit, administration, and record location workflows.\n\nThe API receives search conditions, sort order, and pagination input in the request body (IHealthcarePlatformPatient.IRequest) and returns a result page (IPageIHealthcarePlatformPatient.ISummary). Major filters include full_name (partial match), date_of_birth, email, registration dates, and status. Only authorized viewers (e.g., organizationAdmin or systemAdmin) may view detailed results; access is privacy-checked for each row.\n\nThe healthcare_platform_patients model enforces unique email and includes fields required for compliance/audit. Data returned respects privacy flags and consent as required by law/policy. Results are suitable for list UIs, admin dashboards, and reporting workflows. Related endpoints exist for individual record access and update.","parameters":[],"requestBody":{"description":"Search, filter, and pagination criteria for patients","typeName":"IHealthcarePlatformPatient.IRequest"},"responseBody":{"description":"Paginated list of patient summary objects matching the search criteria","typeName":"IPageIHealthcarePlatformPatient.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves a detailed patient profile by the unique patient ID. It operates on the healthcare_platform_patients table, which contains core patient data such as email, name, date of birth, phone, and regulatory status for audit and compliance. It supports healthcare organizations in viewing individual patient profiles for authorized roles, incorporating data isolation based on tenant boundaries. The patient record links to other domains including appointments, billing, consents, and notifications, allowing downstream workflows to reference this information. Only current, non-deleted patient profiles are available via this endpoint.","description":"Retrieve a single patient user profile by specifying the unique patientId. This operation is used to display or process detailed patient information as stored in the healthcare_platform_patients table, including core attributes (email, full_name, date_of_birth, phone, created_at, updated_at, and deleted_at fields). Only active (not soft-deleted) records are returned, and the operation enforces strict tenant data isolation—users can only access patients within their organization context.\n\nSecurity and audit rules require that only roles with appropriate permission, such as medicalDoctor, nurse, organizationAdmin, receptionist, and the patient themselves, can access the profile, with all access events logged for compliance and traceability. Attempts to view patient profiles outside scope or organization boundaries are denied and audited per policy.\n\nThis GET endpoint is intended for use alongside related API endpoints that reference patients, such as listing their appointments or billing status. It handles errors for not found, unauthorized, or deleted records and surfaces audit trail entries as required for regulatory compliance.","summary":"Retrieve a specific patient profile by patientId from healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the target patient user.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"medicalDoctor","authorizationType":null,"name":"at","path":"/healthcarePlatform/medicalDoctor/patients/{patientId}","method":"get"},{"specification":"This operation retrieves a detailed patient profile by the unique patient ID. It operates on the healthcare_platform_patients table, which contains core patient data such as email, name, date of birth, phone, and regulatory status for audit and compliance. It supports healthcare organizations in viewing individual patient profiles for authorized roles, incorporating data isolation based on tenant boundaries. The patient record links to other domains including appointments, billing, consents, and notifications, allowing downstream workflows to reference this information. Only current, non-deleted patient profiles are available via this endpoint.","description":"Retrieve a single patient user profile by specifying the unique patientId. This operation is used to display or process detailed patient information as stored in the healthcare_platform_patients table, including core attributes (email, full_name, date_of_birth, phone, created_at, updated_at, and deleted_at fields). Only active (not soft-deleted) records are returned, and the operation enforces strict tenant data isolation—users can only access patients within their organization context.\n\nSecurity and audit rules require that only roles with appropriate permission, such as medicalDoctor, nurse, organizationAdmin, receptionist, and the patient themselves, can access the profile, with all access events logged for compliance and traceability. Attempts to view patient profiles outside scope or organization boundaries are denied and audited per policy.\n\nThis GET endpoint is intended for use alongside related API endpoints that reference patients, such as listing their appointments or billing status. It handles errors for not found, unauthorized, or deleted records and surfaces audit trail entries as required for regulatory compliance.","summary":"Retrieve a specific patient profile by patientId from healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the target patient user.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"nurse","authorizationType":null,"name":"at","path":"/healthcarePlatform/nurse/patients/{patientId}","method":"get"},{"specification":"This operation retrieves a detailed patient profile by the unique patient ID. It operates on the healthcare_platform_patients table, which contains core patient data such as email, name, date of birth, phone, and regulatory status for audit and compliance. It supports healthcare organizations in viewing individual patient profiles for authorized roles, incorporating data isolation based on tenant boundaries. The patient record links to other domains including appointments, billing, consents, and notifications, allowing downstream workflows to reference this information. Only current, non-deleted patient profiles are available via this endpoint.","description":"Retrieve a single patient user profile by specifying the unique patientId. This operation is used to display or process detailed patient information as stored in the healthcare_platform_patients table, including core attributes (email, full_name, date_of_birth, phone, created_at, updated_at, and deleted_at fields). Only active (not soft-deleted) records are returned, and the operation enforces strict tenant data isolation—users can only access patients within their organization context.\n\nSecurity and audit rules require that only roles with appropriate permission, such as medicalDoctor, nurse, organizationAdmin, receptionist, and the patient themselves, can access the profile, with all access events logged for compliance and traceability. Attempts to view patient profiles outside scope or organization boundaries are denied and audited per policy.\n\nThis GET endpoint is intended for use alongside related API endpoints that reference patients, such as listing their appointments or billing status. It handles errors for not found, unauthorized, or deleted records and surfaces audit trail entries as required for regulatory compliance.","summary":"Retrieve a specific patient profile by patientId from healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the target patient user.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/organizationAdmin/patients/{patientId}","method":"get"},{"specification":"This operation retrieves a detailed patient profile by the unique patient ID. It operates on the healthcare_platform_patients table, which contains core patient data such as email, name, date of birth, phone, and regulatory status for audit and compliance. It supports healthcare organizations in viewing individual patient profiles for authorized roles, incorporating data isolation based on tenant boundaries. The patient record links to other domains including appointments, billing, consents, and notifications, allowing downstream workflows to reference this information. Only current, non-deleted patient profiles are available via this endpoint.","description":"Retrieve a single patient user profile by specifying the unique patientId. This operation is used to display or process detailed patient information as stored in the healthcare_platform_patients table, including core attributes (email, full_name, date_of_birth, phone, created_at, updated_at, and deleted_at fields). Only active (not soft-deleted) records are returned, and the operation enforces strict tenant data isolation—users can only access patients within their organization context.\n\nSecurity and audit rules require that only roles with appropriate permission, such as medicalDoctor, nurse, organizationAdmin, receptionist, and the patient themselves, can access the profile, with all access events logged for compliance and traceability. Attempts to view patient profiles outside scope or organization boundaries are denied and audited per policy.\n\nThis GET endpoint is intended for use alongside related API endpoints that reference patients, such as listing their appointments or billing status. It handles errors for not found, unauthorized, or deleted records and surfaces audit trail entries as required for regulatory compliance.","summary":"Retrieve a specific patient profile by patientId from healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the target patient user.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"receptionist","authorizationType":null,"name":"at","path":"/healthcarePlatform/receptionist/patients/{patientId}","method":"get"},{"specification":"This operation retrieves a detailed patient profile by the unique patient ID. It operates on the healthcare_platform_patients table, which contains core patient data such as email, name, date of birth, phone, and regulatory status for audit and compliance. It supports healthcare organizations in viewing individual patient profiles for authorized roles, incorporating data isolation based on tenant boundaries. The patient record links to other domains including appointments, billing, consents, and notifications, allowing downstream workflows to reference this information. Only current, non-deleted patient profiles are available via this endpoint.","description":"Retrieve a single patient user profile by specifying the unique patientId. This operation is used to display or process detailed patient information as stored in the healthcare_platform_patients table, including core attributes (email, full_name, date_of_birth, phone, created_at, updated_at, and deleted_at fields). Only active (not soft-deleted) records are returned, and the operation enforces strict tenant data isolation—users can only access patients within their organization context.\n\nSecurity and audit rules require that only roles with appropriate permission, such as medicalDoctor, nurse, organizationAdmin, receptionist, and the patient themselves, can access the profile, with all access events logged for compliance and traceability. Attempts to view patient profiles outside scope or organization boundaries are denied and audited per policy.\n\nThis GET endpoint is intended for use alongside related API endpoints that reference patients, such as listing their appointments or billing status. It handles errors for not found, unauthorized, or deleted records and surfaces audit trail entries as required for regulatory compliance.","summary":"Retrieve a specific patient profile by patientId from healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the target patient user.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"patient","authorizationType":null,"name":"at","path":"/healthcarePlatform/patient/patients/{patientId}","method":"get"},{"specification":"This operation creates a new patient user profile in the healthcare_platform_patients table. It is invoked when a new patient joins the healthcare organization, either via staff onboarding or self-registration through the portal. The operation requires input fields such as email, full_name, date_of_birth, and optional phone. Business logic ensures uniqueness of email, verification of key fields, and applies compliance rules for patient data creation, such as regulatory logging and demographic data handling. This endpoint is critical for registration, onboarding, and patient engagement workflows, supporting compliance and auditability throughout.","description":"Register a new patient user profile in the platform, capturing required demographic and identity information as defined in the healthcare_platform_patients table. Required fields include email, full name, and date of birth, with phone as optional. The POST operation validates input for uniqueness (especially email), regulatory standards, and readiness for audit trail logging. It integrates with downstream patient workflows, including appointments, billing, and consent management, as well as security and notification preferences.\n\nRole-based access ensures that both staff (such as receptionists and organization admins) and patients (via self-service registration) can create accounts as permitted by business policy. Error handling covers duplicate email, invalid input, and compliance failures, with all creations subject to audit and legal traceability. The response returns the created patient profile and links it to the organization's patient record domain for further operations and workflow integration.","summary":"Register a new patient user profile in healthcare_platform_patients.","parameters":[],"requestBody":{"description":"Patient registration/provisioning information according to healthcare_platform_patients schema.","typeName":"IHealthcarePlatformPatient.ICreate"},"responseBody":{"description":"Created patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"receptionist","authorizationType":null,"name":"create","path":"/healthcarePlatform/receptionist/patients","method":"post"},{"specification":"This operation creates a new patient user profile in the healthcare_platform_patients table. It is invoked when a new patient joins the healthcare organization, either via staff onboarding or self-registration through the portal. The operation requires input fields such as email, full_name, date_of_birth, and optional phone. Business logic ensures uniqueness of email, verification of key fields, and applies compliance rules for patient data creation, such as regulatory logging and demographic data handling. This endpoint is critical for registration, onboarding, and patient engagement workflows, supporting compliance and auditability throughout.","description":"Register a new patient user profile in the platform, capturing required demographic and identity information as defined in the healthcare_platform_patients table. Required fields include email, full name, and date of birth, with phone as optional. The POST operation validates input for uniqueness (especially email), regulatory standards, and readiness for audit trail logging. It integrates with downstream patient workflows, including appointments, billing, and consent management, as well as security and notification preferences.\n\nRole-based access ensures that both staff (such as receptionists and organization admins) and patients (via self-service registration) can create accounts as permitted by business policy. Error handling covers duplicate email, invalid input, and compliance failures, with all creations subject to audit and legal traceability. The response returns the created patient profile and links it to the organization's patient record domain for further operations and workflow integration.","summary":"Register a new patient user profile in healthcare_platform_patients.","parameters":[],"requestBody":{"description":"Patient registration/provisioning information according to healthcare_platform_patients schema.","typeName":"IHealthcarePlatformPatient.ICreate"},"responseBody":{"description":"Created patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"create","path":"/healthcarePlatform/organizationAdmin/patients","method":"post"},{"specification":"This operation creates a new patient user profile in the healthcare_platform_patients table. It is invoked when a new patient joins the healthcare organization, either via staff onboarding or self-registration through the portal. The operation requires input fields such as email, full_name, date_of_birth, and optional phone. Business logic ensures uniqueness of email, verification of key fields, and applies compliance rules for patient data creation, such as regulatory logging and demographic data handling. This endpoint is critical for registration, onboarding, and patient engagement workflows, supporting compliance and auditability throughout.","description":"Register a new patient user profile in the platform, capturing required demographic and identity information as defined in the healthcare_platform_patients table. Required fields include email, full name, and date of birth, with phone as optional. The POST operation validates input for uniqueness (especially email), regulatory standards, and readiness for audit trail logging. It integrates with downstream patient workflows, including appointments, billing, and consent management, as well as security and notification preferences.\n\nRole-based access ensures that both staff (such as receptionists and organization admins) and patients (via self-service registration) can create accounts as permitted by business policy. Error handling covers duplicate email, invalid input, and compliance failures, with all creations subject to audit and legal traceability. The response returns the created patient profile and links it to the organization's patient record domain for further operations and workflow integration.","summary":"Register a new patient user profile in healthcare_platform_patients.","parameters":[],"requestBody":{"description":"Patient registration/provisioning information according to healthcare_platform_patients schema.","typeName":"IHealthcarePlatformPatient.ICreate"},"responseBody":{"description":"Created patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"patient","authorizationType":null,"name":"create","path":"/healthcarePlatform/patient/patients","method":"post"},{"specification":"This operation updates an existing patient user profile identified by patientId in the healthcare_platform_patients table. It is used for correcting or amending patient demographics, contact information, and other permitted fields. The endpoint enforces business logic around residency, audit logging, and compliance with regulatory requirements (e.g., change of legal name, phone, birth date). All updates are subject to audit trail capture and role-based permission checks, ensuring only authorized staff or the patient may perform updates. Uniqueness constraints and value validation are applied at each modification request.","description":"Update the patient user profile for an existing patient in the system by specifying their patientId and providing the updated fields. The operation is anchored on the healthcare_platform_patients table and governs changes to core profile information, including email, full_name, date_of_birth, and phone. Update attempts are controlled by role-based access and input validation (including uniqueness for email), and only permitted for authorized users or the patient themselves as dictated by the organization’s compliance and audit policies.\n\nThe endpoint logs all changes for security, audit trail, and reportability purposes. It supports integrations with dependent records such as patient appointments and billing, ensuring changes propagate according to business requirements. Error scenarios for invalid patientId, data conflicts, or unauthorized modification requests are handled with appropriate responses, ensuring compliance at every update event.","summary":"Update an existing patient user profile in healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the patient to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the patient profile as per healthcare_platform_patients schema.","typeName":"IHealthcarePlatformPatient.IUpdate"},"responseBody":{"description":"Updated patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"receptionist","authorizationType":null,"name":"update","path":"/healthcarePlatform/receptionist/patients/{patientId}","method":"put"},{"specification":"This operation updates an existing patient user profile identified by patientId in the healthcare_platform_patients table. It is used for correcting or amending patient demographics, contact information, and other permitted fields. The endpoint enforces business logic around residency, audit logging, and compliance with regulatory requirements (e.g., change of legal name, phone, birth date). All updates are subject to audit trail capture and role-based permission checks, ensuring only authorized staff or the patient may perform updates. Uniqueness constraints and value validation are applied at each modification request.","description":"Update the patient user profile for an existing patient in the system by specifying their patientId and providing the updated fields. The operation is anchored on the healthcare_platform_patients table and governs changes to core profile information, including email, full_name, date_of_birth, and phone. Update attempts are controlled by role-based access and input validation (including uniqueness for email), and only permitted for authorized users or the patient themselves as dictated by the organization’s compliance and audit policies.\n\nThe endpoint logs all changes for security, audit trail, and reportability purposes. It supports integrations with dependent records such as patient appointments and billing, ensuring changes propagate according to business requirements. Error scenarios for invalid patientId, data conflicts, or unauthorized modification requests are handled with appropriate responses, ensuring compliance at every update event.","summary":"Update an existing patient user profile in healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the patient to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the patient profile as per healthcare_platform_patients schema.","typeName":"IHealthcarePlatformPatient.IUpdate"},"responseBody":{"description":"Updated patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"update","path":"/healthcarePlatform/organizationAdmin/patients/{patientId}","method":"put"},{"specification":"This operation updates an existing patient user profile identified by patientId in the healthcare_platform_patients table. It is used for correcting or amending patient demographics, contact information, and other permitted fields. The endpoint enforces business logic around residency, audit logging, and compliance with regulatory requirements (e.g., change of legal name, phone, birth date). All updates are subject to audit trail capture and role-based permission checks, ensuring only authorized staff or the patient may perform updates. Uniqueness constraints and value validation are applied at each modification request.","description":"Update the patient user profile for an existing patient in the system by specifying their patientId and providing the updated fields. The operation is anchored on the healthcare_platform_patients table and governs changes to core profile information, including email, full_name, date_of_birth, and phone. Update attempts are controlled by role-based access and input validation (including uniqueness for email), and only permitted for authorized users or the patient themselves as dictated by the organization’s compliance and audit policies.\n\nThe endpoint logs all changes for security, audit trail, and reportability purposes. It supports integrations with dependent records such as patient appointments and billing, ensuring changes propagate according to business requirements. Error scenarios for invalid patientId, data conflicts, or unauthorized modification requests are handled with appropriate responses, ensuring compliance at every update event.","summary":"Update an existing patient user profile in healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the patient to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the patient profile as per healthcare_platform_patients schema.","typeName":"IHealthcarePlatformPatient.IUpdate"},"responseBody":{"description":"Updated patient profile from the healthcare_platform_patients table.","typeName":"IHealthcarePlatformPatient"},"authorizationRole":"patient","authorizationType":null,"name":"update","path":"/healthcarePlatform/patient/patients/{patientId}","method":"put"},{"specification":"This operation permanently deletes a patient user profile identified by patientId from the healthcare_platform_patients table via hard delete. It is used only with explicit compliance and business approval when patient records must be physically removed, such as when allowed by legal or policy exception (e.g., after retention window or in case of erroneous creation). Soft-deletion is otherwise expected (via the deleted_at field), but this endpoint describes hard deletion since the table supports soft delete. This endpoint must enforce strict audit, role, and regulatory controls to prevent inadvertent data removal.","description":"Permanently remove an existing patient user profile by their patientId in the healthcare_platform_patients table. Normally, patient records are soft-deleted (marked via deleted_at), retaining the data for compliance and audit, but this DELETE endpoint is for cases requiring irreversible erasure after full compliance review. Only superuser roles, such as organizationAdmin, may use this operation, and all deletions are tracked in audit logs for regulatory reporting and traceability.\n\nThis operation is dangerous and should be guarded by compliance-check workflows, including retention time validation and double-confirmation under organizational escalation policy. It does not affect downstream linked records, which may still be subject to regulatory hold or retention, but will block access to the main patient profile from end-user and staff interfaces. All failures, including unauthorized attempts, audit triggers, and invalid patientId errors, are handled per organizational and compliance standards.","summary":"Permanently delete a patient user profile by patientId (hard delete) from healthcare_platform_patients.","parameters":[{"name":"patientId","description":"Unique identifier of the patient to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null,"name":"erase","path":"/healthcarePlatform/organizationAdmin/patients/{patientId}","method":"delete"},{"specification":"This operation searches and retrieves a filtered, paginated list of user authentication records. It is based on the healthcare_platform_user_authentications table, which holds credentials for login, SSO, and federated access across all user types (system admin, org admin, etc). The operation supports advanced querying based on user type, provider (local, saml, oauth2, ad), provider_key, status, last authenticated timestamps, and other user authentication attributes. It is intended for system-level or administrative review, supporting compliance, security audits, or administrative UI user management, with built-in pagination, filtering, and sort options for large installation environments or multi-tenant platforms.","path":"/healthcarePlatform/systemAdmin/userAuthentications","method":"patch","summary":"Search and retrieve a filtered, paginated list of user authentication records (healthcare_platform_user_authentications).","description":"Retrieve a paginated and filtered set of user authentication records from the system, supporting use cases such as security audits, credential inventory management, or compliance reviews in the healthcarePlatform. This endpoint enables searching by user_type, authentication provider, provider_key, organizational context, last_authenticated_at timestamps, and credential status, with the option to use multiple combined filters and sorting.\n\nAll records returned reflect current and historical user authentication configurations used for sign-in (including SSO, AD, OAuth2, and local login), enabling system and organization administrators to view or audit the credential lifecycle. The endpoint is optimized for use cases such as periodic access review, investigation of sign-in anomalies, and compliance/reporting dashboards. Response data includes paginated summary objects suitable for UI display, with relevant metadata such as pagination, record count, and navigation context.\n\n**For security, credential secret fields such as password hashes are never returned in responses.**\n\nAccess to this endpoint is restricted to roles with platform-level or organization-level authentication management privileges (e.g., 'systemAdmin', 'organizationAdmin'), and the response is filtered based on the caller's organization scopes.","parameters":[],"requestBody":{"description":"Search filters and pagination parameters for user authentication record retrieval.","typeName":"IHealthcarePlatformUserAuthentication.IRequest"},"responseBody":{"description":"Paginated list of user authentication summary records and pagination metadata. No credential secrets are ever included.","typeName":"IPageIHealthcarePlatformUserAuthentication.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation searches and retrieves a filtered, paginated list of user authentication records. It is based on the healthcare_platform_user_authentications table, which holds credentials for login, SSO, and federated access across all user types (system admin, org admin, etc). The operation supports advanced querying based on user type, provider (local, saml, oauth2, ad), provider_key, status, last authenticated timestamps, and other user authentication attributes. It is intended for system-level or administrative review, supporting compliance, security audits, or administrative UI user management, with built-in pagination, filtering, and sort options for large installation environments or multi-tenant platforms.","path":"/healthcarePlatform/organizationAdmin/userAuthentications","method":"patch","summary":"Search and retrieve a filtered, paginated list of user authentication records (healthcare_platform_user_authentications).","description":"Retrieve a paginated and filtered set of user authentication records from the system, supporting use cases such as security audits, credential inventory management, or compliance reviews in the healthcarePlatform. This endpoint enables searching by user_type, authentication provider, provider_key, organizational context, last_authenticated_at timestamps, and credential status, with the option to use multiple combined filters and sorting.\n\nAll records returned reflect current and historical user authentication configurations used for sign-in (including SSO, AD, OAuth2, and local login), enabling system and organization administrators to view or audit the credential lifecycle. The endpoint is optimized for use cases such as periodic access review, investigation of sign-in anomalies, and compliance/reporting dashboards. Response data includes paginated summary objects suitable for UI display, with relevant metadata such as pagination, record count, and navigation context.\n\n**For security, credential secret fields such as password hashes are never returned in responses.**\n\nAccess to this endpoint is restricted to roles with platform-level or organization-level authentication management privileges (e.g., 'systemAdmin', 'organizationAdmin'), and the response is filtered based on the caller's organization scopes.","parameters":[],"requestBody":{"description":"Search filters and pagination parameters for user authentication record retrieval.","typeName":"IHealthcarePlatformUserAuthentication.IRequest"},"responseBody":{"description":"Paginated list of user authentication summary records and pagination metadata. No credential secrets are ever included.","typeName":"IPageIHealthcarePlatformUserAuthentication.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves a single user authentication record by its unique identifier (ID), referencing the healthcare_platform_user_authentications table. It provides full details of the authentication record, used for audit, troubleshooting, individual user management, or credential lifecycle operations by privileged administrators. This operation aids in managing user sign-in methods, SSO configurations, and tracks credential changes for security reviews. **Sensitive credential values such as password hashes are never returned in the response.**","path":"/healthcarePlatform/systemAdmin/userAuthentications/{userAuthenticationId}","method":"get","summary":"Retrieve full details for a user authentication record (healthcare_platform_user_authentications) by ID.","description":"Get detailed information for a specific user authentication record, identified by the userAuthenticationId path parameter, as defined in the healthcare_platform_user_authentications database schema. The operation returns all stored attributes for the record, including user_type, authentication provider, provider_key, last authentication timestamps, and associated meta-information.\n\n**For security, password hashes and any credential secrets are never included in the response.**\n\nThis endpoint is intended for privileged roles such as system administrators and organization administrators, and is generally invoked for diagnosing authentication issues, reviewing SSO or authentication configuration for a particular user, or investigating audit-related incidents. Access is strictly limited to authorized personnel, and the operation logs all requests for compliance and forensic purposes.\n\nA correct userAuthenticationId (UUID) must be provided in the path, with access checks ensuring the caller has organization/platform scope for the requested record. The operation also returns error information in the case of missing or unauthorized access attempts.","parameters":[{"name":"userAuthenticationId","description":"Unique identifier for the user authentication record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full user authentication record details matching the provided ID. No credential secrets are ever included.","typeName":"IHealthcarePlatformUserAuthentication"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation retrieves a single user authentication record by its unique identifier (ID), referencing the healthcare_platform_user_authentications table. It provides full details of the authentication record, used for audit, troubleshooting, individual user management, or credential lifecycle operations by privileged administrators. This operation aids in managing user sign-in methods, SSO configurations, and tracks credential changes for security reviews. **Sensitive credential values such as password hashes are never returned in the response.**","path":"/healthcarePlatform/organizationAdmin/userAuthentications/{userAuthenticationId}","method":"get","summary":"Retrieve full details for a user authentication record (healthcare_platform_user_authentications) by ID.","description":"Get detailed information for a specific user authentication record, identified by the userAuthenticationId path parameter, as defined in the healthcare_platform_user_authentications database schema. The operation returns all stored attributes for the record, including user_type, authentication provider, provider_key, last authentication timestamps, and associated meta-information.\n\n**For security, password hashes and any credential secrets are never included in the response.**\n\nThis endpoint is intended for privileged roles such as system administrators and organization administrators, and is generally invoked for diagnosing authentication issues, reviewing SSO or authentication configuration for a particular user, or investigating audit-related incidents. Access is strictly limited to authorized personnel, and the operation logs all requests for compliance and forensic purposes.\n\nA correct userAuthenticationId (UUID) must be provided in the path, with access checks ensuring the caller has organization/platform scope for the requested record. The operation also returns error information in the case of missing or unauthorized access attempts.","parameters":[{"name":"userAuthenticationId","description":"Unique identifier for the user authentication record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full user authentication record details matching the provided ID. No credential secrets are ever included.","typeName":"IHealthcarePlatformUserAuthentication"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation creates a new user authentication credential record in the healthcare_platform_user_authentications table. It supports adding local (email/password), SSO (SAML, OAuth2, AD), or federated authentication methods for a user in any actor table (system admin, org admin, etc). Use cases include onboarding new users, enabling additional sign-in methods, or bulk enrollment for integration scenarios. This API ensures secure handling of sensitive fields, enforces organizational policy on authentication type, and automatically records creation timestamp and status. **Password hashes and credential secrets are write-only and never returned in any response.**","path":"/healthcarePlatform/systemAdmin/userAuthentications","method":"post","summary":"Create a new user authentication credential record (healthcare_platform_user_authentications).","description":"Create a new user authentication record for a user, supporting a wide range of authentication providers including local, SSO, and federated mechanisms. The request accepts all required fields as defined in the healthcare_platform_user_authentications schema: user_id, user_type (to reference actor table), provider (login mechanism), provider_key, and any optional password_hash or configuration required by the selected provider. For local credentials, password strength and format are validated according to platform security policy.\n\n**For security, password hashes and credential secrets are strictly write-only and NEVER returned or exposed in any API response.**\n\nAccess to this endpoint is strictly limited to privileged roles (system administrators, organization administrators), and all actions are logged for identity traceability and regulatory compliance. The operation returns the complete newly-created authentication record for further processing (such as issuing a login session or associating with user profile), or error information if policy checks fail or data is invalid.","parameters":[],"requestBody":{"description":"Data required to create a new user authentication record, including user, provider, and credential information.","typeName":"IHealthcarePlatformUserAuthentication.ICreate"},"responseBody":{"description":"Complete data structure for the newly created user authentication record. Credential secrets are not included.","typeName":"IHealthcarePlatformUserAuthentication"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation creates a new user authentication credential record in the healthcare_platform_user_authentications table. It supports adding local (email/password), SSO (SAML, OAuth2, AD), or federated authentication methods for a user in any actor table (system admin, org admin, etc). Use cases include onboarding new users, enabling additional sign-in methods, or bulk enrollment for integration scenarios. This API ensures secure handling of sensitive fields, enforces organizational policy on authentication type, and automatically records creation timestamp and status. **Password hashes and credential secrets are write-only and never returned in any response.**","path":"/healthcarePlatform/organizationAdmin/userAuthentications","method":"post","summary":"Create a new user authentication credential record (healthcare_platform_user_authentications).","description":"Create a new user authentication record for a user, supporting a wide range of authentication providers including local, SSO, and federated mechanisms. The request accepts all required fields as defined in the healthcare_platform_user_authentications schema: user_id, user_type (to reference actor table), provider (login mechanism), provider_key, and any optional password_hash or configuration required by the selected provider. For local credentials, password strength and format are validated according to platform security policy.\n\n**For security, password hashes and credential secrets are strictly write-only and NEVER returned or exposed in any API response.**\n\nAccess to this endpoint is strictly limited to privileged roles (system administrators, organization administrators), and all actions are logged for identity traceability and regulatory compliance. The operation returns the complete newly-created authentication record for further processing (such as issuing a login session or associating with user profile), or error information if policy checks fail or data is invalid.","parameters":[],"requestBody":{"description":"Data required to create a new user authentication record, including user, provider, and credential information.","typeName":"IHealthcarePlatformUserAuthentication.ICreate"},"responseBody":{"description":"Complete data structure for the newly created user authentication record. Credential secrets are not included.","typeName":"IHealthcarePlatformUserAuthentication"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing user authentication record in the healthcare_platform_user_authentications table. Used for credential lifecycle management, credential reset/rotation, SSO re-provisioning, or updating the authentication provider or credential type for a user. All updates are fully audited and follow platform/organization policy regarding credential security (e.g. password rotation, SSO provider deprovisioning, status updates). Only privileged system/organization administrators can use this endpoint, with request scopes strictly enforced. **Credential secrets are write-only and are never returned in any API response.**","path":"/healthcarePlatform/systemAdmin/userAuthentications/{userAuthenticationId}","method":"put","summary":"Update authentication credential record for a user (healthcare_platform_user_authentications) by ID.","description":"Modify the fields of an existing user authentication record by its unique ID (userAuthenticationId), according to the healthcare_platform_user_authentications database schema. This operation supports updates such as password rotation (for local credentials), SSO/federated configuration changes, status changes (enabled/disabled), or provider/provider_key changes as per platform policy. Fields included in the request body are validated against organizational security requirements, and sensitive data such as passwords are securely handled and must NEVER be returned in any API response.\n\nAll update actions are fully logged for compliance, supporting use cases such as account remediation, deprovisioning, or credential reset workflows for internal security or audit. The operation returns the fully-updated authentication record on success, or includes error context in the case of invalid, unauthorized, or policy-violating updates.\n\n**Credential secrets are always write-only—never returned or exposed in any way.**\n\nAccess is restricted to system administrators or organization administrators, who are responsible for complying with platform/corporate security requirements.","parameters":[{"name":"userAuthenticationId","description":"Unique identifier for the user authentication record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the user authentication record, based on the provider and organizational policy.","typeName":"IHealthcarePlatformUserAuthentication.IUpdate"},"responseBody":{"description":"Updated and fully-detailed user authentication record after changes are applied. Credential secrets are not included.","typeName":"IHealthcarePlatformUserAuthentication"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation updates an existing user authentication record in the healthcare_platform_user_authentications table. Used for credential lifecycle management, credential reset/rotation, SSO re-provisioning, or updating the authentication provider or credential type for a user. All updates are fully audited and follow platform/organization policy regarding credential security (e.g. password rotation, SSO provider deprovisioning, status updates). Only privileged system/organization administrators can use this endpoint, with request scopes strictly enforced. **Credential secrets are write-only and are never returned in any API response.**","path":"/healthcarePlatform/organizationAdmin/userAuthentications/{userAuthenticationId}","method":"put","summary":"Update authentication credential record for a user (healthcare_platform_user_authentications) by ID.","description":"Modify the fields of an existing user authentication record by its unique ID (userAuthenticationId), according to the healthcare_platform_user_authentications database schema. This operation supports updates such as password rotation (for local credentials), SSO/federated configuration changes, status changes (enabled/disabled), or provider/provider_key changes as per platform policy. Fields included in the request body are validated against organizational security requirements, and sensitive data such as passwords are securely handled and must NEVER be returned in any API response.\n\nAll update actions are fully logged for compliance, supporting use cases such as account remediation, deprovisioning, or credential reset workflows for internal security or audit. The operation returns the fully-updated authentication record on success, or includes error context in the case of invalid, unauthorized, or policy-violating updates.\n\n**Credential secrets are always write-only—never returned or exposed in any way.**\n\nAccess is restricted to system administrators or organization administrators, who are responsible for complying with platform/corporate security requirements.","parameters":[{"name":"userAuthenticationId","description":"Unique identifier for the user authentication record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the user authentication record, based on the provider and organizational policy.","typeName":"IHealthcarePlatformUserAuthentication.IUpdate"},"responseBody":{"description":"Updated and fully-detailed user authentication record after changes are applied. Credential secrets are not included.","typeName":"IHealthcarePlatformUserAuthentication"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation permanently deletes an existing user authentication record from the healthcare platform, identified by its unique user authentication ID. It is designed for strict auditability and regulatory compliance, ensuring that credentials, provider keys, and related authentication data are removed or flagged as deleted within the \"healthcare_platform_user_authentications\" table. This operation must be used carefully, especially when deprovisioning users or purging discontinued authentication providers.","description":"This endpoint is responsible for the hard deletion of a user authentication entry. The operation targets the 'healthcare_platform_user_authentications' table, where each record contains provider, provider key, user type, and password hash information supporting login via email/password, SSO, or federated identification for any user role (systemadmin, orgadmin, etc).\n\nBy supplying a valid userAuthenticationId, administrators can revoke all access through this particular authentication provider. Security checks must ensure that only privileged system admins can execute deletions, and the operation should log all such events to the audit subsystem. Deleting authentication entries is strictly a privileged action due to its impact on access control and auditability. This action is irreversible—once deleted, the authentication method cannot be used unless re-created.\n\nAttempted deletion of non-existent or mismatched IDs should trigger clear error responses and comprehensive logging for compliance review. This operation can be combined with session invalidation APIs to enforce full credential revocation across all login providers.","summary":"Permanently deletes a specified user authentication record by its unique ID from healthcare_platform_user_authentications.","parameters":[{"name":"userAuthenticationId","description":"Unique identifier (UUID) of the user authentication record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/userAuthentications/{userAuthenticationId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of authentication sessions based on complex search and query parameters. It is built on the \"healthcare_platform_auth_sessions\" table and provides administrators with visibility into all authentication session records, allowing session state, expiry, revocation, and user mapping review for all supported authentication methods. This endpoint supports security audits, forensic investigations, and compliance monitoring.","description":"This endpoint is responsible for advanced session search and monitoring. It operates on the 'healthcare_platform_auth_sessions' table, which tracks issued tokens (JWT/refresh), session state, expiry, revocation info, user agent, and IP address for all resource owners (any user type: systemadmin, orgadmin, doctor, etc).\n\nPatch requests allow for provided filters such as user_id, session_token, user_type, status (active, revoked), date ranges (issued_at, expires_at), device fingerprints, and network source (IP). Pagination and sorting options enable navigation through high-volume session data, crucial for operational support and regulatory audit trails.\n\nAccess is restricted to privileged system administrators due to the sensitivity of session information. All query events must themselves be logged for audit review. Typical use cases include auditing login history, investigating suspicious activity, or forcibly inspecting expired/revoked sessions. Related operations may include detail retrieval or deletion via GET/DELETE on /authSessions/{authSessionId}.","summary":"Search, paginate, and filter authentication sessions from healthcare_platform_auth_sessions.","parameters":[],"requestBody":{"description":"Session query/search and pagination parameters to filter list of authentication sessions.","typeName":"IHealthcarePlatformAuthSession.IRequest"},"responseBody":{"description":"Paginated collection of authentication session summary data matching filter criteria.","typeName":"IPageIHealthcarePlatformAuthSession.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/authSessions","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the detailed information for a single authentication session identified by its unique session ID. It reads from the \"healthcare_platform_auth_sessions\" table and provides all session metadata, including token, state, expiration, user associations, device info, and revocation status. This endpoint is designed for security audits, incident investigation, and administrative review.","description":"This endpoint obtains the full metadata for a specific authentication session by its session ID (authSessionId). The 'healthcare_platform_auth_sessions' table records all session-related information, such as session_token, user_id, user_type, revoked_at timestamp for forced terminations, device signature, and IP address (if available).\n\nThe operation is restricted to system administrators, ensuring only authorized roles may query sensitive session detail. Use cases include confirming whether a session is active or revoked, investigating login from a suspicious device, or reviewing access context for compliance audit.\n\nIf the session is not found or the ID is malformed or expired, the endpoint must return an error response with appropriate logging for regulatory reviews. This API may be used together with the search or deletion operations for full lifecycle session control.","summary":"Retrieve detailed information about a specific authentication session by session ID from healthcare_platform_auth_sessions.","parameters":[{"name":"authSessionId","description":"Unique identifier (UUID) for the target authentication session record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full authentication session detail as stored in the database.","typeName":"IHealthcarePlatformAuthSession"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/authSessions/{authSessionId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes (revokes) an authentication session by its unique session ID, removing its session_token from active state or marking it revoked in the \"healthcare_platform_auth_sessions\" table. Revocation immediately terminates active user access associated with the session's token and is critical for security, incident response, and regulatory compliance. Only administrators should have access to this endpoint, and its actions must be append-only and fully auditable.","description":"This endpoint irrevocably deletes or revokes an authentication session record selected by its authSessionId, targeting entries in the 'healthcare_platform_auth_sessions' table. Each session represents active, expired, or revoked token state for resource owner logins across any user type (systemadmin/orgadmin/doctor/etc.).\n\nSession revocation or force deletion is typically used for security enforcement: forcibly logging out users in case of credential compromise, disciplinary action, or as part of account deactivation workflows. Events must be fully auditable for regulatory and incident response requirements.\n\nIf a non-existent or already-revoked session is specified, the operation should signal a clear error while logging the action for compliance reasons. Related operations include session listing, retrieval, or searching for tokens.\n\nThis action is always restricted to systemAdmin roles following least privilege policy.","summary":"Delete (revoke) a specific authentication session record and immediately terminate access, only permitted for system administrators.","parameters":[{"name":"authSessionId","description":"Unique identifier (UUID) for the target authentication session to revoke/delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/authSessions/{authSessionId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of user MFA (Multi-Factor Authentication) factors in the healthcarePlatform system. It queries the healthcare_platform_user_mfa_factors table, enabling admins to search, filter, and analyze all configured MFA factors by user, type, status, and other fields, enabling compliance and operational review. Typical use cases include security audits, bulk review, or troubleshooting configuration across users and organizations.","description":"Retrieve a list of user MFA factors, supporting complex search, filtering, and pagination on the healthcare_platform_user_mfa_factors table. The operation is available to system administrators and organization administrators for conducting compliance reviews or managing user MFA configurations.\n\nReturns paginated data, allowing filtering by factor type, user type, priority, is_active status, and creation/update ranges. The response enables downstream UI and reporting features for security audits. Sensitive credential values are never returned.\n\nSecurity is strictly enforced: only users with admin privileges may list MFA factors, and sensitive credential secrets are always redacted. Large result sets are paginated for scalability and performance. Errors for insufficient permissions or invalid filters return clear, actionable details.","summary":"Search and list user MFA factors for security and compliance review.","parameters":[],"requestBody":{"description":"Query/filter criteria and pagination options for searching user MFA factors.","typeName":"IHealthcarePlatformUserMfaFactor.IRequest"},"responseBody":{"description":"Paginated list of MFA factors matching the search criteria, with factor details redacted for security.","typeName":"IPageIHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/userMfaFactors","method":"patch"},{"specification":"This operation retrieves a paginated and filterable list of user MFA (Multi-Factor Authentication) factors in the healthcarePlatform system. It queries the healthcare_platform_user_mfa_factors table, enabling admins to search, filter, and analyze all configured MFA factors by user, type, status, and other fields, enabling compliance and operational review. Typical use cases include security audits, bulk review, or troubleshooting configuration across users and organizations.","description":"Retrieve a list of user MFA factors, supporting complex search, filtering, and pagination on the healthcare_platform_user_mfa_factors table. The operation is available to system administrators and organization administrators for conducting compliance reviews or managing user MFA configurations.\n\nReturns paginated data, allowing filtering by factor type, user type, priority, is_active status, and creation/update ranges. The response enables downstream UI and reporting features for security audits. Sensitive credential values are never returned.\n\nSecurity is strictly enforced: only users with admin privileges may list MFA factors, and sensitive credential secrets are always redacted. Large result sets are paginated for scalability and performance. Errors for insufficient permissions or invalid filters return clear, actionable details.","summary":"Search and list user MFA factors for security and compliance review.","parameters":[],"requestBody":{"description":"Query/filter criteria and pagination options for searching user MFA factors.","typeName":"IHealthcarePlatformUserMfaFactor.IRequest"},"responseBody":{"description":"Paginated list of MFA factors matching the search criteria, with factor details redacted for security.","typeName":"IPageIHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/userMfaFactors","method":"patch"},{"specification":"This operation retrieves details for a specific user MFA factor record in the healthcarePlatform. It queries the healthcare_platform_user_mfa_factors table by the unique MFA factor ID, providing administrators with configuration details needed for review or troubleshooting. This is typically used for security audits, incident resolution, or compliance routines.","description":"Retrieve full configuration and metadata for a specific MFA factor record, addressed by userMfaFactorId (UUID primary key) in healthcare_platform_user_mfa_factors. Intended for system or organization admins reviewing MFA history or handling user access issues.\n\nReturns factor type, status, creation/update info, and associated user context, never exposing the credential secret. If the record does not exist, a standardized not-found error is returned.\n\nStrict RBAC is enforced. Only admins with permitted scope may access details.","summary":"Get full detail of a user MFA factor by ID.","parameters":[{"name":"userMfaFactorId","description":"UUID of the user MFA factor record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration details and metadata of the specified MFA factor, with credentials securely masked.","typeName":"IHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/userMfaFactors/{userMfaFactorId}","method":"get"},{"specification":"This operation retrieves details for a specific user MFA factor record in the healthcarePlatform. It queries the healthcare_platform_user_mfa_factors table by the unique MFA factor ID, providing administrators with configuration details needed for review or troubleshooting. This is typically used for security audits, incident resolution, or compliance routines.","description":"Retrieve full configuration and metadata for a specific MFA factor record, addressed by userMfaFactorId (UUID primary key) in healthcare_platform_user_mfa_factors. Intended for system or organization admins reviewing MFA history or handling user access issues.\n\nReturns factor type, status, creation/update info, and associated user context, never exposing the credential secret. If the record does not exist, a standardized not-found error is returned.\n\nStrict RBAC is enforced. Only admins with permitted scope may access details.","summary":"Get full detail of a user MFA factor by ID.","parameters":[{"name":"userMfaFactorId","description":"UUID of the user MFA factor record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration details and metadata of the specified MFA factor, with credentials securely masked.","typeName":"IHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/userMfaFactors/{userMfaFactorId}","method":"get"},{"specification":"This operation creates a new user MFA (Multi-Factor Authentication) factor for a user in the healthcarePlatform system. It inserts a record into healthcare_platform_user_mfa_factors, enabling administrators to provision TOTP, SMS, email, or other supported MFA factors for user authentication security. Used when onboarding users or updating security requirements. Only system and organization admins may create MFA factor records directly.","description":"Create a new user MFA factor record by providing the user, type, factor value, priority, and status. The operation validates business logic—ensuring only one primary factor per type, appropriate credential security, and correct scoping by user type. It enforces RBAC: only admin-level roles can add MFA factors for users/scenarios such as user onboarding, compliance rollout, or factor replacement after credential expiry/misuse.\n\nReturns the created MFA factor's configuration and metadata, with the credential field redacted. If duplicate or conflicting factors are requested, a business error is returned with remediation direction.\n\nAudit logs record all MFA factor creation for compliance.","summary":"Create a new user MFA factor for a user (TOTP, SMS, email, etc).","parameters":[],"requestBody":{"description":"MFA factor creation data—user, type, value, priority, and settings.","typeName":"IHealthcarePlatformUserMfaFactor.ICreate"},"responseBody":{"description":"Configuration details and metadata of the new MFA factor, with credential secrets masked for security.","typeName":"IHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/userMfaFactors","method":"post"},{"specification":"This operation creates a new user MFA (Multi-Factor Authentication) factor for a user in the healthcarePlatform system. It inserts a record into healthcare_platform_user_mfa_factors, enabling administrators to provision TOTP, SMS, email, or other supported MFA factors for user authentication security. Used when onboarding users or updating security requirements. Only system and organization admins may create MFA factor records directly.","description":"Create a new user MFA factor record by providing the user, type, factor value, priority, and status. The operation validates business logic—ensuring only one primary factor per type, appropriate credential security, and correct scoping by user type. It enforces RBAC: only admin-level roles can add MFA factors for users/scenarios such as user onboarding, compliance rollout, or factor replacement after credential expiry/misuse.\n\nReturns the created MFA factor's configuration and metadata, with the credential field redacted. If duplicate or conflicting factors are requested, a business error is returned with remediation direction.\n\nAudit logs record all MFA factor creation for compliance.","summary":"Create a new user MFA factor for a user (TOTP, SMS, email, etc).","parameters":[],"requestBody":{"description":"MFA factor creation data—user, type, value, priority, and settings.","typeName":"IHealthcarePlatformUserMfaFactor.ICreate"},"responseBody":{"description":"Configuration details and metadata of the new MFA factor, with credential secrets masked for security.","typeName":"IHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/userMfaFactors","method":"post"},{"specification":"This operation updates an existing user MFA factor in the healthcarePlatform. It handles changes to the configuration, status, priority, or value of an MFA factor, referencing the primary key userMfaFactorId. The operation applies business and security logic to ensure compliance, such as only one active factor per type and correct credential rules. Updates are strictly audited, and only system or organization admins can perform modifications.","description":"Modify an existing user MFA factor record, addressed by userMfaFactorId (UUID primary key). Allows for changes to factor type, value, status, priority, and other configuration due to user request, credential rotation, or compliance enforcement. The operation strictly enforces security rules—redacting secrets, preventing privilege escalation, and allowing only permitted fields for update depending on admin role.\n\nOn success, returns the updated MFA factor record with masked credential info. Handles not-found errors, insufficient permissions, and business rule violations with clear error responses. All update actions are appended to audit logs for full traceability.","summary":"Update user MFA factor configuration and settings.","parameters":[{"name":"userMfaFactorId","description":"UUID of the MFA factor record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New configuration data for the user MFA factor (type, status, value, priority).","typeName":"IHealthcarePlatformUserMfaFactor.IUpdate"},"responseBody":{"description":"Full updated configuration and metadata, with sensitive credential fields masked.","typeName":"IHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/userMfaFactors/{userMfaFactorId}","method":"put"},{"specification":"This operation updates an existing user MFA factor in the healthcarePlatform. It handles changes to the configuration, status, priority, or value of an MFA factor, referencing the primary key userMfaFactorId. The operation applies business and security logic to ensure compliance, such as only one active factor per type and correct credential rules. Updates are strictly audited, and only system or organization admins can perform modifications.","description":"Modify an existing user MFA factor record, addressed by userMfaFactorId (UUID primary key). Allows for changes to factor type, value, status, priority, and other configuration due to user request, credential rotation, or compliance enforcement. The operation strictly enforces security rules—redacting secrets, preventing privilege escalation, and allowing only permitted fields for update depending on admin role.\n\nOn success, returns the updated MFA factor record with masked credential info. Handles not-found errors, insufficient permissions, and business rule violations with clear error responses. All update actions are appended to audit logs for full traceability.","summary":"Update user MFA factor configuration and settings.","parameters":[{"name":"userMfaFactorId","description":"UUID of the MFA factor record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New configuration data for the user MFA factor (type, status, value, priority).","typeName":"IHealthcarePlatformUserMfaFactor.IUpdate"},"responseBody":{"description":"Full updated configuration and metadata, with sensitive credential fields masked.","typeName":"IHealthcarePlatformUserMfaFactor"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/userMfaFactors/{userMfaFactorId}","method":"put"},{"specification":"This operation permanently deletes a user multi-factor authentication (MFA) factor identified by userMfaFactorId. It operates on the healthcare_platform_user_mfa_factors table, which stores all registered MFA factors (such as TOTP, SMS, email, or security keys) for users in the healthcarePlatform system. Permanent deletion removes the MFA factor record and is primarily for administrative or security recovery scenarios, such as remediation after compromise, device loss, or at the user's request. All deletions must be logged for auditability and regulatory compliance.","description":"This API operation is designed to facilitate the permanent deletion of a specific MFA (multi-factor authentication) factor from a user's security profile in the healthcarePlatform system. MFA factors increase login security, and users may have more than one factor registered (such as TOTP apps, SMS numbers, or email codes). When users lose access to one of these factors, switch devices, or an administrator detects a potential security issue, it may be necessary to remove the MFA factor record from the database.\n\nDeleting an MFA factor is a sensitive operation requiring audit and authentication. All delete actions should be accompanied by a reason in the audit log and must comply with organizational retention and recovery policies. This deletion is hard (the factor record and its credentials are not recoverable) unless regulatory requirements dictate otherwise. Attempting to delete a non-existent or already-deleted factor should result in an error explaining the missing resource.\n\nThis endpoint uses the unique UUID identifier userMfaFactorId and will enforce permissions based on the role of the actor and the relationship to the user.\n\nOther critical considerations include checking that the factor is not the last active factor for the user when organization policy requires multifactor authentication, and ensuring the operation is performed by an authorized administrator or support user. All actions must be fully auditable as per requirements and schema.","summary":"Permanently delete a user MFA factor by ID from the healthcare_platform_user_mfa_factors table.","parameters":[{"name":"userMfaFactorId","description":"Unique identifier for the MFA factor to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/userMfaFactors/{userMfaFactorId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes a user multi-factor authentication (MFA) factor identified by userMfaFactorId. It operates on the healthcare_platform_user_mfa_factors table, which stores all registered MFA factors (such as TOTP, SMS, email, or security keys) for users in the healthcarePlatform system. Permanent deletion removes the MFA factor record and is primarily for administrative or security recovery scenarios, such as remediation after compromise, device loss, or at the user's request. All deletions must be logged for auditability and regulatory compliance.","description":"This API operation is designed to facilitate the permanent deletion of a specific MFA (multi-factor authentication) factor from a user's security profile in the healthcarePlatform system. MFA factors increase login security, and users may have more than one factor registered (such as TOTP apps, SMS numbers, or email codes). When users lose access to one of these factors, switch devices, or an administrator detects a potential security issue, it may be necessary to remove the MFA factor record from the database.\n\nDeleting an MFA factor is a sensitive operation requiring audit and authentication. All delete actions should be accompanied by a reason in the audit log and must comply with organizational retention and recovery policies. This deletion is hard (the factor record and its credentials are not recoverable) unless regulatory requirements dictate otherwise. Attempting to delete a non-existent or already-deleted factor should result in an error explaining the missing resource.\n\nThis endpoint uses the unique UUID identifier userMfaFactorId and will enforce permissions based on the role of the actor and the relationship to the user.\n\nOther critical considerations include checking that the factor is not the last active factor for the user when organization policy requires multifactor authentication, and ensuring the operation is performed by an authorized administrator or support user. All actions must be fully auditable as per requirements and schema.","summary":"Permanently delete a user MFA factor by ID from the healthcare_platform_user_mfa_factors table.","parameters":[{"name":"userMfaFactorId","description":"Unique identifier for the MFA factor to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/userMfaFactors/{userMfaFactorId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Retrieve a filtered and paginated list of credential history records in the healthcare_platform_user_credentials table. This table archives previous user authentication credentials for rollback, security forensics, and compliance requirements. This operation supports searching and filtering based on user type, credential type, archival period, and credential status. It is intended for admins conducting compliance or security audits.","description":"This operation allows authorized system or organization administrators to perform an advanced query over the user credential history stored in the healthcare_platform_user_credentials table. These records support compliance, regulatory, and incident response audits and should never contain or expose sensitive credential material such as hashes. Any returned record must omit credential_hash fields, and access is strictly limited to privileged administrative roles. Non-authorized access attempts should be denied and tracked in the system's audit log. This operation is crucial for meeting HIPAA, SOC 2, and organizational audit requirements, with a focus on security and auditability.","summary":"Search and paginate archived user credential records in the healthcare_platform_user_credentials table (hashes never exposed).","parameters":[],"requestBody":{"description":"Filter and pagination options for searching archived user credentials.","typeName":"IHealthcarePlatformUserCredential.IRequest"},"responseBody":{"description":"Paginated summary of user credential records matching search criteria, with credential_hash never exposed.","typeName":"IPageIHealthcarePlatformUserCredential.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","method":"patch","path":"/healthcarePlatform/systemAdmin/userCredentials","name":"index"},{"specification":"Retrieve a filtered and paginated list of credential history records in the healthcare_platform_user_credentials table. This table archives previous user authentication credentials for rollback, security forensics, and compliance requirements. This operation supports searching and filtering based on user type, credential type, archival period, and credential status. It is intended for admins conducting compliance or security audits.","description":"This operation allows authorized system or organization administrators to perform an advanced query over the user credential history stored in the healthcare_platform_user_credentials table. These records support compliance, regulatory, and incident response audits and should never contain or expose sensitive credential material such as hashes. Any returned record must omit credential_hash fields, and access is strictly limited to privileged administrative roles. Non-authorized access attempts should be denied and tracked in the system's audit log. This operation is crucial for meeting HIPAA, SOC 2, and organizational audit requirements, with a focus on security and auditability.","summary":"Search and paginate archived user credential records in the healthcare_platform_user_credentials table (hashes never exposed).","parameters":[],"requestBody":{"description":"Filter and pagination options for searching archived user credentials.","typeName":"IHealthcarePlatformUserCredential.IRequest"},"responseBody":{"description":"Paginated summary of user credential records matching search criteria, with credential_hash never exposed.","typeName":"IPageIHealthcarePlatformUserCredential.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"patch","path":"/healthcarePlatform/organizationAdmin/userCredentials","name":"index"},{"specification":"Retrieve a single archived user credential record by its unique identifier from the healthcare_platform_user_credentials table. This table stores previous credentials for users, used for audit, rollback, and credential expiration workflows. This operation enables authorized administrators to conduct detailed review and compliance-driven investigations for a specific credential entry. Sensitive hash data must never be returned in any response body.","description":"This operation provides secure, role-restricted access to an individual archived user credential entry in the healthcare_platform_user_credentials table, identified by userCredentialId (UUID). Credential archives support security, compliance, and rollback workflows; API consumers must never receive sensitive credential_hash fields in any response. This endpoint is for use by administrative and security audit roles only, and all operations must be logged for compliance. Unauthorized or inappropriate access attempts should be denied with audit warning.","summary":"Retrieve details of an archived user credential entry by its ID from the healthcare_platform_user_credentials table. Never expose hashes in API responses.","parameters":[{"name":"userCredentialId","description":"Unique identifier for the archived user credential record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed archived user credential record (all sensitive fields are redacted).","typeName":"IHealthcarePlatformUserCredential"},"authorizationType":null,"authorizationRole":"systemAdmin","method":"get","path":"/healthcarePlatform/systemAdmin/userCredentials/{userCredentialId}","name":"at"},{"specification":"Retrieve a single archived user credential record by its unique identifier from the healthcare_platform_user_credentials table. This table stores previous credentials for users, used for audit, rollback, and credential expiration workflows. This operation enables authorized administrators to conduct detailed review and compliance-driven investigations for a specific credential entry. Sensitive hash data must never be returned in any response body.","description":"This operation provides secure, role-restricted access to an individual archived user credential entry in the healthcare_platform_user_credentials table, identified by userCredentialId (UUID). Credential archives support security, compliance, and rollback workflows; API consumers must never receive sensitive credential_hash fields in any response. This endpoint is for use by administrative and security audit roles only, and all operations must be logged for compliance. Unauthorized or inappropriate access attempts should be denied with audit warning.","summary":"Retrieve details of an archived user credential entry by its ID from the healthcare_platform_user_credentials table. Never expose hashes in API responses.","parameters":[{"name":"userCredentialId","description":"Unique identifier for the archived user credential record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed archived user credential record (all sensitive fields are redacted).","typeName":"IHealthcarePlatformUserCredential"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"get","path":"/healthcarePlatform/organizationAdmin/userCredentials/{userCredentialId}","name":"at"},{"specification":"Create and archive a new user credential record in the healthcare_platform_user_credentials table. This table tracks password and authentication credential history for users (system, org, and department actors). The operation supports security best practices by allowing user credential rotation, regulatory compliance for password history, and credential key archiving.","description":"This operation allows system or organization administrators to archive a new credential for any user or actor covered by the healthcarePlatform's authentication system. The request captures user_id, user_type (systemAdmin, orgAdmin, etc.), credential_type (password, sso, certificate, webauthn, etc.), credential_hash (the credential value, typically hashed), and relevant timestamps.\n\nArchiving user credentials supports regulatory mandates, SSO rotation policies, and password reuse prevention. Credential archive entries are append-only and must never be edited after creation. Sensitive values, such as credential_hash, must be handled securely; cleartext must never be allowed. All creation events are logged to the audit trail for security and compliance needs.\n\nAttempting to create a credential archive entry for a non-existent or unauthorized user must result in a compliance-audited error. Only authorized systemAdmin or organizationAdmin roles should be allowed to use this endpoint.","summary":"Archive a new user credential value record in the healthcare_platform_user_credentials table.","parameters":[],"requestBody":{"description":"Credential record including user_id, credential type, and credential hash.","typeName":"IHealthcarePlatformUserCredential.ICreate"},"responseBody":{"description":"Archived user credential record as stored.","typeName":"IHealthcarePlatformUserCredential"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/userCredentials","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Create and archive a new user credential record in the healthcare_platform_user_credentials table. This table tracks password and authentication credential history for users (system, org, and department actors). The operation supports security best practices by allowing user credential rotation, regulatory compliance for password history, and credential key archiving.","description":"This operation allows system or organization administrators to archive a new credential for any user or actor covered by the healthcarePlatform's authentication system. The request captures user_id, user_type (systemAdmin, orgAdmin, etc.), credential_type (password, sso, certificate, webauthn, etc.), credential_hash (the credential value, typically hashed), and relevant timestamps.\n\nArchiving user credentials supports regulatory mandates, SSO rotation policies, and password reuse prevention. Credential archive entries are append-only and must never be edited after creation. Sensitive values, such as credential_hash, must be handled securely; cleartext must never be allowed. All creation events are logged to the audit trail for security and compliance needs.\n\nAttempting to create a credential archive entry for a non-existent or unauthorized user must result in a compliance-audited error. Only authorized systemAdmin or organizationAdmin roles should be allowed to use this endpoint.","summary":"Archive a new user credential value record in the healthcare_platform_user_credentials table.","parameters":[],"requestBody":{"description":"Credential record including user_id, credential type, and credential hash.","typeName":"IHealthcarePlatformUserCredential.ICreate"},"responseBody":{"description":"Archived user credential record as stored.","typeName":"IHealthcarePlatformUserCredential"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/userCredentials","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates a user's credential record in the healthcarePlatform system. It is associated with the healthcare_platform_user_credentials table, which archives and manages previous password hashes, SSO credentials, and similar for audit and rollback. This operation allows updating specific credential properties such as password hash, credential type, or associated metadata for a given credential entry, referenced by its unique UUID. It is typically used by system administrators or security personnel to rotate, correct, or update credentials—never for initial assignment, which is handled by credential creation flows.","description":"Update a user's credential archive record in the healthcarePlatform. This operation targets the healthcare_platform_user_credentials table and is intended for occasions such as password or SSO credential rotation, archival, or roll-forward. Each credential record retains its type, credential hash (not active hash), archive timestamps, and relevant metadata.\n\nOnly authorized system administrators should perform this update. Updated fields must adhere strictly to security and compliance standards, and every update is logged for audit purposes. This API must enforce that only archived (not currently active) credential records are updated.\n\nUpdates must validate the credential type and ensure the new value meets application constraints (e.g., password hash structure if used, or external SSO details for SSO-type credentials). Related endpoints for credential history retrieval or credential creation may be referenced to ensure proper workflow integration. Any errors encountered—such as attempts to update an active credential, submit an invalid type, or violate audit trace requirements—must be clearly detailed and rejected by the endpoint with audit events triggered.","summary":"Update an archived user credential record in the healthcarePlatform_user_credentials table.","parameters":[{"name":"userCredentialId","description":"Unique identifier for the user credential record to update (UUID in healthcare_platform_user_credentials)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated credential information for the target user credential record.","typeName":"IHealthcarePlatformUserCredential.IUpdate"},"responseBody":{"description":"The updated user credential record.","typeName":"IHealthcarePlatformUserCredential"},"authorizationRoles":["systemAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/userCredentials/{userCredentialId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation deletes (archives) a user credential record from the healthcare_platform_user_credentials table. In the healthcarePlatform system, credentials records are archived for audit; they are never permanently deleted except by explicit compliance/order. This endpoint sets the deleted_at timestamp on the specified credential, removing it from active use but preserving for audit trails. System admins use this to retire obsolete historical credentials no longer required for rollback or compliance.","description":"Delete (archive) a user credential record, marking it as retired in the healthcare_platform_user_credentials table of healthcarePlatform. This action sets the deleted_at timestamp and ensures audit records remain intact for regulatory purposes. No actual data is erased—credentials are preserved for compliance and audit.\n\nThis operation must be invoked only by system administrators, and it is audit-logged. Attempts to delete the currently active (in-use) credential or to hard-delete a credential record should be rejected. The endpoint should confirm archival only for existing, allowed credentials and return appropriate errors if business or compliance constraints are violated. Related APIs may include credential list, update, and credential retrieval for auditing and review workflows.","summary":"Archive (soft-delete) a user credential record in the healthcarePlatform_user_credentials table.","parameters":[{"name":"userCredentialId","description":"Unique identifier for the user credential record to archive (UUID in healthcare_platform_user_credentials)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/userCredentials/{userCredentialId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of professional license verification records from the healthcare_platform_user_license_verifications table. It supports complex search scenarios such as filtering by user, user type, license status (valid/expired/suspended), license type, or last verification date. Used by compliance and administrative users to review licensure status for doctors, nurses, and technicians.","description":"Retrieve a paginated, filtered list of professional license verification records for users in the healthcarePlatform. The operation queries the healthcare_platform_user_license_verifications table, supporting advanced filtering by user, user_type (e.g., medicaldoctor/nurse/technician), verification status (valid/suspended/etc), and license type. The endpoint allows compliance officers and administrators to proactively monitor licensure status, revalidation requirements, and identify irregularities or at-risk credentials.\n\nAccess to this endpoint may be audit-logged and rate-limited due to the sensitivity of licensure data. Appropriate business validation is required to only expose responses to those with permission to moderate users/validate credentials in organizational scope. The operation should enforce pagination, search, and sorting. The response includes summary information for each license verification, as well as pagination meta-data for UI display or bulk review.","summary":"Search and retrieve a paginated list of professional user license verifications.","parameters":[],"requestBody":{"description":"Search filters and pagination for license verification records.","typeName":"IHealthcarePlatformUserLicenseVerification.IRequest"},"responseBody":{"description":"Paginated results including license verification summaries.","typeName":"IPageIHealthcarePlatformUserLicenseVerification.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/userLicenseVerifications","method":"patch"},{"specification":"This operation retrieves a filtered, paginated list of professional license verification records from the healthcare_platform_user_license_verifications table. It supports complex search scenarios such as filtering by user, user type, license status (valid/expired/suspended), license type, or last verification date. Used by compliance and administrative users to review licensure status for doctors, nurses, and technicians.","description":"Retrieve a paginated, filtered list of professional license verification records for users in the healthcarePlatform. The operation queries the healthcare_platform_user_license_verifications table, supporting advanced filtering by user, user_type (e.g., medicaldoctor/nurse/technician), verification status (valid/suspended/etc), and license type. The endpoint allows compliance officers and administrators to proactively monitor licensure status, revalidation requirements, and identify irregularities or at-risk credentials.\n\nAccess to this endpoint may be audit-logged and rate-limited due to the sensitivity of licensure data. Appropriate business validation is required to only expose responses to those with permission to moderate users/validate credentials in organizational scope. The operation should enforce pagination, search, and sorting. The response includes summary information for each license verification, as well as pagination meta-data for UI display or bulk review.","summary":"Search and retrieve a paginated list of professional user license verifications.","parameters":[],"requestBody":{"description":"Search filters and pagination for license verification records.","typeName":"IHealthcarePlatformUserLicenseVerification.IRequest"},"responseBody":{"description":"Paginated results including license verification summaries.","typeName":"IPageIHealthcarePlatformUserLicenseVerification.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/userLicenseVerifications","method":"patch"},{"specification":"This operation retrieves the details of a specific professional user license verification record. It queries the healthcare_platform_user_license_verifications table by its unique license verification ID (UUID). The returned record includes all verification details and audit metadata, such as user, license number, type, last status, and historical verification outcomes. Enables admins and compliance staff to review the full licensure history and status of medical professionals on the platform.","description":"Retrieve all details for a specific user professional license verification record, given its unique ID. This operation reads the healthcare_platform_user_license_verifications table and exposes all data for the identified record, including user, user_type, license number and type, current and prior verification status, and audit trail fields such as dates and outcomes.\n\nThis endpoint is used in compliance review, user audit, or for credential revalidation workflows. Only authorized compliance or administrative staff may access the detail, and all requests are logged for audit. The operation must enforce UUID format and reply with a clear error if the record is missing or access is not permitted. Related APIs include list, create, and update for license verification records.","summary":"Get details of a specific user license verification record by ID.","parameters":[{"name":"userLicenseVerificationId","description":"UUID of the license verification record to retrieve, from healthcare_platform_user_license_verifications.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the requested user license verification record.","typeName":"IHealthcarePlatformUserLicenseVerification"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/userLicenseVerifications/{userLicenseVerificationId}","method":"get"},{"specification":"This operation retrieves the details of a specific professional user license verification record. It queries the healthcare_platform_user_license_verifications table by its unique license verification ID (UUID). The returned record includes all verification details and audit metadata, such as user, license number, type, last status, and historical verification outcomes. Enables admins and compliance staff to review the full licensure history and status of medical professionals on the platform.","description":"Retrieve all details for a specific user professional license verification record, given its unique ID. This operation reads the healthcare_platform_user_license_verifications table and exposes all data for the identified record, including user, user_type, license number and type, current and prior verification status, and audit trail fields such as dates and outcomes.\n\nThis endpoint is used in compliance review, user audit, or for credential revalidation workflows. Only authorized compliance or administrative staff may access the detail, and all requests are logged for audit. The operation must enforce UUID format and reply with a clear error if the record is missing or access is not permitted. Related APIs include list, create, and update for license verification records.","summary":"Get details of a specific user license verification record by ID.","parameters":[{"name":"userLicenseVerificationId","description":"UUID of the license verification record to retrieve, from healthcare_platform_user_license_verifications.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the requested user license verification record.","typeName":"IHealthcarePlatformUserLicenseVerification"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/userLicenseVerifications/{userLicenseVerificationId}","method":"get"},{"specification":"Search and filter patient records using advanced criteria. This operation allows authorized users to retrieve a paginated, filtered list of patient records across the organization, supporting complex queries including demographics, status, department, and date ranges. It implements business logic and validation based on regulatory and clinical requirements, respecting data isolation and privacy flags. Soft-deleted records are excluded unless specifically permitted by compliance rules. Incorporates search, sorting, and pagination consistent with the organization’s compliance framework. Related to the healthcare_platform_patient_records schema, it supports critical flows for clinical, operational, and administrative users.","path":"/healthcarePlatform/organizationAdmin/patientRecords","method":"patch","summary":"Search and paginate patient records with advanced filters (healthcare_platform_patient_records).","description":"This operation retrieves a paginated, filtered list of patient records housed within the healthcarePlatform system. It is designed for use by authorized roles such as clinicians, administrative staff, and compliance officers who require efficient access to longitudinal patient data across organizational and departmental boundaries.\n\nThe endpoint supports advanced search criteria, including but not limited to partial name matches, date-of-birth ranges, demographic fields (handled as JSON), status queries (active, inactive, deceased, transferred), and optional filtering by department or organization. Sorting and pagination parameters are implemented to support scalable, real-time data entry and clinical review workflows.\n\nAll search requests are logged with user and organization context for compliance and auditability, ensuring that access to PHI aligns with organizational policies. Privacy flags and consent controls are enforced, and unauthorized users are denied access with appropriate error messaging. Any inclusion of soft-deleted or archived records requires explicit compliance override, and these cases are fully auditable.\n\nRelated operations include detailed patient record retrieval (GET /patientRecords/{id}), patient creation, and clinical encounter listing. Error handling includes detailed feedback on failed queries, invalid filters, or permission denials, following the organization's regulatory requirements.","parameters":[],"requestBody":{"description":"Search criteria, filter, and pagination controls for advanced patient record queries.","typeName":"IHealthcarePlatformPatientRecord.IRequest"},"responseBody":{"description":"A page of filtered patient records and summary details matching the search criteria.","typeName":"IPageIHealthcarePlatformPatientRecord.ISummary"},"authorizationRoles":["organizationAdmin","medicalDoctor","nurse","departmentHead"],"name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Search and filter patient records using advanced criteria. This operation allows authorized users to retrieve a paginated, filtered list of patient records across the organization, supporting complex queries including demographics, status, department, and date ranges. It implements business logic and validation based on regulatory and clinical requirements, respecting data isolation and privacy flags. Soft-deleted records are excluded unless specifically permitted by compliance rules. Incorporates search, sorting, and pagination consistent with the organization’s compliance framework. Related to the healthcare_platform_patient_records schema, it supports critical flows for clinical, operational, and administrative users.","path":"/healthcarePlatform/medicalDoctor/patientRecords","method":"patch","summary":"Search and paginate patient records with advanced filters (healthcare_platform_patient_records).","description":"This operation retrieves a paginated, filtered list of patient records housed within the healthcarePlatform system. It is designed for use by authorized roles such as clinicians, administrative staff, and compliance officers who require efficient access to longitudinal patient data across organizational and departmental boundaries.\n\nThe endpoint supports advanced search criteria, including but not limited to partial name matches, date-of-birth ranges, demographic fields (handled as JSON), status queries (active, inactive, deceased, transferred), and optional filtering by department or organization. Sorting and pagination parameters are implemented to support scalable, real-time data entry and clinical review workflows.\n\nAll search requests are logged with user and organization context for compliance and auditability, ensuring that access to PHI aligns with organizational policies. Privacy flags and consent controls are enforced, and unauthorized users are denied access with appropriate error messaging. Any inclusion of soft-deleted or archived records requires explicit compliance override, and these cases are fully auditable.\n\nRelated operations include detailed patient record retrieval (GET /patientRecords/{id}), patient creation, and clinical encounter listing. Error handling includes detailed feedback on failed queries, invalid filters, or permission denials, following the organization's regulatory requirements.","parameters":[],"requestBody":{"description":"Search criteria, filter, and pagination controls for advanced patient record queries.","typeName":"IHealthcarePlatformPatientRecord.IRequest"},"responseBody":{"description":"A page of filtered patient records and summary details matching the search criteria.","typeName":"IPageIHealthcarePlatformPatientRecord.ISummary"},"authorizationRoles":["organizationAdmin","medicalDoctor","nurse","departmentHead"],"name":"index","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"Search and filter patient records using advanced criteria. This operation allows authorized users to retrieve a paginated, filtered list of patient records across the organization, supporting complex queries including demographics, status, department, and date ranges. It implements business logic and validation based on regulatory and clinical requirements, respecting data isolation and privacy flags. Soft-deleted records are excluded unless specifically permitted by compliance rules. Incorporates search, sorting, and pagination consistent with the organization’s compliance framework. Related to the healthcare_platform_patient_records schema, it supports critical flows for clinical, operational, and administrative users.","path":"/healthcarePlatform/nurse/patientRecords","method":"patch","summary":"Search and paginate patient records with advanced filters (healthcare_platform_patient_records).","description":"This operation retrieves a paginated, filtered list of patient records housed within the healthcarePlatform system. It is designed for use by authorized roles such as clinicians, administrative staff, and compliance officers who require efficient access to longitudinal patient data across organizational and departmental boundaries.\n\nThe endpoint supports advanced search criteria, including but not limited to partial name matches, date-of-birth ranges, demographic fields (handled as JSON), status queries (active, inactive, deceased, transferred), and optional filtering by department or organization. Sorting and pagination parameters are implemented to support scalable, real-time data entry and clinical review workflows.\n\nAll search requests are logged with user and organization context for compliance and auditability, ensuring that access to PHI aligns with organizational policies. Privacy flags and consent controls are enforced, and unauthorized users are denied access with appropriate error messaging. Any inclusion of soft-deleted or archived records requires explicit compliance override, and these cases are fully auditable.\n\nRelated operations include detailed patient record retrieval (GET /patientRecords/{id}), patient creation, and clinical encounter listing. Error handling includes detailed feedback on failed queries, invalid filters, or permission denials, following the organization's regulatory requirements.","parameters":[],"requestBody":{"description":"Search criteria, filter, and pagination controls for advanced patient record queries.","typeName":"IHealthcarePlatformPatientRecord.IRequest"},"responseBody":{"description":"A page of filtered patient records and summary details matching the search criteria.","typeName":"IPageIHealthcarePlatformPatientRecord.ISummary"},"authorizationRoles":["organizationAdmin","medicalDoctor","nurse","departmentHead"],"name":"index","authorizationRole":"nurse","authorizationType":null},{"specification":"Search and filter patient records using advanced criteria. This operation allows authorized users to retrieve a paginated, filtered list of patient records across the organization, supporting complex queries including demographics, status, department, and date ranges. It implements business logic and validation based on regulatory and clinical requirements, respecting data isolation and privacy flags. Soft-deleted records are excluded unless specifically permitted by compliance rules. Incorporates search, sorting, and pagination consistent with the organization’s compliance framework. Related to the healthcare_platform_patient_records schema, it supports critical flows for clinical, operational, and administrative users.","path":"/healthcarePlatform/departmentHead/patientRecords","method":"patch","summary":"Search and paginate patient records with advanced filters (healthcare_platform_patient_records).","description":"This operation retrieves a paginated, filtered list of patient records housed within the healthcarePlatform system. It is designed for use by authorized roles such as clinicians, administrative staff, and compliance officers who require efficient access to longitudinal patient data across organizational and departmental boundaries.\n\nThe endpoint supports advanced search criteria, including but not limited to partial name matches, date-of-birth ranges, demographic fields (handled as JSON), status queries (active, inactive, deceased, transferred), and optional filtering by department or organization. Sorting and pagination parameters are implemented to support scalable, real-time data entry and clinical review workflows.\n\nAll search requests are logged with user and organization context for compliance and auditability, ensuring that access to PHI aligns with organizational policies. Privacy flags and consent controls are enforced, and unauthorized users are denied access with appropriate error messaging. Any inclusion of soft-deleted or archived records requires explicit compliance override, and these cases are fully auditable.\n\nRelated operations include detailed patient record retrieval (GET /patientRecords/{id}), patient creation, and clinical encounter listing. Error handling includes detailed feedback on failed queries, invalid filters, or permission denials, following the organization's regulatory requirements.","parameters":[],"requestBody":{"description":"Search criteria, filter, and pagination controls for advanced patient record queries.","typeName":"IHealthcarePlatformPatientRecord.IRequest"},"responseBody":{"description":"A page of filtered patient records and summary details matching the search criteria.","typeName":"IPageIHealthcarePlatformPatientRecord.ISummary"},"authorizationRoles":["organizationAdmin","medicalDoctor","nurse","departmentHead"],"name":"index","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves a single patient record entity from the healthcare platform by its unique patient record ID. The underlying model is 'healthcare_platform_patient_records' in the Prisma schema, which acts as the master anchor for a patient's clinical and demographic information within an organization or department. Retrieval includes the patient's identifying data, life-cycle status, demographics, and all linked clinical record context. It respects data isolation and soft delete semantics through the 'deleted_at' column, returning null or not found if the record is not active. It is fundamental to EHR workflows, compliance, and patient data access.","description":"This endpoint allows retrieval of a detailed patient record profile by patientRecordId, as defined in the 'healthcare_platform_patient_records' table. The operation returns all main columns: organization and department assignment, patient user reference, external patient number if set, legal full name, date of birth, gender, record status, extensible demographics JSON, timestamps for creation and update, and the current soft delete status.\n\nAccess to this operation must be tightly controlled and audited due to the presence of protected health information (PHI). Only authenticated and authorized roles, such as clinical staff (doctor, nurse), department heads, and admins, can invoke this endpoint with all access logged for HIPAA compliance.\n\nBusiness logic includes: 1) Ensuring that only users within the same organization or with explicit delegated rights can access the record; 2) Checking the 'deleted_at' soft delete flag—records with this set are excluded unless under audit special circumstances; 3) Supporting regulatory workflows, audit requirements, and patient self-access consent rules as described in business specifications. Errors are handled by returning not found for non-existent or ineligible records, and special messaging when access is denied due to consent or assignment boundaries.","summary":"Retrieve a specific patient record by ID from healthcare_platform_patient_records database table.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive patient record object for the requested patientRecordId, as defined in the main Patient Records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}","method":"get"},{"specification":"This operation retrieves a single patient record entity from the healthcare platform by its unique patient record ID. The underlying model is 'healthcare_platform_patient_records' in the Prisma schema, which acts as the master anchor for a patient's clinical and demographic information within an organization or department. Retrieval includes the patient's identifying data, life-cycle status, demographics, and all linked clinical record context. It respects data isolation and soft delete semantics through the 'deleted_at' column, returning null or not found if the record is not active. It is fundamental to EHR workflows, compliance, and patient data access.","description":"This endpoint allows retrieval of a detailed patient record profile by patientRecordId, as defined in the 'healthcare_platform_patient_records' table. The operation returns all main columns: organization and department assignment, patient user reference, external patient number if set, legal full name, date of birth, gender, record status, extensible demographics JSON, timestamps for creation and update, and the current soft delete status.\n\nAccess to this operation must be tightly controlled and audited due to the presence of protected health information (PHI). Only authenticated and authorized roles, such as clinical staff (doctor, nurse), department heads, and admins, can invoke this endpoint with all access logged for HIPAA compliance.\n\nBusiness logic includes: 1) Ensuring that only users within the same organization or with explicit delegated rights can access the record; 2) Checking the 'deleted_at' soft delete flag—records with this set are excluded unless under audit special circumstances; 3) Supporting regulatory workflows, audit requirements, and patient self-access consent rules as described in business specifications. Errors are handled by returning not found for non-existent or ineligible records, and special messaging when access is denied due to consent or assignment boundaries.","summary":"Retrieve a specific patient record by ID from healthcare_platform_patient_records database table.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive patient record object for the requested patientRecordId, as defined in the main Patient Records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"nurse","name":"at","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}","method":"get"},{"specification":"This operation retrieves a single patient record entity from the healthcare platform by its unique patient record ID. The underlying model is 'healthcare_platform_patient_records' in the Prisma schema, which acts as the master anchor for a patient's clinical and demographic information within an organization or department. Retrieval includes the patient's identifying data, life-cycle status, demographics, and all linked clinical record context. It respects data isolation and soft delete semantics through the 'deleted_at' column, returning null or not found if the record is not active. It is fundamental to EHR workflows, compliance, and patient data access.","description":"This endpoint allows retrieval of a detailed patient record profile by patientRecordId, as defined in the 'healthcare_platform_patient_records' table. The operation returns all main columns: organization and department assignment, patient user reference, external patient number if set, legal full name, date of birth, gender, record status, extensible demographics JSON, timestamps for creation and update, and the current soft delete status.\n\nAccess to this operation must be tightly controlled and audited due to the presence of protected health information (PHI). Only authenticated and authorized roles, such as clinical staff (doctor, nurse), department heads, and admins, can invoke this endpoint with all access logged for HIPAA compliance.\n\nBusiness logic includes: 1) Ensuring that only users within the same organization or with explicit delegated rights can access the record; 2) Checking the 'deleted_at' soft delete flag—records with this set are excluded unless under audit special circumstances; 3) Supporting regulatory workflows, audit requirements, and patient self-access consent rules as described in business specifications. Errors are handled by returning not found for non-existent or ineligible records, and special messaging when access is denied due to consent or assignment boundaries.","summary":"Retrieve a specific patient record by ID from healthcare_platform_patient_records database table.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive patient record object for the requested patientRecordId, as defined in the main Patient Records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}","method":"get"},{"specification":"This operation retrieves a single patient record entity from the healthcare platform by its unique patient record ID. The underlying model is 'healthcare_platform_patient_records' in the Prisma schema, which acts as the master anchor for a patient's clinical and demographic information within an organization or department. Retrieval includes the patient's identifying data, life-cycle status, demographics, and all linked clinical record context. It respects data isolation and soft delete semantics through the 'deleted_at' column, returning null or not found if the record is not active. It is fundamental to EHR workflows, compliance, and patient data access.","description":"This endpoint allows retrieval of a detailed patient record profile by patientRecordId, as defined in the 'healthcare_platform_patient_records' table. The operation returns all main columns: organization and department assignment, patient user reference, external patient number if set, legal full name, date of birth, gender, record status, extensible demographics JSON, timestamps for creation and update, and the current soft delete status.\n\nAccess to this operation must be tightly controlled and audited due to the presence of protected health information (PHI). Only authenticated and authorized roles, such as clinical staff (doctor, nurse), department heads, and admins, can invoke this endpoint with all access logged for HIPAA compliance.\n\nBusiness logic includes: 1) Ensuring that only users within the same organization or with explicit delegated rights can access the record; 2) Checking the 'deleted_at' soft delete flag—records with this set are excluded unless under audit special circumstances; 3) Supporting regulatory workflows, audit requirements, and patient self-access consent rules as described in business specifications. Errors are handled by returning not found for non-existent or ineligible records, and special messaging when access is denied due to consent or assignment boundaries.","summary":"Retrieve a specific patient record by ID from healthcare_platform_patient_records database table.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive patient record object for the requested patientRecordId, as defined in the main Patient Records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}","method":"get"},{"specification":"This operation retrieves a single patient record entity from the healthcare platform by its unique patient record ID. The underlying model is 'healthcare_platform_patient_records' in the Prisma schema, which acts as the master anchor for a patient's clinical and demographic information within an organization or department. Retrieval includes the patient's identifying data, life-cycle status, demographics, and all linked clinical record context. It respects data isolation and soft delete semantics through the 'deleted_at' column, returning null or not found if the record is not active. It is fundamental to EHR workflows, compliance, and patient data access.","description":"This endpoint allows retrieval of a detailed patient record profile by patientRecordId, as defined in the 'healthcare_platform_patient_records' table. The operation returns all main columns: organization and department assignment, patient user reference, external patient number if set, legal full name, date of birth, gender, record status, extensible demographics JSON, timestamps for creation and update, and the current soft delete status.\n\nAccess to this operation must be tightly controlled and audited due to the presence of protected health information (PHI). Only authenticated and authorized roles, such as clinical staff (doctor, nurse), department heads, and admins, can invoke this endpoint with all access logged for HIPAA compliance.\n\nBusiness logic includes: 1) Ensuring that only users within the same organization or with explicit delegated rights can access the record; 2) Checking the 'deleted_at' soft delete flag—records with this set are excluded unless under audit special circumstances; 3) Supporting regulatory workflows, audit requirements, and patient self-access consent rules as described in business specifications. Errors are handled by returning not found for non-existent or ineligible records, and special messaging when access is denied due to consent or assignment boundaries.","summary":"Retrieve a specific patient record by ID from healthcare_platform_patient_records database table.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive patient record object for the requested patientRecordId, as defined in the main Patient Records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}","method":"get"},{"specification":"This operation creates a new patient record within the healthcare platform. The relevant Prisma model is 'healthcare_platform_patient_records', which is the authoritative business entity for patient registration, core clinical profile, and regulatory anchoring for EHR workflows. Creation populates all mandatory personal data, demographic information, and assigns the patient to an organization (and optionally a department), initializing life-cycle status and audit traceability.","description":"This endpoint allows for creating a new patient record within a specified organization (and optionally mapped department), as defined by the 'healthcare_platform_patient_records' table. Required fields include patient user reference, full legal name, date of birth, demographic data in JSON format if available, and business status. Optional fields such as external patient number, gender, and department ID support advanced mapping or integration needs. Timestamps for creation and updates are managed by the system.\n\nRoles allowed to use this operation are tightly regulated: patient creation can be performed by the organization's admin staff, clinical staff with patient onboarding permissions, or by authorized receptionists during intake. The business logic validates all required fields, checks for duplicate assignments by patient_user_id, and applies organizational data isolation rules. A successfully created record is returned for further use in EHR flows, appointment booking, or regulatory workflows.\n\nIf records are created for patients already active, appropriate errors or contextual data (e.g., merging, archival logic) are triggered to align with platform business rules. All creation actions are audit logged for regulatory compliance and incident investigation.","summary":"Create a new patient record in healthcare_platform_patient_records table.","parameters":[],"requestBody":{"description":"Data required to create a new patient record, including user reference, demographics, and business metadata.","typeName":"IHealthcarePlatformPatientRecord.ICreate"},"responseBody":{"description":"The newly created patient record as defined by the core patient records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/patientRecords","method":"post"},{"specification":"This operation creates a new patient record within the healthcare platform. The relevant Prisma model is 'healthcare_platform_patient_records', which is the authoritative business entity for patient registration, core clinical profile, and regulatory anchoring for EHR workflows. Creation populates all mandatory personal data, demographic information, and assigns the patient to an organization (and optionally a department), initializing life-cycle status and audit traceability.","description":"This endpoint allows for creating a new patient record within a specified organization (and optionally mapped department), as defined by the 'healthcare_platform_patient_records' table. Required fields include patient user reference, full legal name, date of birth, demographic data in JSON format if available, and business status. Optional fields such as external patient number, gender, and department ID support advanced mapping or integration needs. Timestamps for creation and updates are managed by the system.\n\nRoles allowed to use this operation are tightly regulated: patient creation can be performed by the organization's admin staff, clinical staff with patient onboarding permissions, or by authorized receptionists during intake. The business logic validates all required fields, checks for duplicate assignments by patient_user_id, and applies organizational data isolation rules. A successfully created record is returned for further use in EHR flows, appointment booking, or regulatory workflows.\n\nIf records are created for patients already active, appropriate errors or contextual data (e.g., merging, archival logic) are triggered to align with platform business rules. All creation actions are audit logged for regulatory compliance and incident investigation.","summary":"Create a new patient record in healthcare_platform_patient_records table.","parameters":[],"requestBody":{"description":"Data required to create a new patient record, including user reference, demographics, and business metadata.","typeName":"IHealthcarePlatformPatientRecord.ICreate"},"responseBody":{"description":"The newly created patient record as defined by the core patient records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/patientRecords","method":"post"},{"specification":"This operation creates a new patient record within the healthcare platform. The relevant Prisma model is 'healthcare_platform_patient_records', which is the authoritative business entity for patient registration, core clinical profile, and regulatory anchoring for EHR workflows. Creation populates all mandatory personal data, demographic information, and assigns the patient to an organization (and optionally a department), initializing life-cycle status and audit traceability.","description":"This endpoint allows for creating a new patient record within a specified organization (and optionally mapped department), as defined by the 'healthcare_platform_patient_records' table. Required fields include patient user reference, full legal name, date of birth, demographic data in JSON format if available, and business status. Optional fields such as external patient number, gender, and department ID support advanced mapping or integration needs. Timestamps for creation and updates are managed by the system.\n\nRoles allowed to use this operation are tightly regulated: patient creation can be performed by the organization's admin staff, clinical staff with patient onboarding permissions, or by authorized receptionists during intake. The business logic validates all required fields, checks for duplicate assignments by patient_user_id, and applies organizational data isolation rules. A successfully created record is returned for further use in EHR flows, appointment booking, or regulatory workflows.\n\nIf records are created for patients already active, appropriate errors or contextual data (e.g., merging, archival logic) are triggered to align with platform business rules. All creation actions are audit logged for regulatory compliance and incident investigation.","summary":"Create a new patient record in healthcare_platform_patient_records table.","parameters":[],"requestBody":{"description":"Data required to create a new patient record, including user reference, demographics, and business metadata.","typeName":"IHealthcarePlatformPatientRecord.ICreate"},"responseBody":{"description":"The newly created patient record as defined by the core patient records schema.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"receptionist","name":"create","path":"/healthcarePlatform/receptionist/patientRecords","method":"post"},{"specification":"This operation updates the details of a specific patient record by its ID in the healthcare_platform_patient_records table. The operation supports modification of permitted fields like name, demographic data, status, department assignment, and other patient profile details, all in alignment with regulatory, audit, and consent boundaries. All updates are subject to full audit trail and compliance policies, with versioning and amendment logging triggered as required.","description":"This endpoint enables authorized users to update the properties of a given patient record entry identified by patientRecordId. Allowed modification fields, as defined in the patient records Prisma schema, include legal name, demographics JSON, department, gender, status, and other non-immutable fields (excluding organization and primary user references, which are not generally modifiable post-creation).\n\nUpdate attempts are tightly controlled: only clinical staff with proper permissions, organization admins, or department heads may update records. The operation validates input, checks for conflicting soft delete status (deleted_at), and ensures consistency with regulatory requirements. All modifications are recorded in the audit trail, and significant changes may trigger versioning and amendment flows for compliance, depending on organizational policy and legal requirements.\n\nBusiness logic must also check for legal holds, privacy flags, and explicit patient consent requirements before applying updates. Rejected changes due to regulatory or consent restrictions are handled with descriptive errors, and client logic may prompt for required approvals.","summary":"Update an existing patient record identified by patientRecordId in the main patient records schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a patient record, respecting business validation rules and data isolation.","typeName":"IHealthcarePlatformPatientRecord.IUpdate"},"responseBody":{"description":"The updated patient record reflecting all permitted changes.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}","method":"put"},{"specification":"This operation updates the details of a specific patient record by its ID in the healthcare_platform_patient_records table. The operation supports modification of permitted fields like name, demographic data, status, department assignment, and other patient profile details, all in alignment with regulatory, audit, and consent boundaries. All updates are subject to full audit trail and compliance policies, with versioning and amendment logging triggered as required.","description":"This endpoint enables authorized users to update the properties of a given patient record entry identified by patientRecordId. Allowed modification fields, as defined in the patient records Prisma schema, include legal name, demographics JSON, department, gender, status, and other non-immutable fields (excluding organization and primary user references, which are not generally modifiable post-creation).\n\nUpdate attempts are tightly controlled: only clinical staff with proper permissions, organization admins, or department heads may update records. The operation validates input, checks for conflicting soft delete status (deleted_at), and ensures consistency with regulatory requirements. All modifications are recorded in the audit trail, and significant changes may trigger versioning and amendment flows for compliance, depending on organizational policy and legal requirements.\n\nBusiness logic must also check for legal holds, privacy flags, and explicit patient consent requirements before applying updates. Rejected changes due to regulatory or consent restrictions are handled with descriptive errors, and client logic may prompt for required approvals.","summary":"Update an existing patient record identified by patientRecordId in the main patient records schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a patient record, respecting business validation rules and data isolation.","typeName":"IHealthcarePlatformPatientRecord.IUpdate"},"responseBody":{"description":"The updated patient record reflecting all permitted changes.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"nurse","name":"update","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}","method":"put"},{"specification":"This operation updates the details of a specific patient record by its ID in the healthcare_platform_patient_records table. The operation supports modification of permitted fields like name, demographic data, status, department assignment, and other patient profile details, all in alignment with regulatory, audit, and consent boundaries. All updates are subject to full audit trail and compliance policies, with versioning and amendment logging triggered as required.","description":"This endpoint enables authorized users to update the properties of a given patient record entry identified by patientRecordId. Allowed modification fields, as defined in the patient records Prisma schema, include legal name, demographics JSON, department, gender, status, and other non-immutable fields (excluding organization and primary user references, which are not generally modifiable post-creation).\n\nUpdate attempts are tightly controlled: only clinical staff with proper permissions, organization admins, or department heads may update records. The operation validates input, checks for conflicting soft delete status (deleted_at), and ensures consistency with regulatory requirements. All modifications are recorded in the audit trail, and significant changes may trigger versioning and amendment flows for compliance, depending on organizational policy and legal requirements.\n\nBusiness logic must also check for legal holds, privacy flags, and explicit patient consent requirements before applying updates. Rejected changes due to regulatory or consent restrictions are handled with descriptive errors, and client logic may prompt for required approvals.","summary":"Update an existing patient record identified by patientRecordId in the main patient records schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a patient record, respecting business validation rules and data isolation.","typeName":"IHealthcarePlatformPatientRecord.IUpdate"},"responseBody":{"description":"The updated patient record reflecting all permitted changes.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}","method":"put"},{"specification":"This operation updates the details of a specific patient record by its ID in the healthcare_platform_patient_records table. The operation supports modification of permitted fields like name, demographic data, status, department assignment, and other patient profile details, all in alignment with regulatory, audit, and consent boundaries. All updates are subject to full audit trail and compliance policies, with versioning and amendment logging triggered as required.","description":"This endpoint enables authorized users to update the properties of a given patient record entry identified by patientRecordId. Allowed modification fields, as defined in the patient records Prisma schema, include legal name, demographics JSON, department, gender, status, and other non-immutable fields (excluding organization and primary user references, which are not generally modifiable post-creation).\n\nUpdate attempts are tightly controlled: only clinical staff with proper permissions, organization admins, or department heads may update records. The operation validates input, checks for conflicting soft delete status (deleted_at), and ensures consistency with regulatory requirements. All modifications are recorded in the audit trail, and significant changes may trigger versioning and amendment flows for compliance, depending on organizational policy and legal requirements.\n\nBusiness logic must also check for legal holds, privacy flags, and explicit patient consent requirements before applying updates. Rejected changes due to regulatory or consent restrictions are handled with descriptive errors, and client logic may prompt for required approvals.","summary":"Update an existing patient record identified by patientRecordId in the main patient records schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a patient record, respecting business validation rules and data isolation.","typeName":"IHealthcarePlatformPatientRecord.IUpdate"},"responseBody":{"description":"The updated patient record reflecting all permitted changes.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}","method":"put"},{"specification":"This operation updates the details of a specific patient record by its ID in the healthcare_platform_patient_records table. The operation supports modification of permitted fields like name, demographic data, status, department assignment, and other patient profile details, all in alignment with regulatory, audit, and consent boundaries. All updates are subject to full audit trail and compliance policies, with versioning and amendment logging triggered as required.","description":"This endpoint enables authorized users to update the properties of a given patient record entry identified by patientRecordId. Allowed modification fields, as defined in the patient records Prisma schema, include legal name, demographics JSON, department, gender, status, and other non-immutable fields (excluding organization and primary user references, which are not generally modifiable post-creation).\n\nUpdate attempts are tightly controlled: only clinical staff with proper permissions, organization admins, or department heads may update records. The operation validates input, checks for conflicting soft delete status (deleted_at), and ensures consistency with regulatory requirements. All modifications are recorded in the audit trail, and significant changes may trigger versioning and amendment flows for compliance, depending on organizational policy and legal requirements.\n\nBusiness logic must also check for legal holds, privacy flags, and explicit patient consent requirements before applying updates. Rejected changes due to regulatory or consent restrictions are handled with descriptive errors, and client logic may prompt for required approvals.","summary":"Update an existing patient record identified by patientRecordId in the main patient records schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a patient record, respecting business validation rules and data isolation.","typeName":"IHealthcarePlatformPatientRecord.IUpdate"},"responseBody":{"description":"The updated patient record reflecting all permitted changes.","typeName":"IHealthcarePlatformPatientRecord"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}","method":"put"},{"specification":"This operation permanently deletes (hard delete) a patient record from the system, removing the record from the healthcare_platform_patient_records table by its unique ID. This is an exceptional operation permitted only in precise circumstances due to compliance, regulatory, and safety requirements. The patient record and all linked entities are subject to hard deletion (physical removal from the database), which may be logged and auditable for compliance but is not typically reversible. This operation should NOT be offered except as a protected downstream administrative flow.","description":"This endpoint serves to PERMANENTLY remove a patient record identified by patientRecordId, as represented in the 'healthcare_platform_patient_records' table. As the schema includes a soft delete timestamp field (deleted_at), normal business logic would employ soft deletion for routine deactivation. However, this operation executes a HARD DELETE – completely erasing the record from the database, along with all foreign key and dependent data as required by referential integrity constraints.\n\nThis function is suitable ONLY for tightly controlled workflows such as compliance-driven purging after required legal retention periods, erroneous test data removal by system administrators, or when necessitated by regulatory guidance. All such actions MUST be audit-logged and reviewed for appropriateness. Only senior administrative roles with explicit purge rights may invoke this operation, consistent with organizational and legal policy as described in the requirements. Attempting to delete a record out of policy, or for non-existent IDs, must result in clear errors with appropriate logging.","summary":"Permanently erase (hard delete) a patient record by ID from healthcare_platform_patient_records.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record to be permanently deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}","method":"delete"},{"specification":"This operation retrieves a paginated and filtered list of all clinical or administrative encounters associated with a specific patient record in the healthcarePlatform system. The endpoint operates on the healthcare_platform_ehr_encounters table, returning encounter summaries by patientRecordId, supporting search by type, time window, status, department, and provider. The response is optimized for care team dashboards, record reviews, and compliance workflows.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters","method":"patch","summary":"Search and retrieve a paginated, filterable list of patient encounters.","description":"This API endpoint allows authorized users to retrieve all EHR encounters for a given patient record as a paginated and searchable list. It references the healthcare_platform_ehr_encounters table and includes parameters such as encounter type (office_visit, telemedicine, inpatient), provider, status, and time window. The operation supports sorting and pagination to efficiently browse extensive encounter histories.\n\nAccess to this endpoint is restricted based on RBAC and patient consent status, with additional compliance requirements for audit trail and access purpose logging (as described in the schema and regulatory requirements). Sensitive patient data is redacted or filtered depending on the requester's role. The response provides only summary information per encounter for list views; detailed clinical data is available at the encounter detail endpoint. All queries on this resource are indexed for performance and compliance review.\n\nThe operation fully aligns with the business logic and audit requirements described in the requirements analysis, enforcing privacy, compliance, and role-based data access for longitudinal patient record navigation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record whose encounters are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for EHR encounter listing (e.g., date ranges, types, providers, status).","typeName":"IHealthcarePlatformEhrEncounter.IRequest"},"responseBody":{"description":"Paginated and filterable list of EHR encounter summaries for the specified patient record.","typeName":"IPageIHealthcarePlatformEhrEncounter.ISummary"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"index"},{"specification":"This operation retrieves a paginated and filtered list of all clinical or administrative encounters associated with a specific patient record in the healthcarePlatform system. The endpoint operates on the healthcare_platform_ehr_encounters table, returning encounter summaries by patientRecordId, supporting search by type, time window, status, department, and provider. The response is optimized for care team dashboards, record reviews, and compliance workflows.","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters","method":"patch","summary":"Search and retrieve a paginated, filterable list of patient encounters.","description":"This API endpoint allows authorized users to retrieve all EHR encounters for a given patient record as a paginated and searchable list. It references the healthcare_platform_ehr_encounters table and includes parameters such as encounter type (office_visit, telemedicine, inpatient), provider, status, and time window. The operation supports sorting and pagination to efficiently browse extensive encounter histories.\n\nAccess to this endpoint is restricted based on RBAC and patient consent status, with additional compliance requirements for audit trail and access purpose logging (as described in the schema and regulatory requirements). Sensitive patient data is redacted or filtered depending on the requester's role. The response provides only summary information per encounter for list views; detailed clinical data is available at the encounter detail endpoint. All queries on this resource are indexed for performance and compliance review.\n\nThe operation fully aligns with the business logic and audit requirements described in the requirements analysis, enforcing privacy, compliance, and role-based data access for longitudinal patient record navigation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record whose encounters are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for EHR encounter listing (e.g., date ranges, types, providers, status).","typeName":"IHealthcarePlatformEhrEncounter.IRequest"},"responseBody":{"description":"Paginated and filterable list of EHR encounter summaries for the specified patient record.","typeName":"IPageIHealthcarePlatformEhrEncounter.ISummary"},"authorizationType":null,"authorizationRole":"nurse","name":"index"},{"specification":"This operation retrieves a paginated and filtered list of all clinical or administrative encounters associated with a specific patient record in the healthcarePlatform system. The endpoint operates on the healthcare_platform_ehr_encounters table, returning encounter summaries by patientRecordId, supporting search by type, time window, status, department, and provider. The response is optimized for care team dashboards, record reviews, and compliance workflows.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters","method":"patch","summary":"Search and retrieve a paginated, filterable list of patient encounters.","description":"This API endpoint allows authorized users to retrieve all EHR encounters for a given patient record as a paginated and searchable list. It references the healthcare_platform_ehr_encounters table and includes parameters such as encounter type (office_visit, telemedicine, inpatient), provider, status, and time window. The operation supports sorting and pagination to efficiently browse extensive encounter histories.\n\nAccess to this endpoint is restricted based on RBAC and patient consent status, with additional compliance requirements for audit trail and access purpose logging (as described in the schema and regulatory requirements). Sensitive patient data is redacted or filtered depending on the requester's role. The response provides only summary information per encounter for list views; detailed clinical data is available at the encounter detail endpoint. All queries on this resource are indexed for performance and compliance review.\n\nThe operation fully aligns with the business logic and audit requirements described in the requirements analysis, enforcing privacy, compliance, and role-based data access for longitudinal patient record navigation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record whose encounters are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for EHR encounter listing (e.g., date ranges, types, providers, status).","typeName":"IHealthcarePlatformEhrEncounter.IRequest"},"responseBody":{"description":"Paginated and filterable list of EHR encounter summaries for the specified patient record.","typeName":"IPageIHealthcarePlatformEhrEncounter.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves a paginated and filtered list of all clinical or administrative encounters associated with a specific patient record in the healthcarePlatform system. The endpoint operates on the healthcare_platform_ehr_encounters table, returning encounter summaries by patientRecordId, supporting search by type, time window, status, department, and provider. The response is optimized for care team dashboards, record reviews, and compliance workflows.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters","method":"patch","summary":"Search and retrieve a paginated, filterable list of patient encounters.","description":"This API endpoint allows authorized users to retrieve all EHR encounters for a given patient record as a paginated and searchable list. It references the healthcare_platform_ehr_encounters table and includes parameters such as encounter type (office_visit, telemedicine, inpatient), provider, status, and time window. The operation supports sorting and pagination to efficiently browse extensive encounter histories.\n\nAccess to this endpoint is restricted based on RBAC and patient consent status, with additional compliance requirements for audit trail and access purpose logging (as described in the schema and regulatory requirements). Sensitive patient data is redacted or filtered depending on the requester's role. The response provides only summary information per encounter for list views; detailed clinical data is available at the encounter detail endpoint. All queries on this resource are indexed for performance and compliance review.\n\nThe operation fully aligns with the business logic and audit requirements described in the requirements analysis, enforcing privacy, compliance, and role-based data access for longitudinal patient record navigation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record whose encounters are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for EHR encounter listing (e.g., date ranges, types, providers, status).","typeName":"IHealthcarePlatformEhrEncounter.IRequest"},"responseBody":{"description":"Paginated and filterable list of EHR encounter summaries for the specified patient record.","typeName":"IPageIHealthcarePlatformEhrEncounter.ISummary"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index"},{"specification":"This operation retrieves the full details of a specific clinical or administrative encounter for a patient, querying the healthcare_platform_ehr_encounters table and associated clinical data (versions, notes, providers) for the supplied patientRecordId and encounterId. Used to view all encounter metadata, provider assignments, notes, types, and audit trail references as required in clinical workflows.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"get","summary":"Retrieve detailed information about a specific patient encounter by ID.","description":"This API endpoint allows authorized users to access full details for a single EHR encounter belonging to a patient record, referencing the healthcare_platform_ehr_encounters schema and associated foreign key data (provider, notes, encounter type, timestamps, and audit metadata). The endpoint returns all available structured and narrative data for the encounter, used for medical/legal review, care coordination, and compliance audits.\n\nAccess controls are enforced by role (medicalDoctor, nurse, organizationAdmin) and on the basis of patient consent and regulatory requirements. Only appropriate users may view detailed records; sensitive or restricted information is filtered for non-clinical requesters. This endpoint complements the encounter index/list operation, providing drill-down detail for a specific clinical event, and triggers access logging/auditing per compliance policy described in the requirements documentation and schema comments.\n\nError handling includes clear responses for unauthorized access, not found, or record lock/workflow conflicts. All detail retrievals are logged for downstream audit, and response schema always matches current EHR encounter detail structure.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified EHR encounter, including all structured and narrative fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at"},{"specification":"This operation retrieves the full details of a specific clinical or administrative encounter for a patient, querying the healthcare_platform_ehr_encounters table and associated clinical data (versions, notes, providers) for the supplied patientRecordId and encounterId. Used to view all encounter metadata, provider assignments, notes, types, and audit trail references as required in clinical workflows.","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"get","summary":"Retrieve detailed information about a specific patient encounter by ID.","description":"This API endpoint allows authorized users to access full details for a single EHR encounter belonging to a patient record, referencing the healthcare_platform_ehr_encounters schema and associated foreign key data (provider, notes, encounter type, timestamps, and audit metadata). The endpoint returns all available structured and narrative data for the encounter, used for medical/legal review, care coordination, and compliance audits.\n\nAccess controls are enforced by role (medicalDoctor, nurse, organizationAdmin) and on the basis of patient consent and regulatory requirements. Only appropriate users may view detailed records; sensitive or restricted information is filtered for non-clinical requesters. This endpoint complements the encounter index/list operation, providing drill-down detail for a specific clinical event, and triggers access logging/auditing per compliance policy described in the requirements documentation and schema comments.\n\nError handling includes clear responses for unauthorized access, not found, or record lock/workflow conflicts. All detail retrievals are logged for downstream audit, and response schema always matches current EHR encounter detail structure.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified EHR encounter, including all structured and narrative fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"nurse","name":"at"},{"specification":"This operation retrieves the full details of a specific clinical or administrative encounter for a patient, querying the healthcare_platform_ehr_encounters table and associated clinical data (versions, notes, providers) for the supplied patientRecordId and encounterId. Used to view all encounter metadata, provider assignments, notes, types, and audit trail references as required in clinical workflows.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"get","summary":"Retrieve detailed information about a specific patient encounter by ID.","description":"This API endpoint allows authorized users to access full details for a single EHR encounter belonging to a patient record, referencing the healthcare_platform_ehr_encounters schema and associated foreign key data (provider, notes, encounter type, timestamps, and audit metadata). The endpoint returns all available structured and narrative data for the encounter, used for medical/legal review, care coordination, and compliance audits.\n\nAccess controls are enforced by role (medicalDoctor, nurse, organizationAdmin) and on the basis of patient consent and regulatory requirements. Only appropriate users may view detailed records; sensitive or restricted information is filtered for non-clinical requesters. This endpoint complements the encounter index/list operation, providing drill-down detail for a specific clinical event, and triggers access logging/auditing per compliance policy described in the requirements documentation and schema comments.\n\nError handling includes clear responses for unauthorized access, not found, or record lock/workflow conflicts. All detail retrievals are logged for downstream audit, and response schema always matches current EHR encounter detail structure.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified EHR encounter, including all structured and narrative fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation retrieves the full details of a specific clinical or administrative encounter for a patient, querying the healthcare_platform_ehr_encounters table and associated clinical data (versions, notes, providers) for the supplied patientRecordId and encounterId. Used to view all encounter metadata, provider assignments, notes, types, and audit trail references as required in clinical workflows.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"get","summary":"Retrieve detailed information about a specific patient encounter by ID.","description":"This API endpoint allows authorized users to access full details for a single EHR encounter belonging to a patient record, referencing the healthcare_platform_ehr_encounters schema and associated foreign key data (provider, notes, encounter type, timestamps, and audit metadata). The endpoint returns all available structured and narrative data for the encounter, used for medical/legal review, care coordination, and compliance audits.\n\nAccess controls are enforced by role (medicalDoctor, nurse, organizationAdmin) and on the basis of patient consent and regulatory requirements. Only appropriate users may view detailed records; sensitive or restricted information is filtered for non-clinical requesters. This endpoint complements the encounter index/list operation, providing drill-down detail for a specific clinical event, and triggers access logging/auditing per compliance policy described in the requirements documentation and schema comments.\n\nError handling includes clear responses for unauthorized access, not found, or record lock/workflow conflicts. All detail retrievals are logged for downstream audit, and response schema always matches current EHR encounter detail structure.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified EHR encounter, including all structured and narrative fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at"},{"specification":"This operation creates a new clinical or administrative EHR encounter for a given patient record in the healthcarePlatform system. Used by providers or authorized staff to document new patient visits, consults, telemedicine sessions, or other clinical events. The operation writes to the healthcare_platform_ehr_encounters table and supports configuration of encounter type, provider, status, timing, and notes, while enforcing versioning and compliance requirements.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters","method":"post","summary":"Create a new EHR encounter for a specific patient record.","description":"This endpoint allows an authorized clinical user to create a new encounter event for a patient record, writing a new row in the healthcare_platform_ehr_encounters schema. Required input includes encounter type (office_visit, inpatient, telemedicine, emergency, etc.), provider assignment, start/end times, status, and any initial clinical notes or context. The operation enforces all business validation, including role-based initiation checks and regulatory field completeness (e.g., provider ID, encounter type, clinical summary as applicable).\n\nSensitive logic such as workflow/encounter status, assignment, and audit trail integration are executed in accordance with the business rules cited in the requirements analysis. The endpoint returns the newly created encounter, including the generated encounterId and all initial data fields, for immediate reference by the care team and schedule.\n\nThis operation is strictly permissioned to clinical roles (doctors, nurses) or organization/department leadership, according to RBAC and patient/department assignment. All creation attempts are logged according to audit/compliance strategy.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to which the new encounter will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data required to create a new clinical or administrative EHR encounter for the patient record.","typeName":"IHealthcarePlatformEhrEncounter.ICreate"},"responseBody":{"description":"Details of the newly created EHR encounter, including ID and all clinical event fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create"},{"specification":"This operation creates a new clinical or administrative EHR encounter for a given patient record in the healthcarePlatform system. Used by providers or authorized staff to document new patient visits, consults, telemedicine sessions, or other clinical events. The operation writes to the healthcare_platform_ehr_encounters table and supports configuration of encounter type, provider, status, timing, and notes, while enforcing versioning and compliance requirements.","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters","method":"post","summary":"Create a new EHR encounter for a specific patient record.","description":"This endpoint allows an authorized clinical user to create a new encounter event for a patient record, writing a new row in the healthcare_platform_ehr_encounters schema. Required input includes encounter type (office_visit, inpatient, telemedicine, emergency, etc.), provider assignment, start/end times, status, and any initial clinical notes or context. The operation enforces all business validation, including role-based initiation checks and regulatory field completeness (e.g., provider ID, encounter type, clinical summary as applicable).\n\nSensitive logic such as workflow/encounter status, assignment, and audit trail integration are executed in accordance with the business rules cited in the requirements analysis. The endpoint returns the newly created encounter, including the generated encounterId and all initial data fields, for immediate reference by the care team and schedule.\n\nThis operation is strictly permissioned to clinical roles (doctors, nurses) or organization/department leadership, according to RBAC and patient/department assignment. All creation attempts are logged according to audit/compliance strategy.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to which the new encounter will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data required to create a new clinical or administrative EHR encounter for the patient record.","typeName":"IHealthcarePlatformEhrEncounter.ICreate"},"responseBody":{"description":"Details of the newly created EHR encounter, including ID and all clinical event fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"nurse","name":"create"},{"specification":"This operation creates a new clinical or administrative EHR encounter for a given patient record in the healthcarePlatform system. Used by providers or authorized staff to document new patient visits, consults, telemedicine sessions, or other clinical events. The operation writes to the healthcare_platform_ehr_encounters table and supports configuration of encounter type, provider, status, timing, and notes, while enforcing versioning and compliance requirements.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters","method":"post","summary":"Create a new EHR encounter for a specific patient record.","description":"This endpoint allows an authorized clinical user to create a new encounter event for a patient record, writing a new row in the healthcare_platform_ehr_encounters schema. Required input includes encounter type (office_visit, inpatient, telemedicine, emergency, etc.), provider assignment, start/end times, status, and any initial clinical notes or context. The operation enforces all business validation, including role-based initiation checks and regulatory field completeness (e.g., provider ID, encounter type, clinical summary as applicable).\n\nSensitive logic such as workflow/encounter status, assignment, and audit trail integration are executed in accordance with the business rules cited in the requirements analysis. The endpoint returns the newly created encounter, including the generated encounterId and all initial data fields, for immediate reference by the care team and schedule.\n\nThis operation is strictly permissioned to clinical roles (doctors, nurses) or organization/department leadership, according to RBAC and patient/department assignment. All creation attempts are logged according to audit/compliance strategy.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to which the new encounter will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data required to create a new clinical or administrative EHR encounter for the patient record.","typeName":"IHealthcarePlatformEhrEncounter.ICreate"},"responseBody":{"description":"Details of the newly created EHR encounter, including ID and all clinical event fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation creates a new clinical or administrative EHR encounter for a given patient record in the healthcarePlatform system. Used by providers or authorized staff to document new patient visits, consults, telemedicine sessions, or other clinical events. The operation writes to the healthcare_platform_ehr_encounters table and supports configuration of encounter type, provider, status, timing, and notes, while enforcing versioning and compliance requirements.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters","method":"post","summary":"Create a new EHR encounter for a specific patient record.","description":"This endpoint allows an authorized clinical user to create a new encounter event for a patient record, writing a new row in the healthcare_platform_ehr_encounters schema. Required input includes encounter type (office_visit, inpatient, telemedicine, emergency, etc.), provider assignment, start/end times, status, and any initial clinical notes or context. The operation enforces all business validation, including role-based initiation checks and regulatory field completeness (e.g., provider ID, encounter type, clinical summary as applicable).\n\nSensitive logic such as workflow/encounter status, assignment, and audit trail integration are executed in accordance with the business rules cited in the requirements analysis. The endpoint returns the newly created encounter, including the generated encounterId and all initial data fields, for immediate reference by the care team and schedule.\n\nThis operation is strictly permissioned to clinical roles (doctors, nurses) or organization/department leadership, according to RBAC and patient/department assignment. All creation attempts are logged according to audit/compliance strategy.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to which the new encounter will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data required to create a new clinical or administrative EHR encounter for the patient record.","typeName":"IHealthcarePlatformEhrEncounter.ICreate"},"responseBody":{"description":"Details of the newly created EHR encounter, including ID and all clinical event fields.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create"},{"specification":"This operation updates an existing EHR encounter for a patient record in the healthcare_platform_ehr_encounters table. Used by authorized clinical staff to correct, amend, or complete encounter details (type, timing, provider, notes, status) for a specific encounterId under a given patientRecordId. It enforces version control, audit trails, and compliance checks, returning updated data for confirmation and downstream workflows.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"put","summary":"Update details of an existing EHR encounter for a patient record.","description":"This API endpoint allows an authorized user to amend or update an existing EHR encounter for a patient record, identified by patientRecordId and encounterId. The operation references the healthcare_platform_ehr_encounters schema, supporting updates to encounter type, timing, provider assignment, clinical notes, and status. All changes trigger a new version (tracked in EHR versions) and comprehensive audit logging in accordance with business and regulatory policy.\n\nRole-based access controls ensure that only clinicians, nurses, or departmental/organizational leadership can perform modification. Validation logic includes status workflow checks (e.g., completed, locked, in-review), field completeness, and approval where applicable. All update attempts are logged with user identity and rationale per the audit/compliance framework. Errors for business rule violations, locked records, or audit holds are returned with actionable remediation.\n\nOn success, the endpoint returns the updated encounter object reflecting all modifications and the new effective state. This operation is critical for accurate, auditable, and legal recordkeeping as detailed in the requirements documentation and schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter to update.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to amend or update on the existing encounter (type, timing, status, provider, clinical notes, etc).","typeName":"IHealthcarePlatformEhrEncounter.IUpdate"},"responseBody":{"description":"The complete, updated EHR encounter reflecting all provided amendments and the current state.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update"},{"specification":"This operation updates an existing EHR encounter for a patient record in the healthcare_platform_ehr_encounters table. Used by authorized clinical staff to correct, amend, or complete encounter details (type, timing, provider, notes, status) for a specific encounterId under a given patientRecordId. It enforces version control, audit trails, and compliance checks, returning updated data for confirmation and downstream workflows.","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"put","summary":"Update details of an existing EHR encounter for a patient record.","description":"This API endpoint allows an authorized user to amend or update an existing EHR encounter for a patient record, identified by patientRecordId and encounterId. The operation references the healthcare_platform_ehr_encounters schema, supporting updates to encounter type, timing, provider assignment, clinical notes, and status. All changes trigger a new version (tracked in EHR versions) and comprehensive audit logging in accordance with business and regulatory policy.\n\nRole-based access controls ensure that only clinicians, nurses, or departmental/organizational leadership can perform modification. Validation logic includes status workflow checks (e.g., completed, locked, in-review), field completeness, and approval where applicable. All update attempts are logged with user identity and rationale per the audit/compliance framework. Errors for business rule violations, locked records, or audit holds are returned with actionable remediation.\n\nOn success, the endpoint returns the updated encounter object reflecting all modifications and the new effective state. This operation is critical for accurate, auditable, and legal recordkeeping as detailed in the requirements documentation and schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter to update.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to amend or update on the existing encounter (type, timing, status, provider, clinical notes, etc).","typeName":"IHealthcarePlatformEhrEncounter.IUpdate"},"responseBody":{"description":"The complete, updated EHR encounter reflecting all provided amendments and the current state.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"nurse","name":"update"},{"specification":"This operation updates an existing EHR encounter for a patient record in the healthcare_platform_ehr_encounters table. Used by authorized clinical staff to correct, amend, or complete encounter details (type, timing, provider, notes, status) for a specific encounterId under a given patientRecordId. It enforces version control, audit trails, and compliance checks, returning updated data for confirmation and downstream workflows.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"put","summary":"Update details of an existing EHR encounter for a patient record.","description":"This API endpoint allows an authorized user to amend or update an existing EHR encounter for a patient record, identified by patientRecordId and encounterId. The operation references the healthcare_platform_ehr_encounters schema, supporting updates to encounter type, timing, provider assignment, clinical notes, and status. All changes trigger a new version (tracked in EHR versions) and comprehensive audit logging in accordance with business and regulatory policy.\n\nRole-based access controls ensure that only clinicians, nurses, or departmental/organizational leadership can perform modification. Validation logic includes status workflow checks (e.g., completed, locked, in-review), field completeness, and approval where applicable. All update attempts are logged with user identity and rationale per the audit/compliance framework. Errors for business rule violations, locked records, or audit holds are returned with actionable remediation.\n\nOn success, the endpoint returns the updated encounter object reflecting all modifications and the new effective state. This operation is critical for accurate, auditable, and legal recordkeeping as detailed in the requirements documentation and schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter to update.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to amend or update on the existing encounter (type, timing, status, provider, clinical notes, etc).","typeName":"IHealthcarePlatformEhrEncounter.IUpdate"},"responseBody":{"description":"The complete, updated EHR encounter reflecting all provided amendments and the current state.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation updates an existing EHR encounter for a patient record in the healthcare_platform_ehr_encounters table. Used by authorized clinical staff to correct, amend, or complete encounter details (type, timing, provider, notes, status) for a specific encounterId under a given patientRecordId. It enforces version control, audit trails, and compliance checks, returning updated data for confirmation and downstream workflows.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}","method":"put","summary":"Update details of an existing EHR encounter for a patient record.","description":"This API endpoint allows an authorized user to amend or update an existing EHR encounter for a patient record, identified by patientRecordId and encounterId. The operation references the healthcare_platform_ehr_encounters schema, supporting updates to encounter type, timing, provider assignment, clinical notes, and status. All changes trigger a new version (tracked in EHR versions) and comprehensive audit logging in accordance with business and regulatory policy.\n\nRole-based access controls ensure that only clinicians, nurses, or departmental/organizational leadership can perform modification. Validation logic includes status workflow checks (e.g., completed, locked, in-review), field completeness, and approval where applicable. All update attempts are logged with user identity and rationale per the audit/compliance framework. Errors for business rule violations, locked records, or audit holds are returned with actionable remediation.\n\nOn success, the endpoint returns the updated encounter object reflecting all modifications and the new effective state. This operation is critical for accurate, auditable, and legal recordkeeping as detailed in the requirements documentation and schema.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record containing the encounter to update.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to amend or update on the existing encounter (type, timing, status, provider, clinical notes, etc).","typeName":"IHealthcarePlatformEhrEncounter.IUpdate"},"responseBody":{"description":"The complete, updated EHR encounter reflecting all provided amendments and the current state.","typeName":"IHealthcarePlatformEhrEncounter"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update"},{"specification":"This operation permanently removes a specific EHR version from a patient's encounter, based on a unique patient record and encounter identifier, along with the EHR version number. It operates on the healthcare_platform_ehr_versions table in the Prisma schema, where EHR version records are append-only snapshots of clinical states within encounters. The operation enforces audit compliance and can only be executed with appropriate authorization. This is a hard delete since soft-delete is not defined for this table in the schema (there is no deleted_at field). Related operations would include retrieving and listing EHR versions. Business rules may require audit trail logging, so deleting should only be allowed in specific compliance or correction scenarios.","description":"This endpoint allows an authorized user to permanently delete a specific EHR version from the healthcare_platform_ehr_versions table, as identified by its parent patient record, encounter, and version number. EHR versions serve as immutable snapshots of patient encounters and are essential for clinical, legal, and audit purposes.\n\nUse of this operation is strictly limited and must adhere to compliance workflows. Only system administrators or designated compliance officers—roles with documented authority—should perform deletions, and action must be logged with full audit trails. Deletion removes the EHR version irrevocably. Normal clinical workflows should not call this operation except in regulatory correction or forensic cases. Business rules dictate that valid patient, encounter, and version number must be supplied. Error handling includes 404 (not found), 403 (insufficient rights), and 409 (conflict if referenced elsewhere).\n\nSecurity policies recommend this endpoint be disabled in production except when justified and formally approved due to the high compliance risk of irreversible EHR data removal.","summary":"Permanently delete a specific EHR version for a patient encounter (hard delete, audit/compliance only).","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}},{"name":"versionNumber","description":"EHR version sequence number within the encounter to delete.","schema":{"type":"integer"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions/{versionNumber}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation lists all EHR versions (snapshots) for a specific patient encounter for audit, rollback, or clinical review purposes. It operates on the healthcare_platform_ehr_versions table in the Prisma schema and returns all immutable records linked to the specified patient record and encounter. It supports complex filtering, sorting, and pagination. Only authorized roles can access full records, with audit logging enforced. This is a read operation, and roles with access include doctors, nurses (for their encounters), and authorized compliance/admin users.","description":"This endpoint allows a secure, paginated, and filterable listing of all EHR version snapshots associated with a particular patient's clinical encounter. It serves the healthcare_platform_ehr_versions table and supports advanced queries, including date filtering, submitted by, and update reason.\n\nSecurity considerations require that requesting users have appropriate role-based access (e.g., doctor for the encounter, nurse with assignment, department head, compliance officer). All access is logged for compliance, and sensitive information is filtered by role scope. Pagination and advanced search parameters are supported in the request body for efficient chart review, legal audits, or clinical investigations.\n\nBusiness logic enforces that only records linked to the provided patient and encounter are included in the result, and error handling covers unauthorized access, not found, or out-of-scope query attempts. Operations related are retrieving a specific version, amending records, and reviewing version history for compliance review.","summary":"List/filter all EHR version snapshots for a patient encounter with paging and access control.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination options for EHR version snapshot listing.","typeName":"IHealthcarePlatformEhrVersion.IRequest"},"responseBody":{"description":"Paginated list of EHR version snapshots for the specified patient encounter.","typeName":"IPageIHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"index","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions","method":"patch","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation lists all EHR versions (snapshots) for a specific patient encounter for audit, rollback, or clinical review purposes. It operates on the healthcare_platform_ehr_versions table in the Prisma schema and returns all immutable records linked to the specified patient record and encounter. It supports complex filtering, sorting, and pagination. Only authorized roles can access full records, with audit logging enforced. This is a read operation, and roles with access include doctors, nurses (for their encounters), and authorized compliance/admin users.","description":"This endpoint allows a secure, paginated, and filterable listing of all EHR version snapshots associated with a particular patient's clinical encounter. It serves the healthcare_platform_ehr_versions table and supports advanced queries, including date filtering, submitted by, and update reason.\n\nSecurity considerations require that requesting users have appropriate role-based access (e.g., doctor for the encounter, nurse with assignment, department head, compliance officer). All access is logged for compliance, and sensitive information is filtered by role scope. Pagination and advanced search parameters are supported in the request body for efficient chart review, legal audits, or clinical investigations.\n\nBusiness logic enforces that only records linked to the provided patient and encounter are included in the result, and error handling covers unauthorized access, not found, or out-of-scope query attempts. Operations related are retrieving a specific version, amending records, and reviewing version history for compliance review.","summary":"List/filter all EHR version snapshots for a patient encounter with paging and access control.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination options for EHR version snapshot listing.","typeName":"IHealthcarePlatformEhrVersion.IRequest"},"responseBody":{"description":"Paginated list of EHR version snapshots for the specified patient encounter.","typeName":"IPageIHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"index","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions","method":"patch","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation lists all EHR versions (snapshots) for a specific patient encounter for audit, rollback, or clinical review purposes. It operates on the healthcare_platform_ehr_versions table in the Prisma schema and returns all immutable records linked to the specified patient record and encounter. It supports complex filtering, sorting, and pagination. Only authorized roles can access full records, with audit logging enforced. This is a read operation, and roles with access include doctors, nurses (for their encounters), and authorized compliance/admin users.","description":"This endpoint allows a secure, paginated, and filterable listing of all EHR version snapshots associated with a particular patient's clinical encounter. It serves the healthcare_platform_ehr_versions table and supports advanced queries, including date filtering, submitted by, and update reason.\n\nSecurity considerations require that requesting users have appropriate role-based access (e.g., doctor for the encounter, nurse with assignment, department head, compliance officer). All access is logged for compliance, and sensitive information is filtered by role scope. Pagination and advanced search parameters are supported in the request body for efficient chart review, legal audits, or clinical investigations.\n\nBusiness logic enforces that only records linked to the provided patient and encounter are included in the result, and error handling covers unauthorized access, not found, or out-of-scope query attempts. Operations related are retrieving a specific version, amending records, and reviewing version history for compliance review.","summary":"List/filter all EHR version snapshots for a patient encounter with paging and access control.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination options for EHR version snapshot listing.","typeName":"IHealthcarePlatformEhrVersion.IRequest"},"responseBody":{"description":"Paginated list of EHR version snapshots for the specified patient encounter.","typeName":"IPageIHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"index","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation lists all EHR versions (snapshots) for a specific patient encounter for audit, rollback, or clinical review purposes. It operates on the healthcare_platform_ehr_versions table in the Prisma schema and returns all immutable records linked to the specified patient record and encounter. It supports complex filtering, sorting, and pagination. Only authorized roles can access full records, with audit logging enforced. This is a read operation, and roles with access include doctors, nurses (for their encounters), and authorized compliance/admin users.","description":"This endpoint allows a secure, paginated, and filterable listing of all EHR version snapshots associated with a particular patient's clinical encounter. It serves the healthcare_platform_ehr_versions table and supports advanced queries, including date filtering, submitted by, and update reason.\n\nSecurity considerations require that requesting users have appropriate role-based access (e.g., doctor for the encounter, nurse with assignment, department head, compliance officer). All access is logged for compliance, and sensitive information is filtered by role scope. Pagination and advanced search parameters are supported in the request body for efficient chart review, legal audits, or clinical investigations.\n\nBusiness logic enforces that only records linked to the provided patient and encounter are included in the result, and error handling covers unauthorized access, not found, or out-of-scope query attempts. Operations related are retrieving a specific version, amending records, and reviewing version history for compliance review.","summary":"List/filter all EHR version snapshots for a patient encounter with paging and access control.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination options for EHR version snapshot listing.","typeName":"IHealthcarePlatformEhrVersion.IRequest"},"responseBody":{"description":"Paginated list of EHR version snapshots for the specified patient encounter.","typeName":"IPageIHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the detailed contents of a single EHR version for a specific patient encounter, based on unique patient record, encounter, and version number identifiers. It uses the healthcare_platform_ehr_versions table, which stores append-only immutable clinical snapshots with all relevant structured medical data. The operation returns the full EHR version record, enabling detailed clinical review, audit, or legal inquiry, subject to authorization and audit logging.","description":"This endpoint enables authorized users to fetch the complete data for an individual EHR version, as identified by patient record ID, encounter ID, and version number. Each EHR version captures point-in-time clinical information and reasoning for updates.\n\nRole-based access control determines the extent of viewable data, with doctors (for their patients/encounters), nurses (within their scope), department heads, and system administrators permitted to view. All retrievals are logged in the audit trail for compliance requirements, and invalid or unauthorized requests are appropriately denied with detailed error messages.\n\nBusiness rules require that all identifiers are valid and present, and attempts to retrieve unlinked or non-existent versions result in 404 errors. Related operations include listing all versions or comparing version histories for patient safety and legal purposes.","summary":"Retrieve a specific EHR version snapshot for a patient encounter by version number.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}},{"name":"versionNumber","description":"EHR version sequence number to retrieve.","schema":{"type":"integer"}}],"requestBody":null,"responseBody":{"description":"Complete EHR version snapshot object for the specified patient encounter/version.","typeName":"IHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"at","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions/{versionNumber}","method":"get","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves the detailed contents of a single EHR version for a specific patient encounter, based on unique patient record, encounter, and version number identifiers. It uses the healthcare_platform_ehr_versions table, which stores append-only immutable clinical snapshots with all relevant structured medical data. The operation returns the full EHR version record, enabling detailed clinical review, audit, or legal inquiry, subject to authorization and audit logging.","description":"This endpoint enables authorized users to fetch the complete data for an individual EHR version, as identified by patient record ID, encounter ID, and version number. Each EHR version captures point-in-time clinical information and reasoning for updates.\n\nRole-based access control determines the extent of viewable data, with doctors (for their patients/encounters), nurses (within their scope), department heads, and system administrators permitted to view. All retrievals are logged in the audit trail for compliance requirements, and invalid or unauthorized requests are appropriately denied with detailed error messages.\n\nBusiness rules require that all identifiers are valid and present, and attempts to retrieve unlinked or non-existent versions result in 404 errors. Related operations include listing all versions or comparing version histories for patient safety and legal purposes.","summary":"Retrieve a specific EHR version snapshot for a patient encounter by version number.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}},{"name":"versionNumber","description":"EHR version sequence number to retrieve.","schema":{"type":"integer"}}],"requestBody":null,"responseBody":{"description":"Complete EHR version snapshot object for the specified patient encounter/version.","typeName":"IHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"at","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions/{versionNumber}","method":"get","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation retrieves the detailed contents of a single EHR version for a specific patient encounter, based on unique patient record, encounter, and version number identifiers. It uses the healthcare_platform_ehr_versions table, which stores append-only immutable clinical snapshots with all relevant structured medical data. The operation returns the full EHR version record, enabling detailed clinical review, audit, or legal inquiry, subject to authorization and audit logging.","description":"This endpoint enables authorized users to fetch the complete data for an individual EHR version, as identified by patient record ID, encounter ID, and version number. Each EHR version captures point-in-time clinical information and reasoning for updates.\n\nRole-based access control determines the extent of viewable data, with doctors (for their patients/encounters), nurses (within their scope), department heads, and system administrators permitted to view. All retrievals are logged in the audit trail for compliance requirements, and invalid or unauthorized requests are appropriately denied with detailed error messages.\n\nBusiness rules require that all identifiers are valid and present, and attempts to retrieve unlinked or non-existent versions result in 404 errors. Related operations include listing all versions or comparing version histories for patient safety and legal purposes.","summary":"Retrieve a specific EHR version snapshot for a patient encounter by version number.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}},{"name":"versionNumber","description":"EHR version sequence number to retrieve.","schema":{"type":"integer"}}],"requestBody":null,"responseBody":{"description":"Complete EHR version snapshot object for the specified patient encounter/version.","typeName":"IHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"at","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions/{versionNumber}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves the detailed contents of a single EHR version for a specific patient encounter, based on unique patient record, encounter, and version number identifiers. It uses the healthcare_platform_ehr_versions table, which stores append-only immutable clinical snapshots with all relevant structured medical data. The operation returns the full EHR version record, enabling detailed clinical review, audit, or legal inquiry, subject to authorization and audit logging.","description":"This endpoint enables authorized users to fetch the complete data for an individual EHR version, as identified by patient record ID, encounter ID, and version number. Each EHR version captures point-in-time clinical information and reasoning for updates.\n\nRole-based access control determines the extent of viewable data, with doctors (for their patients/encounters), nurses (within their scope), department heads, and system administrators permitted to view. All retrievals are logged in the audit trail for compliance requirements, and invalid or unauthorized requests are appropriately denied with detailed error messages.\n\nBusiness rules require that all identifiers are valid and present, and attempts to retrieve unlinked or non-existent versions result in 404 errors. Related operations include listing all versions or comparing version histories for patient safety and legal purposes.","summary":"Retrieve a specific EHR version snapshot for a patient encounter by version number.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient's record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the EHR encounter.","schema":{"type":"string","format":"uuid"}},{"name":"versionNumber","description":"EHR version sequence number to retrieve.","schema":{"type":"integer"}}],"requestBody":null,"responseBody":{"description":"Complete EHR version snapshot object for the specified patient encounter/version.","typeName":"IHealthcarePlatformEhrVersion"},"authorizationRoles":["medicalDoctor","nurse","departmentHead","systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/ehrVersions/{versionNumber}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation provides a filtered, paginated index of record amendments for a given patient record. It queries the healthcare_platform_record_amendments table for all amendments linked to the specified patient record, supporting advanced search, filtering, and pagination across amendment type, status, involved staff, and dates. The operation is critical for audit, compliance, and regulatory review, and incorporates roles and permissions based on requirements from the PatientRecords module. Results include full amendment details, status, type, submitter, reviewer, and supporting audit trail data.","description":"Retrieve a filtered and paginated index of record amendments for a given patient record. This endpoint allows compliance staff, department heads, and clinical roles to audit the lifecycle of all changes, corrections, or regulatory amendments to the patient's medical record.\n\nSecurity considerations require that users have appropriate RBAC permission to view amendment history for the patient. Access is restricted by role and organizational boundaries. All results are filtered to the requesting user's access rights.\n\nThe response structure includes paginated amendment data with amendment metadata (type, status, submitter, rationale, old/new values) and can be expanded by role permissions. Amendments under review, pending approval, or rejected will contain their current status for workflow handling. Error handling distinguishes between not found, not authorized, or query constraint violations. If the patient record or amendments are soft deleted, only appropriate admins will see historic data where compliant.\n\nThis operation aligns with business rules requiring longitudinal traceability and versioned record keeping for all PHI amendments, supporting regulatory audits and clinical workflows.","summary":"Retrieve a paginated index of record amendments for a specific patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to query amendments for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for record amendments linked to the patient record","typeName":"IHealthcarePlatformRecordAmendment.IRequest"},"responseBody":{"description":"A paginated list of record amendment entries matching the filter criteria","typeName":"IPageIHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/recordAmendments","method":"patch"},{"specification":"This operation provides a filtered, paginated index of record amendments for a given patient record. It queries the healthcare_platform_record_amendments table for all amendments linked to the specified patient record, supporting advanced search, filtering, and pagination across amendment type, status, involved staff, and dates. The operation is critical for audit, compliance, and regulatory review, and incorporates roles and permissions based on requirements from the PatientRecords module. Results include full amendment details, status, type, submitter, reviewer, and supporting audit trail data.","description":"Retrieve a filtered and paginated index of record amendments for a given patient record. This endpoint allows compliance staff, department heads, and clinical roles to audit the lifecycle of all changes, corrections, or regulatory amendments to the patient's medical record.\n\nSecurity considerations require that users have appropriate RBAC permission to view amendment history for the patient. Access is restricted by role and organizational boundaries. All results are filtered to the requesting user's access rights.\n\nThe response structure includes paginated amendment data with amendment metadata (type, status, submitter, rationale, old/new values) and can be expanded by role permissions. Amendments under review, pending approval, or rejected will contain their current status for workflow handling. Error handling distinguishes between not found, not authorized, or query constraint violations. If the patient record or amendments are soft deleted, only appropriate admins will see historic data where compliant.\n\nThis operation aligns with business rules requiring longitudinal traceability and versioned record keeping for all PHI amendments, supporting regulatory audits and clinical workflows.","summary":"Retrieve a paginated index of record amendments for a specific patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to query amendments for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for record amendments linked to the patient record","typeName":"IHealthcarePlatformRecordAmendment.IRequest"},"responseBody":{"description":"A paginated list of record amendment entries matching the filter criteria","typeName":"IPageIHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"index","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/recordAmendments","method":"patch"},{"specification":"This operation provides a filtered, paginated index of record amendments for a given patient record. It queries the healthcare_platform_record_amendments table for all amendments linked to the specified patient record, supporting advanced search, filtering, and pagination across amendment type, status, involved staff, and dates. The operation is critical for audit, compliance, and regulatory review, and incorporates roles and permissions based on requirements from the PatientRecords module. Results include full amendment details, status, type, submitter, reviewer, and supporting audit trail data.","description":"Retrieve a filtered and paginated index of record amendments for a given patient record. This endpoint allows compliance staff, department heads, and clinical roles to audit the lifecycle of all changes, corrections, or regulatory amendments to the patient's medical record.\n\nSecurity considerations require that users have appropriate RBAC permission to view amendment history for the patient. Access is restricted by role and organizational boundaries. All results are filtered to the requesting user's access rights.\n\nThe response structure includes paginated amendment data with amendment metadata (type, status, submitter, rationale, old/new values) and can be expanded by role permissions. Amendments under review, pending approval, or rejected will contain their current status for workflow handling. Error handling distinguishes between not found, not authorized, or query constraint violations. If the patient record or amendments are soft deleted, only appropriate admins will see historic data where compliant.\n\nThis operation aligns with business rules requiring longitudinal traceability and versioned record keeping for all PHI amendments, supporting regulatory audits and clinical workflows.","summary":"Retrieve a paginated index of record amendments for a specific patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to query amendments for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for record amendments linked to the patient record","typeName":"IHealthcarePlatformRecordAmendment.IRequest"},"responseBody":{"description":"A paginated list of record amendment entries matching the filter criteria","typeName":"IPageIHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"nurse","name":"index","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/recordAmendments","method":"patch"},{"specification":"This operation provides a filtered, paginated index of record amendments for a given patient record. It queries the healthcare_platform_record_amendments table for all amendments linked to the specified patient record, supporting advanced search, filtering, and pagination across amendment type, status, involved staff, and dates. The operation is critical for audit, compliance, and regulatory review, and incorporates roles and permissions based on requirements from the PatientRecords module. Results include full amendment details, status, type, submitter, reviewer, and supporting audit trail data.","description":"Retrieve a filtered and paginated index of record amendments for a given patient record. This endpoint allows compliance staff, department heads, and clinical roles to audit the lifecycle of all changes, corrections, or regulatory amendments to the patient's medical record.\n\nSecurity considerations require that users have appropriate RBAC permission to view amendment history for the patient. Access is restricted by role and organizational boundaries. All results are filtered to the requesting user's access rights.\n\nThe response structure includes paginated amendment data with amendment metadata (type, status, submitter, rationale, old/new values) and can be expanded by role permissions. Amendments under review, pending approval, or rejected will contain their current status for workflow handling. Error handling distinguishes between not found, not authorized, or query constraint violations. If the patient record or amendments are soft deleted, only appropriate admins will see historic data where compliant.\n\nThis operation aligns with business rules requiring longitudinal traceability and versioned record keeping for all PHI amendments, supporting regulatory audits and clinical workflows.","summary":"Retrieve a paginated index of record amendments for a specific patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to query amendments for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for record amendments linked to the patient record","typeName":"IHealthcarePlatformRecordAmendment.IRequest"},"responseBody":{"description":"A paginated list of record amendment entries matching the filter criteria","typeName":"IPageIHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/recordAmendments","method":"patch"},{"specification":"This operation provides a filtered, paginated index of record amendments for a given patient record. It queries the healthcare_platform_record_amendments table for all amendments linked to the specified patient record, supporting advanced search, filtering, and pagination across amendment type, status, involved staff, and dates. The operation is critical for audit, compliance, and regulatory review, and incorporates roles and permissions based on requirements from the PatientRecords module. Results include full amendment details, status, type, submitter, reviewer, and supporting audit trail data.","description":"Retrieve a filtered and paginated index of record amendments for a given patient record. This endpoint allows compliance staff, department heads, and clinical roles to audit the lifecycle of all changes, corrections, or regulatory amendments to the patient's medical record.\n\nSecurity considerations require that users have appropriate RBAC permission to view amendment history for the patient. Access is restricted by role and organizational boundaries. All results are filtered to the requesting user's access rights.\n\nThe response structure includes paginated amendment data with amendment metadata (type, status, submitter, rationale, old/new values) and can be expanded by role permissions. Amendments under review, pending approval, or rejected will contain their current status for workflow handling. Error handling distinguishes between not found, not authorized, or query constraint violations. If the patient record or amendments are soft deleted, only appropriate admins will see historic data where compliant.\n\nThis operation aligns with business rules requiring longitudinal traceability and versioned record keeping for all PHI amendments, supporting regulatory audits and clinical workflows.","summary":"Retrieve a paginated index of record amendments for a specific patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record to query amendments for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for record amendments linked to the patient record","typeName":"IHealthcarePlatformRecordAmendment.IRequest"},"responseBody":{"description":"A paginated list of record amendment entries matching the filter criteria","typeName":"IPageIHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/recordAmendments","method":"patch"},{"specification":"This operation retrieves the full details of a specific record amendment for a patient record, identified by both the patient record ID and record amendment ID. It queries the healthcare_platform_record_amendments table, enforcing that the amendment is scoped to the specified patient and returns all audit, approval, and content fields. This is required for compliance review, audit investigation, and amendment workflow progressions as described in the PatientRecords schema.","description":"Retrieve full details of a specific record amendment for a patient record. This operation provides clinical, audit, and workflow information required for individual review and regulatory traceability. It exposes amendment metadata (type, rationale, submitter, reviewer, old and new value snapshots, approval status, timestamps, and related encounter), to authorized requesters based on RBAC as configured for audit trail visibility.\n\nAccess is limited by role, organization, and department scope to ensure privacy and compliance, with error responses if the amendment is not found, the record ID does not match the amendment's patient association, or if the user's permissions are insufficient. If the amendment is in a pending or restricted status, additional review markers will be shown depending on reviewer role.\n\nThis operation directly supports business rules for amendment audit trail and workflow compliance, empowering end-to-end regulatory review, and is referenced in record update and compliance review flows.","summary":"Get full details of a specific record amendment on a patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier for the specific record amendment to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full record amendment details, including metadata, submitter, reviewer, approval status, and before/after JSON values","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"get"},{"specification":"This operation retrieves the full details of a specific record amendment for a patient record, identified by both the patient record ID and record amendment ID. It queries the healthcare_platform_record_amendments table, enforcing that the amendment is scoped to the specified patient and returns all audit, approval, and content fields. This is required for compliance review, audit investigation, and amendment workflow progressions as described in the PatientRecords schema.","description":"Retrieve full details of a specific record amendment for a patient record. This operation provides clinical, audit, and workflow information required for individual review and regulatory traceability. It exposes amendment metadata (type, rationale, submitter, reviewer, old and new value snapshots, approval status, timestamps, and related encounter), to authorized requesters based on RBAC as configured for audit trail visibility.\n\nAccess is limited by role, organization, and department scope to ensure privacy and compliance, with error responses if the amendment is not found, the record ID does not match the amendment's patient association, or if the user's permissions are insufficient. If the amendment is in a pending or restricted status, additional review markers will be shown depending on reviewer role.\n\nThis operation directly supports business rules for amendment audit trail and workflow compliance, empowering end-to-end regulatory review, and is referenced in record update and compliance review flows.","summary":"Get full details of a specific record amendment on a patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier for the specific record amendment to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full record amendment details, including metadata, submitter, reviewer, approval status, and before/after JSON values","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"get"},{"specification":"This operation retrieves the full details of a specific record amendment for a patient record, identified by both the patient record ID and record amendment ID. It queries the healthcare_platform_record_amendments table, enforcing that the amendment is scoped to the specified patient and returns all audit, approval, and content fields. This is required for compliance review, audit investigation, and amendment workflow progressions as described in the PatientRecords schema.","description":"Retrieve full details of a specific record amendment for a patient record. This operation provides clinical, audit, and workflow information required for individual review and regulatory traceability. It exposes amendment metadata (type, rationale, submitter, reviewer, old and new value snapshots, approval status, timestamps, and related encounter), to authorized requesters based on RBAC as configured for audit trail visibility.\n\nAccess is limited by role, organization, and department scope to ensure privacy and compliance, with error responses if the amendment is not found, the record ID does not match the amendment's patient association, or if the user's permissions are insufficient. If the amendment is in a pending or restricted status, additional review markers will be shown depending on reviewer role.\n\nThis operation directly supports business rules for amendment audit trail and workflow compliance, empowering end-to-end regulatory review, and is referenced in record update and compliance review flows.","summary":"Get full details of a specific record amendment on a patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier for the specific record amendment to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full record amendment details, including metadata, submitter, reviewer, approval status, and before/after JSON values","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"nurse","name":"at","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"get"},{"specification":"This operation retrieves the full details of a specific record amendment for a patient record, identified by both the patient record ID and record amendment ID. It queries the healthcare_platform_record_amendments table, enforcing that the amendment is scoped to the specified patient and returns all audit, approval, and content fields. This is required for compliance review, audit investigation, and amendment workflow progressions as described in the PatientRecords schema.","description":"Retrieve full details of a specific record amendment for a patient record. This operation provides clinical, audit, and workflow information required for individual review and regulatory traceability. It exposes amendment metadata (type, rationale, submitter, reviewer, old and new value snapshots, approval status, timestamps, and related encounter), to authorized requesters based on RBAC as configured for audit trail visibility.\n\nAccess is limited by role, organization, and department scope to ensure privacy and compliance, with error responses if the amendment is not found, the record ID does not match the amendment's patient association, or if the user's permissions are insufficient. If the amendment is in a pending or restricted status, additional review markers will be shown depending on reviewer role.\n\nThis operation directly supports business rules for amendment audit trail and workflow compliance, empowering end-to-end regulatory review, and is referenced in record update and compliance review flows.","summary":"Get full details of a specific record amendment on a patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier for the specific record amendment to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full record amendment details, including metadata, submitter, reviewer, approval status, and before/after JSON values","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"get"},{"specification":"This operation retrieves the full details of a specific record amendment for a patient record, identified by both the patient record ID and record amendment ID. It queries the healthcare_platform_record_amendments table, enforcing that the amendment is scoped to the specified patient and returns all audit, approval, and content fields. This is required for compliance review, audit investigation, and amendment workflow progressions as described in the PatientRecords schema.","description":"Retrieve full details of a specific record amendment for a patient record. This operation provides clinical, audit, and workflow information required for individual review and regulatory traceability. It exposes amendment metadata (type, rationale, submitter, reviewer, old and new value snapshots, approval status, timestamps, and related encounter), to authorized requesters based on RBAC as configured for audit trail visibility.\n\nAccess is limited by role, organization, and department scope to ensure privacy and compliance, with error responses if the amendment is not found, the record ID does not match the amendment's patient association, or if the user's permissions are insufficient. If the amendment is in a pending or restricted status, additional review markers will be shown depending on reviewer role.\n\nThis operation directly supports business rules for amendment audit trail and workflow compliance, empowering end-to-end regulatory review, and is referenced in record update and compliance review flows.","summary":"Get full details of a specific record amendment on a patient record","parameters":[{"name":"patientRecordId","description":"Unique identifier for the patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier for the specific record amendment to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full record amendment details, including metadata, submitter, reviewer, approval status, and before/after JSON values","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"get"},{"specification":"This operation enables the creation of a new record amendment for a patient record, such as corrections, updates, or regulatory modifications, in compliance with business logic defined in the healthcare_platform_record_amendments schema. It accepts a structured payload defining the amendment, links the new amendment to the patient, and triggers approval workflows if applicable. All fields (type, rationale, old/new values) are validated and a full audit entry is made. Approval, review, and notification flows are initiated by this endpoint according to amendment type and submitter role.","description":"Create a new amendment to a patient record. Clinical staff, nurses, or compliance officers may initiate an amendment when errors, updates, or regulatory requests are identified. The operation requires a comprehensive payload including type, rationale, before/after values, and related encounter or reviewer if necessary.\n\nSecurity enforcement ensures only users with requisite clinical or compliance roles within the organization/department may submit new amendments. Business logic validates amendment feasibility, duplication, and triggers review if required for certain amendment types (e.g., diagnosis, allergy). Soft delete markers on the patient record are checked for compliance.\n\nUpon success, the operation returns the newly created amendment, which reflects current workflow status (pending, approved, rejected), linkage to the patient and potentially to an EHR encounter, and retains full audit traceability. Failures (validation, permission, or constraint errors) will return detailed reasons, especially in regulatory or review-required cases. This endpoint supports the full amendment workflow lifecycle for medical and audit compliance.","summary":"Create a new record amendment for a patient record","parameters":[{"name":"patientRecordId","description":"Target patient record to which the amendment applies","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full amendment creation data, including amendment type, rationale, old/new state, and optionally encounter or reviewer ID","typeName":"IHealthcarePlatformRecordAmendment.ICreate"},"responseBody":{"description":"The created amendment with full metadata, workflow, and audit information","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"nurse","name":"create","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/recordAmendments","method":"post"},{"specification":"This operation enables the creation of a new record amendment for a patient record, such as corrections, updates, or regulatory modifications, in compliance with business logic defined in the healthcare_platform_record_amendments schema. It accepts a structured payload defining the amendment, links the new amendment to the patient, and triggers approval workflows if applicable. All fields (type, rationale, old/new values) are validated and a full audit entry is made. Approval, review, and notification flows are initiated by this endpoint according to amendment type and submitter role.","description":"Create a new amendment to a patient record. Clinical staff, nurses, or compliance officers may initiate an amendment when errors, updates, or regulatory requests are identified. The operation requires a comprehensive payload including type, rationale, before/after values, and related encounter or reviewer if necessary.\n\nSecurity enforcement ensures only users with requisite clinical or compliance roles within the organization/department may submit new amendments. Business logic validates amendment feasibility, duplication, and triggers review if required for certain amendment types (e.g., diagnosis, allergy). Soft delete markers on the patient record are checked for compliance.\n\nUpon success, the operation returns the newly created amendment, which reflects current workflow status (pending, approved, rejected), linkage to the patient and potentially to an EHR encounter, and retains full audit traceability. Failures (validation, permission, or constraint errors) will return detailed reasons, especially in regulatory or review-required cases. This endpoint supports the full amendment workflow lifecycle for medical and audit compliance.","summary":"Create a new record amendment for a patient record","parameters":[{"name":"patientRecordId","description":"Target patient record to which the amendment applies","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full amendment creation data, including amendment type, rationale, old/new state, and optionally encounter or reviewer ID","typeName":"IHealthcarePlatformRecordAmendment.ICreate"},"responseBody":{"description":"The created amendment with full metadata, workflow, and audit information","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/recordAmendments","method":"post"},{"specification":"This operation enables the creation of a new record amendment for a patient record, such as corrections, updates, or regulatory modifications, in compliance with business logic defined in the healthcare_platform_record_amendments schema. It accepts a structured payload defining the amendment, links the new amendment to the patient, and triggers approval workflows if applicable. All fields (type, rationale, old/new values) are validated and a full audit entry is made. Approval, review, and notification flows are initiated by this endpoint according to amendment type and submitter role.","description":"Create a new amendment to a patient record. Clinical staff, nurses, or compliance officers may initiate an amendment when errors, updates, or regulatory requests are identified. The operation requires a comprehensive payload including type, rationale, before/after values, and related encounter or reviewer if necessary.\n\nSecurity enforcement ensures only users with requisite clinical or compliance roles within the organization/department may submit new amendments. Business logic validates amendment feasibility, duplication, and triggers review if required for certain amendment types (e.g., diagnosis, allergy). Soft delete markers on the patient record are checked for compliance.\n\nUpon success, the operation returns the newly created amendment, which reflects current workflow status (pending, approved, rejected), linkage to the patient and potentially to an EHR encounter, and retains full audit traceability. Failures (validation, permission, or constraint errors) will return detailed reasons, especially in regulatory or review-required cases. This endpoint supports the full amendment workflow lifecycle for medical and audit compliance.","summary":"Create a new record amendment for a patient record","parameters":[{"name":"patientRecordId","description":"Target patient record to which the amendment applies","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full amendment creation data, including amendment type, rationale, old/new state, and optionally encounter or reviewer ID","typeName":"IHealthcarePlatformRecordAmendment.ICreate"},"responseBody":{"description":"The created amendment with full metadata, workflow, and audit information","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/recordAmendments","method":"post"},{"specification":"This operation enables the creation of a new record amendment for a patient record, such as corrections, updates, or regulatory modifications, in compliance with business logic defined in the healthcare_platform_record_amendments schema. It accepts a structured payload defining the amendment, links the new amendment to the patient, and triggers approval workflows if applicable. All fields (type, rationale, old/new values) are validated and a full audit entry is made. Approval, review, and notification flows are initiated by this endpoint according to amendment type and submitter role.","description":"Create a new amendment to a patient record. Clinical staff, nurses, or compliance officers may initiate an amendment when errors, updates, or regulatory requests are identified. The operation requires a comprehensive payload including type, rationale, before/after values, and related encounter or reviewer if necessary.\n\nSecurity enforcement ensures only users with requisite clinical or compliance roles within the organization/department may submit new amendments. Business logic validates amendment feasibility, duplication, and triggers review if required for certain amendment types (e.g., diagnosis, allergy). Soft delete markers on the patient record are checked for compliance.\n\nUpon success, the operation returns the newly created amendment, which reflects current workflow status (pending, approved, rejected), linkage to the patient and potentially to an EHR encounter, and retains full audit traceability. Failures (validation, permission, or constraint errors) will return detailed reasons, especially in regulatory or review-required cases. This endpoint supports the full amendment workflow lifecycle for medical and audit compliance.","summary":"Create a new record amendment for a patient record","parameters":[{"name":"patientRecordId","description":"Target patient record to which the amendment applies","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full amendment creation data, including amendment type, rationale, old/new state, and optionally encounter or reviewer ID","typeName":"IHealthcarePlatformRecordAmendment.ICreate"},"responseBody":{"description":"The created amendment with full metadata, workflow, and audit information","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/recordAmendments","method":"post"},{"specification":"This operation updates (modifies) an existing record amendment entry for a specific patient record. It enforces primary key (`recordAmendmentId`), patient (`patientRecordId`), and RBAC constraints. It writes new amendment values, potentially changes the approval status, and logs a complete audit trail. It corresponds to workflows where corrections or review outcomes need to be recorded against the original amendment request in the healthcare_platform_record_amendments table.","description":"Update an existing record amendment for a patient record. Used by reviewers (department heads, compliance staff) to approve, reject, or modify rationale, value, or workflow status of a record amendment. Also supports modification of amendment content where business rules allow, e.g., correction of fields, rationale updates, or reviewer assignment.\n\nAuthorization is strictly enforced by user role and organizational/dept assignment; only permitted roles may update amendment status or edit content after initial creation. Approval workflows are triggered if the amendment requires further review or additional compliance sign-off. Attempts to update amendments for soft-deleted patient records will be checked for regulatory compliance.\n\nResponses confirm updated entity details, workflow status, and audit information. Business rules will prevent modification if amendment is finalized, if the requester is not authorized, or if the update violates compliance logic. Error handling clearly distinguishes between authorization, business rule, and not found errors.","summary":"Update an existing record amendment entry for a patient record","parameters":[{"name":"patientRecordId","description":"Identifier of the linked patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier of the amendment entry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated amendment data, including rationale, new/old value, approval, or reviewer info, as permitted by business rules","typeName":"IHealthcarePlatformRecordAmendment.IUpdate"},"responseBody":{"description":"The updated amendment entry, including workflow and audit fields","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"put"},{"specification":"This operation updates (modifies) an existing record amendment entry for a specific patient record. It enforces primary key (`recordAmendmentId`), patient (`patientRecordId`), and RBAC constraints. It writes new amendment values, potentially changes the approval status, and logs a complete audit trail. It corresponds to workflows where corrections or review outcomes need to be recorded against the original amendment request in the healthcare_platform_record_amendments table.","description":"Update an existing record amendment for a patient record. Used by reviewers (department heads, compliance staff) to approve, reject, or modify rationale, value, or workflow status of a record amendment. Also supports modification of amendment content where business rules allow, e.g., correction of fields, rationale updates, or reviewer assignment.\n\nAuthorization is strictly enforced by user role and organizational/dept assignment; only permitted roles may update amendment status or edit content after initial creation. Approval workflows are triggered if the amendment requires further review or additional compliance sign-off. Attempts to update amendments for soft-deleted patient records will be checked for regulatory compliance.\n\nResponses confirm updated entity details, workflow status, and audit information. Business rules will prevent modification if amendment is finalized, if the requester is not authorized, or if the update violates compliance logic. Error handling clearly distinguishes between authorization, business rule, and not found errors.","summary":"Update an existing record amendment entry for a patient record","parameters":[{"name":"patientRecordId","description":"Identifier of the linked patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier of the amendment entry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated amendment data, including rationale, new/old value, approval, or reviewer info, as permitted by business rules","typeName":"IHealthcarePlatformRecordAmendment.IUpdate"},"responseBody":{"description":"The updated amendment entry, including workflow and audit fields","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"put"},{"specification":"This operation updates (modifies) an existing record amendment entry for a specific patient record. It enforces primary key (`recordAmendmentId`), patient (`patientRecordId`), and RBAC constraints. It writes new amendment values, potentially changes the approval status, and logs a complete audit trail. It corresponds to workflows where corrections or review outcomes need to be recorded against the original amendment request in the healthcare_platform_record_amendments table.","description":"Update an existing record amendment for a patient record. Used by reviewers (department heads, compliance staff) to approve, reject, or modify rationale, value, or workflow status of a record amendment. Also supports modification of amendment content where business rules allow, e.g., correction of fields, rationale updates, or reviewer assignment.\n\nAuthorization is strictly enforced by user role and organizational/dept assignment; only permitted roles may update amendment status or edit content after initial creation. Approval workflows are triggered if the amendment requires further review or additional compliance sign-off. Attempts to update amendments for soft-deleted patient records will be checked for regulatory compliance.\n\nResponses confirm updated entity details, workflow status, and audit information. Business rules will prevent modification if amendment is finalized, if the requester is not authorized, or if the update violates compliance logic. Error handling clearly distinguishes between authorization, business rule, and not found errors.","summary":"Update an existing record amendment entry for a patient record","parameters":[{"name":"patientRecordId","description":"Identifier of the linked patient record","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier of the amendment entry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated amendment data, including rationale, new/old value, approval, or reviewer info, as permitted by business rules","typeName":"IHealthcarePlatformRecordAmendment.IUpdate"},"responseBody":{"description":"The updated amendment entry, including workflow and audit fields","typeName":"IHealthcarePlatformRecordAmendment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"put"},{"specification":"This operation performs a hard delete of a specific amendment record for a patient's medical record. The operation is associated with the healthcare_platform_record_amendments table in the Prisma schema. A unique amendment identified by recordAmendmentId is deleted under a specific patient's record, identified by patientRecordId. Only authorized users may remove amendments, and the operation completely erases the amendment record from the system, as supported by the lack of a soft-delete field in this table. This operation is essential for regulatory workflows where corrections or erroneous data entries need to be removed subject to compliance review.","description":"This endpoint provides deletion capability for amendment records tied to an immutable patient clinical record. It requires both patientRecordId and recordAmendmentId as path parameters. Only users with sufficient admin or compliance privileges are allowed to perform this action, as removing amendment history impacts longitudinal audit trails and regulatory compliance.\n\nThe operation accesses the healthcare_platform_record_amendments table, ensuring referential integrity to the associated patient and encounter. All attempts and results of this operation should be logged in compliance with legal retention policies. An attempt to delete a non-existent or previously deleted recordAmendmentId returns a not-found error.\n\nIf a business or legal hold exists on the parent patient record, or the amendment is required for ongoing audit, the provider implementation must reject the erase and return a clear error to the client. This endpoint is critical for rare, justified removal scenarios such as administrative error and should integrate with broader audit logging workflows.","summary":"Permanently delete a specific record amendment from a patient's medical record (healthcare_platform_record_amendments table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record associated with the amendment (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"recordAmendmentId","description":"Unique identifier of the amendment to be deleted (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/recordAmendments/{recordAmendmentId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of audit log entries associated with a specific patient record. It operates on the healthcare_platform_record_audit_trails table and is essential for compliance, forensic analysis, and traceability of all actions involving the patient’s record. The operation supports advanced filtering, search, and sorting, allowing auditors and compliance officers to fulfill regulatory requirements efficiently.","description":"This endpoint allows authorized users (typically compliance officers, admins, or clinicians with audit privilege) to search and review audit trail entries for a given patient record identified by patientRecordId. It operates on the healthcare_platform_record_audit_trails table.\n\nSearch parameters, pagination, and sorting options can be provided in the request body, following the IHealthcarePlatformRecordAuditTrail.IRequest DTO contract, to enable targeted review of events such as access, updates, lock/unlock, deletions, and emergency overrides. All access to this endpoint should itself be recorded for full traceability.\n\nResults are returned in a paginated format, type IPageIHealthcarePlatformRecordAuditTrail, including event metadata for each entry. Business logic must ensure only users with sufficient privileges and organizational scope may execute this operation, and sensitive details are redacted in accordance with legal audit requirements. Related APIs include single entry lookups and actions on recordAmendments and recordLocks.","summary":"Search and retrieve a filtered, paginated list of audit trail entries for a specific patient record (healthcare_platform_record_audit_trails table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record whose audit trail is being queried (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for filtering patient record audit logs.","typeName":"IHealthcarePlatformRecordAuditTrail.IRequest"},"responseBody":{"description":"Paginated list of audit trail entries matching search criteria.","typeName":"IPageIHealthcarePlatformRecordAuditTrail"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/recordAuditTrails","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the detailed information for a single audit trail entry specific to one patient record. It operates on the healthcare_platform_record_audit_trails table, returning all metadata about the audited action, including actor, action type, before/after state, and event context. This supports forensic audit, compliance reporting, and legal investigation requirements for a healthcare setting.","description":"This endpoint allows authorized administrative or compliance personnel to view details for a single patient-related audit log entry identified by recordAuditTrailId under a given patient record (patientRecordId). The healthcare_platform_record_audit_trails table provides comprehensive, immutable forensic logging of actions (access, update, lock/unlock, etc.) on medical records.\n\nThe endpoint enforces strict permission checks, returning all permitted details about the audited event, supporting legal investigation and security monitoring workflows. If the recordAuditTrailId does not exist or the requesting user lacks sufficient privilege, a not-found or unauthorized error is returned, with all access attempts logged for regulatory compliance. Typical use cases include confirming compliance actions, investigating suspicious events, or generating legal reports.","summary":"Retrieve detailed single audit log entry for a patient record (healthcare_platform_record_audit_trails table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record with the audit trail entry (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"recordAuditTrailId","description":"Unique identifier of the audit trail entry (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specific audit log entry.","typeName":"IHealthcarePlatformRecordAuditTrail"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/recordAuditTrails/{recordAuditTrailId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation enables advanced, paginated search and retrieval of metadata about all medical images (e.g., DICOM, JPEG) associated with a patient’s record. It operates on the healthcare_platform_medical_images table, facilitating review, quality audit, and organization of diagnostic and clinical images per patient. The operation is crucial for clinicians, auditors, and compliance personnel who need a longitudinal view of all imaging attached to the patient's history.","description":"The endpoint provides paginated, filterable search over all medical image records linked to a patient record, as stored in the healthcare_platform_medical_images table. It supports advanced filtering, full-text search, and sorting by attributes such as upload timestamp, image type, or uploadedBy.\n\nRequest parameters are supplied in the request body via the IHealthcarePlatformMedicalImage.IRequest DTO. Users with clinical, admin, or audit roles can retrieve imaging metadata but must have appropriate organizational or departmental authorization—accesses should be fully logged for compliance.\n\nResponse uses IPageIHealthcarePlatformMedicalImage, returning matching image metadata per search criteria. Images themselves are not returned by this endpoint; use resource-specific download endpoints if implemented. The operation is typically used in clinical review, radiology workflows, or regulatory investigation of imaging compliance and data lifecycle.","summary":"Search and retrieve a paginated, filtered list of medical image metadata for a patient's record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record whose medical images are being queried (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for filtering patient-linked medical images.","typeName":"IHealthcarePlatformMedicalImage.IRequest"},"responseBody":{"description":"Paginated list of medical image metadata matching query criteria.","typeName":"IPageIHealthcarePlatformMedicalImage"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/patientRecords/{patientRecordId}/medicalImages","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation fetches a specific medical image associated with a given patient record in the healthcarePlatform system. It targets the healthcare_platform_medical_images table, retrieving detailed metadata, file links, and related clinical context. The API takes as input the identifiers for both the parent patient record and the medical image (UUIDs), ensuring isolation at a per-record and per-image level. Image access is controlled via strict RBAC, patient consent, and audit logging for HIPAA compliance. This operation is intended for authorized healthcare staff, clinical users, or patients with access to their own images.","description":"Fetches the detailed metadata and access URI for a single medical image related to the specified patient record. Medical images may include DICOM, JPEG, or other clinical media files used for diagnosis and care documentation. The response includes image type, upload history, metadata (acquisition, modality), storage URI, and references to the uploading technician and encounter. Audit trails are enforced for every read, supporting regulatory investigation and privacy requirements.\n\nAccess to medical images is governed by the user's role and may also require patient consent verification. Retrieval is logged at the access layer, noting requesting user, time, purpose, and governing organization/department context. Images flagged as sensitive or under a privacy lock are only delivered if policy is satisfied. This operation never delivers image binaries directly, but instead provides a secure URI for authorized viewing/download.\n\nIf the specified medical image does not exist under the patient record, is deleted, or access is denied by policy (e.g., consent revoked, under legal hold), the system returns a policy-appropriate error (404 or 403) and logs the attempt for compliance reporting.\n\nThis operation is key for provider review, multidisciplinary care, external consults, and patient portal access (subject to configuration and privacy). It complements broader record operations (EHR, audit trail) as defined in platform requirements.","summary":"Retrieve a medical image's metadata and access link under a patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier of the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full metadata and secure-access URI for the medical image, plus upload, technical and related context.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"get"},{"specification":"This operation fetches a specific medical image associated with a given patient record in the healthcarePlatform system. It targets the healthcare_platform_medical_images table, retrieving detailed metadata, file links, and related clinical context. The API takes as input the identifiers for both the parent patient record and the medical image (UUIDs), ensuring isolation at a per-record and per-image level. Image access is controlled via strict RBAC, patient consent, and audit logging for HIPAA compliance. This operation is intended for authorized healthcare staff, clinical users, or patients with access to their own images.","description":"Fetches the detailed metadata and access URI for a single medical image related to the specified patient record. Medical images may include DICOM, JPEG, or other clinical media files used for diagnosis and care documentation. The response includes image type, upload history, metadata (acquisition, modality), storage URI, and references to the uploading technician and encounter. Audit trails are enforced for every read, supporting regulatory investigation and privacy requirements.\n\nAccess to medical images is governed by the user's role and may also require patient consent verification. Retrieval is logged at the access layer, noting requesting user, time, purpose, and governing organization/department context. Images flagged as sensitive or under a privacy lock are only delivered if policy is satisfied. This operation never delivers image binaries directly, but instead provides a secure URI for authorized viewing/download.\n\nIf the specified medical image does not exist under the patient record, is deleted, or access is denied by policy (e.g., consent revoked, under legal hold), the system returns a policy-appropriate error (404 or 403) and logs the attempt for compliance reporting.\n\nThis operation is key for provider review, multidisciplinary care, external consults, and patient portal access (subject to configuration and privacy). It complements broader record operations (EHR, audit trail) as defined in platform requirements.","summary":"Retrieve a medical image's metadata and access link under a patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier of the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full metadata and secure-access URI for the medical image, plus upload, technical and related context.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"nurse","name":"at","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"get"},{"specification":"This operation fetches a specific medical image associated with a given patient record in the healthcarePlatform system. It targets the healthcare_platform_medical_images table, retrieving detailed metadata, file links, and related clinical context. The API takes as input the identifiers for both the parent patient record and the medical image (UUIDs), ensuring isolation at a per-record and per-image level. Image access is controlled via strict RBAC, patient consent, and audit logging for HIPAA compliance. This operation is intended for authorized healthcare staff, clinical users, or patients with access to their own images.","description":"Fetches the detailed metadata and access URI for a single medical image related to the specified patient record. Medical images may include DICOM, JPEG, or other clinical media files used for diagnosis and care documentation. The response includes image type, upload history, metadata (acquisition, modality), storage URI, and references to the uploading technician and encounter. Audit trails are enforced for every read, supporting regulatory investigation and privacy requirements.\n\nAccess to medical images is governed by the user's role and may also require patient consent verification. Retrieval is logged at the access layer, noting requesting user, time, purpose, and governing organization/department context. Images flagged as sensitive or under a privacy lock are only delivered if policy is satisfied. This operation never delivers image binaries directly, but instead provides a secure URI for authorized viewing/download.\n\nIf the specified medical image does not exist under the patient record, is deleted, or access is denied by policy (e.g., consent revoked, under legal hold), the system returns a policy-appropriate error (404 or 403) and logs the attempt for compliance reporting.\n\nThis operation is key for provider review, multidisciplinary care, external consults, and patient portal access (subject to configuration and privacy). It complements broader record operations (EHR, audit trail) as defined in platform requirements.","summary":"Retrieve a medical image's metadata and access link under a patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier of the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full metadata and secure-access URI for the medical image, plus upload, technical and related context.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"technician","name":"at","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"get"},{"specification":"This operation fetches a specific medical image associated with a given patient record in the healthcarePlatform system. It targets the healthcare_platform_medical_images table, retrieving detailed metadata, file links, and related clinical context. The API takes as input the identifiers for both the parent patient record and the medical image (UUIDs), ensuring isolation at a per-record and per-image level. Image access is controlled via strict RBAC, patient consent, and audit logging for HIPAA compliance. This operation is intended for authorized healthcare staff, clinical users, or patients with access to their own images.","description":"Fetches the detailed metadata and access URI for a single medical image related to the specified patient record. Medical images may include DICOM, JPEG, or other clinical media files used for diagnosis and care documentation. The response includes image type, upload history, metadata (acquisition, modality), storage URI, and references to the uploading technician and encounter. Audit trails are enforced for every read, supporting regulatory investigation and privacy requirements.\n\nAccess to medical images is governed by the user's role and may also require patient consent verification. Retrieval is logged at the access layer, noting requesting user, time, purpose, and governing organization/department context. Images flagged as sensitive or under a privacy lock are only delivered if policy is satisfied. This operation never delivers image binaries directly, but instead provides a secure URI for authorized viewing/download.\n\nIf the specified medical image does not exist under the patient record, is deleted, or access is denied by policy (e.g., consent revoked, under legal hold), the system returns a policy-appropriate error (404 or 403) and logs the attempt for compliance reporting.\n\nThis operation is key for provider review, multidisciplinary care, external consults, and patient portal access (subject to configuration and privacy). It complements broader record operations (EHR, audit trail) as defined in platform requirements.","summary":"Retrieve a medical image's metadata and access link under a patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier of the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full metadata and secure-access URI for the medical image, plus upload, technical and related context.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"patient","name":"at","path":"/healthcarePlatform/patient/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"get"},{"specification":"This operation allows authorized clinical users (technicians, doctors, nurses, or patients in self-upload scenarios) to add a new medical image to a patient's record. Operating on the healthcare_platform_medical_images table, it requires the patient record's ID and the prescribed image metadata, including a secure URI to the stored media file. Business rules apply for image type validation, link integrity, role-based access, and compliance with audit and consent policies. Uploaded images are referenced in subsequent EHR and clinical workflows.","description":"Creates a new medical image record under the specified patient record, storing metadata (e.g., type, modality, acquisition details), a URI to the uploaded image, and references to the uploading technician and parent EHR encounter. Upon successful creation, the system triggers audit trail entries, optionally notifies relevant care team members, and links the file to the encounter for downstream clinical review.\n\nRBAC restricts this API to healthcare professionals (technician, nurse, doctor) unless patient self-uploads are explicitly allowed by organizational policy. Strict validation ensures the parent patient record exists and is accessible by the uploading user, the uploaded file meets type/format requirements (e.g., DICOM, JPEG), and the storage URI is secure and tamper-proof. All uploads (including self-service) are logged, and privacy/policy flags are applied as relevant.\n\nIn case of validation or policy errors (invalid patient record, file format, permissions, or attempts to upload to a locked/archived record), the system rejects the request and provides actionable error details. Recovery or retry logic is determined by platform business policy.","summary":"Upload a new medical image and associate it to the given patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Metadata and secure file URI for the uploaded medical image.","typeName":"IHealthcarePlatformMedicalImage.ICreate"},"responseBody":{"description":"Full metadata and reference for the newly created medical image entity.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"technician","name":"create","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/medicalImages","method":"post"},{"specification":"This operation allows authorized clinical users (technicians, doctors, nurses, or patients in self-upload scenarios) to add a new medical image to a patient's record. Operating on the healthcare_platform_medical_images table, it requires the patient record's ID and the prescribed image metadata, including a secure URI to the stored media file. Business rules apply for image type validation, link integrity, role-based access, and compliance with audit and consent policies. Uploaded images are referenced in subsequent EHR and clinical workflows.","description":"Creates a new medical image record under the specified patient record, storing metadata (e.g., type, modality, acquisition details), a URI to the uploaded image, and references to the uploading technician and parent EHR encounter. Upon successful creation, the system triggers audit trail entries, optionally notifies relevant care team members, and links the file to the encounter for downstream clinical review.\n\nRBAC restricts this API to healthcare professionals (technician, nurse, doctor) unless patient self-uploads are explicitly allowed by organizational policy. Strict validation ensures the parent patient record exists and is accessible by the uploading user, the uploaded file meets type/format requirements (e.g., DICOM, JPEG), and the storage URI is secure and tamper-proof. All uploads (including self-service) are logged, and privacy/policy flags are applied as relevant.\n\nIn case of validation or policy errors (invalid patient record, file format, permissions, or attempts to upload to a locked/archived record), the system rejects the request and provides actionable error details. Recovery or retry logic is determined by platform business policy.","summary":"Upload a new medical image and associate it to the given patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Metadata and secure file URI for the uploaded medical image.","typeName":"IHealthcarePlatformMedicalImage.ICreate"},"responseBody":{"description":"Full metadata and reference for the newly created medical image entity.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"nurse","name":"create","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/medicalImages","method":"post"},{"specification":"This operation allows authorized clinical users (technicians, doctors, nurses, or patients in self-upload scenarios) to add a new medical image to a patient's record. Operating on the healthcare_platform_medical_images table, it requires the patient record's ID and the prescribed image metadata, including a secure URI to the stored media file. Business rules apply for image type validation, link integrity, role-based access, and compliance with audit and consent policies. Uploaded images are referenced in subsequent EHR and clinical workflows.","description":"Creates a new medical image record under the specified patient record, storing metadata (e.g., type, modality, acquisition details), a URI to the uploaded image, and references to the uploading technician and parent EHR encounter. Upon successful creation, the system triggers audit trail entries, optionally notifies relevant care team members, and links the file to the encounter for downstream clinical review.\n\nRBAC restricts this API to healthcare professionals (technician, nurse, doctor) unless patient self-uploads are explicitly allowed by organizational policy. Strict validation ensures the parent patient record exists and is accessible by the uploading user, the uploaded file meets type/format requirements (e.g., DICOM, JPEG), and the storage URI is secure and tamper-proof. All uploads (including self-service) are logged, and privacy/policy flags are applied as relevant.\n\nIn case of validation or policy errors (invalid patient record, file format, permissions, or attempts to upload to a locked/archived record), the system rejects the request and provides actionable error details. Recovery or retry logic is determined by platform business policy.","summary":"Upload a new medical image and associate it to the given patient record (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Metadata and secure file URI for the uploaded medical image.","typeName":"IHealthcarePlatformMedicalImage.ICreate"},"responseBody":{"description":"Full metadata and reference for the newly created medical image entity.","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/medicalImages","method":"post"},{"specification":"This operation updates an existing medical image's metadata (not the underlying file itself) for a given patient record in the healthcare_platform_medical_images table. It is intended for corrections, metadata enrichment (e.g., image description, clinical context), and reclassification without changing the file data/URI. The user must specify both the patient record and the medical image ID. All changes are subject to audit trails and RBAC enforcement.","description":"Allows authorized users (technicians or healthcare staff) to revise metadata on an already uploaded medical image, such as correcting image type, modality, or annotating clinical context. This does not replace the underlying media file, but updates references, metadata fields, or EHR linkage for improved traceability and analytics.\n\nStrict validation checks are run to guarantee the parent record and image exist, the user has role-based access, and the record/image are not under a legal hold or compliance lock. All updates are recorded in the audit trail, including before/after states and user rationale if required.\n\nEdits to image metadata may be restricted if the corresponding patient record or image is soft-deleted, under privacy restriction, or in compliance investigation. Failed or unauthorized attempts return a clear error and are logged for regulatory monitoring. This API is intended for technical or clinical roles; patient self-service metadata updates are not supported unless future requirements expand this capability.","summary":"Update metadata or classification for a medical image under a patient (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier for the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the medical image. Does not update the file/URI itself, only metadata/classification.","typeName":"IHealthcarePlatformMedicalImage.IUpdate"},"responseBody":{"description":"Updated medical image metadata and references (file details/links unchanged).","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"technician","name":"update","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"put"},{"specification":"This operation updates an existing medical image's metadata (not the underlying file itself) for a given patient record in the healthcare_platform_medical_images table. It is intended for corrections, metadata enrichment (e.g., image description, clinical context), and reclassification without changing the file data/URI. The user must specify both the patient record and the medical image ID. All changes are subject to audit trails and RBAC enforcement.","description":"Allows authorized users (technicians or healthcare staff) to revise metadata on an already uploaded medical image, such as correcting image type, modality, or annotating clinical context. This does not replace the underlying media file, but updates references, metadata fields, or EHR linkage for improved traceability and analytics.\n\nStrict validation checks are run to guarantee the parent record and image exist, the user has role-based access, and the record/image are not under a legal hold or compliance lock. All updates are recorded in the audit trail, including before/after states and user rationale if required.\n\nEdits to image metadata may be restricted if the corresponding patient record or image is soft-deleted, under privacy restriction, or in compliance investigation. Failed or unauthorized attempts return a clear error and are logged for regulatory monitoring. This API is intended for technical or clinical roles; patient self-service metadata updates are not supported unless future requirements expand this capability.","summary":"Update metadata or classification for a medical image under a patient (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier for the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the medical image. Does not update the file/URI itself, only metadata/classification.","typeName":"IHealthcarePlatformMedicalImage.IUpdate"},"responseBody":{"description":"Updated medical image metadata and references (file details/links unchanged).","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"put"},{"specification":"This operation updates an existing medical image's metadata (not the underlying file itself) for a given patient record in the healthcare_platform_medical_images table. It is intended for corrections, metadata enrichment (e.g., image description, clinical context), and reclassification without changing the file data/URI. The user must specify both the patient record and the medical image ID. All changes are subject to audit trails and RBAC enforcement.","description":"Allows authorized users (technicians or healthcare staff) to revise metadata on an already uploaded medical image, such as correcting image type, modality, or annotating clinical context. This does not replace the underlying media file, but updates references, metadata fields, or EHR linkage for improved traceability and analytics.\n\nStrict validation checks are run to guarantee the parent record and image exist, the user has role-based access, and the record/image are not under a legal hold or compliance lock. All updates are recorded in the audit trail, including before/after states and user rationale if required.\n\nEdits to image metadata may be restricted if the corresponding patient record or image is soft-deleted, under privacy restriction, or in compliance investigation. Failed or unauthorized attempts return a clear error and are logged for regulatory monitoring. This API is intended for technical or clinical roles; patient self-service metadata updates are not supported unless future requirements expand this capability.","summary":"Update metadata or classification for a medical image under a patient (healthcare_platform_medical_images table).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier for the target medical image (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the medical image. Does not update the file/URI itself, only metadata/classification.","typeName":"IHealthcarePlatformMedicalImage.IUpdate"},"responseBody":{"description":"Updated medical image metadata and references (file details/links unchanged).","typeName":"IHealthcarePlatformMedicalImage"},"authorizationType":null,"authorizationRole":"nurse","name":"update","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"put"},{"specification":"This operation permanently removes a medical image associated with a patient record from the healthcare_platform_medical_images table. It is designed for image record cleanup, compliance (e.g., patient data erasure), or correcting erroneous uploads. Both the patient record ID and medical image ID must be specified. Permanent deletion is enforced (not soft delete), as the schema does not provide a soft delete field for medical images. Deletion is RBAC-restricted, fully audited, and prohibited if the record or image is under legal/hold or active clinical investigation.","description":"Permanently deletes a specified medical image and its metadata from the system, ensuring that the storage reference is unlinked and the image entity is no longer retrievable via API. As the healthcare_platform_medical_images table lacks a soft-delete column, this operation results in hard deletion, removing the record entirely from the operational system (the file in storage may be subject to separate retention/disposal rules).\n\nOnly authorized roles (technicians, doctors, or org-admins) may perform deletions, and only with appropriate justification (e.g., data correction, duplicate image, user/patient request under legal criteria). All deletions are fully logged and may require rationale as part of the request. Restricted if the parent patient record or referenced image is flagged for legal/compliance hold, is part of an open encounter, or if deletion would violate regulatory or organizational policy.\n\nCalling this API on a non-existent or already deleted image will result in a 404 error. Unauthorized attempts yield a 403 with audit logging. Use this with caution as data is not recoverable. An absence of a response body is expected for successful deletion (HTTP 204).","summary":"Permanently delete a medical image for a patient (hard delete – healthcare_platform_medical_images).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier for the medical image to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"technician","name":"erase","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"delete"},{"specification":"This operation permanently removes a medical image associated with a patient record from the healthcare_platform_medical_images table. It is designed for image record cleanup, compliance (e.g., patient data erasure), or correcting erroneous uploads. Both the patient record ID and medical image ID must be specified. Permanent deletion is enforced (not soft delete), as the schema does not provide a soft delete field for medical images. Deletion is RBAC-restricted, fully audited, and prohibited if the record or image is under legal/hold or active clinical investigation.","description":"Permanently deletes a specified medical image and its metadata from the system, ensuring that the storage reference is unlinked and the image entity is no longer retrievable via API. As the healthcare_platform_medical_images table lacks a soft-delete column, this operation results in hard deletion, removing the record entirely from the operational system (the file in storage may be subject to separate retention/disposal rules).\n\nOnly authorized roles (technicians, doctors, or org-admins) may perform deletions, and only with appropriate justification (e.g., data correction, duplicate image, user/patient request under legal criteria). All deletions are fully logged and may require rationale as part of the request. Restricted if the parent patient record or referenced image is flagged for legal/compliance hold, is part of an open encounter, or if deletion would violate regulatory or organizational policy.\n\nCalling this API on a non-existent or already deleted image will result in a 404 error. Unauthorized attempts yield a 403 with audit logging. Use this with caution as data is not recoverable. An absence of a response body is expected for successful deletion (HTTP 204).","summary":"Permanently delete a medical image for a patient (hard delete – healthcare_platform_medical_images).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the parent patient record (UUID).","schema":{"type":"string","format":"uuid"}},{"name":"medicalImageId","description":"Unique identifier for the medical image to delete (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"medicalDoctor","name":"erase","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/medicalImages/{medicalImageId}","method":"delete"},{"specification":"This operation allows authorized users to search for and retrieve a paginated list of laboratory results associated with a specific patient record and EHR encounter. It operates on the healthcare_platform_lab_results table of the Prisma schema and supports advanced filtering, searching, and sorting of lab test results based on parameters such as test name, result flag, status, time range, or integration provider.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"patch","summary":"Search and retrieve paginated laboratory results for a specific encounter and patient record","description":"This API operation retrieves a filtered, paginated list of laboratory results for a given patient record and related clinical encounter (visit, admission, telemedicine, etc.), leveraging the healthcare_platform_lab_results table as described in the Prisma schema. The user must specify both the patientRecordId and encounterId in the path; both IDs are validated as UUIDs, ensuring correct parent-child relationship and data isolation.\n\nThe request body provides complex search parameters, allowing filtering by test name, result flag (e.g., normal/abnormal/critical), result status (pending, completed), and date/time range of the result, as well as lab integration provider when applicable. Paginated responses include summary fields suitable for list views and navigation to detailed records.\n\nSecurity and authorization checks ensure only properly scoped users are able to view laboratory results for patients within organizations, departments, or assignments as per RBAC definitions. Audit logging is executed for access, and access is denied if the requestor lacks necessary permissions or patient consent. The operation is suitable for dashboards, clinical review screens, or audit purposes.","parameters":[{"name":"patientRecordId","description":"The unique identifier of the patient record for which to retrieve lab results","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"The unique identifier of the EHR encounter linked to the requested lab results","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and filter options for lab result retrieval","typeName":"IHealthcarePlatformLabResult.IRequest"},"responseBody":{"description":"Paginated list of summarized lab result information matching provided filters and search options","typeName":"IPageIHealthcarePlatformLabResult.ISummary"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"index"},{"specification":"This operation allows authorized users to search for and retrieve a paginated list of laboratory results associated with a specific patient record and EHR encounter. It operates on the healthcare_platform_lab_results table of the Prisma schema and supports advanced filtering, searching, and sorting of lab test results based on parameters such as test name, result flag, status, time range, or integration provider.","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"patch","summary":"Search and retrieve paginated laboratory results for a specific encounter and patient record","description":"This API operation retrieves a filtered, paginated list of laboratory results for a given patient record and related clinical encounter (visit, admission, telemedicine, etc.), leveraging the healthcare_platform_lab_results table as described in the Prisma schema. The user must specify both the patientRecordId and encounterId in the path; both IDs are validated as UUIDs, ensuring correct parent-child relationship and data isolation.\n\nThe request body provides complex search parameters, allowing filtering by test name, result flag (e.g., normal/abnormal/critical), result status (pending, completed), and date/time range of the result, as well as lab integration provider when applicable. Paginated responses include summary fields suitable for list views and navigation to detailed records.\n\nSecurity and authorization checks ensure only properly scoped users are able to view laboratory results for patients within organizations, departments, or assignments as per RBAC definitions. Audit logging is executed for access, and access is denied if the requestor lacks necessary permissions or patient consent. The operation is suitable for dashboards, clinical review screens, or audit purposes.","parameters":[{"name":"patientRecordId","description":"The unique identifier of the patient record for which to retrieve lab results","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"The unique identifier of the EHR encounter linked to the requested lab results","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and filter options for lab result retrieval","typeName":"IHealthcarePlatformLabResult.IRequest"},"responseBody":{"description":"Paginated list of summarized lab result information matching provided filters and search options","typeName":"IPageIHealthcarePlatformLabResult.ISummary"},"authorizationType":null,"authorizationRole":"nurse","name":"index"},{"specification":"This operation allows authorized users to search for and retrieve a paginated list of laboratory results associated with a specific patient record and EHR encounter. It operates on the healthcare_platform_lab_results table of the Prisma schema and supports advanced filtering, searching, and sorting of lab test results based on parameters such as test name, result flag, status, time range, or integration provider.","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"patch","summary":"Search and retrieve paginated laboratory results for a specific encounter and patient record","description":"This API operation retrieves a filtered, paginated list of laboratory results for a given patient record and related clinical encounter (visit, admission, telemedicine, etc.), leveraging the healthcare_platform_lab_results table as described in the Prisma schema. The user must specify both the patientRecordId and encounterId in the path; both IDs are validated as UUIDs, ensuring correct parent-child relationship and data isolation.\n\nThe request body provides complex search parameters, allowing filtering by test name, result flag (e.g., normal/abnormal/critical), result status (pending, completed), and date/time range of the result, as well as lab integration provider when applicable. Paginated responses include summary fields suitable for list views and navigation to detailed records.\n\nSecurity and authorization checks ensure only properly scoped users are able to view laboratory results for patients within organizations, departments, or assignments as per RBAC definitions. Audit logging is executed for access, and access is denied if the requestor lacks necessary permissions or patient consent. The operation is suitable for dashboards, clinical review screens, or audit purposes.","parameters":[{"name":"patientRecordId","description":"The unique identifier of the patient record for which to retrieve lab results","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"The unique identifier of the EHR encounter linked to the requested lab results","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and filter options for lab result retrieval","typeName":"IHealthcarePlatformLabResult.IRequest"},"responseBody":{"description":"Paginated list of summarized lab result information matching provided filters and search options","typeName":"IPageIHealthcarePlatformLabResult.ISummary"},"authorizationType":null,"authorizationRole":"technician","name":"index"},{"specification":"This operation allows authorized users to search for and retrieve a paginated list of laboratory results associated with a specific patient record and EHR encounter. It operates on the healthcare_platform_lab_results table of the Prisma schema and supports advanced filtering, searching, and sorting of lab test results based on parameters such as test name, result flag, status, time range, or integration provider.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"patch","summary":"Search and retrieve paginated laboratory results for a specific encounter and patient record","description":"This API operation retrieves a filtered, paginated list of laboratory results for a given patient record and related clinical encounter (visit, admission, telemedicine, etc.), leveraging the healthcare_platform_lab_results table as described in the Prisma schema. The user must specify both the patientRecordId and encounterId in the path; both IDs are validated as UUIDs, ensuring correct parent-child relationship and data isolation.\n\nThe request body provides complex search parameters, allowing filtering by test name, result flag (e.g., normal/abnormal/critical), result status (pending, completed), and date/time range of the result, as well as lab integration provider when applicable. Paginated responses include summary fields suitable for list views and navigation to detailed records.\n\nSecurity and authorization checks ensure only properly scoped users are able to view laboratory results for patients within organizations, departments, or assignments as per RBAC definitions. Audit logging is executed for access, and access is denied if the requestor lacks necessary permissions or patient consent. The operation is suitable for dashboards, clinical review screens, or audit purposes.","parameters":[{"name":"patientRecordId","description":"The unique identifier of the patient record for which to retrieve lab results","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"The unique identifier of the EHR encounter linked to the requested lab results","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and filter options for lab result retrieval","typeName":"IHealthcarePlatformLabResult.IRequest"},"responseBody":{"description":"Paginated list of summarized lab result information matching provided filters and search options","typeName":"IPageIHealthcarePlatformLabResult.ISummary"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index"},{"specification":"This operation allows authorized users to search for and retrieve a paginated list of laboratory results associated with a specific patient record and EHR encounter. It operates on the healthcare_platform_lab_results table of the Prisma schema and supports advanced filtering, searching, and sorting of lab test results based on parameters such as test name, result flag, status, time range, or integration provider.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"patch","summary":"Search and retrieve paginated laboratory results for a specific encounter and patient record","description":"This API operation retrieves a filtered, paginated list of laboratory results for a given patient record and related clinical encounter (visit, admission, telemedicine, etc.), leveraging the healthcare_platform_lab_results table as described in the Prisma schema. The user must specify both the patientRecordId and encounterId in the path; both IDs are validated as UUIDs, ensuring correct parent-child relationship and data isolation.\n\nThe request body provides complex search parameters, allowing filtering by test name, result flag (e.g., normal/abnormal/critical), result status (pending, completed), and date/time range of the result, as well as lab integration provider when applicable. Paginated responses include summary fields suitable for list views and navigation to detailed records.\n\nSecurity and authorization checks ensure only properly scoped users are able to view laboratory results for patients within organizations, departments, or assignments as per RBAC definitions. Audit logging is executed for access, and access is denied if the requestor lacks necessary permissions or patient consent. The operation is suitable for dashboards, clinical review screens, or audit purposes.","parameters":[{"name":"patientRecordId","description":"The unique identifier of the patient record for which to retrieve lab results","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"The unique identifier of the EHR encounter linked to the requested lab results","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and filter options for lab result retrieval","typeName":"IHealthcarePlatformLabResult.IRequest"},"responseBody":{"description":"Paginated list of summarized lab result information matching provided filters and search options","typeName":"IPageIHealthcarePlatformLabResult.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves the detailed laboratory result specified by its unique identifier for a particular patient record and EHR encounter. The associated entity in the Prisma schema is healthcare_platform_lab_results. This endpoint is used to view the full structured results, status, flag, interpretation, and integration details essential for clinical review, investigation, or audits.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"get","summary":"Retrieve a detailed laboratory result by ID for a given patient record and encounter","description":"This API operation returns the full detail of a laboratory result entity, using the healthcare_platform_lab_results table, as indicated by the labResultId path parameter. The patientRecordId and encounterId ensure proper scoping and data isolation. The lab result includes metadata such as test name, result values, clinical flags (normal/abnormal/critical), integration/provenance information, and all structured result fields as per the schema definition.\n\nAuthorization checks guarantee only users with appropriate clinical, technical, or department-level roles may access this sensitive result, and audit logs are maintained for every access event. If the user does not have permission, the operation will return an access denied response. Security and compliance mechanisms are enforced according to the RBAC and record privacy logic.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the parent patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the parent EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete laboratory result detail for the specified labResultId","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at"},{"specification":"This operation retrieves the detailed laboratory result specified by its unique identifier for a particular patient record and EHR encounter. The associated entity in the Prisma schema is healthcare_platform_lab_results. This endpoint is used to view the full structured results, status, flag, interpretation, and integration details essential for clinical review, investigation, or audits.","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"get","summary":"Retrieve a detailed laboratory result by ID for a given patient record and encounter","description":"This API operation returns the full detail of a laboratory result entity, using the healthcare_platform_lab_results table, as indicated by the labResultId path parameter. The patientRecordId and encounterId ensure proper scoping and data isolation. The lab result includes metadata such as test name, result values, clinical flags (normal/abnormal/critical), integration/provenance information, and all structured result fields as per the schema definition.\n\nAuthorization checks guarantee only users with appropriate clinical, technical, or department-level roles may access this sensitive result, and audit logs are maintained for every access event. If the user does not have permission, the operation will return an access denied response. Security and compliance mechanisms are enforced according to the RBAC and record privacy logic.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the parent patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the parent EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete laboratory result detail for the specified labResultId","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"nurse","name":"at"},{"specification":"This operation retrieves the detailed laboratory result specified by its unique identifier for a particular patient record and EHR encounter. The associated entity in the Prisma schema is healthcare_platform_lab_results. This endpoint is used to view the full structured results, status, flag, interpretation, and integration details essential for clinical review, investigation, or audits.","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"get","summary":"Retrieve a detailed laboratory result by ID for a given patient record and encounter","description":"This API operation returns the full detail of a laboratory result entity, using the healthcare_platform_lab_results table, as indicated by the labResultId path parameter. The patientRecordId and encounterId ensure proper scoping and data isolation. The lab result includes metadata such as test name, result values, clinical flags (normal/abnormal/critical), integration/provenance information, and all structured result fields as per the schema definition.\n\nAuthorization checks guarantee only users with appropriate clinical, technical, or department-level roles may access this sensitive result, and audit logs are maintained for every access event. If the user does not have permission, the operation will return an access denied response. Security and compliance mechanisms are enforced according to the RBAC and record privacy logic.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the parent patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the parent EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete laboratory result detail for the specified labResultId","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"technician","name":"at"},{"specification":"This operation retrieves the detailed laboratory result specified by its unique identifier for a particular patient record and EHR encounter. The associated entity in the Prisma schema is healthcare_platform_lab_results. This endpoint is used to view the full structured results, status, flag, interpretation, and integration details essential for clinical review, investigation, or audits.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"get","summary":"Retrieve a detailed laboratory result by ID for a given patient record and encounter","description":"This API operation returns the full detail of a laboratory result entity, using the healthcare_platform_lab_results table, as indicated by the labResultId path parameter. The patientRecordId and encounterId ensure proper scoping and data isolation. The lab result includes metadata such as test name, result values, clinical flags (normal/abnormal/critical), integration/provenance information, and all structured result fields as per the schema definition.\n\nAuthorization checks guarantee only users with appropriate clinical, technical, or department-level roles may access this sensitive result, and audit logs are maintained for every access event. If the user does not have permission, the operation will return an access denied response. Security and compliance mechanisms are enforced according to the RBAC and record privacy logic.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the parent patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the parent EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete laboratory result detail for the specified labResultId","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at"},{"specification":"This operation retrieves the detailed laboratory result specified by its unique identifier for a particular patient record and EHR encounter. The associated entity in the Prisma schema is healthcare_platform_lab_results. This endpoint is used to view the full structured results, status, flag, interpretation, and integration details essential for clinical review, investigation, or audits.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"get","summary":"Retrieve a detailed laboratory result by ID for a given patient record and encounter","description":"This API operation returns the full detail of a laboratory result entity, using the healthcare_platform_lab_results table, as indicated by the labResultId path parameter. The patientRecordId and encounterId ensure proper scoping and data isolation. The lab result includes metadata such as test name, result values, clinical flags (normal/abnormal/critical), integration/provenance information, and all structured result fields as per the schema definition.\n\nAuthorization checks guarantee only users with appropriate clinical, technical, or department-level roles may access this sensitive result, and audit logs are maintained for every access event. If the user does not have permission, the operation will return an access denied response. Security and compliance mechanisms are enforced according to the RBAC and record privacy logic.","parameters":[{"name":"patientRecordId","description":"Unique identifier for the parent patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier for the parent EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete laboratory result detail for the specified labResultId","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation enables authorized users (such as clinical or technical staff) to create a new laboratory result within a specified patient record and EHR encounter. The API creates a record in the healthcare_platform_lab_results table, representing the arrival of a new lab result and storing full test metadata, values, flags, and linkage to the lab provider (integration).","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"post","summary":"Create a new laboratory result for a specific encounter and patient record","description":"This endpoint allows for the creation of a new lab result record in the healthcare_platform_lab_results table for a given patient record and clinical encounter. Both patientRecordId and encounterId path parameters must be provided and are validated as UUIDs, ensuring accurate clinical linkage.\n\nOnly users with clinical, technical, or administrative authority (as defined by RBAC and the business logic) may submit new lab results. Lab results may arrive via manual data entry or API-driven integration with external laboratory information systems. The request body provides all necessary fields, including test identifiers, result values, result flags, lab provider, and relevant result and status metadata from the schema. Validation and business rules enforce that the encounter and patient record exist and are active, and that laboratory integration rules are followed. Audit logs and compliance workflows are triggered on creation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record for which to create the lab result","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the encounter for which to create the lab result","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full data required to create a new laboratory result record","typeName":"IHealthcarePlatformLabResult.ICreate"},"responseBody":{"description":"Complete laboratory result entity as created, including all relevant metadata and test data","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"technician","name":"create"},{"specification":"This operation enables authorized users (such as clinical or technical staff) to create a new laboratory result within a specified patient record and EHR encounter. The API creates a record in the healthcare_platform_lab_results table, representing the arrival of a new lab result and storing full test metadata, values, flags, and linkage to the lab provider (integration).","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"post","summary":"Create a new laboratory result for a specific encounter and patient record","description":"This endpoint allows for the creation of a new lab result record in the healthcare_platform_lab_results table for a given patient record and clinical encounter. Both patientRecordId and encounterId path parameters must be provided and are validated as UUIDs, ensuring accurate clinical linkage.\n\nOnly users with clinical, technical, or administrative authority (as defined by RBAC and the business logic) may submit new lab results. Lab results may arrive via manual data entry or API-driven integration with external laboratory information systems. The request body provides all necessary fields, including test identifiers, result values, result flags, lab provider, and relevant result and status metadata from the schema. Validation and business rules enforce that the encounter and patient record exist and are active, and that laboratory integration rules are followed. Audit logs and compliance workflows are triggered on creation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record for which to create the lab result","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the encounter for which to create the lab result","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full data required to create a new laboratory result record","typeName":"IHealthcarePlatformLabResult.ICreate"},"responseBody":{"description":"Complete laboratory result entity as created, including all relevant metadata and test data","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create"},{"specification":"This operation enables authorized users (such as clinical or technical staff) to create a new laboratory result within a specified patient record and EHR encounter. The API creates a record in the healthcare_platform_lab_results table, representing the arrival of a new lab result and storing full test metadata, values, flags, and linkage to the lab provider (integration).","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"post","summary":"Create a new laboratory result for a specific encounter and patient record","description":"This endpoint allows for the creation of a new lab result record in the healthcare_platform_lab_results table for a given patient record and clinical encounter. Both patientRecordId and encounterId path parameters must be provided and are validated as UUIDs, ensuring accurate clinical linkage.\n\nOnly users with clinical, technical, or administrative authority (as defined by RBAC and the business logic) may submit new lab results. Lab results may arrive via manual data entry or API-driven integration with external laboratory information systems. The request body provides all necessary fields, including test identifiers, result values, result flags, lab provider, and relevant result and status metadata from the schema. Validation and business rules enforce that the encounter and patient record exist and are active, and that laboratory integration rules are followed. Audit logs and compliance workflows are triggered on creation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record for which to create the lab result","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the encounter for which to create the lab result","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full data required to create a new laboratory result record","typeName":"IHealthcarePlatformLabResult.ICreate"},"responseBody":{"description":"Complete laboratory result entity as created, including all relevant metadata and test data","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create"},{"specification":"This operation enables authorized users (such as clinical or technical staff) to create a new laboratory result within a specified patient record and EHR encounter. The API creates a record in the healthcare_platform_lab_results table, representing the arrival of a new lab result and storing full test metadata, values, flags, and linkage to the lab provider (integration).","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults","method":"post","summary":"Create a new laboratory result for a specific encounter and patient record","description":"This endpoint allows for the creation of a new lab result record in the healthcare_platform_lab_results table for a given patient record and clinical encounter. Both patientRecordId and encounterId path parameters must be provided and are validated as UUIDs, ensuring accurate clinical linkage.\n\nOnly users with clinical, technical, or administrative authority (as defined by RBAC and the business logic) may submit new lab results. Lab results may arrive via manual data entry or API-driven integration with external laboratory information systems. The request body provides all necessary fields, including test identifiers, result values, result flags, lab provider, and relevant result and status metadata from the schema. Validation and business rules enforce that the encounter and patient record exist and are active, and that laboratory integration rules are followed. Audit logs and compliance workflows are triggered on creation.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record for which to create the lab result","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the encounter for which to create the lab result","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Full data required to create a new laboratory result record","typeName":"IHealthcarePlatformLabResult.ICreate"},"responseBody":{"description":"Complete laboratory result entity as created, including all relevant metadata and test data","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing laboratory result entity identified by labResultId for a specific patient record and EHR encounter. It modifies fields such as result values, flags, or integration metadata in the healthcare_platform_lab_results table. Used to correct, annotate, or revise lab results for clinical or compliance reasons, enforcing RBAC-based access and audit policy.","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"put","summary":"Update an existing laboratory result for a patient record and encounter","description":"This endpoint applies to the healthcare_platform_lab_results entity and allows authorized users to update the details of a laboratory result previously recorded for a specific patient and clinical encounter. The operation requires valid UUIDs for patientRecordId, encounterId, and labResultId, ensuring the correct entity context.\n\nThe request body provides all fields eligible for update, including changes to result values, flags, outcome status, and attached lab integration details, as specified in the schema. Authorization controls designate only clinical, technical, or supervisory staff to perform updates, and strict audit logging records each modification. Validation ensures that modifications do not violate workflow locks (e.g., finalized results may be read-only), that the patient and encounter exist and are active, and that updates are appropriately attributed for compliance.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields and values to update in the target laboratory result","typeName":"IHealthcarePlatformLabResult.IUpdate"},"responseBody":{"description":"Updated laboratory result entity reflecting the modifications performed","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update"},{"specification":"This operation updates an existing laboratory result entity identified by labResultId for a specific patient record and EHR encounter. It modifies fields such as result values, flags, or integration metadata in the healthcare_platform_lab_results table. Used to correct, annotate, or revise lab results for clinical or compliance reasons, enforcing RBAC-based access and audit policy.","path":"/healthcarePlatform/technician/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"put","summary":"Update an existing laboratory result for a patient record and encounter","description":"This endpoint applies to the healthcare_platform_lab_results entity and allows authorized users to update the details of a laboratory result previously recorded for a specific patient and clinical encounter. The operation requires valid UUIDs for patientRecordId, encounterId, and labResultId, ensuring the correct entity context.\n\nThe request body provides all fields eligible for update, including changes to result values, flags, outcome status, and attached lab integration details, as specified in the schema. Authorization controls designate only clinical, technical, or supervisory staff to perform updates, and strict audit logging records each modification. Validation ensures that modifications do not violate workflow locks (e.g., finalized results may be read-only), that the patient and encounter exist and are active, and that updates are appropriately attributed for compliance.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields and values to update in the target laboratory result","typeName":"IHealthcarePlatformLabResult.IUpdate"},"responseBody":{"description":"Updated laboratory result entity reflecting the modifications performed","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"technician","name":"update"},{"specification":"This operation updates an existing laboratory result entity identified by labResultId for a specific patient record and EHR encounter. It modifies fields such as result values, flags, or integration metadata in the healthcare_platform_lab_results table. Used to correct, annotate, or revise lab results for clinical or compliance reasons, enforcing RBAC-based access and audit policy.","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"put","summary":"Update an existing laboratory result for a patient record and encounter","description":"This endpoint applies to the healthcare_platform_lab_results entity and allows authorized users to update the details of a laboratory result previously recorded for a specific patient and clinical encounter. The operation requires valid UUIDs for patientRecordId, encounterId, and labResultId, ensuring the correct entity context.\n\nThe request body provides all fields eligible for update, including changes to result values, flags, outcome status, and attached lab integration details, as specified in the schema. Authorization controls designate only clinical, technical, or supervisory staff to perform updates, and strict audit logging records each modification. Validation ensures that modifications do not violate workflow locks (e.g., finalized results may be read-only), that the patient and encounter exist and are active, and that updates are appropriately attributed for compliance.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields and values to update in the target laboratory result","typeName":"IHealthcarePlatformLabResult.IUpdate"},"responseBody":{"description":"Updated laboratory result entity reflecting the modifications performed","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update"},{"specification":"This operation updates an existing laboratory result entity identified by labResultId for a specific patient record and EHR encounter. It modifies fields such as result values, flags, or integration metadata in the healthcare_platform_lab_results table. Used to correct, annotate, or revise lab results for clinical or compliance reasons, enforcing RBAC-based access and audit policy.","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"put","summary":"Update an existing laboratory result for a patient record and encounter","description":"This endpoint applies to the healthcare_platform_lab_results entity and allows authorized users to update the details of a laboratory result previously recorded for a specific patient and clinical encounter. The operation requires valid UUIDs for patientRecordId, encounterId, and labResultId, ensuring the correct entity context.\n\nThe request body provides all fields eligible for update, including changes to result values, flags, outcome status, and attached lab integration details, as specified in the schema. Authorization controls designate only clinical, technical, or supervisory staff to perform updates, and strict audit logging records each modification. Validation ensures that modifications do not violate workflow locks (e.g., finalized results may be read-only), that the patient and encounter exist and are active, and that updates are appropriately attributed for compliance.","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the EHR encounter","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Unique identifier of the laboratory result to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields and values to update in the target laboratory result","typeName":"IHealthcarePlatformLabResult.IUpdate"},"responseBody":{"description":"Updated laboratory result entity reflecting the modifications performed","typeName":"IHealthcarePlatformLabResult"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation deletes a specific lab result associated with an encounter in a patient's clinical record. It acts upon the healthcare_platform_lab_results table, which holds clinical laboratory results linked to EHR encounters. This hard-deletes the row, as there is no soft-delete column present for this entity, removing compliance and data analysis access. Strict audit and compliance logging must precede this action due to regulations on PHI and laboratory data integrity. Only authorized administrative or clinical staff are permitted to perform deletions per compliance workflow requiring audit entry and possible legal justification.\n\nSecurity and workflow: Only users with the appropriate audit-logged administrative/clinical privileges can perform permanent deletion due to its irreversible nature. Audit trails must be updated to reflect such actions. All deletions are subject to legal hold and regulatory/safety constraints. The operation will fail if the target lab result does not exist, is already deleted, or is restricted by compliance hold.\n\nParameters map directly to path: patientRecordId, encounterId, labResultId - all must be valid UUIDs referencing existing records in the respective tables.","description":"Deletes a specific clinical laboratory result for a given encounter within a patient record, permanently removing it from the database and making it unavailable for future access, analytics, or compliance reporting.\n\nThis is a permanent operation which does not support soft-deletion, and therefore must be tightly controlled with proper audit logging. If the record is under legal hold or currently referenced in an open compliance investigation, the operation will fail. Permissions must be restricted to users with explicit administrative or clinical delete privileges, and all actions must be appended to the healthcare_platform_record_audit_trails for PHI lifecycle tracking.\n\nRelated APIs: retrieval and search endpoints for lab results, audit log creation endpoints, and compliance/legal hold enforcement APIs.\n\nError handling: returns not found if the resource is missing, and forbidden if the user lacks appropriate permissions or the record is locked for compliance retention. All errors must be logged for audit purposes.","summary":"Permanently deletes a laboratory result from a patient's encounter (healthcare_platform_lab_results)","parameters":[{"name":"patientRecordId","description":"Target patient's record ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Target EHR encounter ID","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Lab result UUID to hard-delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin","departmentHead"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation deletes a specific lab result associated with an encounter in a patient's clinical record. It acts upon the healthcare_platform_lab_results table, which holds clinical laboratory results linked to EHR encounters. This hard-deletes the row, as there is no soft-delete column present for this entity, removing compliance and data analysis access. Strict audit and compliance logging must precede this action due to regulations on PHI and laboratory data integrity. Only authorized administrative or clinical staff are permitted to perform deletions per compliance workflow requiring audit entry and possible legal justification.\n\nSecurity and workflow: Only users with the appropriate audit-logged administrative/clinical privileges can perform permanent deletion due to its irreversible nature. Audit trails must be updated to reflect such actions. All deletions are subject to legal hold and regulatory/safety constraints. The operation will fail if the target lab result does not exist, is already deleted, or is restricted by compliance hold.\n\nParameters map directly to path: patientRecordId, encounterId, labResultId - all must be valid UUIDs referencing existing records in the respective tables.","description":"Deletes a specific clinical laboratory result for a given encounter within a patient record, permanently removing it from the database and making it unavailable for future access, analytics, or compliance reporting.\n\nThis is a permanent operation which does not support soft-deletion, and therefore must be tightly controlled with proper audit logging. If the record is under legal hold or currently referenced in an open compliance investigation, the operation will fail. Permissions must be restricted to users with explicit administrative or clinical delete privileges, and all actions must be appended to the healthcare_platform_record_audit_trails for PHI lifecycle tracking.\n\nRelated APIs: retrieval and search endpoints for lab results, audit log creation endpoints, and compliance/legal hold enforcement APIs.\n\nError handling: returns not found if the resource is missing, and forbidden if the user lacks appropriate permissions or the record is locked for compliance retention. All errors must be logged for audit purposes.","summary":"Permanently deletes a laboratory result from a patient's encounter (healthcare_platform_lab_results)","parameters":[{"name":"patientRecordId","description":"Target patient's record ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Target EHR encounter ID","schema":{"type":"string","format":"uuid"}},{"name":"labResultId","description":"Lab result UUID to hard-delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin","departmentHead"],"name":"erase","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/labResults/{labResultId}","method":"delete","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of vitals recorded by nursing staff or clinicians during a patient's clinical encounter. This references the healthcare_platform_vitals table, which contains discrete vital sign entries (temperature, pulse, blood pressure, etc.) attached to a specific EHR encounter. Permits advanced searching and sorting by vital type, value, measurement timestamp, and nurse/clinician. The operation supports search criteria and pagination in the request body and returns a structured page of vital records.\n\nSecurity: Roles such as medicalDoctor, nurse, and departmentHead are allowed subject to organizational scope. All responses comply with PHI access logging requirements. Records reflect entries active as of query time (excluding deleted/retired). Sensitive values are filtered by role.\n\nThis endpoint is essential for trending, alerting, and analytics on patient vitals during a given encounter—crucial for clinical safety and reporting. All accesses are auditable for HIPAA compliance.","description":"Retrieves a filtered and paginated list of vital sign entries for a patient encounter, allowing clinicians and staff to search, sort, and analyze vital data by type, value, measurement timestamp, and recording nurse.\n\nThe request body supports detailed filtering and complex searches, with options such as measurement intervals, value ranges, and vital type specificity. The response includes paginated vital entry data, and role-based filtering is applied to ensure organizational/departmental boundaries are respected.\n\nSecurity: Only users in care roles (medical doctor, nurse, department head) with organizational context are allowed access. All data retrievals are recorded in audit logs for compliance and incident review.\n\nError handling includes forbidden for lack of privileges, not found for invalid encounter or record IDs, and paginated empty results when no vitals match the criteria.","summary":"Search and retrieve a paginated, filterable list of patient vital sign entries for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Target patient record's ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID, parent to vitals","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for vitals retrieval in the encounter context","typeName":"IHealthcarePlatformVital.IRequest"},"responseBody":{"description":"Paginated list of vital entries (with metadata) matching search criteria for the encounter","typeName":"IPageIHealthcarePlatformVital"},"authorizationRoles":["medicalDoctor","nurse","departmentHead"],"name":"index","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals","method":"patch","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of vitals recorded by nursing staff or clinicians during a patient's clinical encounter. This references the healthcare_platform_vitals table, which contains discrete vital sign entries (temperature, pulse, blood pressure, etc.) attached to a specific EHR encounter. Permits advanced searching and sorting by vital type, value, measurement timestamp, and nurse/clinician. The operation supports search criteria and pagination in the request body and returns a structured page of vital records.\n\nSecurity: Roles such as medicalDoctor, nurse, and departmentHead are allowed subject to organizational scope. All responses comply with PHI access logging requirements. Records reflect entries active as of query time (excluding deleted/retired). Sensitive values are filtered by role.\n\nThis endpoint is essential for trending, alerting, and analytics on patient vitals during a given encounter—crucial for clinical safety and reporting. All accesses are auditable for HIPAA compliance.","description":"Retrieves a filtered and paginated list of vital sign entries for a patient encounter, allowing clinicians and staff to search, sort, and analyze vital data by type, value, measurement timestamp, and recording nurse.\n\nThe request body supports detailed filtering and complex searches, with options such as measurement intervals, value ranges, and vital type specificity. The response includes paginated vital entry data, and role-based filtering is applied to ensure organizational/departmental boundaries are respected.\n\nSecurity: Only users in care roles (medical doctor, nurse, department head) with organizational context are allowed access. All data retrievals are recorded in audit logs for compliance and incident review.\n\nError handling includes forbidden for lack of privileges, not found for invalid encounter or record IDs, and paginated empty results when no vitals match the criteria.","summary":"Search and retrieve a paginated, filterable list of patient vital sign entries for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Target patient record's ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID, parent to vitals","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for vitals retrieval in the encounter context","typeName":"IHealthcarePlatformVital.IRequest"},"responseBody":{"description":"Paginated list of vital entries (with metadata) matching search criteria for the encounter","typeName":"IPageIHealthcarePlatformVital"},"authorizationRoles":["medicalDoctor","nurse","departmentHead"],"name":"index","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals","method":"patch","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of vitals recorded by nursing staff or clinicians during a patient's clinical encounter. This references the healthcare_platform_vitals table, which contains discrete vital sign entries (temperature, pulse, blood pressure, etc.) attached to a specific EHR encounter. Permits advanced searching and sorting by vital type, value, measurement timestamp, and nurse/clinician. The operation supports search criteria and pagination in the request body and returns a structured page of vital records.\n\nSecurity: Roles such as medicalDoctor, nurse, and departmentHead are allowed subject to organizational scope. All responses comply with PHI access logging requirements. Records reflect entries active as of query time (excluding deleted/retired). Sensitive values are filtered by role.\n\nThis endpoint is essential for trending, alerting, and analytics on patient vitals during a given encounter—crucial for clinical safety and reporting. All accesses are auditable for HIPAA compliance.","description":"Retrieves a filtered and paginated list of vital sign entries for a patient encounter, allowing clinicians and staff to search, sort, and analyze vital data by type, value, measurement timestamp, and recording nurse.\n\nThe request body supports detailed filtering and complex searches, with options such as measurement intervals, value ranges, and vital type specificity. The response includes paginated vital entry data, and role-based filtering is applied to ensure organizational/departmental boundaries are respected.\n\nSecurity: Only users in care roles (medical doctor, nurse, department head) with organizational context are allowed access. All data retrievals are recorded in audit logs for compliance and incident review.\n\nError handling includes forbidden for lack of privileges, not found for invalid encounter or record IDs, and paginated empty results when no vitals match the criteria.","summary":"Search and retrieve a paginated, filterable list of patient vital sign entries for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Target patient record's ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID, parent to vitals","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for vitals retrieval in the encounter context","typeName":"IHealthcarePlatformVital.IRequest"},"responseBody":{"description":"Paginated list of vital entries (with metadata) matching search criteria for the encounter","typeName":"IPageIHealthcarePlatformVital"},"authorizationRoles":["medicalDoctor","nurse","departmentHead"],"name":"index","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves the detailed information for a single vital sign entry by its unique identifier, as recorded during a specific patient encounter. It operates on the healthcare_platform_vitals table, which contains discrete vital sign data (heart rate, temperature, blood pressure, etc.). Returns the complete vital entity for clinical review or follow-up.\n\nSecurity: Available to clinical users such as medicalDoctor, nurse, or departmentHead for patients and encounters within their organizational scope. Complete PHI data is returned according to role-based access and all views are audited. Request parameters must be valid UUIDs referencing an existing patient record, encounter, and vital record.\n\nThis endpoint enables direct review of a specific vital entry, supporting clinical safety, error correction, and analytics. All accesses are logged in the audit trail for compliance and safety monitoring. Denied if the target record is missing or the user lacks proper access scope.","description":"Retrieves a single vital sign record (i.e., distinct entry for temperature, blood pressure, or other vital) from a given patient encounter, using the record UUID as lookup.\n\nUsed for chart review, correction workflows, or clinical interventions. The response contains all fields associated with the vital sign, with full detail and attribution. Role-based filtering ensures that only staff responsible for or assigned to the encounter may access the resource, and all views are PHI-audited.\n\nErrors: not found if any path parameter does not exist, forbidden for scope/permission failure, and audit log creation for all data access events. Related endpoints: vitals list, vitals update, and patient encounter summary.","summary":"Retrieve a specific patient vital entry for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Target patient record's ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier for the vital entry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the selected vital sign entry","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["medicalDoctor","nurse","departmentHead"],"name":"at","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"get","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves the detailed information for a single vital sign entry by its unique identifier, as recorded during a specific patient encounter. It operates on the healthcare_platform_vitals table, which contains discrete vital sign data (heart rate, temperature, blood pressure, etc.). Returns the complete vital entity for clinical review or follow-up.\n\nSecurity: Available to clinical users such as medicalDoctor, nurse, or departmentHead for patients and encounters within their organizational scope. Complete PHI data is returned according to role-based access and all views are audited. Request parameters must be valid UUIDs referencing an existing patient record, encounter, and vital record.\n\nThis endpoint enables direct review of a specific vital entry, supporting clinical safety, error correction, and analytics. All accesses are logged in the audit trail for compliance and safety monitoring. Denied if the target record is missing or the user lacks proper access scope.","description":"Retrieves a single vital sign record (i.e., distinct entry for temperature, blood pressure, or other vital) from a given patient encounter, using the record UUID as lookup.\n\nUsed for chart review, correction workflows, or clinical interventions. The response contains all fields associated with the vital sign, with full detail and attribution. Role-based filtering ensures that only staff responsible for or assigned to the encounter may access the resource, and all views are PHI-audited.\n\nErrors: not found if any path parameter does not exist, forbidden for scope/permission failure, and audit log creation for all data access events. Related endpoints: vitals list, vitals update, and patient encounter summary.","summary":"Retrieve a specific patient vital entry for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Target patient record's ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier for the vital entry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the selected vital sign entry","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["medicalDoctor","nurse","departmentHead"],"name":"at","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"get","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation retrieves the detailed information for a single vital sign entry by its unique identifier, as recorded during a specific patient encounter. It operates on the healthcare_platform_vitals table, which contains discrete vital sign data (heart rate, temperature, blood pressure, etc.). Returns the complete vital entity for clinical review or follow-up.\n\nSecurity: Available to clinical users such as medicalDoctor, nurse, or departmentHead for patients and encounters within their organizational scope. Complete PHI data is returned according to role-based access and all views are audited. Request parameters must be valid UUIDs referencing an existing patient record, encounter, and vital record.\n\nThis endpoint enables direct review of a specific vital entry, supporting clinical safety, error correction, and analytics. All accesses are logged in the audit trail for compliance and safety monitoring. Denied if the target record is missing or the user lacks proper access scope.","description":"Retrieves a single vital sign record (i.e., distinct entry for temperature, blood pressure, or other vital) from a given patient encounter, using the record UUID as lookup.\n\nUsed for chart review, correction workflows, or clinical interventions. The response contains all fields associated with the vital sign, with full detail and attribution. Role-based filtering ensures that only staff responsible for or assigned to the encounter may access the resource, and all views are PHI-audited.\n\nErrors: not found if any path parameter does not exist, forbidden for scope/permission failure, and audit log creation for all data access events. Related endpoints: vitals list, vitals update, and patient encounter summary.","summary":"Retrieve a specific patient vital entry for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Target patient record's ID","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier for the vital entry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the selected vital sign entry","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["medicalDoctor","nurse","departmentHead"],"name":"at","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation creates a new vital sign entry for a specific patient encounter, as performed by a nurse or other qualified clinician. It interacts with the healthcare_platform_vitals table which records individual measurements (e.g., temperature, blood pressure) attributed to a given EHR encounter. On successful creation, returns the new vital entry with full attribution.\n\nSecurity: Only users with nurse, medical doctor, or department head roles active in the encounter context may perform this operation. Created entries are associated with the submitting user and must pass validation rules for vital type, unit, and clinically appropriate value range.\n\nAll create actions are PHI-audited; improperly formatted data or attempts to submit for inaccessible encounters result in error. Related endpoints include vitals listing, single vital review, and correction/amendment APIs.","description":"Creates a new vital sign entry (e.g., heart rate, respiratory rate, blood pressure, temperature) for a patient as part of a specific EHR encounter. The request body provides the vital type, value, unit, measurement timestamp, and attribution to the recording nurse or clinician.\n\nClinical business logic validates that measurement values and units conform to acceptable medical standards and that the provider has current assignment to the given encounter. The resulting entry is available immediately for charts, trend analysis, analytics, and PHI audit trail. Access restricted to nurses, doctors, and applicable department heads.\n\nError handling includes forbidden when context/role is insufficient, not found if record/encounter is missing, and input validation errors for improper value/unit/type. All create attempts are logged for audit/compliance reporting.","summary":"Create a new patient vital sign entry for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Patient record's unique identifier","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID for the vitals entry","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information for new vital sign entry in patient encounter (type, value, measured_at, clinical attribution, etc.)","typeName":"IHealthcarePlatformVital.ICreate"},"responseBody":{"description":"Newly created vital entry with full attribution and all stored metadata","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["nurse","medicalDoctor","departmentHead"],"name":"create","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals","method":"post","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation creates a new vital sign entry for a specific patient encounter, as performed by a nurse or other qualified clinician. It interacts with the healthcare_platform_vitals table which records individual measurements (e.g., temperature, blood pressure) attributed to a given EHR encounter. On successful creation, returns the new vital entry with full attribution.\n\nSecurity: Only users with nurse, medical doctor, or department head roles active in the encounter context may perform this operation. Created entries are associated with the submitting user and must pass validation rules for vital type, unit, and clinically appropriate value range.\n\nAll create actions are PHI-audited; improperly formatted data or attempts to submit for inaccessible encounters result in error. Related endpoints include vitals listing, single vital review, and correction/amendment APIs.","description":"Creates a new vital sign entry (e.g., heart rate, respiratory rate, blood pressure, temperature) for a patient as part of a specific EHR encounter. The request body provides the vital type, value, unit, measurement timestamp, and attribution to the recording nurse or clinician.\n\nClinical business logic validates that measurement values and units conform to acceptable medical standards and that the provider has current assignment to the given encounter. The resulting entry is available immediately for charts, trend analysis, analytics, and PHI audit trail. Access restricted to nurses, doctors, and applicable department heads.\n\nError handling includes forbidden when context/role is insufficient, not found if record/encounter is missing, and input validation errors for improper value/unit/type. All create attempts are logged for audit/compliance reporting.","summary":"Create a new patient vital sign entry for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Patient record's unique identifier","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID for the vitals entry","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information for new vital sign entry in patient encounter (type, value, measured_at, clinical attribution, etc.)","typeName":"IHealthcarePlatformVital.ICreate"},"responseBody":{"description":"Newly created vital entry with full attribution and all stored metadata","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["nurse","medicalDoctor","departmentHead"],"name":"create","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals","method":"post","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation creates a new vital sign entry for a specific patient encounter, as performed by a nurse or other qualified clinician. It interacts with the healthcare_platform_vitals table which records individual measurements (e.g., temperature, blood pressure) attributed to a given EHR encounter. On successful creation, returns the new vital entry with full attribution.\n\nSecurity: Only users with nurse, medical doctor, or department head roles active in the encounter context may perform this operation. Created entries are associated with the submitting user and must pass validation rules for vital type, unit, and clinically appropriate value range.\n\nAll create actions are PHI-audited; improperly formatted data or attempts to submit for inaccessible encounters result in error. Related endpoints include vitals listing, single vital review, and correction/amendment APIs.","description":"Creates a new vital sign entry (e.g., heart rate, respiratory rate, blood pressure, temperature) for a patient as part of a specific EHR encounter. The request body provides the vital type, value, unit, measurement timestamp, and attribution to the recording nurse or clinician.\n\nClinical business logic validates that measurement values and units conform to acceptable medical standards and that the provider has current assignment to the given encounter. The resulting entry is available immediately for charts, trend analysis, analytics, and PHI audit trail. Access restricted to nurses, doctors, and applicable department heads.\n\nError handling includes forbidden when context/role is insufficient, not found if record/encounter is missing, and input validation errors for improper value/unit/type. All create attempts are logged for audit/compliance reporting.","summary":"Create a new patient vital sign entry for an encounter (healthcare_platform_vitals)","parameters":[{"name":"patientRecordId","description":"Patient record's unique identifier","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"EHR encounter ID for the vitals entry","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information for new vital sign entry in patient encounter (type, value, measured_at, clinical attribution, etc.)","typeName":"IHealthcarePlatformVital.ICreate"},"responseBody":{"description":"Newly created vital entry with full attribution and all stored metadata","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["nurse","medicalDoctor","departmentHead"],"name":"create","path":"/healthcarePlatform/departmentHead/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals","method":"post","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation updates an existing patient vital sign record for a given clinical encounter under a specific patient record. It is associated with the healthcare_platform_vitals table in the Prisma schema. The endpoint requires the unique identifiers for the patient record, encounter, and the vital sign to be supplied as path parameters. The request body should contain the fields for updating the vital sign (such as type, value, units, measured_at, etc.), using the IHealthcarePlatformVital.IUpdate DTO. Validation ensures that the user has update privileges (e.g., nurse, medicalDoctor) for the specific patient context and encounter. Business logic should check that the encounter is not locked for regulatory/legal/audit reasons, and audit logging should be triggered for every update. Attempting to update a vital sign for a deleted or locked record should yield appropriate error responses. Soft deletion is handled via the deleted_at field (NULL means active) as per the schema.","description":"Update a specific vital sign record associated with a patient clinical encounter. The healthcare_platform_vitals table supports storage of discrete vital measurements—heart rate, temperature, blood pressure, etc.—each tied to an EHR encounter and user who recorded it. \n\nOn update, the system checks permissions against the authenticated role (nurse, medicalDoctor) and the patient's organizational/department scope. Update requests are only allowed if the encounter and the vital record are not under legal hold, audit lock, or soft deleted. Every update event must be captured in the audit trail, including before and after state, for regulatory compliance.\n\nThe operation throws validation errors if required fields are missing from the request, if values are nonsensical per clinical norms (e.g., negative temperature), or if the user lacks required permissions. If the record is soft-deleted (deleted_at not null), updates should be blocked with a clear error message. Related operations: POST to create new vital, DELETE to remove, GET to retrieve details.\n\nReturns the updated vital record upon success, using the main DTO for full context. Business logic ensures that changes comply with clinical workflow and audit tracking.","summary":"Update a patient vital record for a specific encounter (healthcare_platform_vitals).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the clinical encounter.","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier of the vital sign record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a vital measurement record.","typeName":"IHealthcarePlatformVital.IUpdate"},"responseBody":{"description":"Updated vital record with clinical and audit context.","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["nurse","medicalDoctor"],"name":"update","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"put","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation updates an existing patient vital sign record for a given clinical encounter under a specific patient record. It is associated with the healthcare_platform_vitals table in the Prisma schema. The endpoint requires the unique identifiers for the patient record, encounter, and the vital sign to be supplied as path parameters. The request body should contain the fields for updating the vital sign (such as type, value, units, measured_at, etc.), using the IHealthcarePlatformVital.IUpdate DTO. Validation ensures that the user has update privileges (e.g., nurse, medicalDoctor) for the specific patient context and encounter. Business logic should check that the encounter is not locked for regulatory/legal/audit reasons, and audit logging should be triggered for every update. Attempting to update a vital sign for a deleted or locked record should yield appropriate error responses. Soft deletion is handled via the deleted_at field (NULL means active) as per the schema.","description":"Update a specific vital sign record associated with a patient clinical encounter. The healthcare_platform_vitals table supports storage of discrete vital measurements—heart rate, temperature, blood pressure, etc.—each tied to an EHR encounter and user who recorded it. \n\nOn update, the system checks permissions against the authenticated role (nurse, medicalDoctor) and the patient's organizational/department scope. Update requests are only allowed if the encounter and the vital record are not under legal hold, audit lock, or soft deleted. Every update event must be captured in the audit trail, including before and after state, for regulatory compliance.\n\nThe operation throws validation errors if required fields are missing from the request, if values are nonsensical per clinical norms (e.g., negative temperature), or if the user lacks required permissions. If the record is soft-deleted (deleted_at not null), updates should be blocked with a clear error message. Related operations: POST to create new vital, DELETE to remove, GET to retrieve details.\n\nReturns the updated vital record upon success, using the main DTO for full context. Business logic ensures that changes comply with clinical workflow and audit tracking.","summary":"Update a patient vital record for a specific encounter (healthcare_platform_vitals).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the clinical encounter.","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier of the vital sign record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update a vital measurement record.","typeName":"IHealthcarePlatformVital.IUpdate"},"responseBody":{"description":"Updated vital record with clinical and audit context.","typeName":"IHealthcarePlatformVital"},"authorizationRoles":["nurse","medicalDoctor"],"name":"update","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"put","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation performs a soft deletion (if field exists) or hard deletion (if not) of a vital sign record for a patient encounter. It targets the healthcare_platform_vitals table based on supplied patient, encounter, and vital sign IDs. Access is controlled by the role and organizational context. The system checks for legal, audit, or compliance locks before deletion. The record is soft-deleted via the deleted_at field if present, and the action is fully audit logged for compliance.","description":"Permanently or soft-deletes a vital record associated with a patient's clinical encounter. According to the healthcare_platform_vitals schema, records are soft-deleted using a deleted_at column (set to NULL for active records, timestamp for deleted), which allows the system to retain data for regulatory review while preventing access in the application.\n\nOnly roles with appropriate clinical privileges (nurse, medicalDoctor) and organizational assignment may delete vital records. The API checks for regulatory or legal locks before permitting deletion. Audit logs record both the delete request and resulting state change for compliance/debugging. Attempts to delete records already soft-deleted, locked, or under audit must yield a clear error.\n\nThis operation is irreversible within the application layer but may be subject to regulatory data restoration/reporting triggers at the database level. No content is returned on success.","summary":"Delete (soft or hard) a vital sign record under a patient encounter (healthcare_platform_vitals).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the clinical encounter.","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier of the vital sign record to remove.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["nurse","medicalDoctor"],"name":"erase","path":"/healthcarePlatform/nurse/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"delete","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation performs a soft deletion (if field exists) or hard deletion (if not) of a vital sign record for a patient encounter. It targets the healthcare_platform_vitals table based on supplied patient, encounter, and vital sign IDs. Access is controlled by the role and organizational context. The system checks for legal, audit, or compliance locks before deletion. The record is soft-deleted via the deleted_at field if present, and the action is fully audit logged for compliance.","description":"Permanently or soft-deletes a vital record associated with a patient's clinical encounter. According to the healthcare_platform_vitals schema, records are soft-deleted using a deleted_at column (set to NULL for active records, timestamp for deleted), which allows the system to retain data for regulatory review while preventing access in the application.\n\nOnly roles with appropriate clinical privileges (nurse, medicalDoctor) and organizational assignment may delete vital records. The API checks for regulatory or legal locks before permitting deletion. Audit logs record both the delete request and resulting state change for compliance/debugging. Attempts to delete records already soft-deleted, locked, or under audit must yield a clear error.\n\nThis operation is irreversible within the application layer but may be subject to regulatory data restoration/reporting triggers at the database level. No content is returned on success.","summary":"Delete (soft or hard) a vital sign record under a patient encounter (healthcare_platform_vitals).","parameters":[{"name":"patientRecordId","description":"Unique identifier of the patient record.","schema":{"type":"string","format":"uuid"}},{"name":"encounterId","description":"Unique identifier of the clinical encounter.","schema":{"type":"string","format":"uuid"}},{"name":"vitalId","description":"Unique identifier of the vital sign record to remove.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["nurse","medicalDoctor"],"name":"erase","path":"/healthcarePlatform/medicalDoctor/patientRecords/{patientRecordId}/encounters/{encounterId}/vitals/{vitalId}","method":"delete","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/systemAdmin/appointments","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/organizationAdmin/appointments","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/departmentHead/appointments","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/medicalDoctor/appointments","method":"patch","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/nurse/appointments","method":"patch","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/technician/appointments","method":"patch","authorizationRole":"technician","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/receptionist/appointments","method":"patch","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation searches and paginates scheduled appointments, supporting advanced filtering and sorting. It operates on the healthcare_platform_appointments table and related entities (organization, provider, patient, status, resource). The request body enables filtering by provider, patient, status, time window, appointment type, department, etc. Results are returned with paginated meta and appointment summary views, honoring RBAC filters based on the requesting user's org and role. Organizational boundaries, role limitations, and data privacy constraints are enforced as per business requirements. Intended for staff portal or patient portal appointment book display.","description":"Search, paginate, and filter scheduled appointments in the system. The healthcare_platform_appointments schema enables robust querying by provider, patient, organization, department, date range, appointment type, resource, and more. Filtering logic enforces role-based data access boundaries—doctors, nurses can see appointments relevant to their patients or department, receptionists can view organizational schedules, and patients can query their own slots only.\n\nThe request body allows for compound filters, sorting (by start_time, status, provider, etc.), and pagination (page number, page size, result window). Business logic ensures that only users with proper assignment and role may query appointments. Attempting to view or search schedules outside one's organizational or patient scope is denied with a clear error. Privacy and data minimization constraints are observed throughout.\n\nAudit logging records filter usage and all access events for compliance. The response includes paginated appointment summaries (without PHI) suitable for calendar views or dashboard widgets. Full appointment details require additional API calls where permitted. This operation is suitable for integration with both staff-oriented and patient self-service scheduling interfaces.","summary":"Search and paginate appointments across providers, patients, and departments (healthcare_platform_appointments).","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for appointments.","typeName":"IHealthcarePlatformAppointment.IRequest"},"responseBody":{"description":"Paginated appointment summaries matching search/filter criteria.","typeName":"IPageIHealthcarePlatformAppointment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/patient/appointments","method":"patch","authorizationRole":"patient","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}","method":"get","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/nurse/appointments/{appointmentId}","method":"get","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/technician/appointments/{appointmentId}","method":"get","authorizationRole":"technician","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}","method":"get","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation fetches full appointment details for a specific event using its unique ID, returning all related fields and context. Operates on the healthcare_platform_appointments table and its relations (org, patient, provider, department, room/equipment, status). The appointmentId parameter is required. Authorization checks ensure only assigned/related users (doctor, nurse, patient, admin, receptionist) can access full details. Business logic supports additional PHI minimization and privacy enforcement for patients vs staff roles. Audit trail is recorded for compliance and access reporting. Returns full IHealthcarePlatformAppointment DTO.","description":"Retrieve full detail for a single appointment event. The healthcare_platform_appointments table captures all scheduling details—organization, department, provider, patient, room/equipment, status, time window, and description. User access is strictly controlled: only assigned provider, patient, or authorized staff roles may fetch appointment data.\n\nThe path parameter appointmentId uniquely identifies the appointment to retrieve. The system enforces RBAC/organizational boundaries, ensuring patients only see their own appointment details, providers see theirs, and admins/receptionists have wider access. Business logic may redact or minimize PHI in patient-facing responses.\n\nAudit logs are created for each access to appointment details in accordance with regulatory requirements. Related operations include PATCH /appointments for searching, and PUT/DELETE for update/deletion. This operation returns the appointment record in detail if authorized, or an error if not permitted.","summary":"Fetch detailed information for a specific appointment by ID (healthcare_platform_appointments).","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment event.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed appointment record with all context (org, provider, patient, resource).","typeName":"IHealthcarePlatformAppointment"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/patient/appointments/{appointmentId}","method":"get","authorizationRole":"patient","authorizationType":null},{"specification":"This operation allows authorized users to create a new appointment within the healthcarePlatform system. It operates on the healthcare_platform_appointments table in the Prisma schema. Appointments are linked to organizations, departments, providers (via user/org assignment), patients, status, and optionally room and equipment. The operation ensures all required fields (organization, provider, patient, status, appointment type, start and end time) are validated according to business rules and scheduling constraints. Additional metadata such as title, notes, and recurrence may be set.\n\nAppointment creation enforces cross-entity referential integrity (i.e., provider and patient must belong to the specified organization). Business logic prevents double-booking and ensures auditability. The scheduling module supports both in-person and telemedicine appointments, with fully auditable records for compliance.\n\nThe response returns full details of the created appointment, including unique ID, all specified attributes, and system-generated timestamps. Related logic may trigger downstream reminders, notifications, or telemedicine session creation depending on appointment_type and organization policy.","description":"Creates a new appointment event within the healthcare platform, linking the provided organization, provider, patient, status, type, and time fields. This operation checks for resource and schedule availability, enforces access control based on the user's role, and integrates with the multi-tenant structure for isolation. Validation rules require that booking does not conflict with existing appointments for both provider and patient, and that the status code, organization, and provider are valid.\n\nOn success, the operation returns a complete appointment record as defined in the Prisma schema, including references to related entities. Potential errors include invalid entity references, scheduling conflicts, insufficient permissions, or missing required fields. The created appointment is immediately available for further management (e.g., updating, reminder scheduling) by authorized roles (receptionists, admins, providers).\n\nThese APIs are integrated with business logic to ensure compliance, auditability, and operational safety in healthcare scheduling.","summary":"Create a new appointment in healthcare_platform_appointments table","parameters":[],"requestBody":{"description":"Details required to create a new appointment, including organization, provider, patient, status, type, time, and optional metadata.","typeName":"IHealthcarePlatformAppointment.ICreate"},"responseBody":{"description":"Full details of the appointment entity just created.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"receptionist","name":"create","path":"/healthcarePlatform/receptionist/appointments","method":"post"},{"specification":"This operation allows authorized users to create a new appointment within the healthcarePlatform system. It operates on the healthcare_platform_appointments table in the Prisma schema. Appointments are linked to organizations, departments, providers (via user/org assignment), patients, status, and optionally room and equipment. The operation ensures all required fields (organization, provider, patient, status, appointment type, start and end time) are validated according to business rules and scheduling constraints. Additional metadata such as title, notes, and recurrence may be set.\n\nAppointment creation enforces cross-entity referential integrity (i.e., provider and patient must belong to the specified organization). Business logic prevents double-booking and ensures auditability. The scheduling module supports both in-person and telemedicine appointments, with fully auditable records for compliance.\n\nThe response returns full details of the created appointment, including unique ID, all specified attributes, and system-generated timestamps. Related logic may trigger downstream reminders, notifications, or telemedicine session creation depending on appointment_type and organization policy.","description":"Creates a new appointment event within the healthcare platform, linking the provided organization, provider, patient, status, type, and time fields. This operation checks for resource and schedule availability, enforces access control based on the user's role, and integrates with the multi-tenant structure for isolation. Validation rules require that booking does not conflict with existing appointments for both provider and patient, and that the status code, organization, and provider are valid.\n\nOn success, the operation returns a complete appointment record as defined in the Prisma schema, including references to related entities. Potential errors include invalid entity references, scheduling conflicts, insufficient permissions, or missing required fields. The created appointment is immediately available for further management (e.g., updating, reminder scheduling) by authorized roles (receptionists, admins, providers).\n\nThese APIs are integrated with business logic to ensure compliance, auditability, and operational safety in healthcare scheduling.","summary":"Create a new appointment in healthcare_platform_appointments table","parameters":[],"requestBody":{"description":"Details required to create a new appointment, including organization, provider, patient, status, type, time, and optional metadata.","typeName":"IHealthcarePlatformAppointment.ICreate"},"responseBody":{"description":"Full details of the appointment entity just created.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/appointments","method":"post"},{"specification":"This operation allows authorized users to create a new appointment within the healthcarePlatform system. It operates on the healthcare_platform_appointments table in the Prisma schema. Appointments are linked to organizations, departments, providers (via user/org assignment), patients, status, and optionally room and equipment. The operation ensures all required fields (organization, provider, patient, status, appointment type, start and end time) are validated according to business rules and scheduling constraints. Additional metadata such as title, notes, and recurrence may be set.\n\nAppointment creation enforces cross-entity referential integrity (i.e., provider and patient must belong to the specified organization). Business logic prevents double-booking and ensures auditability. The scheduling module supports both in-person and telemedicine appointments, with fully auditable records for compliance.\n\nThe response returns full details of the created appointment, including unique ID, all specified attributes, and system-generated timestamps. Related logic may trigger downstream reminders, notifications, or telemedicine session creation depending on appointment_type and organization policy.","description":"Creates a new appointment event within the healthcare platform, linking the provided organization, provider, patient, status, type, and time fields. This operation checks for resource and schedule availability, enforces access control based on the user's role, and integrates with the multi-tenant structure for isolation. Validation rules require that booking does not conflict with existing appointments for both provider and patient, and that the status code, organization, and provider are valid.\n\nOn success, the operation returns a complete appointment record as defined in the Prisma schema, including references to related entities. Potential errors include invalid entity references, scheduling conflicts, insufficient permissions, or missing required fields. The created appointment is immediately available for further management (e.g., updating, reminder scheduling) by authorized roles (receptionists, admins, providers).\n\nThese APIs are integrated with business logic to ensure compliance, auditability, and operational safety in healthcare scheduling.","summary":"Create a new appointment in healthcare_platform_appointments table","parameters":[],"requestBody":{"description":"Details required to create a new appointment, including organization, provider, patient, status, type, time, and optional metadata.","typeName":"IHealthcarePlatformAppointment.ICreate"},"responseBody":{"description":"Full details of the appointment entity just created.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create","path":"/healthcarePlatform/departmentHead/appointments","method":"post"},{"specification":"This operation allows authorized users to create a new appointment within the healthcarePlatform system. It operates on the healthcare_platform_appointments table in the Prisma schema. Appointments are linked to organizations, departments, providers (via user/org assignment), patients, status, and optionally room and equipment. The operation ensures all required fields (organization, provider, patient, status, appointment type, start and end time) are validated according to business rules and scheduling constraints. Additional metadata such as title, notes, and recurrence may be set.\n\nAppointment creation enforces cross-entity referential integrity (i.e., provider and patient must belong to the specified organization). Business logic prevents double-booking and ensures auditability. The scheduling module supports both in-person and telemedicine appointments, with fully auditable records for compliance.\n\nThe response returns full details of the created appointment, including unique ID, all specified attributes, and system-generated timestamps. Related logic may trigger downstream reminders, notifications, or telemedicine session creation depending on appointment_type and organization policy.","description":"Creates a new appointment event within the healthcare platform, linking the provided organization, provider, patient, status, type, and time fields. This operation checks for resource and schedule availability, enforces access control based on the user's role, and integrates with the multi-tenant structure for isolation. Validation rules require that booking does not conflict with existing appointments for both provider and patient, and that the status code, organization, and provider are valid.\n\nOn success, the operation returns a complete appointment record as defined in the Prisma schema, including references to related entities. Potential errors include invalid entity references, scheduling conflicts, insufficient permissions, or missing required fields. The created appointment is immediately available for further management (e.g., updating, reminder scheduling) by authorized roles (receptionists, admins, providers).\n\nThese APIs are integrated with business logic to ensure compliance, auditability, and operational safety in healthcare scheduling.","summary":"Create a new appointment in healthcare_platform_appointments table","parameters":[],"requestBody":{"description":"Details required to create a new appointment, including organization, provider, patient, status, type, time, and optional metadata.","typeName":"IHealthcarePlatformAppointment.ICreate"},"responseBody":{"description":"Full details of the appointment entity just created.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create","path":"/healthcarePlatform/medicalDoctor/appointments","method":"post"},{"specification":"This operation updates an existing appointment record in the healthcare_platform_appointments table. Authorized users can modify selected properties such as status, provider, time, description, room, or equipment. All updates are subject to business logic around referential integrity, time conflict collision checks, and audit requirements. Resource lock and compliance rules for modification apply if the appointment is in the past or involved in billing, audit, or legal hold.\n\nThe operation supports fine-grained updates, restricted by user role (receptionist can reschedule but not change provider, higher roles gain broader permissions). All changes are tracked for audit trail and compliance reporting. Responses include the fully updated appointment entity.","description":"Modifies the details of an existing appointment in the healthcare platform, allowing changes such as time, status, provider, or supporting fields. The operation enforces business rules including: no time slot overlap, ensuring status transitions are allowed for the given state, and confirming the user is permitted to update the appointment (ownership or role-based restriction).\n\nIf the update involves changing critical properties like provider or time, the system checks for conflicts and may trigger downstream updates (e.g., room/equipment reallocation, reminders, or telemedicine session updates). Audit logs are generated for clinical, billing, and operational compliance. Error handling includes conflict, not found, or permission errors.\n\nAll changes are immediately reflected in the appointment record, and the updated appointment is returned on success.","summary":"Update an existing appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for the appointment. Can include time, status, provider, description, room, equipment, etc.","typeName":"IHealthcarePlatformAppointment.IUpdate"},"responseBody":{"description":"Full details of the updated appointment entity.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"receptionist","name":"update","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}","method":"put"},{"specification":"This operation updates an existing appointment record in the healthcare_platform_appointments table. Authorized users can modify selected properties such as status, provider, time, description, room, or equipment. All updates are subject to business logic around referential integrity, time conflict collision checks, and audit requirements. Resource lock and compliance rules for modification apply if the appointment is in the past or involved in billing, audit, or legal hold.\n\nThe operation supports fine-grained updates, restricted by user role (receptionist can reschedule but not change provider, higher roles gain broader permissions). All changes are tracked for audit trail and compliance reporting. Responses include the fully updated appointment entity.","description":"Modifies the details of an existing appointment in the healthcare platform, allowing changes such as time, status, provider, or supporting fields. The operation enforces business rules including: no time slot overlap, ensuring status transitions are allowed for the given state, and confirming the user is permitted to update the appointment (ownership or role-based restriction).\n\nIf the update involves changing critical properties like provider or time, the system checks for conflicts and may trigger downstream updates (e.g., room/equipment reallocation, reminders, or telemedicine session updates). Audit logs are generated for clinical, billing, and operational compliance. Error handling includes conflict, not found, or permission errors.\n\nAll changes are immediately reflected in the appointment record, and the updated appointment is returned on success.","summary":"Update an existing appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for the appointment. Can include time, status, provider, description, room, equipment, etc.","typeName":"IHealthcarePlatformAppointment.IUpdate"},"responseBody":{"description":"Full details of the updated appointment entity.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}","method":"put"},{"specification":"This operation updates an existing appointment record in the healthcare_platform_appointments table. Authorized users can modify selected properties such as status, provider, time, description, room, or equipment. All updates are subject to business logic around referential integrity, time conflict collision checks, and audit requirements. Resource lock and compliance rules for modification apply if the appointment is in the past or involved in billing, audit, or legal hold.\n\nThe operation supports fine-grained updates, restricted by user role (receptionist can reschedule but not change provider, higher roles gain broader permissions). All changes are tracked for audit trail and compliance reporting. Responses include the fully updated appointment entity.","description":"Modifies the details of an existing appointment in the healthcare platform, allowing changes such as time, status, provider, or supporting fields. The operation enforces business rules including: no time slot overlap, ensuring status transitions are allowed for the given state, and confirming the user is permitted to update the appointment (ownership or role-based restriction).\n\nIf the update involves changing critical properties like provider or time, the system checks for conflicts and may trigger downstream updates (e.g., room/equipment reallocation, reminders, or telemedicine session updates). Audit logs are generated for clinical, billing, and operational compliance. Error handling includes conflict, not found, or permission errors.\n\nAll changes are immediately reflected in the appointment record, and the updated appointment is returned on success.","summary":"Update an existing appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for the appointment. Can include time, status, provider, description, room, equipment, etc.","typeName":"IHealthcarePlatformAppointment.IUpdate"},"responseBody":{"description":"Full details of the updated appointment entity.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}","method":"put"},{"specification":"This operation updates an existing appointment record in the healthcare_platform_appointments table. Authorized users can modify selected properties such as status, provider, time, description, room, or equipment. All updates are subject to business logic around referential integrity, time conflict collision checks, and audit requirements. Resource lock and compliance rules for modification apply if the appointment is in the past or involved in billing, audit, or legal hold.\n\nThe operation supports fine-grained updates, restricted by user role (receptionist can reschedule but not change provider, higher roles gain broader permissions). All changes are tracked for audit trail and compliance reporting. Responses include the fully updated appointment entity.","description":"Modifies the details of an existing appointment in the healthcare platform, allowing changes such as time, status, provider, or supporting fields. The operation enforces business rules including: no time slot overlap, ensuring status transitions are allowed for the given state, and confirming the user is permitted to update the appointment (ownership or role-based restriction).\n\nIf the update involves changing critical properties like provider or time, the system checks for conflicts and may trigger downstream updates (e.g., room/equipment reallocation, reminders, or telemedicine session updates). Audit logs are generated for clinical, billing, and operational compliance. Error handling includes conflict, not found, or permission errors.\n\nAll changes are immediately reflected in the appointment record, and the updated appointment is returned on success.","summary":"Update an existing appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update for the appointment. Can include time, status, provider, description, room, equipment, etc.","typeName":"IHealthcarePlatformAppointment.IUpdate"},"responseBody":{"description":"Full details of the updated appointment entity.","typeName":"IHealthcarePlatformAppointment"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}","method":"put"},{"specification":"This operation deletes (soft deletes, due to schema) an appointment record in the healthcare_platform_appointments table by unique ID. Only authorized roles may perform deletion, and referential integrity is enforced (no deletion if appointment is referenced in closed billing, audit, or legal hold). Deletion in the schema is soft: the deleted_at timestamp is set, preserving the row for audit/compliance, but removing it from active operations.\n\nAll deletion events are logged for audit, and attempts to delete non-existent or protected appointments result in errors. Users must have appropriate contextual access (organization, department, or provider assignee) to erase appointments.","description":"Deletes (soft delete via deleted_at field) an appointment by unique identifier. The method enforces access control so only authorized roles within the appointment's organization/department may mark it deleted. Business logic checks include: existence, reference integrity, and protection for appointments involved in billing or legal workflows.\n\nUpon success, the appointment is removed from active schedules and workflows but is retained for audit and compliance. Attempts to erase an appointment outside the user’s permitted scope or on protected records (e.g., closed billing, locked by compliance) return appropriate errors. All delete actions are logged in the audit subsystem.","summary":"Delete (soft) an appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"receptionist","name":"erase","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}","method":"delete"},{"specification":"This operation deletes (soft deletes, due to schema) an appointment record in the healthcare_platform_appointments table by unique ID. Only authorized roles may perform deletion, and referential integrity is enforced (no deletion if appointment is referenced in closed billing, audit, or legal hold). Deletion in the schema is soft: the deleted_at timestamp is set, preserving the row for audit/compliance, but removing it from active operations.\n\nAll deletion events are logged for audit, and attempts to delete non-existent or protected appointments result in errors. Users must have appropriate contextual access (organization, department, or provider assignee) to erase appointments.","description":"Deletes (soft delete via deleted_at field) an appointment by unique identifier. The method enforces access control so only authorized roles within the appointment's organization/department may mark it deleted. Business logic checks include: existence, reference integrity, and protection for appointments involved in billing or legal workflows.\n\nUpon success, the appointment is removed from active schedules and workflows but is retained for audit and compliance. Attempts to erase an appointment outside the user’s permitted scope or on protected records (e.g., closed billing, locked by compliance) return appropriate errors. All delete actions are logged in the audit subsystem.","summary":"Delete (soft) an appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}","method":"delete"},{"specification":"This operation deletes (soft deletes, due to schema) an appointment record in the healthcare_platform_appointments table by unique ID. Only authorized roles may perform deletion, and referential integrity is enforced (no deletion if appointment is referenced in closed billing, audit, or legal hold). Deletion in the schema is soft: the deleted_at timestamp is set, preserving the row for audit/compliance, but removing it from active operations.\n\nAll deletion events are logged for audit, and attempts to delete non-existent or protected appointments result in errors. Users must have appropriate contextual access (organization, department, or provider assignee) to erase appointments.","description":"Deletes (soft delete via deleted_at field) an appointment by unique identifier. The method enforces access control so only authorized roles within the appointment's organization/department may mark it deleted. Business logic checks include: existence, reference integrity, and protection for appointments involved in billing or legal workflows.\n\nUpon success, the appointment is removed from active schedules and workflows but is retained for audit and compliance. Attempts to erase an appointment outside the user’s permitted scope or on protected records (e.g., closed billing, locked by compliance) return appropriate errors. All delete actions are logged in the audit subsystem.","summary":"Delete (soft) an appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"departmentHead","name":"erase","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}","method":"delete"},{"specification":"This operation deletes (soft deletes, due to schema) an appointment record in the healthcare_platform_appointments table by unique ID. Only authorized roles may perform deletion, and referential integrity is enforced (no deletion if appointment is referenced in closed billing, audit, or legal hold). Deletion in the schema is soft: the deleted_at timestamp is set, preserving the row for audit/compliance, but removing it from active operations.\n\nAll deletion events are logged for audit, and attempts to delete non-existent or protected appointments result in errors. Users must have appropriate contextual access (organization, department, or provider assignee) to erase appointments.","description":"Deletes (soft delete via deleted_at field) an appointment by unique identifier. The method enforces access control so only authorized roles within the appointment's organization/department may mark it deleted. Business logic checks include: existence, reference integrity, and protection for appointments involved in billing or legal workflows.\n\nUpon success, the appointment is removed from active schedules and workflows but is retained for audit and compliance. Attempts to erase an appointment outside the user’s permitted scope or on protected records (e.g., closed billing, locked by compliance) return appropriate errors. All delete actions are logged in the audit subsystem.","summary":"Delete (soft) an appointment by ID in healthcare_platform_appointments table","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"medicalDoctor","name":"erase","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}","method":"delete"},{"specification":"This operation retrieves a paginated, filterable list of reminder notifications associated with a specific appointment based on its unique identifier. It accesses the healthcare_platform_appointment_reminders table, supporting search by delivery status, recipient type, delivery time window, or channel. Useful for administrative review, compliance audit, failed delivery troubleshooting, or providing users with a history of reminders sent for that appointment.\n\nSupports complex search queries on fields like delivery_status, recipient_type, and reminder_time. Returns results in paginated format for efficient frontend consumption. This operation does not support modification; it is strictly for reminder history lookup and status tracking.","description":"Retrieves all reminders (notification events) associated with a specific appointment ID. Returned results may be filtered/paginated and include all sent/pending/failed reminders, complete with recipient information, delivery status, and notification metadata. Used for staff to monitor and troubleshoot notification workflows, verify SLA compliance, or support patient/provider inquiries.\n\nBusiness logic ensures that only users with access rights to the appointment (receptionist, provider, organization admin, etc.) can access the reminder history. The returned records provide audit support and can be leveraged for notification monitoring, patient service, or regulatory review. Errors include access denied, invalid appointment, or no reminders found.","summary":"List reminder notifications for an appointment (paginated/filterable)","parameters":[{"name":"appointmentId","description":"Unique identifier of the target appointment whose reminders to list","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for reminder retrieval (status, delivery channel, recipient, time window, paging).","typeName":"IHealthcarePlatformAppointmentReminder.IRequest"},"responseBody":{"description":"Paginated list of reminder notification records for the given appointment.","typeName":"IPageIHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"receptionist","name":"index","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/reminders","method":"patch"},{"specification":"This operation retrieves a paginated, filterable list of reminder notifications associated with a specific appointment based on its unique identifier. It accesses the healthcare_platform_appointment_reminders table, supporting search by delivery status, recipient type, delivery time window, or channel. Useful for administrative review, compliance audit, failed delivery troubleshooting, or providing users with a history of reminders sent for that appointment.\n\nSupports complex search queries on fields like delivery_status, recipient_type, and reminder_time. Returns results in paginated format for efficient frontend consumption. This operation does not support modification; it is strictly for reminder history lookup and status tracking.","description":"Retrieves all reminders (notification events) associated with a specific appointment ID. Returned results may be filtered/paginated and include all sent/pending/failed reminders, complete with recipient information, delivery status, and notification metadata. Used for staff to monitor and troubleshoot notification workflows, verify SLA compliance, or support patient/provider inquiries.\n\nBusiness logic ensures that only users with access rights to the appointment (receptionist, provider, organization admin, etc.) can access the reminder history. The returned records provide audit support and can be leveraged for notification monitoring, patient service, or regulatory review. Errors include access denied, invalid appointment, or no reminders found.","summary":"List reminder notifications for an appointment (paginated/filterable)","parameters":[{"name":"appointmentId","description":"Unique identifier of the target appointment whose reminders to list","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for reminder retrieval (status, delivery channel, recipient, time window, paging).","typeName":"IHealthcarePlatformAppointmentReminder.IRequest"},"responseBody":{"description":"Paginated list of reminder notification records for the given appointment.","typeName":"IPageIHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/reminders","method":"patch"},{"specification":"This operation retrieves a paginated, filterable list of reminder notifications associated with a specific appointment based on its unique identifier. It accesses the healthcare_platform_appointment_reminders table, supporting search by delivery status, recipient type, delivery time window, or channel. Useful for administrative review, compliance audit, failed delivery troubleshooting, or providing users with a history of reminders sent for that appointment.\n\nSupports complex search queries on fields like delivery_status, recipient_type, and reminder_time. Returns results in paginated format for efficient frontend consumption. This operation does not support modification; it is strictly for reminder history lookup and status tracking.","description":"Retrieves all reminders (notification events) associated with a specific appointment ID. Returned results may be filtered/paginated and include all sent/pending/failed reminders, complete with recipient information, delivery status, and notification metadata. Used for staff to monitor and troubleshoot notification workflows, verify SLA compliance, or support patient/provider inquiries.\n\nBusiness logic ensures that only users with access rights to the appointment (receptionist, provider, organization admin, etc.) can access the reminder history. The returned records provide audit support and can be leveraged for notification monitoring, patient service, or regulatory review. Errors include access denied, invalid appointment, or no reminders found.","summary":"List reminder notifications for an appointment (paginated/filterable)","parameters":[{"name":"appointmentId","description":"Unique identifier of the target appointment whose reminders to list","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for reminder retrieval (status, delivery channel, recipient, time window, paging).","typeName":"IHealthcarePlatformAppointmentReminder.IRequest"},"responseBody":{"description":"Paginated list of reminder notification records for the given appointment.","typeName":"IPageIHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/reminders","method":"patch"},{"specification":"This operation retrieves a paginated, filterable list of reminder notifications associated with a specific appointment based on its unique identifier. It accesses the healthcare_platform_appointment_reminders table, supporting search by delivery status, recipient type, delivery time window, or channel. Useful for administrative review, compliance audit, failed delivery troubleshooting, or providing users with a history of reminders sent for that appointment.\n\nSupports complex search queries on fields like delivery_status, recipient_type, and reminder_time. Returns results in paginated format for efficient frontend consumption. This operation does not support modification; it is strictly for reminder history lookup and status tracking.","description":"Retrieves all reminders (notification events) associated with a specific appointment ID. Returned results may be filtered/paginated and include all sent/pending/failed reminders, complete with recipient information, delivery status, and notification metadata. Used for staff to monitor and troubleshoot notification workflows, verify SLA compliance, or support patient/provider inquiries.\n\nBusiness logic ensures that only users with access rights to the appointment (receptionist, provider, organization admin, etc.) can access the reminder history. The returned records provide audit support and can be leveraged for notification monitoring, patient service, or regulatory review. Errors include access denied, invalid appointment, or no reminders found.","summary":"List reminder notifications for an appointment (paginated/filterable)","parameters":[{"name":"appointmentId","description":"Unique identifier of the target appointment whose reminders to list","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for reminder retrieval (status, delivery channel, recipient, time window, paging).","typeName":"IHealthcarePlatformAppointmentReminder.IRequest"},"responseBody":{"description":"Paginated list of reminder notification records for the given appointment.","typeName":"IPageIHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"index","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/reminders","method":"patch"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"nurse","name":"at","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"technician","name":"at","path":"/healthcarePlatform/technician/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"receptionist","name":"at","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation fetches the details of a specific reminder associated with a given appointment in the healthcare scheduling system. It accesses the healthcare_platform_appointment_reminders table, providing fine-grained access to reminder notification entities, such as reminder timing, recipient information, and delivery status. The endpoint applies strict organizational and appointment-based access control, ensuring that only authorized users (e.g., staff, patient to whom the reminder applies) can view the reminder's metadata and delivery outcomes. Used for auditing, notification history display, and retry/acknowledgement flows.","description":"Retrieve notification reminder information for a specific appointment reminder identified by appointmentId and reminderId. This enables organizational staff or the recipient (e.g. patient) to query the status and content of reminders sent prior to an appointment—including delivery time, channel, status (sent, failed, pending), and recipient details.\n\nSecurity is enforced to ensure only users associated with the organization, appointment, or as the recipient can access the reminder details. Sensitive fields like delivery channel, user, or content may be masked for unauthorized access attempts or if restricted by organizational policy.\n\nReminder entities in this table are subsidiary and not manipulated directly outside of the parent appointment lifecycle, fitting strictly within business and audit flows. All reads are logged for compliance tracking and SLA monitoring.\n\nError handling: If the reminderId or appointmentId are invalid, or if the user lacks permission, the system will respond with an appropriate error message and log the access attempt for audit. Soft-deleted reminders are not visible in standard queries.","summary":"Get a specific appointment reminder by ID for review or audit (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier of the reminder to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details for the target appointment reminder including timing, recipient, channel, status, and content as permitted.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"patient","name":"at","path":"/healthcarePlatform/patient/appointments/{appointmentId}/reminders/{reminderId}","method":"get"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"nurse","name":"create","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"technician","name":"create","path":"/healthcarePlatform/technician/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"receptionist","name":"create","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation creates a new reminder notification entity for a specific appointment, registering the reminder for future delivery (e.g., SMS, email, push, in-app) by staff or system processes. It writes to the healthcare_platform_appointment_reminders table, linking to the parent appointment and setting all required scheduling and recipient fields. Strict input validation applies to reminder timing, channel, and recipient eligibility. Organization/resource scoping, role assurance, and audit trailing are enforced for all creation events.","description":"Register a new reminder to be sent prior to the specified appointment, including details such as reminder time, recipient role/type, delivery channel (e.g., SMS, email), and message content/subject.\n\nBusiness logic validates that the appointment exists and is not cancelled, that the requested recipient and channel are allowed for this organization, and that the scheduled time for the reminder is within acceptable business windows (no reminders in the past, respects minimum scheduling lead time, etc).\n\nSecurity: Only users with sufficient credentials (e.g., staff assigned to the appointment or scheduling admin roles) may create reminders; the system checks permissions, role bindings, and appointment status before allowing creation. All creation attempts—success or failure—are logged for compliance and audit tracking.\n\nRelated APIs: This creation operation is part of the larger appointment management workflow and should be used in conjunction with the GET and PUT endpoints for reminders. The parent appointment serves as the workflow boundary, and reminder records are not managed outside of their appointment’s lifecycle.","summary":"Schedule a new reminder for an appointment (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment associated with this reminder.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new appointment reminder, including target delivery time, recipient, channel, and content.","typeName":"IHealthcarePlatformAppointmentReminder.ICreate"},"responseBody":{"description":"The created appointment reminder entity with assigned identifier and computed schedule.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"patient","name":"create","path":"/healthcarePlatform/patient/appointments/{appointmentId}/reminders","method":"post"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"nurse","name":"update","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"technician","name":"update","path":"/healthcarePlatform/technician/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"receptionist","name":"update","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation updates an existing reminder notification entity for an appointment—such as rescheduling a reminder, changing recipient/channel, or modifying the content prior to its dispatch. The endpoint writes to the healthcare_platform_appointment_reminders table, referencing both appointmentId and reminderId to ensure unique scoping and strict relationship validation. Org/department and appointment-level permissions are enforced; audit logs are generated for all changes. Validation rules include preventing updates to reminders for cancelled appointments, reminders already sent/delivered, and enforcing delivery window policies.","description":"Modify scheduling or content for an existing reminder attached to an appointment, identified by appointmentId and reminderId. Typical updates include: rescheduling reminder delivery time, updating recipient user/channel, or changing the notification message or escalation policy.\n\nBusiness and compliance logic ensures that only reminders in statuses permitting modification (e.g., not yet delivered or expired) may be updated, and that changes comply with organization calendar and SLA constraints. Attempts to update reminders for appointments that are cancelled, in the past, or soft-deleted will be rejected.\n\nSecurity: Only authorized staff (e.g., appointment scheduler, org admin) can modify reminders. All successful and failed attempts are logged for audit. Soft-deleted or already-delivered reminders cannot be edited.\n\nError handling includes role and status checks (405 or 403 if not editable or unauthorized) and clear validation errors for scheduling windows, recipient, or channel issues.","summary":"Update an existing appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment to which this reminder belongs.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The update information for the appointment reminder (e.g., new time, recipient, or content).","typeName":"IHealthcarePlatformAppointmentReminder.IUpdate"},"responseBody":{"description":"The updated reminder entity reflecting all accepted changes.","typeName":"IHealthcarePlatformAppointmentReminder"},"authorizationType":null,"authorizationRole":"patient","name":"update","path":"/healthcarePlatform/patient/appointments/{appointmentId}/reminders/{reminderId}","method":"put"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"departmentHead","name":"erase","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"medicalDoctor","name":"erase","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"nurse","name":"erase","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"technician","name":"erase","path":"/healthcarePlatform/technician/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"receptionist","name":"erase","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes (logically/soft-deletes) a specific reminder entity related to an appointment, identified by appointmentId and reminderId. The operation acts on the healthcare_platform_appointment_reminders table and will mark the reminder as deleted (setting deleted_at) for audit/compliance instead of physical removal, in line with regulatory and traceability requirements. Soft-deleted reminders are excluded from most business queries but retained for review and legal hold. Access control restricts deletion to authorized staff or system service accounts and ensures that reminders already delivered or processed are not deleted outside proper escalated workflows.","description":"Remove (soft-delete) an appointment reminder, identified by appointmentId and reminderId. The operation marks the record as deleted by setting the deleted_at field but does not physically erase reminder data, preserving all audit and compliance information in accordance with healthcare regulatory requirements.\n\nSecurity: Only users with explicit assignment (e.g., admin, scheduler) may delete a reminder, and cannot delete reminders already delivered or archived unless performing an escalated, reviewed action. The system logs all delete events (both successful and failed attempts), including user, reason, and timestamp for regulatory review.\n\nRelated operations: This endpoint is closely tied to appointment management and notification systems; hard deletes are not permitted via this interface. Restore or audit review of deleted notifications requires a separate process, managed by compliance or IT admins.","summary":"Soft-delete an appointment reminder (healthcare_platform_appointment_reminders).","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment from which to delete the reminder.","schema":{"type":"string","format":"uuid"}},{"name":"reminderId","description":"Unique identifier for the reminder to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"patient","name":"erase","path":"/healthcarePlatform/patient/appointments/{appointmentId}/reminders/{reminderId}","method":"delete"},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/technician/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"technician","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation retrieves the waitlist for a specific appointment in the healthcare platform. It enables both staff and patients to view all users currently on the waitlist for a particular appointment (e.g., when a slot is filled but users can join a waitlist to be notified if an opening appears). The implementation ensures privacy compliance by returning only relevant waitlist data while enforcing organizational and role-based data boundaries. The operation uses the `healthcare_platform_appointment_waitlists` table, which is related to `healthcare_platform_appointments` via appointmentId and includes patientId, joinTime, and status for each waitlist entry.","description":"Retrieve the waitlist for a specified appointment on the healthcare platform, returning a paginated, filtered list of users waiting for a slot. The operation supports advanced query features such as sorting by join time or status and filtering by patient or waitlist entry status.\n\nAuthorization is enforced according to organization, department, or patient context, ensuring callers see only the waitlist entries they are permitted to access under strict RBAC. Patients only see their own status, while appropriate staff (receptionists, nurses, admins) can view the entire list for coordination purposes. Sensitive patient identifiers are filtered according to user role.\n\nAs per schema documentation, this retrieves the `healthcare_platform_appointment_waitlists` related to an `appointmentId`, providing audit and compliance features so that data access is properly monitored and restricted. Pagination ensures performant retrieval even for busy time slots. Handling includes validation of appointmentId and clear error signaling for restricted access.","summary":"Retrieve the waitlist for a given appointment from the appointment waitlists table.","parameters":[{"name":"appointmentId","description":"Unique identifier of the appointment for which to retrieve the waitlist.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Query and pagination/filter parameters for searching the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.IRequest"},"responseBody":{"description":"Paginated list of summary entries on the appointment's waitlist.","typeName":"IPageIHealthcarePlatformAppointmentWaitlist.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/patient/appointments/{appointmentId}/waitlists","method":"patch","authorizationRole":"patient","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/technician/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"technician","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific waitlist entry in the healthcare platform appointment system. It accesses the `healthcare_platform_appointment_waitlists` table by appointmentId and waitlistId, returning patient and status details for the specified entry. This operation is intended for staff to verify/manage waitlist status or for the patient to view their own request and any associated updates.","description":"Retrieve detailed information for an individual appointment waitlist entry, including patient, join time, current status (active, promoted, removed), and relevant patient metadata where authorized. Sensitive fields are presented only to authorized roles per privacy and compliance constraints.\n\nUser permissions are strictly enforced—patients can only view their own waitlist entries, while organization and department staff with appropriate scheduling or administrative roles (e.g., receptionist, department head) can access any entry within their allowed scope. Every access is logged and auditable to support HIPAA/data compliance.\n\nHandles validation on appointmentId and waitlistId, returns appropriate error messages for invalid, restricted, or not found entries. This is a single-resource GET operation referencing healthcare_platform_appointment_waitlists as described in the Prisma schema and ERD.","summary":"Get details of a specific appointment waitlist entry.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details about the specified appointment waitlist entry.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/patient/appointments/{appointmentId}/waitlists/{waitlistId}","method":"get","authorizationRole":"patient","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/technician/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"technician","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation creates a new waitlist entry for a specific appointment. It allows patients and authorized staff to add a patient to the waitlist for a specified appointment by submitting the necessary join information (including patientId and optional rationale). The API implements business logic to enforce that patients cannot join a waitlist multiple times for the same appointment and respects capacity/policy limits. The `healthcare_platform_appointment_waitlists` table is used, with join time, status, and audit trail metadata created as per schema rules.","description":"Create a new waitlist entry for a patient on a particular appointment. Patients may self-join the waitlist for an appointment that is currently full; authorized staff can add patients on their behalf in accordance with scheduling policy.\n\nBusiness rules validate that a patient cannot be waitlisted more than once per appointment, and that organization, department, and appointment status permit further waitlisting. All creation events are properly audited, with join time and current status set per schema documentation. Sensitive patient information, if present in the request, is only processed by authorized roles.\n\nImplements compliance with organizational scheduling policies and privacy protections, with all events creating audit logs as enforced by the healthcare platform's business rules. Errors are returned if the appointment does not permit further waitlisting or if business policy is violated.","summary":"Add a waitlist entry for a patient to a specific appointment (join waitlist).","parameters":[{"name":"appointmentId","description":"Unique identifier for the target appointment where waitlisting is requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Patient and contextual information needed to join the waitlist.","typeName":"IHealthcarePlatformAppointmentWaitlist.ICreate"},"responseBody":{"description":"The newly created waitlist record with status and join time.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/patient/appointments/{appointmentId}/waitlists","method":"post","authorizationRole":"patient","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/systemAdmin/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/departmentHead/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/medicalDoctor/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/nurse/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/technician/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"technician","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation updates an existing waitlist entry for a specific appointment, allowing authorized staff or the patient (for their own entry) to change waitlist details such as status (e.g., from active to promoted/removed), or update rationale information. Edits are constrained by the underlying `healthcare_platform_appointment_waitlists` schema, which requires appointmentId and waitlistId to identify the target, and business rules governing who may edit (e.g., staff, or patient for removal).","description":"Update a specific entry on an appointment's waitlist, such as by changing status (e.g., promoted when a slot opens, or removed on patient/clinic action), updating rationale, or other permissible fields per system business rules. The operation is carefully restricted under RBAC; only staff with authority or the patient for their own record may make changes.\n\nAll changes are audited to satisfy compliance, and unauthorized edits result in clear business errors. Validates presence of both appointmentId and waitlistId, enforces that edits are permitted by current status and complies with privacy and safety rules consistent with Prisma model documentation.\n\nOperation references the `healthcare_platform_appointment_waitlists` table and its relationships; all successful changes generate audit logs and enforce any derived business policy such as automatic removal from waitlists on promotion.","summary":"Edit a specific waitlist entry for an appointment.","parameters":[{"name":"appointmentId","description":"Unique identifier for the appointment containing the waitlist entry.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the waitlist entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the waitlist entry, including status/rationale.","typeName":"IHealthcarePlatformAppointmentWaitlist.IUpdate"},"responseBody":{"description":"The updated waitlist record.","typeName":"IHealthcarePlatformAppointmentWaitlist"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","path":"/healthcarePlatform/patient/appointments/{appointmentId}/waitlists/{waitlistId}","method":"put","authorizationRole":"patient","authorizationType":null},{"specification":"This operation permanently erases a specific patient waitlist entry for an appointment in the healthcarePlatform Scheduling system. It targets the healthcare_platform_appointment_waitlists table, removing the waitlist record identified by both appointmentId and waitlistId. This supports administrative and clinical flows for managing appointment availability and waitlist status, including when a patient is promoted from waitlist, cancels their request, or is no longer eligible/needed for the slot.","description":"This API operation is used to delete (hard erase) a patient's waitlist entry from a specific appointment's waitlist in the healthcarePlatform system.\n\nIt is primarily intended for administrative staff, receptionists, or system automations where a patient no longer needs to remain on the waitlist (e.g., patient schedules elsewhere, is promoted, or cancels their interest). The operation ensures compliance by fully removing the waitlist record from the healthcare_platform_appointment_waitlists table, which does not feature a soft delete marker—deletion is permanent and cannot be recovered.\n\nSecurity considerations: Only authorized staff or automation with sufficient privileges may perform this operation. The action is auditable and would typically be recorded in the platform’s audit log under appointment management workflows.\n\nValidation/business rules: Attempting to erase a non-existent or already-deleted waitlistId yields a suitable error response. Erasures associated with active appointments (still scheduled) are permitted; removing waitlist entries for past/canceled appointments may have further policy or audit consequences as per organizational configuration.\n\nRelated operations: Staff may query all waitlist entries for an appointment before erasing or remove multiple via separate API calls. This operation only affects the targeted waitlist record for a given appointment.","summary":"Erase a patient waitlist entry from a specific appointment (hard delete, Scheduling)","parameters":[{"name":"appointmentId","description":"Unique identifier of the target appointment for which the waitlist entry should be removed.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the patient's waitlist entry to be deleted for the given appointment.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"receptionist","name":"erase","path":"/healthcarePlatform/receptionist/appointments/{appointmentId}/waitlists/{waitlistId}","method":"delete"},{"specification":"This operation permanently erases a specific patient waitlist entry for an appointment in the healthcarePlatform Scheduling system. It targets the healthcare_platform_appointment_waitlists table, removing the waitlist record identified by both appointmentId and waitlistId. This supports administrative and clinical flows for managing appointment availability and waitlist status, including when a patient is promoted from waitlist, cancels their request, or is no longer eligible/needed for the slot.","description":"This API operation is used to delete (hard erase) a patient's waitlist entry from a specific appointment's waitlist in the healthcarePlatform system.\n\nIt is primarily intended for administrative staff, receptionists, or system automations where a patient no longer needs to remain on the waitlist (e.g., patient schedules elsewhere, is promoted, or cancels their interest). The operation ensures compliance by fully removing the waitlist record from the healthcare_platform_appointment_waitlists table, which does not feature a soft delete marker—deletion is permanent and cannot be recovered.\n\nSecurity considerations: Only authorized staff or automation with sufficient privileges may perform this operation. The action is auditable and would typically be recorded in the platform’s audit log under appointment management workflows.\n\nValidation/business rules: Attempting to erase a non-existent or already-deleted waitlistId yields a suitable error response. Erasures associated with active appointments (still scheduled) are permitted; removing waitlist entries for past/canceled appointments may have further policy or audit consequences as per organizational configuration.\n\nRelated operations: Staff may query all waitlist entries for an appointment before erasing or remove multiple via separate API calls. This operation only affects the targeted waitlist record for a given appointment.","summary":"Erase a patient waitlist entry from a specific appointment (hard delete, Scheduling)","parameters":[{"name":"appointmentId","description":"Unique identifier of the target appointment for which the waitlist entry should be removed.","schema":{"type":"string","format":"uuid"}},{"name":"waitlistId","description":"Unique identifier of the patient's waitlist entry to be deleted for the given appointment.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/appointments/{appointmentId}/waitlists/{waitlistId}","method":"delete"},{"specification":"This operation retrieves a paginated, searchable, and sortable list of appointment statuses from the healthcare_platform_appointment_statuses table in the healthcarePlatform Scheduling system. It enables business logic to display, filter, or analyze appointment status configurations for organizational workflow, UI display, and analytics purposes.","description":"This API operation allows users with scheduling management privileges to search and retrieve appointment status definitions across the platform. Appointment statuses define the possible states of appointments (e.g., scheduled, confirmed, canceled, no-show) and are critical for scheduling workflows, UI flow, and business rules enforcement.\n\nThis operation queries the healthcare_platform_appointment_statuses table, returning paginated and optionally filtered results. Supported filters may include business_status, display_name, or custom sort_order. The operation returns both core codes and user-facing display names.\n\nSecurity: Typically, this endpoint is available to authenticated users (e.g., receptionists, clinical operations staff) to power UI components, dashboard analytics, or business settings screens. No sensitive data is exposed—content is non-PHI but critical for workflow logic.\n\nValidation: If filters or sorting parameters are invalid, a validation error is generated. Pagination ensures efficient retrieval even with large status dictionaries. Related endpoints include status creation, update, or detail retrieval per appointment status.","summary":"List and search all appointment statuses in the scheduling module.","parameters":[],"requestBody":{"description":"Searching, filtering, or sorting criteria for appointment statuses (e.g., by status_code, display_name, or order).","typeName":"IHealthcarePlatformAppointmentStatus.IRequest"},"responseBody":{"description":"Paginated response containing summary details of all matched appointment statuses.","typeName":"IPageIHealthcarePlatformAppointmentStatus.ISummary"},"authorizationType":null,"authorizationRole":"receptionist","name":"index","path":"/healthcarePlatform/receptionist/appointmentStatuses","method":"patch"},{"specification":"This operation retrieves a paginated, searchable, and sortable list of appointment statuses from the healthcare_platform_appointment_statuses table in the healthcarePlatform Scheduling system. It enables business logic to display, filter, or analyze appointment status configurations for organizational workflow, UI display, and analytics purposes.","description":"This API operation allows users with scheduling management privileges to search and retrieve appointment status definitions across the platform. Appointment statuses define the possible states of appointments (e.g., scheduled, confirmed, canceled, no-show) and are critical for scheduling workflows, UI flow, and business rules enforcement.\n\nThis operation queries the healthcare_platform_appointment_statuses table, returning paginated and optionally filtered results. Supported filters may include business_status, display_name, or custom sort_order. The operation returns both core codes and user-facing display names.\n\nSecurity: Typically, this endpoint is available to authenticated users (e.g., receptionists, clinical operations staff) to power UI components, dashboard analytics, or business settings screens. No sensitive data is exposed—content is non-PHI but critical for workflow logic.\n\nValidation: If filters or sorting parameters are invalid, a validation error is generated. Pagination ensures efficient retrieval even with large status dictionaries. Related endpoints include status creation, update, or detail retrieval per appointment status.","summary":"List and search all appointment statuses in the scheduling module.","parameters":[],"requestBody":{"description":"Searching, filtering, or sorting criteria for appointment statuses (e.g., by status_code, display_name, or order).","typeName":"IHealthcarePlatformAppointmentStatus.IRequest"},"responseBody":{"description":"Paginated response containing summary details of all matched appointment statuses.","typeName":"IPageIHealthcarePlatformAppointmentStatus.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/appointmentStatuses","method":"patch"},{"specification":"This operation retrieves full details of a specific appointment status, identified by its unique statusId, from the healthcare_platform_appointment_statuses table. This is essential for configuration review, workflow logic, and administration in the Scheduling module.","description":"This API operation is used to fetch the detailed definition of a specific appointment status. It returns information such as the workflow code, display label, business grouping (active, closed), and UI sorting order for the status requested by statusId.\n\nAccess to this operation is typically required by scheduling staff, system administrators, or integration clients needing to understand or validate appointment state flows. The associated table (healthcare_platform_appointment_statuses) acts as the canonical registry for system-wide and organizational status options.\n\nSecurity: There is minimal sensitivity—the data is non-PHI and may be accessible to authenticated reception, admin, and scheduling roles. The operation supports business/operational UI and workflow configuration, and is essential for custom rule-building or display logic in downstream applications.\n\nValidation: If statusId does not exist, an error is returned. This endpoint is read-only; updates and creation are managed via separate endpoints.","summary":"Get full details for a single appointment status identified by statusId.","parameters":[{"name":"statusId","description":"Unique identifier for the target appointment status to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed configuration for the appointment status, including code, label, grouping, and sort order.","typeName":"IHealthcarePlatformAppointmentStatus"},"authorizationType":null,"authorizationRole":"receptionist","name":"at","path":"/healthcarePlatform/receptionist/appointmentStatuses/{statusId}","method":"get"},{"specification":"This operation retrieves full details of a specific appointment status, identified by its unique statusId, from the healthcare_platform_appointment_statuses table. This is essential for configuration review, workflow logic, and administration in the Scheduling module.","description":"This API operation is used to fetch the detailed definition of a specific appointment status. It returns information such as the workflow code, display label, business grouping (active, closed), and UI sorting order for the status requested by statusId.\n\nAccess to this operation is typically required by scheduling staff, system administrators, or integration clients needing to understand or validate appointment state flows. The associated table (healthcare_platform_appointment_statuses) acts as the canonical registry for system-wide and organizational status options.\n\nSecurity: There is minimal sensitivity—the data is non-PHI and may be accessible to authenticated reception, admin, and scheduling roles. The operation supports business/operational UI and workflow configuration, and is essential for custom rule-building or display logic in downstream applications.\n\nValidation: If statusId does not exist, an error is returned. This endpoint is read-only; updates and creation are managed via separate endpoints.","summary":"Get full details for a single appointment status identified by statusId.","parameters":[{"name":"statusId","description":"Unique identifier for the target appointment status to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed configuration for the appointment status, including code, label, grouping, and sort order.","typeName":"IHealthcarePlatformAppointmentStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/appointmentStatuses/{statusId}","method":"get"},{"specification":"This operation creates a new appointment status entry in the healthcare_platform_appointment_statuses table in the scheduling module. It allows administrative staff to define new valid status codes, labels, groupings, and ordering for appointment workflow management across the platform.","description":"This API operation enables authorized organization administrators or scheduling staff to create a new appointment status definition. Appointment statuses power the workflow logic of the scheduling subsystem—each status defines a state such as scheduled, confirmed, cancelled, or no-show, and includes both the business code and human label used in the UI.\n\nThe operation creates a row in the healthcare_platform_appointment_statuses table and accepts a creation DTO with fields such as status_code (unique within the table), display_name, business_status, and sort_order.\n\nSecurity: Only roles with explicit scheduling or organizational permission (organizationAdmin, receptionist) may create appointment statuses. Business rules ensure that the status code is unique and well-formed, that required fields are provided, and that sort_order does not conflict with existing records.\n\nValidation: Attempts to create duplicate codes, missing required fields, or illogical business_status/sort_order combinations result in validation errors. The operation is auditable; all creations are tracked as part of configuration change history.\n\nOn success, the full new status definition is returned.","summary":"Create a new appointment status code and configuration in the scheduling system.","parameters":[],"requestBody":{"description":"New appointment status details: unique code, display label, grouping, and sort order.","typeName":"IHealthcarePlatformAppointmentStatus.ICreate"},"responseBody":{"description":"Full definition of the newly-created appointment status, including identifiers and configuration values.","typeName":"IHealthcarePlatformAppointmentStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/appointmentStatuses","method":"post"},{"specification":"Updates the details of a specific appointment status identified by statusId. This operation allows an administrator (systemAdmin or organizationAdmin) to change attributes such as the display name, business status, or sort order of an appointment status in the healthcarePlatform appointment scheduling system, as defined in the healthcare_platform_appointment_statuses table. Only schema-defined fields (display_name, business_status, sort_order, etc.) may be modified. This endpoint supports robust RBAC for system-level and organization-level administrators.","description":"This operation enables a system administrator or organization administrator to update an appointment status, such as its human-readable label, workflow grouping, or sort priority. It is strictly permissioned and requires that 'statusId' is a valid UUID and the status must exist.\n\nIf the appointment status is system-reserved, attempts to modify critical codes are subject to further restriction. The operation will reject modifications to non-existent, deleted, or non-schema fields. This is essential for managing visible and operational status codes in complex organizational workflows. Related endpoints include single status retrieval (GET), deletion (DELETE), and status code search (PATCH or GET).","summary":"Update an appointment status in healthcare_platform_appointment_statuses table.","parameters":[{"name":"statusId","description":"Unique identifier of the appointment status to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for appointment status, including display name, business status, or sort order.","typeName":"IHealthcarePlatformAppointmentStatus.IUpdate"},"responseBody":{"description":"Updated appointment status details after modification.","typeName":"IHealthcarePlatformAppointmentStatus"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/appointmentStatuses/{statusId}","method":"put"},{"specification":"Updates the details of a specific appointment status identified by statusId. This operation allows an administrator (systemAdmin or organizationAdmin) to change attributes such as the display name, business status, or sort order of an appointment status in the healthcarePlatform appointment scheduling system, as defined in the healthcare_platform_appointment_statuses table. Only schema-defined fields (display_name, business_status, sort_order, etc.) may be modified. This endpoint supports robust RBAC for system-level and organization-level administrators.","description":"This operation enables a system administrator or organization administrator to update an appointment status, such as its human-readable label, workflow grouping, or sort priority. It is strictly permissioned and requires that 'statusId' is a valid UUID and the status must exist.\n\nIf the appointment status is system-reserved, attempts to modify critical codes are subject to further restriction. The operation will reject modifications to non-existent, deleted, or non-schema fields. This is essential for managing visible and operational status codes in complex organizational workflows. Related endpoints include single status retrieval (GET), deletion (DELETE), and status code search (PATCH or GET).","summary":"Update an appointment status in healthcare_platform_appointment_statuses table.","parameters":[{"name":"statusId","description":"Unique identifier of the appointment status to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for appointment status, including display name, business status, or sort order.","typeName":"IHealthcarePlatformAppointmentStatus.IUpdate"},"responseBody":{"description":"Updated appointment status details after modification.","typeName":"IHealthcarePlatformAppointmentStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/appointmentStatuses/{statusId}","method":"put"},{"specification":"Deletes an appointment status from the healthcare_platform_appointment_statuses table by statusId. Since the schema for statuses includes no soft delete field, this operation is a hard delete intended for systemAdmin or organizationAdmin roles. Before deletion, the system should verify that no pending appointments reference this status or that business logic safely handles such relationships.","description":"This operation permanently removes an appointment status from the platform, restricted to system administrators and organization administrators. The statusId parameter must be a valid UUID referencing an existing appointment status.\n\nThis operation is not reversible, and any attempt to delete a non-existent or currently referenced status will be rejected. Associated appointments or business logic using the status code should be reviewed before deletion. Use this only for deprecated custom or misconfigured statuses. Related endpoints include single status retrieval (GET), updating (PUT), and listing all appointment statuses (PATCH/GET).","summary":"Delete an appointment status (hard delete) from healthcare_platform_appointment_statuses table.","parameters":[{"name":"statusId","description":"Unique identifier of the appointment status to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/appointmentStatuses/{statusId}","method":"delete"},{"specification":"Deletes an appointment status from the healthcare_platform_appointment_statuses table by statusId. Since the schema for statuses includes no soft delete field, this operation is a hard delete intended for systemAdmin or organizationAdmin roles. Before deletion, the system should verify that no pending appointments reference this status or that business logic safely handles such relationships.","description":"This operation permanently removes an appointment status from the platform, restricted to system administrators and organization administrators. The statusId parameter must be a valid UUID referencing an existing appointment status.\n\nThis operation is not reversible, and any attempt to delete a non-existent or currently referenced status will be rejected. Associated appointments or business logic using the status code should be reviewed before deletion. Use this only for deprecated custom or misconfigured statuses. Related endpoints include single status retrieval (GET), updating (PUT), and listing all appointment statuses (PATCH/GET).","summary":"Delete an appointment status (hard delete) from healthcare_platform_appointment_statuses table.","parameters":[{"name":"statusId","description":"Unique identifier of the appointment status to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/appointmentStatuses/{statusId}","method":"delete"},{"specification":"Retrieves a paginated, filterable list of all resource schedules as stored in the healthcare_platform_resource_schedules table, filtering by search criteria and supporting advanced pagination and sorting for provider, room, and equipment resource availability. Restricted to system administrators and organization administrators for comprehensive resource management.","description":"Allows system-level or organization-level administrators to list all configured resource schedules, with support for advanced filtering (by organization, resource type or ID, availability windows, recurrence), paging, and sorting. Only non-soft-deleted records will be returned.\n\nThe response provides schedule metadata needed for administrative decision making and calendar UI construction. Security is enforced by role-based access restriction. Related endpoints include single resource schedule retrieval (GET), creation (POST), update (PUT), and deletion (DELETE).","summary":"List all resource schedules with search and pagination in healthcare_platform_resource_schedules table.","parameters":[],"requestBody":{"description":"Resource schedule search and pagination parameters.","typeName":"IHealthcarePlatformResourceSchedule.IRequest"},"responseBody":{"description":"Paginated list of resource schedules matching the search criteria.","typeName":"IPageIHealthcarePlatformResourceSchedule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/resourceSchedules","method":"patch"},{"specification":"Retrieves a paginated, filterable list of all resource schedules as stored in the healthcare_platform_resource_schedules table, filtering by search criteria and supporting advanced pagination and sorting for provider, room, and equipment resource availability. Restricted to system administrators and organization administrators for comprehensive resource management.","description":"Allows system-level or organization-level administrators to list all configured resource schedules, with support for advanced filtering (by organization, resource type or ID, availability windows, recurrence), paging, and sorting. Only non-soft-deleted records will be returned.\n\nThe response provides schedule metadata needed for administrative decision making and calendar UI construction. Security is enforced by role-based access restriction. Related endpoints include single resource schedule retrieval (GET), creation (POST), update (PUT), and deletion (DELETE).","summary":"List all resource schedules with search and pagination in healthcare_platform_resource_schedules table.","parameters":[],"requestBody":{"description":"Resource schedule search and pagination parameters.","typeName":"IHealthcarePlatformResourceSchedule.IRequest"},"responseBody":{"description":"Paginated list of resource schedules matching the search criteria.","typeName":"IPageIHealthcarePlatformResourceSchedule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/resourceSchedules","method":"patch"},{"specification":"Retrieves full configuration details of a resource schedule entry from healthcare_platform_resource_schedules, identified by resourceScheduleId. Returns schedule configuration for a provider, room, or equipment for administrative review and scheduling control. Permitted for system admins and organization admins.","description":"Permits privileged administrators to view detailed configuration of a specific resource schedule entry identified by resourceScheduleId, which must be a valid UUID. The response includes all resource schedule configuration fields, suitable for display in administrative dashboards, resource auditing, or advanced scheduling logic.\n\nIf the entry does not exist or has been soft-deleted, an error will be returned. Related endpoints: creation (POST), update (PUT), deletion (DELETE), and schedule list (PATCH/GET).","summary":"Retrieve details for a single resource schedule in healthcare_platform_resource_schedules table.","parameters":[{"name":"resourceScheduleId","description":"Unique identifier of the resource schedule to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Resource schedule configuration details for the requested entry.","typeName":"IHealthcarePlatformResourceSchedule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/resourceSchedules/{resourceScheduleId}","method":"get"},{"specification":"Retrieves full configuration details of a resource schedule entry from healthcare_platform_resource_schedules, identified by resourceScheduleId. Returns schedule configuration for a provider, room, or equipment for administrative review and scheduling control. Permitted for system admins and organization admins.","description":"Permits privileged administrators to view detailed configuration of a specific resource schedule entry identified by resourceScheduleId, which must be a valid UUID. The response includes all resource schedule configuration fields, suitable for display in administrative dashboards, resource auditing, or advanced scheduling logic.\n\nIf the entry does not exist or has been soft-deleted, an error will be returned. Related endpoints: creation (POST), update (PUT), deletion (DELETE), and schedule list (PATCH/GET).","summary":"Retrieve details for a single resource schedule in healthcare_platform_resource_schedules table.","parameters":[{"name":"resourceScheduleId","description":"Unique identifier of the resource schedule to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Resource schedule configuration details for the requested entry.","typeName":"IHealthcarePlatformResourceSchedule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/resourceSchedules/{resourceScheduleId}","method":"get"},{"specification":"This operation allows creation of a new resource schedule in the platform, reflecting the healthcare organization’s ability to define when providers, rooms, or equipment are available for appointments and clinical operations. It directly manipulates the healthcare_platform_resource_schedules table. Only authorized staff (likely org admins or scheduling managers) may create custom availability patterns for staff or physical/technical resources. The structure includes start/end time, recurrence, resource polymorphism, and exception (blocked) dates for advanced schedule logic. Validation ensures schedules do not overlap for the same resource, and constraints from organizational calendar settings are enforced. Business rules require full audit and compliance traces for every creation event.","path":"/healthcarePlatform/organizationAdmin/resourceSchedules","method":"post","summary":"Create a new resource schedule for provider/room/equipment availability (healthcare_platform_resource_schedules)","description":"Creates a new resource schedule for a provider, room, or equipment in a healthcare organization. This is a key administrative capability and is restricted to scheduling admins or org-level staff as per RBAC rules. Resource schedules define the available hours and recurrence for organizational assets.\n\nThe operation corresponds to the healthcare_platform_resource_schedules table, utilizing fields such as resource_type, resource_id, available_start_time, available_end_time, recurrence_pattern, and exception_dates. The system ensures no overlapping schedules for the same resource and that all times fall within organization-wide calendar constraints.\n\nSecurity checks ensure only properly assigned roles can execute this operation; the audit trail will store the responsible user and timestamp. Related endpoints for updating or deleting resource schedules can be used for lifecycle management. Error handling includes uniqueness validation and overlap detection, with business logic enforcing time and policy compliance.","parameters":[],"requestBody":{"description":"Request body describing the resource, available time windows, and recurrence/exception details for the resource schedule.","typeName":"IHealthcarePlatformResourceSchedule.ICreate"},"responseBody":{"description":"The created resource schedule’s complete details after validation and audit entry.","typeName":"IHealthcarePlatformResourceSchedule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation enables administrative users to update details of an existing resource schedule, such as changing the availability window, recurrence, or affected resource. It works on the healthcare_platform_resource_schedules table through a unique identifier. Only organization admins or delegated scheduling managers may use this operation. Critical validation checks include ensuring updates do not cause schedule overlaps, observing compliance with calendar policies, and maintaining a full audit trail of changes for traceability.","path":"/healthcarePlatform/organizationAdmin/resourceSchedules/{resourceScheduleId}","method":"put","summary":"Update resource schedule details (healthcare_platform_resource_schedules) by ID","description":"Updates an existing resource schedule identified by resourceScheduleId, allowing modification of the available start/end times, resource assignment, recurrence pattern, and exceptions. This endpoint is critical for adapting room/provider/equipment schedules as operational needs change.\n\nThis operation is tied to the healthcare_platform_resource_schedules table and requires resourceScheduleId as a path parameter. Input structure follows IHealthcarePlatformResourceSchedule.IUpdate. Uniqueness and overlap rules are strictly checked, and changes are logged in the organization’s audit history.\n\nSecurity is enforced so only appropriate org-level scheduling staff can perform updates. Validation logic prevents overlapping time slots or policy violations. This may be used in combination with the erase operation for full lifecycle resource management. Errors are returned if an update would cause an invalid state.","parameters":[{"name":"resourceScheduleId","description":"UUID of the resource schedule to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update details and properties for the target resource schedule.","typeName":"IHealthcarePlatformResourceSchedule.IUpdate"},"responseBody":{"description":"The updated resource schedule record after all validations and policy checks.","typeName":"IHealthcarePlatformResourceSchedule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation permanently removes a resource schedule from the database, including its time windows and recurrence settings. It affects the healthcare_platform_resource_schedules table and is strictly limited to authorized administrative roles at the organization level, given the impact on scheduling and availability management. Deletion is a hard delete as there is no soft delete column. System will log the event for audit compliance, and all implications for scheduled appointments should be handled in provider logic.","path":"/healthcarePlatform/organizationAdmin/resourceSchedules/{resourceScheduleId}","method":"delete","summary":"Permanently delete a resource schedule (healthcare_platform_resource_schedules) by ID","description":"Deletes an existing resource schedule identified by resourceScheduleId. This is a hard delete operation, removing the schedule record and disallowing further use in booking logic. Directly manipulates the healthcare_platform_resource_schedules table. No request body is needed.\n\nAppropriate for administrative staff needing to retire or clean up outdated provider, room, or equipment availabilities. Security policies ensure only authorized users at the organization level may erase schedules. The system will log who performed the deletion for auditing purposes. Any dependent scheduled appointments must be handled or migrated by upstream business logic.\n\nErrors are returned if the schedule does not exist or if deletion is not permitted due to policy or integrations.","parameters":[{"name":"resourceScheduleId","description":"UUID of the resource schedule to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation provides authenticated users the ability to search, filter, and page through room reservation records within their organization context. It is built atop the healthcare_platform_room_reservations table, supporting queries by room, reservation type, time window, and status. Results can be paginated and sorted by reservation date or status. Only appropriate roles (org/department admins, scheduling staff, etc.) have access, ensuring compliance with organizational separation and audit requirements. All access is logged for compliance. Results may be limited or filtered further based on the requesting user's scope.","path":"/healthcarePlatform/organizationAdmin/roomReservations","method":"patch","summary":"Search and retrieve a filtered, paginated list of room reservation records (healthcare_platform_room_reservations)","description":"Enables searching and retrieval of room reservation records within an organization, using advanced filters for resource, reservation period, status, and type. The operation is performed on the healthcare_platform_room_reservations table, returning paginated results for dashboard or reporting needs.\n\nInput parameters support free-form and precise queries, and the endpoint is accessible to administrative, department, and authorized scheduling roles. All search activity is logged for compliance. Only records for the requester's organization/departments are included, enforcing strict data boundary policies.\n\nValidation logic ensures user queries cannot cross organization boundaries and that result sets are filtered per the user's assigned scope. Related endpoints for creating or modifying reservations support the full scheduling lifecycle. Error handling communicates policy violations, permission issues, or query problems.","parameters":[],"requestBody":{"description":"Filter and pagination parameters for searching room reservations.","typeName":"IHealthcarePlatformRoomReservation.IRequest"},"responseBody":{"description":"Paginated list of matching room reservation summary records and metadata.","typeName":"IPageIHealthcarePlatformRoomReservation.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation provides authenticated users the ability to search, filter, and page through room reservation records within their organization context. It is built atop the healthcare_platform_room_reservations table, supporting queries by room, reservation type, time window, and status. Results can be paginated and sorted by reservation date or status. Only appropriate roles (org/department admins, scheduling staff, etc.) have access, ensuring compliance with organizational separation and audit requirements. All access is logged for compliance. Results may be limited or filtered further based on the requesting user's scope.","path":"/healthcarePlatform/departmentHead/roomReservations","method":"patch","summary":"Search and retrieve a filtered, paginated list of room reservation records (healthcare_platform_room_reservations)","description":"Enables searching and retrieval of room reservation records within an organization, using advanced filters for resource, reservation period, status, and type. The operation is performed on the healthcare_platform_room_reservations table, returning paginated results for dashboard or reporting needs.\n\nInput parameters support free-form and precise queries, and the endpoint is accessible to administrative, department, and authorized scheduling roles. All search activity is logged for compliance. Only records for the requester's organization/departments are included, enforcing strict data boundary policies.\n\nValidation logic ensures user queries cannot cross organization boundaries and that result sets are filtered per the user's assigned scope. Related endpoints for creating or modifying reservations support the full scheduling lifecycle. Error handling communicates policy violations, permission issues, or query problems.","parameters":[],"requestBody":{"description":"Filter and pagination parameters for searching room reservations.","typeName":"IHealthcarePlatformRoomReservation.IRequest"},"responseBody":{"description":"Paginated list of matching room reservation summary records and metadata.","typeName":"IPageIHealthcarePlatformRoomReservation.ISummary"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index"},{"specification":"This operation retrieves detailed information about a specific room reservation from the healthcarePlatform's scheduling domain. It operates on the healthcare_platform_room_reservations table. The endpoint allows valid users (e.g., system admins, organization admins, department heads, receptionists) to obtain reservation metadata, status, associated room, resource, appointment linkage, and timely audit-relevant details. This is essential for schedules, maintenance management, and conflict resolution.","path":"/healthcarePlatform/organizationAdmin/roomReservations/{roomReservationId}","method":"get","summary":"Retrieve detailed information on a room reservation (healthcare_platform_room_reservations)","description":"This API endpoint allows users to retrieve complete details of a specific room reservation by its unique identifier. Room reservations in the system support operational and clinical scheduling, including appointments, maintenance, cleaning, and admin activities. \n\nSecurity considerations: Only users with appropriate privileges (e.g., admins, scheduling staff) may access this data. All access is audited for compliance. Returned data includes the room reference, time window, reservation type, appointment connection (if present), and modification audit timestamps.\n\nRoom reservations are linked to the organization's resource registry but are not deleted when the resource is decommissioned, ensuring historical reporting. Errors occur when the roomReservationId does not exist or the user does not have access rights, with a clear 404/403 error structure. Soft deleted reservations are not returned by default.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the target room reservation","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete room reservation details for the given reservation ID","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation retrieves detailed information about a specific room reservation from the healthcarePlatform's scheduling domain. It operates on the healthcare_platform_room_reservations table. The endpoint allows valid users (e.g., system admins, organization admins, department heads, receptionists) to obtain reservation metadata, status, associated room, resource, appointment linkage, and timely audit-relevant details. This is essential for schedules, maintenance management, and conflict resolution.","path":"/healthcarePlatform/departmentHead/roomReservations/{roomReservationId}","method":"get","summary":"Retrieve detailed information on a room reservation (healthcare_platform_room_reservations)","description":"This API endpoint allows users to retrieve complete details of a specific room reservation by its unique identifier. Room reservations in the system support operational and clinical scheduling, including appointments, maintenance, cleaning, and admin activities. \n\nSecurity considerations: Only users with appropriate privileges (e.g., admins, scheduling staff) may access this data. All access is audited for compliance. Returned data includes the room reference, time window, reservation type, appointment connection (if present), and modification audit timestamps.\n\nRoom reservations are linked to the organization's resource registry but are not deleted when the resource is decommissioned, ensuring historical reporting. Errors occur when the roomReservationId does not exist or the user does not have access rights, with a clear 404/403 error structure. Soft deleted reservations are not returned by default.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the target room reservation","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete room reservation details for the given reservation ID","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at"},{"specification":"This operation retrieves detailed information about a specific room reservation from the healthcarePlatform's scheduling domain. It operates on the healthcare_platform_room_reservations table. The endpoint allows valid users (e.g., system admins, organization admins, department heads, receptionists) to obtain reservation metadata, status, associated room, resource, appointment linkage, and timely audit-relevant details. This is essential for schedules, maintenance management, and conflict resolution.","path":"/healthcarePlatform/receptionist/roomReservations/{roomReservationId}","method":"get","summary":"Retrieve detailed information on a room reservation (healthcare_platform_room_reservations)","description":"This API endpoint allows users to retrieve complete details of a specific room reservation by its unique identifier. Room reservations in the system support operational and clinical scheduling, including appointments, maintenance, cleaning, and admin activities. \n\nSecurity considerations: Only users with appropriate privileges (e.g., admins, scheduling staff) may access this data. All access is audited for compliance. Returned data includes the room reference, time window, reservation type, appointment connection (if present), and modification audit timestamps.\n\nRoom reservations are linked to the organization's resource registry but are not deleted when the resource is decommissioned, ensuring historical reporting. Errors occur when the roomReservationId does not exist or the user does not have access rights, with a clear 404/403 error structure. Soft deleted reservations are not returned by default.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the target room reservation","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete room reservation details for the given reservation ID","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"receptionist","name":"at"},{"specification":"This operation retrieves detailed information about a specific room reservation from the healthcarePlatform's scheduling domain. It operates on the healthcare_platform_room_reservations table. The endpoint allows valid users (e.g., system admins, organization admins, department heads, receptionists) to obtain reservation metadata, status, associated room, resource, appointment linkage, and timely audit-relevant details. This is essential for schedules, maintenance management, and conflict resolution.","path":"/healthcarePlatform/systemAdmin/roomReservations/{roomReservationId}","method":"get","summary":"Retrieve detailed information on a room reservation (healthcare_platform_room_reservations)","description":"This API endpoint allows users to retrieve complete details of a specific room reservation by its unique identifier. Room reservations in the system support operational and clinical scheduling, including appointments, maintenance, cleaning, and admin activities. \n\nSecurity considerations: Only users with appropriate privileges (e.g., admins, scheduling staff) may access this data. All access is audited for compliance. Returned data includes the room reference, time window, reservation type, appointment connection (if present), and modification audit timestamps.\n\nRoom reservations are linked to the organization's resource registry but are not deleted when the resource is decommissioned, ensuring historical reporting. Errors occur when the roomReservationId does not exist or the user does not have access rights, with a clear 404/403 error structure. Soft deleted reservations are not returned by default.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the target room reservation","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete room reservation details for the given reservation ID","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation creates a new room reservation in the healthcarePlatform for use with clinical and administrative appointment scheduling. It operates on the healthcare_platform_room_reservations table and enables authorized users to book resources for time windows, associate them with appointments, and manage maintenance periods as required for operational continuity.","path":"/healthcarePlatform/organizationAdmin/roomReservations","method":"post","summary":"Create a new room reservation (healthcare_platform_room_reservations)","description":"This API creates a new reservation for a physical room within an organization, supporting workflows including appointment booking, maintenance blocking, and event management. The request provides room, time, type, and optional appointment linkage. \n\nSecurity considerations: Only scheduling-capable roles (system admin, organization admin, department head, receptionist) may invoke this operation; audit logs record reservation details, actor, and rationale.\n\nValidation includes preventing double-bookings, enforcing minimum lead/cancel times, and checking room/resource existence. Errors include invalid time windows, permission issues, or pre-existing reservation conflict. On success, the full reservation details are returned for further workflow integration and dashboard purposes.","parameters":[],"requestBody":{"description":"Details for new room reservation entry, including room, schedule, and reservation type.","typeName":"IHealthcarePlatformRoomReservation.ICreate"},"responseBody":{"description":"Information on the created room reservation","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation creates a new room reservation in the healthcarePlatform for use with clinical and administrative appointment scheduling. It operates on the healthcare_platform_room_reservations table and enables authorized users to book resources for time windows, associate them with appointments, and manage maintenance periods as required for operational continuity.","path":"/healthcarePlatform/departmentHead/roomReservations","method":"post","summary":"Create a new room reservation (healthcare_platform_room_reservations)","description":"This API creates a new reservation for a physical room within an organization, supporting workflows including appointment booking, maintenance blocking, and event management. The request provides room, time, type, and optional appointment linkage. \n\nSecurity considerations: Only scheduling-capable roles (system admin, organization admin, department head, receptionist) may invoke this operation; audit logs record reservation details, actor, and rationale.\n\nValidation includes preventing double-bookings, enforcing minimum lead/cancel times, and checking room/resource existence. Errors include invalid time windows, permission issues, or pre-existing reservation conflict. On success, the full reservation details are returned for further workflow integration and dashboard purposes.","parameters":[],"requestBody":{"description":"Details for new room reservation entry, including room, schedule, and reservation type.","typeName":"IHealthcarePlatformRoomReservation.ICreate"},"responseBody":{"description":"Information on the created room reservation","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create"},{"specification":"This operation creates a new room reservation in the healthcarePlatform for use with clinical and administrative appointment scheduling. It operates on the healthcare_platform_room_reservations table and enables authorized users to book resources for time windows, associate them with appointments, and manage maintenance periods as required for operational continuity.","path":"/healthcarePlatform/receptionist/roomReservations","method":"post","summary":"Create a new room reservation (healthcare_platform_room_reservations)","description":"This API creates a new reservation for a physical room within an organization, supporting workflows including appointment booking, maintenance blocking, and event management. The request provides room, time, type, and optional appointment linkage. \n\nSecurity considerations: Only scheduling-capable roles (system admin, organization admin, department head, receptionist) may invoke this operation; audit logs record reservation details, actor, and rationale.\n\nValidation includes preventing double-bookings, enforcing minimum lead/cancel times, and checking room/resource existence. Errors include invalid time windows, permission issues, or pre-existing reservation conflict. On success, the full reservation details are returned for further workflow integration and dashboard purposes.","parameters":[],"requestBody":{"description":"Details for new room reservation entry, including room, schedule, and reservation type.","typeName":"IHealthcarePlatformRoomReservation.ICreate"},"responseBody":{"description":"Information on the created room reservation","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"receptionist","name":"create"},{"specification":"This operation creates a new room reservation in the healthcarePlatform for use with clinical and administrative appointment scheduling. It operates on the healthcare_platform_room_reservations table and enables authorized users to book resources for time windows, associate them with appointments, and manage maintenance periods as required for operational continuity.","path":"/healthcarePlatform/systemAdmin/roomReservations","method":"post","summary":"Create a new room reservation (healthcare_platform_room_reservations)","description":"This API creates a new reservation for a physical room within an organization, supporting workflows including appointment booking, maintenance blocking, and event management. The request provides room, time, type, and optional appointment linkage. \n\nSecurity considerations: Only scheduling-capable roles (system admin, organization admin, department head, receptionist) may invoke this operation; audit logs record reservation details, actor, and rationale.\n\nValidation includes preventing double-bookings, enforcing minimum lead/cancel times, and checking room/resource existence. Errors include invalid time windows, permission issues, or pre-existing reservation conflict. On success, the full reservation details are returned for further workflow integration and dashboard purposes.","parameters":[],"requestBody":{"description":"Details for new room reservation entry, including room, schedule, and reservation type.","typeName":"IHealthcarePlatformRoomReservation.ICreate"},"responseBody":{"description":"Information on the created room reservation","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation updates an existing room reservation within the healthcarePlatform. It operates on the healthcare_platform_room_reservations table and is used to reschedule, reclassify, or re-link room reservations as part of clinical, operational, or maintenance workflows. Only authorized roles may update reservations; audit trail is enforced for compliance.","path":"/healthcarePlatform/organizationAdmin/roomReservations/{roomReservationId}","method":"put","summary":"Update an existing room reservation (healthcare_platform_room_reservations)","description":"Allows scheduling staff to update the attributes of a specific room reservation, such as reservation time, room assignment, reservation type, or linkage to appointment.\n\nSecurity considerations: Only system admins, organization admins, department heads, or receptionists may update a room reservation, and all actions are audited for compliance and resource conflict review.\n\nValidation: If the update would create a conflict (double-booking or violating lead/cancel window) or the reservation no longer exists, the system returns a 400/404 error. Successful updates reflect the new resource/booked window and audit timestamps. Soft-deleted reservations cannot be updated.\n\nThe endpoint references the healthcare_platform_room_reservations schema and validates against all schema-defined relations to ensure referential integrity.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the room reservation, including new timing, resource, or appointment connectivity","typeName":"IHealthcarePlatformRoomReservation.IUpdate"},"responseBody":{"description":"Updated room reservation information reflecting new schedule or attributes","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation updates an existing room reservation within the healthcarePlatform. It operates on the healthcare_platform_room_reservations table and is used to reschedule, reclassify, or re-link room reservations as part of clinical, operational, or maintenance workflows. Only authorized roles may update reservations; audit trail is enforced for compliance.","path":"/healthcarePlatform/departmentHead/roomReservations/{roomReservationId}","method":"put","summary":"Update an existing room reservation (healthcare_platform_room_reservations)","description":"Allows scheduling staff to update the attributes of a specific room reservation, such as reservation time, room assignment, reservation type, or linkage to appointment.\n\nSecurity considerations: Only system admins, organization admins, department heads, or receptionists may update a room reservation, and all actions are audited for compliance and resource conflict review.\n\nValidation: If the update would create a conflict (double-booking or violating lead/cancel window) or the reservation no longer exists, the system returns a 400/404 error. Successful updates reflect the new resource/booked window and audit timestamps. Soft-deleted reservations cannot be updated.\n\nThe endpoint references the healthcare_platform_room_reservations schema and validates against all schema-defined relations to ensure referential integrity.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the room reservation, including new timing, resource, or appointment connectivity","typeName":"IHealthcarePlatformRoomReservation.IUpdate"},"responseBody":{"description":"Updated room reservation information reflecting new schedule or attributes","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update"},{"specification":"This operation updates an existing room reservation within the healthcarePlatform. It operates on the healthcare_platform_room_reservations table and is used to reschedule, reclassify, or re-link room reservations as part of clinical, operational, or maintenance workflows. Only authorized roles may update reservations; audit trail is enforced for compliance.","path":"/healthcarePlatform/receptionist/roomReservations/{roomReservationId}","method":"put","summary":"Update an existing room reservation (healthcare_platform_room_reservations)","description":"Allows scheduling staff to update the attributes of a specific room reservation, such as reservation time, room assignment, reservation type, or linkage to appointment.\n\nSecurity considerations: Only system admins, organization admins, department heads, or receptionists may update a room reservation, and all actions are audited for compliance and resource conflict review.\n\nValidation: If the update would create a conflict (double-booking or violating lead/cancel window) or the reservation no longer exists, the system returns a 400/404 error. Successful updates reflect the new resource/booked window and audit timestamps. Soft-deleted reservations cannot be updated.\n\nThe endpoint references the healthcare_platform_room_reservations schema and validates against all schema-defined relations to ensure referential integrity.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the room reservation, including new timing, resource, or appointment connectivity","typeName":"IHealthcarePlatformRoomReservation.IUpdate"},"responseBody":{"description":"Updated room reservation information reflecting new schedule or attributes","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"receptionist","name":"update"},{"specification":"This operation updates an existing room reservation within the healthcarePlatform. It operates on the healthcare_platform_room_reservations table and is used to reschedule, reclassify, or re-link room reservations as part of clinical, operational, or maintenance workflows. Only authorized roles may update reservations; audit trail is enforced for compliance.","path":"/healthcarePlatform/systemAdmin/roomReservations/{roomReservationId}","method":"put","summary":"Update an existing room reservation (healthcare_platform_room_reservations)","description":"Allows scheduling staff to update the attributes of a specific room reservation, such as reservation time, room assignment, reservation type, or linkage to appointment.\n\nSecurity considerations: Only system admins, organization admins, department heads, or receptionists may update a room reservation, and all actions are audited for compliance and resource conflict review.\n\nValidation: If the update would create a conflict (double-booking or violating lead/cancel window) or the reservation no longer exists, the system returns a 400/404 error. Successful updates reflect the new resource/booked window and audit timestamps. Soft-deleted reservations cannot be updated.\n\nThe endpoint references the healthcare_platform_room_reservations schema and validates against all schema-defined relations to ensure referential integrity.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the room reservation, including new timing, resource, or appointment connectivity","typeName":"IHealthcarePlatformRoomReservation.IUpdate"},"responseBody":{"description":"Updated room reservation information reflecting new schedule or attributes","typeName":"IHealthcarePlatformRoomReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation permanently removes a room reservation from the healthcarePlatform system. This is a hard delete, executed directly on the healthcare_platform_room_reservations table according to the schema (requires 'deleted_at' field update for soft-deletion; otherwise, physical removal). Only authorized users may erase the reservation, and the action is fully audited.","path":"/healthcarePlatform/organizationAdmin/roomReservations/{roomReservationId}","method":"delete","summary":"Delete a room reservation by ID (healthcare_platform_room_reservations)","description":"The API endpoint allows authorized users (admins, department heads, receptionists) to delete an existing room reservation by unique ID. This action marks the reservation as deleted for compliance-mandated record retention (soft delete semantics, setting 'deleted_at').\n\nSecurity: Only users with scheduling roles may perform this operation, and all actions are audit-logged with reference to actor, timestamp, and affected resource.\n\nSuccessful erasure results in the record becoming unavailable to standard queries. Attempts to delete a nonexistent or already deleted reservation return a 404.\n\nRelated operations: Room reservation search, room scheduling, and audit log inspection may reference the same entity for organizational workflows and compliance controls.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation permanently removes a room reservation from the healthcarePlatform system. This is a hard delete, executed directly on the healthcare_platform_room_reservations table according to the schema (requires 'deleted_at' field update for soft-deletion; otherwise, physical removal). Only authorized users may erase the reservation, and the action is fully audited.","path":"/healthcarePlatform/departmentHead/roomReservations/{roomReservationId}","method":"delete","summary":"Delete a room reservation by ID (healthcare_platform_room_reservations)","description":"The API endpoint allows authorized users (admins, department heads, receptionists) to delete an existing room reservation by unique ID. This action marks the reservation as deleted for compliance-mandated record retention (soft delete semantics, setting 'deleted_at').\n\nSecurity: Only users with scheduling roles may perform this operation, and all actions are audit-logged with reference to actor, timestamp, and affected resource.\n\nSuccessful erasure results in the record becoming unavailable to standard queries. Attempts to delete a nonexistent or already deleted reservation return a 404.\n\nRelated operations: Room reservation search, room scheduling, and audit log inspection may reference the same entity for organizational workflows and compliance controls.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"departmentHead","name":"erase"},{"specification":"This operation permanently removes a room reservation from the healthcarePlatform system. This is a hard delete, executed directly on the healthcare_platform_room_reservations table according to the schema (requires 'deleted_at' field update for soft-deletion; otherwise, physical removal). Only authorized users may erase the reservation, and the action is fully audited.","path":"/healthcarePlatform/receptionist/roomReservations/{roomReservationId}","method":"delete","summary":"Delete a room reservation by ID (healthcare_platform_room_reservations)","description":"The API endpoint allows authorized users (admins, department heads, receptionists) to delete an existing room reservation by unique ID. This action marks the reservation as deleted for compliance-mandated record retention (soft delete semantics, setting 'deleted_at').\n\nSecurity: Only users with scheduling roles may perform this operation, and all actions are audit-logged with reference to actor, timestamp, and affected resource.\n\nSuccessful erasure results in the record becoming unavailable to standard queries. Attempts to delete a nonexistent or already deleted reservation return a 404.\n\nRelated operations: Room reservation search, room scheduling, and audit log inspection may reference the same entity for organizational workflows and compliance controls.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"receptionist","name":"erase"},{"specification":"This operation permanently removes a room reservation from the healthcarePlatform system. This is a hard delete, executed directly on the healthcare_platform_room_reservations table according to the schema (requires 'deleted_at' field update for soft-deletion; otherwise, physical removal). Only authorized users may erase the reservation, and the action is fully audited.","path":"/healthcarePlatform/systemAdmin/roomReservations/{roomReservationId}","method":"delete","summary":"Delete a room reservation by ID (healthcare_platform_room_reservations)","description":"The API endpoint allows authorized users (admins, department heads, receptionists) to delete an existing room reservation by unique ID. This action marks the reservation as deleted for compliance-mandated record retention (soft delete semantics, setting 'deleted_at').\n\nSecurity: Only users with scheduling roles may perform this operation, and all actions are audit-logged with reference to actor, timestamp, and affected resource.\n\nSuccessful erasure results in the record becoming unavailable to standard queries. Attempts to delete a nonexistent or already deleted reservation return a 404.\n\nRelated operations: Room reservation search, room scheduling, and audit log inspection may reference the same entity for organizational workflows and compliance controls.","parameters":[{"name":"roomReservationId","description":"Unique identifier of the room reservation to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"This operation provides an advanced search and paginated listing of equipment reservations within the healthcare platform. It allows users to filter by organization, resource, reservation type, room, and equipment, supporting compliance and resource management. Refers to the healthcare_platform_equipment_reservations table in the Prisma schema, and supports complex queries such as filtering by time window, reservation type, and availability. This operation enables administrators and managerial staff to oversee and optimize allocation of physical and technical resources throughout the organization.","description":"Retrieve a filtered and paginated list of equipment reservations within the healthcare platform. This supports key operational activities including scheduling, maintenance, and resource allocation for procedures or appointments.\n\nSecurity and access are governed by role-based permissions (e.g., systemAdmin, organizationAdmin, departmentHead), ensuring that only authorized staff may view or manage reservations relevant to their organizational context. Users may search by resource type, time slot, resource assignment, reservation reason/type, and status.\n\nThis operation is based on the healthcare_platform_equipment_reservations table, offering all fields necessary for compliance/audit reporting and workflow optimization. The response provides detailed reservation data, including any linked room, appointment, or blackout period, and includes pagination for scalable access.\n\nRelated APIs include creation (POST), update (PUT), and detail retrieval (GET) for single reservations. Error handling will include validation for search parameters, role visibility limitations, and anti-pattern detection for overlapping/conflicting reservations.","summary":"Search and retrieve a paginated list of equipment reservations (healthcare_platform_equipment_reservations table).","parameters":[],"requestBody":{"description":"Advanced search and pagination criteria for querying equipment reservations.","typeName":"IHealthcarePlatformEquipmentReservation.IRequest"},"responseBody":{"description":"Paginated list of equipment reservations with search metadata and reservation details.","typeName":"IPageIHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/equipmentReservations","method":"patch"},{"specification":"This operation provides an advanced search and paginated listing of equipment reservations within the healthcare platform. It allows users to filter by organization, resource, reservation type, room, and equipment, supporting compliance and resource management. Refers to the healthcare_platform_equipment_reservations table in the Prisma schema, and supports complex queries such as filtering by time window, reservation type, and availability. This operation enables administrators and managerial staff to oversee and optimize allocation of physical and technical resources throughout the organization.","description":"Retrieve a filtered and paginated list of equipment reservations within the healthcare platform. This supports key operational activities including scheduling, maintenance, and resource allocation for procedures or appointments.\n\nSecurity and access are governed by role-based permissions (e.g., systemAdmin, organizationAdmin, departmentHead), ensuring that only authorized staff may view or manage reservations relevant to their organizational context. Users may search by resource type, time slot, resource assignment, reservation reason/type, and status.\n\nThis operation is based on the healthcare_platform_equipment_reservations table, offering all fields necessary for compliance/audit reporting and workflow optimization. The response provides detailed reservation data, including any linked room, appointment, or blackout period, and includes pagination for scalable access.\n\nRelated APIs include creation (POST), update (PUT), and detail retrieval (GET) for single reservations. Error handling will include validation for search parameters, role visibility limitations, and anti-pattern detection for overlapping/conflicting reservations.","summary":"Search and retrieve a paginated list of equipment reservations (healthcare_platform_equipment_reservations table).","parameters":[],"requestBody":{"description":"Advanced search and pagination criteria for querying equipment reservations.","typeName":"IHealthcarePlatformEquipmentReservation.IRequest"},"responseBody":{"description":"Paginated list of equipment reservations with search metadata and reservation details.","typeName":"IPageIHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/equipmentReservations","method":"patch"},{"specification":"This operation provides an advanced search and paginated listing of equipment reservations within the healthcare platform. It allows users to filter by organization, resource, reservation type, room, and equipment, supporting compliance and resource management. Refers to the healthcare_platform_equipment_reservations table in the Prisma schema, and supports complex queries such as filtering by time window, reservation type, and availability. This operation enables administrators and managerial staff to oversee and optimize allocation of physical and technical resources throughout the organization.","description":"Retrieve a filtered and paginated list of equipment reservations within the healthcare platform. This supports key operational activities including scheduling, maintenance, and resource allocation for procedures or appointments.\n\nSecurity and access are governed by role-based permissions (e.g., systemAdmin, organizationAdmin, departmentHead), ensuring that only authorized staff may view or manage reservations relevant to their organizational context. Users may search by resource type, time slot, resource assignment, reservation reason/type, and status.\n\nThis operation is based on the healthcare_platform_equipment_reservations table, offering all fields necessary for compliance/audit reporting and workflow optimization. The response provides detailed reservation data, including any linked room, appointment, or blackout period, and includes pagination for scalable access.\n\nRelated APIs include creation (POST), update (PUT), and detail retrieval (GET) for single reservations. Error handling will include validation for search parameters, role visibility limitations, and anti-pattern detection for overlapping/conflicting reservations.","summary":"Search and retrieve a paginated list of equipment reservations (healthcare_platform_equipment_reservations table).","parameters":[],"requestBody":{"description":"Advanced search and pagination criteria for querying equipment reservations.","typeName":"IHealthcarePlatformEquipmentReservation.IRequest"},"responseBody":{"description":"Paginated list of equipment reservations with search metadata and reservation details.","typeName":"IPageIHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index","path":"/healthcarePlatform/departmentHead/equipmentReservations","method":"patch"},{"specification":"This operation retrieves the detailed information for a single equipment reservation, identified by its unique equipmentReservationId, from the healthcare_platform_equipment_reservations table. It is critical for workflow management, audit review, and operational troubleshooting by providing all reservation fields, including links to room, appointment, and organizational assignments.","description":"Obtain the full detail of a specific equipment reservation using its unique identifier. Used for schedule review, operational management, and compliance auditing. Access is appropriately restricted to users in roles such as systemAdmin, organizationAdmin, or departmentHead for the relevant organization or department.\n\nAll fields are returned as specified in the healthcare_platform_equipment_reservations schema, including reservation type, status, associated appointment, resource linkage, and timestamps. Authorization is enforced at the organization/unit level according to user assignments.\n\nValidation ensures the reservationId exists and the user has permission to read it. Errors are returned for missing, deleted, or inaccessible reservations.","summary":"Retrieve a single equipment reservation's details by its unique identifier (healthcare_platform_equipment_reservations table).","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete equipment reservation details, including resource, room, and assignment fields.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/equipmentReservations/{equipmentReservationId}","method":"get"},{"specification":"This operation retrieves the detailed information for a single equipment reservation, identified by its unique equipmentReservationId, from the healthcare_platform_equipment_reservations table. It is critical for workflow management, audit review, and operational troubleshooting by providing all reservation fields, including links to room, appointment, and organizational assignments.","description":"Obtain the full detail of a specific equipment reservation using its unique identifier. Used for schedule review, operational management, and compliance auditing. Access is appropriately restricted to users in roles such as systemAdmin, organizationAdmin, or departmentHead for the relevant organization or department.\n\nAll fields are returned as specified in the healthcare_platform_equipment_reservations schema, including reservation type, status, associated appointment, resource linkage, and timestamps. Authorization is enforced at the organization/unit level according to user assignments.\n\nValidation ensures the reservationId exists and the user has permission to read it. Errors are returned for missing, deleted, or inaccessible reservations.","summary":"Retrieve a single equipment reservation's details by its unique identifier (healthcare_platform_equipment_reservations table).","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete equipment reservation details, including resource, room, and assignment fields.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/equipmentReservations/{equipmentReservationId}","method":"get"},{"specification":"This operation retrieves the detailed information for a single equipment reservation, identified by its unique equipmentReservationId, from the healthcare_platform_equipment_reservations table. It is critical for workflow management, audit review, and operational troubleshooting by providing all reservation fields, including links to room, appointment, and organizational assignments.","description":"Obtain the full detail of a specific equipment reservation using its unique identifier. Used for schedule review, operational management, and compliance auditing. Access is appropriately restricted to users in roles such as systemAdmin, organizationAdmin, or departmentHead for the relevant organization or department.\n\nAll fields are returned as specified in the healthcare_platform_equipment_reservations schema, including reservation type, status, associated appointment, resource linkage, and timestamps. Authorization is enforced at the organization/unit level according to user assignments.\n\nValidation ensures the reservationId exists and the user has permission to read it. Errors are returned for missing, deleted, or inaccessible reservations.","summary":"Retrieve a single equipment reservation's details by its unique identifier (healthcare_platform_equipment_reservations table).","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete equipment reservation details, including resource, room, and assignment fields.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at","path":"/healthcarePlatform/departmentHead/equipmentReservations/{equipmentReservationId}","method":"get"},{"specification":"This operation creates a new equipment reservation record in the healthcare_platform_equipment_reservations table. It is used by organization and department administrators to allocate technical/medical equipment for appointments, procedures, maintenance, or blackout periods. Enforces business rules for scheduling conflicts, authorization, and audit compliance.","description":"Allows authorized organizational users to create a new reservation for a piece of equipment, specifying the organization, equipment resource, time slot, reservation type, and related context. It supports department and org-specific scheduling flows and enforces audit compliance, including timestamps, business rationale, and linkage to appointments where relevant.\n\nAuthorization logic ensures only permitted users (systemAdmin, organizationAdmin, departmentHead) can create reservations in their respective scopes. All entries are checked against existing reservations for conflicts and must obey maintenance or blackout logic as configured in the organization's settings.\n\nValidation occurs for time windows, required fields, resource existence, and business rules such as no duplicate reservations for the same equipment and slot.","summary":"Create a new equipment reservation for operational or clinical scheduling (healthcare_platform_equipment_reservations table).","parameters":[],"requestBody":{"description":"Equipment reservation creation details, including resource, scheduling, and organizational assignment.","typeName":"IHealthcarePlatformEquipmentReservation.ICreate"},"responseBody":{"description":"Created equipment reservation record with all reservation details and assigned identifiers.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/equipmentReservations","method":"post"},{"specification":"This operation creates a new equipment reservation record in the healthcare_platform_equipment_reservations table. It is used by organization and department administrators to allocate technical/medical equipment for appointments, procedures, maintenance, or blackout periods. Enforces business rules for scheduling conflicts, authorization, and audit compliance.","description":"Allows authorized organizational users to create a new reservation for a piece of equipment, specifying the organization, equipment resource, time slot, reservation type, and related context. It supports department and org-specific scheduling flows and enforces audit compliance, including timestamps, business rationale, and linkage to appointments where relevant.\n\nAuthorization logic ensures only permitted users (systemAdmin, organizationAdmin, departmentHead) can create reservations in their respective scopes. All entries are checked against existing reservations for conflicts and must obey maintenance or blackout logic as configured in the organization's settings.\n\nValidation occurs for time windows, required fields, resource existence, and business rules such as no duplicate reservations for the same equipment and slot.","summary":"Create a new equipment reservation for operational or clinical scheduling (healthcare_platform_equipment_reservations table).","parameters":[],"requestBody":{"description":"Equipment reservation creation details, including resource, scheduling, and organizational assignment.","typeName":"IHealthcarePlatformEquipmentReservation.ICreate"},"responseBody":{"description":"Created equipment reservation record with all reservation details and assigned identifiers.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/equipmentReservations","method":"post"},{"specification":"This operation creates a new equipment reservation record in the healthcare_platform_equipment_reservations table. It is used by organization and department administrators to allocate technical/medical equipment for appointments, procedures, maintenance, or blackout periods. Enforces business rules for scheduling conflicts, authorization, and audit compliance.","description":"Allows authorized organizational users to create a new reservation for a piece of equipment, specifying the organization, equipment resource, time slot, reservation type, and related context. It supports department and org-specific scheduling flows and enforces audit compliance, including timestamps, business rationale, and linkage to appointments where relevant.\n\nAuthorization logic ensures only permitted users (systemAdmin, organizationAdmin, departmentHead) can create reservations in their respective scopes. All entries are checked against existing reservations for conflicts and must obey maintenance or blackout logic as configured in the organization's settings.\n\nValidation occurs for time windows, required fields, resource existence, and business rules such as no duplicate reservations for the same equipment and slot.","summary":"Create a new equipment reservation for operational or clinical scheduling (healthcare_platform_equipment_reservations table).","parameters":[],"requestBody":{"description":"Equipment reservation creation details, including resource, scheduling, and organizational assignment.","typeName":"IHealthcarePlatformEquipmentReservation.ICreate"},"responseBody":{"description":"Created equipment reservation record with all reservation details and assigned identifiers.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"create","path":"/healthcarePlatform/departmentHead/equipmentReservations","method":"post"},{"specification":"This operation updates an existing equipment reservation in the healthcare_platform_equipment_reservations table, identified by equipmentReservationId. It allows administrators to adjust times, assignments, or reservation metadata, ensuring resource allocation remains accurate and compliant. Soft delete is available via the deleted_at field per the schema.","description":"Allows authorized users (systemAdmin, organizationAdmin, departmentHead in relevant org/unit) to update the details of an equipment reservation in the system. Fields such as reservation window, resource identifiers, status, and reason/type may be modified, and audit trails are maintained for all changes.\n\nValidation ensures the target record exists, is active, and is modifiable by the user (i.e., not archived or soft-deleted), and checks for updated scheduling conflicts and compliance with organizational rules.\n\nRelated operations include creation (POST), single record retrieval (GET), and list search (PATCH) for reservations. Error conditions such as invalid UUID, unauthorized edits, or scheduling conflicts are surfaced as API validation errors.","summary":"Update an existing equipment reservation record (healthcare_platform_equipment_reservations table) by identifier.","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields and values for the equipment reservation.","typeName":"IHealthcarePlatformEquipmentReservation.IUpdate"},"responseBody":{"description":"Updated equipment reservation record with all current field values.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/equipmentReservations/{equipmentReservationId}","method":"put"},{"specification":"This operation updates an existing equipment reservation in the healthcare_platform_equipment_reservations table, identified by equipmentReservationId. It allows administrators to adjust times, assignments, or reservation metadata, ensuring resource allocation remains accurate and compliant. Soft delete is available via the deleted_at field per the schema.","description":"Allows authorized users (systemAdmin, organizationAdmin, departmentHead in relevant org/unit) to update the details of an equipment reservation in the system. Fields such as reservation window, resource identifiers, status, and reason/type may be modified, and audit trails are maintained for all changes.\n\nValidation ensures the target record exists, is active, and is modifiable by the user (i.e., not archived or soft-deleted), and checks for updated scheduling conflicts and compliance with organizational rules.\n\nRelated operations include creation (POST), single record retrieval (GET), and list search (PATCH) for reservations. Error conditions such as invalid UUID, unauthorized edits, or scheduling conflicts are surfaced as API validation errors.","summary":"Update an existing equipment reservation record (healthcare_platform_equipment_reservations table) by identifier.","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields and values for the equipment reservation.","typeName":"IHealthcarePlatformEquipmentReservation.IUpdate"},"responseBody":{"description":"Updated equipment reservation record with all current field values.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/equipmentReservations/{equipmentReservationId}","method":"put"},{"specification":"This operation updates an existing equipment reservation in the healthcare_platform_equipment_reservations table, identified by equipmentReservationId. It allows administrators to adjust times, assignments, or reservation metadata, ensuring resource allocation remains accurate and compliant. Soft delete is available via the deleted_at field per the schema.","description":"Allows authorized users (systemAdmin, organizationAdmin, departmentHead in relevant org/unit) to update the details of an equipment reservation in the system. Fields such as reservation window, resource identifiers, status, and reason/type may be modified, and audit trails are maintained for all changes.\n\nValidation ensures the target record exists, is active, and is modifiable by the user (i.e., not archived or soft-deleted), and checks for updated scheduling conflicts and compliance with organizational rules.\n\nRelated operations include creation (POST), single record retrieval (GET), and list search (PATCH) for reservations. Error conditions such as invalid UUID, unauthorized edits, or scheduling conflicts are surfaced as API validation errors.","summary":"Update an existing equipment reservation record (healthcare_platform_equipment_reservations table) by identifier.","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields and values for the equipment reservation.","typeName":"IHealthcarePlatformEquipmentReservation.IUpdate"},"responseBody":{"description":"Updated equipment reservation record with all current field values.","typeName":"IHealthcarePlatformEquipmentReservation"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update","path":"/healthcarePlatform/departmentHead/equipmentReservations/{equipmentReservationId}","method":"put"},{"specification":"This operation permanently deletes an equipment reservation identified by the given equipmentReservationId. It operates on the healthcare_platform_equipment_reservations table in the Prisma schema. The deletion is hard (not a soft delete), completely removing the reservation record from the database and freeing up the corresponding equipment for future scheduling. Only authorized users, such as organization administrators or scheduling staff, can execute this operation for their assigned organization. Attempting to delete a reservation that does not exist or is not within the user's organizational scope will result in an error.\n\nThis operation supports business processes that require the cancellation or removal of resource reservations for reasons such as error correction, equipment reallocation, or operational needs. It is subject to audit and resource usage policies to maintain system integrity. The deletion does not affect physical equipment assets but solely modifies reservation status in the scheduling system.\n\nSecurity considerations require that only users with assignment to the relevant organization (and suitable role) are permitted this operation. Attempts to erase reservations linked to active appointments or maintenance blocks should fail with appropriate business error handling and user feedback. The operation is fully logged for audit and compliance.","description":"Delete an equipment reservation from the system using its equipmentReservationId. This operation is typically used by organization-level administrators or scheduling staff to remove a reservation when equipment is no longer needed for a particular time window, or if there was a scheduling mistake.\n\nThe operation ensures that the equipment is marked available again for new reservations, updating internal resource availability logic. Deletion is irreversible and permanently removes the reservation from the healthcare_platform_equipment_reservations table. Attempting to delete a non-existent or unauthorized reservation will trigger an error event, and all actions are audit-logged for compliance.\n\nSecurity and data integrity are paramount; therefore, appropriate access controls are enforced, and cascading effects such as linked appointments or blocks must be resolved or prevented before deletion. This operation aligns with business policies for auditability and traceable resource allocation.","summary":"Permanently delete an equipment reservation in the healthcare_platform_equipment_reservations table.","parameters":[{"name":"equipmentReservationId","description":"Unique identifier of the equipment reservation to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/equipmentReservations/{equipmentReservationId}","method":"delete"},{"specification":"This operation retrieves a filtered, paginated list of healthcare platform calendar settings, which govern scheduling rules at the organization or resource (provider, room, equipment) levels. The operation is implemented on the healthcare_platform_calendar_settings table and supports advanced search, filtering, sorting, and pagination through a structured request body. Typical use cases include allowing admins to review all calendar rules, audit scheduling configuration, or analyze potential scheduling conflicts. Granular querying supports key fields such as business days, resource type, availability hours, and organizational/department scope.\n\nOnly organization administrators, department heads, or scheduling coordinators with appropriate permissions can access this data. Bulk access restrictions or business rule filters may be dynamically enforced depending on role and data sensitivity.","description":"Retrieve a paginated, filtered list of calendar settings that define scheduling rules for providers, rooms, equipment, or entire organizations. The search supports filtering by resource type, resourceId, business days, availability hours, and other configurable properties, as well as pagination and sorting parameters for result navigation.\n\nThis search operation is used by staff responsible for managing or auditing scheduling setup, making it possible to locate and review specific calendar settings, identify gaps, or assess rule effectiveness. System includes rate limiting and role-based control to prevent excessive query loads. Output includes summary details for each calendar setting, allowing further drill-down. The returned data supports compliance, quality control, and operational reporting workflows in the scheduling domain.\n\nThe operation ensures all returned calendar settings are constrained to the user's assigned organization or permitted scope. Error handling includes validation of search queries and safe pagination controls.","summary":"Search and retrieve a paginated, filtered list of calendar settings from healthcare_platform_calendar_settings.","parameters":[],"requestBody":{"description":"Search and filter parameters for calendar settings list retrieval.","typeName":"IHealthcarePlatformCalendarSetting.IRequest"},"responseBody":{"description":"Paginated summary list of calendar settings meeting filter and pagination criteria.","typeName":"IPageIHealthcarePlatformCalendarSetting.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/calendarSettings","method":"patch"},{"specification":"This operation retrieves the detailed configuration for a specific calendar setting, as defined in the healthcare_platform_calendar_settings table, identified by calendarSettingId. Typical use cases include viewing scheduling rules for a specific provider, room, or equipment, or reviewing the organization's default scheduling policy. The detailed response includes all configuration properties—available days and hours, blackout dates, booking/cancellation windows, resource references, and localization details necessary for calendar rendering and workflow auditing.\n\nAccess is restricted to organizational administrators, department heads, or users assigned the management of scheduling rules within their assigned context. All accesses are logged for traceability, and unauthorized access attempts yield a clear error response. Data is limited to the user's organization, ensuring multi-tenant isolation.","description":"Retrieve details for a calendar setting identified by calendarSettingId. This detailed operation provides all the attributes necessary for scheduling system integration and management, including business day definitions, standard availability windows, special blackout dates, resource assignments, cancellation and booking restrictions, and organizational assignment context.\n\nUsage supports operational dashboard display, in-depth scheduling system review, or configuration workflows needed by scheduling administrators. Output includes all details as found in the healthcare_platform_calendar_settings table. Security controls ensure that only authorized users from the correct organization have view access. All requests are audit-logged for compliance monitoring.\n\nIf the requested calendar setting does not exist or is out of scope, the operation returns an informative error indicating the issue, and no data is exposed outside the permitted scope.","summary":"Get detailed information for a specific calendar setting from healthcare_platform_calendar_settings.","parameters":[{"name":"calendarSettingId","description":"Unique identifier for the calendar setting to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"All configuration details for the requested calendar setting.","typeName":"IHealthcarePlatformCalendarSetting"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/calendarSettings/{calendarSettingId}","method":"get"},{"specification":"This operation creates a new calendar setting entry in the healthcare_platform_calendar_settings table, defining scheduling rules for an organization, provider, room, or equipment resource. Settings include business open days, standard hours, lead and cancellation windows, blackout dates, and configuration for post-appointment surveys. Upon creation, the new rule is enabled for scheduling workflows per resource type or organization-wide basis. Only organization administrators are permitted to create new calendar settings in their scope; the system enforces uniqueness constraints and validates that all referenced resources exist and belong to the correct organization.","description":"Create a new calendar setting for an organization, department, or individual resource by specifying the scheduling parameters, working hours, blackout dates, and restriction rules for booking and cancellations. This operation enables administrators to define resource or org-wide scheduling logic, which is immediately incorporated into appointment workflows and resource availability algorithms.\n\nInputs are validated for data integrity, business rule conformity, and conflict with existing settings. Creation is fully audit-logged for compliance tracking. The resulting new calendar setting is returned with complete details, allowing system UI to update available scheduling options or resource calendars for staff and patients.\n\nSecurity and operational controls restrict this operation to users with appropriate org-level privileges and prevent the accidental creation of conflicting schedule rules or data integrity errors.","summary":"Create a new calendar setting in the healthcare_platform_calendar_settings table.","parameters":[],"requestBody":{"description":"Data for the new calendar setting including rules for scheduling, blackout dates, lead/cancellation windows, and resource assignments.","typeName":"IHealthcarePlatformCalendarSetting.ICreate"},"responseBody":{"description":"Newly created calendar setting with complete configuration details.","typeName":"IHealthcarePlatformCalendarSetting"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/calendarSettings","method":"post"},{"specification":"This operation updates a calendar setting record with new scheduling, availability, or blackout dates for resources such as providers, rooms, or equipment. The operation works on the healthcare_platform_calendar_settings table and allows organization administrators to configure or revise booking/cancellation windows, open hours, blackout dates, business days, and locale display settings for their organization or specific resources. Updates are versioned and auditable per regulatory retention requirements, and the schema supports both organization-wide and resource-level scope. Only defined fields in the Prisma schema (availability_hours, business_days, min_lead_time_minutes, etc.) are updated using this method. This is a hard update; soft deletes for calendar settings are not included here.","description":"Update core scheduling or calendar settings for a health organization or provider resource. The API allows organization administrators to modify open/close hours, business/available days, minimum advance booking and cancellation periods, specific resource blackout dates (e.g., vacations or maintenance), and locale parameters (such as date/time formats) that affect provider and patient scheduling.\n\nThe underlying healthcare_platform_calendar_settings table only allows these fields to be updated; organizational-level and resource-type rules are enforced, and changes are logged for audit. All updates are versioned by timestamp and last update field for regulatory compliance. This operation must validate that only authorized administrators for the organization or resource may perform the update, and that all changed fields conform to acceptable values (e.g., only valid day names for business_days, correctly formatted availability_hours, etc).\n\nThis operation is used as part of the scheduling administrative workflow and may affect all subsequent bookings, appointment reminders, and portal/in-app availability displays. It is not used for soft deletes or recovery, only for formal direct updates. Changes made are visible to appointment schedulers, admins, and may be reflected in patient self-service booking tools.","summary":"Update an existing calendar setting in the healthcare_platform_calendar_settings table.","parameters":[{"name":"calendarSettingId","description":"Unique identifier of the calendar setting record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New scheduling and business configuration for this calendar setting.","typeName":"IHealthcarePlatformCalendarSettings.IUpdate"},"responseBody":{"description":"The newly updated calendar setting record.","typeName":"IHealthcarePlatformCalendarSettings"},"authorizationRoles":["organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/calendarSettings/{calendarSettingId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation removes (hard deletes) a calendar setting record from the healthcare_platform_calendar_settings table by its unique identifier. It is intended for scenarios in which a calendar setting (such as an obsolete room or resource configuration) must be permanently deleted and should no longer be referenced for scheduling or portal display. Since the schema supports a deleted_at field, this operation must actually perform a soft delete by marking the deleted_at timestamp, thereby retaining a record for compliance and auditing. Only users with organization administrator privileges may perform this operation, and audit log entries must be recorded as part of the action.","description":"This API endpoint performs a soft delete of an existing calendar setting entity. When an administrator invokes this operation, the deleted_at field of the healthcare_platform_calendar_settings record is set to the current timestamp, making the setting inactive in user and scheduling workflows while preserving it for compliance audits and restoration if permitted.\n\nOnly organization administrators are permitted to delete calendar settings, and authorization checks must be enforced before marking a record as deleted. All deletion events are logged in compliance with healthcare audit requirements. This operation is used when retiring old resource schedules, business hour exceptions, or no longer applicable booking rules. Hard deletion (physical removal from the table) is not performed to meet regulatory data retention needs.","summary":"Soft delete a calendar setting record in the healthcare_platform_calendar_settings table.","parameters":[{"name":"calendarSettingId","description":"Unique identifier of the calendar setting to delete (soft-delete by marking deleted_at).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/calendarSettings/{calendarSettingId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of telemedicine session records based on configurable search criteria. It operates on the healthcare_platform_telemedicine_sessions table and supports advanced searching by appointment, provider participation, patient join times, session recording status, or timeframe. The endpoint uses a PATCH method (rather than GET) to accept complex search and pagination parameters in the request body. This is intended for administrators, staff, or providers who need to track, audit, or monitor telemedicine usage within an organization or department context.","description":"Return a paginated and optionally filtered list of telemedicine session records to eligible users. The API leverages advanced search features including search by appointment ID, user participation, date/time window, recording status, and other session-level attributes stored in the healthcare_platform_telemedicine_sessions table.\n\nThe core use case is to allow providers, clinical admins, or scheduling staff to audit and review telemedicine activity, join/leave times, attendance status, recording status, or compliance with telemedicine policy. Results support pagination, custom sorting (by time, provider, patient, session recorded), and other administrative filters defined in the request schema. Authorization is enforced so that only organization staff involved in telemedicine workflows, or with audit authority, may access these lists.\n\nSensitive or protected fields (such as secure join links or internal notes) are included for administrative personnel only. Patient portal or non-privileged users may not use this operation.","summary":"Search and retrieve a filtered, paginated list of telemedicine sessions.","parameters":[],"requestBody":{"description":"Search, filter, and pagination criteria for telemedicine session records.","typeName":"IHealthcarePlatformTelemedicineSessions.IRequest"},"responseBody":{"description":"Paginated result set containing telemedicine session records and summaries.","typeName":"IPageIHealthcarePlatformTelemedicineSessions.ISummary"},"authorizationRoles":["organizationAdmin","medicalDoctor"],"name":"index","path":"/healthcarePlatform/organizationAdmin/telemedicineSessions","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of telemedicine session records based on configurable search criteria. It operates on the healthcare_platform_telemedicine_sessions table and supports advanced searching by appointment, provider participation, patient join times, session recording status, or timeframe. The endpoint uses a PATCH method (rather than GET) to accept complex search and pagination parameters in the request body. This is intended for administrators, staff, or providers who need to track, audit, or monitor telemedicine usage within an organization or department context.","description":"Return a paginated and optionally filtered list of telemedicine session records to eligible users. The API leverages advanced search features including search by appointment ID, user participation, date/time window, recording status, and other session-level attributes stored in the healthcare_platform_telemedicine_sessions table.\n\nThe core use case is to allow providers, clinical admins, or scheduling staff to audit and review telemedicine activity, join/leave times, attendance status, recording status, or compliance with telemedicine policy. Results support pagination, custom sorting (by time, provider, patient, session recorded), and other administrative filters defined in the request schema. Authorization is enforced so that only organization staff involved in telemedicine workflows, or with audit authority, may access these lists.\n\nSensitive or protected fields (such as secure join links or internal notes) are included for administrative personnel only. Patient portal or non-privileged users may not use this operation.","summary":"Search and retrieve a filtered, paginated list of telemedicine sessions.","parameters":[],"requestBody":{"description":"Search, filter, and pagination criteria for telemedicine session records.","typeName":"IHealthcarePlatformTelemedicineSessions.IRequest"},"responseBody":{"description":"Paginated result set containing telemedicine session records and summaries.","typeName":"IPageIHealthcarePlatformTelemedicineSessions.ISummary"},"authorizationRoles":["organizationAdmin","medicalDoctor"],"name":"index","path":"/healthcarePlatform/medicalDoctor/telemedicineSessions","method":"patch","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves the detailed record for a single telemedicine session by its unique identifier. It operates on the healthcare_platform_telemedicine_sessions table and returns all relevant session information (scheduled times, join links, participant details, recording status, attendance, etc.) to authorized users (organization admin or provider staff). The response includes compliance fields such as timestamps for provider/patient joins, recording flags, and session outcomes, enabling audit and workflow validation. As telemedicine sessions are tied to appointments and compliance, this endpoint is critical for investigations, audits, or retrospective clinical review.","description":"Return comprehensive details about a specific telemedicine session. This includes timestamps (scheduled, actual, provider/patient joined, session start/end), secure join links (for authorized roles), session recording status, attendance, appointment linkage, and all other fields as defined in the healthcare_platform_telemedicine_sessions schema.\n\nThis endpoint is used for administrative review, compliance audit, internal troubleshooting, or clinical outcome workflow analysis after a telemedicine session has occurred. Authorization logic must restrict access to organization administrators or providers who are linked to the appointment or responsible for the patient care episode. All access to session details is logged for audit.\n\nIf a telemedicine session does not exist, or if unauthorized users attempt access, the system must return an appropriate not found or forbidden error and log the event for compliance.","summary":"Retrieve detailed information for a specific telemedicine session.","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier of the telemedicine session to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed telemedicine session record for the specified session id.","typeName":"IHealthcarePlatformTelemedicineSessions"},"authorizationRoles":["organizationAdmin","medicalDoctor"],"name":"at","path":"/healthcarePlatform/organizationAdmin/telemedicineSessions/{telemedicineSessionId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the detailed record for a single telemedicine session by its unique identifier. It operates on the healthcare_platform_telemedicine_sessions table and returns all relevant session information (scheduled times, join links, participant details, recording status, attendance, etc.) to authorized users (organization admin or provider staff). The response includes compliance fields such as timestamps for provider/patient joins, recording flags, and session outcomes, enabling audit and workflow validation. As telemedicine sessions are tied to appointments and compliance, this endpoint is critical for investigations, audits, or retrospective clinical review.","description":"Return comprehensive details about a specific telemedicine session. This includes timestamps (scheduled, actual, provider/patient joined, session start/end), secure join links (for authorized roles), session recording status, attendance, appointment linkage, and all other fields as defined in the healthcare_platform_telemedicine_sessions schema.\n\nThis endpoint is used for administrative review, compliance audit, internal troubleshooting, or clinical outcome workflow analysis after a telemedicine session has occurred. Authorization logic must restrict access to organization administrators or providers who are linked to the appointment or responsible for the patient care episode. All access to session details is logged for audit.\n\nIf a telemedicine session does not exist, or if unauthorized users attempt access, the system must return an appropriate not found or forbidden error and log the event for compliance.","summary":"Retrieve detailed information for a specific telemedicine session.","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier of the telemedicine session to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed telemedicine session record for the specified session id.","typeName":"IHealthcarePlatformTelemedicineSessions"},"authorizationRoles":["organizationAdmin","medicalDoctor"],"name":"at","path":"/healthcarePlatform/medicalDoctor/telemedicineSessions/{telemedicineSessionId}","method":"get","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation enables the creation of a new telemedicine session in the healthcarePlatform service. It creates a record in the TelemedicineSession table, initializing all necessary session metadata such as secure join link, associated appointment, scheduled session times, and flags for recording.","path":"/healthcarePlatform/systemAdmin/telemedicineSessions","method":"post","description":"Create a new telemedicine session for a scheduled appointment. This operation is used by authorized staff or system processes to generate secure telemedicine sessions linked to a specific appointment.\n\nDuring creation, all required information about the appointment, session start/end times, secure access link, and provider/patient associations must be provided. Security controls ensure only authorized roles (such as systemAdmin, organizationAdmin, or medicalDoctor) can invoke this operation. Session creation is logged for audit.\n\nOn success, the response includes the full session record with join link and timing details, suitable for further integration with video platforms or calendar notifications.","summary":"Create a new telemedicine session record (TelemedicineSession table) in healthcarePlatform.","parameters":[],"requestBody":{"description":"Payload for creating a telemedicine session including appointment association, times, join link, and recording flag.","typeName":"IHealthcarePlatformTelemedicineSession.ICreate"},"responseBody":{"description":"The newly created telemedicine session record with full details.","typeName":"IHealthcarePlatformTelemedicineSession"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation enables the creation of a new telemedicine session in the healthcarePlatform service. It creates a record in the TelemedicineSession table, initializing all necessary session metadata such as secure join link, associated appointment, scheduled session times, and flags for recording.","path":"/healthcarePlatform/organizationAdmin/telemedicineSessions","method":"post","description":"Create a new telemedicine session for a scheduled appointment. This operation is used by authorized staff or system processes to generate secure telemedicine sessions linked to a specific appointment.\n\nDuring creation, all required information about the appointment, session start/end times, secure access link, and provider/patient associations must be provided. Security controls ensure only authorized roles (such as systemAdmin, organizationAdmin, or medicalDoctor) can invoke this operation. Session creation is logged for audit.\n\nOn success, the response includes the full session record with join link and timing details, suitable for further integration with video platforms or calendar notifications.","summary":"Create a new telemedicine session record (TelemedicineSession table) in healthcarePlatform.","parameters":[],"requestBody":{"description":"Payload for creating a telemedicine session including appointment association, times, join link, and recording flag.","typeName":"IHealthcarePlatformTelemedicineSession.ICreate"},"responseBody":{"description":"The newly created telemedicine session record with full details.","typeName":"IHealthcarePlatformTelemedicineSession"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation enables the creation of a new telemedicine session in the healthcarePlatform service. It creates a record in the TelemedicineSession table, initializing all necessary session metadata such as secure join link, associated appointment, scheduled session times, and flags for recording.","path":"/healthcarePlatform/medicalDoctor/telemedicineSessions","method":"post","description":"Create a new telemedicine session for a scheduled appointment. This operation is used by authorized staff or system processes to generate secure telemedicine sessions linked to a specific appointment.\n\nDuring creation, all required information about the appointment, session start/end times, secure access link, and provider/patient associations must be provided. Security controls ensure only authorized roles (such as systemAdmin, organizationAdmin, or medicalDoctor) can invoke this operation. Session creation is logged for audit.\n\nOn success, the response includes the full session record with join link and timing details, suitable for further integration with video platforms or calendar notifications.","summary":"Create a new telemedicine session record (TelemedicineSession table) in healthcarePlatform.","parameters":[],"requestBody":{"description":"Payload for creating a telemedicine session including appointment association, times, join link, and recording flag.","typeName":"IHealthcarePlatformTelemedicineSession.ICreate"},"responseBody":{"description":"The newly created telemedicine session record with full details.","typeName":"IHealthcarePlatformTelemedicineSession"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"create"},{"specification":"This operation updates an existing telemedicine session in the healthcarePlatform service, allowing changes to session times, join link, or recording status. It operates on the TelemedicineSession table and requires appropriate authorization based on appointment/organization association.","path":"/healthcarePlatform/systemAdmin/telemedicineSessions/{telemedicineSessionId}","method":"put","description":"Update details of an existing telemedicine session such as session start/end times, link, or session recording flag. Only authorized staff (organizationAdmin, medicalDoctor, or systemAdmin) may perform updates, and actions are audited for compliance.\n\nThe session identifier in the path parameter selects the telemedicine session record to update. The request body must include the fields to be modified as defined in the update schema. This operation supports modifying the session (for example, to reschedule, update links, or change recording preferences) as business workflows require. Auditing ensures tracking of all changes for security and compliance review.","summary":"Update details for a telemedicine session (TelemedicineSession table) by telemedicineSessionId.","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier (UUID) of the telemedicine session to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the telemedicine session (times, join link, session_recorded, etc)","typeName":"IHealthcarePlatformTelemedicineSession.IUpdate"},"responseBody":{"description":"The updated telemedicine session record reflecting all changes.","typeName":"IHealthcarePlatformTelemedicineSession"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation updates an existing telemedicine session in the healthcarePlatform service, allowing changes to session times, join link, or recording status. It operates on the TelemedicineSession table and requires appropriate authorization based on appointment/organization association.","path":"/healthcarePlatform/organizationAdmin/telemedicineSessions/{telemedicineSessionId}","method":"put","description":"Update details of an existing telemedicine session such as session start/end times, link, or session recording flag. Only authorized staff (organizationAdmin, medicalDoctor, or systemAdmin) may perform updates, and actions are audited for compliance.\n\nThe session identifier in the path parameter selects the telemedicine session record to update. The request body must include the fields to be modified as defined in the update schema. This operation supports modifying the session (for example, to reschedule, update links, or change recording preferences) as business workflows require. Auditing ensures tracking of all changes for security and compliance review.","summary":"Update details for a telemedicine session (TelemedicineSession table) by telemedicineSessionId.","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier (UUID) of the telemedicine session to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the telemedicine session (times, join link, session_recorded, etc)","typeName":"IHealthcarePlatformTelemedicineSession.IUpdate"},"responseBody":{"description":"The updated telemedicine session record reflecting all changes.","typeName":"IHealthcarePlatformTelemedicineSession"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation updates an existing telemedicine session in the healthcarePlatform service, allowing changes to session times, join link, or recording status. It operates on the TelemedicineSession table and requires appropriate authorization based on appointment/organization association.","path":"/healthcarePlatform/medicalDoctor/telemedicineSessions/{telemedicineSessionId}","method":"put","description":"Update details of an existing telemedicine session such as session start/end times, link, or session recording flag. Only authorized staff (organizationAdmin, medicalDoctor, or systemAdmin) may perform updates, and actions are audited for compliance.\n\nThe session identifier in the path parameter selects the telemedicine session record to update. The request body must include the fields to be modified as defined in the update schema. This operation supports modifying the session (for example, to reschedule, update links, or change recording preferences) as business workflows require. Auditing ensures tracking of all changes for security and compliance review.","summary":"Update details for a telemedicine session (TelemedicineSession table) by telemedicineSessionId.","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier (UUID) of the telemedicine session to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the telemedicine session (times, join link, session_recorded, etc)","typeName":"IHealthcarePlatformTelemedicineSession.IUpdate"},"responseBody":{"description":"The updated telemedicine session record reflecting all changes.","typeName":"IHealthcarePlatformTelemedicineSession"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update"},{"specification":"This operation deletes (permanently removes) a telemedicine session record from the healthcarePlatform's TelemedicineSession table. Deletion is permanent; all related data is removed from the system and cannot be recovered. Requires administrative or privileged medical staff access.","path":"/healthcarePlatform/systemAdmin/telemedicineSessions/{telemedicineSessionId}","method":"delete","description":"Permanently remove an existing telemedicine session. Only users with systemAdmin, organizationAdmin, or medicalDoctor roles are authorized to perform this action. The operation is audited for compliance purposes.\n\nThis operation should be used with care, as deleted session records and metadata cannot be restored. Deletion checks may prevent removal if the session is still linked to future appointments or is in use.","summary":"Permanently delete a telemedicine session by telemedicineSessionId (TelemedicineSession table hard delete).","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier (UUID) for the telemedicine session that should be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"This operation deletes (permanently removes) a telemedicine session record from the healthcarePlatform's TelemedicineSession table. Deletion is permanent; all related data is removed from the system and cannot be recovered. Requires administrative or privileged medical staff access.","path":"/healthcarePlatform/organizationAdmin/telemedicineSessions/{telemedicineSessionId}","method":"delete","description":"Permanently remove an existing telemedicine session. Only users with systemAdmin, organizationAdmin, or medicalDoctor roles are authorized to perform this action. The operation is audited for compliance purposes.\n\nThis operation should be used with care, as deleted session records and metadata cannot be restored. Deletion checks may prevent removal if the session is still linked to future appointments or is in use.","summary":"Permanently delete a telemedicine session by telemedicineSessionId (TelemedicineSession table hard delete).","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier (UUID) for the telemedicine session that should be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation deletes (permanently removes) a telemedicine session record from the healthcarePlatform's TelemedicineSession table. Deletion is permanent; all related data is removed from the system and cannot be recovered. Requires administrative or privileged medical staff access.","path":"/healthcarePlatform/medicalDoctor/telemedicineSessions/{telemedicineSessionId}","method":"delete","description":"Permanently remove an existing telemedicine session. Only users with systemAdmin, organizationAdmin, or medicalDoctor roles are authorized to perform this action. The operation is audited for compliance purposes.\n\nThis operation should be used with care, as deleted session records and metadata cannot be restored. Deletion checks may prevent removal if the session is still linked to future appointments or is in use.","summary":"Permanently delete a telemedicine session by telemedicineSessionId (TelemedicineSession table hard delete).","parameters":[{"name":"telemedicineSessionId","description":"Unique identifier (UUID) for the telemedicine session that should be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"medicalDoctor","name":"erase"},{"specification":"This operation retrieves a filtered, paginated list of billing invoice summary records from the healthcarePlatformBillingInvoices table. It supports advanced searching, filtering, and sorting by status, patient, due date, or other business-relevant fields. The results are paginated according to provided request parameters, and require administrative or billing staff access.","path":"/healthcarePlatform/systemAdmin/billingInvoices","method":"patch","description":"Search and retrieve billing invoice records in a paginated, filterable manner. Only users with systemAdmin, organizationAdmin, or departmentHead roles can access invoice listings in their organization context.\n\nQuery criteria can include invoice status, patient, due date range, organization, and more as defined in the request schema. Pagination ensures scalable access for large financial datasets. Invoice summary info is returned for display in dashboards or list views, with links to detailed records for drill-down.\n\nSecurity enforces strict access isolation by organization; invoices cannot be retrieved across tenant boundaries. Sensitive financial data is only included with appropriate roles and audit logs are maintained for all accesses.","summary":"Search and paginate billing invoices (BillingInvoices table) by business filters for finance/admin roles.","parameters":[],"requestBody":{"description":"Advanced search parameters and pagination for billing invoice retrieval.","typeName":"IHealthcarePlatformBillingInvoice.IRequest"},"responseBody":{"description":"Paginated list of invoice summary results matching filter/search criteria.","typeName":"IPageIHealthcarePlatformBillingInvoice.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation retrieves a filtered, paginated list of billing invoice summary records from the healthcarePlatformBillingInvoices table. It supports advanced searching, filtering, and sorting by status, patient, due date, or other business-relevant fields. The results are paginated according to provided request parameters, and require administrative or billing staff access.","path":"/healthcarePlatform/organizationAdmin/billingInvoices","method":"patch","description":"Search and retrieve billing invoice records in a paginated, filterable manner. Only users with systemAdmin, organizationAdmin, or departmentHead roles can access invoice listings in their organization context.\n\nQuery criteria can include invoice status, patient, due date range, organization, and more as defined in the request schema. Pagination ensures scalable access for large financial datasets. Invoice summary info is returned for display in dashboards or list views, with links to detailed records for drill-down.\n\nSecurity enforces strict access isolation by organization; invoices cannot be retrieved across tenant boundaries. Sensitive financial data is only included with appropriate roles and audit logs are maintained for all accesses.","summary":"Search and paginate billing invoices (BillingInvoices table) by business filters for finance/admin roles.","parameters":[],"requestBody":{"description":"Advanced search parameters and pagination for billing invoice retrieval.","typeName":"IHealthcarePlatformBillingInvoice.IRequest"},"responseBody":{"description":"Paginated list of invoice summary results matching filter/search criteria.","typeName":"IPageIHealthcarePlatformBillingInvoice.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves a filtered, paginated list of billing invoice summary records from the healthcarePlatformBillingInvoices table. It supports advanced searching, filtering, and sorting by status, patient, due date, or other business-relevant fields. The results are paginated according to provided request parameters, and require administrative or billing staff access.","path":"/healthcarePlatform/departmentHead/billingInvoices","method":"patch","description":"Search and retrieve billing invoice records in a paginated, filterable manner. Only users with systemAdmin, organizationAdmin, or departmentHead roles can access invoice listings in their organization context.\n\nQuery criteria can include invoice status, patient, due date range, organization, and more as defined in the request schema. Pagination ensures scalable access for large financial datasets. Invoice summary info is returned for display in dashboards or list views, with links to detailed records for drill-down.\n\nSecurity enforces strict access isolation by organization; invoices cannot be retrieved across tenant boundaries. Sensitive financial data is only included with appropriate roles and audit logs are maintained for all accesses.","summary":"Search and paginate billing invoices (BillingInvoices table) by business filters for finance/admin roles.","parameters":[],"requestBody":{"description":"Advanced search parameters and pagination for billing invoice retrieval.","typeName":"IHealthcarePlatformBillingInvoice.IRequest"},"responseBody":{"description":"Paginated list of invoice summary results matching filter/search criteria.","typeName":"IPageIHealthcarePlatformBillingInvoice.ISummary"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index"},{"specification":"This operation retrieves a single billing invoice by its unique identifier from the healthcare platform. It is tied to the healthcare_platform_billing_invoices table in the Prisma schema, which tracks all issued invoices for patients and/or payers. Only existing, non-deleted invoices will be returned.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}","method":"get","summary":"Retrieve a specific billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Retrieve a healthcare platform billing invoice using the unique invoice ID.\n\nThis endpoint operates on the healthcare_platform_billing_invoices table and returns details including patient, encounter, status, amounts, and organization context, as defined in the Prisma schema. Permission checks ensure that only authorized users (such as organization admins, billing staff, or the invoiced patient) can access the full invoice details, honoring data isolation and auditability requirements according to healthcare compliance policy.\n\nSensitive invoice information will only be provided to callers with valid scope—it is not available to general public access. Audit logs are generated for all access to this resource, in line with financial compliance standards.\n\nIf the invoice is deleted or the user lacks permission, an appropriate error will be returned.","parameters":[{"name":"billingInvoiceId","description":"UUID of the target billing invoice to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the billing invoice","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation retrieves a single billing invoice by its unique identifier from the healthcare platform. It is tied to the healthcare_platform_billing_invoices table in the Prisma schema, which tracks all issued invoices for patients and/or payers. Only existing, non-deleted invoices will be returned.","path":"/healthcarePlatform/systemAdmin/billingInvoices/{billingInvoiceId}","method":"get","summary":"Retrieve a specific billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Retrieve a healthcare platform billing invoice using the unique invoice ID.\n\nThis endpoint operates on the healthcare_platform_billing_invoices table and returns details including patient, encounter, status, amounts, and organization context, as defined in the Prisma schema. Permission checks ensure that only authorized users (such as organization admins, billing staff, or the invoiced patient) can access the full invoice details, honoring data isolation and auditability requirements according to healthcare compliance policy.\n\nSensitive invoice information will only be provided to callers with valid scope—it is not available to general public access. Audit logs are generated for all access to this resource, in line with financial compliance standards.\n\nIf the invoice is deleted or the user lacks permission, an appropriate error will be returned.","parameters":[{"name":"billingInvoiceId","description":"UUID of the target billing invoice to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the billing invoice","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation retrieves a single billing invoice by its unique identifier from the healthcare platform. It is tied to the healthcare_platform_billing_invoices table in the Prisma schema, which tracks all issued invoices for patients and/or payers. Only existing, non-deleted invoices will be returned.","path":"/healthcarePlatform/patient/billingInvoices/{billingInvoiceId}","method":"get","summary":"Retrieve a specific billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Retrieve a healthcare platform billing invoice using the unique invoice ID.\n\nThis endpoint operates on the healthcare_platform_billing_invoices table and returns details including patient, encounter, status, amounts, and organization context, as defined in the Prisma schema. Permission checks ensure that only authorized users (such as organization admins, billing staff, or the invoiced patient) can access the full invoice details, honoring data isolation and auditability requirements according to healthcare compliance policy.\n\nSensitive invoice information will only be provided to callers with valid scope—it is not available to general public access. Audit logs are generated for all access to this resource, in line with financial compliance standards.\n\nIf the invoice is deleted or the user lacks permission, an appropriate error will be returned.","parameters":[{"name":"billingInvoiceId","description":"UUID of the target billing invoice to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the billing invoice","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"patient","name":"at"},{"specification":"This operation creates a new billing invoice, based on the structure of the healthcare_platform_billing_invoices table. It enables authorized organization administrators or billing staff to issue a patient invoice tied to encounters, services, and payer context, respecting financial audit, compliance, and patient data security.","path":"/healthcarePlatform/organizationAdmin/billingInvoices","method":"post","summary":"Create a new billing invoice (IHealthcarePlatformBillingInvoice)","description":"Create a new billing invoice in the healthcare platform system according to business, audit, and compliance requirements.\n\nUsers with appropriate billing or administrative permissions can issue an invoice for a given patient and linked encounter. The operation covers all schema-defined invoice fields including patient, encounter, organization, status, due date, and line itemization.\n\nCreation of billing invoices requires patient identity, organization context, currency, status, and total amount. If required fields are missing or invalid (such as duplicate invoice_number in the organization), the operation will return a business error and will not create the invoice. Successful creation will result in a new invoice record and trigger financial audit logging.\n\nThis API does not permit arbitrary user invoice creation; permission checks are enforced strictly for compliance.","parameters":[],"requestBody":{"description":"Data for creating a new billing invoice","typeName":"IHealthcarePlatformBillingInvoice.ICreate"},"responseBody":{"description":"The newly created billing invoice resource","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation creates a new billing invoice, based on the structure of the healthcare_platform_billing_invoices table. It enables authorized organization administrators or billing staff to issue a patient invoice tied to encounters, services, and payer context, respecting financial audit, compliance, and patient data security.","path":"/healthcarePlatform/systemAdmin/billingInvoices","method":"post","summary":"Create a new billing invoice (IHealthcarePlatformBillingInvoice)","description":"Create a new billing invoice in the healthcare platform system according to business, audit, and compliance requirements.\n\nUsers with appropriate billing or administrative permissions can issue an invoice for a given patient and linked encounter. The operation covers all schema-defined invoice fields including patient, encounter, organization, status, due date, and line itemization.\n\nCreation of billing invoices requires patient identity, organization context, currency, status, and total amount. If required fields are missing or invalid (such as duplicate invoice_number in the organization), the operation will return a business error and will not create the invoice. Successful creation will result in a new invoice record and trigger financial audit logging.\n\nThis API does not permit arbitrary user invoice creation; permission checks are enforced strictly for compliance.","parameters":[],"requestBody":{"description":"Data for creating a new billing invoice","typeName":"IHealthcarePlatformBillingInvoice.ICreate"},"responseBody":{"description":"The newly created billing invoice resource","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation updates an existing billing invoice in the healthcare_platform_billing_invoices table, using the unique billing invoice ID. Authorized admin/billing users can update invoice fields including status (pending, sent, paid, cancelled), due date, description, and other allowable fields by financial policy/audit constraints.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}","method":"put","summary":"Update a billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Update billing invoice information for a specified invoice record in the system. This allows for corrections, payment posting, status changes, and business policy updates.\n\nOnly users with appropriate billing or admin permissions may update invoices. All updates are subject to business rules, auditability, and compliance requirements; edits may be restricted if the invoice has been soft-deleted, is finalized in audit, or conflicts with financial regulations.\n\nUpdate actions are fully logged for compliance, and only permissible fields may be changed by business users. An error will be returned if an attempt is made to edit fields in violation of schema constraints or policy.","parameters":[{"name":"billingInvoiceId","description":"UUID of the target billing invoice to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated invoice information","typeName":"IHealthcarePlatformBillingInvoice.IUpdate"},"responseBody":{"description":"Returns the updated billing invoice after saving changes","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation updates an existing billing invoice in the healthcare_platform_billing_invoices table, using the unique billing invoice ID. Authorized admin/billing users can update invoice fields including status (pending, sent, paid, cancelled), due date, description, and other allowable fields by financial policy/audit constraints.","path":"/healthcarePlatform/systemAdmin/billingInvoices/{billingInvoiceId}","method":"put","summary":"Update a billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Update billing invoice information for a specified invoice record in the system. This allows for corrections, payment posting, status changes, and business policy updates.\n\nOnly users with appropriate billing or admin permissions may update invoices. All updates are subject to business rules, auditability, and compliance requirements; edits may be restricted if the invoice has been soft-deleted, is finalized in audit, or conflicts with financial regulations.\n\nUpdate actions are fully logged for compliance, and only permissible fields may be changed by business users. An error will be returned if an attempt is made to edit fields in violation of schema constraints or policy.","parameters":[{"name":"billingInvoiceId","description":"UUID of the target billing invoice to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated invoice information","typeName":"IHealthcarePlatformBillingInvoice.IUpdate"},"responseBody":{"description":"Returns the updated billing invoice after saving changes","typeName":"IHealthcarePlatformBillingInvoice"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation deletes an existing billing invoice by its unique ID. As the Prisma schema supports a deleted_at (soft-delete) timestamp on billing invoices, this API performs a soft delete, marking the invoice as deleted for compliance audit and record retention. The data is retained for regulatory and audit needs but is excluded from active business workflows.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}","method":"delete","summary":"Soft-delete a billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Soft-delete a billing invoice in the healthcare platform by marking its deleted_at column. The underlying record remains in the database for compliance and audit requirements, but will be excluded from standard queries and reporting.\n\nOnly authorized organization administrators or system administrators may perform this action. The operation does not physically remove the record to ensure auditability and regulatory compliance, particularly in financial contexts.\n\nIf the record is already deleted or does not exist, an error will be returned. Deletion actions are logged for traceability.","parameters":[{"name":"billingInvoiceId","description":"UUID of the invoice to soft-delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation deletes an existing billing invoice by its unique ID. As the Prisma schema supports a deleted_at (soft-delete) timestamp on billing invoices, this API performs a soft delete, marking the invoice as deleted for compliance audit and record retention. The data is retained for regulatory and audit needs but is excluded from active business workflows.","path":"/healthcarePlatform/systemAdmin/billingInvoices/{billingInvoiceId}","method":"delete","summary":"Soft-delete a billing invoice by ID (IHealthcarePlatformBillingInvoice)","description":"Soft-delete a billing invoice in the healthcare platform by marking its deleted_at column. The underlying record remains in the database for compliance and audit requirements, but will be excluded from standard queries and reporting.\n\nOnly authorized organization administrators or system administrators may perform this action. The operation does not physically remove the record to ensure auditability and regulatory compliance, particularly in financial contexts.\n\nIf the record is already deleted or does not exist, an error will be returned. Deletion actions are logged for traceability.","parameters":[{"name":"billingInvoiceId","description":"UUID of the invoice to soft-delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"This operation retrieves a paginated, filterable list of billing items associated with a specific billing invoice. It operates on the healthcare_platform_billing_items table and is designed to allow billing, administrative staff, or auditors to search, filter, and page through all items linked to an invoice for compliance, review, or reporting purposes. Filtering options may include service codes, descriptions, adjustment status, or date ranges. Supports audit trail requirements and business workflow visibility.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingItems","method":"patch","summary":"Retrieve and search billing items for a specific invoice (IHealthcarePlatformBillingItem)","description":"Retrieves a filtered, paginated list of billing items tied to a given billing invoice, as defined in the healthcare_platform_billing_items table. Filtering options enable staff to locate billing items by service code, amount, date, item status, and other searchable fields. Paging and result ordering are required for workflows handling large, complex invoices.\n\nAccess to this operation should be controlled so only administrators, billing staff, or auditors of the organization associated with the invoice can use it. Audit logs must be maintained for all access events. Related endpoints include detail retrieval (GET /billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}), creation (POST), and update (PUT).\n\nAll filtering and sorting logic leverages column definitions and index strategies from the billing items schema, providing response formats suitable for UI tabular display and export.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the billing invoice whose items are to be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination options for billing items within a given invoice.","typeName":"IHealthcarePlatformBillingItem.IRequest"},"responseBody":{"description":"Paginated search result of billing items for the specified invoice.","typeName":"IPageIHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of billing items associated with a specific billing invoice. It operates on the healthcare_platform_billing_items table and is designed to allow billing, administrative staff, or auditors to search, filter, and page through all items linked to an invoice for compliance, review, or reporting purposes. Filtering options may include service codes, descriptions, adjustment status, or date ranges. Supports audit trail requirements and business workflow visibility.","path":"/healthcarePlatform/departmentHead/billingInvoices/{billingInvoiceId}/billingItems","method":"patch","summary":"Retrieve and search billing items for a specific invoice (IHealthcarePlatformBillingItem)","description":"Retrieves a filtered, paginated list of billing items tied to a given billing invoice, as defined in the healthcare_platform_billing_items table. Filtering options enable staff to locate billing items by service code, amount, date, item status, and other searchable fields. Paging and result ordering are required for workflows handling large, complex invoices.\n\nAccess to this operation should be controlled so only administrators, billing staff, or auditors of the organization associated with the invoice can use it. Audit logs must be maintained for all access events. Related endpoints include detail retrieval (GET /billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}), creation (POST), and update (PUT).\n\nAll filtering and sorting logic leverages column definitions and index strategies from the billing items schema, providing response formats suitable for UI tabular display and export.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the billing invoice whose items are to be retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination options for billing items within a given invoice.","typeName":"IHealthcarePlatformBillingItem.IRequest"},"responseBody":{"description":"Paginated search result of billing items for the specified invoice.","typeName":"IPageIHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"index","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves the full details of a single billing item by its ID for a specific billing invoice. It is keyed to the healthcare_platform_billing_items table and is used by billing, admin, or compliance staff for inspecting or verifying all fields of a billing item during audits, financial reviews, invoice adjustments, or issue resolution.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}","method":"get","summary":"Retrieve detailed information for a specific billing item (IHealthcarePlatformBillingItem)","description":"This operation fetches all the detailed attributes of a single billing item as defined in the healthcare_platform_billing_items table, for the given invoice. It is intended for use by billing administrators, organization admins, finance, or compliance staff who need to review the complete structure of the item—including service code, description, quantity, pricing, and adjustment links.\n\nAuthorization is restricted to organization administrators, designated department heads, and other roles with invoice/billing access. Audit logging is performed for all access.\n\nThis endpoint supports workflows for invoice review, dispute resolution, and compliance audit. Related operations include list retrieval (PATCH), creation (POST), and update (PUT).","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the parent billing invoice.","schema":{"type":"string","format":"uuid"}},{"name":"billingItemId","description":"Unique identifier of the billing item to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed billing item record linked to the invoice.","typeName":"IHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"at","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the full details of a single billing item by its ID for a specific billing invoice. It is keyed to the healthcare_platform_billing_items table and is used by billing, admin, or compliance staff for inspecting or verifying all fields of a billing item during audits, financial reviews, invoice adjustments, or issue resolution.","path":"/healthcarePlatform/departmentHead/billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}","method":"get","summary":"Retrieve detailed information for a specific billing item (IHealthcarePlatformBillingItem)","description":"This operation fetches all the detailed attributes of a single billing item as defined in the healthcare_platform_billing_items table, for the given invoice. It is intended for use by billing administrators, organization admins, finance, or compliance staff who need to review the complete structure of the item—including service code, description, quantity, pricing, and adjustment links.\n\nAuthorization is restricted to organization administrators, designated department heads, and other roles with invoice/billing access. Audit logging is performed for all access.\n\nThis endpoint supports workflows for invoice review, dispute resolution, and compliance audit. Related operations include list retrieval (PATCH), creation (POST), and update (PUT).","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the parent billing invoice.","schema":{"type":"string","format":"uuid"}},{"name":"billingItemId","description":"Unique identifier of the billing item to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed billing item record linked to the invoice.","typeName":"IHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"at","authorizationRole":"departmentHead","authorizationType":null},{"specification":"Creates a new billing item under the specified billing invoice. This operation maps to the healthcare_platform_billing_items table and allows billing staff or administrators to itemize services or products delivered to a patient encounter, including code assignment, quantity, and financial metadata. It supports business logic for post-encounter billing entry, real-time adjustments, and compliance documentation. All creation activities are subject to full audit trails and business validation rules.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingItems","method":"post","summary":"Create a billing item for an invoice (IHealthcarePlatformBillingItem)","description":"This operation enables authorized billing or administrative users to create a new billing item under a given invoice, as stored in the healthcare_platform_billing_items table. Required details generally include the billing code, quantity, item description, price, and calculation logic as defined in schema columns.\n\nBusiness validation ensures that item creation is allowed only when the parent invoice is active and appropriate organization and billing permissions are in effect. Item creation must be fully auditable, with pre- and post-validation states recorded for compliance review.\n\nOnly authorized roles (billing staff, administrators, department heads) may perform this operation. This action is typically part of broader invoice creation, amendment, or post-encounter correction workflows. Related endpoints are the list (PATCH), detail (GET), and update (PUT) operations.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the new item will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for new billing item to be created under the specified invoice.","typeName":"IHealthcarePlatformBillingItem.ICreate"},"responseBody":{"description":"The created billing item record under the invoice.","typeName":"IHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"create","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Creates a new billing item under the specified billing invoice. This operation maps to the healthcare_platform_billing_items table and allows billing staff or administrators to itemize services or products delivered to a patient encounter, including code assignment, quantity, and financial metadata. It supports business logic for post-encounter billing entry, real-time adjustments, and compliance documentation. All creation activities are subject to full audit trails and business validation rules.","path":"/healthcarePlatform/departmentHead/billingInvoices/{billingInvoiceId}/billingItems","method":"post","summary":"Create a billing item for an invoice (IHealthcarePlatformBillingItem)","description":"This operation enables authorized billing or administrative users to create a new billing item under a given invoice, as stored in the healthcare_platform_billing_items table. Required details generally include the billing code, quantity, item description, price, and calculation logic as defined in schema columns.\n\nBusiness validation ensures that item creation is allowed only when the parent invoice is active and appropriate organization and billing permissions are in effect. Item creation must be fully auditable, with pre- and post-validation states recorded for compliance review.\n\nOnly authorized roles (billing staff, administrators, department heads) may perform this operation. This action is typically part of broader invoice creation, amendment, or post-encounter correction workflows. Related endpoints are the list (PATCH), detail (GET), and update (PUT) operations.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the new item will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for new billing item to be created under the specified invoice.","typeName":"IHealthcarePlatformBillingItem.ICreate"},"responseBody":{"description":"The created billing item record under the invoice.","typeName":"IHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"create","authorizationRole":"departmentHead","authorizationType":null},{"specification":"Updates an existing billing item under a specific invoice. This operation works on the healthcare_platform_billing_items table and allows billing and administrative staff to correct errors, adjust quantities/prices, or apply new coding per audit, compliance, or business changes. It requires full validation of business rules, audit states, and permissions.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}","method":"put","summary":"Update an existing billing item linked to an invoice (IHealthcarePlatformBillingItem)","description":"Applies updates to a billing item, referenced by its ID and parent invoice, in the healthcare_platform_billing_items table. Permitted fields for update include description, quantity, item code, pricing, and adjustment details—subject to business logic and compliance review. Edits are logged for full auditability, with before/after comparison and justification (if required).\n\nOnly billing staff, department heads, or organization administrators with the correct permissions may use this operation. The endpoint supports workflows for error correction, regulatory compliance, post-payment reconciliation, and dispute resolution. Related endpoints include detail retrieval (GET), bulk/list (PATCH), and creation (POST) operations.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the parent billing invoice.","schema":{"type":"string","format":"uuid"}},{"name":"billingItemId","description":"Unique identifier of the billing item to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for the billing item update, such as new quantity, code, description, or pricing.","typeName":"IHealthcarePlatformBillingItem.IUpdate"},"responseBody":{"description":"Updated, canonical billing item information reflecting all changes.","typeName":"IHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"update","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Updates an existing billing item under a specific invoice. This operation works on the healthcare_platform_billing_items table and allows billing and administrative staff to correct errors, adjust quantities/prices, or apply new coding per audit, compliance, or business changes. It requires full validation of business rules, audit states, and permissions.","path":"/healthcarePlatform/departmentHead/billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}","method":"put","summary":"Update an existing billing item linked to an invoice (IHealthcarePlatformBillingItem)","description":"Applies updates to a billing item, referenced by its ID and parent invoice, in the healthcare_platform_billing_items table. Permitted fields for update include description, quantity, item code, pricing, and adjustment details—subject to business logic and compliance review. Edits are logged for full auditability, with before/after comparison and justification (if required).\n\nOnly billing staff, department heads, or organization administrators with the correct permissions may use this operation. The endpoint supports workflows for error correction, regulatory compliance, post-payment reconciliation, and dispute resolution. Related endpoints include detail retrieval (GET), bulk/list (PATCH), and creation (POST) operations.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the parent billing invoice.","schema":{"type":"string","format":"uuid"}},{"name":"billingItemId","description":"Unique identifier of the billing item to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for the billing item update, such as new quantity, code, description, or pricing.","typeName":"IHealthcarePlatformBillingItem.IUpdate"},"responseBody":{"description":"Updated, canonical billing item information reflecting all changes.","typeName":"IHealthcarePlatformBillingItem"},"authorizationRoles":["organizationAdmin","departmentHead"],"name":"update","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation permanently deletes a specific billing item from a healthcare platform billing invoice. It directly manipulates the healthcare_platform_billing_items table, removing the record identified by billingItemId within its parent invoice (billingInvoiceId). This operation is used for audit-correct removal (e.g., erroneous charge or regulatory dispute) and will hard-delete the billing item unless the schema contains a soft delete column. The operation enforces all business, financial, and audit policies prior to deletion.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}","method":"delete","summary":"Delete a billing item from a specific billing invoice (healthcare_platform_billing_items table)","description":"This API operation deletes a single billing item from the invoice in the healthcare_platform_billing_items table. It is used by billing administrators or organization finance staff to remove billing lines that were added in error, are disputed, or need correction due to compliance or audit requirements.\n\nSecurity is enforced to ensure only users with sufficient privileges (e.g., organizationAdmin or higher) can perform this action, and successful deletion is logged for audit trails in accordance with organizational and legal policy. If the schema defines a soft delete field (deleted_at), the deletion is logical; otherwise, the item is removed permanently. Deletions may impact invoice totals, insurance claims, and downstream financial analytics, so system logic MUST ensure affected invoice and claim records are accurately recalculated or marked pending review after item removal.\n\nExpected errors include attempting to delete an item not linked to the specified invoice, deleting an item from a finalized or locked invoice, or permission violations. No data is returned on successful deletion, but compliance logs should track the event.\n\nThis resource is only available to users with appropriate billing/finance roles. Related operations: creating or updating billing items, viewing invoice details, and adjusting invoice totals or payment plans.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the target billing invoice (UUID format)","schema":{"type":"string","format":"uuid"}},{"name":"billingItemId","description":"Unique identifier for the billing item to delete (UUID format)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation retrieves a filtered, paginated list of billing codes (procedures, item codes, diagnoses) from the healthcare_platform_billing_codes table in the healthcarePlatform service. It enables advanced search for administrators and billing staff, supporting code lookup by system (CPT, ICD-10, internal), status, descriptive filters, and sort/pagination controls. Results are returned as summary records for use in selection UIs and reporting.","path":"/healthcarePlatform/organizationAdmin/billingCodes","method":"patch","summary":"Search and list billing codes with filter, sort, and pagination (healthcare_platform_billing_codes table)","description":"This API operation provides a paginated, filterable search of all billing codes available in the healthcare_platform_billing_codes table. Results include all required attributes for each code such as code, code_system, name, description, and active status, supporting both clinical and financial workflows.\n\nIntended for use by organization administrators, billing managers, or clinical informaticists who need to reference, select, or maintain valid code lists for invoicing, claims, and external reporting. The response type delivers summary detail for each code and includes metadata for UI filtering, pagination, and search-as-you-type functions.\n\nSecurity should ensure only authorized administrative or clinical staff have access to the full code library, if required by organization policy. Business rules support filtering by code system (CPT, ICD-10, etc), code name or partial match, active/inactive status, and custom sort orders. Unusual queries or bulk extracting large code sets for regulatory scrutiny are rate-limited and logged under audit policies.\n\nError conditions include malformed filter syntax, invalid pagination parameters, or unrecognized code systems. The business implementation references the description fields from Prisma schema to ensure field and relationship accuracy.","parameters":[],"requestBody":{"description":"Search and pagination parameters for billing code lookup (filter, sort, page, pageSize, code_system, active, etc)","typeName":"IHealthcarePlatformBillingCode.IRequest"},"responseBody":{"description":"Paginated list of billing code summaries and metadata matching search criteria","typeName":"IPageIHealthcarePlatformBillingCode.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation returns full details for a single billing code from the healthcare_platform_billing_codes table, queried by its unique UUID. It is used by administrators or billing users to review code attributes and ensure accurate invoicing or coding. Details include code, system, name, description, and active status. The endpoint is read-only and supports compliance workflows and system code mapping.","path":"/healthcarePlatform/organizationAdmin/billingCodes/{billingCodeId}","method":"get","summary":"Retrieve detailed information for a specific billing code (healthcare_platform_billing_codes table)","description":"This API operation retrieves all available details for a single billing code, identified by billingCodeId, from the healthcare_platform_billing_codes table. It is used by billing admins, organization administrators, or clinical coders to review characteristics, definition, code system origin (CPT, ICD-10, etc), description, status, and usage policies as configured for the organization.\n\nSecurity and audit policies enforce that only authorized users can access code details, especially for internal or legacy custom codes. The operation supports drill-down from code lookup UIs or coding worklists, and is essential for reviewing code eligibility before use in invoice line items, claims, or reporting.\n\nError responses occur if the code is not found, is archived, or the user lacks sufficient privileges. Related operations include code search (PATCH /billingCodes) and code creation or edit (POST/PUT). All fields in the response strictly match those documented in the Prisma schema.","parameters":[{"name":"billingCodeId","description":"Unique identifier for the target billing code (UUID format)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed record for the target billing code, all schema fields and attributes","typeName":"IHealthcarePlatformBillingCode"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation creates a new billing code in the healthcare_platform_billing_codes table, allowing organization administrators and billing managers to add procedural, diagnostic, or product/service codes for future billing and claim use. Required fields include code, code_system, name, and status. After creation, the record is returned for validation and registration in downstream systems. Supports business and compliance logic for code systems, naming, uniqueness, and active status control.","path":"/healthcarePlatform/organizationAdmin/billingCodes","method":"post","summary":"Create a new billing code entry (healthcare_platform_billing_codes table)","description":"This API operation enables authorized billing and administrative users to add a new billing code to the core reference table, healthcare_platform_billing_codes. Typical use cases include adding new CPT or ICD-10 codes, custom fee schedule items, or legacy codes needed for regulatory reporting or historical reconciliation.\n\nThe POST request body collects all mandatory and optional code fields (per Prisma schema): code, code_system, name, description, active flag, and reference metadata. Uniqueness of code/code_system is enforced according to schema constraints. Upon success, the new code record is returned in full, accessible for subsequent use in invoice items or claims.\n\nThis operation is secured to organizationAdmin or similarly privileged roles. Validation logic ensures correct format for code, code system, and all string fields, and may block duplicate entries or codes marked inactive. Creation errors may include violation of uniqueness, missing required values, or business logic mismatches.\n\nThis endpoint is essential for maintaining the organization's billing/charge master and code mapping catalog, in compliance with financial controls and regulatory reporting policies.","parameters":[],"requestBody":{"description":"Properties required to create a new billing code (code, code_system, name, etc.) as defined in the Prisma schema.","typeName":"IHealthcarePlatformBillingCode.ICreate"},"responseBody":{"description":"Complete detail of the newly created billing code record after persistence","typeName":"IHealthcarePlatformBillingCode"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing billing code record in the healthcarePlatform system. The billing code is associated with the healthcare_platform_billing_codes table in the Prisma schema and is utilized throughout billing and claims workflows for mapping procedures, medications, and service items to regulatory and internal code systems such as CPT or ICD-10. This update endpoint enables authorized administrators to alter code metadata, display names, descriptions, or status in accordance with business policy and regulatory changes.","description":"Update the properties of a single billing code within the healthcarePlatform system. By specifying the billingCodeId path parameter, authorized administrators can change details such as the billing code's name, code system, description, and active status.\n\nThis operation enforces audit logging of all changes and restricts access to users with appropriate privileges (e.g., systemAdmin, organizationAdmin). All code modifications are tracked for compliance. Any update must conform to schema requirements, including validation of unique constraints on the code and code_system pair.\n\nSecurity controls include role-based access and full record of update events for possible regulatory review. Related APIs include code creation, listing, and metadata retrieval endpoints.","summary":"Update a billing code's metadata in the healthcarePlatform billing system.","parameters":[{"name":"billingCodeId","description":"The unique identifier of the billing code to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated properties and metadata for the billing code.","typeName":"IHealthcarePlatformBillingCode.IUpdate"},"responseBody":{"description":"The updated billing code information.","typeName":"IHealthcarePlatformBillingCode"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"update","path":"/healthcarePlatform/systemAdmin/billingCodes/{billingCodeId}","method":"put"},{"specification":"This operation updates an existing billing code record in the healthcarePlatform system. The billing code is associated with the healthcare_platform_billing_codes table in the Prisma schema and is utilized throughout billing and claims workflows for mapping procedures, medications, and service items to regulatory and internal code systems such as CPT or ICD-10. This update endpoint enables authorized administrators to alter code metadata, display names, descriptions, or status in accordance with business policy and regulatory changes.","description":"Update the properties of a single billing code within the healthcarePlatform system. By specifying the billingCodeId path parameter, authorized administrators can change details such as the billing code's name, code system, description, and active status.\n\nThis operation enforces audit logging of all changes and restricts access to users with appropriate privileges (e.g., systemAdmin, organizationAdmin). All code modifications are tracked for compliance. Any update must conform to schema requirements, including validation of unique constraints on the code and code_system pair.\n\nSecurity controls include role-based access and full record of update events for possible regulatory review. Related APIs include code creation, listing, and metadata retrieval endpoints.","summary":"Update a billing code's metadata in the healthcarePlatform billing system.","parameters":[{"name":"billingCodeId","description":"The unique identifier of the billing code to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated properties and metadata for the billing code.","typeName":"IHealthcarePlatformBillingCode.IUpdate"},"responseBody":{"description":"The updated billing code information.","typeName":"IHealthcarePlatformBillingCode"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"update","path":"/healthcarePlatform/organizationAdmin/billingCodes/{billingCodeId}","method":"put"},{"specification":"This operation permanently removes a billing code entry from the healthcare_platform_billing_codes table in the healthcarePlatform system. Billing codes classify services and items for billing and claims, and deleting a code should only be performed when the code is no longer valid, required, or was created in error. This is a hard delete operation, as the Prisma schema does not include a soft delete mechanism for this record.","description":"Permanently delete a billing code from the healthcarePlatform's billing codes catalog. This operation requires the billingCodeId path parameter and is restricted to system-level or organization-level administrative roles.\n\nAll deletions are audit-logged for compliance and traceability. Once deleted, the billing code cannot be referenced in new invoices or claims, and related business logic will prevent its future use. Attempting to delete an in-use or referenced code should result in a validation error describing dependencies. Access is controlled strictly via authorization roles, and all delete actions are permanently recorded.","summary":"Delete a billing code from the healthcarePlatform billing code catalog.","parameters":[{"name":"billingCodeId","description":"The unique identifier of the billing code to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase","path":"/healthcarePlatform/systemAdmin/billingCodes/{billingCodeId}","method":"delete"},{"specification":"This operation permanently removes a billing code entry from the healthcare_platform_billing_codes table in the healthcarePlatform system. Billing codes classify services and items for billing and claims, and deleting a code should only be performed when the code is no longer valid, required, or was created in error. This is a hard delete operation, as the Prisma schema does not include a soft delete mechanism for this record.","description":"Permanently delete a billing code from the healthcarePlatform's billing codes catalog. This operation requires the billingCodeId path parameter and is restricted to system-level or organization-level administrative roles.\n\nAll deletions are audit-logged for compliance and traceability. Once deleted, the billing code cannot be referenced in new invoices or claims, and related business logic will prevent its future use. Attempting to delete an in-use or referenced code should result in a validation error describing dependencies. Access is controlled strictly via authorization roles, and all delete actions are permanently recorded.","summary":"Delete a billing code from the healthcarePlatform billing code catalog.","parameters":[{"name":"billingCodeId","description":"The unique identifier of the billing code to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null,"name":"erase","path":"/healthcarePlatform/organizationAdmin/billingCodes/{billingCodeId}","method":"delete"},{"specification":"This operation retrieves a filtered and paginated list of billing adjustments associated with a specific billing invoice. The billing adjustments are stored in the healthcare_platform_billing_adjustments table and represent discounts, write-offs, or corrections applied at either the invoice or item level. This list endpoint enables authorized billing staff and administrators to review all adjustments tied to the invoice for audit, financial review, and workflow tracking.","description":"Obtain a paginated list of all billing adjustments applied to the specified billing invoice. The billing adjustments, which may include insurance write-offs, patient discounts, and administrative corrections, are filtered to the target invoice using the billingInvoiceId path parameter. Additional filtering, searching, or sorting may be provided via the request body.\n\nAccess to this operation is restricted to billing staff, system administrators, and organization administrators. All data is returned in accordance with permission scopes, organizational boundaries, and audit requirements. The operation is essential for financial reconciliation, compliance audits, and patient billing inquiries. Related endpoints include adjustment creation and retrieval.","summary":"List all billing adjustments for a given invoice, supporting pagination and filtering.","parameters":[{"name":"billingInvoiceId","description":"The unique identifier for the invoice whose adjustments are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination parameters for billing adjustments.","typeName":"IHealthcarePlatformBillingAdjustment.IRequest"},"responseBody":{"description":"Paginated list of billing adjustments for the invoice.","typeName":"IPageIHealthcarePlatformBillingAdjustment"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/healthcarePlatform/systemAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments","method":"patch"},{"specification":"This operation retrieves a filtered and paginated list of billing adjustments associated with a specific billing invoice. The billing adjustments are stored in the healthcare_platform_billing_adjustments table and represent discounts, write-offs, or corrections applied at either the invoice or item level. This list endpoint enables authorized billing staff and administrators to review all adjustments tied to the invoice for audit, financial review, and workflow tracking.","description":"Obtain a paginated list of all billing adjustments applied to the specified billing invoice. The billing adjustments, which may include insurance write-offs, patient discounts, and administrative corrections, are filtered to the target invoice using the billingInvoiceId path parameter. Additional filtering, searching, or sorting may be provided via the request body.\n\nAccess to this operation is restricted to billing staff, system administrators, and organization administrators. All data is returned in accordance with permission scopes, organizational boundaries, and audit requirements. The operation is essential for financial reconciliation, compliance audits, and patient billing inquiries. Related endpoints include adjustment creation and retrieval.","summary":"List all billing adjustments for a given invoice, supporting pagination and filtering.","parameters":[{"name":"billingInvoiceId","description":"The unique identifier for the invoice whose adjustments are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, sorting, and pagination parameters for billing adjustments.","typeName":"IHealthcarePlatformBillingAdjustment.IRequest"},"responseBody":{"description":"Paginated list of billing adjustments for the invoice.","typeName":"IPageIHealthcarePlatformBillingAdjustment"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"index","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments","method":"patch"},{"specification":"This operation retrieves the detailed information for a single billing adjustment record directly associated with a specific billing invoice. The billing adjustment is stored in healthcare_platform_billing_adjustments and contains granular metadata concerning the type, amount, description, date, and entity (invoice or item) to which the adjustment belongs. This endpoint enables authorized financial, billing, or administrative users to review the adjustment details, supporting audit, corrections, and compliance workflows.","description":"Fetch complete metadata and details for a single billing adjustment belonging to the specified invoice, identified by both the parent billingInvoiceId and the billingAdjustmentId. Response includes type, value, timestamps, description, and references to impacted items or invoices. \n\nAccess is limited to systemAdmin and organizationAdmin roles, ensuring only appropriate staff may inspect adjustment records. All requests and resulting actions are fully audit-logged for compliance and regulatory purposes. Related endpoints support adjustment modification and broader invoice/billing review.","summary":"Retrieve a single billing adjustment's detailed information for a specific invoice.","parameters":[{"name":"billingInvoiceId","description":"The unique identifier for the parent invoice of the adjustment.","schema":{"type":"string","format":"uuid"}},{"name":"billingAdjustmentId","description":"The unique identifier for the billing adjustment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed billing adjustment record, including links to related items or invoices.","typeName":"IHealthcarePlatformBillingAdjustment"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/systemAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments/{billingAdjustmentId}","method":"get"},{"specification":"This operation retrieves the detailed information for a single billing adjustment record directly associated with a specific billing invoice. The billing adjustment is stored in healthcare_platform_billing_adjustments and contains granular metadata concerning the type, amount, description, date, and entity (invoice or item) to which the adjustment belongs. This endpoint enables authorized financial, billing, or administrative users to review the adjustment details, supporting audit, corrections, and compliance workflows.","description":"Fetch complete metadata and details for a single billing adjustment belonging to the specified invoice, identified by both the parent billingInvoiceId and the billingAdjustmentId. Response includes type, value, timestamps, description, and references to impacted items or invoices. \n\nAccess is limited to systemAdmin and organizationAdmin roles, ensuring only appropriate staff may inspect adjustment records. All requests and resulting actions are fully audit-logged for compliance and regulatory purposes. Related endpoints support adjustment modification and broader invoice/billing review.","summary":"Retrieve a single billing adjustment's detailed information for a specific invoice.","parameters":[{"name":"billingInvoiceId","description":"The unique identifier for the parent invoice of the adjustment.","schema":{"type":"string","format":"uuid"}},{"name":"billingAdjustmentId","description":"The unique identifier for the billing adjustment to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed billing adjustment record, including links to related items or invoices.","typeName":"IHealthcarePlatformBillingAdjustment"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments/{billingAdjustmentId}","method":"get"},{"specification":"Creates a new billing adjustment for a specific billing invoice in the healthcarePlatform system. Operates on the healthcare_platform_billing_adjustments table, which holds all invoice/item-level financial adjustments such as discounts, write-offs, corrections, or insurance remittance differences. This endpoint links the adjustment directly to its parent invoice via the path parameter and accepts details regarding the type, description, and amount of the adjustment, enforcing business policy and compliance rules. Soft deletion is supported by the schema for adjustment archival and audit, rather than physical removal. Related entities include billing invoices, items (if item-level adjustment), and financial audit logs.","description":"This API operation allows authorized billing or administrative staff to create a new billing adjustment for a specific invoice identified by the billingInvoiceId path parameter. The healthcare_platform_billing_adjustments table logs every adjustment applied at the invoice or item level, such as discounts, charity write-offs, error corrections, or special policy-based adjustments. This operation requires the client to specify details such as the adjustment type, description, and adjustment amount, as well as associating the adjustment with the correct invoice or billing item through request data. Input validation ensures compliance with business policy (e.g., adjustment must not exceed invoice total without proper authorization, reasons must be provided for audit, and discounts follow organizational policy).\n\nThe endpoint adheres to financial compliance standards for traceability and audit trails. Only users with proper billing privileges may invoke this operation, and all adjustments are subject to downstream audit logging and review. Soft deletion of adjustments exists for compliance, allowing audit review of removed or reversed adjustments. Related APIs include POST /billingInvoices (invoice creation), and GET/PATCH endpoints for invoice and item overview, forming part of a comprehensive billing lifecycle.\n\nAny error such as unauthorized access, missing required fields, or business rule violations (like amount out of bounds, missing rationale, or invalid adjustment type for context) will be met with detailed validation errors.","summary":"Create a billing adjustment for a given invoice (healthcare_platform_billing_adjustments).","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the target billing invoice to which the adjustment will be applied.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Detailed information of the billing adjustment to be created for the target invoice, following IHealthcarePlatformBillingAdjustment.ICreate structure.","typeName":"IHealthcarePlatformBillingAdjustment.ICreate"},"responseBody":{"description":"The created adjustment for the target invoice as returned by the system.","typeName":"IHealthcarePlatformBillingAdjustment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments","method":"post"},{"specification":"Updates an existing billing adjustment for a specific billing invoice in the healthcarePlatform system. This operation acts on the healthcare_platform_billing_adjustments table, which tracks all invoice and item-level financial adjustments. The endpoint is used to correct, revise, or supplement information about an adjustment previously created, complying with business audit and compliance requirements. Changes are limited to editable fields as allowed by policy (e.g., description, amount, type), while structural fields such as the parent invoice reference remain immutable. The table and operation are soft-delete aware, with full update-audit for every change performed.","description":"This operation enables authorized organization administrators or billing staff to modify details of an existing billing adjustment tied to a specific invoice. By specifying both the billingInvoiceId and billingAdjustmentId path parameters, the user identifies the exact adjustment to update. The request body supports updates for fields such as adjustment type, description, and amount, with validation enforcing audit compliance: required reasons for adjustment, limits on value changes, and consistency with financial policies (such as not exceeding invoice total or backdating without rationale).\n\nOnly authenticated staff holding the organizationAdmin role (or equivalent) can invoke this API. The system maintains a revision/audit trail to ensure all updates are historical and reviewable, thus preserving compliance. Attempts to edit non-editable fields (e.g., invoice_id) or adjustments that are already soft-deleted/archived are rejected with validation errors and detailed audit logging. Related API paths include creation and deletion of adjustments, with this endpoint enabling correction or clarification workflows for open invoices.\n\nErrors such as insufficient privilege, invalid adjustment status, or data validation failures are clearly reported and audited for organizational accountability.","summary":"Update an existing billing adjustment for a specific invoice (healthcare_platform_billing_adjustments).","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the adjustment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"billingAdjustmentId","description":"Unique identifier of the billing adjustment to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New values for the billing adjustment fields to update, using IHealthcarePlatformBillingAdjustment.IUpdate structure.","typeName":"IHealthcarePlatformBillingAdjustment.IUpdate"},"responseBody":{"description":"The updated adjustment for the target invoice after applied changes.","typeName":"IHealthcarePlatformBillingAdjustment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments/{billingAdjustmentId}","method":"put"},{"specification":"Removes (soft-deletes) an existing billing adjustment from a specified billing invoice within the healthcarePlatform system. This endpoint operates on the healthcare_platform_billing_adjustments table. The deletion is soft, meaning the record is not permanently erased but is flagged for archival/compliance retention, enabling full auditability according to business and regulatory requirements. Only administrative/billing staff with sufficient permissions may perform this operation.","description":"This API operation allows an authorized organization administrator or billing staff member to remove (soft-delete) a billing adjustment entry linked to a specific invoice. Both the billingInvoiceId and billingAdjustmentId path parameters are required to precisely target the appropriate adjustment. Instead of a hard delete, the operation sets the deleted_at timestamp, ensuring the adjustment remains archived for downstream audit, regulatory review, or compliance recovery per organizational policy. No data loss occurs, and downstream reports and workflows adjust to exclude soft-deleted adjustments.\n\nSecurity and privilege checks ensure only users with the organizationAdmin role and appropriate billing permissions can execute this operation. Any attempts to remove already archived adjustments, adjust non-existent records, or bypass audit logging are rejected and logged for compliance. Related workflow APIs include adjustment creation and update for full billing lifecycle control.\n\nClear error responses are provided in the event of privilege violations, missing records, or audit failures. The operation integrates with the platform’s overall compliance and retention framework, supporting robust traceability.","summary":"Soft-delete (archive) an existing billing adjustment for a billing invoice (healthcare_platform_billing_adjustments).","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the adjustment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"billingAdjustmentId","description":"Unique identifier of the billing adjustment to be archived (soft-deleted).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingAdjustments/{billingAdjustmentId}","method":"delete"},{"specification":"Performs a paginated search to retrieve all discount policy records for billing across the multi-tenant healthcarePlatform environment. This operation targets the healthcare_platform_billing_discount_policies table, which holds policies like charity, employee, or hardship discounts, customizable per organization. The API offers advanced filtering, sorting, and pagination to support analytics, policy audits, administrative adjustments, and compliance/financial reporting. Access is limited to authorized organization administrators since discount policies are financial governance entities.","description":"This API enables organization admins to search, filter, and paginate through all billing discount policy records within their organization. The healthcare_platform_billing_discount_policies table defines all allowed discounting schemes (e.g., charity, sliding scale, policy-driven discounts) and their business activation status. Clients may use criteria such as policy name, type, organization, or status to narrow the result set.\n\nFull response includes all policy metadata, descriptions, activation status, and timestamps, supporting administrative review, policy compliance checks, and downstream integration with other billing flows (such as invoice adjustments or plan setup). The operation is strictly for organizationAdmin-level access, with robust input validation for query filters on policy_name, status, and activation. Paginated results ensure efficient management of large policy catalogs in major organizations.\n\nErrors are clearly returned for permission failures, malformed queries, or pagination parameter issues. The endpoint integrates with other billing administration APIs for comprehensive financial policy management workflows.","summary":"Paginated search for billing discount policies (healthcare_platform_billing_discount_policies).","parameters":[],"requestBody":{"description":"Filter, sort, and pagination parameters for discount policy search, using IHealthcarePlatformBillingDiscountPolicy.IRequest structure.","typeName":"IHealthcarePlatformBillingDiscountPolicy.IRequest"},"responseBody":{"description":"Paginated list of discount policy summaries available to the organization administrator.","typeName":"IPageIHealthcarePlatformBillingDiscountPolicy.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/billingDiscountPolicies","method":"patch"},{"specification":"This operation retrieves detailed information for a specific billing discount policy in the healthcarePlatform system. The API operates directly on the healthcare_platform_billing_discount_policies table. It allows administrators or authorized users to view the configuration, business logic, and status of a named discount policy that applies to organizational billing practices and invoice calculations. Based on the provided billingDiscountPolicyId, consumers of this API can fetch policy type, description, activation status, rules, and audit metadata.","path":"/healthcarePlatform/organizationAdmin/billingDiscountPolicies/{billingDiscountPolicyId}","method":"get","summary":"Retrieve a specific billing discount policy by ID from healthcare_platform_billing_discount_policies.","description":"Fetches the full record for a billing discount policy as defined in the healthcare_platform_billing_discount_policies table. This operation is essential for admins and billing staff who need to review the details and current status of a particular discount policy—such as charity care, hardship, or staff discounts.\n\nThe API requires the billingDiscountPolicyId as a UUID path parameter. Security and organizational RBAC boundaries are enforced; only organizationAdmins (and above) may fetch policies for their own organization. Sensitive configuration and is_active flags are included for compliance/audit review.\n\nReturns all non-deleted fields, including business logic description, policy type, discount method (percentage/fixed), and timestamps for creation and last update. Errors are provided if the ID is not found or if access is denied by the RBAC model.","parameters":[{"name":"billingDiscountPolicyId","description":"Unique identifier for the billing discount policy record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive details of the requested billing discount policy.","typeName":"IHealthcarePlatformBillingDiscountPolicy"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"at"},{"specification":"Create a new billing discount policy for an organization using the healthcare_platform_billing_discount_policies table. Only organization-level administrators may define new policies due to compliance and audit significance. This allows healthcarePlatform tenants to formally introduce business policies such as charity discounts, sliding-scale reductions, or employee discounts within their billing and revenue operations.","path":"/healthcarePlatform/organizationAdmin/billingDiscountPolicies","method":"post","summary":"Create a new billing discount policy in healthcare_platform_billing_discount_policies.","description":"This operation allows organizationAdmins to add a new billing discount policy to their organization's configuration via the healthcare_platform_billing_discount_policies table. The policy defines available/approved discount logic, display names, and description for financial workflows.\n\nPOST body requires all fields necessary per the IHealthcarePlatformBillingDiscountPolicy.ICreate schema, including policy_name, discount_type, description (optional), and is_active flag. Created policies are subject to compliance review and business rules about uniqueness and policy rationale. Only admins with financial permissions can execute this operation according to the Prisma model's description and RBAC boundary.\n\nFailure modes include attempts to duplicate a policy_name within the same organization, inadequate permissions, or invalid data. On success, the new policy record is returned for reference and further management.","parameters":[],"requestBody":{"description":"New billing discount policy data as defined by the ICreate DTO.","typeName":"IHealthcarePlatformBillingDiscountPolicy.ICreate"},"responseBody":{"description":"Newly created billing discount policy record.","typeName":"IHealthcarePlatformBillingDiscountPolicy"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"create"},{"specification":"Update an existing billing discount policy for an organization by record ID using the healthcare_platform_billing_discount_policies table, enforcing RBAC and compliance workflow requirements. Enables authorized admins to change status, description, or discount logic for approved policies, with full audit trail.","path":"/healthcarePlatform/organizationAdmin/billingDiscountPolicies/{billingDiscountPolicyId}","method":"put","summary":"Update an existing billing discount policy by ID in healthcare_platform_billing_discount_policies.","description":"This operation allows organization-level administrators to modify an existing billing discount policy, such as updating whether it is active, changing description or names, or altering business logic for allowed financial discounts.\n\nThe target policy is specified by billingDiscountPolicyId (UUID path parameter). The PUT body uses the IHealthcarePlatformBillingDiscountPolicy.IUpdate DTO, which supports patching policy_name, discount_type, description, or is_active flags. Full audit trails and compliance checks are enforced to track changes.\n\nValidation ensures policy integrity, uniqueness (no duplicate names within the same organization), and prevents modification if the record is soft-deleted. Only authorized organizationAdmins may perform updates. Returns the updated policy record on success, or errors for permission/validation failures.","parameters":[{"name":"billingDiscountPolicyId","description":"Unique identifier of the billing discount policy to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated billing discount policy fields. All updatable fields per IUpdate DTO.","typeName":"IHealthcarePlatformBillingDiscountPolicy.IUpdate"},"responseBody":{"description":"The updated billing discount policy record.","typeName":"IHealthcarePlatformBillingDiscountPolicy"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"update"},{"specification":"Delete (soft delete) a billing discount policy by ID from the healthcare_platform_billing_discount_policies table. Restricts the operation to organization-level administrators and marks the policy as deleted for compliance retention without removing it from the database. Ensures downstream billing and financial logic respects the is_active and deleted_at compliance pattern.","path":"/healthcarePlatform/organizationAdmin/billingDiscountPolicies/{billingDiscountPolicyId}","method":"delete","summary":"Soft-delete a billing discount policy by ID from healthcare_platform_billing_discount_policies.","description":"This operation allows organization-level administrators to perform a soft-delete on a billing discount policy using its billingDiscountPolicyId (UUID). It marks the policy as deleted for audit and compliance without physical removal from the database, maintaining retention and honoring legal/investigation requirements.\n\nThe operation enforces RBAC so that only authorized admins may archive policies belonging to their organization. Soft-delete is performed by setting deleted_at. All references, such as invoices and adjustments, will respect this policy's is_active and deleted_at status. Deletion is blocked if the policy is referenced by active financial operations. Returns a confirmation on success or appropriate validation error on dependency or permission failure.","parameters":[{"name":"billingDiscountPolicyId","description":"Unique identifier of the billing discount policy to soft-delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null,"name":"erase"},{"specification":"This operation retrieves a paginated list of payment plans associated with a specific billing invoice. It enables authorized users (e.g., organization administrators, billing staff) to search, filter, and sort installment/payment plans for an invoice, supporting workflows for patient self-pay, insurance arrangements, and audit. All retrieval and listing are bound to the organization and patient context, with compliance audit trails for each access. The operation is tightly integrated with the healthcare_platform_billing_payment_plans table and supports complex queries on plan status, terms, and scheduling.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPaymentPlans","method":"patch","summary":"Search and retrieve paginated list of payment plans for a billing invoice","description":"Retrieve a filtered, paginated list of payment plans tied to a specific billing invoice. This endpoint provides advanced search and pagination, allowing billing staff to review all existing payment plans for an invoice, including active, completed, or defaulted schedules. Filtering options may include plan type, status, start/end dates, and outstanding amounts. Security controls ensure only authorized billing or administrative users (such as organizationAdmin roles) can access detailed financial records, with all accesses recorded in the healthcare_platform_financial_audit_logs for traceability and compliance.\n\nRelated operations: use GET /billingInvoices/{billingInvoiceId}/billingPaymentPlans/{billingPaymentPlanId} to retrieve a single payment plan by identifier, or POST to create a new plan for the invoice. All retrievals should respect data isolation and role-based access as configured for the tenant/organization. Errors are logged for attempted unauthorized access or invalid invoice references.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the target billing invoice","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for retrieving payment plans associated with a billing invoice, supporting pagination and sorting.","typeName":"IHealthcarePlatformBillingPaymentPlan.IRequest"},"responseBody":{"description":"Paginated results of payment plan summaries for the specified billing invoice matching the query criteria.","typeName":"IPageIHealthcarePlatformBillingPaymentPlan.ISummary"},"authorizationRoles":["organizationAdmin"],"name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the details of a specific payment plan associated with a billing invoice, identified by its unique payment plan ID. It is designed for billing staff and organizational administrators to audit, manage, or adjust payment plans. Authorization logic ensures only appropriate roles may view financial plan data, and all access is logged for regulatory compliance. The endpoint operates on the healthcare_platform_billing_payment_plans table.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPaymentPlans/{billingPaymentPlanId}","method":"get","summary":"Retrieve details of a specific payment plan for a billing invoice by ID","description":"Retrieve detailed information for a single payment plan linked to a specific billing invoice. This operation returns all fields for the payment plan, such as terms, status, total amount, installment schedule, and associated audit history. Access is limited to users with elevated billing or admin rights (organizationAdmin role), and all retrievals trigger audit log entries in healthcare_platform_financial_audit_logs. If the payment plan does not exist for the given invoice, or access is denied, appropriate error handling and compliance alerts are triggered.\n\nThe payment plan is uniquely identified by its paymentPlanId within the context of the billingInvoiceId. Related endpoints: use PATCH /billingInvoices/{billingInvoiceId}/billingPaymentPlans for searching lists or POST to create new payment plans. Data visibility is strictly enforced by organization and record status.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the target billing invoice","schema":{"type":"string","format":"uuid"}},{"name":"billingPaymentPlanId","description":"Unique identifier for the payment plan associated with the billing invoice","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the requested billing payment plan, including terms, schedule, and status.","typeName":"IHealthcarePlatformBillingPaymentPlan"},"authorizationRoles":["organizationAdmin"],"name":"at","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new payment plan and associates it with a specific billing invoice. It is used by billing staff and administrators to set up installment or deferred payment options for patients or insurers. Creation requires detailed plan data, such as terms, payment schedule, and initial status. Operational logic includes validating that the plan does not duplicate an active plan for the invoice and ensuring regulatory and business rules are met. All creations are audited and recorded for compliance. The operation creates records in the healthcare_platform_billing_payment_plans table.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPaymentPlans","method":"post","summary":"Create a new payment plan tied to a specific billing invoice","description":"Create and associate a new payment plan for a specific billing invoice. Authorized users (organizationAdmin or billing staff) can specify terms such as amount, schedule, and plan type (self-pay, insurance, deferred, etc.). The operation validates inputs for permissible plan types and business rules, ensures no conflicting or duplicate active payment plans exist, and persists the new plan entry in healthcare_platform_billing_payment_plans. Audit logging of the operation captures user, terms, created plan, and relevant invoice linkage. If validation fails (e.g., duplicate plan, invalid data, or insufficient authorization), errors are returned and failed attempts are logged for incident review.\n\nRelated endpoints: PATCH to search/list payment plans, GET by paymentPlanId to retrieve details. All creations trigger compliance audit trail on the finance log table.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the target billing invoice to which the payment plan will be associated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Complete payment plan creation data, including type, schedule, amount, and terms, for the designated billing invoice.","typeName":"IHealthcarePlatformBillingPaymentPlan.ICreate"},"responseBody":{"description":"Details of the payment plan created and associated with the billing invoice.","typeName":"IHealthcarePlatformBillingPaymentPlan"},"authorizationRoles":["organizationAdmin"],"name":"create","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing payment plan for a specific billing invoice. It allows authorized users (billing staff, organization admins) to amend plan terms, schedule, status, or related details. Update actions enforce all business and regulatory validation, including checking plan eligibility for update, disallowing conflicting or retroactive changes as per organizational rules, and logging the operation for compliance. All changes are recorded in the healthcare_platform_billing_payment_plans table and the corresponding audit log.","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPaymentPlans/{billingPaymentPlanId}","method":"put","summary":"Update an existing payment plan associated with a billing invoice","description":"Update the details of a payment plan linked to a specific billing invoice. The update operation allows authorized users to modify allowable aspects of the payment plan, such as terms, schedule, status, or description, according to business constraints and financial compliance. Prior to update, validation ensures the plan is in an updatable state (i.e., not completed or defaulted), the changes do not conflict with other active payments, and audit logging of the change is enforced. All modifications are appended to the healthcare_platform_financial_audit_logs.\n\nIf update fails due to invalid status, data, or permissions, the endpoint returns errors and compliance incident logs. The paymentPlanId and billingInvoiceId parameters uniquely identify the plan to update. For creation, use POST to the same collection endpoint.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier for the billing invoice to which the payment plan belongs","schema":{"type":"string","format":"uuid"}},{"name":"billingPaymentPlanId","description":"Unique identifier for the specific payment plan to be updated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and updated values for the payment plan, as allowed by business and compliance rules.","typeName":"IHealthcarePlatformBillingPaymentPlan.IUpdate"},"responseBody":{"description":"Updated details of the payment plan for the billing invoice, reflecting all modifications and latest status.","typeName":"IHealthcarePlatformBillingPaymentPlan"},"authorizationRoles":["organizationAdmin"],"name":"update","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation deletes a specific billing payment plan associated with a given billing invoice. It operates on the healthcare_platform_billing_payment_plans table, ensuring removal of the payment plan only when it does not violate financial audit or compliance requirements. The action is subject to auditing and retention as required by policy, and hard deletion occurs unless historical retention is specifically required by organizational policy compliance.","description":"Deletes a billing payment plan linked to a given billing invoice. This endpoint is utilized when a financial agreement for payment installments or scheduled settlements must be removed, such as when a patient switches to a different payment method, or the invoice is paid in full. To prevent compliance or audit issues, only plans that are not active or have not yet had payments initiated may be deleted, and all actions are logged for regulatory compliance.\n\nThe endpoint checks the existence and relationship of both the billingInvoiceId and billingPaymentPlanId provided. If successful, the billing payment plan record is permanently removed from the database, with financial audit logs updated accordingly.\n\nAuthorization is restricted to finance roles, such as organizationAdmin or higher, and the operation is logged for audit/compliance traceability. Deleted payment plans cannot be restored except through backup restoration or legal request.\n\nErrors include attempts to delete plans with active payments, nonexistent records, or insufficient permissions.","summary":"Delete a billing payment plan from a billing invoice (healthcare_platform_billing_payment_plans)","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the payment plan belongs","schema":{"type":"string","format":"uuid"}},{"name":"billingPaymentPlanId","description":"Unique identifier of the billing payment plan to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPaymentPlans/{billingPaymentPlanId}","method":"delete"},{"specification":"This operation enables advanced search and pagination for billing payments associated with a particular billing invoice as defined in the healthcare_platform_billing_payments table. It supports filtering on amount, payment date, status, currency, and payee, returning a structured page of results for financial audit and reconciliation. Enables cross-referencing billing and payment records for compliance, reporting, and account status.","description":"Search and retrieve a paginated list of billing payment records linked to a specific billing invoice. This API supports comprehensive filtering by payment status, date range, currency, payee, and other dimensions for financial audits and account management.\n\nResponse contains payment summary data, including transaction details, amounts, and reconciliation status. The query operation is optimized for audit trail purposes, compliance reporting, and patient or administrative review of payments applied to an invoice.\n\nAccess is typically granted to finance staff (organizationAdmin, billing) and all accesses are logged for both security and compliance purposes. Supports business logic for missed, failed, or partially successful payments and includes pagination/sorting as necessary for financial reporting dashboards.","summary":"Search and retrieve billing payments for a billing invoice (healthcare_platform_billing_payments)","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice for which payment search is conducted","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Criteria for searching billing payments, supporting filters such as payment status, date ranges, amount, and pagination parameters","typeName":"IHealthcarePlatformBillingPayment.IRequest"},"responseBody":{"description":"Paginated list of billing payments for the given invoice meeting the search criteria","typeName":"IPageIHealthcarePlatformBillingPayment.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPayments","method":"patch"},{"specification":"This operation retrieves full details about a specific billing payment associated with a given billing invoice. It queries the healthcare_platform_billing_payments table, providing all available information about the payment for accounting, reconciliation, audit, and compliance purposes. Operates on key identifiers, ensuring the payment is properly linked to the invoice and respecting tenant/organization isolation boundaries.","description":"Fetches detailed information for a single billing payment record under a particular invoice. This endpoint is used by finance staff and organization administrators to view transaction details, audit status, payer/payee data, method used, status, and all metadata required for audit and compliance reviews.\n\nThe response includes transaction record, payee, payment method, any reconciliation data, posting and update timestamps, and any related reference numbers or memos. The endpoint validates the linkage between the invoice and payment record before returning details.\n\nAccess is typically limited to organization-admin roles to maintain financial security and protect PHI. Response is optimized for audit, compliance, and reporting, with all accesses logged appropriately for traceability.","summary":"Get a billing payment by ID for a billing invoice (healthcare_platform_billing_payments)","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the payment belongs","schema":{"type":"string","format":"uuid"}},{"name":"billingPaymentId","description":"Unique identifier of the billing payment to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed billing payment entity including transactional, accounting, and audit fields","typeName":"IHealthcarePlatformBillingPayment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPayments/{billingPaymentId}","method":"get"},{"specification":"This operation creates a new billing payment record under a specified billing invoice. It interacts with the healthcare_platform_billing_payments table, allowing finance staff or organization admin to record incoming payment transactions. All required fields—including payee, payment method, amount, date, and status—must conform to data integrity, compliance, and audit policies. Upon successful creation, a payment record is persisted and linked to the billing invoice, with financial audit logs updated accordingly.","description":"Adds a new payment record for the specified billing invoice. This API is used when payments (by patient, insurer, or other payer) are received and need to be formally recorded against an invoice. Required information includes payment amount, currency, status, method, and date, with all entries validated for accuracy and compliance.\n\nOn creation, the payment is fully linked to the invoice and subject to all data retention, audit, and reconciliation logic enforced by the platform. Financial audit logs are automatically generated, and all creation attempts are validated for duplicate, overpayment, or misattributed payments.\n\nTypically restricted to finance staff (organizationAdmin) with all actions logged for compliance. The API enforces business rules such as not exceeding invoice totals and ensuring the invoice is in a payable state.","summary":"Create a new billing payment for a billing invoice (healthcare_platform_billing_payments)","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the new payment will be attached","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details required to create a billing payment including payee, payment method, amount, date, and status","typeName":"IHealthcarePlatformBillingPayment.ICreate"},"responseBody":{"description":"Newly created billing payment with all accounting, audit, and status fields","typeName":"IHealthcarePlatformBillingPayment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPayments","method":"post"},{"specification":"Updates the details of an existing billing payment associated with a specific billing invoice. The operation uses the BillingPayments table which records individual payment transactions for invoices in the healthcare platform. Allowed fields for modification include payment amount, status, payment method, memo, and potentially date or reference information, as determined by the IHealthcarePlatformBillingPayment.IUpdate DTO. This operation supports financial staff and administrative users in correcting, updating, or reconciling payment records tied to invoicing and revenue management workflows for regulatory compliance and audit requirements. All changes are subject to full audit logging and role-based access control to ensure proper authorization and traceability. Update failures may result from immutable fields, invalid status transitions, or failed role validations. Only permitted fields as per schema may be updated; extra fields ignored or cause validation errors.","description":"This operation allows authorized billing, finance, or administrative staff to update a specific payment entry for a billing invoice. Example use cases include correcting payment status (e.g., posted, voided, returned), updating memo fields for audit traceability, or correcting the payment amount after reconciliation with patient/insurer or financial records.\n\nRole-based access control must be enforced strictly. Only users with proper privileges (e.g., organizationAdmin, billingStaff) may perform this update. All changes are audit-logged with before/after state, reason, and user identity for compliance with HIPAA and SOC2 financial audit trail standards. Attempts to modify immutable or locked payment fields (e.g., when a payment is completely reconciled, refunded, or under investigation) should be rejected with descriptive errors.\n\nSchema adherence is mandatory: only allowed fields can be updated, and data validation (format, allowable transitions) is required. Foreign keys (such as payment method, invoice ID) cannot be reassigned via update; attempts to do so should be blocked. This operation is related to payment record creation and payment record retrieval operations. If errors occur, details should include constraint violation or permission cause.","summary":"Update an existing payment record for a billing invoice (healthcare_platform_billing_payments table) in the healthcare platform.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which this payment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"billingPaymentId","description":"Unique identifier of the billing payment record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data to update existing billing payment record (amount, memo, status, payment method, date, etc.).","typeName":"IHealthcarePlatformBillingPayment.IUpdate"},"responseBody":{"description":"The updated billing payment record, reflecting all allowed changes as per schema.","typeName":"IHealthcarePlatformBillingPayment"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"put","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPayments/{billingPaymentId}","name":"update"},{"specification":"Removes a specific billing payment record associated with a billing invoice from the healthcare platform system. This operation targets the BillingPayments table and is generally used to permanently delete erroneous or duplicated payment entries that have not been finalized, reconciled, or locked for audit. Deletion is strictly restricted by role and business rules to preserve financial and regulatory audit trails. If the billing payment record is already reconciled, under audit, or referenced by a completed transaction, the operation must fail with a descriptive error. Business rule prohibits deletion of payments that have been posted to external systems or are included in finalized audit cycles.","description":"This operation enables authorized administrative users to permanently delete a billing payment record from the system, as long as it is not locked, reconciled, posted, or otherwise restricted by audit policies. Common use cases include correction of accidental double entry, removal of test data, or elimination of erroneous payment receipts before they become part of a permanent financial/audit record.\n\nStrict role enforcement is required: only organizationAdmin or billingSuperuser roles may erase payments, and a detailed audit message must be recorded for all deletion events. The operation validates the payment's state before deletion—if the record has been posted, audited, or is linked to a final invoice closeout, the erase operation must be denied to preserve compliance. Soft deletion is not used; this is a hard delete per schema.\n\nRelated endpoints include payment creation, payment update, and payment retrieval for auditing purposes. Error responses specify the reason for deletion prohibition (e.g., already reconciled or under historical audit hold).","summary":"Permanently deletes a billing payment record from a billing invoice (healthcare_platform_billing_payments table) in the healthcare platform.","parameters":[{"name":"billingInvoiceId","description":"Unique identifier of the billing invoice to which the payment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"billingPaymentId","description":"Unique identifier of the billing payment record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","method":"delete","path":"/healthcarePlatform/organizationAdmin/billingInvoices/{billingInvoiceId}/billingPayments/{billingPaymentId}","name":"erase"},{"specification":"Retrieves a paginated list of billing payment methods (e.g., credit card, ACH, insurance) available in the healthcare platform system. This operation acts on the BillingPaymentMethods table, which documents organization-specific and globally configured payment method options. It supports complex search, filtering, and sorting (e.g., by status, provider, type) using IHealthcarePlatformBillingPaymentMethod.IRequest for request criteria. Results are paged with total count and metadata for management and UI consumption. Access may be public or restricted based on organization policy.","description":"This operation allows clients to search, filter, and retrieve available payment methods used for billing operations in the healthcare platform. Business scenarios include displaying payment method options on patient portals, administrative UIs for configuring payment acceptance, and analyzing supported providers for billing/invoice workflows.\n\nFull pagination is supported via request body parameters (page size, offset, search query). Filtering by method type, provider, and status is available as allowed by schema. The operation returns a list of summary representations of payment methods, suitable for workflow selection or display in user interfaces.\n\nData returned is restricted based on access control—patients may only see 'active' payment methods, while administrative users may see all, including inactive or under configuration. The response is a paginated collection of payment method summaries. Related endpoints include CRUD for payment methods and payment processing operations. Error scenarios include invalid search parameters or improper access scope.","summary":"Search and retrieve a filtered, paginated list of payment methods (healthcare_platform_billing_payment_methods table) available for billing in the healthcare platform.","parameters":[],"requestBody":{"description":"Search and pagination criteria for billing payment methods.","typeName":"IHealthcarePlatformBillingPaymentMethod.IRequest"},"responseBody":{"description":"Paginated list of payment method summaries matching the search and filter criteria.","typeName":"IPageIHealthcarePlatformBillingPaymentMethod.ISummary"},"authorizationType":null,"authorizationRole":null,"method":"patch","path":"/healthcarePlatform/billingPaymentMethods","name":"index"},{"specification":"Fetches detailed information about a specific billing payment method (e.g., credit card, insurance, ACH) used for billing operations in the healthcare platform. It operates on the BillingPaymentMethods table, returning relevant details such as method type, provider name, status, and configuration metadata for the requested payment method. The operation is available to administrators and billing staff, and may be restricted for patients or non-privileged users. Used primarily in administrative workflows or to display eligible payment flows for invoice/payment screens.","description":"Retrieves the detailed record for a specified billing payment method based on its unique identifier. Typical usage scenarios include updating payment method configuration in administrative screens, validating patient payment options during invoicing, and supporting payment processing backend workflows. Returns all non-sensitive fields of the payment method entity as defined in the schema.\n\nThis operation enforces role-based access, disallowing unauthorized users from accessing inactive or non-permitted methods (such as those under configuration or audit hold). Linked operations include payment method listing, updating, and assignment to billing processes.\n\nAny attempt to access a nonexistent or restricted payment method returns an appropriate authorization or not found error.","summary":"Retrieve detailed information for a specific billing payment method (healthcare_platform_billing_payment_methods table) in the healthcare platform.","parameters":[{"name":"billingPaymentMethodId","description":"Unique identifier of the billing payment method to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested payment method entity, as permitted by the schema and user role.","typeName":"IHealthcarePlatformBillingPaymentMethod"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"get","path":"/healthcarePlatform/organizationAdmin/billingPaymentMethods/{billingPaymentMethodId}","name":"at"},{"specification":"This operation creates a new billing payment method for a healthcare organization, as defined in the Prisma table healthcare_platform_billing_payment_methods. It supports registering credit card, ACH, insurance, check, in-person, and custom payment types, setting up any provider-specific integration details, and controlling availability for patient and staff payments. Only organization administrators can call this endpoint. The request body must conform to the IHealthcarePlatformBillingPaymentMethod.ICreate DTO.","description":"Create and register a new billing payment method for a specific organization. This includes information such as method type (credit card, ACH, insurance, etc.), optional provider name, integration details for payment gateways, activation status, and links to the parent organization for data isolation.\n\nUpon creation, the method is available for invoice and payment flows within the organization. All created payment methods are subject to organizational policy and may be edited or deactivated later. Audit trails are maintained for all configuration changes.\n\nSensitive provider/integration information is securely handled and returned only as necessary. Security rules require that only users with the 'organizationAdmin' role can create new billing payment methods. Attempting to register a duplicate method type/provider will return a validation error. All inputs are strictly validated per business and PCI requirements.","summary":"Create a new billing payment method record (healthcare_platform_billing_payment_methods) for an organization.","parameters":[],"requestBody":{"description":"Creation parameters for a billing payment method, including type, provider, integration settings, and activation status.","typeName":"IHealthcarePlatformBillingPaymentMethod.ICreate"},"responseBody":{"description":"Details of the new billing payment method as registered in the organization.","typeName":"IHealthcarePlatformBillingPaymentMethod"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/billingPaymentMethods","method":"post"},{"specification":"This operation updates the details or activation status of an existing billing payment method record by its unique identifier, operating on the Prisma table healthcare_platform_billing_payment_methods. Only organization administrators may perform updates. Use this to update fields such as provider name, integration parameters, or enable/disable status. The request body must match IHealthcarePlatformBillingPaymentMethod.IUpdate.","description":"Update an existing billing payment method for an organization by its unique ID. Fields that can be updated include provider name, integration details, active or disabled status, and other configuration fields per business requirements.\n\nAll updates are fully audited and only available to users with 'organizationAdmin' privileges. Attempts to change method type to a duplicate combination or to reference an unknown payment method will result in a validation error. This operation strictly validates that the record exists and belongs to the user's organization context before applying changes.\n\nProvides granular control over payment options for staff and patients, with immediate effect on payment acceptance within the organization. PCI compliance and data security standards are enforced at all times.","summary":"Update details or activation status of a billing payment method (healthcare_platform_billing_payment_methods) by ID.","parameters":[{"name":"billingPaymentMethodId","description":"The unique identifier of the target billing payment method to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update parameters for an existing billing payment method, such as provider, integration settings, or enabled status.","typeName":"IHealthcarePlatformBillingPaymentMethod.IUpdate"},"responseBody":{"description":"Updated billing payment method with all current fields and configuration details.","typeName":"IHealthcarePlatformBillingPaymentMethod"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/billingPaymentMethods/{billingPaymentMethodId}","method":"put"},{"specification":"This operation deletes (soft deletes; sets deleted_at) an existing billing payment method from the healthcare_platform_billing_payment_methods table by unique identifier, used by organization administrators to remove or retire payment methods. Associated invoices and payments are not deleted. The endpoint enforces organizational boundaries and audits all removals.","description":"Soft-delete a billing payment method by its unique ID, marking the deleted_at timestamp for compliance retention. This disables the payment method for all new invoice and payment workflows within the organization, while maintaining data for audit and regulatory review.\n\nOnly organization administrators may perform this action. Attempts to delete non-existent or already-deleted methods return an appropriate error response. Associated financial records remain unaffected.\n\nThe operation enforces strict organizational isolation and audits all deletion requests as required for PCI and healthcare compliance. Deleted payment methods can be reviewed by administrators via audit logs or admin-only list views.","summary":"Soft-delete an existing billing payment method (healthcare_platform_billing_payment_methods) by ID.","parameters":[{"name":"billingPaymentMethodId","description":"The unique identifier of the target billing payment method to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/billingPaymentMethods/{billingPaymentMethodId}","method":"delete"},{"specification":"This operation returns a paginated, filterable list of insurance policies (from healthcare_platform_insurance_policies) within the multi-tenant healthcare platform. Only organization administrators can execute this query. Supports filtering by patient, status, plan type, coverage dates, and other business-relevant fields. Enables compliance and workflow tasks for insurance management.","description":"Retrieve a filtered and paginated list of insurance policy records, supporting advanced querying by patient, policy status, payer, coverage dates, and plan type. This is primarily used by organization administrators to monitor, report, and manage insurance policies associated with their patients and organization.\n\nThe operation accesses the healthcare_platform_insurance_policies table, leveraging available indices for efficient search and business operations. All results are isolated to the active organization context, and include only policies not marked as deleted.\n\nOnly organization administrators may execute this operation. Audit logs are recorded for all insurance policy queries to support regulatory review, privacy tracking, and business intelligence. Pagination, sorting, and field-based search are available based on the IHealthcarePlatformInsurancePolicy.IRequest DTO schema.","summary":"List, filter, and page insurance policy records (healthcare_platform_insurance_policies) for an organization.","parameters":[],"requestBody":{"description":"Search and filtering parameters for insurance policy listing, including patient, payer, policy status, dates, and plan types.","typeName":"IHealthcarePlatformInsurancePolicy.IRequest"},"responseBody":{"description":"Paginated list of insurance policy records matching filter criteria.","typeName":"IPageIHealthcarePlatformInsurancePolicy"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/insurancePolicies","method":"patch"},{"specification":"This operation retrieves the detailed information for a specific insurance policy from the healthcare_platform_insurance_policies table. It is used to allow authorized users to read all details relevant to a single insurance policy by its identifier. Only policy data that has not been soft-deleted (deleted_at is null) will be returned, and access is controlled by RBAC rules in accordance with the requesting user's scope (organization, role, and department as appropriate). Policies retrieved may include policy number, payer information, coverage period, plan type, and status, along with foreign key relationships to the insured patient and organization.","description":"This API operation retrieves the complete data for a single insurance policy, given its unique insurancePolicyId (a string UUID as per Prisma schema). This is critical for workflows where users must review a patient's insurance information for coverage checks, claim preparation, or billing purposes. The operation references the healthcare_platform_insurance_policies table and ensures that only policies where deleted_at is null are available. RBAC is enforced, so users can only access policies pertaining to their permitted organization context and role (e.g., billing staff, admin, authorized clinicians). The response includes all relevant policy metadata and joins (e.g., patient and organization identifiers) but never exposes sensitive internal notes or audit fields unless user permissions allow. In the event an insurance policy is missing or inaccessible, a 404 or suitable business error is returned. This operation is often accessed in conjunction with patient detail retrieval or encounter/billing query flows.\n\nCare is taken to ensure that only non-deleted policies are returned, and users cannot see policies outside their organization scope or for which they lack the proper role-based permissions, as defined in the overall multi-tenant platform security policy.","summary":"Retrieve detailed insurance policy information by ID from the insurance_policies table.","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the target insurance policy (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed insurance policy record as defined in the Prisma schema, including status, policy number, payer, coverage period, and associated patient/organization IDs.","typeName":"IHealthcarePlatformInsurancePolicy"},"authorizationRoles":["organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new insurance policy associated with a patient and organization in the healthcare_platform_insurance_policies table. The POST endpoint is designed for organization administrators, billing staff, or staff with appropriate permission to add a new policy for a patient, as required during onboarding, record updates, or insurance changes. The operation accepts structured input based on all non-computed, writable fields in the insurance policy schema (e.g., policy_number, payer_name, coverage_start_date, plan_type, etc). A unique policy record is created, and all required foreign relationships (patient, organization) must be present and valid. The operation ensures no duplicate combination of organization, policy_number, and payer_name per schema constraints. All actions are audited for compliance and support downstream billing and eligibility workflows.","description":"This API endpoint creates a new insurance policy record for a patient in the organization context. The caller must provide all required fields as per the Prisma schema—these include patient_id, organization_id, policy_number, payer_name, coverage dates, plan_type, and policy_status. The request payload is validated to confirm uniqueness of organization_id, policy_number, and payer_name, in line with Prisma constraints. On successful creation, the API returns the new insurance policy object in its entirety. Security and RBAC are enforced: only organization-admin, billing, or specifically permitted roles can create new insurance policies, and patient_id/organization_id provided must be within their assigned scope. Duplicate or invalid entries trigger a validation error with a suitable message. All creations generate an audit record for compliance. Related operations include retrieval (GET), update (PUT), and deleting (DELETE) of policies.","summary":"Create a new insurance policy record in the insurance_policies table.","parameters":[],"requestBody":{"description":"Insurance policy creation payload, matching writable fields in the Prisma schema. Must include patient, organization, policy details, coverage dates, and plan type/status.","typeName":"IHealthcarePlatformInsurancePolicy.ICreate"},"responseBody":{"description":"The newly created insurance policy record with full details.","typeName":"IHealthcarePlatformInsurancePolicy"},"authorizationRoles":["organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/insurancePolicies","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing insurance policy by its ID in the healthcare_platform_insurance_policies table. It supports authorized staff to modify fields such as policy_status, coverage dates, payer_name, or other mutable fields when a patient's insurance changes. The operation only allows modifications for policies in the user's organization and prevents accidental updates to another organization's data. Input must validate against unique constraints (policy_number, payer_name, organization_id) and cannot alter immutable fields such as primary keys. Audit logs are generated for regulatory purposes. If a policy is soft-deleted, it cannot be updated.","description":"This API endpoint allows an authorized user to update details on an existing insurance policy, identified by insurancePolicyId (UUID). Updatable fields include payer name, coverage period, plan type, policy status, and other business metadata as per the Prisma schema. The request body must follow the IHealthcarePlatformInsurancePolicy.IUpdate DTO specification, and validations ensure that no duplicate policy_number/payer/organization combination is produced. The update operation is permitted only for organization administrators or suitably authorized billing staff operating within their assigned organization. Attempts to update deleted or non-existent policies result in a business validation error or 404. Upon success, the updated insurance policy object is returned. All changes are audit logged for HIPAA and regulatory compliance. This operation is typically used in routine insurance updates, corrections, or during patient record management by administrative users.","summary":"Update an existing insurance policy record by its ID.","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the target insurance policy (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload specifying mutable fields on an insurance policy. Must match the Prisma schema and validation constraints.","typeName":"IHealthcarePlatformInsurancePolicy.IUpdate"},"responseBody":{"description":"The updated insurance policy record after applying mutations.","typeName":"IHealthcarePlatformInsurancePolicy"},"authorizationRoles":["organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation permanently erases (hard deletes) an insurance policy by its ID from the healthcare_platform_insurance_policies table. It is intended for authorized administrative roles to remove incorrect or obsolete insurance records that should not remain part of the organizational dataset, and where retention rules and compliance policies allow. The operation validates organizational scope and ensures the requestor has sufficient permissions, and clears all non-regulatory relationships to the deleted policy. Audit logs capture the deletion action for regulatory reporting. If the policy is soft-deleted via 'deleted_at', then this operation can permanently remove the record subject to legal constraints.","description":"This API endpoint permanently deletes an insurance policy record, removing it from the healthcare_platform_insurance_policies database table if allowed by business and regulatory logic (i.e., not under legal hold or required for retention). Authorized users can execute this operation for policies within their organization only, and only when no regulatory retention prevents deletion. The operation performs a hard delete: the row is removed, and references to the record are cleared in compliance with all foreign key and business relationship rules. RBAC is enforced so only organization admins or appropriately privileged staff can access this functionality. Audit logs are captured with full context for security and compliance investigation. Attempts to delete non-existent or out-of-scope records return a business error or 404. Care is taken to prevent unauthorized or accidental deletion of important insurance data. This operation is used in data correction, duplicate cleanup, or record management workflows. Related operations include policy creation, update, and retrieval.","summary":"Permanently erase an insurance policy record by its ID from the insurance_policies table.","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the insurance policy to delete (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of insurance eligibility checks for a specific insurance policy. It enables authorized staff to search and review eligibility transactions to support compliance, audit, and workflow monitoring. The operation applies to the healthcare_platform_insurance_eligibility_checks table, filtered by the insurance policy indicated by the insurancePolicyId path parameter. The endpoint supports advanced filtering, sorting, and paging for business and compliance users.","description":"Retrieve a paginated, filtered list of insurance eligibility checks associated with a single insurance policy. This enables billing staff, admins, or authorized users to review all eligibility verification transactions for a patient or payer within a particular policy, supporting regulatory audits and appeals.\n\nResults can be filtered by status, performed_by_id, check timestamp range, and payer response details. Pagination and sorting allow practical review of large eligibility check histories. Security enforces that only users with the proper billing, admin, or compliance roles can access the detailed eligibility check data for the given insurance policy.\n\nThis query joins the insurance policy context for data isolation and compliance enforcement and draws on healthcare_platform_insurance_eligibility_checks (filtered by insurancePolicyId).","summary":"Search and retrieve all insurance eligibility checks for a policy (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the insurance policy whose eligibility checks are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search parameters, filters, sort, and pagination criteria for eligibility checks under the policy.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck.IRequest"},"responseBody":{"description":"Paginated list of eligibility checks matching query and policy context.","typeName":"IPageIHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of insurance eligibility checks for a specific insurance policy. It enables authorized staff to search and review eligibility transactions to support compliance, audit, and workflow monitoring. The operation applies to the healthcare_platform_insurance_eligibility_checks table, filtered by the insurance policy indicated by the insurancePolicyId path parameter. The endpoint supports advanced filtering, sorting, and paging for business and compliance users.","description":"Retrieve a paginated, filtered list of insurance eligibility checks associated with a single insurance policy. This enables billing staff, admins, or authorized users to review all eligibility verification transactions for a patient or payer within a particular policy, supporting regulatory audits and appeals.\n\nResults can be filtered by status, performed_by_id, check timestamp range, and payer response details. Pagination and sorting allow practical review of large eligibility check histories. Security enforces that only users with the proper billing, admin, or compliance roles can access the detailed eligibility check data for the given insurance policy.\n\nThis query joins the insurance policy context for data isolation and compliance enforcement and draws on healthcare_platform_insurance_eligibility_checks (filtered by insurancePolicyId).","summary":"Search and retrieve all insurance eligibility checks for a policy (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the insurance policy whose eligibility checks are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search parameters, filters, sort, and pagination criteria for eligibility checks under the policy.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck.IRequest"},"responseBody":{"description":"Paginated list of eligibility checks matching query and policy context.","typeName":"IPageIHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve a single insurance eligibility check record for a specific insurance policy. This operation targets the healthcare_platform_insurance_eligibility_checks table, returning all details for the specified eligibility check identified by insuranceEligibilityCheckId within the scope of the insurance policy represented by insurancePolicyId. Used for audit, appeals, or staff review of individual eligibility transactions.","description":"Returns a detailed record of one insurance eligibility check performed for a given policy. This is used for auditing eligibility verification, claims processing, or payer dispute review by authorized staff or admins.\n\nThe operation enforces access to eligibility check details only for users with billing or administrative authority for accounts within the given insurance policy's organization. It references the healthcare_platform_insurance_eligibility_checks schema and policy context for strict data isolation and compliance.\n\nProperties include the eligibility check's status, timestamp, response from payer, outcome, and relationships to staff, policy, and claim records. The endpoint is strictly read-only and logs all access events in audit trails.","summary":"Get a single insurance eligibility check record (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the insurance policy whose eligibility check is returned.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceEligibilityCheckId","description":"Unique identifier for the eligibility check record being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single eligibility check record with all audit fields and related data.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks/{insuranceEligibilityCheckId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Retrieve a single insurance eligibility check record for a specific insurance policy. This operation targets the healthcare_platform_insurance_eligibility_checks table, returning all details for the specified eligibility check identified by insuranceEligibilityCheckId within the scope of the insurance policy represented by insurancePolicyId. Used for audit, appeals, or staff review of individual eligibility transactions.","description":"Returns a detailed record of one insurance eligibility check performed for a given policy. This is used for auditing eligibility verification, claims processing, or payer dispute review by authorized staff or admins.\n\nThe operation enforces access to eligibility check details only for users with billing or administrative authority for accounts within the given insurance policy's organization. It references the healthcare_platform_insurance_eligibility_checks schema and policy context for strict data isolation and compliance.\n\nProperties include the eligibility check's status, timestamp, response from payer, outcome, and relationships to staff, policy, and claim records. The endpoint is strictly read-only and logs all access events in audit trails.","summary":"Get a single insurance eligibility check record (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique identifier of the insurance policy whose eligibility check is returned.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceEligibilityCheckId","description":"Unique identifier for the eligibility check record being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"A single eligibility check record with all audit fields and related data.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks/{insuranceEligibilityCheckId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Create and log a new insurance eligibility check for an existing insurance policy. This operation is used by admins or authorized staff to verify patient insurance coverage with payers and record the resulting eligibility transaction, supporting compliance and real-time verification workflows. The API writes to the healthcare_platform_insurance_eligibility_checks table and ensures data is linked to the policy and performed_by user assignments per business requirements.","description":"Creates a new eligibility check transaction against a payer for the specified insurance policy. Authorized billing or admin staff use this endpoint to trigger and record eligibility verifications for billing, claims, or scheduling workflows. The endpoint will store information about who performed the check, response from the payer, and all related outcome data.\n\nThis operation requires validation of the request body per business rules: the insurancePolicyId must match an active policy, the staff performing the check must have billing permission, and the payer details must be properly populated for audit/compliance reporting. All created records are appended for regulatory trace and support appeals or appeals audit. The endpoint enforces data isolation by policy and organization.","summary":"Create a new insurance eligibility check entry (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique insurance policy ID under which the eligibility check is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Eligibility check and payer response details for creation.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck.ICreate"},"responseBody":{"description":"Created eligibility check transaction, returned with stored properties for auditing.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Create and log a new insurance eligibility check for an existing insurance policy. This operation is used by admins or authorized staff to verify patient insurance coverage with payers and record the resulting eligibility transaction, supporting compliance and real-time verification workflows. The API writes to the healthcare_platform_insurance_eligibility_checks table and ensures data is linked to the policy and performed_by user assignments per business requirements.","description":"Creates a new eligibility check transaction against a payer for the specified insurance policy. Authorized billing or admin staff use this endpoint to trigger and record eligibility verifications for billing, claims, or scheduling workflows. The endpoint will store information about who performed the check, response from the payer, and all related outcome data.\n\nThis operation requires validation of the request body per business rules: the insurancePolicyId must match an active policy, the staff performing the check must have billing permission, and the payer details must be properly populated for audit/compliance reporting. All created records are appended for regulatory trace and support appeals or appeals audit. The endpoint enforces data isolation by policy and organization.","summary":"Create a new insurance eligibility check entry (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique insurance policy ID under which the eligibility check is created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Eligibility check and payer response details for creation.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck.ICreate"},"responseBody":{"description":"Created eligibility check transaction, returned with stored properties for auditing.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Update metadata or status of a particular insurance eligibility check for a policy. Allows billing or admin staff to update the outcome, notes, or correction for an existing eligibility check identified by insuranceEligibilityCheckId and insurancePolicyId. Data is written to the healthcare_platform_insurance_eligibility_checks table and all changes are fully audited for compliance.","description":"Updates selected metadata or review status of a single insurance eligibility check record for a given insurance policy. This is used primarily by billing or compliance staff to update audit-relevant fields, error corrections, or status flags after appeal, review, or payer feedback workflows.\n\nUpdate rules enforce business constraints: only certain fields may be updated (dependent on audit policies), and the staff making updates must have billing/admin/compliance rights for the organization assigned to the policy. All changes are strictly recorded in the audit trail. The operation references the healthcare_platform_insurance_eligibility_checks schema, matching insuranceEligibilityCheckId and insurancePolicyId for data isolation and regulatory compliance. On success, the updated eligibility check record is returned.","summary":"Update an existing insurance eligibility check record (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique insurance policy ID whose eligibility check is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceEligibilityCheckId","description":"Unique identifier for the eligibility check being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Property updates permitted under billing/compliance policy for eligibility check.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck.IUpdate"},"responseBody":{"description":"Eligibility check record after update, with all current values and audit information.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks/{insuranceEligibilityCheckId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Update metadata or status of a particular insurance eligibility check for a policy. Allows billing or admin staff to update the outcome, notes, or correction for an existing eligibility check identified by insuranceEligibilityCheckId and insurancePolicyId. Data is written to the healthcare_platform_insurance_eligibility_checks table and all changes are fully audited for compliance.","description":"Updates selected metadata or review status of a single insurance eligibility check record for a given insurance policy. This is used primarily by billing or compliance staff to update audit-relevant fields, error corrections, or status flags after appeal, review, or payer feedback workflows.\n\nUpdate rules enforce business constraints: only certain fields may be updated (dependent on audit policies), and the staff making updates must have billing/admin/compliance rights for the organization assigned to the policy. All changes are strictly recorded in the audit trail. The operation references the healthcare_platform_insurance_eligibility_checks schema, matching insuranceEligibilityCheckId and insurancePolicyId for data isolation and regulatory compliance. On success, the updated eligibility check record is returned.","summary":"Update an existing insurance eligibility check record (healthcare_platform_insurance_eligibility_checks).","parameters":[{"name":"insurancePolicyId","description":"Unique insurance policy ID whose eligibility check is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceEligibilityCheckId","description":"Unique identifier for the eligibility check being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Property updates permitted under billing/compliance policy for eligibility check.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck.IUpdate"},"responseBody":{"description":"Eligibility check record after update, with all current values and audit information.","typeName":"IHealthcarePlatformInsuranceEligibilityCheck"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks/{insuranceEligibilityCheckId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation deletes a specific insurance eligibility check entry from the healthcare_platform_insurance_eligibility_checks table. Insurance eligibility checks are used to verify a patient's active insurance status against payers for compliance before billing, encounters, or appointment workflows. Deleting an eligibility check may be allowed only for corrections or regulatory requirements, as eligibility logs support financial audit and appeal workflows. The operation must ensure that deletion is only possible if it does not break compliance retention, legal, or audit requirements. This is a permanent removal (hard delete); eligibility checks or related logs with soft delete should instead use the schema's deleted_at field. The operation will be called in auditing, compliance review, or system corrections by authorized billing staff or admins. Related APIs may include retrieving eligibility checks, listing all checks for a policy, and creating a new insurance eligibility check.","description":"This API endpoint allows for the permanent removal of an insurance eligibility check record identified by its unique ID for a specific insurance policy. Insurance eligibility checks are associated with a patient's insurance policy and are critical for ensuring compliance prior to billing and clinical encounters. \n\nRemoval should be used sparingly and typically only by users with elevated privileges, such as billing administrators or compliance officers, and only when the record was entered in error or regulation permits its removal. This action is a hard delete, meaning the record is completely removed from the database and cannot be recovered through normal means. \n\nAll deletions should be audited and logged for compliance purposes, and business logic may restrict deletions if the record is associated with completed billing or claim transactions. Related operations include listing eligibility checks, retrieving a specific check, or reviewing the audit trail for deletion. Error scenarios include attempts to delete non-existent records, records linked to immutable financial transactions, or insufficient user permissions.","summary":"Permanently delete an insurance eligibility check record for a specific insurance policy from healthcare_platform_insurance_eligibility_checks table.","parameters":[{"name":"insurancePolicyId","description":"UUID of the insurance policy associated with the eligibility check to delete.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceEligibilityCheckId","description":"UUID of the insurance eligibility check record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/insurancePolicies/{insurancePolicyId}/insuranceEligibilityChecks/{insuranceEligibilityCheckId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of insurance claim records from the healthcare_platform_insurance_claims table. The endpoint supports advanced searching, filtering, and sorting of insurance claims based on fields like claim status, invoice number, payer, submission date, approval/denial status, and patient/organization identity. The operation implements complex query logic as required by financial, audit, and regulatory reporting workflows, supporting multi-tenant views and fine-grained role-based access. Results may include summary and aggregate data for dashboards or analytics use cases. Pagination, search, and filtering logic enable efficient results for admins, billing staff, and compliance officers.","description":"Retrieve a filtered and paginated list of insurance claim records from the system for authorized financial and billing users. This operation supports advanced search by claim status, insurance policy, invoice number, service date range, payer response status, and organization scope, allowing for precise financial reconciliation and compliance review.\n\nComplex filtering and sorting enable users to segment results by claim life cycle—such as active, pending, denied, paid, or appealed claims. Pagination settings support large result sets, suitable for dashboard views and report exports. \n\nSecurity controls ensure that users see only claims in their permitted organizational or departmental scope, with PHI redacted as required. Error handling includes search validation, empty result handling, and permission enforcement. This search complements detail and summary retrieval endpoints, as well as invoice and payment search APIs.","summary":"Search and retrieve a paginated, filtered list of insurance claim records from healthcare_platform_insurance_claims.","parameters":[],"requestBody":{"description":"Search criteria, filters, and pagination settings for querying insurance claims.","typeName":"IHealthcarePlatformInsuranceClaim.IRequest"},"responseBody":{"description":"Paginated results containing insurance claim summary records matching the search criteria.","typeName":"IPageIHealthcarePlatformInsuranceClaim.ISummary"},"authorizationRoles":["organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/insuranceClaims","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific insurance claim from the healthcare_platform_insurance_claims table by its unique claim ID. The endpoint returns comprehensive information on the claim status, associated policy and invoice, payer response codes/descriptions, claimed amounts, service dates, and financial audit metadata. The operation enables admins, billing teams, or compliance officers to review claim status and full transaction history for adjudication, analytics, and appeal workflows. Strict authorization and PHI masking is enforced as claims may include sensitive financial and patient data.","description":"Fetch full details on a specified insurance claim record, including claim status, associated invoice, insurance policy, claimed amounts, payer responses, and life cycle audit data. The returned information supports billing and compliance workflows, such as claim adjudication, status reviews, denial appeals, and regulatory audits.\n\nThe API enforces role-based access control, restricting visibility to claims within the user's authorized organizational or departmental scope. Data fields may include claim number, policy and invoice references, service dates, submission status, response codes, payment information, and audit trail fields for compliance. This endpoint is intended for use by organization administrative and billing staff requiring case-by-case analysis. Handling includes not found, permission denied, and PHI masking error scenarios. This endpoint should be used in conjunction with search and summary endpoints for claim management workflows.","summary":"Fetch full details of an insurance claim record by claim ID from healthcare_platform_insurance_claims.","parameters":[{"name":"insuranceClaimId","description":"UUID identifying the insurance claim record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full record of the insurance claim, including associated invoice and policy data, transaction status, and audit information.","typeName":"IHealthcarePlatformInsuranceClaim"},"authorizationRoles":["organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new insurance claim record in the healthcare_platform_insurance_claims table, initiating the insurance reimbursement, adjudication, or settlement process for a given invoice and insurance policy. The endpoint accepts creation data such as policy, invoice, service date(s), claim amounts, and optional payer-provided reference data. Upon creation, the claim record enters an approved, submitted, or pending state as defined by business logic and audit tracking. Financial staff and admins invoke this endpoint as part of the billing or claims workflow, ensuring all required data is present for the claim to be processed. Related endpoints cover updating, retrieving, and listing claims.","description":"Initiate a new insurance claim record, linked to a specific insurance policy and invoice, to support submission for insurance reimbursement or settlement. Users provide all necessary identifying and claim value data, including policy and invoice references, claimed totals, service/encounter dates, and any supplementary payer information.\n\nThe operation validates business rules, such as required policy and invoice relationships, duplicate claim prevention, amount integrity, and regulatory completeness (e.g., ICD-10, CPT linkages as required by jurisdiction). Once created, the claim is tracked through its life cycle by status, with all actions audited for compliance. This operation is limited to authorized billing and financial staff with permission to initiate new claims. Error scenarios encompass pre-existing open claims for the invoice, mismatched policy/patient, missing required fields, or breach of regulatory/billing rules.\n\nThis creation endpoint should be paired with claim update/status, detail retrieval, and bulk search endpoints for full workflow implementation.","summary":"Create a new insurance claim record for a specified policy/invoice in healthcare_platform_insurance_claims.","parameters":[],"requestBody":{"description":"Creation details for the new insurance claim, including policy/invoice link, amounts, service date(s), and payer details.","typeName":"IHealthcarePlatformInsuranceClaim.ICreate"},"responseBody":{"description":"Created insurance claim record with all assigned IDs, relationships, and initial status data.","typeName":"IHealthcarePlatformInsuranceClaim"},"authorizationRoles":["organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/insuranceClaims","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing insurance claim record identified by insuranceClaimId in the healthcare_platform_insurance_claims table, part of the healthcarePlatform billing/insurance subsystem. It allows authorized users (likely organization admins, department heads, or billing specialists) to modify fields such as claim status, service dates, claimed amount, and payer response fields. The operation validates business logic rules: only non-deleted claims may be updated; some status transitions may require special audit/compliance justification. Updates are fully tracked for regulatory and financial audit, ensuring immutability of claim numbers and linkage to invoice and insurance policy. This upholds compliance with claims lifecycle, business triggers, and external system reconciliation.","description":"The purpose of this operation is to allow authorized billing or admin roles to update an existing insurance claim, as represented by the healthcare_platform_insurance_claims Prisma table, which holds insurance claim submission records. The request must include the claim identifier (insuranceClaimId) and an object of mutable claim fields. Immutable properties, like claim_number and linkages to invoice/policy, cannot be changed by this operation. Strict validation applies, only permitting updates that reflect permitted transitions (e.g., changing submission status, updating payer responses, modifying claim payment amounts). \n\nAll updates are logged with full audit trails, including the identity of the user making the change, the previous state, and the updated state. Fields required for regulatory compliance, like last_payer_response_code and submission_status, must not be left blank. Logic must check for business transitions, e.g., only permitted status changes (submitted → accepted/denied/paid) are allowed, and payment updates should match invoice reconciliations. \n\nAny modification may trigger additional side effects: recalculating billing status, updating analytics, or triggering compliance workflows if claim status changes to denied or paid. Attempts to update deleted or archived claims must be rejected with an error. Related APIs include the PATCH /insuranceClaims endpoint for claim search and the GET /insuranceClaims/{insuranceClaimId} endpoint for claim detail retrieval.","summary":"Update an existing insurance claim record in the healthcare_platform_insurance_claims table.","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data fields to update within the insurance claim. Only non-immutable fields may be supplied. Follows IHealthcarePlatformInsuranceClaim.IUpdate structure.","typeName":"IHealthcarePlatformInsuranceClaim.IUpdate"},"responseBody":{"description":"The updated insurance claim record after applying requested changes.","typeName":"IHealthcarePlatformInsuranceClaim"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}","method":"put"},{"specification":"This operation permanently deletes (soft-deletes with deleted_at timestamp) an insurance claim record from the healthcare_platform_insurance_claims table, as identified by insuranceClaimId. Only billing admins or organization administrators are typically authorized to perform this operation. Deletion is restricted to claims not yet paid or finalized per regulatory and billing policy. The endpoint enforces business and compliance logic, logging the action for audit trail, and ensuring the claim record is only marked as deleted for retention—physical deletion is not allowed for regulatory reasons.","description":"Use this operation to delete (soft-delete) an insurance claim entity from the healthcare_platform_insurance_claims table by providing the insuranceClaimId path parameter. This sets the deleted_at timestamp in the record, ensuring auditability and retention for compliance purposes. \n\nDeletion is only permitted if the claim is not in a paid or finalized status, following business logic that prohibits deleting claims after settlement. Attempts to delete such claims must result in a proper error with a description of the business rule conflict. All deletes are logged for regulatory and audit purposes. The operation may affect related billing or financial audit workflows downstream, so it must only be allowed when it won't jeopardize compliance or cause reconciliation issues. \n\nThis operation is tightly controlled by security and compliance rules. Related endpoints include GET /insuranceClaims/{insuranceClaimId} for retrieval, and PATCH /insuranceClaims for searching claims history (including soft-deleted claims when permitted).","summary":"Soft-delete (mark deleted) an insurance claim by insuranceClaimId, with full audit compliance.","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of insurance claim status entries associated with a parent insurance claim identified by insuranceClaimId, from the healthcare_platform_insurance_claim_statuses table. This API supports advanced filtering, sorting, and pagination via the request body (IHealthcarePlatformInsuranceClaimStatus.IRequest). Only authorized staff or admins within the insured organization may retrieve this list for compliance and claims workflow purposes. The response includes a paginated container of insurance claim status records and supports review, tracking, and appeals related to the main insurance claim.","description":"The endpoint allows users, typically billing/evidence staff or organization admins, to retrieve a filtered and paginated list of insurance claim status records for a given insurance claim by supplying the insuranceClaimId path parameter. The status histories are sourced from the healthcare_platform_insurance_claim_statuses table, which logs all changes and state transitions in the insurance claim's workflow, including submission, acceptance, denial, payment, and appeals. \n\nThe request body permits specifying search criteria, page size, page number, sorting fields, and additional filters to efficiently review claim life cycle and status history. Results are always scoped to the insurance claim and organization context, respecting data privacy and compliance boundaries. The response delivers a paginated array of status entries (code, description, timestamps, and payment amounts). This operation upholds business requirements for traceability and auditability of all claim-related events, facilitating compliance reviews and appeals workflows.","summary":"List, search, and paginate insurance claim status history for a given insurance claim.","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the parent insurance claim for which statuses are being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination criteria for insurance claim statuses. Structure follows IHealthcarePlatformInsuranceClaimStatus.IRequest.","typeName":"IHealthcarePlatformInsuranceClaimStatus.IRequest"},"responseBody":{"description":"Paginated, filtered list of insurance claim status entries matching request criteria.","typeName":"IPageIHealthcarePlatformInsuranceClaimStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses","method":"patch"},{"specification":"This operation fetches detailed information for a single insurance claim status entry, as identified by insuranceClaimId (parent) and insuranceClaimStatusId (status row), from the healthcare_platform_insurance_claim_statuses table. It is used to review individual state changes, supporting compliance, appeals, and workflow audits. Only authorized billing or admin roles can access this endpoint, and access is always scoped to valid organizational boundaries.","description":"Use this operation to retrieve the complete details of a specific status entry (such as a key transition, appeal result, or payment update) within an insurance claim's lifecycle. The path parameters insuranceClaimId and insuranceClaimStatusId uniquely identify the parent claim and the status entry within the healthcare_platform_insurance_claim_statuses table. \n\nThe response includes all fields for the claim status, such as status_code (e.g., submitted, approved, denied, needs_info), status_description, payment_amount (if relevant), timestamps, and reference to the updating user if available. This single-record retrieval is used for drill-down display, workflow step audit, or regulatory review processes. Access to this data is restricted to authorized billing admins and must be audited for data access compliance. Errors are returned if the record cannot be found or does not belong to the requester's organization.","summary":"Get detailed information for a single insurance claim status entry by IDs.","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the parent insurance claim.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceClaimStatusId","description":"Unique identifier of the insurance claim status entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the insurance claim status entry.","typeName":"IHealthcarePlatformInsuranceClaimStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses/{insuranceClaimStatusId}","method":"get"},{"specification":"This operation retrieves a paginated, filtered list of financial audit log entries for the healthcare platform. It operates on the healthcare_platform_financial_audit_logs table, which tracks all financial, billing, and insurance events for organizations. The endpoint supports complex query and search filters based on organization, entity type, user, and action, and is used for compliance audits, finance review, and regulatory reporting. It is intended for system and organization admin roles, supporting role-based access to audit and compliance details.","description":"Allows authorized users to search and retrieve a paginated list of financial audit logs, which record all significant financial, billing, and insurance actions across organizations. Supports filtering by organization, entity type (invoice, payment, claim), user, action, and time range. \n\nThis operation serves compliance, internal audit, and financial reporting needs, supporting detailed forensic investigation into billing, adjustment, or insurance claim workflows. All returned entries conform to regulatory audit standards, and access may be further filtered based on role-based scoping. Related operations include detailed audit log retrieval, entity-based audit reporting, and export endpoints. Expected errors include insufficient permissions or invalid query filters.","summary":"List/search paginated financial audit logs (healthcare_platform_financial_audit_logs).","parameters":[],"requestBody":{"description":"Criteria and pagination for searching financial audit logs.","typeName":"IHealthcarePlatformFinancialAuditLog.IRequest"},"responseBody":{"description":"Paginated list of financial audit logs matching supplied filters.","typeName":"IPageIHealthcarePlatformFinancialAuditLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/financialAuditLogs","method":"patch"},{"specification":"This operation retrieves a paginated, filtered list of financial audit log entries for the healthcare platform. It operates on the healthcare_platform_financial_audit_logs table, which tracks all financial, billing, and insurance events for organizations. The endpoint supports complex query and search filters based on organization, entity type, user, and action, and is used for compliance audits, finance review, and regulatory reporting. It is intended for system and organization admin roles, supporting role-based access to audit and compliance details.","description":"Allows authorized users to search and retrieve a paginated list of financial audit logs, which record all significant financial, billing, and insurance actions across organizations. Supports filtering by organization, entity type (invoice, payment, claim), user, action, and time range. \n\nThis operation serves compliance, internal audit, and financial reporting needs, supporting detailed forensic investigation into billing, adjustment, or insurance claim workflows. All returned entries conform to regulatory audit standards, and access may be further filtered based on role-based scoping. Related operations include detailed audit log retrieval, entity-based audit reporting, and export endpoints. Expected errors include insufficient permissions or invalid query filters.","summary":"List/search paginated financial audit logs (healthcare_platform_financial_audit_logs).","parameters":[],"requestBody":{"description":"Criteria and pagination for searching financial audit logs.","typeName":"IHealthcarePlatformFinancialAuditLog.IRequest"},"responseBody":{"description":"Paginated list of financial audit logs matching supplied filters.","typeName":"IPageIHealthcarePlatformFinancialAuditLog"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/financialAuditLogs","method":"patch"},{"specification":"This operation adds a new insurance claim status to an existing insurance claim within the healthcare platform. It acts on the healthcare_platform_insurance_claim_statuses table, which logs claim status changes throughout the insurance claim lifecycle. The API is designed for organization admin and billing roles to post status events (e.g., 'submitted', 'denied', 'approved') relevant to a specific insurance claim, supporting revenue management, appeals, and compliance requirements. The operation requires the insuranceClaimId as a path parameter, and expects claim status details in the request body. It audits all status transitions and supports compliance with regulatory tracking and denial/appeal workflows.","description":"Adds a new insurance claim status record for a specific insurance claim identified by insuranceClaimId. This operation is intended for authenticated organization admins, billing specialists, or system admins managing insurance claims and workflow tracking. \n\nIt requires that the insurance claim already exists, and appends a new status event (such as 'submitted', 'denied', 'paid') to facilitate insurance lifecycle management and audit trails. The API validates that the status event is permissible in the current workflow context and logs the action with full metadata, including user identity, timestamp, and payer response codes if provided. \n\nSensitive business logic includes validation of role-based permissions, enforcing correct workflow transitions, and regulatory compliance for claims management. Related APIs include claim update, status history retrieval, and insurance payment integration points. Expected error cases include providing invalid status values, updating non-existent insurance claims, or unauthorized access attempts.","summary":"Add a new insurance claim status to an existing claim (healthcare_platform_insurance_claim_statuses).","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim to which the status will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the insurance claim status event to add to the specified claim.","typeName":"IHealthcarePlatformInsuranceClaimStatus.ICreate"},"responseBody":{"description":"Information about the newly created insurance claim status record.","typeName":"IHealthcarePlatformInsuranceClaimStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses","method":"post"},{"specification":"This operation adds a new insurance claim status to an existing insurance claim within the healthcare platform. It acts on the healthcare_platform_insurance_claim_statuses table, which logs claim status changes throughout the insurance claim lifecycle. The API is designed for organization admin and billing roles to post status events (e.g., 'submitted', 'denied', 'approved') relevant to a specific insurance claim, supporting revenue management, appeals, and compliance requirements. The operation requires the insuranceClaimId as a path parameter, and expects claim status details in the request body. It audits all status transitions and supports compliance with regulatory tracking and denial/appeal workflows.","description":"Adds a new insurance claim status record for a specific insurance claim identified by insuranceClaimId. This operation is intended for authenticated organization admins, billing specialists, or system admins managing insurance claims and workflow tracking. \n\nIt requires that the insurance claim already exists, and appends a new status event (such as 'submitted', 'denied', 'paid') to facilitate insurance lifecycle management and audit trails. The API validates that the status event is permissible in the current workflow context and logs the action with full metadata, including user identity, timestamp, and payer response codes if provided. \n\nSensitive business logic includes validation of role-based permissions, enforcing correct workflow transitions, and regulatory compliance for claims management. Related APIs include claim update, status history retrieval, and insurance payment integration points. Expected error cases include providing invalid status values, updating non-existent insurance claims, or unauthorized access attempts.","summary":"Add a new insurance claim status to an existing claim (healthcare_platform_insurance_claim_statuses).","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim to which the status will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the insurance claim status event to add to the specified claim.","typeName":"IHealthcarePlatformInsuranceClaimStatus.ICreate"},"responseBody":{"description":"Information about the newly created insurance claim status record.","typeName":"IHealthcarePlatformInsuranceClaimStatus"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses","method":"post"},{"specification":"This operation updates an existing insurance claim status entry within an insurance claim, targeting the healthcare_platform_insurance_claim_statuses table. It is utilized by authorized organization admins or billing roles to correct or amend status history records for insurance claims to maintain compliance and support internal correction/clarification workflows. The insuranceClaimId and the specific insuranceClaimStatusId are required as path parameters. The updated claim status record is supplied in the request body, and the operation ensures all updates are audit-logged for regulatory scrutiny.","description":"Updates an existing insurance claim status record identified by insuranceClaimStatusId within a specific insurance claim (identified by insuranceClaimId). This API is used by privileged users, such as organization admins and billing specialists, to modify previously submitted claim status events—such as updating the status code, clarifying payer response descriptions, or amending recorded payment amounts for reconciliation.\n\nThe operation enforces strict business rules, ensuring that only authorized roles may perform status corrections, and that any status value updates are permissible within the defined insurance claim workflow. All changes are fully audit-trailed, including before/after values, user identity, and exact timestamps. This operation is critical for maintaining accurate claim status history for compliance, denial management, and appeals. Related APIs include status creation and listing claim status history. Error scenarios include non-existent claim status ID, invalid updates per workflow rules, and unauthorized modification attempts.","summary":"Update an existing insurance claim status entry in a claim (healthcare_platform_insurance_claim_statuses).","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim containing the status to update.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceClaimStatusId","description":"Unique identifier of the insurance claim status record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the insurance claim status event.","typeName":"IHealthcarePlatformInsuranceClaimStatus.IUpdate"},"responseBody":{"description":"Information about the updated insurance claim status record.","typeName":"IHealthcarePlatformInsuranceClaimStatus"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses/{insuranceClaimStatusId}","method":"put"},{"specification":"This operation updates an existing insurance claim status entry within an insurance claim, targeting the healthcare_platform_insurance_claim_statuses table. It is utilized by authorized organization admins or billing roles to correct or amend status history records for insurance claims to maintain compliance and support internal correction/clarification workflows. The insuranceClaimId and the specific insuranceClaimStatusId are required as path parameters. The updated claim status record is supplied in the request body, and the operation ensures all updates are audit-logged for regulatory scrutiny.","description":"Updates an existing insurance claim status record identified by insuranceClaimStatusId within a specific insurance claim (identified by insuranceClaimId). This API is used by privileged users, such as organization admins and billing specialists, to modify previously submitted claim status events—such as updating the status code, clarifying payer response descriptions, or amending recorded payment amounts for reconciliation.\n\nThe operation enforces strict business rules, ensuring that only authorized roles may perform status corrections, and that any status value updates are permissible within the defined insurance claim workflow. All changes are fully audit-trailed, including before/after values, user identity, and exact timestamps. This operation is critical for maintaining accurate claim status history for compliance, denial management, and appeals. Related APIs include status creation and listing claim status history. Error scenarios include non-existent claim status ID, invalid updates per workflow rules, and unauthorized modification attempts.","summary":"Update an existing insurance claim status entry in a claim (healthcare_platform_insurance_claim_statuses).","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim containing the status to update.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceClaimStatusId","description":"Unique identifier of the insurance claim status record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated details for the insurance claim status event.","typeName":"IHealthcarePlatformInsuranceClaimStatus.IUpdate"},"responseBody":{"description":"Information about the updated insurance claim status record.","typeName":"IHealthcarePlatformInsuranceClaimStatus"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses/{insuranceClaimStatusId}","method":"put"},{"specification":"This operation permanently removes an insurance claim status entry attached to a specific insurance claim. It acts on the healthcare_platform_insurance_claim_statuses table, enabling privileged users to delete erroneously created or obsolete status records. The insuranceClaimId and insuranceClaimStatusId serve as path parameters to identify the exact record. Business rules require stringent authorization—typically systemAdmin or orgAdmin permissions—and audit all erase events for compliance. This is a hard delete since there is no soft-delete column in this table.","description":"Removes an insurance claim status record for a given claim, specifically targeting a record identified by insuranceClaimStatusId under the claim referenced by insuranceClaimId. This operation is restricted to high-privilege roles (e.g., organization admin or system admin), reflecting the sensitive nature of changing an insurance claim's legal/audit state.\n\nThe operation executes a hard delete, permanently erasing the status record from the database without a recovery option. All delete actions are captured in the financial audit log, with user attribution and timestamp, to ensure regulatory traceability. Attempting to delete a non-existent or non-owned claim status, or insufficient permissions, will result in an error. Related APIs include status creation, status update, and listing historical statuses.","summary":"Hard delete an insurance claim status event entry from a claim (healthcare_platform_insurance_claim_statuses).","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim from which the status will be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceClaimStatusId","description":"Unique identifier of the insurance claim status record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses/{insuranceClaimStatusId}","method":"delete"},{"specification":"This operation permanently removes an insurance claim status entry attached to a specific insurance claim. It acts on the healthcare_platform_insurance_claim_statuses table, enabling privileged users to delete erroneously created or obsolete status records. The insuranceClaimId and insuranceClaimStatusId serve as path parameters to identify the exact record. Business rules require stringent authorization—typically systemAdmin or orgAdmin permissions—and audit all erase events for compliance. This is a hard delete since there is no soft-delete column in this table.","description":"Removes an insurance claim status record for a given claim, specifically targeting a record identified by insuranceClaimStatusId under the claim referenced by insuranceClaimId. This operation is restricted to high-privilege roles (e.g., organization admin or system admin), reflecting the sensitive nature of changing an insurance claim's legal/audit state.\n\nThe operation executes a hard delete, permanently erasing the status record from the database without a recovery option. All delete actions are captured in the financial audit log, with user attribution and timestamp, to ensure regulatory traceability. Attempting to delete a non-existent or non-owned claim status, or insufficient permissions, will result in an error. Related APIs include status creation, status update, and listing historical statuses.","summary":"Hard delete an insurance claim status event entry from a claim (healthcare_platform_insurance_claim_statuses).","parameters":[{"name":"insuranceClaimId","description":"Unique identifier of the insurance claim from which the status will be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"insuranceClaimStatusId","description":"Unique identifier of the insurance claim status record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/insuranceClaims/{insuranceClaimId}/insuranceClaimStatuses/{insuranceClaimStatusId}","method":"delete"},{"specification":"This operation retrieves a specific financial audit log entry by its unique identifier. It operates on the healthcare_platform_financial_audit_logs table, which stores comprehensive audit trails for financial, billing, and insurance events as required for HIPAA and SOC 2 compliance. The endpoint returns details for a single audit event, including the user responsible, timestamp, action performed, entity affected, audit action type, and a description explaining business context. This operation supports regulatory inquiries, compliance audits, or financial investigations with full event-level provenance.","path":"/healthcarePlatform/systemAdmin/financialAuditLogs/{financialAuditLogId}","method":"get","summary":"Retrieve a financial audit log entry by ID from healthcare_platform_financial_audit_logs","description":"Fetches the complete details of a single financial audit log record specified by the financialAuditLogId path parameter. This operation enables authorized compliance, billing, or system administrator users to review the exact nature, context, and status of a financial audit event. The healthcare_platform_financial_audit_logs schema holds audit records for invoice creation, modification, payments, adjustments, claim submissions, and other significant financial activities.\n\nEach audit log entry contains references to the affected entity (invoice, claim, payment, etc.), associated organization, user who performed the action, audit action type (such as create, update, access, delete), and a human-readable action description. The operation is critical for compliance with business rules and regulatory mandates, supporting review, investigation, and traceability for all financial and insurance operations in the system.\n\nAuthorization is strictly enforced: only users with appropriate roles (systemAdmin or organizationAdmin) may access audit details, and all access is logged for further review purposes. The returned data structure mirrors the entity as defined in the Prisma schema, exposing all primary audit properties.","parameters":[{"name":"financialAuditLogId","description":"Unique identifier of the audit log entry to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Financial audit log record with all principal event details","typeName":"IHealthcarePlatformFinancialAuditLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation retrieves a specific financial audit log entry by its unique identifier. It operates on the healthcare_platform_financial_audit_logs table, which stores comprehensive audit trails for financial, billing, and insurance events as required for HIPAA and SOC 2 compliance. The endpoint returns details for a single audit event, including the user responsible, timestamp, action performed, entity affected, audit action type, and a description explaining business context. This operation supports regulatory inquiries, compliance audits, or financial investigations with full event-level provenance.","path":"/healthcarePlatform/organizationAdmin/financialAuditLogs/{financialAuditLogId}","method":"get","summary":"Retrieve a financial audit log entry by ID from healthcare_platform_financial_audit_logs","description":"Fetches the complete details of a single financial audit log record specified by the financialAuditLogId path parameter. This operation enables authorized compliance, billing, or system administrator users to review the exact nature, context, and status of a financial audit event. The healthcare_platform_financial_audit_logs schema holds audit records for invoice creation, modification, payments, adjustments, claim submissions, and other significant financial activities.\n\nEach audit log entry contains references to the affected entity (invoice, claim, payment, etc.), associated organization, user who performed the action, audit action type (such as create, update, access, delete), and a human-readable action description. The operation is critical for compliance with business rules and regulatory mandates, supporting review, investigation, and traceability for all financial and insurance operations in the system.\n\nAuthorization is strictly enforced: only users with appropriate roles (systemAdmin or organizationAdmin) may access audit details, and all access is logged for further review purposes. The returned data structure mirrors the entity as defined in the Prisma schema, exposing all primary audit properties.","parameters":[{"name":"financialAuditLogId","description":"Unique identifier of the audit log entry to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Financial audit log record with all principal event details","typeName":"IHealthcarePlatformFinancialAuditLog"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation performs a filtered, paginated search for analytics dashboards within the system, returning dashboards matching search criteria. It leverages the healthcare_platform_analytics_dashboards table, which stores definitions and layouts for analytics dashboards per user, organization, or department. The operation supports query-based filtering on properties such as owner, organization, department, dashboard title, and visibility, as well as pagination and sorting. It is used by advanced analytics users and administrators to locate, review, and manage dashboards in production analytics workflows.","path":"/healthcarePlatform/systemAdmin/analyticsDashboards","method":"patch","summary":"Search and retrieve analytics dashboards with advanced filtering and pagination","description":"This operation allows analytics users, administrators, and business intelligence staff to search for analytics dashboards using a variety of filters and query parameters. The system supports filtering by dashboard owner, organization, department, visibility (public/private), and search by title or description. Pagination and sorting options allow efficient browsing of large sets of dashboards, accommodating scenarios where organizations, departments, or users maintain multiple dashboard variations.\n\nThe healthcare_platform_analytics_dashboards schema serves as the backing store for these dashboards, tying each to an owner, organization, and optionally a department. Search operations are constrained by user authorization: users may view only dashboards to which they have access (by ownership, organization, public visibility, or department scope). Complex queries and sorting allow integration with analytics administration, dashboard management UIs, and automation for compliance or best practices.\n\nThe returned data structure is a paginated collection of dashboard summary objects, as defined in the Prisma schema, optimized for quick list rendering and actionable navigation.","parameters":[],"requestBody":{"description":"Filtering, search criteria, and pagination parameters for finding dashboards","typeName":"IHealthcarePlatformAnalyticsDashboard.IRequest"},"responseBody":{"description":"Paginated list of analytics dashboard summary objects matching search criteria","typeName":"IPageIHealthcarePlatformAnalyticsDashboard.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation performs a filtered, paginated search for analytics dashboards within the system, returning dashboards matching search criteria. It leverages the healthcare_platform_analytics_dashboards table, which stores definitions and layouts for analytics dashboards per user, organization, or department. The operation supports query-based filtering on properties such as owner, organization, department, dashboard title, and visibility, as well as pagination and sorting. It is used by advanced analytics users and administrators to locate, review, and manage dashboards in production analytics workflows.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards","method":"patch","summary":"Search and retrieve analytics dashboards with advanced filtering and pagination","description":"This operation allows analytics users, administrators, and business intelligence staff to search for analytics dashboards using a variety of filters and query parameters. The system supports filtering by dashboard owner, organization, department, visibility (public/private), and search by title or description. Pagination and sorting options allow efficient browsing of large sets of dashboards, accommodating scenarios where organizations, departments, or users maintain multiple dashboard variations.\n\nThe healthcare_platform_analytics_dashboards schema serves as the backing store for these dashboards, tying each to an owner, organization, and optionally a department. Search operations are constrained by user authorization: users may view only dashboards to which they have access (by ownership, organization, public visibility, or department scope). Complex queries and sorting allow integration with analytics administration, dashboard management UIs, and automation for compliance or best practices.\n\nThe returned data structure is a paginated collection of dashboard summary objects, as defined in the Prisma schema, optimized for quick list rendering and actionable navigation.","parameters":[],"requestBody":{"description":"Filtering, search criteria, and pagination parameters for finding dashboards","typeName":"IHealthcarePlatformAnalyticsDashboard.IRequest"},"responseBody":{"description":"Paginated list of analytics dashboard summary objects matching search criteria","typeName":"IPageIHealthcarePlatformAnalyticsDashboard.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves the full configuration and definition for a specific analytics dashboard by its unique identifier. It queries the healthcare_platform_analytics_dashboards table using the dashboardId path parameter, returning all dashboard details including layout, widgets, sharing configuration, and organization/department context. This enables authorized users to render, review, or administer analytics dashboards in production environments.","path":"/healthcarePlatform/systemAdmin/analyticsDashboards/{dashboardId}","method":"get","summary":"Retrieve a specific analytics dashboard by its identifier","description":"Fetches the full record of an analytics dashboard specified by the dashboardId path parameter. The healthcare_platform_analytics_dashboards schema holds all metadata and configuration necessary to render dashboards for end users, including dashboard title, description, configuration JSON, owner, visibility, and linkage to organization or department contexts.\n\nThis endpoint is commonly used in analytics and reporting applications, as well as in administrative workflows managing dashboard access, customization, and sharing. It is crucial for supporting real-time dashboard rendering, editing, copying, and compliance review. Authorization checks restrict access so users may only see dashboards they own or are allowed to view by organizational or department-level policies.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full analytics dashboard configuration and metadata","typeName":"IHealthcarePlatformAnalyticsDashboard"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation retrieves the full configuration and definition for a specific analytics dashboard by its unique identifier. It queries the healthcare_platform_analytics_dashboards table using the dashboardId path parameter, returning all dashboard details including layout, widgets, sharing configuration, and organization/department context. This enables authorized users to render, review, or administer analytics dashboards in production environments.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}","method":"get","summary":"Retrieve a specific analytics dashboard by its identifier","description":"Fetches the full record of an analytics dashboard specified by the dashboardId path parameter. The healthcare_platform_analytics_dashboards schema holds all metadata and configuration necessary to render dashboards for end users, including dashboard title, description, configuration JSON, owner, visibility, and linkage to organization or department contexts.\n\nThis endpoint is commonly used in analytics and reporting applications, as well as in administrative workflows managing dashboard access, customization, and sharing. It is crucial for supporting real-time dashboard rendering, editing, copying, and compliance review. Authorization checks restrict access so users may only see dashboards they own or are allowed to view by organizational or department-level policies.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full analytics dashboard configuration and metadata","typeName":"IHealthcarePlatformAnalyticsDashboard"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation creates a new analytics dashboard definition within the system. It inserts a new record into the healthcare_platform_analytics_dashboards table, storing layout configuration, title, ownership, and sharing settings provided by the requesting user. This is typically used by analytics staff, system admins, or organization admins to provision new dashboards for self-service analytics, organizational reporting, or department-level monitoring.","path":"/healthcarePlatform/systemAdmin/analyticsDashboards","method":"post","summary":"Create a new analytics dashboard definition","description":"Creates a new analytics dashboard, accepting details from the request body including title, layout/configuration JSON, owning user, organizational and department context, visibility (public/private), and description. The healthcare_platform_analytics_dashboards schema enforces unique constraints per organization and user for active dashboards and validates configuration structure.\n\nThe operation ensures only authorized roles (systemAdmin, organizationAdmin) may create dashboards, enforcing relevant constraints and business rules for sharing and access control. On success, the endpoint returns the complete analytics dashboard object as stored, which can be used for immediate rendering, editing, or access management. If duplicate constraints are violated or data is invalid, proper error codes and validation messages are returned.\n\nTypical workflows supported include the onboarding of new analytics products, automation of dashboards by admin scripts, and business intelligence staff self-service provisioning.","parameters":[],"requestBody":{"description":"New analytics dashboard details and configuration to create","typeName":"IHealthcarePlatformAnalyticsDashboard.ICreate"},"responseBody":{"description":"Created dashboard object including metadata and configuration","typeName":"IHealthcarePlatformAnalyticsDashboard"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation creates a new analytics dashboard definition within the system. It inserts a new record into the healthcare_platform_analytics_dashboards table, storing layout configuration, title, ownership, and sharing settings provided by the requesting user. This is typically used by analytics staff, system admins, or organization admins to provision new dashboards for self-service analytics, organizational reporting, or department-level monitoring.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards","method":"post","summary":"Create a new analytics dashboard definition","description":"Creates a new analytics dashboard, accepting details from the request body including title, layout/configuration JSON, owning user, organizational and department context, visibility (public/private), and description. The healthcare_platform_analytics_dashboards schema enforces unique constraints per organization and user for active dashboards and validates configuration structure.\n\nThe operation ensures only authorized roles (systemAdmin, organizationAdmin) may create dashboards, enforcing relevant constraints and business rules for sharing and access control. On success, the endpoint returns the complete analytics dashboard object as stored, which can be used for immediate rendering, editing, or access management. If duplicate constraints are violated or data is invalid, proper error codes and validation messages are returned.\n\nTypical workflows supported include the onboarding of new analytics products, automation of dashboards by admin scripts, and business intelligence staff self-service provisioning.","parameters":[],"requestBody":{"description":"New analytics dashboard details and configuration to create","typeName":"IHealthcarePlatformAnalyticsDashboard.ICreate"},"responseBody":{"description":"Created dashboard object including metadata and configuration","typeName":"IHealthcarePlatformAnalyticsDashboard"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing analytics dashboard configuration within the healthcare platform. It is linked to the healthcare_platform_analytics_dashboards table in the Prisma schema, allowing users with appropriate permissions (such as dashboard owners, organization or department admins) to modify the dashboard's title, description, widget configuration, privacy level, or associated department. All fields must correspond to the structure and constraints defined in the underlying schema. Strict audit logs are required for compliance. This operation supports updating only allowed, mutable fields, with version management handled internally.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}","method":"put","summary":"Update an existing analytics dashboard's configuration or content (healthcare_platform_analytics_dashboards table).","description":"This operation enables authorized users to update the configuration, contents, or metadata of a specific analytics dashboard already created in the system. The target dashboard is referenced by its unique dashboardId, which must exist in the healthcare_platform_analytics_dashboards table. Users can update fields such as dashboard title, description, department association, visibility (public/private), and the JSON widget/layout configuration. Role-based access ensures only the dashboard owner or permitted admins can perform updates.\n\nAll update attempts are subject to validation for field correctness, concurrency control (optimistic locking as required), and audit logging for traceability. Any immutable, system-controlled, or deleted dashboards are excluded from modification. Error scenarios include invalid dashboard ID, update attempts on non-owned or role-ineligible dashboards, and business validation failures for field values or configuration content.\n\nAll dashboard update actions are logged for complete compliance traceability and review by audit or organization admin roles.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated properties for the target analytics dashboard.","typeName":"IHealthcarePlatformAnalyticsDashboard.IUpdate"},"responseBody":{"description":"The updated analytics dashboard with all applied changes.","typeName":"IHealthcarePlatformAnalyticsDashboard"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation updates an existing analytics dashboard configuration within the healthcare platform. It is linked to the healthcare_platform_analytics_dashboards table in the Prisma schema, allowing users with appropriate permissions (such as dashboard owners, organization or department admins) to modify the dashboard's title, description, widget configuration, privacy level, or associated department. All fields must correspond to the structure and constraints defined in the underlying schema. Strict audit logs are required for compliance. This operation supports updating only allowed, mutable fields, with version management handled internally.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}","method":"put","summary":"Update an existing analytics dashboard's configuration or content (healthcare_platform_analytics_dashboards table).","description":"This operation enables authorized users to update the configuration, contents, or metadata of a specific analytics dashboard already created in the system. The target dashboard is referenced by its unique dashboardId, which must exist in the healthcare_platform_analytics_dashboards table. Users can update fields such as dashboard title, description, department association, visibility (public/private), and the JSON widget/layout configuration. Role-based access ensures only the dashboard owner or permitted admins can perform updates.\n\nAll update attempts are subject to validation for field correctness, concurrency control (optimistic locking as required), and audit logging for traceability. Any immutable, system-controlled, or deleted dashboards are excluded from modification. Error scenarios include invalid dashboard ID, update attempts on non-owned or role-ineligible dashboards, and business validation failures for field values or configuration content.\n\nAll dashboard update actions are logged for complete compliance traceability and review by audit or organization admin roles.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated properties for the target analytics dashboard.","typeName":"IHealthcarePlatformAnalyticsDashboard.IUpdate"},"responseBody":{"description":"The updated analytics dashboard with all applied changes.","typeName":"IHealthcarePlatformAnalyticsDashboard"},"authorizationType":null,"authorizationRole":"departmentHead","name":"update"},{"specification":"This operation removes an analytics dashboard from active usage by marking it as deleted using soft delete logic. It operates on the healthcare_platform_analytics_dashboards table and is essential for organization admins, department heads, or dashboard owners to manage their visual analytics workspace. Records are not physically deleted but flagged for retention/compliance, and full audit trails are maintained.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}","method":"delete","summary":"Soft-delete an analytics dashboard (soft delete via deleted_at; healthcare_platform_analytics_dashboards table).","description":"When called, this operation soft-deletes an analytics dashboard identified by dashboardId from the healthcare_platform_analytics_dashboards table, rendering it inaccessible in normal workflows but retaining the record for audit, compliance, and possible future restoration. Only users with sufficient privileges (dashboard owner, organization admin, or department head) can delete dashboards.\n\nDeletion requests are validated for dashboard existence, user authorization, and that the dashboard is not already deleted or system-locked. The deleted_at field is set to the current timestamp. Attempts to delete non-existent or unowned dashboards result in error responses. This operation is strictly tracked in system audit logs for regulatory and accountability requirements.\n\nDashboards flagged as deleted may be retained per organization policy for a defined retention window. Recovery or permanent deletion processes are managed separately.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation removes an analytics dashboard from active usage by marking it as deleted using soft delete logic. It operates on the healthcare_platform_analytics_dashboards table and is essential for organization admins, department heads, or dashboard owners to manage their visual analytics workspace. Records are not physically deleted but flagged for retention/compliance, and full audit trails are maintained.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}","method":"delete","summary":"Soft-delete an analytics dashboard (soft delete via deleted_at; healthcare_platform_analytics_dashboards table).","description":"When called, this operation soft-deletes an analytics dashboard identified by dashboardId from the healthcare_platform_analytics_dashboards table, rendering it inaccessible in normal workflows but retaining the record for audit, compliance, and possible future restoration. Only users with sufficient privileges (dashboard owner, organization admin, or department head) can delete dashboards.\n\nDeletion requests are validated for dashboard existence, user authorization, and that the dashboard is not already deleted or system-locked. The deleted_at field is set to the current timestamp. Attempts to delete non-existent or unowned dashboards result in error responses. This operation is strictly tracked in system audit logs for regulatory and accountability requirements.\n\nDashboards flagged as deleted may be retained per organization policy for a defined retention window. Recovery or permanent deletion processes are managed separately.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"departmentHead","name":"erase"},{"specification":"This operation retrieves a filtered, paginated list of analytic dashboard preference settings for a given dashboard. It works with the healthcare_platform_dashboard_preferences table and supports advanced search and filter capabilities, allowing dashboard owners and organization/department admins to review and manage preferences. The operation is critical for personalization workflows and modular dashboard behavior.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}/preferences","method":"patch","summary":"Search and paginate dashboard preferences for a specific analytics dashboard (healthcare_platform_dashboard_preferences table).","description":"This operation fetches a paginated, possibly filtered list of user preference records associated with a specific analytics dashboard, referenced by dashboardId. It reads from the healthcare_platform_dashboard_preferences table and returns a list of matching preference objects, supporting advanced search, sorting, and pagination through the request body. \n\nSecurity is enforced such that only the dashboard owner, admins, or users with proper assignment can access preference data for the dashboard. Input request parameters allow filtering by userId, search keywords, or custom metadata contained in the preferences. The response pages and sorts results based on standard fields like last_viewed_at, created_at, or updated_at.\n\nAll access is logged for audit purposes. Attempts to fetch preferences for non-existent or inaccessible dashboards return business validation errors.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard whose preferences are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, search, and pagination parameters for dashboard preference retrieval.","typeName":"IHealthcarePlatformDashboardPreference.IRequest"},"responseBody":{"description":"Paginated list of dashboard preference objects matching the search parameters.","typeName":"IPageIHealthcarePlatformDashboardPreference"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves a filtered, paginated list of analytic dashboard preference settings for a given dashboard. It works with the healthcare_platform_dashboard_preferences table and supports advanced search and filter capabilities, allowing dashboard owners and organization/department admins to review and manage preferences. The operation is critical for personalization workflows and modular dashboard behavior.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}/preferences","method":"patch","summary":"Search and paginate dashboard preferences for a specific analytics dashboard (healthcare_platform_dashboard_preferences table).","description":"This operation fetches a paginated, possibly filtered list of user preference records associated with a specific analytics dashboard, referenced by dashboardId. It reads from the healthcare_platform_dashboard_preferences table and returns a list of matching preference objects, supporting advanced search, sorting, and pagination through the request body. \n\nSecurity is enforced such that only the dashboard owner, admins, or users with proper assignment can access preference data for the dashboard. Input request parameters allow filtering by userId, search keywords, or custom metadata contained in the preferences. The response pages and sorts results based on standard fields like last_viewed_at, created_at, or updated_at.\n\nAll access is logged for audit purposes. Attempts to fetch preferences for non-existent or inaccessible dashboards return business validation errors.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard whose preferences are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter, search, and pagination parameters for dashboard preference retrieval.","typeName":"IHealthcarePlatformDashboardPreference.IRequest"},"responseBody":{"description":"Paginated list of dashboard preference objects matching the search parameters.","typeName":"IPageIHealthcarePlatformDashboardPreference"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index"},{"specification":"This operation retrieves a specific dashboard preference object by preferenceId for a given dashboardId. It operates on healthcare_platform_dashboard_preferences in the Prisma schema. This allows users and admins to fetch and review preference settings for analytics dashboard personalization and compliance review.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"get","summary":"Retrieve a specific dashboard preference object by dashboardId and preferenceId (healthcare_platform_dashboard_preferences table).","description":"Provides detailed information about a single user’s dashboard preference settings, identified by preferenceId and associated with a specific dashboardId. It queries healthcare_platform_dashboard_preferences, ensuring the record exists, that the requester is authorized (dashboard owner, assigned user, or admin), and returns the full preference object.\n\nError conditions include missing or mismatched dashboard and preference IDs, unauthorized access, or if the preference has been deleted. Data returned supports user experience personalization, auditing, and preference management requirements.\n\nThe operation is audited; all retrievals are tracked for compliance and outlier monitoring. Related APIs include preference search/list (PATCH /analyticsDashboards/{dashboardId}/preferences) and update operations.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard to which the preference belongs.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"Unique identifier of the dashboard preference being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed dashboard preference object for the specified dashboard and preference IDs.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation retrieves a specific dashboard preference object by preferenceId for a given dashboardId. It operates on healthcare_platform_dashboard_preferences in the Prisma schema. This allows users and admins to fetch and review preference settings for analytics dashboard personalization and compliance review.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"get","summary":"Retrieve a specific dashboard preference object by dashboardId and preferenceId (healthcare_platform_dashboard_preferences table).","description":"Provides detailed information about a single user’s dashboard preference settings, identified by preferenceId and associated with a specific dashboardId. It queries healthcare_platform_dashboard_preferences, ensuring the record exists, that the requester is authorized (dashboard owner, assigned user, or admin), and returns the full preference object.\n\nError conditions include missing or mismatched dashboard and preference IDs, unauthorized access, or if the preference has been deleted. Data returned supports user experience personalization, auditing, and preference management requirements.\n\nThe operation is audited; all retrievals are tracked for compliance and outlier monitoring. Related APIs include preference search/list (PATCH /analyticsDashboards/{dashboardId}/preferences) and update operations.","parameters":[{"name":"dashboardId","description":"Unique identifier of the dashboard to which the preference belongs.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"Unique identifier of the dashboard preference being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The detailed dashboard preference object for the specified dashboard and preference IDs.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at"},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/systemAdmin/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/medicalDoctor/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/nurse/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/technician/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"technician","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/receptionist/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation creates a new dashboard preferences record for a user's analytics dashboard. It is associated with the healthcare_platform_dashboard_preferences table and allows a user to save or customize layout, filters, themes, widget states, or viewing preferences for a specified analytics dashboard. The request body contains user-specific customization setting information, which is stored and tied to the dashboardId provided in the URL. The operation supports personalization and restores last-view state functionality for role-based dashboards.","path":"/healthcarePlatform/patient/analyticsDashboards/{dashboardId}/preferences","method":"post","summary":"Create a new analytics dashboard preferences record (IHealthcarePlatformDashboardPreference) for a specific dashboard.","description":"Creates a new preference record for dashboard customization, storing user-specific settings such as theme, layout, filters, widget configuration, and last-view state for the given dashboardId parameter. The operation writes to the healthcare_platform_dashboard_preferences table, tying the new record to the requesting user and the dashboard specified by the path parameter. Authorization is required to ensure the user owns or has been granted edit access to the dashboard. The request body must follow the IHealthcarePlatformDashboardPreference.ICreate schema, including the necessary configuration parameters for preferences creation. On success, the operation returns the newly created IHealthcarePlatformDashboardPreference object, reflecting all user-specified settings and the dashboard association. Error handling includes validation for dashboard existence, permission checks, and duplicate profile handling where a preference already exists for the user/dashboard combination.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preferences are being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"User's dashboard preference configuration data for creation.","typeName":"IHealthcarePlatformDashboardPreference.ICreate"},"responseBody":{"description":"The created dashboard preferences record with user-specific settings and dashboard association.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","authorizationRole":"patient","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/systemAdmin/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/medicalDoctor/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/nurse/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/technician/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"technician","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/receptionist/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation updates an existing dashboard preferences record for a given analytics dashboard and preferenceId. It modifies the stored customization parameters such as user theme, layout, filter preferences, and widget states for the targeted dashboard, as defined by the healthcare_platform_dashboard_preferences table. Only the owner of the preferences or a user with granted permission can update these settings.","path":"/healthcarePlatform/patient/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"put","summary":"Update analytics dashboard preferences (IHealthcarePlatformDashboardPreference) for a specific dashboard and preference.","description":"Updates an existing preference record for dashboard customization, allowing users to change saved settings like theme, dashboard layout, widget configuration, and personal filter states for the identified dashboard and preferenceId. The operation mandates authorization to ensure that only the preference owner or users with matching permissions can update the settings. The request body follows the IHealthcarePlatformDashboardPreference.IUpdate schema, specifying the exact configuration updates desired. The operation writes to the healthcare_platform_dashboard_preferences table, ensuring audit logs are maintained for all changes as per compliance requirements. On success, it returns the updated IHealthcarePlatformDashboardPreference object, reflecting the new state. Validation handles dashboard and preference existence, authorization checks, and ensures no other preference is overwritten by mistake.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the user preference is being updated.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Dashboard preferences configuration changes to update (partial or full).","typeName":"IHealthcarePlatformDashboardPreference.IUpdate"},"responseBody":{"description":"The updated dashboard preferences record with new user-specific settings.","typeName":"IHealthcarePlatformDashboardPreference"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"update","authorizationRole":"patient","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/systemAdmin/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/organizationAdmin/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/departmentHead/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/medicalDoctor/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/nurse/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/technician/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"technician","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/receptionist/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation deletes a dashboard preferences record for a user's analytics dashboard and specific preferenceId. It performs a soft delete by setting the deleted_at field in the healthcare_platform_dashboard_preferences table, thereby disabling the personalized configuration but preserving the record for audit and compliance purposes. Only the owner or authorized user may perform this operation.","path":"/healthcarePlatform/patient/analyticsDashboards/{dashboardId}/preferences/{preferenceId}","method":"delete","summary":"Erase (soft-delete) dashboard preferences (IHealthcarePlatformDashboardPreference) for a given dashboard and preference.","description":"Permanently disables a user or organization's dashboard preference settings by marking the specified preference record as deleted via the deleted_at column in the healthcare_platform_dashboard_preferences table (soft delete). This disables all customizations for the specified dashboard until a new preference is created. Authorization is required to ensure only the owner or designated admin can erase the preference record. Successful response returns no content. Validation includes existence checks for both dashboard and preferenceId, as well as proper permission enforcement. If preference is already deleted, the operation is idempotent and returns success.","parameters":[{"name":"dashboardId","description":"The unique identifier of the analytics dashboard for which the preference is erased.","schema":{"type":"string","format":"uuid"}},{"name":"preferenceId","description":"The unique identifier for the user dashboard preference record to erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"erase","authorizationRole":"patient","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/systemAdmin/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/organizationAdmin/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/departmentHead/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/medicalDoctor/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/nurse/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/technician/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"technician","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/receptionist/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation provides a paginated, filtered search of analytics reports available to the user across the platform or current organization. It references the healthcare_platform_analytics_reports table and supports searching, filtering, and sorting by attributes such as report name, owner, department, or activity status. Utilizes the IHealthcarePlatformAnalyticsReport.IRequest request body for search configuration and returns paginated results.","path":"/healthcarePlatform/patient/analyticsReports","method":"patch","summary":"Search and retrieve paginated analytics report records (IHealthcarePlatformAnalyticsReport) with filters and sorting.","description":"Retrieves a filtered, paginated list of analytics report definitions to which the user has access, based on search, filter, and sort criteria specified in the request body. Operates on the healthcare_platform_analytics_reports table and is used to provide users with access to analytics configuration, reporting dashboards, and organization/department-scoped reports. The IHealthcarePlatformAnalyticsReport.IRequest request body enables deliberate querying for report name, creator, department, and status, as well as supports pagination and sorting. The results are returned as an IPageIHealthcarePlatformAnalyticsReport, providing all attributes suitable for reporting UIs. Authorization may include any authenticated user with analytics/report permissions in the organization or platform. Error handling includes validation of query parameters, enforcement of RBAC/data scope, and paginated output for large result sets.","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sort configuration for analytics reports.","typeName":"IHealthcarePlatformAnalyticsReport.IRequest"},"responseBody":{"description":"Paginated list of analytics reports matching user filters and query criteria.","typeName":"IPageIHealthcarePlatformAnalyticsReport"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","authorizationRole":"patient","authorizationType":null},{"specification":"This operation retrieves a specific analytics report by its unique identifier. It accesses the healthcare_platform_analytics_reports table, which contains saved analytics report configurations for organizations or departments. The operation enables authorized users to fetch detailed report metadata, template configuration, associated organization and department, creator reference, and the current activation state. It is read-only and supports detailed report inspection for dashboard integration, auditing, and compliance workflows.","description":"Retrieve an analytics report template's complete metadata and configuration JSON given its reportId. This operation supports compliance and business workflows by exposing all information about a specific analytics report, including its assigned organization and department, creator user reference, and internal configuration fields as stored in the healthcare_platform_analytics_reports Prisma model.\n\nSecurity is enforced so that only users in the relevant organization/departments, or with sufficient privilege (admin, dashboard owner), may read this resource. The returned information is suitable for debugging, auditing, or rendering report details in the application UI. Unauthorized users receive appropriate access denied errors that are also logged for audit review. All field references and values are aligned with the Prisma model, with audit compliance metadata included as appropriate.\n\nThis operation is read-only and should be used in conjunction with PATCH /analyticsReports for list searching or GET /analyticsDashboards for dashboard-level operations.","summary":"Retrieve a specific analytics report by ID from healthcare_platform_analytics_reports table.","parameters":[{"name":"reportId","description":"Unique identifier (UUID) of the target analytics report.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full analytics report configuration with metadata for the requested reportId.","typeName":"IHealthcarePlatformAnalyticsReport"},"authorizationRoles":["organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/analyticsReports/{reportId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new analytics report definition in the system by accepting parameters for report name, description, template configuration JSON, scope (organization/department), activation status, and proper access control. The operation targets the healthcare_platform_analytics_reports table, enabling users with administrative privileges to provision custom analytics reports for dashboards, compliance, or operational business purposes. The created report is versioned and scoped as per input fields.","description":"Allows authorized organization administrators to define and register a new analytics report template for use in dashboards, business intelligence, or compliance processing. The POST operation creates a record in the healthcare_platform_analytics_reports table, assigning template configuration, naming, activation state, and visibility scope (organization, department, or user level) according to the Prisma schema fields.\n\nSecurity validation ensures only users with appropriate privileges can create reports for their organization or department, with automatic attribution of creator identity and timestamps per the schema. The operation supports audit trails, versioning, and business governance for analytics/reporting workflows. Reports created are immediately available for further refinement, attachment to dashboards, and role-based analytics export. Error handling covers name uniqueness, permission boundaries, and JSON validation errors for config fields.\n\nThis operation is complemented by GET /analyticsReports/{reportId} for detail retrieval and PUT /analyticsReports/{reportId} for template updates.","summary":"Create a new analytics report definition in the healthcare_platform_analytics_reports table.","parameters":[],"requestBody":{"description":"Required fields for creating an analytics report, including name, description, configuration, and access control.","typeName":"IHealthcarePlatformAnalyticsReport.ICreate"},"responseBody":{"description":"Created analytics report metadata and template configuration record.","typeName":"IHealthcarePlatformAnalyticsReport"},"authorizationRoles":["organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/analyticsReports","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates the configuration, metadata, or scope of a specific analytics report in the healthcare_platform_analytics_reports table, identified by its reportId path parameter. It accepts changes to report name, description, template configuration, visibility, activation, and access control fields as permitted in the schema. Administrative privileges are required to execute this operation, ensuring audit and version tracking of all changes for compliance and business continuity.","description":"Allows authorized organization administrators to update the details, configuration, and template of an existing analytics report, as uniquely identified by reportId. This operation accesses the healthcare_platform_analytics_reports Prisma model to support updates to key fields, such as the report name, configuration JSON, description, department assignment, and active status. Audit trails and full versioning are enforced per business and compliance policy.\n\nSecurity validation restricts access to administrators within the appropriate organization, ensuring that changes are recorded with attribution and timestamp. Operations are subject to validation for name uniqueness, correct configuration JSON syntactic correctness, and permission checks based on the department and organization scope. All update attempts (successful or denied) are recorded for audit tracking and compliance review.\n\nTransactional error handling is implemented for concurrency conflicts, invalid updates, or restricted status changes. This operation works in conjunction with GET /analyticsReports/{reportId} for retrieving current values and PATCH /analyticsReports for report search.","summary":"Update specific analytics report configuration or metadata by reportId in the healthcare_platform_analytics_reports table.","parameters":[{"name":"reportId","description":"Unique identifier (UUID) of the analytics report to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the analytics report, including configuration, metadata, and scope.","typeName":"IHealthcarePlatformAnalyticsReport.IUpdate"},"responseBody":{"description":"Updated analytics report metadata and configuration record.","typeName":"IHealthcarePlatformAnalyticsReport"},"authorizationRoles":["organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/analyticsReports/{reportId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation permanently removes an analytics report definition from the healthcare_platform_analytics_reports table by unique reportId, subject to compliance, role, and audit restrictions. While records are physically deleted, operational and regulatory policies may require preservation of audit trails and deactivation status for certain categories of reports. Only users with organization administrator privileges can invoke deletion, which is logged for audit and compliance review.","description":"Enables authorized organization administrators to delete a specific analytics report, as identified by reportId, from the platform. This operation performs a hard delete of the analytics report record in the healthcare_platform_analytics_reports Prisma table and immediately removes its dashboard/reporting presence in business workflows.\n\nCompliance, audit, and business policy are strictly enforced—attempts to delete reports that are locked or referenced in regulatory or active analytics workflows will raise an error and log the incident for review. Every delete action is recorded in the audit trail for compliance and accountability. Hard delete is performed as no soft delete field is present in this Prisma schema for analytics reports.\n\nThe operation completes the report lifecycle together with POST (create), PUT (update), GET (retrieve), and PATCH (search) endpoints.","summary":"Permanently delete an analytics report by reportId from the healthcare_platform_analytics_reports table (hard delete).","parameters":[{"name":"reportId","description":"Unique identifier (UUID) for the analytics report to be removed.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/analyticsReports/{reportId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation provides a paginated, filterable, and sortable list of clinical decision support rules configured in the platform. It queries the 'healthcare_platform_decision_support_rules' table, supporting advanced resource management for CDS logic per organization. Users can search rules by title, trigger event, enabled status, or related organizational context. The API enables visibility into current and historical CDS rules for auditing, compliance, and reconfiguration workflows. Pagination, sorting, and dynamic filters allow administrators and analytics staff to maintain clear oversight of organization-specific rules for patient safety and clinical guidance. The operation is critical for enabling quality improvement and infosec validation processes.","description":"Retrieve a filtered and paginated list of clinical decision support rules (CDS) from the 'healthcare_platform_decision_support_rules' table. This endpoint allows privileged clinical administrators and analytics roles to search, filter, and sort CDS rules relevant to their organization or department context.\n\nSecurity requires valid authentication and role-based access. Only users with appropriate administrative, analytics, or compliance permissions may access the full rule catalog. Rule details are visible based on organizational scoping and user assignment, preventing unauthorized cross-tenant access.\n\nThe API incorporates multi-field searching (title, trigger event, CDS rule status), ordering, and supports queries against is_enabled status as well as temporal filters (created_at/updated_at). It directly supports audit reviews and policy adjustments per clinical best practices, enabling organizations to maintain regulatory fidelity and optimize patient safety programs.","summary":"Search and retrieve a paginated, filterable list of clinical decision support (CDS) rules in the healthcare platform.","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for retrieving CDS rules.","typeName":"IHealthcarePlatformDecisionSupportRule.IRequest"},"responseBody":{"description":"Paginated list of CDS rules matching query parameters, including filter metadata.","typeName":"IPageIHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/decisionSupportRules","method":"patch"},{"specification":"This operation provides a paginated, filterable, and sortable list of clinical decision support rules configured in the platform. It queries the 'healthcare_platform_decision_support_rules' table, supporting advanced resource management for CDS logic per organization. Users can search rules by title, trigger event, enabled status, or related organizational context. The API enables visibility into current and historical CDS rules for auditing, compliance, and reconfiguration workflows. Pagination, sorting, and dynamic filters allow administrators and analytics staff to maintain clear oversight of organization-specific rules for patient safety and clinical guidance. The operation is critical for enabling quality improvement and infosec validation processes.","description":"Retrieve a filtered and paginated list of clinical decision support rules (CDS) from the 'healthcare_platform_decision_support_rules' table. This endpoint allows privileged clinical administrators and analytics roles to search, filter, and sort CDS rules relevant to their organization or department context.\n\nSecurity requires valid authentication and role-based access. Only users with appropriate administrative, analytics, or compliance permissions may access the full rule catalog. Rule details are visible based on organizational scoping and user assignment, preventing unauthorized cross-tenant access.\n\nThe API incorporates multi-field searching (title, trigger event, CDS rule status), ordering, and supports queries against is_enabled status as well as temporal filters (created_at/updated_at). It directly supports audit reviews and policy adjustments per clinical best practices, enabling organizations to maintain regulatory fidelity and optimize patient safety programs.","summary":"Search and retrieve a paginated, filterable list of clinical decision support (CDS) rules in the healthcare platform.","parameters":[],"requestBody":{"description":"Filter, search, and pagination criteria for retrieving CDS rules.","typeName":"IHealthcarePlatformDecisionSupportRule.IRequest"},"responseBody":{"description":"Paginated list of CDS rules matching query parameters, including filter metadata.","typeName":"IPageIHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/decisionSupportRules","method":"patch"},{"specification":"This operation fetches detailed information about a specific clinical decision support rule, identified by its unique rule ID. It targets the 'healthcare_platform_decision_support_rules' table and returns comprehensive metadata, rule logic, organizational context, activation status, trigger event, and associated relationships (e.g., linked clinical alerts). The operation is designed for administrators, analytics staff, and compliance reviewers requiring visibility into the configuration and logic of CDS rules for patient safety, audit, or configuration management. The endpoint supports review, validation, workflow troubleshooting, and audit documentation functions in production healthcare environments.","description":"Retrieve all details for a specific clinical decision support rule from 'healthcare_platform_decision_support_rules' by rule ID. This endpoint is essential for administrative, analytics, or compliance roles to view rule metadata, logic (expression_json), trigger event, lifecycle metadata, enabled status, and audit history.\n\nAuthorization checks ensure that only users with appropriate administrative or analytic privileges and proper organization/department scoping can access this rule detail. The rule ID must be a valid UUID; errors are returned for invalid IDs or lack of permissions.\n\nExpected behaviors include full rule details in a compliance-ready structure, error and not-found handling, and compatibility with audit and workflow configuration tools. This is used in conjunction with the rule search/list endpoint to permit full lifecycle management of CDS rule entities in the production system.","summary":"Fetch complete details for a specific CDS rule by rule ID in the platform.","parameters":[{"name":"ruleId","description":"Unique identifier (UUID) of the CDS rule to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete CDS rule details matching the specified UUID, including configuration and status.","typeName":"IHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/decisionSupportRules/{ruleId}","method":"get"},{"specification":"This operation fetches detailed information about a specific clinical decision support rule, identified by its unique rule ID. It targets the 'healthcare_platform_decision_support_rules' table and returns comprehensive metadata, rule logic, organizational context, activation status, trigger event, and associated relationships (e.g., linked clinical alerts). The operation is designed for administrators, analytics staff, and compliance reviewers requiring visibility into the configuration and logic of CDS rules for patient safety, audit, or configuration management. The endpoint supports review, validation, workflow troubleshooting, and audit documentation functions in production healthcare environments.","description":"Retrieve all details for a specific clinical decision support rule from 'healthcare_platform_decision_support_rules' by rule ID. This endpoint is essential for administrative, analytics, or compliance roles to view rule metadata, logic (expression_json), trigger event, lifecycle metadata, enabled status, and audit history.\n\nAuthorization checks ensure that only users with appropriate administrative or analytic privileges and proper organization/department scoping can access this rule detail. The rule ID must be a valid UUID; errors are returned for invalid IDs or lack of permissions.\n\nExpected behaviors include full rule details in a compliance-ready structure, error and not-found handling, and compatibility with audit and workflow configuration tools. This is used in conjunction with the rule search/list endpoint to permit full lifecycle management of CDS rule entities in the production system.","summary":"Fetch complete details for a specific CDS rule by rule ID in the platform.","parameters":[{"name":"ruleId","description":"Unique identifier (UUID) of the CDS rule to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete CDS rule details matching the specified UUID, including configuration and status.","typeName":"IHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/decisionSupportRules/{ruleId}","method":"get"},{"specification":"This operation creates a new clinical decision support rule within the platform, adding a new row to the 'healthcare_platform_decision_support_rules' table. The input includes all metadata required to define a new CDS rule: organization linkage, code, title, rule logic (expression_json), trigger event, and status (enabled/disabled). Upon validation, the rule is persisted and made available for integration into relevant analytics/clinical workflows. Role-based access ensures only authorized platform or org admins can perform this operation. The response includes the full CDS rule definition as created, providing traceability for audit and system configuration. This is foundational for expanding and updating evidence-based care and clinical guidance programs.","description":"Create a new clinical decision support (CDS) rule by submitting all required configuration and business fields to the 'healthcare_platform_decision_support_rules' table. Request requires valid authentication and privileged roles such as systemAdmin or organizationAdmin, with scope to authorized organizations.\n\nRequest body includes organization linkage, rule_code, title, trigger event, rule logic (expression_json), optional description, and enablement status. All submitted data must meet platform and compliance validation (unique code, acceptable rule syntax, organization binding). The response returns the created and persisted rule including all metadata and system-generated fields (timestamps, ID).\n\nSecurity ensures only properly scoped admins or configuration managers can introduce new rules. Errors are returned on validation failures (e.g., duplicate codes, missing logic, syntax errors). This operation supports internal organizational program growth, patient safety, and compliance documentation needs.","summary":"Create a new clinical decision support rule (CDS) in the platform.","parameters":[],"requestBody":{"description":"Complete definition required to create a new CDS rule, including logic, triggers, and scope.","typeName":"IHealthcarePlatformDecisionSupportRule.ICreate"},"responseBody":{"description":"The newly created CDS rule, with metadata, IDs, and system fields.","typeName":"IHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/decisionSupportRules","method":"post"},{"specification":"This operation creates a new clinical decision support rule within the platform, adding a new row to the 'healthcare_platform_decision_support_rules' table. The input includes all metadata required to define a new CDS rule: organization linkage, code, title, rule logic (expression_json), trigger event, and status (enabled/disabled). Upon validation, the rule is persisted and made available for integration into relevant analytics/clinical workflows. Role-based access ensures only authorized platform or org admins can perform this operation. The response includes the full CDS rule definition as created, providing traceability for audit and system configuration. This is foundational for expanding and updating evidence-based care and clinical guidance programs.","description":"Create a new clinical decision support (CDS) rule by submitting all required configuration and business fields to the 'healthcare_platform_decision_support_rules' table. Request requires valid authentication and privileged roles such as systemAdmin or organizationAdmin, with scope to authorized organizations.\n\nRequest body includes organization linkage, rule_code, title, trigger event, rule logic (expression_json), optional description, and enablement status. All submitted data must meet platform and compliance validation (unique code, acceptable rule syntax, organization binding). The response returns the created and persisted rule including all metadata and system-generated fields (timestamps, ID).\n\nSecurity ensures only properly scoped admins or configuration managers can introduce new rules. Errors are returned on validation failures (e.g., duplicate codes, missing logic, syntax errors). This operation supports internal organizational program growth, patient safety, and compliance documentation needs.","summary":"Create a new clinical decision support rule (CDS) in the platform.","parameters":[],"requestBody":{"description":"Complete definition required to create a new CDS rule, including logic, triggers, and scope.","typeName":"IHealthcarePlatformDecisionSupportRule.ICreate"},"responseBody":{"description":"The newly created CDS rule, with metadata, IDs, and system fields.","typeName":"IHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/decisionSupportRules","method":"post"},{"specification":"This operation updates an existing clinical decision support rule in the platform, identified by its unique rule ID. It performs a partial or full update on the 'healthcare_platform_decision_support_rules' table, allowing modification of metadata, rule logic, trigger events, enablement status, description, or organizational linkage. Role-based access restrictions are strictly enforced to ensure only authorized system or org admins can execute changes. On success, the response returns the complete, updated rule definition. The operation supports auditable configuration management and ongoing improvement of CDS programs across tenant organizations.","description":"Update a clinical decision support rule in 'healthcare_platform_decision_support_rules' by rule ID, modifying fields such as title, trigger event, rule logic (expression_json), description, activation status, or organizational linkage. Path parameter ruleId must be a valid UUID and reference an existing rule; request body supplies new or changed attributes.\n\nOperation is limited to users with administrative privileges and organizational or system scope according to the RBAC matrix. Full validation is enforced on all changes (e.g., business logic, code uniqueness if modified, expression syntax/structure). The response returns the complete, updated rule object including system metadata (updated_at).\n\nBehavior includes detailed error messages for not found, permission denied, or validation failures. Audit logging is enforced for compliance and system configuration lifecycle tracking. Typically used to maintain up-to-date clinical policies and respond to advances in clinical practice or compliance requirements.","summary":"Update an existing clinical decision support rule (CDS) by rule ID.","parameters":[{"name":"ruleId","description":"Unique identifier (UUID) of the CDS rule to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update an existing CDS rule (any modifiable attribute).","typeName":"IHealthcarePlatformDecisionSupportRule.IUpdate"},"responseBody":{"description":"The updated CDS rule definition with all metadata and system fields.","typeName":"IHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/decisionSupportRules/{ruleId}","method":"put"},{"specification":"This operation updates an existing clinical decision support rule in the platform, identified by its unique rule ID. It performs a partial or full update on the 'healthcare_platform_decision_support_rules' table, allowing modification of metadata, rule logic, trigger events, enablement status, description, or organizational linkage. Role-based access restrictions are strictly enforced to ensure only authorized system or org admins can execute changes. On success, the response returns the complete, updated rule definition. The operation supports auditable configuration management and ongoing improvement of CDS programs across tenant organizations.","description":"Update a clinical decision support rule in 'healthcare_platform_decision_support_rules' by rule ID, modifying fields such as title, trigger event, rule logic (expression_json), description, activation status, or organizational linkage. Path parameter ruleId must be a valid UUID and reference an existing rule; request body supplies new or changed attributes.\n\nOperation is limited to users with administrative privileges and organizational or system scope according to the RBAC matrix. Full validation is enforced on all changes (e.g., business logic, code uniqueness if modified, expression syntax/structure). The response returns the complete, updated rule object including system metadata (updated_at).\n\nBehavior includes detailed error messages for not found, permission denied, or validation failures. Audit logging is enforced for compliance and system configuration lifecycle tracking. Typically used to maintain up-to-date clinical policies and respond to advances in clinical practice or compliance requirements.","summary":"Update an existing clinical decision support rule (CDS) by rule ID.","parameters":[{"name":"ruleId","description":"Unique identifier (UUID) of the CDS rule to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields required to update an existing CDS rule (any modifiable attribute).","typeName":"IHealthcarePlatformDecisionSupportRule.IUpdate"},"responseBody":{"description":"The updated CDS rule definition with all metadata and system fields.","typeName":"IHealthcarePlatformDecisionSupportRule"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/decisionSupportRules/{ruleId}","method":"put"},{"specification":"This operation performs a hard delete (permanent removal) of a decision support rule record from the healthcare platform database, identified by the ruleId path parameter. It targets the healthcare_platform_decision_support_rules table, which stores clinical decision support logic (such as drug interaction checks, clinical best practice alerts, or compliance rules) configured for a healthcare organization. The deletion is irreversible and should only be available to system administrators or organization administrators with explicit privileges, as deleting a rule will immediately cease its execution by the clinical decision support engine system-wide. Related downstream data, such as clinical alert records generated by the rule, are not impacted by this operation, but audit logs for compliance and traceability are always created when a rule is deleted. Error handling includes validation of ruleId (UUID format), existence checks, and permission checks.","description":"Delete a specific clinical decision support (CDS) rule from the system by ruleId. This operation functions as a hard delete, permanently removing the CDS rule from the healthcare_platform_decision_support_rules table. The rule may represent business logic that triggers patient safety alerts (e.g., drug interactions, lab notifications), and its removal should be performed with extreme caution and proper authorization. \n\nAccess to this endpoint must be restricted to system administrators or organization administrators to ensure regulatory compliance and prevent unintended service disruptions. When a rule is deleted, all future CDS processing related to this rule will cease, and dashboards or analytics referencing it may be affected. Downstream data, such as previously generated clinical alerts, remains available for compliance audits. Comprehensive audit logs are recorded for every deletion, preserving action time, actor identity, justification, and affected rule details.\n\nValidation includes confirming existence of the specified ruleId, ensuring the user has legitimate access, and capturing attempts to delete non-existent or already-deleted rules. Any errors (invalid ID, permissions, system failures) are reported with appropriate messages and audit notes.","summary":"Permanently delete a clinical decision support rule by ruleId from the healthcare_platform_decision_support_rules table.","parameters":[{"name":"ruleId","description":"Unique identifier (UUID) of the decision support rule to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/decisionSupportRules/{ruleId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation performs a hard delete (permanent removal) of a decision support rule record from the healthcare platform database, identified by the ruleId path parameter. It targets the healthcare_platform_decision_support_rules table, which stores clinical decision support logic (such as drug interaction checks, clinical best practice alerts, or compliance rules) configured for a healthcare organization. The deletion is irreversible and should only be available to system administrators or organization administrators with explicit privileges, as deleting a rule will immediately cease its execution by the clinical decision support engine system-wide. Related downstream data, such as clinical alert records generated by the rule, are not impacted by this operation, but audit logs for compliance and traceability are always created when a rule is deleted. Error handling includes validation of ruleId (UUID format), existence checks, and permission checks.","description":"Delete a specific clinical decision support (CDS) rule from the system by ruleId. This operation functions as a hard delete, permanently removing the CDS rule from the healthcare_platform_decision_support_rules table. The rule may represent business logic that triggers patient safety alerts (e.g., drug interactions, lab notifications), and its removal should be performed with extreme caution and proper authorization. \n\nAccess to this endpoint must be restricted to system administrators or organization administrators to ensure regulatory compliance and prevent unintended service disruptions. When a rule is deleted, all future CDS processing related to this rule will cease, and dashboards or analytics referencing it may be affected. Downstream data, such as previously generated clinical alerts, remains available for compliance audits. Comprehensive audit logs are recorded for every deletion, preserving action time, actor identity, justification, and affected rule details.\n\nValidation includes confirming existence of the specified ruleId, ensuring the user has legitimate access, and capturing attempts to delete non-existent or already-deleted rules. Any errors (invalid ID, permissions, system failures) are reported with appropriate messages and audit notes.","summary":"Permanently delete a clinical decision support rule by ruleId from the healthcare_platform_decision_support_rules table.","parameters":[{"name":"ruleId","description":"Unique identifier (UUID) of the decision support rule to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/decisionSupportRules/{ruleId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation enables complex search and filtering of clinical alert (CDS alert) records, returning a paginated list based on request criteria. It operates on the healthcare_platform_clinical_alerts table, which tracks alerts created by the CDS engine in response to decision support rules triggered by clinical events. The search supports filtering by status, organization, department, CDS rule, alert type, recipient, time window, and other properties. Designed for system admins, org admins, department heads, and authorized staff to monitor safety events, escalations, and workflow outcomes.","description":"Search and retrieve a paginated list of clinical alert records that have been generated by the healthcare platform's decision support engine. This endpoint accesses the healthcare_platform_clinical_alerts table and provides advanced query capabilities for filtering by alert status (new, viewed, acknowledged, resolved), organization, department, CDS rule ID, user assignment, date/time ranges, and alert type (warning, info, critical, recommendation).\n\nThe operation supports business logic for role-based visibility, with system admins able to search all alerts, organization admins limited to their organization, and department heads or assigned users able to see alerts scoped to their departments or individuals. The response includes alert details, status, subjects, timestamps, and escalation status. Pagination and sorting options allow efficient access to high-volume alert data. Comprehensive audit trails exist for alert access and search to support HIPAA compliance and incident investigations.\n\nValidation ensures the requester has necessary permissions, criteria are well-typed, and search results are filtered per data isolation rules. Error handling covers malformed queries, excessive result sets, and authorization failures.","summary":"Search and paginate clinical alerts generated by the CDS engine in the healthcare_platform_clinical_alerts table.","parameters":[],"requestBody":{"description":"Search and pagination parameters for querying clinical alerts including filter criteria by status, organization, department, CDS rule, type, user, and date/time ranges.","typeName":"IHealthcarePlatformClinicalAlert.IRequest"},"responseBody":{"description":"Paginated and filtered results of clinical alert records matching search criteria.","typeName":"IPageIHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/systemAdmin/clinicalAlerts","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation enables complex search and filtering of clinical alert (CDS alert) records, returning a paginated list based on request criteria. It operates on the healthcare_platform_clinical_alerts table, which tracks alerts created by the CDS engine in response to decision support rules triggered by clinical events. The search supports filtering by status, organization, department, CDS rule, alert type, recipient, time window, and other properties. Designed for system admins, org admins, department heads, and authorized staff to monitor safety events, escalations, and workflow outcomes.","description":"Search and retrieve a paginated list of clinical alert records that have been generated by the healthcare platform's decision support engine. This endpoint accesses the healthcare_platform_clinical_alerts table and provides advanced query capabilities for filtering by alert status (new, viewed, acknowledged, resolved), organization, department, CDS rule ID, user assignment, date/time ranges, and alert type (warning, info, critical, recommendation).\n\nThe operation supports business logic for role-based visibility, with system admins able to search all alerts, organization admins limited to their organization, and department heads or assigned users able to see alerts scoped to their departments or individuals. The response includes alert details, status, subjects, timestamps, and escalation status. Pagination and sorting options allow efficient access to high-volume alert data. Comprehensive audit trails exist for alert access and search to support HIPAA compliance and incident investigations.\n\nValidation ensures the requester has necessary permissions, criteria are well-typed, and search results are filtered per data isolation rules. Error handling covers malformed queries, excessive result sets, and authorization failures.","summary":"Search and paginate clinical alerts generated by the CDS engine in the healthcare_platform_clinical_alerts table.","parameters":[],"requestBody":{"description":"Search and pagination parameters for querying clinical alerts including filter criteria by status, organization, department, CDS rule, type, user, and date/time ranges.","typeName":"IHealthcarePlatformClinicalAlert.IRequest"},"responseBody":{"description":"Paginated and filtered results of clinical alert records matching search criteria.","typeName":"IPageIHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/organizationAdmin/clinicalAlerts","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation enables complex search and filtering of clinical alert (CDS alert) records, returning a paginated list based on request criteria. It operates on the healthcare_platform_clinical_alerts table, which tracks alerts created by the CDS engine in response to decision support rules triggered by clinical events. The search supports filtering by status, organization, department, CDS rule, alert type, recipient, time window, and other properties. Designed for system admins, org admins, department heads, and authorized staff to monitor safety events, escalations, and workflow outcomes.","description":"Search and retrieve a paginated list of clinical alert records that have been generated by the healthcare platform's decision support engine. This endpoint accesses the healthcare_platform_clinical_alerts table and provides advanced query capabilities for filtering by alert status (new, viewed, acknowledged, resolved), organization, department, CDS rule ID, user assignment, date/time ranges, and alert type (warning, info, critical, recommendation).\n\nThe operation supports business logic for role-based visibility, with system admins able to search all alerts, organization admins limited to their organization, and department heads or assigned users able to see alerts scoped to their departments or individuals. The response includes alert details, status, subjects, timestamps, and escalation status. Pagination and sorting options allow efficient access to high-volume alert data. Comprehensive audit trails exist for alert access and search to support HIPAA compliance and incident investigations.\n\nValidation ensures the requester has necessary permissions, criteria are well-typed, and search results are filtered per data isolation rules. Error handling covers malformed queries, excessive result sets, and authorization failures.","summary":"Search and paginate clinical alerts generated by the CDS engine in the healthcare_platform_clinical_alerts table.","parameters":[],"requestBody":{"description":"Search and pagination parameters for querying clinical alerts including filter criteria by status, organization, department, CDS rule, type, user, and date/time ranges.","typeName":"IHealthcarePlatformClinicalAlert.IRequest"},"responseBody":{"description":"Paginated and filtered results of clinical alert records matching search criteria.","typeName":"IPageIHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/departmentHead/clinicalAlerts","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves the full details of a clinical alert record, identified by alertId. It operates on the healthcare_platform_clinical_alerts table, which holds critical CDS notifications, including alert subject, type, responsible user or department, creation and resolution timestamps, and escalation status. Retrieval is role-restricted: system admins may access all alerts, org admins and department heads can access alerts within their scope, and affected users can access their assigned alerts. Supports compliance, incident review, and workflow inspection.","description":"Get detailed information about a specific clinical alert record by its unique alertId. The endpoint provides full data from the healthcare_platform_clinical_alerts table, including summary, detail, status, triggering rule, organization, department, assigned/responsible users, acknowledgment and resolution timestamps, escalation status, and audit-relevant metadata.\n\nPermissions are strictly enforced: system admins can retrieve any alert, organization admins are limited to their own org, and department heads or assigned users only see alerts within their department or relevant assignment context. Access to this endpoint is audited for compliance (e.g., HIPAA, SOC 2). The operation validates the alertId, confirms requester authorization, and returns detailed status or error messages for not found or unauthorized access cases. Related business logic for incident post-mortem, compliance, and workflow tracking is supported by this operation.\n\nIf the alert has been resolved or escalated, additional status and action context is returned to assist investigation and compliance review. Errors are appropriately messaged and logged for audit purposes.","summary":"Retrieve detailed information about a clinical alert by alertId from the healthcare_platform_clinical_alerts table.","parameters":[{"name":"alertId","description":"Unique identifier (UUID) of the clinical alert record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified clinical alert.","typeName":"IHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"at","path":"/healthcarePlatform/systemAdmin/clinicalAlerts/{alertId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the full details of a clinical alert record, identified by alertId. It operates on the healthcare_platform_clinical_alerts table, which holds critical CDS notifications, including alert subject, type, responsible user or department, creation and resolution timestamps, and escalation status. Retrieval is role-restricted: system admins may access all alerts, org admins and department heads can access alerts within their scope, and affected users can access their assigned alerts. Supports compliance, incident review, and workflow inspection.","description":"Get detailed information about a specific clinical alert record by its unique alertId. The endpoint provides full data from the healthcare_platform_clinical_alerts table, including summary, detail, status, triggering rule, organization, department, assigned/responsible users, acknowledgment and resolution timestamps, escalation status, and audit-relevant metadata.\n\nPermissions are strictly enforced: system admins can retrieve any alert, organization admins are limited to their own org, and department heads or assigned users only see alerts within their department or relevant assignment context. Access to this endpoint is audited for compliance (e.g., HIPAA, SOC 2). The operation validates the alertId, confirms requester authorization, and returns detailed status or error messages for not found or unauthorized access cases. Related business logic for incident post-mortem, compliance, and workflow tracking is supported by this operation.\n\nIf the alert has been resolved or escalated, additional status and action context is returned to assist investigation and compliance review. Errors are appropriately messaged and logged for audit purposes.","summary":"Retrieve detailed information about a clinical alert by alertId from the healthcare_platform_clinical_alerts table.","parameters":[{"name":"alertId","description":"Unique identifier (UUID) of the clinical alert record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified clinical alert.","typeName":"IHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"at","path":"/healthcarePlatform/organizationAdmin/clinicalAlerts/{alertId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the full details of a clinical alert record, identified by alertId. It operates on the healthcare_platform_clinical_alerts table, which holds critical CDS notifications, including alert subject, type, responsible user or department, creation and resolution timestamps, and escalation status. Retrieval is role-restricted: system admins may access all alerts, org admins and department heads can access alerts within their scope, and affected users can access their assigned alerts. Supports compliance, incident review, and workflow inspection.","description":"Get detailed information about a specific clinical alert record by its unique alertId. The endpoint provides full data from the healthcare_platform_clinical_alerts table, including summary, detail, status, triggering rule, organization, department, assigned/responsible users, acknowledgment and resolution timestamps, escalation status, and audit-relevant metadata.\n\nPermissions are strictly enforced: system admins can retrieve any alert, organization admins are limited to their own org, and department heads or assigned users only see alerts within their department or relevant assignment context. Access to this endpoint is audited for compliance (e.g., HIPAA, SOC 2). The operation validates the alertId, confirms requester authorization, and returns detailed status or error messages for not found or unauthorized access cases. Related business logic for incident post-mortem, compliance, and workflow tracking is supported by this operation.\n\nIf the alert has been resolved or escalated, additional status and action context is returned to assist investigation and compliance review. Errors are appropriately messaged and logged for audit purposes.","summary":"Retrieve detailed information about a clinical alert by alertId from the healthcare_platform_clinical_alerts table.","parameters":[{"name":"alertId","description":"Unique identifier (UUID) of the clinical alert record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified clinical alert.","typeName":"IHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"at","path":"/healthcarePlatform/departmentHead/clinicalAlerts/{alertId}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation updates the status and detail fields of a clinical alert in the system, using the alertId to identify the target. It works on the healthcare_platform_clinical_alerts table, allowing authorized users (system admin, org admin, department head) to mark an alert as acknowledged, resolved, escalated, or update related detail/comment fields for compliance workflows. Only permitted fields (status, detail, acknowledgment, resolution) may be changed; other properties are immutable. Changing alert status triggers workflow updates, compliance audits, and may affect downstream integrations. Operation is fully audited for compliance, including actor, field changes, and timestamps.","description":"Update a clinical alert's workflow status, detail text, or escalation/acknowledgement info by alertId. This endpoint applies to records in the healthcare_platform_clinical_alerts table. Only authorized staff (system admin, organization admin, or department head) may update these fields, and field-level validation is enforced. Fields that may be updated include status (to values such as 'acknowledged', 'resolved', 'escalated'), detail/comments, and timestamps for acknowledgment or resolution.\n\nUpon status update, the system records a compliance audit event and may trigger further workflow changes, such as escalation to a responsible party or closing an alert. Immutable fields like alert creation timestamp or originating rule are not editable. The operation validates the alertId, request body properties, and user permissions, and provides clear messaging on error or invalid update attempts. Downstream systems consuming alert state (e.g., dashboards) are expected to refresh based on status change.\n\nAll update attempts (successful or not) are logged for full auditability and compliance reporting.","summary":"Update the status or detail of a clinical alert by alertId in the healthcare_platform_clinical_alerts table.","parameters":[{"name":"alertId","description":"Unique identifier (UUID) of the clinical alert to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating clinical alert status or detail (status, acknowledgment, resolution, or comments).","typeName":"IHealthcarePlatformClinicalAlert.IUpdate"},"responseBody":{"description":"Updated clinical alert record with new status or detail fields.","typeName":"IHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"update","path":"/healthcarePlatform/systemAdmin/clinicalAlerts/{alertId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates the status and detail fields of a clinical alert in the system, using the alertId to identify the target. It works on the healthcare_platform_clinical_alerts table, allowing authorized users (system admin, org admin, department head) to mark an alert as acknowledged, resolved, escalated, or update related detail/comment fields for compliance workflows. Only permitted fields (status, detail, acknowledgment, resolution) may be changed; other properties are immutable. Changing alert status triggers workflow updates, compliance audits, and may affect downstream integrations. Operation is fully audited for compliance, including actor, field changes, and timestamps.","description":"Update a clinical alert's workflow status, detail text, or escalation/acknowledgement info by alertId. This endpoint applies to records in the healthcare_platform_clinical_alerts table. Only authorized staff (system admin, organization admin, or department head) may update these fields, and field-level validation is enforced. Fields that may be updated include status (to values such as 'acknowledged', 'resolved', 'escalated'), detail/comments, and timestamps for acknowledgment or resolution.\n\nUpon status update, the system records a compliance audit event and may trigger further workflow changes, such as escalation to a responsible party or closing an alert. Immutable fields like alert creation timestamp or originating rule are not editable. The operation validates the alertId, request body properties, and user permissions, and provides clear messaging on error or invalid update attempts. Downstream systems consuming alert state (e.g., dashboards) are expected to refresh based on status change.\n\nAll update attempts (successful or not) are logged for full auditability and compliance reporting.","summary":"Update the status or detail of a clinical alert by alertId in the healthcare_platform_clinical_alerts table.","parameters":[{"name":"alertId","description":"Unique identifier (UUID) of the clinical alert to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating clinical alert status or detail (status, acknowledgment, resolution, or comments).","typeName":"IHealthcarePlatformClinicalAlert.IUpdate"},"responseBody":{"description":"Updated clinical alert record with new status or detail fields.","typeName":"IHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"update","path":"/healthcarePlatform/organizationAdmin/clinicalAlerts/{alertId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates the status and detail fields of a clinical alert in the system, using the alertId to identify the target. It works on the healthcare_platform_clinical_alerts table, allowing authorized users (system admin, org admin, department head) to mark an alert as acknowledged, resolved, escalated, or update related detail/comment fields for compliance workflows. Only permitted fields (status, detail, acknowledgment, resolution) may be changed; other properties are immutable. Changing alert status triggers workflow updates, compliance audits, and may affect downstream integrations. Operation is fully audited for compliance, including actor, field changes, and timestamps.","description":"Update a clinical alert's workflow status, detail text, or escalation/acknowledgement info by alertId. This endpoint applies to records in the healthcare_platform_clinical_alerts table. Only authorized staff (system admin, organization admin, or department head) may update these fields, and field-level validation is enforced. Fields that may be updated include status (to values such as 'acknowledged', 'resolved', 'escalated'), detail/comments, and timestamps for acknowledgment or resolution.\n\nUpon status update, the system records a compliance audit event and may trigger further workflow changes, such as escalation to a responsible party or closing an alert. Immutable fields like alert creation timestamp or originating rule are not editable. The operation validates the alertId, request body properties, and user permissions, and provides clear messaging on error or invalid update attempts. Downstream systems consuming alert state (e.g., dashboards) are expected to refresh based on status change.\n\nAll update attempts (successful or not) are logged for full auditability and compliance reporting.","summary":"Update the status or detail of a clinical alert by alertId in the healthcare_platform_clinical_alerts table.","parameters":[{"name":"alertId","description":"Unique identifier (UUID) of the clinical alert to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating clinical alert status or detail (status, acknowledgment, resolution, or comments).","typeName":"IHealthcarePlatformClinicalAlert.IUpdate"},"responseBody":{"description":"Updated clinical alert record with new status or detail fields.","typeName":"IHealthcarePlatformClinicalAlert"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"update","path":"/healthcarePlatform/departmentHead/clinicalAlerts/{alertId}","method":"put","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation performs a permanent deletion (hard delete) of a clinical decision support alert record identified by the alertId in the healthcarePlatform system. Clinical alerts are generated by the clinical decision support engine and may include medication safety warnings, abnormal lab result notifications, or compliance reminders. Deleting a clinical alert removes it from active alert dashboards and prevents further acknowledgment or auditing by users. The operation directly operates on the healthcare_platform_clinical_alerts table, which tracks all generated CDS alerts, including their status, type, associated rules, users, and auditability for regulatory reporting.\n\nThis endpoint should be restricted to roles with elevated administrative or compliance authority due to the clinical and regulatory impact of removing audit trail entries. All deletions are hard deletes as no soft-delete column is present in the clinical alerts table. Audit logs should be created for each deletion event, capturing actor identity and rationale as per compliance policy. This operation requires the unique alertId parameter, which must correspond to an existing alert record.\n\nAppropriate error handling should be in place for missing or invalid alertId, unauthorized access, and attempts to delete already-removed or non-existent alerts. This operation is intended only for authorized administrative users managing clinical alert data lifecycle and regulatory retention.","description":"Delete a clinical decision support alert record from the system using its unique alertId. This operation is typically performed to remove invalid, resolved, or expired CDS alerts from regulatory and audit dashboards after appropriate review. All alert details, including escalation status, acknowledgement timestamps, and associated notification records, will be permanently lost from the database. Regulatory or business policy requires that deleted alerts be clearly referenced in deletion logs and may trigger notification to compliance reviewers depending on system settings.\n\nRole-based access control is enforced: only system administrators, compliance officers, or designated organizational administrators can execute this operation. Deletion is permanent, so any recoverability or restoration must be handled at the infrastructure level, not via API. If the alertId does not exist or has already been removed, an error response should be returned with clear messaging for audit and troubleshooting. This endpoint does not support soft deletion, mark-as-archived, or recovery functions.\n\nTo ensure full compliance, invoking this operation should update the healthcare_platform_audit_logs and relevant link tables as described by the schema. Coordination with active dashboards and alert consumers is strongly recommended before performing mass or programmatic deletions.","summary":"Permanently delete a clinical decision support alert by alertId from healthcare_platform_clinical_alerts (hard delete).","parameters":[{"name":"alertId","description":"Unique identifier of the clinical alert to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/clinicalAlerts/{alertId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation performs a permanent deletion (hard delete) of a clinical decision support alert record identified by the alertId in the healthcarePlatform system. Clinical alerts are generated by the clinical decision support engine and may include medication safety warnings, abnormal lab result notifications, or compliance reminders. Deleting a clinical alert removes it from active alert dashboards and prevents further acknowledgment or auditing by users. The operation directly operates on the healthcare_platform_clinical_alerts table, which tracks all generated CDS alerts, including their status, type, associated rules, users, and auditability for regulatory reporting.\n\nThis endpoint should be restricted to roles with elevated administrative or compliance authority due to the clinical and regulatory impact of removing audit trail entries. All deletions are hard deletes as no soft-delete column is present in the clinical alerts table. Audit logs should be created for each deletion event, capturing actor identity and rationale as per compliance policy. This operation requires the unique alertId parameter, which must correspond to an existing alert record.\n\nAppropriate error handling should be in place for missing or invalid alertId, unauthorized access, and attempts to delete already-removed or non-existent alerts. This operation is intended only for authorized administrative users managing clinical alert data lifecycle and regulatory retention.","description":"Delete a clinical decision support alert record from the system using its unique alertId. This operation is typically performed to remove invalid, resolved, or expired CDS alerts from regulatory and audit dashboards after appropriate review. All alert details, including escalation status, acknowledgement timestamps, and associated notification records, will be permanently lost from the database. Regulatory or business policy requires that deleted alerts be clearly referenced in deletion logs and may trigger notification to compliance reviewers depending on system settings.\n\nRole-based access control is enforced: only system administrators, compliance officers, or designated organizational administrators can execute this operation. Deletion is permanent, so any recoverability or restoration must be handled at the infrastructure level, not via API. If the alertId does not exist or has already been removed, an error response should be returned with clear messaging for audit and troubleshooting. This endpoint does not support soft deletion, mark-as-archived, or recovery functions.\n\nTo ensure full compliance, invoking this operation should update the healthcare_platform_audit_logs and relevant link tables as described by the schema. Coordination with active dashboards and alert consumers is strongly recommended before performing mass or programmatic deletions.","summary":"Permanently delete a clinical decision support alert by alertId from healthcare_platform_clinical_alerts (hard delete).","parameters":[{"name":"alertId","description":"Unique identifier of the clinical alert to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/clinicalAlerts/{alertId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of organization or department outcome metrics, supporting advanced search, filtering, and analytics dashboard needs. It operates on the healthcare_platform_outcome_metrics table, which records organization/department-level outcome variables (e.g., readmission rate, infection rate, chronic disease prevalence) and their associated cohorts and timestamps for quality improvement and benchmarking purposes.\n\nThe operation allows searching by metric name, cohort, date/time windows, value ranges, department, and organization context. It supports sorting by observed_at, metric name, or value for analytics needs. Integration with organization/department RBAC is enforced, exposing only outcome data visible to the current user's scope.\n\nThis PATCH-based search pattern handles complex request data for search parameters, aggregation, and batch queries used in analytics dashboards across systemAdmin, organizationAdmin, and departmentHead roles. Pagination parameters (limit, offset, sort) must be respected for large datasets. Response returns summary or detailed outcome metric models as requested.","description":"Retrieve a paginated and filtered list of outcome metrics defined in the healthcare_platform_outcome_metrics table. This endpoint is foundational for analytics dashboards, organizational performance reviews, and compliance trend analysis. The incoming request supports complex filters, such as organizationId, departmentId, metricName (supports partial/text search), observed_at date range, value threshold filtering, and cohort-based inclusion/exclusion (using cohortDefinition fields). Sorting can be performed on metricName, observed_at, and observedValue.\n\nRole-based data access is strictly enforced according to user role, limiting the scope of returned metrics as appropriate (e.g., departmentHead sees only department metrics; organizationAdmin sees all their organization's metrics; systemAdmin sees all). All read access is logged for audit.\n\nPagination and performance must accommodate trends analysis over long time windows. Error handling should address invalid filter criteria, permission violations, or inconsistent search parameters. This operation directly supports quality improvement, regulatory reporting, and benchmarking.","summary":"Search and retrieve a filtered, paginated list of outcome metrics for analytics using healthcare_platform_outcome_metrics.","parameters":[],"requestBody":{"description":"Search/filter and pagination parameters for finding outcome metrics.","typeName":"IHealthcarePlatformOutcomeMetric.IRequest"},"responseBody":{"description":"Paginated list of summary outcome metric records matching filter criteria and user access scope.","typeName":"IPageIHealthcarePlatformOutcomeMetric.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/systemAdmin/outcomeMetrics","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of organization or department outcome metrics, supporting advanced search, filtering, and analytics dashboard needs. It operates on the healthcare_platform_outcome_metrics table, which records organization/department-level outcome variables (e.g., readmission rate, infection rate, chronic disease prevalence) and their associated cohorts and timestamps for quality improvement and benchmarking purposes.\n\nThe operation allows searching by metric name, cohort, date/time windows, value ranges, department, and organization context. It supports sorting by observed_at, metric name, or value for analytics needs. Integration with organization/department RBAC is enforced, exposing only outcome data visible to the current user's scope.\n\nThis PATCH-based search pattern handles complex request data for search parameters, aggregation, and batch queries used in analytics dashboards across systemAdmin, organizationAdmin, and departmentHead roles. Pagination parameters (limit, offset, sort) must be respected for large datasets. Response returns summary or detailed outcome metric models as requested.","description":"Retrieve a paginated and filtered list of outcome metrics defined in the healthcare_platform_outcome_metrics table. This endpoint is foundational for analytics dashboards, organizational performance reviews, and compliance trend analysis. The incoming request supports complex filters, such as organizationId, departmentId, metricName (supports partial/text search), observed_at date range, value threshold filtering, and cohort-based inclusion/exclusion (using cohortDefinition fields). Sorting can be performed on metricName, observed_at, and observedValue.\n\nRole-based data access is strictly enforced according to user role, limiting the scope of returned metrics as appropriate (e.g., departmentHead sees only department metrics; organizationAdmin sees all their organization's metrics; systemAdmin sees all). All read access is logged for audit.\n\nPagination and performance must accommodate trends analysis over long time windows. Error handling should address invalid filter criteria, permission violations, or inconsistent search parameters. This operation directly supports quality improvement, regulatory reporting, and benchmarking.","summary":"Search and retrieve a filtered, paginated list of outcome metrics for analytics using healthcare_platform_outcome_metrics.","parameters":[],"requestBody":{"description":"Search/filter and pagination parameters for finding outcome metrics.","typeName":"IHealthcarePlatformOutcomeMetric.IRequest"},"responseBody":{"description":"Paginated list of summary outcome metric records matching filter criteria and user access scope.","typeName":"IPageIHealthcarePlatformOutcomeMetric.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/organizationAdmin/outcomeMetrics","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of organization or department outcome metrics, supporting advanced search, filtering, and analytics dashboard needs. It operates on the healthcare_platform_outcome_metrics table, which records organization/department-level outcome variables (e.g., readmission rate, infection rate, chronic disease prevalence) and their associated cohorts and timestamps for quality improvement and benchmarking purposes.\n\nThe operation allows searching by metric name, cohort, date/time windows, value ranges, department, and organization context. It supports sorting by observed_at, metric name, or value for analytics needs. Integration with organization/department RBAC is enforced, exposing only outcome data visible to the current user's scope.\n\nThis PATCH-based search pattern handles complex request data for search parameters, aggregation, and batch queries used in analytics dashboards across systemAdmin, organizationAdmin, and departmentHead roles. Pagination parameters (limit, offset, sort) must be respected for large datasets. Response returns summary or detailed outcome metric models as requested.","description":"Retrieve a paginated and filtered list of outcome metrics defined in the healthcare_platform_outcome_metrics table. This endpoint is foundational for analytics dashboards, organizational performance reviews, and compliance trend analysis. The incoming request supports complex filters, such as organizationId, departmentId, metricName (supports partial/text search), observed_at date range, value threshold filtering, and cohort-based inclusion/exclusion (using cohortDefinition fields). Sorting can be performed on metricName, observed_at, and observedValue.\n\nRole-based data access is strictly enforced according to user role, limiting the scope of returned metrics as appropriate (e.g., departmentHead sees only department metrics; organizationAdmin sees all their organization's metrics; systemAdmin sees all). All read access is logged for audit.\n\nPagination and performance must accommodate trends analysis over long time windows. Error handling should address invalid filter criteria, permission violations, or inconsistent search parameters. This operation directly supports quality improvement, regulatory reporting, and benchmarking.","summary":"Search and retrieve a filtered, paginated list of outcome metrics for analytics using healthcare_platform_outcome_metrics.","parameters":[],"requestBody":{"description":"Search/filter and pagination parameters for finding outcome metrics.","typeName":"IHealthcarePlatformOutcomeMetric.IRequest"},"responseBody":{"description":"Paginated list of summary outcome metric records matching filter criteria and user access scope.","typeName":"IPageIHealthcarePlatformOutcomeMetric.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/departmentHead/outcomeMetrics","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves a single detailed outcome metric record by metricId from the healthcare_platform_outcome_metrics table. Outcome metrics model the calculated results of organizational or departmental performance variables such as clinical outcomes, operational efficiency, or compliance indicators, timestamped for time-series analysis and benchmarking. Result includes all cohort, value, and descriptive metadata related to the metric as required by analytics, quality improvement, and reporting workflows.\n\nOnly users whose RBAC role (systemAdmin, organizationAdmin, departmentHead) covers the organization or department associated with the outcome metric may use this endpoint. Accesses are logged for security and compliance monitoring. Error handling is provided for missing, deleted, or unauthorized access to the target record.","description":"Retrieve the full detail of a specific outcome metric using metricId. This includes metric name, observed value, cohort definition, observed_at timestamp, organizational/department scope, and calculation metadata. The response enables in-depth review, audit, and drill-down for analytics dashboards or compliance workflows.\n\nRole-based authorization is required: systemAdmin can access any metric; organizationAdmin is limited to their organization; departmentHead is limited to their department's metrics. If the metricId is invalid, deleted, or the user lacks permissions, an error response is returned for clarity and auditing. This operation is essential for interactive analytics, organizational benchmarking, and regulatory quality tracking.\n\nWhere applicable, links to related KPI snapshots or benchmark records can be referenced for context.","summary":"Retrieve a single outcome metric record and its metadata by metricId from healthcare_platform_outcome_metrics.","parameters":[{"name":"metricId","description":"Unique identifier of the outcome metric to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed outcome metric entity record and metadata.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"at","path":"/healthcarePlatform/systemAdmin/outcomeMetrics/{metricId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a single detailed outcome metric record by metricId from the healthcare_platform_outcome_metrics table. Outcome metrics model the calculated results of organizational or departmental performance variables such as clinical outcomes, operational efficiency, or compliance indicators, timestamped for time-series analysis and benchmarking. Result includes all cohort, value, and descriptive metadata related to the metric as required by analytics, quality improvement, and reporting workflows.\n\nOnly users whose RBAC role (systemAdmin, organizationAdmin, departmentHead) covers the organization or department associated with the outcome metric may use this endpoint. Accesses are logged for security and compliance monitoring. Error handling is provided for missing, deleted, or unauthorized access to the target record.","description":"Retrieve the full detail of a specific outcome metric using metricId. This includes metric name, observed value, cohort definition, observed_at timestamp, organizational/department scope, and calculation metadata. The response enables in-depth review, audit, and drill-down for analytics dashboards or compliance workflows.\n\nRole-based authorization is required: systemAdmin can access any metric; organizationAdmin is limited to their organization; departmentHead is limited to their department's metrics. If the metricId is invalid, deleted, or the user lacks permissions, an error response is returned for clarity and auditing. This operation is essential for interactive analytics, organizational benchmarking, and regulatory quality tracking.\n\nWhere applicable, links to related KPI snapshots or benchmark records can be referenced for context.","summary":"Retrieve a single outcome metric record and its metadata by metricId from healthcare_platform_outcome_metrics.","parameters":[{"name":"metricId","description":"Unique identifier of the outcome metric to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed outcome metric entity record and metadata.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"at","path":"/healthcarePlatform/organizationAdmin/outcomeMetrics/{metricId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a single detailed outcome metric record by metricId from the healthcare_platform_outcome_metrics table. Outcome metrics model the calculated results of organizational or departmental performance variables such as clinical outcomes, operational efficiency, or compliance indicators, timestamped for time-series analysis and benchmarking. Result includes all cohort, value, and descriptive metadata related to the metric as required by analytics, quality improvement, and reporting workflows.\n\nOnly users whose RBAC role (systemAdmin, organizationAdmin, departmentHead) covers the organization or department associated with the outcome metric may use this endpoint. Accesses are logged for security and compliance monitoring. Error handling is provided for missing, deleted, or unauthorized access to the target record.","description":"Retrieve the full detail of a specific outcome metric using metricId. This includes metric name, observed value, cohort definition, observed_at timestamp, organizational/department scope, and calculation metadata. The response enables in-depth review, audit, and drill-down for analytics dashboards or compliance workflows.\n\nRole-based authorization is required: systemAdmin can access any metric; organizationAdmin is limited to their organization; departmentHead is limited to their department's metrics. If the metricId is invalid, deleted, or the user lacks permissions, an error response is returned for clarity and auditing. This operation is essential for interactive analytics, organizational benchmarking, and regulatory quality tracking.\n\nWhere applicable, links to related KPI snapshots or benchmark records can be referenced for context.","summary":"Retrieve a single outcome metric record and its metadata by metricId from healthcare_platform_outcome_metrics.","parameters":[{"name":"metricId","description":"Unique identifier of the outcome metric to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed outcome metric entity record and metadata.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"at","path":"/healthcarePlatform/departmentHead/outcomeMetrics/{metricId}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation creates a new outcome metric timeseries record in the healthcare_platform_outcome_metrics table, enabling organizations and departments to track key clinical, operational, or compliance variables. Each outcome metric represents a quantitative measurement (e.g., readmission rate, infection rate) for a specified cohort, period, and context, supporting analytics, benchmarking, and quality improvement initiatives.\n\nCreation requires submission of all necessary metadata: organizationId, departmentId (if applicable), metricName, cohort definition, observedValue, observedAt (timestamp), and optional description. Request validation ensures the metric name and timestamp are unique for the given organization/department, aligning with table uniqueness constraints. Only users with appropriate (systemAdmin, organizationAdmin, departmentHead) authorization can submit new outcome metrics. Created records are auditable and immediately available for analytics visualization and reporting workflows.","description":"Create a new outcome metric record under the healthcare_platform_outcome_metrics table, capturing key performance indicators or quality metrics for organization or department analytics. The submitted data must include metric names, cohort definitions, observed values, timestamps, and association to organizational or departmental scope. All submitted records are validated for duplication, format correctness, and permission scope before saving.\n\nOn success, the operation returns the detailed created outcome metric for immediate analytics integration. Errors are returned for duplicate record attempts (metric name and observedAt not unique within org/department), malformed cohort definitions, or permission violations. All creations are logged for compliance and quality improvement traceability.","summary":"Create a new outcome metric timeseries record in healthcare_platform_outcome_metrics for analytics.","parameters":[],"requestBody":{"description":"Information for creating a new outcome metric record (metricName, cohort, value, timestamp, and context).","typeName":"IHealthcarePlatformOutcomeMetric.ICreate"},"responseBody":{"description":"Created outcome metric record and its metadata.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"create","path":"/healthcarePlatform/systemAdmin/outcomeMetrics","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new outcome metric timeseries record in the healthcare_platform_outcome_metrics table, enabling organizations and departments to track key clinical, operational, or compliance variables. Each outcome metric represents a quantitative measurement (e.g., readmission rate, infection rate) for a specified cohort, period, and context, supporting analytics, benchmarking, and quality improvement initiatives.\n\nCreation requires submission of all necessary metadata: organizationId, departmentId (if applicable), metricName, cohort definition, observedValue, observedAt (timestamp), and optional description. Request validation ensures the metric name and timestamp are unique for the given organization/department, aligning with table uniqueness constraints. Only users with appropriate (systemAdmin, organizationAdmin, departmentHead) authorization can submit new outcome metrics. Created records are auditable and immediately available for analytics visualization and reporting workflows.","description":"Create a new outcome metric record under the healthcare_platform_outcome_metrics table, capturing key performance indicators or quality metrics for organization or department analytics. The submitted data must include metric names, cohort definitions, observed values, timestamps, and association to organizational or departmental scope. All submitted records are validated for duplication, format correctness, and permission scope before saving.\n\nOn success, the operation returns the detailed created outcome metric for immediate analytics integration. Errors are returned for duplicate record attempts (metric name and observedAt not unique within org/department), malformed cohort definitions, or permission violations. All creations are logged for compliance and quality improvement traceability.","summary":"Create a new outcome metric timeseries record in healthcare_platform_outcome_metrics for analytics.","parameters":[],"requestBody":{"description":"Information for creating a new outcome metric record (metricName, cohort, value, timestamp, and context).","typeName":"IHealthcarePlatformOutcomeMetric.ICreate"},"responseBody":{"description":"Created outcome metric record and its metadata.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"create","path":"/healthcarePlatform/organizationAdmin/outcomeMetrics","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new outcome metric timeseries record in the healthcare_platform_outcome_metrics table, enabling organizations and departments to track key clinical, operational, or compliance variables. Each outcome metric represents a quantitative measurement (e.g., readmission rate, infection rate) for a specified cohort, period, and context, supporting analytics, benchmarking, and quality improvement initiatives.\n\nCreation requires submission of all necessary metadata: organizationId, departmentId (if applicable), metricName, cohort definition, observedValue, observedAt (timestamp), and optional description. Request validation ensures the metric name and timestamp are unique for the given organization/department, aligning with table uniqueness constraints. Only users with appropriate (systemAdmin, organizationAdmin, departmentHead) authorization can submit new outcome metrics. Created records are auditable and immediately available for analytics visualization and reporting workflows.","description":"Create a new outcome metric record under the healthcare_platform_outcome_metrics table, capturing key performance indicators or quality metrics for organization or department analytics. The submitted data must include metric names, cohort definitions, observed values, timestamps, and association to organizational or departmental scope. All submitted records are validated for duplication, format correctness, and permission scope before saving.\n\nOn success, the operation returns the detailed created outcome metric for immediate analytics integration. Errors are returned for duplicate record attempts (metric name and observedAt not unique within org/department), malformed cohort definitions, or permission violations. All creations are logged for compliance and quality improvement traceability.","summary":"Create a new outcome metric timeseries record in healthcare_platform_outcome_metrics for analytics.","parameters":[],"requestBody":{"description":"Information for creating a new outcome metric record (metricName, cohort, value, timestamp, and context).","typeName":"IHealthcarePlatformOutcomeMetric.ICreate"},"responseBody":{"description":"Created outcome metric record and its metadata.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"create","path":"/healthcarePlatform/departmentHead/outcomeMetrics","method":"post","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation updates an existing outcome metric record in the healthcare analytics module. The outcome metric, identified by a unique metricId, stores observed values, metric definitions, cohort configuration, timestamps, and relationships to target department/organization. This update mechanism is used for correcting historical metrics, re-benchmarking, or updating values as new data is available. It ensures historical performance and outcome tracking remain accurate for audits, reporting, and quality improvement initiatives. The operation directly modifies the record in the healthcare_platform_outcome_metrics Prisma table, adhering strictly to field types and validations defined in the schema. Only permitted roles with analytics dashboard ownership or quality management scope can perform updates. All changes are logged for compliance audit purposes and metric version integrity is preserved in downstream reporting.","description":"Update a single outcome metric time-series record to reflect corrected or re-benchmarked healthcare analytics data. Outcome metric records, as defined in the Prisma schema (healthcare_platform_outcome_metrics), track organizational or departmental quality and performance measures (e.g., readmission_rate, infection_rate) along with observed values, timepoints, and cohort logic. This endpoint allows authorized users to change any updatable property such as the metric's name, description, observed value, observed_at timepoint, cohort definition, or departmental/organizational assignment. \n\nSecurity checks mandate that the requesting user has analytics dashboard management, quality management, or admin privileges over the owning organization or department, as per role and org_id/department_id relationship enforcement. All updates are captured with timestamps, and prior values may be retained through revision logic or external version tracking for thorough auditability. Business logic ensures updating a metric cannot violate unique constraints (e.g., org_id+metric_name+observed_at) or retroactively invalidate benchmark comparisons.\n\nThis update flow is critical for maintaining regulatory, outcome-based, and quality improvement analytics, where precise and trusted reporting is required. Integrations with dashboards and KPI trend reporting rely on the accuracy of this outcome metric master table. API consumers should be aware of concurrent edits: last-write-wins is enforced at the API layer, but clients are encouraged to implement basic collision checks if working with user-facing editing workflows.","summary":"Update a specific healthcare outcome metric record (IHealthcarePlatformOutcomeMetric).","parameters":[{"name":"metricId","description":"The unique identifier (UUID) for the outcome metric record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated information for the outcome metric, following the IHealthcarePlatformOutcomeMetric.IUpdate DTO structure.","typeName":"IHealthcarePlatformOutcomeMetric.IUpdate"},"responseBody":{"description":"The updated outcome metric record after applying changes.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/outcomeMetrics/{metricId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates an existing outcome metric record in the healthcare analytics module. The outcome metric, identified by a unique metricId, stores observed values, metric definitions, cohort configuration, timestamps, and relationships to target department/organization. This update mechanism is used for correcting historical metrics, re-benchmarking, or updating values as new data is available. It ensures historical performance and outcome tracking remain accurate for audits, reporting, and quality improvement initiatives. The operation directly modifies the record in the healthcare_platform_outcome_metrics Prisma table, adhering strictly to field types and validations defined in the schema. Only permitted roles with analytics dashboard ownership or quality management scope can perform updates. All changes are logged for compliance audit purposes and metric version integrity is preserved in downstream reporting.","description":"Update a single outcome metric time-series record to reflect corrected or re-benchmarked healthcare analytics data. Outcome metric records, as defined in the Prisma schema (healthcare_platform_outcome_metrics), track organizational or departmental quality and performance measures (e.g., readmission_rate, infection_rate) along with observed values, timepoints, and cohort logic. This endpoint allows authorized users to change any updatable property such as the metric's name, description, observed value, observed_at timepoint, cohort definition, or departmental/organizational assignment. \n\nSecurity checks mandate that the requesting user has analytics dashboard management, quality management, or admin privileges over the owning organization or department, as per role and org_id/department_id relationship enforcement. All updates are captured with timestamps, and prior values may be retained through revision logic or external version tracking for thorough auditability. Business logic ensures updating a metric cannot violate unique constraints (e.g., org_id+metric_name+observed_at) or retroactively invalidate benchmark comparisons.\n\nThis update flow is critical for maintaining regulatory, outcome-based, and quality improvement analytics, where precise and trusted reporting is required. Integrations with dashboards and KPI trend reporting rely on the accuracy of this outcome metric master table. API consumers should be aware of concurrent edits: last-write-wins is enforced at the API layer, but clients are encouraged to implement basic collision checks if working with user-facing editing workflows.","summary":"Update a specific healthcare outcome metric record (IHealthcarePlatformOutcomeMetric).","parameters":[{"name":"metricId","description":"The unique identifier (UUID) for the outcome metric record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated information for the outcome metric, following the IHealthcarePlatformOutcomeMetric.IUpdate DTO structure.","typeName":"IHealthcarePlatformOutcomeMetric.IUpdate"},"responseBody":{"description":"The updated outcome metric record after applying changes.","typeName":"IHealthcarePlatformOutcomeMetric"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/outcomeMetrics/{metricId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes an outcome metric record from the system's analytics time-series (healthcare_platform_outcome_metrics) table. The record is identified by its metricId. Deletion is only available to high-privilege roles (system admins, organization admins, or those specifically empowered to manage analytics data) to safeguard against accidental loss of business-critical KPIs. This is a hard delete, immediately removing the record and all its associated data from the database—there is no soft-delete marker per schema. All deletions are logged for compliance and audit purposes, and deletion of a metric may impact trendlines, dashboard displays, and regulatory reporting. Use this endpoint with extreme caution and follow organizational approval workflows as required.","description":"Permanently erase an outcome metric record from the healthcare analytics metrics table using its unique metricId (UUID). The healthcare_platform_outcome_metrics schema does not include a soft-delete field; thus, the removal is irreversible and physically deletes the row. Before performing this action, implementers MUST ensure that the metric is not referenced by time-series trendlines, active dashboards, or open regulatory/compliance reporting cycles—irreversible deletion may leave gaps in analytics continuity or audit history. \n\nAuthorized users must possess full organization admin or system admin privileges to prevent accidental or malicious loss of metrics. A successful call ensures compliance-grade logging of the deletion event, and downstream consumers (dashboards, reports) should be notified or given time to refresh caches to prevent data mismatch. Errors are generated if the metricId does not exist.\n\nThis operation should be used only after thorough review and, preferably, with a business workflow layer prompting for confirmation and rationale documentation.","summary":"Permanently delete a healthcare outcome metric record by metricId (hard delete).","parameters":[{"name":"metricId","description":"The unique identifier (UUID) of the outcome metric record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/outcomeMetrics/{metricId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes an outcome metric record from the system's analytics time-series (healthcare_platform_outcome_metrics) table. The record is identified by its metricId. Deletion is only available to high-privilege roles (system admins, organization admins, or those specifically empowered to manage analytics data) to safeguard against accidental loss of business-critical KPIs. This is a hard delete, immediately removing the record and all its associated data from the database—there is no soft-delete marker per schema. All deletions are logged for compliance and audit purposes, and deletion of a metric may impact trendlines, dashboard displays, and regulatory reporting. Use this endpoint with extreme caution and follow organizational approval workflows as required.","description":"Permanently erase an outcome metric record from the healthcare analytics metrics table using its unique metricId (UUID). The healthcare_platform_outcome_metrics schema does not include a soft-delete field; thus, the removal is irreversible and physically deletes the row. Before performing this action, implementers MUST ensure that the metric is not referenced by time-series trendlines, active dashboards, or open regulatory/compliance reporting cycles—irreversible deletion may leave gaps in analytics continuity or audit history. \n\nAuthorized users must possess full organization admin or system admin privileges to prevent accidental or malicious loss of metrics. A successful call ensures compliance-grade logging of the deletion event, and downstream consumers (dashboards, reports) should be notified or given time to refresh caches to prevent data mismatch. Errors are generated if the metricId does not exist.\n\nThis operation should be used only after thorough review and, preferably, with a business workflow layer prompting for confirmation and rationale documentation.","summary":"Permanently delete a healthcare outcome metric record by metricId (hard delete).","parameters":[{"name":"metricId","description":"The unique identifier (UUID) of the outcome metric record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/outcomeMetrics/{metricId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered list of benchmark definitions for healthcare metrics/kpis within a multi-tenant environment. It queries the healthcare_platform_benchmark_definitions Prisma table and supports complex filtering on organization_id, benchmark_code, label, value ranges, units, effective dates, and status. Results are paginated for scalability, and the API adheres to organization boundaries and permission checks. Only users with proper analytics/reporting rights can search or access organization-specific benchmark definitions. The response delivers summaries for each benchmark matching search criteria, which can be used for reporting, KPI comparison, and data quality monitoring.","description":"Search and retrieve a filtered and paginated list of benchmark definitions for clinical/operational analytics from the healthcare_platform_benchmark_definitions table. Benchmarks define target values, thresholds, and comparators for organizational or department-level KPIs—for example, national average readmission rates, infection benchmarks, etc. Supported request filter parameters include organization_id, code, label, value range, unit, effective start/end, and logical status. The PATCH method is used to accommodate complex and extensible filtering logic, plus scalable pagination and sorting.\n\nThis endpoint enforces that the requesting user has analytics dashboard, system admin, or organization admin rights for any organization whose benchmarks they query. Access to global or cross-organization benchmarks is restricted, unless specifically permitted. Returned data includes summaries optimized for dashboard and comparative reporting. Results may be large, so clients must honor pagination metadata and consider cache usage for invariant benchmarks.\n\nRelated APIs: detail GET (for full record), create/put (for adding or updating), and delete (for stewardship or deprecation workflows). All access and search filters are logged for compliance and audit purposes.","summary":"List and search available benchmark definitions for healthcare KPI/analytics reporting.","parameters":[],"requestBody":{"description":"Filter and pagination criteria for benchmark search (IHealthcarePlatformBenchmarkDefinition.IRequest).","typeName":"IHealthcarePlatformBenchmarkDefinition.IRequest"},"responseBody":{"description":"Paginated summaries of benchmark definitions matching search criteria.","typeName":"IPageIHealthcarePlatformBenchmarkDefinition.ISummary"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/benchmarkDefinitions","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered list of benchmark definitions for healthcare metrics/kpis within a multi-tenant environment. It queries the healthcare_platform_benchmark_definitions Prisma table and supports complex filtering on organization_id, benchmark_code, label, value ranges, units, effective dates, and status. Results are paginated for scalability, and the API adheres to organization boundaries and permission checks. Only users with proper analytics/reporting rights can search or access organization-specific benchmark definitions. The response delivers summaries for each benchmark matching search criteria, which can be used for reporting, KPI comparison, and data quality monitoring.","description":"Search and retrieve a filtered and paginated list of benchmark definitions for clinical/operational analytics from the healthcare_platform_benchmark_definitions table. Benchmarks define target values, thresholds, and comparators for organizational or department-level KPIs—for example, national average readmission rates, infection benchmarks, etc. Supported request filter parameters include organization_id, code, label, value range, unit, effective start/end, and logical status. The PATCH method is used to accommodate complex and extensible filtering logic, plus scalable pagination and sorting.\n\nThis endpoint enforces that the requesting user has analytics dashboard, system admin, or organization admin rights for any organization whose benchmarks they query. Access to global or cross-organization benchmarks is restricted, unless specifically permitted. Returned data includes summaries optimized for dashboard and comparative reporting. Results may be large, so clients must honor pagination metadata and consider cache usage for invariant benchmarks.\n\nRelated APIs: detail GET (for full record), create/put (for adding or updating), and delete (for stewardship or deprecation workflows). All access and search filters are logged for compliance and audit purposes.","summary":"List and search available benchmark definitions for healthcare KPI/analytics reporting.","parameters":[],"requestBody":{"description":"Filter and pagination criteria for benchmark search (IHealthcarePlatformBenchmarkDefinition.IRequest).","typeName":"IHealthcarePlatformBenchmarkDefinition.IRequest"},"responseBody":{"description":"Paginated summaries of benchmark definitions matching search criteria.","typeName":"IPageIHealthcarePlatformBenchmarkDefinition.ISummary"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/benchmarkDefinitions","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation gets detailed information on a single benchmark definition entity, identified by its benchmarkId. Each benchmark definition record—stored in the healthcare_platform_benchmark_definitions Prisma table—defines a named comparative standard (such as national average, organizational target, regulatory limit), including code, label, value/unit, effective and expiration dates, and organizational context. Access is permission-protected to analytics, organization admin, or system admin roles. The returned record includes all detailed configuration and metadata for reporting, audit or analytics use.","description":"Retrieve the full detail of a single benchmark definition for healthcare analytics by supplying its unique benchmarkId (UUID). Benchmarks represent static or evolving reference points for assessment of key performance indicators (KPIs), such as clinical or operational targets. The Prisma schema for healthcare_platform_benchmark_definitions provides all structured and descriptive columns: benchmark_code, label, description, value, unit, effective dates, organization ownership, etc. This endpoint enforces that only users with analytics, reporting, or high-level organization/system admin rights may access organization-specific or global benchmarks. Common use cases include populating dashboards with reference targets, running comparative audits, or presenting compliance context within analytics applications. All access is logged for audit purposes, and errors are generated if an invalid or unauthorized benchmarkId is supplied. Related endpoints include PATCH /benchmarkDefinitions for filtered lists and PUT/POST for stewardship workflows.","summary":"Get full detail of a benchmark definition (IHealthcarePlatformBenchmarkDefinition) by benchmarkId.","parameters":[{"name":"benchmarkId","description":"The unique identifier (UUID) for the benchmark definition record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full benchmark definition record for reference/audit/analytics.","typeName":"IHealthcarePlatformBenchmarkDefinition"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/benchmarkDefinitions/{benchmarkId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation gets detailed information on a single benchmark definition entity, identified by its benchmarkId. Each benchmark definition record—stored in the healthcare_platform_benchmark_definitions Prisma table—defines a named comparative standard (such as national average, organizational target, regulatory limit), including code, label, value/unit, effective and expiration dates, and organizational context. Access is permission-protected to analytics, organization admin, or system admin roles. The returned record includes all detailed configuration and metadata for reporting, audit or analytics use.","description":"Retrieve the full detail of a single benchmark definition for healthcare analytics by supplying its unique benchmarkId (UUID). Benchmarks represent static or evolving reference points for assessment of key performance indicators (KPIs), such as clinical or operational targets. The Prisma schema for healthcare_platform_benchmark_definitions provides all structured and descriptive columns: benchmark_code, label, description, value, unit, effective dates, organization ownership, etc. This endpoint enforces that only users with analytics, reporting, or high-level organization/system admin rights may access organization-specific or global benchmarks. Common use cases include populating dashboards with reference targets, running comparative audits, or presenting compliance context within analytics applications. All access is logged for audit purposes, and errors are generated if an invalid or unauthorized benchmarkId is supplied. Related endpoints include PATCH /benchmarkDefinitions for filtered lists and PUT/POST for stewardship workflows.","summary":"Get full detail of a benchmark definition (IHealthcarePlatformBenchmarkDefinition) by benchmarkId.","parameters":[{"name":"benchmarkId","description":"The unique identifier (UUID) for the benchmark definition record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The full benchmark definition record for reference/audit/analytics.","typeName":"IHealthcarePlatformBenchmarkDefinition"},"authorizationRoles":["organizationAdmin","systemAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/benchmarkDefinitions/{benchmarkId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new benchmark definition within the healthcarePlatform analytics module. It operates on the healthcare_platform_benchmark_definitions table. Benchmarks are used for analytics comparisons, normalization, and dashboards. Each entry defines a target value (e.g., national average for an outcome metric), applicable organization, effective dates, and associated units. The operation supports organization-wide and global benchmarks.","description":"Create a benchmark definition record, supporting analytics, reporting, and outcomes comparison for healthcare organizations. The endpoint is used mainly by systemAdmins and orgAdmins to define or update targets for outcome metrics, KPIs, or other analytic normalization needs.\n\nSecurity considerations: Only systemAdmins and organizationAdmins with active status can use this operation; bench marks may affect quality reporting and should be version controlled. The endpoint validates uniqueness by organization and benchmark_code.\n\nThe database model mandates required fields such as organization_id (optional for global), benchmark_code (unique within org), value, unit, label, effective_start_at, and supports optional description and effective_end_at. Proper type and validation are enforced per the schema.\n\nErrors: Duplicate codes, invalid or missing organization links, invalid dates, or missing mandatory fields will cause errors. Related endpoints are available for updating and deleting benchmarks.\n","summary":"Create a new analytics benchmark definition (healthcare_platform_benchmark_definitions table).","parameters":[],"requestBody":{"description":"Benchmark creation payload with required organization, code, value, unit, and effective start/end dates.","typeName":"IHealthcarePlatformBenchmarkDefinition.ICreate"},"responseBody":{"description":"Details of newly created benchmark definition.","typeName":"IHealthcarePlatformBenchmarkDefinition"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/benchmarkDefinitions","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new benchmark definition within the healthcarePlatform analytics module. It operates on the healthcare_platform_benchmark_definitions table. Benchmarks are used for analytics comparisons, normalization, and dashboards. Each entry defines a target value (e.g., national average for an outcome metric), applicable organization, effective dates, and associated units. The operation supports organization-wide and global benchmarks.","description":"Create a benchmark definition record, supporting analytics, reporting, and outcomes comparison for healthcare organizations. The endpoint is used mainly by systemAdmins and orgAdmins to define or update targets for outcome metrics, KPIs, or other analytic normalization needs.\n\nSecurity considerations: Only systemAdmins and organizationAdmins with active status can use this operation; bench marks may affect quality reporting and should be version controlled. The endpoint validates uniqueness by organization and benchmark_code.\n\nThe database model mandates required fields such as organization_id (optional for global), benchmark_code (unique within org), value, unit, label, effective_start_at, and supports optional description and effective_end_at. Proper type and validation are enforced per the schema.\n\nErrors: Duplicate codes, invalid or missing organization links, invalid dates, or missing mandatory fields will cause errors. Related endpoints are available for updating and deleting benchmarks.\n","summary":"Create a new analytics benchmark definition (healthcare_platform_benchmark_definitions table).","parameters":[],"requestBody":{"description":"Benchmark creation payload with required organization, code, value, unit, and effective start/end dates.","typeName":"IHealthcarePlatformBenchmarkDefinition.ICreate"},"responseBody":{"description":"Details of newly created benchmark definition.","typeName":"IHealthcarePlatformBenchmarkDefinition"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/benchmarkDefinitions","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation updates the details of an existing benchmark definition in the healthcarePlatform's analytics system. It operates on the healthcare_platform_benchmark_definitions table, identified by benchmarkId. Used to revise target values, active dates, benchmark label, and other metadata for analytics normalization and reporting.","description":"Update an existing benchmark definition record to change its metadata or business value. Only systemAdmin and organizationAdmin with adequate privileges may execute this operation; operation enforces full validation and audit compliance.\n\nThe operation requires the benchmarkId as path parameter, referencing the primary key. Update fields include label, benchmark_code, value, unit, effective_start_at, effective_end_at, and description. The logic enforces uniqueness, valid data ranges, and may perform partial updates while tracking the updated_at timestamp.\n\nIf the benchmark is organization-scoped, the caller must be in the same organization. Errors arise if benchmarkId is missing/not found, data fails constraints, or the user lacks permission. Audited for compliance. Related endpoints: benchmark create and delete.","summary":"Update an existing benchmark definition (healthcare_platform_benchmark_definitions table).","parameters":[{"name":"benchmarkId","description":"The unique identifier of the benchmark definition to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload to update benchmark definition fields.","typeName":"IHealthcarePlatformBenchmarkDefinition.IUpdate"},"responseBody":{"description":"The updated benchmark definition details.","typeName":"IHealthcarePlatformBenchmarkDefinition"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/benchmarkDefinitions/{benchmarkId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates the details of an existing benchmark definition in the healthcarePlatform's analytics system. It operates on the healthcare_platform_benchmark_definitions table, identified by benchmarkId. Used to revise target values, active dates, benchmark label, and other metadata for analytics normalization and reporting.","description":"Update an existing benchmark definition record to change its metadata or business value. Only systemAdmin and organizationAdmin with adequate privileges may execute this operation; operation enforces full validation and audit compliance.\n\nThe operation requires the benchmarkId as path parameter, referencing the primary key. Update fields include label, benchmark_code, value, unit, effective_start_at, effective_end_at, and description. The logic enforces uniqueness, valid data ranges, and may perform partial updates while tracking the updated_at timestamp.\n\nIf the benchmark is organization-scoped, the caller must be in the same organization. Errors arise if benchmarkId is missing/not found, data fails constraints, or the user lacks permission. Audited for compliance. Related endpoints: benchmark create and delete.","summary":"Update an existing benchmark definition (healthcare_platform_benchmark_definitions table).","parameters":[{"name":"benchmarkId","description":"The unique identifier of the benchmark definition to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload to update benchmark definition fields.","typeName":"IHealthcarePlatformBenchmarkDefinition.IUpdate"},"responseBody":{"description":"The updated benchmark definition details.","typeName":"IHealthcarePlatformBenchmarkDefinition"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/benchmarkDefinitions/{benchmarkId}","method":"put","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation irreversibly removes a benchmark definition from the analytics configuration for an organization or system. It operates on the healthcare_platform_benchmark_definitions table, identified by benchmarkId. Deletion is a permanent action—for soft deletion, a deleted_at field is used according to schema and policy.","description":"Delete a benchmark definition record by unique ID. This operation is restricted to systemAdmins and organizationAdmins, with validation to ensure the benchmark is in the correct organizational context.\n\nIf model supports soft delete (as per deleted_at), the record is marked deleted but retained for compliance audit; otherwise, the removal is hard delete. Operation enforces referential integrity and prevents removal if the benchmark is used by active KPIs.\n\nSecurity: Only privileged roles (systemAdmin, organizationAdmin) can delete, and all deletions are logged. Related operations: create and update for benchmarks.","summary":"Delete an analytics benchmark definition entry (healthcare_platform_benchmark_definitions table).","parameters":[{"name":"benchmarkId","description":"The unique identifier of the benchmark definition to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/benchmarkDefinitions/{benchmarkId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation irreversibly removes a benchmark definition from the analytics configuration for an organization or system. It operates on the healthcare_platform_benchmark_definitions table, identified by benchmarkId. Deletion is a permanent action—for soft deletion, a deleted_at field is used according to schema and policy.","description":"Delete a benchmark definition record by unique ID. This operation is restricted to systemAdmins and organizationAdmins, with validation to ensure the benchmark is in the correct organizational context.\n\nIf model supports soft delete (as per deleted_at), the record is marked deleted but retained for compliance audit; otherwise, the removal is hard delete. Operation enforces referential integrity and prevents removal if the benchmark is used by active KPIs.\n\nSecurity: Only privileged roles (systemAdmin, organizationAdmin) can delete, and all deletions are logged. Related operations: create and update for benchmarks.","summary":"Delete an analytics benchmark definition entry (healthcare_platform_benchmark_definitions table).","parameters":[{"name":"benchmarkId","description":"The unique identifier of the benchmark definition to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/benchmarkDefinitions/{benchmarkId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of key performance indicator (KPI) snapshots for analytics dashboards and reporting. It operates on the healthcare_platform_kpi_snapshots table, supporting flexible search, filtering, sorting, and pagination for organization admins and analytics consumers.","description":"Get a paginated and filterable list of KPI snapshot data points, including value, label, date/time, organization, department, and any linked benchmarks. End users (orgAdmins, department heads, providers with analytics access) use this endpoint to populate dashboards and reports with up-to-date analytics data.\n\nRequest body allows searching by org/department, KPI name, date range, value ranges, and supports sorting options. Endpoint uses pagination for large result sets. Data is restricted to authorized users/organizations; audit logging includes query parameters and filters.\n\nErrors: Invalid search criteria, access violations, and paging/sorting parameter errors are all reported with clear messages. Related endpoints include create/read/update/erase for benchmarks and direct KPI configuration endpoints.","summary":"Search and paginate KPI snapshot entries (healthcare_platform_kpi_snapshots table).","parameters":[],"requestBody":{"description":"Request body specifying search, filter, and pagination criteria for KPI snapshots.","typeName":"IHealthcarePlatformKpiSnapshot.IRequest"},"responseBody":{"description":"Paginated results of KPI snapshots matching search criteria.","typeName":"IPageIHealthcarePlatformKpiSnapshot"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/systemAdmin/kpiSnapshots","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of key performance indicator (KPI) snapshots for analytics dashboards and reporting. It operates on the healthcare_platform_kpi_snapshots table, supporting flexible search, filtering, sorting, and pagination for organization admins and analytics consumers.","description":"Get a paginated and filterable list of KPI snapshot data points, including value, label, date/time, organization, department, and any linked benchmarks. End users (orgAdmins, department heads, providers with analytics access) use this endpoint to populate dashboards and reports with up-to-date analytics data.\n\nRequest body allows searching by org/department, KPI name, date range, value ranges, and supports sorting options. Endpoint uses pagination for large result sets. Data is restricted to authorized users/organizations; audit logging includes query parameters and filters.\n\nErrors: Invalid search criteria, access violations, and paging/sorting parameter errors are all reported with clear messages. Related endpoints include create/read/update/erase for benchmarks and direct KPI configuration endpoints.","summary":"Search and paginate KPI snapshot entries (healthcare_platform_kpi_snapshots table).","parameters":[],"requestBody":{"description":"Request body specifying search, filter, and pagination criteria for KPI snapshots.","typeName":"IHealthcarePlatformKpiSnapshot.IRequest"},"responseBody":{"description":"Paginated results of KPI snapshots matching search criteria.","typeName":"IPageIHealthcarePlatformKpiSnapshot"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/organizationAdmin/kpiSnapshots","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of key performance indicator (KPI) snapshots for analytics dashboards and reporting. It operates on the healthcare_platform_kpi_snapshots table, supporting flexible search, filtering, sorting, and pagination for organization admins and analytics consumers.","description":"Get a paginated and filterable list of KPI snapshot data points, including value, label, date/time, organization, department, and any linked benchmarks. End users (orgAdmins, department heads, providers with analytics access) use this endpoint to populate dashboards and reports with up-to-date analytics data.\n\nRequest body allows searching by org/department, KPI name, date range, value ranges, and supports sorting options. Endpoint uses pagination for large result sets. Data is restricted to authorized users/organizations; audit logging includes query parameters and filters.\n\nErrors: Invalid search criteria, access violations, and paging/sorting parameter errors are all reported with clear messages. Related endpoints include create/read/update/erase for benchmarks and direct KPI configuration endpoints.","summary":"Search and paginate KPI snapshot entries (healthcare_platform_kpi_snapshots table).","parameters":[],"requestBody":{"description":"Request body specifying search, filter, and pagination criteria for KPI snapshots.","typeName":"IHealthcarePlatformKpiSnapshot.IRequest"},"responseBody":{"description":"Paginated results of KPI snapshots matching search criteria.","typeName":"IPageIHealthcarePlatformKpiSnapshot"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead"],"name":"index","path":"/healthcarePlatform/departmentHead/kpiSnapshots","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves a specific KPI (Key Performance Indicator) snapshot by its unique identifier. It allows authorized users to fetch detailed information regarding a single KPI snapshot, including its value, label, calculation details, reference benchmarks, and time context. The operation is mapped to the healthcare_platform_kpi_snapshots table, which contains computed values for key organizational performance indicators per time period and department/context. It is vital for analytics dashboards and compliance reporting—as every snapshot details an organization's measurement of outcomes, trends, or business objectives. The operation supports audit and traceability, enforcing that only authorized users may access granular organization-level analytics data, and provides error feedback if the snapshot does not exist or the user lacks permission.","description":"Retrieve a single KPI snapshot record from the healthcare_platform_kpi_snapshots table using its unique ID. The KPI snapshot includes information about a specific performance indicator—such as the KPI name, value, label, department and organization linkage, benchmark association, observation time, and computation details for a given reporting period.\n\nAuthorization and data access are restricted to roles with appropriate analytics or admin privileges, following business rules and organization visibility scope defined in the platform security requirements. The endpoint enforces strict access control, ensuring users can only view KPI snapshots for organizations and departments to which they are affiliated.\n\nError handling covers not-found conditions, permission violations, or requests for deleted/inactive snapshots. This operation is typically paired with listing/search endpoints and may be used in dashboard drilldown routines. Compliance with audit and access log requirements is automatic, as every fetch event will be recorded for compliance and future review.","summary":"Fetch a detailed KPI snapshot by its unique ID (table: healthcare_platform_kpi_snapshots) for analytics and reporting.","parameters":[{"name":"kpiSnapshotId","description":"Unique identifier (UUID) of the target KPI snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the KPI snapshot, including value, time, label, benchmarks, and configuration.","typeName":"IHealthcarePlatformKpiSnapshot"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/kpiSnapshots/{kpiSnapshotId}","method":"get"},{"specification":"This operation retrieves a specific KPI (Key Performance Indicator) snapshot by its unique identifier. It allows authorized users to fetch detailed information regarding a single KPI snapshot, including its value, label, calculation details, reference benchmarks, and time context. The operation is mapped to the healthcare_platform_kpi_snapshots table, which contains computed values for key organizational performance indicators per time period and department/context. It is vital for analytics dashboards and compliance reporting—as every snapshot details an organization's measurement of outcomes, trends, or business objectives. The operation supports audit and traceability, enforcing that only authorized users may access granular organization-level analytics data, and provides error feedback if the snapshot does not exist or the user lacks permission.","description":"Retrieve a single KPI snapshot record from the healthcare_platform_kpi_snapshots table using its unique ID. The KPI snapshot includes information about a specific performance indicator—such as the KPI name, value, label, department and organization linkage, benchmark association, observation time, and computation details for a given reporting period.\n\nAuthorization and data access are restricted to roles with appropriate analytics or admin privileges, following business rules and organization visibility scope defined in the platform security requirements. The endpoint enforces strict access control, ensuring users can only view KPI snapshots for organizations and departments to which they are affiliated.\n\nError handling covers not-found conditions, permission violations, or requests for deleted/inactive snapshots. This operation is typically paired with listing/search endpoints and may be used in dashboard drilldown routines. Compliance with audit and access log requirements is automatic, as every fetch event will be recorded for compliance and future review.","summary":"Fetch a detailed KPI snapshot by its unique ID (table: healthcare_platform_kpi_snapshots) for analytics and reporting.","parameters":[{"name":"kpiSnapshotId","description":"Unique identifier (UUID) of the target KPI snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the KPI snapshot, including value, time, label, benchmarks, and configuration.","typeName":"IHealthcarePlatformKpiSnapshot"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/kpiSnapshots/{kpiSnapshotId}","method":"get"},{"specification":"This operation retrieves a specific KPI (Key Performance Indicator) snapshot by its unique identifier. It allows authorized users to fetch detailed information regarding a single KPI snapshot, including its value, label, calculation details, reference benchmarks, and time context. The operation is mapped to the healthcare_platform_kpi_snapshots table, which contains computed values for key organizational performance indicators per time period and department/context. It is vital for analytics dashboards and compliance reporting—as every snapshot details an organization's measurement of outcomes, trends, or business objectives. The operation supports audit and traceability, enforcing that only authorized users may access granular organization-level analytics data, and provides error feedback if the snapshot does not exist or the user lacks permission.","description":"Retrieve a single KPI snapshot record from the healthcare_platform_kpi_snapshots table using its unique ID. The KPI snapshot includes information about a specific performance indicator—such as the KPI name, value, label, department and organization linkage, benchmark association, observation time, and computation details for a given reporting period.\n\nAuthorization and data access are restricted to roles with appropriate analytics or admin privileges, following business rules and organization visibility scope defined in the platform security requirements. The endpoint enforces strict access control, ensuring users can only view KPI snapshots for organizations and departments to which they are affiliated.\n\nError handling covers not-found conditions, permission violations, or requests for deleted/inactive snapshots. This operation is typically paired with listing/search endpoints and may be used in dashboard drilldown routines. Compliance with audit and access log requirements is automatic, as every fetch event will be recorded for compliance and future review.","summary":"Fetch a detailed KPI snapshot by its unique ID (table: healthcare_platform_kpi_snapshots) for analytics and reporting.","parameters":[{"name":"kpiSnapshotId","description":"Unique identifier (UUID) of the target KPI snapshot to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the KPI snapshot, including value, time, label, benchmarks, and configuration.","typeName":"IHealthcarePlatformKpiSnapshot"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at","path":"/healthcarePlatform/departmentHead/kpiSnapshots/{kpiSnapshotId}","method":"get"},{"specification":"This operation fetches a paginated, filterable list of external EMR (Electronic Medical Record) connector configurations used by the system for interoperability with third-party EMR/EHR vendors (e.g., Epic, Cerner). It targets the healthcare_platform_external_emr_connectors table, supporting advanced search by connector type, organization, or status, and enables administrators to monitor and manage platform-level or organization-scoped integrations. The endpoint enables filtering, sorting, and metadata query for integration management, environment readiness, and system health dashboards. Only system and organization administrators may invoke this search.","description":"Retrieve a paginated and filtered list of external EMR connector configurations from the healthcare_platform_external_emr_connectors table, supporting filtering by organization, vendor type, operational status, or last sync time. This list is essential for administrators managing the interoperability landscape of the healthcare platform—allowing proactive readiness review, troubleshooting, and cross-organization audit.\n\nQuery parameters and request body allow for complex search, sorting, and paging. Security ensures only users with platform or organization admin roles can enumerate connectors. Access logging and compliance requirements are enforced, with sensitive integration credentials never returned via API.\n\nTypical use cases include configuration audits, visualization in integration dashboards, or pre-checks for onboarding new organizations. The endpoint interacts closely with monitoring and system health logic, ensuring that platform reliability is maintained across integrations with EMR vendors.","summary":"Search and retrieve a filtered, paginated list of external EMR connector configurations (table: healthcare_platform_external_emr_connectors).","parameters":[],"requestBody":{"description":"Query and pagination parameters for searching external EMR connectors.","typeName":"IHealthcarePlatformExternalEmrConnector.IRequest"},"responseBody":{"description":"Paginated list of external EMR connector configuration summaries matching the query and filters.","typeName":"IPageIHealthcarePlatformExternalEmrConnector.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/externalEmrConnectors","method":"patch"},{"specification":"This operation fetches a paginated, filterable list of external EMR (Electronic Medical Record) connector configurations used by the system for interoperability with third-party EMR/EHR vendors (e.g., Epic, Cerner). It targets the healthcare_platform_external_emr_connectors table, supporting advanced search by connector type, organization, or status, and enables administrators to monitor and manage platform-level or organization-scoped integrations. The endpoint enables filtering, sorting, and metadata query for integration management, environment readiness, and system health dashboards. Only system and organization administrators may invoke this search.","description":"Retrieve a paginated and filtered list of external EMR connector configurations from the healthcare_platform_external_emr_connectors table, supporting filtering by organization, vendor type, operational status, or last sync time. This list is essential for administrators managing the interoperability landscape of the healthcare platform—allowing proactive readiness review, troubleshooting, and cross-organization audit.\n\nQuery parameters and request body allow for complex search, sorting, and paging. Security ensures only users with platform or organization admin roles can enumerate connectors. Access logging and compliance requirements are enforced, with sensitive integration credentials never returned via API.\n\nTypical use cases include configuration audits, visualization in integration dashboards, or pre-checks for onboarding new organizations. The endpoint interacts closely with monitoring and system health logic, ensuring that platform reliability is maintained across integrations with EMR vendors.","summary":"Search and retrieve a filtered, paginated list of external EMR connector configurations (table: healthcare_platform_external_emr_connectors).","parameters":[],"requestBody":{"description":"Query and pagination parameters for searching external EMR connectors.","typeName":"IHealthcarePlatformExternalEmrConnector.IRequest"},"responseBody":{"description":"Paginated list of external EMR connector configuration summaries matching the query and filters.","typeName":"IPageIHealthcarePlatformExternalEmrConnector.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/externalEmrConnectors","method":"patch"},{"specification":"This operation retrieves the full configuration details of a specific external EMR connector by its unique identifier. It is mapped to the healthcare_platform_external_emr_connectors table, responsible for managing organization-level interoperability adapters between the healthcare platform and EMR/EHR vendors. The operation returns comprehensive information required for integration enablement, vendor troubleshooting, and compliance documentation. Security is enforced such that only privileged roles (system or organization admin) may request integration detail. Sensitive information is masked or excluded by business logic.","description":"Fetch detailed configuration and status information for a single external EMR connector record, using its connector ID as the lookup key from healthcare_platform_external_emr_connectors. The returned information includes vendor type, connection endpoints, status, last synchronization date, and related metadata relevant for administration, auditing, and troubleshooting.\n\nSecurity and access are tightly controlled—the endpoint is available only to system and organization administrators, ensuring role-based visibility boundaries in accordance with multi-tenant platform standards. Sensitive fields, such as credentials or internal tokens, are either excluded or masked from API output by implementation policy.\n\nThe operation supports operational monitoring, compliance readiness, and integration lifecycle management for connected EMR/EHR vendors. All access events are logged for security and compliance review.","summary":"Fetch the complete configuration details for a specific external EMR connector by ID (table: healthcare_platform_external_emr_connectors).","parameters":[{"name":"externalEmrConnectorId","description":"Unique identifier (UUID) of the external EMR connector to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detail view of the external EMR connector configuration.","typeName":"IHealthcarePlatformExternalEmrConnector"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/externalEmrConnectors/{externalEmrConnectorId}","method":"get"},{"specification":"This operation retrieves the full configuration details of a specific external EMR connector by its unique identifier. It is mapped to the healthcare_platform_external_emr_connectors table, responsible for managing organization-level interoperability adapters between the healthcare platform and EMR/EHR vendors. The operation returns comprehensive information required for integration enablement, vendor troubleshooting, and compliance documentation. Security is enforced such that only privileged roles (system or organization admin) may request integration detail. Sensitive information is masked or excluded by business logic.","description":"Fetch detailed configuration and status information for a single external EMR connector record, using its connector ID as the lookup key from healthcare_platform_external_emr_connectors. The returned information includes vendor type, connection endpoints, status, last synchronization date, and related metadata relevant for administration, auditing, and troubleshooting.\n\nSecurity and access are tightly controlled—the endpoint is available only to system and organization administrators, ensuring role-based visibility boundaries in accordance with multi-tenant platform standards. Sensitive fields, such as credentials or internal tokens, are either excluded or masked from API output by implementation policy.\n\nThe operation supports operational monitoring, compliance readiness, and integration lifecycle management for connected EMR/EHR vendors. All access events are logged for security and compliance review.","summary":"Fetch the complete configuration details for a specific external EMR connector by ID (table: healthcare_platform_external_emr_connectors).","parameters":[{"name":"externalEmrConnectorId","description":"Unique identifier (UUID) of the external EMR connector to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detail view of the external EMR connector configuration.","typeName":"IHealthcarePlatformExternalEmrConnector"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/externalEmrConnectors/{externalEmrConnectorId}","method":"get"},{"specification":"This operation creates a new external EMR connector record for enabling interoperability between the healthcare platform and a third-party EMR/EHR system. It inserts a new row into the healthcare_platform_external_emr_connectors table, requiring details such as organization, connector type, connection URI, and operational status. The endpoint is restricted to privileged administrators, enabling onboarding of new integrations or testing sandbox environments. Input validation enforces uniqueness of connectors per type and organization, as well as compliance with secure configuration policies.","description":"Register a new external EMR connector configuration in the system, specifying all required fields for integration with an EMR/EHR vendor. The request body must include organization mapping, connector type/vendor, connection endpoint, and initial status. Upon creation, the configuration is stored in healthcare_platform_external_emr_connectors and made available for monitoring, health checks, system dashboards, and integration workflows.\n\nInput validation is strict: the combination of organization and connector type must be unique, required fields (URI, status, etc.) must be present and valid, and compliance policies such as secure credential handling are enforced. Only system and organization admins may create new connectors. Error handling covers uniqueness violations, validation errors, and compliance policy enforcement.\n\nThe operation is typically paired with configuration management UX for onboarding external EMR/EHR systems and supports readiness for operational dashboards and compliance audits.","summary":"Create a new external EMR connector record for interoperability (table: healthcare_platform_external_emr_connectors).","parameters":[],"requestBody":{"description":"Detailed data for creating a new external EMR connector record.","typeName":"IHealthcarePlatformExternalEmrConnector.ICreate"},"responseBody":{"description":"The newly created external EMR connector in detail.","typeName":"IHealthcarePlatformExternalEmrConnector"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/externalEmrConnectors","method":"post"},{"specification":"This operation creates a new external EMR connector record for enabling interoperability between the healthcare platform and a third-party EMR/EHR system. It inserts a new row into the healthcare_platform_external_emr_connectors table, requiring details such as organization, connector type, connection URI, and operational status. The endpoint is restricted to privileged administrators, enabling onboarding of new integrations or testing sandbox environments. Input validation enforces uniqueness of connectors per type and organization, as well as compliance with secure configuration policies.","description":"Register a new external EMR connector configuration in the system, specifying all required fields for integration with an EMR/EHR vendor. The request body must include organization mapping, connector type/vendor, connection endpoint, and initial status. Upon creation, the configuration is stored in healthcare_platform_external_emr_connectors and made available for monitoring, health checks, system dashboards, and integration workflows.\n\nInput validation is strict: the combination of organization and connector type must be unique, required fields (URI, status, etc.) must be present and valid, and compliance policies such as secure credential handling are enforced. Only system and organization admins may create new connectors. Error handling covers uniqueness violations, validation errors, and compliance policy enforcement.\n\nThe operation is typically paired with configuration management UX for onboarding external EMR/EHR systems and supports readiness for operational dashboards and compliance audits.","summary":"Create a new external EMR connector record for interoperability (table: healthcare_platform_external_emr_connectors).","parameters":[],"requestBody":{"description":"Detailed data for creating a new external EMR connector record.","typeName":"IHealthcarePlatformExternalEmrConnector.ICreate"},"responseBody":{"description":"The newly created external EMR connector in detail.","typeName":"IHealthcarePlatformExternalEmrConnector"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/externalEmrConnectors","method":"post"},{"specification":"This operation updates an existing external EMR connector configuration for an organization. It is based on the healthcare_platform_external_emr_connectors table from the Prisma schema. The endpoint enables authorized platform or organization administrators to modify connection details, status, or integration parameters for a given EMR/EHR adapter (such as Epic, Cerner, AllScripts, or custom) that is used for data synchronization and interoperability.\n\nUpdating an EMR connector is a high-privilege configuration task that requires strict audit logging, as it can impact data flow between systems and patient safety. Only users with administrative rights at the platform or organization level should be able to perform this operation, and all changes must be tracked for compliance and troubleshooting.\n\nThe payload must match the expected external EMR connector configuration update format and only valid, active connectors can be updated. Attempts to update a non-existent or logically deleted connector must result in error responses as per API guidelines.","description":"Updates the configuration or metadata of an existing external EMR (Electronic Medical Record) connector, corresponding to a specific connector record in the healthcare_platform_external_emr_connectors table. This operation allows administrative users to change properties such as connector type, connection URI, operational status, last sync time, or custom parameters for integration with third-party EMR/EHR systems.\n\nStrict platform and organizational checks apply for this endpoint, which is limited to users with administrative roles due to the potential impact on global health data flows and compliance boundaries.\n\nAll changes are subject to audit trail requirements, and validation logic must ensure that status transitions, connector types, and endpoints conform to allowed values. The operation should fail gracefully with proper messages if the connector ID is missing, invalid, soft-deleted, or if the update would cause loss of audit data or breach interoperability constraints.\n\nRelated operations may include creation and deletion of EMR connectors, querying available connectors, and system-wide health checks on connector status.","summary":"Update an external EMR connector configuration (healthcare_platform_external_emr_connectors).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/systemAdmin/externalEmrConnectors/{externalEmrConnectorId}","method":"put","parameters":[{"name":"externalEmrConnectorId","description":"Unique identifier of the external EMR connector to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update information for an external EMR connector, such as connection_uri, status, or connector_type.","typeName":"IHealthcarePlatformExternalEmrConnector.IUpdate"},"responseBody":{"description":"The updated external EMR connector with new configuration properties.","typeName":"IHealthcarePlatformExternalEmrConnector"},"authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing external EMR connector configuration for an organization. It is based on the healthcare_platform_external_emr_connectors table from the Prisma schema. The endpoint enables authorized platform or organization administrators to modify connection details, status, or integration parameters for a given EMR/EHR adapter (such as Epic, Cerner, AllScripts, or custom) that is used for data synchronization and interoperability.\n\nUpdating an EMR connector is a high-privilege configuration task that requires strict audit logging, as it can impact data flow between systems and patient safety. Only users with administrative rights at the platform or organization level should be able to perform this operation, and all changes must be tracked for compliance and troubleshooting.\n\nThe payload must match the expected external EMR connector configuration update format and only valid, active connectors can be updated. Attempts to update a non-existent or logically deleted connector must result in error responses as per API guidelines.","description":"Updates the configuration or metadata of an existing external EMR (Electronic Medical Record) connector, corresponding to a specific connector record in the healthcare_platform_external_emr_connectors table. This operation allows administrative users to change properties such as connector type, connection URI, operational status, last sync time, or custom parameters for integration with third-party EMR/EHR systems.\n\nStrict platform and organizational checks apply for this endpoint, which is limited to users with administrative roles due to the potential impact on global health data flows and compliance boundaries.\n\nAll changes are subject to audit trail requirements, and validation logic must ensure that status transitions, connector types, and endpoints conform to allowed values. The operation should fail gracefully with proper messages if the connector ID is missing, invalid, soft-deleted, or if the update would cause loss of audit data or breach interoperability constraints.\n\nRelated operations may include creation and deletion of EMR connectors, querying available connectors, and system-wide health checks on connector status.","summary":"Update an external EMR connector configuration (healthcare_platform_external_emr_connectors).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"update","path":"/healthcarePlatform/organizationAdmin/externalEmrConnectors/{externalEmrConnectorId}","method":"put","parameters":[{"name":"externalEmrConnectorId","description":"Unique identifier of the external EMR connector to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update information for an external EMR connector, such as connection_uri, status, or connector_type.","typeName":"IHealthcarePlatformExternalEmrConnector.IUpdate"},"responseBody":{"description":"The updated external EMR connector with new configuration properties.","typeName":"IHealthcarePlatformExternalEmrConnector"},"authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation permanently deletes (hard deletes) an external EMR connector configuration entry identified by its unique ID from the healthcare_platform_external_emr_connectors table. This is intended for administrative removal of obsolete or decommissioned EMR/EHR integration connectors, ensuring that health data synchronization endpoints are kept clean and compliant.\n\nThe operation should only be permitted for users with platform or organization administrator roles, as it may affect organization-wide integrations and operational workflows. Safety checks, such as audit logging and confirmation of safe removal (including checks for downstream dependencies), must be enforced. Since the schema does *not* enforce soft-delete for this table, this action is a full removal from the database.","description":"Permanently removes an external EMR connector configuration record from the database by its unique identifier. The operation is mapped to the healthcare_platform_external_emr_connectors table and is intended for use only by highly privileged systemAdmin or organizationAdmin roles.\n\nAll deletions must be recorded in the audit log, and the system must confirm that the specified connector exists and is not already deleted. The removal should fail with a meaningful error if the ID does not exist or the connector is linked to active processes. There are no soft delete semantics for this operation, and the record will be eliminated from persistent storage.\n\nThis endpoint is complementary to operations for connector creation and update and should only be used in scenarios of connector decommission or critical incident remediation.","summary":"Permanently delete (hard remove) an external EMR connector (healthcare_platform_external_emr_connectors).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/externalEmrConnectors/{externalEmrConnectorId}","method":"delete","parameters":[{"name":"externalEmrConnectorId","description":"Unique identifier of the external EMR connector to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes (hard deletes) an external EMR connector configuration entry identified by its unique ID from the healthcare_platform_external_emr_connectors table. This is intended for administrative removal of obsolete or decommissioned EMR/EHR integration connectors, ensuring that health data synchronization endpoints are kept clean and compliant.\n\nThe operation should only be permitted for users with platform or organization administrator roles, as it may affect organization-wide integrations and operational workflows. Safety checks, such as audit logging and confirmation of safe removal (including checks for downstream dependencies), must be enforced. Since the schema does *not* enforce soft-delete for this table, this action is a full removal from the database.","description":"Permanently removes an external EMR connector configuration record from the database by its unique identifier. The operation is mapped to the healthcare_platform_external_emr_connectors table and is intended for use only by highly privileged systemAdmin or organizationAdmin roles.\n\nAll deletions must be recorded in the audit log, and the system must confirm that the specified connector exists and is not already deleted. The removal should fail with a meaningful error if the ID does not exist or the connector is linked to active processes. There are no soft delete semantics for this operation, and the record will be eliminated from persistent storage.\n\nThis endpoint is complementary to operations for connector creation and update and should only be used in scenarios of connector decommission or critical incident remediation.","summary":"Permanently delete (hard remove) an external EMR connector (healthcare_platform_external_emr_connectors).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/externalEmrConnectors/{externalEmrConnectorId}","method":"delete","parameters":[{"name":"externalEmrConnectorId","description":"Unique identifier of the external EMR connector to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of all lab integration configurations defined for one or more organizations or departments in the healthcarePlatform. It queries the healthcare_platform_lab_integrations table and allows advanced search, filtering, and sorting by integration status, lab vendor code, supported message formats, or organizational context.\n\nThe endpoint is crucial for system administrators and organization admins to manage, review, and audit lab data ingestion points. The operation supports multi-tenancy, role-based filtering, and is optimized for system health overview, onboarding, compliance audits, and troubleshooting.","description":"Returns a paginated and filtered list of lab integration connection definitions (for vendors such as LabCorp, Quest Diagnostics, or custom labs) based on query parameters. This operation reads from the healthcare_platform_lab_integrations table, supporting search and filtering by vendor code, connection status, message format, and organization assignment.\n\nUsers require appropriate system or organizational privileges, and access will be scoped to lab integrations in their assigned organizations. Results are ordered and paginated according to standard list operation conventions, and the request body can include search text, filter objects, or sorting criteria.\n\nThis operation is commonly used in administrative dashboards for integration health, audit readiness, and onboarding workflows. It complements individual lab integration detail retrieval, creation, update, and deletion endpoints.","summary":"Retrieve a paginated, filtered list of lab integration connectors (healthcare_platform_lab_integrations).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/labIntegrations","method":"patch","parameters":[],"requestBody":{"description":"Search and filter criteria for lab integration list retrieval, such as status, vendor code, organization.id, or supported_message_format.","typeName":"IHealthcarePlatformLabIntegration.IRequest"},"responseBody":{"description":"Paginated list of lab integration connectors matching search/filter criteria, including paging metadata.","typeName":"IPageIHealthcarePlatformLabIntegration.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of all lab integration configurations defined for one or more organizations or departments in the healthcarePlatform. It queries the healthcare_platform_lab_integrations table and allows advanced search, filtering, and sorting by integration status, lab vendor code, supported message formats, or organizational context.\n\nThe endpoint is crucial for system administrators and organization admins to manage, review, and audit lab data ingestion points. The operation supports multi-tenancy, role-based filtering, and is optimized for system health overview, onboarding, compliance audits, and troubleshooting.","description":"Returns a paginated and filtered list of lab integration connection definitions (for vendors such as LabCorp, Quest Diagnostics, or custom labs) based on query parameters. This operation reads from the healthcare_platform_lab_integrations table, supporting search and filtering by vendor code, connection status, message format, and organization assignment.\n\nUsers require appropriate system or organizational privileges, and access will be scoped to lab integrations in their assigned organizations. Results are ordered and paginated according to standard list operation conventions, and the request body can include search text, filter objects, or sorting criteria.\n\nThis operation is commonly used in administrative dashboards for integration health, audit readiness, and onboarding workflows. It complements individual lab integration detail retrieval, creation, update, and deletion endpoints.","summary":"Retrieve a paginated, filtered list of lab integration connectors (healthcare_platform_lab_integrations).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/labIntegrations","method":"patch","parameters":[],"requestBody":{"description":"Search and filter criteria for lab integration list retrieval, such as status, vendor code, organization.id, or supported_message_format.","typeName":"IHealthcarePlatformLabIntegration.IRequest"},"responseBody":{"description":"Paginated list of lab integration connectors matching search/filter criteria, including paging metadata.","typeName":"IPageIHealthcarePlatformLabIntegration.ISummary"},"authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves all details of a single lab integration configuration, specified by its unique ID, from the healthcare_platform_lab_integrations table. The endpoint provides complete connection metadata, operational status, vendor assignment, supported formats, and last update timestamps for one integration connector.\n\nThis is essential for admin users performing integration validation, troubleshooting, audit, or review tasks. Access is controlled to ensure only system-level or assigned organization administrators may access details for organizations within their scope.","description":"Fetches the full configuration and status details for a specific lab integration point, corresponding to a row in the healthcare_platform_lab_integrations table. The result includes lab vendor identity, connection URI, supported formats, status, timestamps, and metadata fields, supporting compliance review, integration setup, and incident investigation.\n\nThe operation is restricted to administrative users responsible for maintaining or auditing lab connections, and the returned fields must match the schema definition for lab integrations. The endpoint will return an error response if the labIntegrationId does not exist or is not accessible to the requesting user's organization.","summary":"Get the details of a specific lab integration connector (healthcare_platform_lab_integrations).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/labIntegrations/{labIntegrationId}","method":"get","parameters":[{"name":"labIntegrationId","description":"Unique identifier of the lab integration to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration and metadata for the requested lab integration connector.","typeName":"IHealthcarePlatformLabIntegration"},"authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves all details of a single lab integration configuration, specified by its unique ID, from the healthcare_platform_lab_integrations table. The endpoint provides complete connection metadata, operational status, vendor assignment, supported formats, and last update timestamps for one integration connector.\n\nThis is essential for admin users performing integration validation, troubleshooting, audit, or review tasks. Access is controlled to ensure only system-level or assigned organization administrators may access details for organizations within their scope.","description":"Fetches the full configuration and status details for a specific lab integration point, corresponding to a row in the healthcare_platform_lab_integrations table. The result includes lab vendor identity, connection URI, supported formats, status, timestamps, and metadata fields, supporting compliance review, integration setup, and incident investigation.\n\nThe operation is restricted to administrative users responsible for maintaining or auditing lab connections, and the returned fields must match the schema definition for lab integrations. The endpoint will return an error response if the labIntegrationId does not exist or is not accessible to the requesting user's organization.","summary":"Get the details of a specific lab integration connector (healthcare_platform_lab_integrations).","authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/labIntegrations/{labIntegrationId}","method":"get","parameters":[{"name":"labIntegrationId","description":"Unique identifier of the lab integration to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full configuration and metadata for the requested lab integration connector.","typeName":"IHealthcarePlatformLabIntegration"},"authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new laboratory integration configuration for an organization. It corresponds to the healthcare_platform_lab_integrations table in the Prisma schema, allowing administrators to register connections to third-party laboratory service providers (such as LabCorp or Quest) for use in lab order routing and result retrieval. The resource includes provider code, connection URI, supported message format, and operational status. Creating a new integration is typically restricted to administrators at the organization level, as this determines connectivity and compliance boundaries for lab workflows.","description":"This operation allows an organization administrator or system administrator to register a new laboratory integration for their organization. Integrations set up through this endpoint will be used for sending and receiving laboratory orders/results, and include required fields for lab provider code, interface URIs, and which structured data/message format the integration supports. All fields entered are subject to validation – provider codes must be unique per organization, and connection URIs should adhere to secure platform patterns. Security: Only staff with appropriate privileges should perform this operation since improper configuration could expose patient data or hinder care. The response contains a detailed object representing the created integration, suitable for audit and technical validation purposes. If duplicate provider codes are submitted, or if required fields are missing, the endpoint returns a validation error.","summary":"Create a new lab provider integration configuration (healthcare_platform_lab_integrations table).","parameters":[],"requestBody":{"description":"Integration configuration for a new external lab provider.","typeName":"IHealthcarePlatformLabIntegration.ICreate"},"responseBody":{"description":"Details of the created laboratory integration configuration, including all properties managed in the healthcare_platform_lab_integrations table.","typeName":"IHealthcarePlatformLabIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/labIntegrations","method":"post"},{"specification":"This operation updates an existing laboratory integration configuration. It targets the healthcare_platform_lab_integrations table by labIntegrationId, permitting changes to fields such as connection URI, provider code, supported message format, and integration status. The update enables organizations to maintain, test, or modify their integration settings with external laboratory service providers as vendors or contracts change.","description":"Using this operation, an organization administrator can update properties of an existing lab integration, modifying aspects such as provider API endpoints or status flags. The operation enforces business rules – for example, changes to provider codes must remain unique within the organization. The endpoint validates all fields and only allows updates on active (non-deleted) records. Updates are logged for audit traceability. Security: Only administrators with organizational or higher privileges may perform integration updates. Attempting to update a non-existent or deleted integration returns a not-found or forbidden error. Business impact: Adjusting integration endpoints may immediately affect lab order flows and result delivery, so use with caution and coordinate with involved clinical staff as needed.","summary":"Update a specific organization's laboratory integration configuration (healthcare_platform_lab_integrations table).","parameters":[{"name":"labIntegrationId","description":"Unique identifier of the laboratory integration to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New configuration values for the laboratory integration.","typeName":"IHealthcarePlatformLabIntegration.IUpdate"},"responseBody":{"description":"Integration configuration after the update, reflecting all current field values in the healthcare_platform_lab_integrations table.","typeName":"IHealthcarePlatformLabIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/labIntegrations/{labIntegrationId}","method":"put"},{"specification":"This operation deletes (soft-deletes) a specific laboratory integration associated with an organization. Targeting the healthcare_platform_lab_integrations table, it marks the specified labIntegrationId as logically deleted by setting the deleted_at field, preserving the record for regulatory and audit purposes. The actual configuration and past usage remain in the database for compliance, but the integration is deactivated and excluded from active workflows.","description":"This operation enables an organization administrator to soft-delete a laboratory integration, which disables the connection for future lab order workflows while retaining all previous records for compliance. The deletion is reversable by restoring the deleted_at timestamp via internal processes. Only non-deleted records may be marked as deleted, and business rules prevent hard deletion to ensure retention for audit and traceability. Any attempt to delete an already deleted or non-existent record results in an error. Only administrators are permitted to delete integrations, reflecting the sensitivity of disabling external laboratory communications.","summary":"Soft-delete an organization's laboratory integration (healthcare_platform_lab_integrations table).","parameters":[{"name":"labIntegrationId","description":"Unique identifier of the laboratory integration to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/labIntegrations/{labIntegrationId}","method":"delete"},{"specification":"This operation returns a filtered, paginated list of laboratory order transactions for administrative or reporting uses. Aligned with the healthcare_platform_lab_order_transactions table in the Prisma schema, it provides searching and filtering by organization, lab provider, transaction status, and relevant timestamps. Useful for compliance audit, troubleshooting, and operational review of all third-party lab order submissions.","description":"The endpoint supports complex search and reporting on all lab order submission events within the system. Administrators and authorized staff can filter by organization, lab integration, order status, time boundaries, and more. Pagination and sorting are provided for large result sets. Only administrators and authorized technical support users should access this endpoint, as the data can include PHI, audit information, and delivery telemetry important to laboratory workflows. The operation returns a paginated result structure, and integrates with the system's broader reporting and troubleshooting infrastructure. Validation ensures only accessible and non-deleted records are returned, and filters are sanitized for system security.","summary":"Retrieve/search laboratory order transactions with advanced filters and pagination (healthcare_platform_lab_order_transactions table).","parameters":[],"requestBody":{"description":"Search and filter criteria for querying lab order transactions.","typeName":"IHealthcarePlatformLabOrderTransaction.IRequest"},"responseBody":{"description":"Paginated list of lab order transactions matching the request criteria.","typeName":"IPageIHealthcarePlatformLabOrderTransaction"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/labOrderTransactions","method":"patch"},{"specification":"This operation retrieves a specific laboratory order transmission record based on its unique identifier, as defined in the healthcare_platform_lab_order_transactions table. It enables clients to access the metadata, status, and transmission history of an outbound lab order sent by the healthcare organization to an integrated laboratory provider. Consumers of this API are typically staff or clinical system users tasked with tracking the lifecycle, audit status, or troubleshooting of individual lab order transactions.","description":"Retrieve a detailed laboratory order transaction record using the unique labOrderTransactionId. This information is vital for verifying the status, timestamps (requested, transmitted, acknowledged), error or status messages, and reconciliation with upstream lab systems. The operation references the healthcare_platform_lab_order_transactions Prisma schema, which includes fields for organization, lab integration, and external references.   \n\nAPI consumers must possess appropriate roles (such as staff assigned to the organization) due to the presence of sensitive audit and operational data. Security controls should align with organizational RBAC policies and audit requirements. Laboratories, compliance officers, and technical teams may use this API for diagnostics and regulatory traceability.   \n\nIn case the transaction is not found or the provided identifier is invalid, the API will return a standard not-found or validation error. Errors in underlying integration (such as network or authentication errors with the lab system) will surface through status and message fields, aiding in troubleshooting. This endpoint works in conjunction with broader query endpoints for lab order transaction search, reporting, and analytics.","summary":"Get a specific lab order transaction detail by labOrderTransactionId (healthcare_platform_lab_order_transactions table)","parameters":[{"name":"labOrderTransactionId","description":"Lab order transaction record's unique identifier (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information about the target lab order transaction, including status, metadata, and transmission audit.","typeName":"IHealthcarePlatformLabOrderTransaction"},"authorizationRoles":["organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/labOrderTransactions/{labOrderTransactionId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated list of lab result import transactions using advanced search, filter, and sort criteria. It is based on the healthcare_platform_lab_result_imports table, enabling organizations to monitor or audit inbound lab result data files, import events, parsing outcomes, and linkages to patient/clinical records. Supports operational oversight, error analysis, and compliance.","description":"Search, filter, and paginate through laboratory result import records. The endpoint provides healthcare organizations with a robust interface for tracking every inbound laboratory result file or message, as described by the healthcare_platform_lab_result_imports Prisma schema. This includes details such as the linked organization, lab integration, import timestamp, parsing outcomes, and error diagnostics.   \n\nAdvanced search parameters may include organization or lab integration ID, parsed status, import date ranges, or error strings, supporting operational analytics and audit investigations. The API is secured for access only by authorized staff with organization-level permissions, as the data often contains sensitive process metadata.   \n\nThis endpoint complements single-record retrieval APIs and supports batch review of lab data import health, error patterns, and facilitates root cause analysis when integration problems arise. Errors in filter criteria result in parameter validation responses, and proper pagination ensures system scalability.","summary":"List & search lab result imports with filtering, pagination, and error diagnostics (healthcare_platform_lab_result_imports table)","parameters":[],"requestBody":{"description":"Filtering, pagination, and advanced query criteria for lab result imports.","typeName":"IHealthcarePlatformLabResultImport.IRequest"},"responseBody":{"description":"Paginated result of lab result import events matching search criteria.","typeName":"IPageIHealthcarePlatformLabResultImport"},"authorizationRoles":["organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/labResultImports","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the details of a specific lab result import record, as represented in the healthcare_platform_lab_result_imports table. It supports operational troubleshooting, integration monitoring, and regulatory audit use cases, as it returns metadata, timestamps, parsing results, and error details for an individual imported laboratory report or data payload.","description":"Fetch a detailed laboratory result import record by its unique labResultImportId. This endpoint gives administrators, integration engineers, and compliance officers precise information about the import event—covering the raw payload reference, lab integration, imported timestamp, parsing status and message, and linkage to broader analytics or audit flows. \n\nControls are enforced for authorized organization staff only, as import logs may reference PHI or regulated audit data. The endpoint supports troubleshooting of import failures, root cause analysis for integration gaps, and helps trace data lineage for investigations.   \n\nRelated endpoints for batch import query or processing work together for comprehensive integration visibility. Errors in lookup or permission result in standard error responses, supporting operational and compliance transparency.","summary":"Get a single lab result import by labResultImportId (healthcare_platform_lab_result_imports table)","parameters":[{"name":"labResultImportId","description":"Lab result import record's unique identifier (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed lab result import metadata and parsing outcome.","typeName":"IHealthcarePlatformLabResultImport"},"authorizationRoles":["organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/labResultImports/{labResultImportId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of configured pharmacy integration connectors for a healthcare organization (see healthcare_platform_pharmacy_integrations schema). The API supports operational discovery, health checks, integration audits, and compliance reviews for e-prescribing and networked pharmacy workflows. Query parameters control organization context, integration status, vendor, and protocol.","description":"Query and paginate pharmacy integration configurations for a healthcare organization. The endpoint returns connector records as defined in the healthcare_platform_pharmacy_integrations schema, including vendor identifier, connection URI, supported communication protocol, operational status, and audit timestamps. \n\nThis API assists administrators, compliance staff, and operations teams in verifying the readiness and health of pharmacy integrations, tracking which vendors are configured, and diagnosing network or credential issues.   \n\nFilters and pagination parameters support large/complex organizations, and only users with administrative role for the organization can access results, preserving compliance with integration configuration sensitivity. The endpoint fits into a broader suite of integration management and audit APIs.","summary":"Search and list pharmacy integration connectors for an organization (healthcare_platform_pharmacy_integrations table)","parameters":[],"requestBody":{"description":"Filter and pagination parameters for pharmacy integration configuration search.","typeName":"IHealthcarePlatformPharmacyIntegration.IRequest"},"responseBody":{"description":"Paginated result of pharmacy integration configuration records for the organization.","typeName":"IPageIHealthcarePlatformPharmacyIntegration"},"authorizationRoles":["organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/pharmacyIntegrations","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Retrieve the details for a specific pharmacy integration. This operation queries the healthcare_platform_pharmacy_integrations table and returns all relevant information for the pharmacy integration identified by pharmacyIntegrationId. Fields include connector type, connection URI, protocol, and status. It is used to display configuration, operational linkage, or health status for a pharmacy connection within an organization. Only staff or admins with the relevant permission should have access to this data, as it may include sensitive connector information.","description":"This operation returns all configuration details for the given pharmacy integration record, as defined in the healthcare_platform_pharmacy_integrations table. The primary purpose is to enable organization administrators or IT/security staff to view provider credentials, endpoint URIs, communication protocols, and status for integration with external pharmacy systems such as Surescripts or NCPDP. \n\nWith a valid pharmacyIntegrationId, the endpoint returns information including the pharmacy vendor code, connection URI, supported protocol, and the operational status of the integration. It does not expose or return sensitive secrets, only connection metadata and linkage for deployment and monitoring.\n\nAccess is restricted to users with configuration or integration management privileges—typically orgAdmin or systemAdmin. Unauthorized users will receive an access denied response with a corresponding audit log entry. The endpoint will validate the pharmacyIntegrationId as a UUID and return a 404 error if not found. Integrations that are logically deleted (soft deleted via deleted_at) are excluded unless specifically requested by audit workflows.","summary":"Get configuration details for a specific pharmacy integration by ID (healthcare_platform_pharmacy_integrations)","parameters":[{"name":"pharmacyIntegrationId","description":"Unique identifier of the pharmacy integration record (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Pharmacy integration details including connector type, URI, supported protocol, and status.","typeName":"IHealthcarePlatformPharmacyIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/pharmacyIntegrations/{pharmacyIntegrationId}","method":"get"},{"specification":"Retrieve the details for a specific pharmacy integration. This operation queries the healthcare_platform_pharmacy_integrations table and returns all relevant information for the pharmacy integration identified by pharmacyIntegrationId. Fields include connector type, connection URI, protocol, and status. It is used to display configuration, operational linkage, or health status for a pharmacy connection within an organization. Only staff or admins with the relevant permission should have access to this data, as it may include sensitive connector information.","description":"This operation returns all configuration details for the given pharmacy integration record, as defined in the healthcare_platform_pharmacy_integrations table. The primary purpose is to enable organization administrators or IT/security staff to view provider credentials, endpoint URIs, communication protocols, and status for integration with external pharmacy systems such as Surescripts or NCPDP. \n\nWith a valid pharmacyIntegrationId, the endpoint returns information including the pharmacy vendor code, connection URI, supported protocol, and the operational status of the integration. It does not expose or return sensitive secrets, only connection metadata and linkage for deployment and monitoring.\n\nAccess is restricted to users with configuration or integration management privileges—typically orgAdmin or systemAdmin. Unauthorized users will receive an access denied response with a corresponding audit log entry. The endpoint will validate the pharmacyIntegrationId as a UUID and return a 404 error if not found. Integrations that are logically deleted (soft deleted via deleted_at) are excluded unless specifically requested by audit workflows.","summary":"Get configuration details for a specific pharmacy integration by ID (healthcare_platform_pharmacy_integrations)","parameters":[{"name":"pharmacyIntegrationId","description":"Unique identifier of the pharmacy integration record (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Pharmacy integration details including connector type, URI, supported protocol, and status.","typeName":"IHealthcarePlatformPharmacyIntegration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/pharmacyIntegrations/{pharmacyIntegrationId}","method":"get"},{"specification":"Create a new pharmacy integration configuration. This operation is associated with the healthcare_platform_pharmacy_integrations table. It writes a new record linking the organization to a pharmacy network integration, accepting all connection and operational configuration fields as input in IHealthcarePlatformPharmacyIntegration.ICreate. Used to onboard a new pharmacy provider or e-prescribe partner integration for a healthcare organization.","description":"This operation creates a new row in the healthcare_platform_pharmacy_integrations table, representing a new pharmacy network or e-prescribing integration for the organization. The request body must include all required configuration properties, such as the pharmacy vendor code, connection URI, protocol, and operational status. \n\nThis API is typically called by an organizationAdmin or a systemAdmin when onboarding a new pharmacy network (such as Surescripts or NCPDP) or configuring access to a custom or partner pharmacy provider for prescription workflows. \n\nThe system validates input for uniqueness per organization and pharmacy_vendor_code, prevents duplicate active connectors, and ensures field constraints such as connection URI format and allowed protocol types are met. Any audit or compliance triggers (such as change tracking for regulated connections) are enforced in provider logic. \n\nError responses include validation failure (400), duplication (409), and insufficient permission (403). Newly created integrations are available for immediate use, but full connectivity status may be pending external validation or credentialing steps. Sensitive credentials are not directly stored in this table, only connection metadata and mapping. All actions are audit-logged for security and compliance traceability.","summary":"Create a new pharmacy integration for the organization (healthcare_platform_pharmacy_integrations)","parameters":[],"requestBody":{"description":"Pharmacy integration configuration and connection details","typeName":"IHealthcarePlatformPharmacyIntegration.ICreate"},"responseBody":{"description":"The created pharmacy integration object, including all connection configuration fields.","typeName":"IHealthcarePlatformPharmacyIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/pharmacyIntegrations","method":"post"},{"specification":"Create a new pharmacy integration configuration. This operation is associated with the healthcare_platform_pharmacy_integrations table. It writes a new record linking the organization to a pharmacy network integration, accepting all connection and operational configuration fields as input in IHealthcarePlatformPharmacyIntegration.ICreate. Used to onboard a new pharmacy provider or e-prescribe partner integration for a healthcare organization.","description":"This operation creates a new row in the healthcare_platform_pharmacy_integrations table, representing a new pharmacy network or e-prescribing integration for the organization. The request body must include all required configuration properties, such as the pharmacy vendor code, connection URI, protocol, and operational status. \n\nThis API is typically called by an organizationAdmin or a systemAdmin when onboarding a new pharmacy network (such as Surescripts or NCPDP) or configuring access to a custom or partner pharmacy provider for prescription workflows. \n\nThe system validates input for uniqueness per organization and pharmacy_vendor_code, prevents duplicate active connectors, and ensures field constraints such as connection URI format and allowed protocol types are met. Any audit or compliance triggers (such as change tracking for regulated connections) are enforced in provider logic. \n\nError responses include validation failure (400), duplication (409), and insufficient permission (403). Newly created integrations are available for immediate use, but full connectivity status may be pending external validation or credentialing steps. Sensitive credentials are not directly stored in this table, only connection metadata and mapping. All actions are audit-logged for security and compliance traceability.","summary":"Create a new pharmacy integration for the organization (healthcare_platform_pharmacy_integrations)","parameters":[],"requestBody":{"description":"Pharmacy integration configuration and connection details","typeName":"IHealthcarePlatformPharmacyIntegration.ICreate"},"responseBody":{"description":"The created pharmacy integration object, including all connection configuration fields.","typeName":"IHealthcarePlatformPharmacyIntegration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/pharmacyIntegrations","method":"post"},{"specification":"Update configuration details for a specific pharmacy integration. This operation belongs to the healthcare_platform_pharmacy_integrations table and updates connection, protocol, or operational fields of an existing pharmacy integration record. Used to change endpoint URIs, update status, modify provider code, or adjust protocol settings for a pharmacy connection associated with an organization.","description":"This operation updates the specified pharmacy integration record, as identified by pharmacyIntegrationId, in the healthcare_platform_pharmacy_integrations table. The request body includes new configuration values such as updated endpoint URI, protocol, status, or vendor code. \n\nIt is used by organization or system administrators when pharmacy network partners change protocols, connection settings, or undergo operational changes. Inputs are validated for allowed values, URI correctness, and duplicate active status (cannot activate the same pharmacy_vendor_code/integration more than once per organization).\n\nThe operation enforces audit logging and may trigger compliance notifications if changes affect regulated connectivity or impact e-prescribing workflows. Unauthorized or insufficient permission attempts are denied with appropriate error responses. Soft-deleted integrations cannot be updated unless restored first. A successful update returns the new configuration object; operations are subject to all normal validation and business logic constraints.","summary":"Update a pharmacy integration by ID (healthcare_platform_pharmacy_integrations)","parameters":[{"name":"pharmacyIntegrationId","description":"Unique identifier of the pharmacy integration record (UUID) to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the pharmacy integration","typeName":"IHealthcarePlatformPharmacyIntegration.IUpdate"},"responseBody":{"description":"The updated pharmacy integration connection metadata and configuration details.","typeName":"IHealthcarePlatformPharmacyIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/pharmacyIntegrations/{pharmacyIntegrationId}","method":"put"},{"specification":"Update configuration details for a specific pharmacy integration. This operation belongs to the healthcare_platform_pharmacy_integrations table and updates connection, protocol, or operational fields of an existing pharmacy integration record. Used to change endpoint URIs, update status, modify provider code, or adjust protocol settings for a pharmacy connection associated with an organization.","description":"This operation updates the specified pharmacy integration record, as identified by pharmacyIntegrationId, in the healthcare_platform_pharmacy_integrations table. The request body includes new configuration values such as updated endpoint URI, protocol, status, or vendor code. \n\nIt is used by organization or system administrators when pharmacy network partners change protocols, connection settings, or undergo operational changes. Inputs are validated for allowed values, URI correctness, and duplicate active status (cannot activate the same pharmacy_vendor_code/integration more than once per organization).\n\nThe operation enforces audit logging and may trigger compliance notifications if changes affect regulated connectivity or impact e-prescribing workflows. Unauthorized or insufficient permission attempts are denied with appropriate error responses. Soft-deleted integrations cannot be updated unless restored first. A successful update returns the new configuration object; operations are subject to all normal validation and business logic constraints.","summary":"Update a pharmacy integration by ID (healthcare_platform_pharmacy_integrations)","parameters":[{"name":"pharmacyIntegrationId","description":"Unique identifier of the pharmacy integration record (UUID) to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the pharmacy integration","typeName":"IHealthcarePlatformPharmacyIntegration.IUpdate"},"responseBody":{"description":"The updated pharmacy integration connection metadata and configuration details.","typeName":"IHealthcarePlatformPharmacyIntegration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/pharmacyIntegrations/{pharmacyIntegrationId}","method":"put"},{"specification":"Delete (soft-delete) a pharmacy integration configuration in the healthcare_platform_pharmacy_integrations table. Marks the record as deleted by populating the deleted_at field (soft-delete for compliance preservation). Removes integration from active use for e-prescribing, connection health checks, or system integration flows.","description":"This operation marks a pharmacy integration as deleted by setting its deleted_at timestamp to the current time, as performed in the healthcare_platform_pharmacy_integrations table. No physical data is removed, preserving the configuration for compliance audit and recovery if necessary. \n\nOnly organizationAdmin or systemAdmin roles may delete a pharmacy integration; other access attempts are denied with a 403 error and audit log entry. Deleting an integration immediately removes it from all active connection, e-prescribe, and sync workflows, and may propagate disconnect or alert actions elsewhere in the system. Attempts to delete already-deleted or non-existent records result in a 404 Not Found error.\n\nHard physical deletion is not permitted by compliance policy; this operation performs a soft delete only (institutional record retention enforcement). All deletes are audit-logged, and associated credential/secrets storage should be invalidated elsewhere as needed. Recovery of deleted configurations may require additional compliance workflow steps.","summary":"Soft-delete a pharmacy integration by ID (healthcare_platform_pharmacy_integrations)","parameters":[{"name":"pharmacyIntegrationId","description":"Unique identifier of the pharmacy integration record (UUID) to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/pharmacyIntegrations/{pharmacyIntegrationId}","method":"delete"},{"specification":"Delete (soft-delete) a pharmacy integration configuration in the healthcare_platform_pharmacy_integrations table. Marks the record as deleted by populating the deleted_at field (soft-delete for compliance preservation). Removes integration from active use for e-prescribing, connection health checks, or system integration flows.","description":"This operation marks a pharmacy integration as deleted by setting its deleted_at timestamp to the current time, as performed in the healthcare_platform_pharmacy_integrations table. No physical data is removed, preserving the configuration for compliance audit and recovery if necessary. \n\nOnly organizationAdmin or systemAdmin roles may delete a pharmacy integration; other access attempts are denied with a 403 error and audit log entry. Deleting an integration immediately removes it from all active connection, e-prescribe, and sync workflows, and may propagate disconnect or alert actions elsewhere in the system. Attempts to delete already-deleted or non-existent records result in a 404 Not Found error.\n\nHard physical deletion is not permitted by compliance policy; this operation performs a soft delete only (institutional record retention enforcement). All deletes are audit-logged, and associated credential/secrets storage should be invalidated elsewhere as needed. Recovery of deleted configurations may require additional compliance workflow steps.","summary":"Soft-delete a pharmacy integration by ID (healthcare_platform_pharmacy_integrations)","parameters":[{"name":"pharmacyIntegrationId","description":"Unique identifier of the pharmacy integration record (UUID) to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/pharmacyIntegrations/{pharmacyIntegrationId}","method":"delete"},{"specification":"This operation retrieves a filtered, paginated list of pharmacy transaction records for the healthcarePlatform system. It supports searching, filtering, and sorting across properties of the healthcare_platform_pharmacy_transactions table, making it suitable for operational review, troubleshooting, and compliance workflows. This endpoint is essential for analyzing transaction outcomes with integrated pharmacies, reviewing communication history, and handling error or escalation cases. The response provides full detail per transaction, including linkage to organization, pharmacy integration, transaction type, statuses, timing, and audit metadata, but does NOT include any modification or write operations as pharmacy transactions are created solely by system workflows or integrations.","path":"/healthcarePlatform/systemAdmin/pharmacyTransactions","method":"patch","summary":"Retrieve filtered and paginated list of pharmacy transactions (healthcare_platform_pharmacy_transactions)","description":"Retrieve a filtered, paginated, and optionally sorted list of pharmacy transaction records from the healthcare_platform_pharmacy_transactions table.\n\nThis endpoint supports advanced searching by transaction type, status, creation window, pharmacy integration, or other properties to enable audit, compliance, and troubleshooting workflows for healthcare organizations. Only authorized administrative or system users can retrieve this information due to the sensitivity of pharmacy-related data and integration metadata.\n\nThe operation returns complete transaction details for each record, including organization link, pharmacy integration ID, transaction type (e.g., 'new eRx', 'refill', etc.), transaction statuses and timestamps, error or status messages, and full audit metadata. No write or modification capability is exposed in this endpoint—transaction creation, modification, or error handling is exclusively system- or integration-driven.\n\nPagination parameters ensure efficient retrieval of large volumes of transaction logs, and the response includes metadata about total counts, page sizes, and current page for optimal UI/UX integration. This endpoint is critical for API-level integration troubleshooting, audit trail completion, and pharmacy workflow analytics.\n\nTypical users of this endpoint are platform/system administrators, organization admins, or integration operations analysts who require comprehensive review or search capabilities for all pharmacy transaction records associated with their tenant.","parameters":[],"requestBody":{"description":"Search filters and pagination/sorting criteria for pharmacy transaction query.","typeName":"IHealthcarePlatformPharmacyTransaction.IRequest"},"responseBody":{"description":"Paginated list of pharmacy transaction records and summary metadata.","typeName":"IPageIHealthcarePlatformPharmacyTransaction"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of pharmacy transaction records for the healthcarePlatform system. It supports searching, filtering, and sorting across properties of the healthcare_platform_pharmacy_transactions table, making it suitable for operational review, troubleshooting, and compliance workflows. This endpoint is essential for analyzing transaction outcomes with integrated pharmacies, reviewing communication history, and handling error or escalation cases. The response provides full detail per transaction, including linkage to organization, pharmacy integration, transaction type, statuses, timing, and audit metadata, but does NOT include any modification or write operations as pharmacy transactions are created solely by system workflows or integrations.","path":"/healthcarePlatform/organizationAdmin/pharmacyTransactions","method":"patch","summary":"Retrieve filtered and paginated list of pharmacy transactions (healthcare_platform_pharmacy_transactions)","description":"Retrieve a filtered, paginated, and optionally sorted list of pharmacy transaction records from the healthcare_platform_pharmacy_transactions table.\n\nThis endpoint supports advanced searching by transaction type, status, creation window, pharmacy integration, or other properties to enable audit, compliance, and troubleshooting workflows for healthcare organizations. Only authorized administrative or system users can retrieve this information due to the sensitivity of pharmacy-related data and integration metadata.\n\nThe operation returns complete transaction details for each record, including organization link, pharmacy integration ID, transaction type (e.g., 'new eRx', 'refill', etc.), transaction statuses and timestamps, error or status messages, and full audit metadata. No write or modification capability is exposed in this endpoint—transaction creation, modification, or error handling is exclusively system- or integration-driven.\n\nPagination parameters ensure efficient retrieval of large volumes of transaction logs, and the response includes metadata about total counts, page sizes, and current page for optimal UI/UX integration. This endpoint is critical for API-level integration troubleshooting, audit trail completion, and pharmacy workflow analytics.\n\nTypical users of this endpoint are platform/system administrators, organization admins, or integration operations analysts who require comprehensive review or search capabilities for all pharmacy transaction records associated with their tenant.","parameters":[],"requestBody":{"description":"Search filters and pagination/sorting criteria for pharmacy transaction query.","typeName":"IHealthcarePlatformPharmacyTransaction.IRequest"},"responseBody":{"description":"Paginated list of pharmacy transaction records and summary metadata.","typeName":"IPageIHealthcarePlatformPharmacyTransaction"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a single pharmacy transaction record from the healthcare_platform_pharmacy_transactions table by its unique transaction ID. The returned record contains all audit and business metadata associated with the pharmacy transaction, including organization reference, pharmacy integration, transaction type, full status history, and error or message details. This endpoint is critical for deep troubleshooting, compliance, and integration error analysis but does NOT permit any write, creation, or modification operations, as pharmacy transactions are managed solely by system workflows or integration logic.","path":"/healthcarePlatform/systemAdmin/pharmacyTransactions/{pharmacyTransactionId}","method":"get","summary":"Retrieve details for a single pharmacy transaction (healthcare_platform_pharmacy_transactions)","description":"Retrieve the detail for a specific pharmacy transaction record in the healthcare_platform_pharmacy_transactions table using its unique identifier.\n\nThis endpoint provides all available details about the pharmacy transaction, including organization context, pharmacy integration link, transaction type (e.g., 'new eRx', 'refill', etc.), external transaction ID, full status and message logs, all relevant timestamps, payload reference, and audit metadata.\n\nSecurity and privacy controls ensure that only system, administrative, or organization-level users can access this endpoint, as pharmacy transaction data is considered highly sensitive and operationally critical.\n\nNo updates, deletion, or modifications can be performed via this endpoint—data is read-only and reflects the system/integration managed history for the life of the record. This endpoint is used in operational troubleshooting, integration audit, and compliance workflows for pharmacy and e-prescribing operations.","parameters":[{"name":"pharmacyTransactionId","description":"Unique identifier for the pharmacy transaction record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified pharmacy transaction record.","typeName":"IHealthcarePlatformPharmacyTransaction"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a single pharmacy transaction record from the healthcare_platform_pharmacy_transactions table by its unique transaction ID. The returned record contains all audit and business metadata associated with the pharmacy transaction, including organization reference, pharmacy integration, transaction type, full status history, and error or message details. This endpoint is critical for deep troubleshooting, compliance, and integration error analysis but does NOT permit any write, creation, or modification operations, as pharmacy transactions are managed solely by system workflows or integration logic.","path":"/healthcarePlatform/organizationAdmin/pharmacyTransactions/{pharmacyTransactionId}","method":"get","summary":"Retrieve details for a single pharmacy transaction (healthcare_platform_pharmacy_transactions)","description":"Retrieve the detail for a specific pharmacy transaction record in the healthcare_platform_pharmacy_transactions table using its unique identifier.\n\nThis endpoint provides all available details about the pharmacy transaction, including organization context, pharmacy integration link, transaction type (e.g., 'new eRx', 'refill', etc.), external transaction ID, full status and message logs, all relevant timestamps, payload reference, and audit metadata.\n\nSecurity and privacy controls ensure that only system, administrative, or organization-level users can access this endpoint, as pharmacy transaction data is considered highly sensitive and operationally critical.\n\nNo updates, deletion, or modifications can be performed via this endpoint—data is read-only and reflects the system/integration managed history for the life of the record. This endpoint is used in operational troubleshooting, integration audit, and compliance workflows for pharmacy and e-prescribing operations.","parameters":[{"name":"pharmacyTransactionId","description":"Unique identifier for the pharmacy transaction record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified pharmacy transaction record.","typeName":"IHealthcarePlatformPharmacyTransaction"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of insurance API integration configurations for the healthcarePlatform system. It supports searching, filtering, and sorting across properties of the healthcare_platform_insurance_api_integrations table, making it suitable for operational review, troubleshooting, and audit. This data is used in the context of managing payer integrations, monitoring connection health and configuration, and validating operational readiness. The response provides full details per integration, including API URIs, vendor codes, supported transaction types, and status, but does NOT support creation or write operations via this endpoint.","path":"/healthcarePlatform/systemAdmin/insuranceApiIntegrations","method":"patch","summary":"Retrieve filtered and paginated list of insurance API integrations (healthcare_platform_insurance_api_integrations)","description":"Retrieve a filtered, paginated, and optionally sorted list of insurance API integration configuration records from the healthcare_platform_insurance_api_integrations table.\n\nThis endpoint supports advanced searching by integration type, status, organization, supported transaction types, or other properties to enable audit, compliance, and troubleshooting of insurance-related workflows and payer data exchange setups. Only authorized administrative or system users can retrieve this information due to the sensitivity of payer integration metadata and API secrets.\n\nThe operation returns configuration details, including unique connection URIs, insurance vendor codes, status, and supported transaction types for each integration. No write, update, or delete operation is supported in this endpoint: integration creation and modification are managed through restricted or back-office workflows outside this API.\n\nPagination parameters allow efficient access and display of many configuration records with summary metadata. This endpoint is critical for compliance, payer integration monitoring, and operational readiness reviews for both system and organization administrators.","parameters":[],"requestBody":{"description":"Search filters and pagination/sorting criteria for insurance API integration query.","typeName":"IHealthcarePlatformInsuranceApiIntegration.IRequest"},"responseBody":{"description":"Paginated list of insurance API integration configurations and summary metadata.","typeName":"IPageIHealthcarePlatformInsuranceApiIntegration"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of insurance API integration configurations for the healthcarePlatform system. It supports searching, filtering, and sorting across properties of the healthcare_platform_insurance_api_integrations table, making it suitable for operational review, troubleshooting, and audit. This data is used in the context of managing payer integrations, monitoring connection health and configuration, and validating operational readiness. The response provides full details per integration, including API URIs, vendor codes, supported transaction types, and status, but does NOT support creation or write operations via this endpoint.","path":"/healthcarePlatform/organizationAdmin/insuranceApiIntegrations","method":"patch","summary":"Retrieve filtered and paginated list of insurance API integrations (healthcare_platform_insurance_api_integrations)","description":"Retrieve a filtered, paginated, and optionally sorted list of insurance API integration configuration records from the healthcare_platform_insurance_api_integrations table.\n\nThis endpoint supports advanced searching by integration type, status, organization, supported transaction types, or other properties to enable audit, compliance, and troubleshooting of insurance-related workflows and payer data exchange setups. Only authorized administrative or system users can retrieve this information due to the sensitivity of payer integration metadata and API secrets.\n\nThe operation returns configuration details, including unique connection URIs, insurance vendor codes, status, and supported transaction types for each integration. No write, update, or delete operation is supported in this endpoint: integration creation and modification are managed through restricted or back-office workflows outside this API.\n\nPagination parameters allow efficient access and display of many configuration records with summary metadata. This endpoint is critical for compliance, payer integration monitoring, and operational readiness reviews for both system and organization administrators.","parameters":[],"requestBody":{"description":"Search filters and pagination/sorting criteria for insurance API integration query.","typeName":"IHealthcarePlatformInsuranceApiIntegration.IRequest"},"responseBody":{"description":"Paginated list of insurance API integration configurations and summary metadata.","typeName":"IPageIHealthcarePlatformInsuranceApiIntegration"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a single insurance API integration configuration from the healthcare_platform_insurance_api_integrations table using its unique integration ID. The returned record contains all configuration, connection, and audit metadata for the insurance API integration, including payer/vendor code, endpoint URI, supported transaction types, current status, and history. This endpoint is essential for monitoring payer connectivity, troubleshooting configuration or status issues, and supporting compliance audit workflows. It is strictly read-only: insurance API integration configuration can only be updated through back-office or system-managed processes, not via this API.","path":"/healthcarePlatform/systemAdmin/insuranceApiIntegrations/{insuranceApiIntegrationId}","method":"get","summary":"Retrieve details for a single insurance API integration (healthcare_platform_insurance_api_integrations)","description":"Retrieve the detail for a single insurance API integration configuration from the healthcare_platform_insurance_api_integrations table using its unique identifier.\n\nThis endpoint provides comprehensive detail on the insurance API integration, including organization reference, payer/vendor code, connection URI, supported transaction types (e.g., eligibility, claims, realtime), current status, and configuration change/audit history if applicable.\n\nThese records are highly sensitive and must be restricted to administrative or back-office user roles due to the presence of API credentials or security-relevant metadata; access is not available to general users. All configuration management or change workflows are managed outside this API: usage here is strictly read-only for operational review, troubleshooting, or audit.\n\nThis endpoint supports compliance requirements, integration lifecycle management, and system health monitoring for insurance API integrations across the multi-tenant environment.","parameters":[{"name":"insuranceApiIntegrationId","description":"Unique identifier for the insurance API integration record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified insurance API integration record.","typeName":"IHealthcarePlatformInsuranceApiIntegration"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a single insurance API integration configuration from the healthcare_platform_insurance_api_integrations table using its unique integration ID. The returned record contains all configuration, connection, and audit metadata for the insurance API integration, including payer/vendor code, endpoint URI, supported transaction types, current status, and history. This endpoint is essential for monitoring payer connectivity, troubleshooting configuration or status issues, and supporting compliance audit workflows. It is strictly read-only: insurance API integration configuration can only be updated through back-office or system-managed processes, not via this API.","path":"/healthcarePlatform/organizationAdmin/insuranceApiIntegrations/{insuranceApiIntegrationId}","method":"get","summary":"Retrieve details for a single insurance API integration (healthcare_platform_insurance_api_integrations)","description":"Retrieve the detail for a single insurance API integration configuration from the healthcare_platform_insurance_api_integrations table using its unique identifier.\n\nThis endpoint provides comprehensive detail on the insurance API integration, including organization reference, payer/vendor code, connection URI, supported transaction types (e.g., eligibility, claims, realtime), current status, and configuration change/audit history if applicable.\n\nThese records are highly sensitive and must be restricted to administrative or back-office user roles due to the presence of API credentials or security-relevant metadata; access is not available to general users. All configuration management or change workflows are managed outside this API: usage here is strictly read-only for operational review, troubleshooting, or audit.\n\nThis endpoint supports compliance requirements, integration lifecycle management, and system health monitoring for insurance API integrations across the multi-tenant environment.","parameters":[{"name":"insuranceApiIntegrationId","description":"Unique identifier for the insurance API integration record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified insurance API integration record.","typeName":"IHealthcarePlatformInsuranceApiIntegration"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation enables creation of a new insurance API integration configuration for a healthcare organization in the platform. It operates on the healthcare_platform_insurance_api_integrations table, which stores per-organization insurance API connection details for real-time eligibility and claims workflows. The operation allows system administrators and organization administrators to configure the insurance vendor, API endpoint URI, supported transaction types, and operational status. This endpoint supports onboarding new payers, maintaining compliance, and extending insurance workflows for tenants. Validation ensures field constraints such as required organization association, unique vendor code per organization, and correct connection URI formatting.","path":"/healthcarePlatform/systemAdmin/insuranceApiIntegrations","method":"post","summary":"Create a new insurance API integration configuration for an organization","description":"Create a new insurance API integration for a specific healthcare organization, providing details such as the insurance vendor code, API connection URI, supported transaction types (e.g., eligibility, claims), and operational status. This operation supports onboarding new insurance vendors or changing integration configuration while ensuring compliance with the organization's boundary and audit requirements.\n\nThe operation enforces data integrity by requiring a unique combination of organization ID and insurance vendor code. Status must be appropriate to the deployment state (active, test, failed, etc), and connection URIs are validated for reachability and standards compliance. Only systemAdmins or organizationAdmins may perform this action, as insurance integrations affect compliance and external communications.\n\nAfter successful creation, the new integration becomes available for workflow automation, including claims and eligibility checks. Failure scenarios include uniqueness violations or invalid configuration, in which case errors detail the required correction.","parameters":[],"requestBody":{"description":"Information required to create an insurance API integration configuration","typeName":"IHealthcarePlatformInsuranceApiIntegration.ICreate"},"responseBody":{"description":"The created insurance API integration configuration object","typeName":"IHealthcarePlatformInsuranceApiIntegration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation enables creation of a new insurance API integration configuration for a healthcare organization in the platform. It operates on the healthcare_platform_insurance_api_integrations table, which stores per-organization insurance API connection details for real-time eligibility and claims workflows. The operation allows system administrators and organization administrators to configure the insurance vendor, API endpoint URI, supported transaction types, and operational status. This endpoint supports onboarding new payers, maintaining compliance, and extending insurance workflows for tenants. Validation ensures field constraints such as required organization association, unique vendor code per organization, and correct connection URI formatting.","path":"/healthcarePlatform/organizationAdmin/insuranceApiIntegrations","method":"post","summary":"Create a new insurance API integration configuration for an organization","description":"Create a new insurance API integration for a specific healthcare organization, providing details such as the insurance vendor code, API connection URI, supported transaction types (e.g., eligibility, claims), and operational status. This operation supports onboarding new insurance vendors or changing integration configuration while ensuring compliance with the organization's boundary and audit requirements.\n\nThe operation enforces data integrity by requiring a unique combination of organization ID and insurance vendor code. Status must be appropriate to the deployment state (active, test, failed, etc), and connection URIs are validated for reachability and standards compliance. Only systemAdmins or organizationAdmins may perform this action, as insurance integrations affect compliance and external communications.\n\nAfter successful creation, the new integration becomes available for workflow automation, including claims and eligibility checks. Failure scenarios include uniqueness violations or invalid configuration, in which case errors detail the required correction.","parameters":[],"requestBody":{"description":"Information required to create an insurance API integration configuration","typeName":"IHealthcarePlatformInsuranceApiIntegration.ICreate"},"responseBody":{"description":"The created insurance API integration configuration object","typeName":"IHealthcarePlatformInsuranceApiIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing insurance API integration configuration for a healthcare organization on the healthcare_platform_insurance_api_integrations table. It allows administrators to modify connection details, supported transaction types, status flag, or other configuration options to facilitate maintenance, switching vendors, or correcting information. It strictly enforces uniqueness of the combination of organization and vendor code, and only administrators with sufficient privileges can perform this action.","path":"/healthcarePlatform/systemAdmin/insuranceApiIntegrations/{insuranceApiIntegrationId}","method":"put","summary":"Update configuration of an existing insurance API integration","description":"Update an existing insurance API integration configuration record, allowing reconfiguration of vendor code, connection URI, supported transaction types, or operational status. This operation ensures that only one integration per vendor per organization exists and prevents accidental overwrites.\n\nSecurity is enforced via administrator-level roles, with write-access limited to systemAdmins and organizationAdmins of the relevant tenant. Invalid input, such as an incorrect URI format or unsupported transaction type, results in actionable validation errors. Configuration changes are immediately auditable in system logs and take effect upon next integration use.\n\nIf an integration is marked as inactive, it is excluded from eligibility or claim submissions until reactivated by administrators.","parameters":[{"name":"insuranceApiIntegrationId","description":"Unique identifier of the insurance API integration to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated configuration for the insurance API integration","typeName":"IHealthcarePlatformInsuranceApiIntegration.IUpdate"},"responseBody":{"description":"The updated insurance API integration configuration object","typeName":"IHealthcarePlatformInsuranceApiIntegration"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation updates an existing insurance API integration configuration for a healthcare organization on the healthcare_platform_insurance_api_integrations table. It allows administrators to modify connection details, supported transaction types, status flag, or other configuration options to facilitate maintenance, switching vendors, or correcting information. It strictly enforces uniqueness of the combination of organization and vendor code, and only administrators with sufficient privileges can perform this action.","path":"/healthcarePlatform/organizationAdmin/insuranceApiIntegrations/{insuranceApiIntegrationId}","method":"put","summary":"Update configuration of an existing insurance API integration","description":"Update an existing insurance API integration configuration record, allowing reconfiguration of vendor code, connection URI, supported transaction types, or operational status. This operation ensures that only one integration per vendor per organization exists and prevents accidental overwrites.\n\nSecurity is enforced via administrator-level roles, with write-access limited to systemAdmins and organizationAdmins of the relevant tenant. Invalid input, such as an incorrect URI format or unsupported transaction type, results in actionable validation errors. Configuration changes are immediately auditable in system logs and take effect upon next integration use.\n\nIf an integration is marked as inactive, it is excluded from eligibility or claim submissions until reactivated by administrators.","parameters":[{"name":"insuranceApiIntegrationId","description":"Unique identifier of the insurance API integration to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated configuration for the insurance API integration","typeName":"IHealthcarePlatformInsuranceApiIntegration.IUpdate"},"responseBody":{"description":"The updated insurance API integration configuration object","typeName":"IHealthcarePlatformInsuranceApiIntegration"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation permanently deletes (hard-deletes) an insurance API integration configuration from the platform, removing all traces of the integration for the target organization. It acts on the healthcare_platform_insurance_api_integrations table and must be exercised with caution as it affects insurance claims and eligibility operations for the tenant. Only high-privilege roles (systemAdmin, organizationAdmin) can perform this operation, and all deletions are recorded for compliance audit purposes.","path":"/healthcarePlatform/systemAdmin/insuranceApiIntegrations/{insuranceApiIntegrationId}","method":"delete","summary":"Permanently delete an insurance API integration configuration","description":"Delete an insurance API integration configuration record from the system. This operation removes the record entirely from the healthcare_platform_insurance_api_integrations table, including connection details and configuration.\n\nDue to the risk of disrupting insurance workflows, delete operations are restricted to systemAdmins and organizationAdmins. Prior to deletion, any associations with outstanding claims or transactions should be reviewed to avoid workflow impact.\n\nThis operation is a hard delete; after execution, the integration cannot be recovered. The action is logged in the audit trail for regulatory compliance.","parameters":[{"name":"insuranceApiIntegrationId","description":"Unique identifier of the insurance API integration to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"This operation permanently deletes (hard-deletes) an insurance API integration configuration from the platform, removing all traces of the integration for the target organization. It acts on the healthcare_platform_insurance_api_integrations table and must be exercised with caution as it affects insurance claims and eligibility operations for the tenant. Only high-privilege roles (systemAdmin, organizationAdmin) can perform this operation, and all deletions are recorded for compliance audit purposes.","path":"/healthcarePlatform/organizationAdmin/insuranceApiIntegrations/{insuranceApiIntegrationId}","method":"delete","summary":"Permanently delete an insurance API integration configuration","description":"Delete an insurance API integration configuration record from the system. This operation removes the record entirely from the healthcare_platform_insurance_api_integrations table, including connection details and configuration.\n\nDue to the risk of disrupting insurance workflows, delete operations are restricted to systemAdmins and organizationAdmins. Prior to deletion, any associations with outstanding claims or transactions should be reviewed to avoid workflow impact.\n\nThis operation is a hard delete; after execution, the integration cannot be recovered. The action is logged in the audit trail for regulatory compliance.","parameters":[{"name":"insuranceApiIntegrationId","description":"Unique identifier of the insurance API integration to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase"},{"specification":"This operation retrieves a paginated, filtered list of medical device data ingestion configurations for organizations from the healthcare_platform_device_data_ingestions table. Device data ingestions are connections for vital monitors, diagnostic devices, or other clinical integrations used to import streaming/device-generated health data. The operation supports advanced querying, sorting, and pagination to support system administrators and organization administrators in managing connected device data sources.","path":"/healthcarePlatform/systemAdmin/deviceDataIngestions","method":"patch","summary":"List device data ingestion integrations with paging and filtering","description":"Retrieve a searchable and paginated list of device data ingestion configurations, filtering by attributes such as organization, device type, protocol, or status. This supports management and inventory of all real-time and streaming health device ingestion points.\n\nSecurity boundaries ensure that only system admins or organization admins with adequate permissions can access and search device ingestion integration data, which may expose sensitive integration endpoints.\n\nSupports sorting and filtering for compliance, incident response, or dashboarding purposes. The operation is critical for enabling safe, audited, and reliable device connectivity throughout the healthcare platform.","parameters":[],"requestBody":{"description":"Search criteria and pagination settings for device data ingestion integrations","typeName":"IHealthcarePlatformDeviceDataIngestion.IRequest"},"responseBody":{"description":"A page of device data ingestion configurations matching filters and paging","typeName":"IPageIHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation retrieves a paginated, filtered list of medical device data ingestion configurations for organizations from the healthcare_platform_device_data_ingestions table. Device data ingestions are connections for vital monitors, diagnostic devices, or other clinical integrations used to import streaming/device-generated health data. The operation supports advanced querying, sorting, and pagination to support system administrators and organization administrators in managing connected device data sources.","path":"/healthcarePlatform/organizationAdmin/deviceDataIngestions","method":"patch","summary":"List device data ingestion integrations with paging and filtering","description":"Retrieve a searchable and paginated list of device data ingestion configurations, filtering by attributes such as organization, device type, protocol, or status. This supports management and inventory of all real-time and streaming health device ingestion points.\n\nSecurity boundaries ensure that only system admins or organization admins with adequate permissions can access and search device ingestion integration data, which may expose sensitive integration endpoints.\n\nSupports sorting and filtering for compliance, incident response, or dashboarding purposes. The operation is critical for enabling safe, audited, and reliable device connectivity throughout the healthcare platform.","parameters":[],"requestBody":{"description":"Search criteria and pagination settings for device data ingestion integrations","typeName":"IHealthcarePlatformDeviceDataIngestion.IRequest"},"responseBody":{"description":"A page of device data ingestion configurations matching filters and paging","typeName":"IPageIHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves the details of a specific device data ingestion configuration in the healthcarePlatform system. It targets the healthcare_platform_device_data_ingestions table and enables retrieval of protocol, endpoint, device type, and operational status for compliance, monitoring, or troubleshooting. Device data ingestions are used for integrating medical devices with the platform via supported protocols, each uniquely identified within an organization. The operation is useful for administrators and technical staff responsible for maintaining medical device integrations, reviewing status, or preparing for troubleshooting or upgrades.","description":"Fetch detailed information for a single device data ingestion configuration from the healthcare_platform_device_data_ingestions table by unique ID.\n\nThis operation allows internal or technical users (such as organization/system administrators or IT personnel) to view all configuration, protocol, endpoint, status, and last-update details of a device data ingestion integration. This includes verifying device/protocol compatibility, investigating operational status, and ensuring that onboarded ingestion endpoints are compliant and up-to-date as required by technical and compliance workflows.\n\nSecurity considerations ensure that only roles with appropriate system or technical privileges can access details of device integrations, as these often impact data ingress, clinical safety, and auditability. The operation is critical for troubleshooting integration failures, preparing compliance reviews, or auditing device configuration records. If the record ID does not exist or is not accessible due to RBAC, an appropriate error or not found message will be returned.","summary":"Retrieve a specific device data ingestion configuration by ID from healthcare_platform_device_data_ingestions table.","parameters":[{"name":"deviceDataIngestionId","description":"Unique identifier (UUID) of the device data ingestion record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the device data ingestion configuration, including endpoint, device type, protocol, and operational status.","typeName":"IHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/deviceDataIngestions/{deviceDataIngestionId}","method":"get"},{"specification":"This operation retrieves the details of a specific device data ingestion configuration in the healthcarePlatform system. It targets the healthcare_platform_device_data_ingestions table and enables retrieval of protocol, endpoint, device type, and operational status for compliance, monitoring, or troubleshooting. Device data ingestions are used for integrating medical devices with the platform via supported protocols, each uniquely identified within an organization. The operation is useful for administrators and technical staff responsible for maintaining medical device integrations, reviewing status, or preparing for troubleshooting or upgrades.","description":"Fetch detailed information for a single device data ingestion configuration from the healthcare_platform_device_data_ingestions table by unique ID.\n\nThis operation allows internal or technical users (such as organization/system administrators or IT personnel) to view all configuration, protocol, endpoint, status, and last-update details of a device data ingestion integration. This includes verifying device/protocol compatibility, investigating operational status, and ensuring that onboarded ingestion endpoints are compliant and up-to-date as required by technical and compliance workflows.\n\nSecurity considerations ensure that only roles with appropriate system or technical privileges can access details of device integrations, as these often impact data ingress, clinical safety, and auditability. The operation is critical for troubleshooting integration failures, preparing compliance reviews, or auditing device configuration records. If the record ID does not exist or is not accessible due to RBAC, an appropriate error or not found message will be returned.","summary":"Retrieve a specific device data ingestion configuration by ID from healthcare_platform_device_data_ingestions table.","parameters":[{"name":"deviceDataIngestionId","description":"Unique identifier (UUID) of the device data ingestion record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the device data ingestion configuration, including endpoint, device type, protocol, and operational status.","typeName":"IHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/deviceDataIngestions/{deviceDataIngestionId}","method":"get"},{"specification":"This operation creates a new device data ingestion configuration for integrating medical devices with the healthcarePlatform system. It operates on the healthcare_platform_device_data_ingestions table, allowing administrators to define the endpoint URI, device type, supported protocol, and operational status. The new ingestion endpoint enables the platform to receive, process, and monitor streaming or batch data from medical devices, supporting regulatory, compliance, and analytics use cases.","description":"Create a new device data ingestion configuration in the healthcare_platform_device_data_ingestions table.\n\nThis operation is intended for technical administrators or platform owners to onboard a new data source or medical device. Users provide all required configuration parameters such as the organization, device type (e.g., vital_monitor, ECG), endpoint URI, protocol, and any other required operational settings. Once created, this record enables the healthcarePlatform to accept and process device data per configured protocol and security guidelines.\n\nProper validation is enforced: endpoint URI must be unique within the organizational context, and protocol/device_type combinations must follow business logic and supported platform standards. Only roles with administrative or technical authority (typically organizationAdmin or systemAdmin) can perform this operation. Error responses will indicate missing/invalid parameters, or conflicts with existing configurations. Auditing of creation is mandatory for compliance traceability.","summary":"Create a new device data ingestion configuration in healthcare_platform_device_data_ingestions.","parameters":[],"requestBody":{"description":"Configuration data required to define a new device data ingestion endpoint (device type, endpoint URI, protocol, status, organization context).","typeName":"IHealthcarePlatformDeviceDataIngestion.ICreate"},"responseBody":{"description":"The newly created device data ingestion configuration with full assigned properties and identifiers.","typeName":"IHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/deviceDataIngestions","method":"post"},{"specification":"This operation creates a new device data ingestion configuration for integrating medical devices with the healthcarePlatform system. It operates on the healthcare_platform_device_data_ingestions table, allowing administrators to define the endpoint URI, device type, supported protocol, and operational status. The new ingestion endpoint enables the platform to receive, process, and monitor streaming or batch data from medical devices, supporting regulatory, compliance, and analytics use cases.","description":"Create a new device data ingestion configuration in the healthcare_platform_device_data_ingestions table.\n\nThis operation is intended for technical administrators or platform owners to onboard a new data source or medical device. Users provide all required configuration parameters such as the organization, device type (e.g., vital_monitor, ECG), endpoint URI, protocol, and any other required operational settings. Once created, this record enables the healthcarePlatform to accept and process device data per configured protocol and security guidelines.\n\nProper validation is enforced: endpoint URI must be unique within the organizational context, and protocol/device_type combinations must follow business logic and supported platform standards. Only roles with administrative or technical authority (typically organizationAdmin or systemAdmin) can perform this operation. Error responses will indicate missing/invalid parameters, or conflicts with existing configurations. Auditing of creation is mandatory for compliance traceability.","summary":"Create a new device data ingestion configuration in healthcare_platform_device_data_ingestions.","parameters":[],"requestBody":{"description":"Configuration data required to define a new device data ingestion endpoint (device type, endpoint URI, protocol, status, organization context).","typeName":"IHealthcarePlatformDeviceDataIngestion.ICreate"},"responseBody":{"description":"The newly created device data ingestion configuration with full assigned properties and identifiers.","typeName":"IHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/deviceDataIngestions","method":"post"},{"specification":"This operation updates an existing device data ingestion configuration in the healthcare_platform_device_data_ingestions table. It enables system and organization administrators to make changes to the ingestion endpoint details, device type, supported protocol, or operational status. Updating device ingestion configurations is essential for adapting to changes in device hardware, network topology, compliance requirements, or troubleshooting workflows.","description":"Modify an existing device data ingestion integration record by ID in the healthcare_platform_device_data_ingestions table.\n\nThe operation allows technical administrators to update endpoint URI, supported device type, protocol, status, and other mutable properties. This is typically performed when the medical device is upgraded, endpoint details change, or integration protocol requirements are updated. Comprehensive validation ensures only compatible updates are applied, considering business and compliance rules on data integration.\n\nRoles with administrative privileges (e.g., systemAdmin, organizationAdmin) are authorized to use this operation. The operation enforces audit trails, and rejects attempts when the record does not exist or if updates would conflict with uniqueness or protocol support requirements. Errors are reported clearly in case of conflicts, missing records, or validation failures.","summary":"Update an existing device data ingestion configuration by ID in healthcare_platform_device_data_ingestions.","parameters":[{"name":"deviceDataIngestionId","description":"Unique identifier (UUID) of the device data ingestion record to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Properties of the device data ingestion configuration to modify (endpoint, device type, supported protocol, operational status, etc.).","typeName":"IHealthcarePlatformDeviceDataIngestion.IUpdate"},"responseBody":{"description":"The updated device data ingestion configuration after successful update.","typeName":"IHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/deviceDataIngestions/{deviceDataIngestionId}","method":"put"},{"specification":"This operation updates an existing device data ingestion configuration in the healthcare_platform_device_data_ingestions table. It enables system and organization administrators to make changes to the ingestion endpoint details, device type, supported protocol, or operational status. Updating device ingestion configurations is essential for adapting to changes in device hardware, network topology, compliance requirements, or troubleshooting workflows.","description":"Modify an existing device data ingestion integration record by ID in the healthcare_platform_device_data_ingestions table.\n\nThe operation allows technical administrators to update endpoint URI, supported device type, protocol, status, and other mutable properties. This is typically performed when the medical device is upgraded, endpoint details change, or integration protocol requirements are updated. Comprehensive validation ensures only compatible updates are applied, considering business and compliance rules on data integration.\n\nRoles with administrative privileges (e.g., systemAdmin, organizationAdmin) are authorized to use this operation. The operation enforces audit trails, and rejects attempts when the record does not exist or if updates would conflict with uniqueness or protocol support requirements. Errors are reported clearly in case of conflicts, missing records, or validation failures.","summary":"Update an existing device data ingestion configuration by ID in healthcare_platform_device_data_ingestions.","parameters":[{"name":"deviceDataIngestionId","description":"Unique identifier (UUID) of the device data ingestion record to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Properties of the device data ingestion configuration to modify (endpoint, device type, supported protocol, operational status, etc.).","typeName":"IHealthcarePlatformDeviceDataIngestion.IUpdate"},"responseBody":{"description":"The updated device data ingestion configuration after successful update.","typeName":"IHealthcarePlatformDeviceDataIngestion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/deviceDataIngestions/{deviceDataIngestionId}","method":"put"},{"specification":"This operation deletes an existing device data ingestion configuration from the healthcare_platform_device_data_ingestions table. It allows technical or administrative roles to remove decommissioned or erroneous integrations, ensuring the system only maintains active, compliant device endpoints. All deletions are hard deletes if there is no soft delete column in the schema, fully removing the integration configuration and preventing further data ingestion from that device endpoint.","description":"Permanently delete a device data ingestion configuration, specified by its unique ID, from the healthcare_platform_device_data_ingestions table.\n\nThis operation is used when a device integration is decommissioned, failed, has been replaced, or poses compliance risk. The operation ensures that the configuration and its endpoint are removed from the system, stopping future data flows and maintaining a clean administrative and compliance surface. Deletions are fully reflected in the audit trail as required for medical device compliance and operational accountability.\n\nThis operation is restricted to roles with high privilege (systemAdmin, organizationAdmin). Attempts to delete a nonexistent or inaccessible record (from wrong organization or insufficient RBAC) will result in error responses specifying the cause. There is no undelete; removal is immediate and permanent within the active database.","summary":"Delete a device data ingestion configuration by ID from healthcare_platform_device_data_ingestions (hard delete).","parameters":[{"name":"deviceDataIngestionId","description":"Unique identifier (UUID) of the device data ingestion record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/deviceDataIngestions/{deviceDataIngestionId}","method":"delete"},{"specification":"This operation deletes an existing device data ingestion configuration from the healthcare_platform_device_data_ingestions table. It allows technical or administrative roles to remove decommissioned or erroneous integrations, ensuring the system only maintains active, compliant device endpoints. All deletions are hard deletes if there is no soft delete column in the schema, fully removing the integration configuration and preventing further data ingestion from that device endpoint.","description":"Permanently delete a device data ingestion configuration, specified by its unique ID, from the healthcare_platform_device_data_ingestions table.\n\nThis operation is used when a device integration is decommissioned, failed, has been replaced, or poses compliance risk. The operation ensures that the configuration and its endpoint are removed from the system, stopping future data flows and maintaining a clean administrative and compliance surface. Deletions are fully reflected in the audit trail as required for medical device compliance and operational accountability.\n\nThis operation is restricted to roles with high privilege (systemAdmin, organizationAdmin). Attempts to delete a nonexistent or inaccessible record (from wrong organization or insufficient RBAC) will result in error responses specifying the cause. There is no undelete; removal is immediate and permanent within the active database.","summary":"Delete a device data ingestion configuration by ID from healthcare_platform_device_data_ingestions (hard delete).","parameters":[{"name":"deviceDataIngestionId","description":"Unique identifier (UUID) of the device data ingestion record to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/deviceDataIngestions/{deviceDataIngestionId}","method":"delete"},{"specification":"This operation retrieves a filtered and paginated list of integration logs for the healthcare platform. It enables advanced search and sorting across integration events (success, errors, status) for compliance auditing and troubleshooting of third-party system interactions (e.g., EMR, labs, insurance, pharmacy, devices). The search supports filtering by integration type, event status, date range, organization, and event code. This is essential for administrators and technical support to monitor system integrations, troubleshoot failures, and verify compliance with traceability requirements. The operation relies on the IntegrationLog entity from the Prisma schema, capturing structured log metadata required for healthcare regulatory audits. Only users with admin, organizationAdmin, or system-level technical roles should have access, and sensitive event details are protected by RBAC policies and audit logging. Pagination, advanced filtering, and export options are built-in for high-volume incident management and regulatory reporting.","description":"Retrieve a filtered and paginated list of integration logs that record all integration-related status, success, error, or event messages for this healthcare platform. This API supports complex search, sorting, and filtering across all log attributes, including integration_type (such as 'emr', 'lab', 'pharmacy', 'insurance', 'device'), event_status, event_code, organization, and flexible date/time ranges.\n\nAdvanced auditing and troubleshooting are supported: administrators and technical teams can quickly locate integration failures, performance issues, or external system outages, supporting rapid forensic analysis and operational troubleshooting. The Prisma schema ensures every log entry is uniquely linked to the relevant organization and includes severity, timestamp, and context information for regulatory and support compliance.\n\nSecurity and access are tightly controlled. This endpoint is restricted to platform/system administrators and organization administrators with integration monitoring responsibility. All access and query actions are themselves logged to an audit trail. Results can be exported for offline compliance review.\n\nThis API should be combined with detailed event and incident views, which show full information for each log entry (e.g., via GET /integrationLogs/{integrationLogId}) for root-cause analysis and cross-referencing related events.","summary":"Search and retrieve filtered/paginated integration logs for monitoring and audit.","parameters":[],"requestBody":{"description":"Search and pagination criteria for integration log filtering (type, status, organization, date range, etc.)","typeName":"IHealthcarePlatformIntegrationLog.IRequest"},"responseBody":{"description":"Paginated list of integration logs matching search/filter criteria.","typeName":"IPageIHealthcarePlatformIntegrationLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/integrationLogs","method":"patch"},{"specification":"This operation retrieves a filtered and paginated list of integration logs for the healthcare platform. It enables advanced search and sorting across integration events (success, errors, status) for compliance auditing and troubleshooting of third-party system interactions (e.g., EMR, labs, insurance, pharmacy, devices). The search supports filtering by integration type, event status, date range, organization, and event code. This is essential for administrators and technical support to monitor system integrations, troubleshoot failures, and verify compliance with traceability requirements. The operation relies on the IntegrationLog entity from the Prisma schema, capturing structured log metadata required for healthcare regulatory audits. Only users with admin, organizationAdmin, or system-level technical roles should have access, and sensitive event details are protected by RBAC policies and audit logging. Pagination, advanced filtering, and export options are built-in for high-volume incident management and regulatory reporting.","description":"Retrieve a filtered and paginated list of integration logs that record all integration-related status, success, error, or event messages for this healthcare platform. This API supports complex search, sorting, and filtering across all log attributes, including integration_type (such as 'emr', 'lab', 'pharmacy', 'insurance', 'device'), event_status, event_code, organization, and flexible date/time ranges.\n\nAdvanced auditing and troubleshooting are supported: administrators and technical teams can quickly locate integration failures, performance issues, or external system outages, supporting rapid forensic analysis and operational troubleshooting. The Prisma schema ensures every log entry is uniquely linked to the relevant organization and includes severity, timestamp, and context information for regulatory and support compliance.\n\nSecurity and access are tightly controlled. This endpoint is restricted to platform/system administrators and organization administrators with integration monitoring responsibility. All access and query actions are themselves logged to an audit trail. Results can be exported for offline compliance review.\n\nThis API should be combined with detailed event and incident views, which show full information for each log entry (e.g., via GET /integrationLogs/{integrationLogId}) for root-cause analysis and cross-referencing related events.","summary":"Search and retrieve filtered/paginated integration logs for monitoring and audit.","parameters":[],"requestBody":{"description":"Search and pagination criteria for integration log filtering (type, status, organization, date range, etc.)","typeName":"IHealthcarePlatformIntegrationLog.IRequest"},"responseBody":{"description":"Paginated list of integration logs matching search/filter criteria.","typeName":"IPageIHealthcarePlatformIntegrationLog.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/integrationLogs","method":"patch"},{"specification":"Retrieve full detail for a single integration log entry by its ID. This operation exposes all available context, status, event codes, and payload/error metadata for a particular integration log event (e.g., a failed EMR sync or lab result import). It operates on the IntegrationLog table (see Prisma schema) and provides exhaustive detail for administrative audit, troubleshooting, or forensics.\n\nLog entries here are not user-generated but are critical for compliance and continuous system monitoring. Only system administrators and authorized organizationAdmins may view full event details; RBAC and detailed audit logging are enforced. This API should be cross-linked from list/search endpoints for a seamless incident investigation workflow.","description":"Retrieve a single, fully detailed integration log event using its unique log ID (integrationLogId). The detail includes type of integration, status, related error messages, payload links, context data, timestamps, severity indicators, and any attached troubleshooting or remediation notes.\n\nThis endpoint is used by system and organization administrators to review the root cause and full context of technical events, system-monitoring incidents, integration failures, and audit-log triggers. The Prisma IntegrationLog model ensures traceable linkage to organizations and event context, which is required for regulatory audits when incidents or external system failures are investigated.\n\nStrict security and audit controls apply: access is limited to technical and admin staff with incident investigation responsibility. All read access actions are themselves logged in the platform's audit trail. The details revealed can support service restoration, external partner escalation, and compliance reporting.","summary":"Retrieve full detail for a specific integration log event by ID.","parameters":[{"name":"integrationLogId","description":"Unique identifier of the integration log record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full integration log event detail (with event, payload, status, and context info).","typeName":"IHealthcarePlatformIntegrationLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/integrationLogs/{integrationLogId}","method":"get"},{"specification":"Retrieve full detail for a single integration log entry by its ID. This operation exposes all available context, status, event codes, and payload/error metadata for a particular integration log event (e.g., a failed EMR sync or lab result import). It operates on the IntegrationLog table (see Prisma schema) and provides exhaustive detail for administrative audit, troubleshooting, or forensics.\n\nLog entries here are not user-generated but are critical for compliance and continuous system monitoring. Only system administrators and authorized organizationAdmins may view full event details; RBAC and detailed audit logging are enforced. This API should be cross-linked from list/search endpoints for a seamless incident investigation workflow.","description":"Retrieve a single, fully detailed integration log event using its unique log ID (integrationLogId). The detail includes type of integration, status, related error messages, payload links, context data, timestamps, severity indicators, and any attached troubleshooting or remediation notes.\n\nThis endpoint is used by system and organization administrators to review the root cause and full context of technical events, system-monitoring incidents, integration failures, and audit-log triggers. The Prisma IntegrationLog model ensures traceable linkage to organizations and event context, which is required for regulatory audits when incidents or external system failures are investigated.\n\nStrict security and audit controls apply: access is limited to technical and admin staff with incident investigation responsibility. All read access actions are themselves logged in the platform's audit trail. The details revealed can support service restoration, external partner escalation, and compliance reporting.","summary":"Retrieve full detail for a specific integration log event by ID.","parameters":[{"name":"integrationLogId","description":"Unique identifier of the integration log record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full integration log event detail (with event, payload, status, and context info).","typeName":"IHealthcarePlatformIntegrationLog"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/integrationLogs/{integrationLogId}","method":"get"},{"specification":"Retrieve a filtered, paginated list of compliance consent records for the healthcare platform. This operation is based on the ComplianceConsent table (see Prisma schema). It allows administrative users to review which patients and staff have provided or revoked various types of consent (privacy, treatment, data use) as required for regulatory, patient privacy, and legal compliance. The operation supports advanced query (search by organization, subject, policy, consent type/status, date ranges) and is critical for compliance audits and dispute resolution.","description":"Retrieve a paginated and filtered list of compliance consent records, which document explicit consent, revocation, and effective dates for patients and staff. Each consent log is tied to an organization and a policy version, and records consent scope, type, status (granted/revoked), and relevant time windows.\n\nAdvanced search enables administrators to filter by organization, subject, policy, consent type/status, date range, and more. This supports targeted audits, operational reviews, mass compliance check-ups, and dispute investigations. The Prisma schema ensures every consent record is immutable, versioned, and cross-linked to all relevant entities (policy, subject, organization).\n\nStrict RBAC and audit logging are enforced to protect personal data and legal compliance. Only users with system administrator or organization administrator roles may access this endpoint, and all search/query actions are recorded in the audit trail. Export of consents may be subject to additional regulatory/policy control.","summary":"Search and retrieve filtered/paginated compliance consent records for regulatory audit.","parameters":[],"requestBody":{"description":"Search and pagination/filter criteria for compliance consent audits (organization, subject, consent type, etc.)","typeName":"IHealthcarePlatformComplianceConsent.IRequest"},"responseBody":{"description":"Paginated list of compliance consent records matching filter/search parameters.","typeName":"IPageIHealthcarePlatformComplianceConsent.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/complianceConsents","method":"patch"},{"specification":"Retrieve a filtered, paginated list of compliance consent records for the healthcare platform. This operation is based on the ComplianceConsent table (see Prisma schema). It allows administrative users to review which patients and staff have provided or revoked various types of consent (privacy, treatment, data use) as required for regulatory, patient privacy, and legal compliance. The operation supports advanced query (search by organization, subject, policy, consent type/status, date ranges) and is critical for compliance audits and dispute resolution.","description":"Retrieve a paginated and filtered list of compliance consent records, which document explicit consent, revocation, and effective dates for patients and staff. Each consent log is tied to an organization and a policy version, and records consent scope, type, status (granted/revoked), and relevant time windows.\n\nAdvanced search enables administrators to filter by organization, subject, policy, consent type/status, date range, and more. This supports targeted audits, operational reviews, mass compliance check-ups, and dispute investigations. The Prisma schema ensures every consent record is immutable, versioned, and cross-linked to all relevant entities (policy, subject, organization).\n\nStrict RBAC and audit logging are enforced to protect personal data and legal compliance. Only users with system administrator or organization administrator roles may access this endpoint, and all search/query actions are recorded in the audit trail. Export of consents may be subject to additional regulatory/policy control.","summary":"Search and retrieve filtered/paginated compliance consent records for regulatory audit.","parameters":[],"requestBody":{"description":"Search and pagination/filter criteria for compliance consent audits (organization, subject, consent type, etc.)","typeName":"IHealthcarePlatformComplianceConsent.IRequest"},"responseBody":{"description":"Paginated list of compliance consent records matching filter/search parameters.","typeName":"IPageIHealthcarePlatformComplianceConsent.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/complianceConsents","method":"patch"},{"specification":"Retrieve full, detailed information for a specific compliance consent record by its unique ID. This operation provides complete details on the consenter (person/staff), organization, policy reference, consent/revocation date, scope/type, and revocation reason. It operates on the ComplianceConsent table and enables compliance officers and administrators to review a full audit history for any specific consent event, supporting regulatory inquiries, disputes, or operational audits.\n\nOnly system administrators and organization administrators may access full consent record details. All access actions are strictly logged for compliance and privacy protection. This endpoint is typically used as a drill-down from list/search results for comprehensive audit or investigation.","description":"Retrieve a specific compliance consent record with comprehensive audit details by its unique ID (complianceConsentId). Details include the subject's identity, organization, related policy/version, granted/revoked status, rationale/reason, and all timestamps relevant to consent lifecycle.\n\nThis API enables compliance, operational, and legal staff to perform detailed audits and resolve disputes around consent status, revocation, or regulatory compliance with policies like HIPAA or GDPR. The Prisma schema ensures traceability for each consent event, allows cross-checks to subject and policy tables, and supports export of full audit records.\n\nUser access is tightly restricted via RBAC, and all actions are appended to the platform audit log. Use this in conjunction with list/search endpoints for incident review or compliance evidence documentation.","summary":"Retrieve full detail for a specific compliance consent record by ID.","parameters":[{"name":"complianceConsentId","description":"Unique identifier of the compliance consent record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of compliance consent event, with subject, policy reference, and audit fields.","typeName":"IHealthcarePlatformComplianceConsent"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/complianceConsents/{complianceConsentId}","method":"get"},{"specification":"Retrieve full, detailed information for a specific compliance consent record by its unique ID. This operation provides complete details on the consenter (person/staff), organization, policy reference, consent/revocation date, scope/type, and revocation reason. It operates on the ComplianceConsent table and enables compliance officers and administrators to review a full audit history for any specific consent event, supporting regulatory inquiries, disputes, or operational audits.\n\nOnly system administrators and organization administrators may access full consent record details. All access actions are strictly logged for compliance and privacy protection. This endpoint is typically used as a drill-down from list/search results for comprehensive audit or investigation.","description":"Retrieve a specific compliance consent record with comprehensive audit details by its unique ID (complianceConsentId). Details include the subject's identity, organization, related policy/version, granted/revoked status, rationale/reason, and all timestamps relevant to consent lifecycle.\n\nThis API enables compliance, operational, and legal staff to perform detailed audits and resolve disputes around consent status, revocation, or regulatory compliance with policies like HIPAA or GDPR. The Prisma schema ensures traceability for each consent event, allows cross-checks to subject and policy tables, and supports export of full audit records.\n\nUser access is tightly restricted via RBAC, and all actions are appended to the platform audit log. Use this in conjunction with list/search endpoints for incident review or compliance evidence documentation.","summary":"Retrieve full detail for a specific compliance consent record by ID.","parameters":[{"name":"complianceConsentId","description":"Unique identifier of the compliance consent record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of compliance consent event, with subject, policy reference, and audit fields.","typeName":"IHealthcarePlatformComplianceConsent"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/complianceConsents/{complianceConsentId}","method":"get"},{"specification":"Create a new compliance consent record for a user or patient. This endpoint operates on the healthcare_platform_compliance_consents table, binding an explicit consent event to an organization, a user (patient or staff), a specific policy version, and a consent type (e.g., privacy, treatment, research, etc). Supports both single and multi-tenant scenarios, and ensures full audit trail for compliance. Required fields are enforced by the schema: organization_id, policy_version_id, consent_type, consent_at, granted (boolean).","description":"This operation allows creation of an explicit, auditable consent entry for a subject (typically a patient, but staff consents are also modeled) within a healthcare organization. Consents are narrowly scoped, versioned, and can be revoked later. The record links to the organization, a specific policy version, the type of consent, and—if applicable—a subject user ID. The operation includes the nature of the consent, grant/revocation timestamps, and an optional expiry.\n\nSecurity is critical: only users with appropriate privileges (e.g., orgAdmin, compliance officers) can create consents on another's behalf, and audit logs are created for each event. The system checks for duplicate consents on the same subject/policy/version/type before creation. Compliance with HIPAA and other regulatory frameworks is enforced at the workflow and audit levels.\n\nOn error, e.g., non-existent policy version or organization, or conflicting active consent for the same scope/type, the API returns appropriate error messages for remediation.\n\nConsent records are append-only (never hard deleted), and creation events are fully logged for traceability. Downstream systems use these records to enforce data access restrictions and rights across the platform.","summary":"Create a new compliance consent for a user or patient under a specific organization and policy version.","parameters":[],"requestBody":{"description":"Compliance consent creation info: organization, subject, policy version, consent type, status, and timestamp.","typeName":"IHealthcarePlatformComplianceConsent.ICreate"},"responseBody":{"description":"Representation of the newly created compliance consent resource.","typeName":"IHealthcarePlatformComplianceConsent"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/complianceConsents","method":"post"},{"specification":"Update the details or revocation state for a single compliance consent entry. This endpoint updates an existing record in healthcare_platform_compliance_consents, allowing modification of fields such as whether consent is granted/revoked, timestamps, revocation reason, or expiration. It uses the consent's unique id for lookup and ensures full auditability.","description":"This operation supports modifying an existing compliance consent record by ID. Typical updates include the revocation of consent (setting granted=false and a revocation timestamp/reason), updating expiration, or modifying descriptive fields. The endpoint checks for the existence and active status of the target record and verifies all changes against compliance/audit requirements.\n\nPermission to update a consent is generally limited to organization administrators and compliance staff, and all changes are fully audit-logged with timestamp and user context. Revocation workflows specifically require reason logging for traceability. You cannot change the organization, policy version, or subject once a consent is created; only status and meta fields are updatable.\n\nIf the specified consent does not exist or the update would violate uniqueness constraints, an error is returned. Successful updates propagate to all systems checking consent for authorization and compliance.\n\nAll changes are appended to the audit trail for reporting and regulatory compliance. No updates are allowed if the consent is hard-deleted or past expiry.","summary":"Update or revoke a compliance consent entry by unique ID (consent revocation or meta update).","parameters":[{"name":"complianceConsentId","description":"Unique identifier for the compliance consent record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated consent info: revoke (granted=false), set revocation timestamp/reason, or update expiry/meta.","typeName":"IHealthcarePlatformComplianceConsent.IUpdate"},"responseBody":{"description":"The updated compliance consent resource after applying changes.","typeName":"IHealthcarePlatformComplianceConsent"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/complianceConsents/{complianceConsentId}","method":"put"},{"specification":"Erase (logically revoke) an active compliance consent by ID. This endpoint marks the record as deleted for audit and compliance purposes but does not physically remove the row from the healthcare_platform_compliance_consents table. Ensures platform-wide compliance with retention and regulatory audit policies.","description":"This operation allows organization administrators or compliance officers to logically delete or revoke a compliance consent, marking it as deleted (soft-deleted). No hard deletion is performed per legal requirements. The consent is no longer considered active for subsequent authorization, and downstream workflows will treat it as revoked or voided.\n\nA full audit log is generated for erasure/revocation, and the operation checks that the record exists, is not already deleted, and is not past its expiry (if any). Deletion is only allowed by users with appropriate permissions and is tracked for compliance reporting.\n\nAttempting to erase a non-existent or already deleted/revoked consent will return a business error. All erasure events are strictly audited and reportable for regulators.\n\nRecords are retained in the system and can be exported for compliance purposes, but will no longer be active in access/authorization decisions.","summary":"Logically delete (erase) a compliance consent by ID (soft delete with audit trail).","parameters":[{"name":"complianceConsentId","description":"Unique identifier for the compliance consent record to logically delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/complianceConsents/{complianceConsentId}","method":"delete"},{"specification":"Perform a filtered, paginated search for compliance agreements. This endpoint allows complex querying on healthcare_platform_compliance_agreements using search criteria, pagination, and sorting via a request body. Provides regulatory/compliance teams with the ability to review and audit signed agreements over time.","description":"The search operation allows auditors, compliance staff, or administrators to review compliance agreements (official documents signed by patients or staff) according to various business and audit criteria. Supported filters include organization, policy version, signer, agreement type, status, date signed, and expiration range. Pagination and sorting are standard for large compliance datasets (e.g., paged by date signed or status).\n\nOnly users with appropriate regulatory/audit roles are permitted access, with all queries logged for compliance reporting. The endpoint is not used for consent search (separate entity with different audit requirements). Search criteria must comply with privacy and regulatory scope: non-compliance users cannot see organization-wide or cross-tenant agreements.\n\nError handling includes invalid filters, empty results, or permission failures. Successful queries return a page of IHealthcarePlatformComplianceAgreement.ISummary data, with pagination metadata and total count.\n\nThis operation fully respects all data privacy, role-based control, and compliance auditing rules at the platform and org level.","summary":"Search and paginate compliance agreements by filter, returning audit-ready summaries.","parameters":[],"requestBody":{"description":"Search and filter criteria for compliance agreement search with pagination and sorting.","typeName":"IHealthcarePlatformComplianceAgreement.IRequest"},"responseBody":{"description":"A paginated list of compliance agreement summaries with audit metadata.","typeName":"IPageIHealthcarePlatformComplianceAgreement.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/complianceAgreements","method":"patch"},{"specification":"Retrieve detailed information about a specific compliance agreement by its unique identifier. This operation targets the healthcare_platform_compliance_agreements table, allowing authorized users to view all agreement fields, including status, linked policy version, agreement type, signer, and audit metadata. Intended for reviewing consent and compliance sign-offs at the policy version level for auditing, administrative reporting, or user review features.","path":"/healthcarePlatform/systemAdmin/complianceAgreements/{complianceAgreementId}","method":"get","summary":"Get a specific compliance agreement from healthcare_platform_compliance_agreements by ID.","description":"This operation retrieves all details for a single compliance agreement, including agreement type, signer, associated organization, policy version, status, signature date and method, expiration, and audit fields. It is based on the healthcare_platform_compliance_agreements table, enabling compliance and administrative personnel to validate that required policies have been signed, and presents adequate context for regulatory review. \n\nSensitive details such as signature method and expiration are returned, supporting full compliance with internal and external audit requirements. Authorization checks ensure only users with appropriate organization or compliance roles may access this endpoint. Related business operations include listing agreements by organization or user and updating agreement status through regulated workflows.\n\nAccess is strictly controlled according to role matrix and audit policy to ensure that only authorized individuals (e.g., compliance staff, system administrators) can view agreement details for compliance, legal, or administrative review purposes.","parameters":[{"name":"complianceAgreementId","description":"Unique identifier for the compliance agreement record (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed compliance agreement record as defined by IHealthcarePlatformComplianceAgreement schema.","typeName":"IHealthcarePlatformComplianceAgreement"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"Create a new compliance agreement record, capturing assignment to an organization, the policy version being agreed, agreement type, signer, signature information, status, and timestamps. This operation is vital for enforcing required legal agreements (such as HIPAA, data processing agreements, research consents, and ToS/AUP) for both patients and staff from the healthcare_platform_compliance_agreements table.","path":"/healthcarePlatform/systemAdmin/complianceAgreements","method":"post","summary":"Create a new compliance agreement entry in healthcare_platform_compliance_agreements.","description":"This operation inserts a new row into healthcare_platform_compliance_agreements, establishing a legally binding agreement record between a user (signer) and the organization under a specified policy version and agreement type. It supports capturing key compliance artifacts such as signature status, method, optional expiry, and audit metadata. Input validation ensures that all required fields are provided, the referenced policy version exists, and the signer meets business requirements for agreement eligibility.\n\nRole-based authorization ensures that only staff or technical personnel with legal authority (typically organization administrators or compliance officers) can create new agreements. Policy version linkage enables the platform to reference the correct audited version for subsequent consent or compliance checks. Status, effective/expiration dates, and method fields support a variety of agreement workflows including scheduled renewals and regulatory reporting.\n\nErrors are returned for duplicate agreements, invalid references to organizations or policy versions, or permission violations. Operation is auditable for compliance purposes.","parameters":[],"requestBody":{"description":"Agreement information to be created, as defined by IHealthcarePlatformComplianceAgreement.ICreate.","typeName":"IHealthcarePlatformComplianceAgreement.ICreate"},"responseBody":{"description":"Newly created compliance agreement record with all properties from IHealthcarePlatformComplianceAgreement.","typeName":"IHealthcarePlatformComplianceAgreement"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"Update an existing compliance agreement record by its UUID in the healthcare_platform_compliance_agreements table. Enables modification of status, signature metadata, expiry, or other reviewable agreement properties (never overwriting historical signatures). Supports legal and policy workflows for the organization's compliance program, business process exceptions, and ongoing regulatory maintenance.","path":"/healthcarePlatform/systemAdmin/complianceAgreements/{complianceAgreementId}","method":"put","summary":"Update details for an existing compliance agreement in healthcare_platform_compliance_agreements.","description":"This operation modifies one or more fields of an existing compliance agreement record (such as status, method, expiration, or signer metadata) based on its UUID. It is grounded in the healthcare_platform_compliance_agreements schema, allowing for lifecycle events such as withdrawal, update of method, or compliance-driven changes. All updates are strictly controlled, requiring appropriate role-based permissions and organizational context validation.\n\nThe operation supports only allowable legal amendments (as per business rules): status changes (e.g., from pending to signed or withdrawn), signature update (in the case of method change), or agreement expiry extension/closure. It never allows modification of immutable historical fields or retroactive changes to signed timestamps.\n\nEach update request results in a comprehensive audit event in accordance with internal and regulatory requirements. Access is reserved to compliance administrators or system administrators. Operation is tightly integrated with compliance audit and notification workflows.","parameters":[{"name":"complianceAgreementId","description":"UUID of the compliance agreement record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the compliance agreement as per IHealthcarePlatformComplianceAgreement.IUpdate.","typeName":"IHealthcarePlatformComplianceAgreement.IUpdate"},"responseBody":{"description":"Updated compliance agreement record after changes (IHealthcarePlatformComplianceAgreement).","typeName":"IHealthcarePlatformComplianceAgreement"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"Permanently delete (hard delete) a compliance agreement record by UUID in the healthcare_platform_compliance_agreements table. This operation irreversibly removes the record for compliance, legal, or business policy reasons. Should be used with extreme caution and only as allowed under business and legal guidelines. All deletion actions must be fully auditable.","path":"/healthcarePlatform/systemAdmin/complianceAgreements/{complianceAgreementId}","method":"delete","summary":"Hard delete a compliance agreement (healthcare_platform_compliance_agreements) by ID.","description":"This operation physically removes a compliance agreement record from the healthcare_platform_compliance_agreements table based on its UUID. As the table does not contain soft-delete logic (no dedicated deleted_at field in the schema), the operation conducts a permanent, irreversible deletion. Use is strictly limited to situations where business, legal, or compliance requirements mandate removal, often after required retention periods are satisfied or data subject requests under applicable law are validated.\n\nDeletion is strictly role-restricted to compliance or system administrators. Business logic and error handling enforce that only authorized users may invoke deletion. Every delete event is written to the audit log for compliance retrieval and reporting.\n\nProper data validation (unique identifier, existence of record, permissible deletion conditions) is always performed prior to removal. Related business operations include review and export of audit logs for regulated data removals.","parameters":[{"name":"complianceAgreementId","description":"UUID of the compliance agreement to be permanently deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase"},{"specification":"This operation is designed to retrieve a paginated, filterable list of policy version records within the healthcarePlatform system. Each policy version represents a unique, immutable revision of a compliance or business policy (such as privacy, HIPAA, data retention) as required for legal traceability, consent enforcement, and audit linkage. The endpoint accepts advanced search parameters to support querying by policy type, organization, effective date, expiration, and version, enabling both compliance officers and system administrators to locate relevant policy documentation. This operation is directly associated with the healthcare_platform_policy_versions table in the Prisma schema, ensuring strict mapping to all policy version entities with support for robust multi-tenant data isolation and permissions.","description":"Retrieve a filtered and paginated list of policy versions. This endpoint serves compliance, administrative, and audit use cases, empowering users to discover which legal or operational policy versions are active for an organization or department, and supports full-text search on titles and semantic versioning. Sensitive to system-wide, organization- and department-level scoping, this API confirms role permissions per organizational boundaries.\n\nAll fields from healthcare_platform_policy_versions are exposed for search and display according to the user's role and allowed tenant. Policy versions may be filtered by type, version label, effective or expiration dates, or status (expired, active). If the requesting user is not authorized for a particular organization, the API silently omits restricted data. This search operation supports standard pagination and sorting on date or title fields.\n\nValidation ensures query parameters are structurally valid according to schema. System audit logs will record query usage for compliance reporting. Related API operations include: create, update, or retrieve policy version detail. Error responses reflect standard compliance/permission boundaries.","summary":"Search and paginate healthcare policy version records from the compliance catalog (healthcare_platform_policy_versions).","parameters":[],"requestBody":{"description":"Paginated search, filter, and sort parameters for policy version listing.","typeName":"IHealthcarePlatformPolicyVersion.IRequest"},"responseBody":{"description":"Paginated list of policy version summaries returning metadata for each matching policy version record.","typeName":"IPageIHealthcarePlatformPolicyVersion.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/policyVersions","method":"patch"},{"specification":"This operation is designed to retrieve a paginated, filterable list of policy version records within the healthcarePlatform system. Each policy version represents a unique, immutable revision of a compliance or business policy (such as privacy, HIPAA, data retention) as required for legal traceability, consent enforcement, and audit linkage. The endpoint accepts advanced search parameters to support querying by policy type, organization, effective date, expiration, and version, enabling both compliance officers and system administrators to locate relevant policy documentation. This operation is directly associated with the healthcare_platform_policy_versions table in the Prisma schema, ensuring strict mapping to all policy version entities with support for robust multi-tenant data isolation and permissions.","description":"Retrieve a filtered and paginated list of policy versions. This endpoint serves compliance, administrative, and audit use cases, empowering users to discover which legal or operational policy versions are active for an organization or department, and supports full-text search on titles and semantic versioning. Sensitive to system-wide, organization- and department-level scoping, this API confirms role permissions per organizational boundaries.\n\nAll fields from healthcare_platform_policy_versions are exposed for search and display according to the user's role and allowed tenant. Policy versions may be filtered by type, version label, effective or expiration dates, or status (expired, active). If the requesting user is not authorized for a particular organization, the API silently omits restricted data. This search operation supports standard pagination and sorting on date or title fields.\n\nValidation ensures query parameters are structurally valid according to schema. System audit logs will record query usage for compliance reporting. Related API operations include: create, update, or retrieve policy version detail. Error responses reflect standard compliance/permission boundaries.","summary":"Search and paginate healthcare policy version records from the compliance catalog (healthcare_platform_policy_versions).","parameters":[],"requestBody":{"description":"Paginated search, filter, and sort parameters for policy version listing.","typeName":"IHealthcarePlatformPolicyVersion.IRequest"},"responseBody":{"description":"Paginated list of policy version summaries returning metadata for each matching policy version record.","typeName":"IPageIHealthcarePlatformPolicyVersion.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/policyVersions","method":"patch"},{"specification":"This operation retrieves the comprehensive details for a specific policy version using its unique identifier. Policy versions codify all required compliance, legal, privacy, or data retention documents and are immutable, historical entities within the healthcarePlatform. This endpoint accesses the healthcare_platform_policy_versions table directly by ID, making it possible for compliance officers, org administrators, and audit personnel to view the exact version, effective window, type, and document link/hash, as well as all metadata needed for regulatory and workflow reference. The operation is central to legal/consent management and incident investigation.","description":"Retrieve full details for a policy version by its unique identifier. This includes fields such as policy type, version label, effective and expiration dates, full document URI, hash for audit, and metadata. The data model is mapped directly to the Prisma model healthcare_platform_policy_versions, ensuring audit-grade traceability.\n\nAccess is granted only to users with appropriate compliance or administrative roles for the organization that owns the policy version. This API is used for legal review, patient consent enforcement, and supporting evidence during regulatory audits. Usage is always logged for compliance tracking.\n\nRequest validation ensures the version ID format matches UUID standards. Policy version records with restricted access are not displayed to unauthorized users, and the system complies fully with tenant isolation principles.","summary":"Fetch detailed information about a specific healthcare policy version entity from healthcare_platform_policy_versions.","parameters":[{"name":"policyVersionId","description":"Unique identifier (UUID) of the target policy version to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive policy version record including all version details, metadata, document info, and relevant audit data.","typeName":"IHealthcarePlatformPolicyVersion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/policyVersions/{policyVersionId}","method":"get"},{"specification":"This operation retrieves the comprehensive details for a specific policy version using its unique identifier. Policy versions codify all required compliance, legal, privacy, or data retention documents and are immutable, historical entities within the healthcarePlatform. This endpoint accesses the healthcare_platform_policy_versions table directly by ID, making it possible for compliance officers, org administrators, and audit personnel to view the exact version, effective window, type, and document link/hash, as well as all metadata needed for regulatory and workflow reference. The operation is central to legal/consent management and incident investigation.","description":"Retrieve full details for a policy version by its unique identifier. This includes fields such as policy type, version label, effective and expiration dates, full document URI, hash for audit, and metadata. The data model is mapped directly to the Prisma model healthcare_platform_policy_versions, ensuring audit-grade traceability.\n\nAccess is granted only to users with appropriate compliance or administrative roles for the organization that owns the policy version. This API is used for legal review, patient consent enforcement, and supporting evidence during regulatory audits. Usage is always logged for compliance tracking.\n\nRequest validation ensures the version ID format matches UUID standards. Policy version records with restricted access are not displayed to unauthorized users, and the system complies fully with tenant isolation principles.","summary":"Fetch detailed information about a specific healthcare policy version entity from healthcare_platform_policy_versions.","parameters":[{"name":"policyVersionId","description":"Unique identifier (UUID) of the target policy version to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Comprehensive policy version record including all version details, metadata, document info, and relevant audit data.","typeName":"IHealthcarePlatformPolicyVersion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/policyVersions/{policyVersionId}","method":"get"},{"specification":"This operation allows authorized compliance or administrative roles to create a new policy version record within the healthcarePlatform. Each policy version captures the details of a specific revision of a compliance, privacy, or business policy (e.g., HIPAA, risk, retention) as legally required for consent, audit, and governance functions. The operation persists a new row in the healthcare_platform_policy_versions table, supporting all required version control metadata, linkage to policy documents, organizational context, effective/expire dates, and immutable versioning. It includes business validation for uniqueness (per type/version/org) and correct timestamp windows, and links to the full document URI and optional document hash for tamper-proofing. All creation operations are auditable and constrained by RBAC enforced according to tenant and compliance boundaries.","description":"Create a new policy version entity. The operation takes full policy version details such as type, version, organization linkage, effective and expire dates, document title, document URI, and (optionally) cryptographic hash for audit. Requests are validated for uniqueness within org/policy scope, timestamp logic (expiry after effectivity), and required fields. Upon successful creation, the new policy version is available for referencing in compliance consents, agreements, and system legal workflows.\n\nThis API is restricted to compliance officers and system/organization administrators, and all operations are audit-logged. Linked document URIs must be accessible by compliance policy, and policy type/version/organization combinations must be unique as enforced in the Prisma schema. Validation errors return actionable feedback for business and compliance correction. Usage and error events are recorded for regulatory oversight.","summary":"Create a new policy version entry in healthcare_platform_policy_versions for compliance and legal management.","parameters":[],"requestBody":{"description":"Policy version details for addition—including policy type, version, title, effective/expire dates, URI, and (optionally) hash.","typeName":"IHealthcarePlatformPolicyVersion.ICreate"},"responseBody":{"description":"Full persisted policy version record with all metadata, identifiers, and references for further compliance use.","typeName":"IHealthcarePlatformPolicyVersion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/policyVersions","method":"post"},{"specification":"This operation allows authorized compliance or administrative roles to create a new policy version record within the healthcarePlatform. Each policy version captures the details of a specific revision of a compliance, privacy, or business policy (e.g., HIPAA, risk, retention) as legally required for consent, audit, and governance functions. The operation persists a new row in the healthcare_platform_policy_versions table, supporting all required version control metadata, linkage to policy documents, organizational context, effective/expire dates, and immutable versioning. It includes business validation for uniqueness (per type/version/org) and correct timestamp windows, and links to the full document URI and optional document hash for tamper-proofing. All creation operations are auditable and constrained by RBAC enforced according to tenant and compliance boundaries.","description":"Create a new policy version entity. The operation takes full policy version details such as type, version, organization linkage, effective and expire dates, document title, document URI, and (optionally) cryptographic hash for audit. Requests are validated for uniqueness within org/policy scope, timestamp logic (expiry after effectivity), and required fields. Upon successful creation, the new policy version is available for referencing in compliance consents, agreements, and system legal workflows.\n\nThis API is restricted to compliance officers and system/organization administrators, and all operations are audit-logged. Linked document URIs must be accessible by compliance policy, and policy type/version/organization combinations must be unique as enforced in the Prisma schema. Validation errors return actionable feedback for business and compliance correction. Usage and error events are recorded for regulatory oversight.","summary":"Create a new policy version entry in healthcare_platform_policy_versions for compliance and legal management.","parameters":[],"requestBody":{"description":"Policy version details for addition—including policy type, version, title, effective/expire dates, URI, and (optionally) hash.","typeName":"IHealthcarePlatformPolicyVersion.ICreate"},"responseBody":{"description":"Full persisted policy version record with all metadata, identifiers, and references for further compliance use.","typeName":"IHealthcarePlatformPolicyVersion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/policyVersions","method":"post"},{"specification":"This operation enables updating an existing policy version record to correct or append legal metadata, adjust expiration windows, or update document references for compliance. The operation directly modifies fields in healthcare_platform_policy_versions, respecting constraints around version uniqueness, effective/expire date logic, and document hash/URI correctness. All updates are subject to audit trails and are permitted only for users in authorized compliance or administrative roles for the given tenant organization. Each update is logged for regulatory and change-management traceability.","description":"Update an existing policy version entity by its unique identifier. This operation covers fields such as title, expiration date, document URI, hash, or description, while preserving versioning and regulatory integrity. Validation checks for conflicting versions, window logic (no expiry before effective), and ensures organization/tenant boundaries. Only authorized roles may invoke this endpoint; unauthorized attempts are blocked and logged for compliance.\n\nUpon successful update, the policy version record reflects the new metadata, and downstream consent agreements or legal references remain linked to the same immutable version row. All changes are audit-logged. Policy version update is a critical compliance function for ensuring policy documents remain current, accessible, and regulation-ready.","summary":"Update a policy version entry in healthcare_platform_policy_versions, allowing legal/compliance metadata correction and auditability.","parameters":[{"name":"policyVersionId","description":"Unique identifier (UUID) of the policy version entity to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Partial or full update payload for policy version fields: title, effective window, document URI/hash, and organizational context.","typeName":"IHealthcarePlatformPolicyVersion.IUpdate"},"responseBody":{"description":"Updated policy version record with latest metadata and document references for compliance workflows.","typeName":"IHealthcarePlatformPolicyVersion"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/policyVersions/{policyVersionId}","method":"put"},{"specification":"This operation enables updating an existing policy version record to correct or append legal metadata, adjust expiration windows, or update document references for compliance. The operation directly modifies fields in healthcare_platform_policy_versions, respecting constraints around version uniqueness, effective/expire date logic, and document hash/URI correctness. All updates are subject to audit trails and are permitted only for users in authorized compliance or administrative roles for the given tenant organization. Each update is logged for regulatory and change-management traceability.","description":"Update an existing policy version entity by its unique identifier. This operation covers fields such as title, expiration date, document URI, hash, or description, while preserving versioning and regulatory integrity. Validation checks for conflicting versions, window logic (no expiry before effective), and ensures organization/tenant boundaries. Only authorized roles may invoke this endpoint; unauthorized attempts are blocked and logged for compliance.\n\nUpon successful update, the policy version record reflects the new metadata, and downstream consent agreements or legal references remain linked to the same immutable version row. All changes are audit-logged. Policy version update is a critical compliance function for ensuring policy documents remain current, accessible, and regulation-ready.","summary":"Update a policy version entry in healthcare_platform_policy_versions, allowing legal/compliance metadata correction and auditability.","parameters":[{"name":"policyVersionId","description":"Unique identifier (UUID) of the policy version entity to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Partial or full update payload for policy version fields: title, effective window, document URI/hash, and organizational context.","typeName":"IHealthcarePlatformPolicyVersion.IUpdate"},"responseBody":{"description":"Updated policy version record with latest metadata and document references for compliance workflows.","typeName":"IHealthcarePlatformPolicyVersion"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/policyVersions/{policyVersionId}","method":"put"},{"specification":"This operation permanently deletes a specific policy version from the healthcare_platform_policy_versions table by its unique policyVersionId. Intended for platform, organization, or compliance administrators to retire obsolete or superseded policy versions while maintaining regulatory audit trails through soft deletion (if applicable in future versions), but currently performs a hard delete as there is no soft delete marker specified in the schema. Deletion removes the policy version itself but does not affect historical consents or agreements referencing this version; compliance officers should ensure all dependent records are appropriately managed before executing this operation.","description":"This API operation provides the ability to permanently remove a policy version entry from the healthcare_platform_policy_versions table. Policy versions track specific legal, regulatory, or business policy documents by organization, and are referenced by patient or staff consents and compliance agreements.\n\nWhen invoked, the operation expects a valid policyVersionId formatted as a UUID to be provided in the route path. Upon execution, the API will target and remove the specified policy version directly from the database.\n\nSecurity considerations mandate that only system or organization administrators with explicit compliance permission may access this endpoint due to the sensitive nature of compliance documentation. Any attempt to erase a policy version that is currently referenced by active consents or agreements may violate auditability or regulatory requirements; implementers should verify referential integrity prior to deletion. The operation implements a hard delete, as the schema does not include a soft-delete field for the policy_versions model.\n\nThis endpoint is not suitable for retire/archive behavior, which may be implemented in future versions through a deleted_at or similar field, but currently results in full removal of the record. All audit trails and access logs should accurately record the actor, time, and policy details involved in the deletion for compliance purposes.","summary":"Permanently delete a specific policy version by policyVersionId from the healthcare_platform_policy_versions table.","parameters":[{"name":"policyVersionId","description":"Unique identifier of the policy version to delete (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/policyVersions/{policyVersionId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes a specific policy version from the healthcare_platform_policy_versions table by its unique policyVersionId. Intended for platform, organization, or compliance administrators to retire obsolete or superseded policy versions while maintaining regulatory audit trails through soft deletion (if applicable in future versions), but currently performs a hard delete as there is no soft delete marker specified in the schema. Deletion removes the policy version itself but does not affect historical consents or agreements referencing this version; compliance officers should ensure all dependent records are appropriately managed before executing this operation.","description":"This API operation provides the ability to permanently remove a policy version entry from the healthcare_platform_policy_versions table. Policy versions track specific legal, regulatory, or business policy documents by organization, and are referenced by patient or staff consents and compliance agreements.\n\nWhen invoked, the operation expects a valid policyVersionId formatted as a UUID to be provided in the route path. Upon execution, the API will target and remove the specified policy version directly from the database.\n\nSecurity considerations mandate that only system or organization administrators with explicit compliance permission may access this endpoint due to the sensitive nature of compliance documentation. Any attempt to erase a policy version that is currently referenced by active consents or agreements may violate auditability or regulatory requirements; implementers should verify referential integrity prior to deletion. The operation implements a hard delete, as the schema does not include a soft-delete field for the policy_versions model.\n\nThis endpoint is not suitable for retire/archive behavior, which may be implemented in future versions through a deleted_at or similar field, but currently results in full removal of the record. All audit trails and access logs should accurately record the actor, time, and policy details involved in the deletion for compliance purposes.","summary":"Permanently delete a specific policy version by policyVersionId from the healthcare_platform_policy_versions table.","parameters":[{"name":"policyVersionId","description":"Unique identifier of the policy version to delete (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"erase","path":"/healthcarePlatform/organizationAdmin/policyVersions/{policyVersionId}","method":"delete","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of organizational or department-level risk assessments from the healthcare_platform_risk_assessments table. Supports customizable search, filtering by organization, time window, status, department, risk level, and assessment type. Allows compliance staff, administrators, or auditors to review past and ongoing risk assessment records for compliance reporting, audit, or operational analysis.","description":"Retrieve a filtered, paginated, and searchable list of risk assessments from the healthcare_platform_risk_assessments table. Risk assessments document compliance and operational security review carried out by organizations or departments, capturing risk level, findings, recommendations, period, and assigned assessors.\n\nThis operation allows compliance officers, organization administrators, and auditors to search and review ongoing or historical assessments. Users can specify organization context, time window, status, department, risk level, and other metadata through the request body, which follows the IHealthcarePlatformRiskAssessment.IRequest schema.\n\nThe response is a paginated collection of summary records, offering both high-level insight and the ability to drill into detailed risk assessment content as required. Supports slice pagination and sort order customization. Sensitive findings are visible only to authorized roles per compliance policy; audit logging ensures visibility into access and search patterns.\n\nClosely related actions include retrieving the full details of a specific risk assessment, creating new risk assessments, or updating existing ones. Proper access controls and audit trails must be enforced at all times, especially for assessments related to breaches, regulatory audits, or containing high-privilege findings.","summary":"Search and retrieve a paginated list of risk assessments from healthcare_platform_risk_assessments.","parameters":[],"requestBody":{"description":"Search and filtering parameters for querying organizational or departmental risk assessments.","typeName":"IHealthcarePlatformRiskAssessment.IRequest"},"responseBody":{"description":"Paginated list of risk assessment summaries matching search and filter criteria.","typeName":"IPageIHealthcarePlatformRiskAssessment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/systemAdmin/riskAssessments","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of organizational or department-level risk assessments from the healthcare_platform_risk_assessments table. Supports customizable search, filtering by organization, time window, status, department, risk level, and assessment type. Allows compliance staff, administrators, or auditors to review past and ongoing risk assessment records for compliance reporting, audit, or operational analysis.","description":"Retrieve a filtered, paginated, and searchable list of risk assessments from the healthcare_platform_risk_assessments table. Risk assessments document compliance and operational security review carried out by organizations or departments, capturing risk level, findings, recommendations, period, and assigned assessors.\n\nThis operation allows compliance officers, organization administrators, and auditors to search and review ongoing or historical assessments. Users can specify organization context, time window, status, department, risk level, and other metadata through the request body, which follows the IHealthcarePlatformRiskAssessment.IRequest schema.\n\nThe response is a paginated collection of summary records, offering both high-level insight and the ability to drill into detailed risk assessment content as required. Supports slice pagination and sort order customization. Sensitive findings are visible only to authorized roles per compliance policy; audit logging ensures visibility into access and search patterns.\n\nClosely related actions include retrieving the full details of a specific risk assessment, creating new risk assessments, or updating existing ones. Proper access controls and audit trails must be enforced at all times, especially for assessments related to breaches, regulatory audits, or containing high-privilege findings.","summary":"Search and retrieve a paginated list of risk assessments from healthcare_platform_risk_assessments.","parameters":[],"requestBody":{"description":"Search and filtering parameters for querying organizational or departmental risk assessments.","typeName":"IHealthcarePlatformRiskAssessment.IRequest"},"responseBody":{"description":"Paginated list of risk assessment summaries matching search and filter criteria.","typeName":"IPageIHealthcarePlatformRiskAssessment.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"index","path":"/healthcarePlatform/organizationAdmin/riskAssessments","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves the full detailed information of a particular risk assessment record from the healthcare_platform_risk_assessments table by its unique riskAssessmentId. Designed for review by organization compliance officers, administrators, security staff, and auditors, this endpoint provides all captured findings, methodology, recommendations, and status for business and regulatory analysis.","description":"Retrieve complete details about a specific risk assessment from the healthcare_platform_risk_assessments table using its unique riskAssessmentId (UUID). Risk assessments are compliance, audit, or operational security reviews performed at organization or department level, covering methodology, risk level, time window, findings, and recommendations.\n\nThis operation is primarily used by compliance teams, organization administrators, or designated reviewers for in-depth investigation of findings, validation of compliance policies, or preparation for external audit. The API response includes the full record, with all captured metadata, period, status, and context as defined in IHealthcarePlatformRiskAssessment.\n\nSecurity measures must ensure that only users with the appropriate compliance, admin, or audit permission may access this record, especially assessments that include sensitive or regulated information.\n\nThis endpoint supplements risk assessment listing/search operations and is used in conjunction with risk assessment creation, update, or review endpoints to support the full compliance lifecycle.","summary":"Retrieve full, detailed information for a specific risk assessment by riskAssessmentId.","parameters":[{"name":"riskAssessmentId","description":"Unique identifier of the risk assessment record to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed risk assessment record, including findings, status, and recommendations.","typeName":"IHealthcarePlatformRiskAssessment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/systemAdmin/riskAssessments/{riskAssessmentId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the full detailed information of a particular risk assessment record from the healthcare_platform_risk_assessments table by its unique riskAssessmentId. Designed for review by organization compliance officers, administrators, security staff, and auditors, this endpoint provides all captured findings, methodology, recommendations, and status for business and regulatory analysis.","description":"Retrieve complete details about a specific risk assessment from the healthcare_platform_risk_assessments table using its unique riskAssessmentId (UUID). Risk assessments are compliance, audit, or operational security reviews performed at organization or department level, covering methodology, risk level, time window, findings, and recommendations.\n\nThis operation is primarily used by compliance teams, organization administrators, or designated reviewers for in-depth investigation of findings, validation of compliance policies, or preparation for external audit. The API response includes the full record, with all captured metadata, period, status, and context as defined in IHealthcarePlatformRiskAssessment.\n\nSecurity measures must ensure that only users with the appropriate compliance, admin, or audit permission may access this record, especially assessments that include sensitive or regulated information.\n\nThis endpoint supplements risk assessment listing/search operations and is used in conjunction with risk assessment creation, update, or review endpoints to support the full compliance lifecycle.","summary":"Retrieve full, detailed information for a specific risk assessment by riskAssessmentId.","parameters":[{"name":"riskAssessmentId","description":"Unique identifier of the risk assessment record to retrieve (UUID format).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed risk assessment record, including findings, status, and recommendations.","typeName":"IHealthcarePlatformRiskAssessment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"at","path":"/healthcarePlatform/organizationAdmin/riskAssessments/{riskAssessmentId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new risk assessment record in the healthcare_platform_risk_assessments table. Used by compliance officers, organization administrators, or security staff to document scheduled, ad hoc, or incident-driven risk reviews, including assessment details, period, methodology, risk findings, and recommended actions. The created record is available for future review, update, or audit.","description":"Create a new risk assessment entry in the healthcare_platform_risk_assessments table based on the supplied details. Risk assessments document compliance, operational, or technical risk reviews performed by or on behalf of an organization or department.\n\nThis endpoint allows authorized users (compliance, platform, or organization administrators) to submit new assessments covering type, status, methodology, scope, findings, level, analysis period, and recommendations. Input is validated according to the IHealthcarePlatformRiskAssessment.ICreate schema and includes all necessary metadata required for subsequent audit or reporting workflows.\n\nUpon successful processing, the new risk assessment is stored and returned in the response body. Post-creation, the record is available for auditing, reporting, updating, and assignment of reviews as dictated by compliance policy.\n\nProper audit logging of the creation actor, timestamp, and context is mandatory to meet regulatory and internal business requirements. Related operations include updating or retrieving specific assessments, and listing all assessments for compliance tracking.","summary":"Create a new risk assessment record in the healthcare_platform_risk_assessments table.","parameters":[],"requestBody":{"description":"Details required to create a new risk assessment record, including scope, methodology, risk findings, assessment window, and recommendations.","typeName":"IHealthcarePlatformRiskAssessment.ICreate"},"responseBody":{"description":"Created risk assessment record with all captured assessment attributes and metadata.","typeName":"IHealthcarePlatformRiskAssessment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/systemAdmin/riskAssessments","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new risk assessment record in the healthcare_platform_risk_assessments table. Used by compliance officers, organization administrators, or security staff to document scheduled, ad hoc, or incident-driven risk reviews, including assessment details, period, methodology, risk findings, and recommended actions. The created record is available for future review, update, or audit.","description":"Create a new risk assessment entry in the healthcare_platform_risk_assessments table based on the supplied details. Risk assessments document compliance, operational, or technical risk reviews performed by or on behalf of an organization or department.\n\nThis endpoint allows authorized users (compliance, platform, or organization administrators) to submit new assessments covering type, status, methodology, scope, findings, level, analysis period, and recommendations. Input is validated according to the IHealthcarePlatformRiskAssessment.ICreate schema and includes all necessary metadata required for subsequent audit or reporting workflows.\n\nUpon successful processing, the new risk assessment is stored and returned in the response body. Post-creation, the record is available for auditing, reporting, updating, and assignment of reviews as dictated by compliance policy.\n\nProper audit logging of the creation actor, timestamp, and context is mandatory to meet regulatory and internal business requirements. Related operations include updating or retrieving specific assessments, and listing all assessments for compliance tracking.","summary":"Create a new risk assessment record in the healthcare_platform_risk_assessments table.","parameters":[],"requestBody":{"description":"Details required to create a new risk assessment record, including scope, methodology, risk findings, assessment window, and recommendations.","typeName":"IHealthcarePlatformRiskAssessment.ICreate"},"responseBody":{"description":"Created risk assessment record with all captured assessment attributes and metadata.","typeName":"IHealthcarePlatformRiskAssessment"},"authorizationRoles":["systemAdmin","organizationAdmin"],"name":"create","path":"/healthcarePlatform/organizationAdmin/riskAssessments","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"Updates an existing risk assessment record within the healthcarePlatform system. This operation applies to the RiskAssessment table and requires specifying the riskAssessmentId path parameter. The update action allows modifying the assessment's details, such as status, methodology, risk level, assessment period, or recommendations, reflecting the latest compliance, audit, or operational findings. It enforces auditability and regulatory compliance, ensuring every update is time-stamped and traceable to the responsible user. Input values must reflect proper data types as defined in the Prisma schema and comply with business rules for risk review lifecycle, status transitions, and audit requirements.","description":"This operation enables authorized users to update a risk assessment entity in the healthcarePlatform database. The risk assessment record tracks the organization's audit and risk posture, covering fields such as assessment type, methodology, window, risk level, status, and recommendations. \n\nThe update is restricted to privileged roles (e.g., organization admins, compliance staff) and is fully auditable—every change is recorded with a timestamp and associated user ID for compliance. Inputs undergo validation against business rules, such as permissible status transitions (e.g., from in_progress to completed), appropriate date windows, and risk level values. The operation integrates with the department and organization context, ensuring isolation by security scope.\n\nRelated operations include retrieval (GET) for risk assessments and periodic reporting of assessment outcomes. Error handling enforces permission checks, input validation, and appropriate response for conflicts or invalid state changes.","summary":"Update an existing HealthcarePlatformRiskAssessment entity by riskAssessmentId.","parameters":[{"name":"riskAssessmentId","description":"Unique identifier of the target risk assessment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update in the risk assessment record.","typeName":"IHealthcarePlatformRiskAssessment.IUpdate"},"responseBody":{"description":"The updated risk assessment entity.","typeName":"IHealthcarePlatformRiskAssessment"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/riskAssessments/{riskAssessmentId}","method":"put"},{"specification":"Permanently deletes a specific risk assessment record from the healthcarePlatform system using its unique identifier. This operation targets the RiskAssessment table and will irreversibly remove the record from the database. Deletion is only permitted for authorized users, and every action is fully auditable for accountability and compliance purposes. All references to the soft-delete or retention are omitted due to the lack of a deletion field in the schema.","description":"This operation permanently deletes a risk assessment entity from the healthcarePlatform database by its unique identifier.\n\nUnlike a soft-delete, the record is entirely removed from the persistent data store and cannot be recovered. Deletion is authorized only for privileged roles, such as organization admins, and the operation ensures the action is tracked for full audit support. Permissions are strictly enforced, and attempts to delete non-existent or already removed records will yield appropriate error responses.\n\nNo soft-delete or retention period is supported, as the schema lacks soft-delete indicators.","summary":"Permanently delete a HealthcarePlatformRiskAssessment entity by riskAssessmentId.","parameters":[{"name":"riskAssessmentId","description":"Unique identifier of the target risk assessment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/riskAssessments/{riskAssessmentId}","method":"delete"},{"specification":"Search and filter legal hold records across the healthcarePlatform system. This operation targets the LegalHold entity and supports complex retrieval queries, including filtering by organization, department, subject, hold status, type, time window, or method. Returns a paginated list of legal holds to support compliance, regulatory reporting, and review workflows. Ensures organizational isolation, proper audit/logging, and respects privacy constraints.","description":"Fetches a paginated, filtered list of legal hold entities in the healthcarePlatform system, enabling organization administrators and compliance users to review, track, and manage ongoing or historical legal/compliance record holds.\n\nThe operation accepts rich query parameters or a structured request body for fine-grained searching—including filtering by department, subject, status (active/released), reason, and effective/release dates. Results are paginated according to business context.\n\nAuthorization is restricted to organization admins, reflecting business rules around legal/compliance data access. The response includes metadata for each legal hold, supporting downstream compliance or review operations. Error handling ensures permission enforcement and input validation.","summary":"Search and list HealthcarePlatformLegalHold entities with filters and pagination.","parameters":[],"requestBody":{"description":"Searching, filtering, and pagination criteria for legal hold records.","typeName":"IHealthcarePlatformLegalHold.IRequest"},"responseBody":{"description":"Paginated result set of HealthcarePlatformLegalHold summaries.","typeName":"IPageIHealthcarePlatformLegalHold.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/legalHolds","method":"patch"},{"specification":"Retrieve a specific legal hold record using its unique identifier. This operation accesses the LegalHold table, returning all information for the requested record, including status, subject, scope, reason, timelines, and relation links. Supports compliance review, legal action tracking, and regulatory investigation workflows. Access is restricted by role, and the operation enforces audit logging for traceability.","description":"This endpoint fetches the details for a specific legal hold entity by its unique identifier, returning full record fields such as organization, subject, status, method, reason, effective and release windows, and compliance associations.\n\nThe operation is accessible only to organization admins, with all access audited for regulatory compliance. Data returned supports downstream compliance review, internal or external audit, and legal workflows. Errors may occur for permission violations, non-existent or deleted records, and access outside organization bounds.","summary":"Get details of a HealthcarePlatformLegalHold entity by legalHoldId.","parameters":[{"name":"legalHoldId","description":"Unique identifier for the target legal hold record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete legal hold entity record.","typeName":"IHealthcarePlatformLegalHold"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/legalHolds/{legalHoldId}","method":"get"},{"specification":"This operation creates a new legal hold entry in the healthcarePlatform compliance system. The legal hold is used to freeze access to specific data or records (patients, audits, documents, etc.) for a healthcare organization due to regulatory, investigatory, or litigation triggers. It includes audit-compliant scope details, justification, method, affected subject IDs, and effective dates. Legal holds are critical for compliance with regulatory requests, incident investigations, and eDiscovery. Each hold is versioned, subject to audit, and may impact business operations by restricting access to data or initiating review workflows. Only users with compliance or administrator roles are authorized to create new holds. References the 'healthcare_platform_legal_holds' table.","description":"Creates a new legal hold entry. Healthcare organizations use legal holds when a regulatory, investigatory, or legal event (such as a subpoena, litigation, or compliance audit) requires freezing data. This operation captures all necessary metadata: organization, imposed by, scope type (e.g., patient, org, audit trail), subject entity (if any), business justification for the hold, method (system/manual/legal), current status, effective and expected release dates, and triggers audit and review processes.\n\nCompliance implications: Legal holds ensure organizations do not inadvertently delete or modify information subject to legal or regulatory investigation. The operation checks role permissions to ensure only authorized users (admins, compliance personnel) invoke this action. It must capture sufficient context (organization, subject, method, reason, imposed by, status) for full auditability and review.\n\nLinks to other APIs: The hold can later be updated (PUT), revoked/deleted (DELETE), or have reviews registered via complianceReview APIs. Attempted access to held resources by ordinary users after a hold is created will be denied and logged for auditing. Affected users will be notified by the system via notification APIs.","summary":"Create a new legal hold entry for regulatory, investigatory, or litigation events (healthcare_platform_legal_holds).","parameters":[],"requestBody":{"description":"Details for the new legal hold, including organization id, affected subject(s), type, reason, imposed by, method, expected scope, and effective/release dates.","typeName":"IHealthcarePlatformLegalHold.ICreate"},"responseBody":{"description":"Complete information of the newly created legal hold entry, including all compliance/audit fields and timestamps.","typeName":"IHealthcarePlatformLegalHold"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/legalHolds","method":"post"},{"specification":"This operation creates a new legal hold entry in the healthcarePlatform compliance system. The legal hold is used to freeze access to specific data or records (patients, audits, documents, etc.) for a healthcare organization due to regulatory, investigatory, or litigation triggers. It includes audit-compliant scope details, justification, method, affected subject IDs, and effective dates. Legal holds are critical for compliance with regulatory requests, incident investigations, and eDiscovery. Each hold is versioned, subject to audit, and may impact business operations by restricting access to data or initiating review workflows. Only users with compliance or administrator roles are authorized to create new holds. References the 'healthcare_platform_legal_holds' table.","description":"Creates a new legal hold entry. Healthcare organizations use legal holds when a regulatory, investigatory, or legal event (such as a subpoena, litigation, or compliance audit) requires freezing data. This operation captures all necessary metadata: organization, imposed by, scope type (e.g., patient, org, audit trail), subject entity (if any), business justification for the hold, method (system/manual/legal), current status, effective and expected release dates, and triggers audit and review processes.\n\nCompliance implications: Legal holds ensure organizations do not inadvertently delete or modify information subject to legal or regulatory investigation. The operation checks role permissions to ensure only authorized users (admins, compliance personnel) invoke this action. It must capture sufficient context (organization, subject, method, reason, imposed by, status) for full auditability and review.\n\nLinks to other APIs: The hold can later be updated (PUT), revoked/deleted (DELETE), or have reviews registered via complianceReview APIs. Attempted access to held resources by ordinary users after a hold is created will be denied and logged for auditing. Affected users will be notified by the system via notification APIs.","summary":"Create a new legal hold entry for regulatory, investigatory, or litigation events (healthcare_platform_legal_holds).","parameters":[],"requestBody":{"description":"Details for the new legal hold, including organization id, affected subject(s), type, reason, imposed by, method, expected scope, and effective/release dates.","typeName":"IHealthcarePlatformLegalHold.ICreate"},"responseBody":{"description":"Complete information of the newly created legal hold entry, including all compliance/audit fields and timestamps.","typeName":"IHealthcarePlatformLegalHold"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/legalHolds","method":"post"},{"specification":"This operation updates an existing legal hold record identified by legalHoldId in the healthcarePlatform compliance module. Legal holds are used to restrict access to certain data due to legal, regulatory, or investigatory needs. This update can change the status, effective/release times, rationale, status, or other allowable fields. Modifications are strictly controlled, fully auditable, and usually limited to compliance roles. References the 'healthcare_platform_legal_holds' table.","description":"Updates a legal hold's properties, such as status (active/released/expired), reason, method, or scope fields. Used by compliance admins or system administrators when a legal hold requirement changes—such as updating release criteria, expanding or narrowing hold scope, or releasing the hold. This operation ensures that all updates are recorded in detail, with audit trails for each change, in compliance with HIPAA/SOC2 obligations for evidence preservation and traceability.\n\nSecurity and authorization: Update privileges are restricted to users with elevated compliance or admin roles. All updates include before/after data in the record audit log. The update is allowed only if the legal hold exists and is not locked/archived.\n\nRelationships: This is typically followed by notifications to stakeholders, and triggers workflow changes in downstream data/processes. Errors are raised on attempts to update non-existent/locked legal holds, or for unauthorized users.","summary":"Update an existing legal hold record (healthcare_platform_legal_holds).","parameters":[{"name":"legalHoldId","description":"Unique identifier of the legal hold record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the legal hold (status, dates, reason, method, scope, etc).","typeName":"IHealthcarePlatformLegalHold.IUpdate"},"responseBody":{"description":"Full updated legal hold entity after modification, including all compliance fields and audit metadata.","typeName":"IHealthcarePlatformLegalHold"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/legalHolds/{legalHoldId}","method":"put"},{"specification":"This operation updates an existing legal hold record identified by legalHoldId in the healthcarePlatform compliance module. Legal holds are used to restrict access to certain data due to legal, regulatory, or investigatory needs. This update can change the status, effective/release times, rationale, status, or other allowable fields. Modifications are strictly controlled, fully auditable, and usually limited to compliance roles. References the 'healthcare_platform_legal_holds' table.","description":"Updates a legal hold's properties, such as status (active/released/expired), reason, method, or scope fields. Used by compliance admins or system administrators when a legal hold requirement changes—such as updating release criteria, expanding or narrowing hold scope, or releasing the hold. This operation ensures that all updates are recorded in detail, with audit trails for each change, in compliance with HIPAA/SOC2 obligations for evidence preservation and traceability.\n\nSecurity and authorization: Update privileges are restricted to users with elevated compliance or admin roles. All updates include before/after data in the record audit log. The update is allowed only if the legal hold exists and is not locked/archived.\n\nRelationships: This is typically followed by notifications to stakeholders, and triggers workflow changes in downstream data/processes. Errors are raised on attempts to update non-existent/locked legal holds, or for unauthorized users.","summary":"Update an existing legal hold record (healthcare_platform_legal_holds).","parameters":[{"name":"legalHoldId","description":"Unique identifier of the legal hold record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the legal hold (status, dates, reason, method, scope, etc).","typeName":"IHealthcarePlatformLegalHold.IUpdate"},"responseBody":{"description":"Full updated legal hold entity after modification, including all compliance fields and audit metadata.","typeName":"IHealthcarePlatformLegalHold"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/legalHolds/{legalHoldId}","method":"put"},{"specification":"This operation permanently removes (deactivates or archives) a legal hold entry identified by legalHoldId. Legal holds are compliance-critical records that block access to specific datasets due to legal, investigatory, or regulatory proceedings. Deletion is typically a soft-delete for compliance retention and audit purposes; in rare circumstances, hard deletion may be allowed as per policy. Only system or organization admin roles with compliance authority can perform this operation. References 'healthcare_platform_legal_holds'.","description":"Deactivates or archives a legal hold in the system. This action restricts any further use of the hold in enforcing data locks, but preserves the full record for compliance requirements. Actual data removal (hard delete) is only done if permitted by organizational/legal policy; otherwise, the deleted_at field is set for soft deletion (retention in history).\n\nSecurity and compliance: Only systemAdmin or organizationAdmin users may erase legal holds, and the action is always logged with actor, reason, and affected data. The API does not allow deletion of a hold if there are ongoing dependent reviews/investigations unless an explicit override is present. Attempting to erase a non-existent or locked hold results in a permission error. Usage is highly restricted to avoid accidental loss of compliance data.\n\nBusiness process: After erasure, downstream systems are notified to release data locks and update audit records. Compliance staff may be notified as part of the process.","summary":"Archive or erase a legal hold entry (soft delete for audit purposes) (healthcare_platform_legal_holds).","parameters":[{"name":"legalHoldId","description":"Unique identifier of the legal hold record to archive or erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/legalHolds/{legalHoldId}","method":"delete"},{"specification":"This operation permanently removes (deactivates or archives) a legal hold entry identified by legalHoldId. Legal holds are compliance-critical records that block access to specific datasets due to legal, investigatory, or regulatory proceedings. Deletion is typically a soft-delete for compliance retention and audit purposes; in rare circumstances, hard deletion may be allowed as per policy. Only system or organization admin roles with compliance authority can perform this operation. References 'healthcare_platform_legal_holds'.","description":"Deactivates or archives a legal hold in the system. This action restricts any further use of the hold in enforcing data locks, but preserves the full record for compliance requirements. Actual data removal (hard delete) is only done if permitted by organizational/legal policy; otherwise, the deleted_at field is set for soft deletion (retention in history).\n\nSecurity and compliance: Only systemAdmin or organizationAdmin users may erase legal holds, and the action is always logged with actor, reason, and affected data. The API does not allow deletion of a hold if there are ongoing dependent reviews/investigations unless an explicit override is present. Attempting to erase a non-existent or locked hold results in a permission error. Usage is highly restricted to avoid accidental loss of compliance data.\n\nBusiness process: After erasure, downstream systems are notified to release data locks and update audit records. Compliance staff may be notified as part of the process.","summary":"Archive or erase a legal hold entry (soft delete for audit purposes) (healthcare_platform_legal_holds).","parameters":[{"name":"legalHoldId","description":"Unique identifier of the legal hold record to archive or erase.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/legalHolds/{legalHoldId}","method":"delete"},{"specification":"This operation retrieves a filtered and paginated list of compliance review events, referencing the 'healthcare_platform_compliance_reviews' table. Compliance reviews are generated as part of legal hold, risk assessment, and incident management workflows. Users can query reviews using search and filter parameters (status, type, date, reviewer, org, outcome). Designed for compliance, legal, security, and organization administrators to review investigation, audit, or incident follow-up records. All output is scoped for strict audit and regulatory requirements.","description":"Performs advanced search and retrieval of compliance review records in the healthcarePlatform. This may include reviews for legal holds, risk assessments, periodic audits, regulatory investigations, or internal compliance checks. Users provide a request body specifying complex search filters (review status, type, organization, reviewer, date ranges, outcomes, etc.) and pagination controls.\n\nSecurity: Only users with systemAdmin, organizationAdmin, or compliance-specific roles can access this API. The operation enforces strict filtering to ensure users only see reviews within their organization or department scope. Data is returned in paginated form; each review exposes full audit/compliance metadata.\n\nIntegration: Often used by compliance teams to aggregate results prior to reporting or regulatory export. Related APIs include legalHold and riskAssessment operations, audit log exports, and notifications for new review findings.","summary":"Search and paginate compliance review events (healthcare_platform_compliance_reviews).","parameters":[],"requestBody":{"description":"Search/filter and pagination criteria for compliance review aggregation.","typeName":"IHealthcarePlatformComplianceReview.IRequest"},"responseBody":{"description":"Paginated list of compliance review entries with search metadata and reviews.","typeName":"IPageIHealthcarePlatformComplianceReview"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/complianceReviews","method":"patch"},{"specification":"This operation retrieves a filtered and paginated list of compliance review events, referencing the 'healthcare_platform_compliance_reviews' table. Compliance reviews are generated as part of legal hold, risk assessment, and incident management workflows. Users can query reviews using search and filter parameters (status, type, date, reviewer, org, outcome). Designed for compliance, legal, security, and organization administrators to review investigation, audit, or incident follow-up records. All output is scoped for strict audit and regulatory requirements.","description":"Performs advanced search and retrieval of compliance review records in the healthcarePlatform. This may include reviews for legal holds, risk assessments, periodic audits, regulatory investigations, or internal compliance checks. Users provide a request body specifying complex search filters (review status, type, organization, reviewer, date ranges, outcomes, etc.) and pagination controls.\n\nSecurity: Only users with systemAdmin, organizationAdmin, or compliance-specific roles can access this API. The operation enforces strict filtering to ensure users only see reviews within their organization or department scope. Data is returned in paginated form; each review exposes full audit/compliance metadata.\n\nIntegration: Often used by compliance teams to aggregate results prior to reporting or regulatory export. Related APIs include legalHold and riskAssessment operations, audit log exports, and notifications for new review findings.","summary":"Search and paginate compliance review events (healthcare_platform_compliance_reviews).","parameters":[],"requestBody":{"description":"Search/filter and pagination criteria for compliance review aggregation.","typeName":"IHealthcarePlatformComplianceReview.IRequest"},"responseBody":{"description":"Paginated list of compliance review entries with search metadata and reviews.","typeName":"IPageIHealthcarePlatformComplianceReview"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/complianceReviews","method":"patch"},{"specification":"This operation retrieves detailed compliance review data for a single compliance review entity. It operates on the healthcare_platform_compliance_reviews table from the Prisma schema, enabling administrators or compliance auditors to view all properties of a specific compliance review, including review type, methodology, status, reviewer information, outcome, recommendations, timestamps, and any linked legal holds or risk assessment references. The operation enforces strict single-resource retrieval semantics based on a unique compliance review ID (UUID) for accurate and regulatory-compliant record-keeping. It ensures that access is governed by role-based permissions, with sensitive fields only accessible to authorized roles as defined in the business requirements.","description":"Retrieve a single compliance review record by its unique identifier from the healthcare_platform_compliance_reviews table. This operation is intended for users such as compliance officers, organization admins, or assigned reviewers who need full visibility into a particular compliance review's metadata, method, scope, status, and audit trail linkage.\n\nSecurity controls require that the operation is only accessible to users with explicit audit, compliance, or administrative permissions. Every access is logged for traceability and compliance monitoring according to HIPAA and internal audit standards. All fields returned reflect the underlying Prisma schema for the compliance review entity, ensuring that sensitive notes and recommendations are properly presented based on the user's authorization and organizational context.\n\nThis operation is expected to be used in conjunction with listing endpoints (for browsing reviews) and workflow endpoints (for progressing the review's lifecycle). When the requested record is not found or the caller lacks sufficient permissions, an appropriate error message and audit event are generated.","summary":"Retrieve a compliance review by its ID (healthcare_platform_compliance_reviews table).","parameters":[{"name":"complianceReviewId","description":"Unique identifier (UUID) of the compliance review record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for a single compliance review record, as structured in IHealthcarePlatformComplianceReview.","typeName":"IHealthcarePlatformComplianceReview"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/systemAdmin/complianceReviews/{complianceReviewId}","method":"get"},{"specification":"This operation retrieves detailed compliance review data for a single compliance review entity. It operates on the healthcare_platform_compliance_reviews table from the Prisma schema, enabling administrators or compliance auditors to view all properties of a specific compliance review, including review type, methodology, status, reviewer information, outcome, recommendations, timestamps, and any linked legal holds or risk assessment references. The operation enforces strict single-resource retrieval semantics based on a unique compliance review ID (UUID) for accurate and regulatory-compliant record-keeping. It ensures that access is governed by role-based permissions, with sensitive fields only accessible to authorized roles as defined in the business requirements.","description":"Retrieve a single compliance review record by its unique identifier from the healthcare_platform_compliance_reviews table. This operation is intended for users such as compliance officers, organization admins, or assigned reviewers who need full visibility into a particular compliance review's metadata, method, scope, status, and audit trail linkage.\n\nSecurity controls require that the operation is only accessible to users with explicit audit, compliance, or administrative permissions. Every access is logged for traceability and compliance monitoring according to HIPAA and internal audit standards. All fields returned reflect the underlying Prisma schema for the compliance review entity, ensuring that sensitive notes and recommendations are properly presented based on the user's authorization and organizational context.\n\nThis operation is expected to be used in conjunction with listing endpoints (for browsing reviews) and workflow endpoints (for progressing the review's lifecycle). When the requested record is not found or the caller lacks sufficient permissions, an appropriate error message and audit event are generated.","summary":"Retrieve a compliance review by its ID (healthcare_platform_compliance_reviews table).","parameters":[{"name":"complianceReviewId","description":"Unique identifier (UUID) of the compliance review record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for a single compliance review record, as structured in IHealthcarePlatformComplianceReview.","typeName":"IHealthcarePlatformComplianceReview"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"at","path":"/healthcarePlatform/organizationAdmin/complianceReviews/{complianceReviewId}","method":"get"},{"specification":"This operation creates a new compliance review record, to be used for tracking the review lifecycle associated with a legal hold, risk assessment, or scheduled audit. It operates on the healthcare_platform_compliance_reviews table in the Prisma schema. Review creation captures all required metadata, reviewer assignment, scope (legal hold or risk assessment), review method, status, and audit documentation. The system ensures that compliance policies and business validation rules are enforced, capturing both required fields and contextual information (e.g., scope, rationale, and reviewer(s)).\n\nOnly authorized compliance staff or platform administrators can create compliance reviews. The new review is initialized in a scheduled or in-progress state, and all creation events are logged for auditability. Record creation immediately links the review to its referencing entity (hold, risk assessment) when supplied.\n\nBusiness rules may require that only a single active review exists per legal hold or risk assessment within a given organization at a time; this constraint is enforced during creation. On success, the fully realized compliance review record is returned.","description":"Create a new compliance review entry to initiate formal audit or compliance review workflows within the healthcare_platform_compliance_reviews table. The operation ensures all required properties are supplied as per schema—linking to either a legal hold or risk assessment, assigning the reviewer role, providing method and status, and attaching all relevant metadata and initial comments. Only authorized personnel (system or organization admins with compliance privileges) are permitted to use this operation.\n\nSecurity and business rules enforce uniqueness where needed (e.g., only one active compliance review per hold/risk assessment/period), validate reviewer assignments, and capture systematic audit logs for the review's creation. Comprehensive error handling covers domain validation failures and permission issues.\n\nUpon successful creation, the complete new compliance review entity is returned, ready for workflow progression and further updates by assigned users.","summary":"Create a new compliance review (healthcare_platform_compliance_reviews table).","parameters":[],"requestBody":{"description":"Data required to create a new compliance review record, following the IHealthcarePlatformComplianceReview.ICreate request body specification.","typeName":"IHealthcarePlatformComplianceReview.ICreate"},"responseBody":{"description":"The full newly-created compliance review record with all supplied and system-generated fields.","typeName":"IHealthcarePlatformComplianceReview"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"create","path":"/healthcarePlatform/systemAdmin/complianceReviews","method":"post"},{"specification":"This operation creates a new compliance review record, to be used for tracking the review lifecycle associated with a legal hold, risk assessment, or scheduled audit. It operates on the healthcare_platform_compliance_reviews table in the Prisma schema. Review creation captures all required metadata, reviewer assignment, scope (legal hold or risk assessment), review method, status, and audit documentation. The system ensures that compliance policies and business validation rules are enforced, capturing both required fields and contextual information (e.g., scope, rationale, and reviewer(s)).\n\nOnly authorized compliance staff or platform administrators can create compliance reviews. The new review is initialized in a scheduled or in-progress state, and all creation events are logged for auditability. Record creation immediately links the review to its referencing entity (hold, risk assessment) when supplied.\n\nBusiness rules may require that only a single active review exists per legal hold or risk assessment within a given organization at a time; this constraint is enforced during creation. On success, the fully realized compliance review record is returned.","description":"Create a new compliance review entry to initiate formal audit or compliance review workflows within the healthcare_platform_compliance_reviews table. The operation ensures all required properties are supplied as per schema—linking to either a legal hold or risk assessment, assigning the reviewer role, providing method and status, and attaching all relevant metadata and initial comments. Only authorized personnel (system or organization admins with compliance privileges) are permitted to use this operation.\n\nSecurity and business rules enforce uniqueness where needed (e.g., only one active compliance review per hold/risk assessment/period), validate reviewer assignments, and capture systematic audit logs for the review's creation. Comprehensive error handling covers domain validation failures and permission issues.\n\nUpon successful creation, the complete new compliance review entity is returned, ready for workflow progression and further updates by assigned users.","summary":"Create a new compliance review (healthcare_platform_compliance_reviews table).","parameters":[],"requestBody":{"description":"Data required to create a new compliance review record, following the IHealthcarePlatformComplianceReview.ICreate request body specification.","typeName":"IHealthcarePlatformComplianceReview.ICreate"},"responseBody":{"description":"The full newly-created compliance review record with all supplied and system-generated fields.","typeName":"IHealthcarePlatformComplianceReview"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"create","path":"/healthcarePlatform/organizationAdmin/complianceReviews","method":"post"},{"specification":"This operation updates an existing compliance review record in the healthcare_platform_compliance_reviews table. It allows compliance and administrative staff to modify review metadata, update the status, assign/reassign reviewers, add outcomes, comments, or recommendations, and adjust related entity references as permitted. The update enforces strict field-level validation to ensure only allowable changes are accepted per lifecycle state and business rules (e.g., outcomes cannot be overwritten once finalized without higher-level approval).\n\nAll update events are captured in the entity's audit log for regulatory traceability. Only users with explicit compliance or administrative permission can perform updates. Attempted changes are validated according to business policies for compliance and audit readiness.\n\nUpon successful update, the current state of the compliance review record is returned. Permission and not-found errors are formally handled.","description":"Update the details of an existing compliance review. This operation is intended for compliance staff, administrators, or assigned reviewers who need to progress a review's workflow, finalize status, document outcome, or add recommendations based on new information.\n\nStrong validation logic is applied: only fields permitted by the record's current lifecycle status may be updated, and changes are constrained to avoid accidental loss of regulatory or audit-critical data. Each update triggers a new audit log entry, and all field changes are captured with timestamps.\n\nOperation errors include validation for immutable or restricted fields, permission checks, and UUID-based record not-found scenarios.","summary":"Update a compliance review record by its ID (healthcare_platform_compliance_reviews table).","parameters":[{"name":"complianceReviewId","description":"Unique identifier (UUID) of the compliance review record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the compliance review record, following IHealthcarePlatformComplianceReview.IUpdate specification.","typeName":"IHealthcarePlatformComplianceReview.IUpdate"},"responseBody":{"description":"The updated compliance review record after accepted changes.","typeName":"IHealthcarePlatformComplianceReview"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"update","path":"/healthcarePlatform/systemAdmin/complianceReviews/{complianceReviewId}","method":"put"},{"specification":"This operation updates an existing compliance review record in the healthcare_platform_compliance_reviews table. It allows compliance and administrative staff to modify review metadata, update the status, assign/reassign reviewers, add outcomes, comments, or recommendations, and adjust related entity references as permitted. The update enforces strict field-level validation to ensure only allowable changes are accepted per lifecycle state and business rules (e.g., outcomes cannot be overwritten once finalized without higher-level approval).\n\nAll update events are captured in the entity's audit log for regulatory traceability. Only users with explicit compliance or administrative permission can perform updates. Attempted changes are validated according to business policies for compliance and audit readiness.\n\nUpon successful update, the current state of the compliance review record is returned. Permission and not-found errors are formally handled.","description":"Update the details of an existing compliance review. This operation is intended for compliance staff, administrators, or assigned reviewers who need to progress a review's workflow, finalize status, document outcome, or add recommendations based on new information.\n\nStrong validation logic is applied: only fields permitted by the record's current lifecycle status may be updated, and changes are constrained to avoid accidental loss of regulatory or audit-critical data. Each update triggers a new audit log entry, and all field changes are captured with timestamps.\n\nOperation errors include validation for immutable or restricted fields, permission checks, and UUID-based record not-found scenarios.","summary":"Update a compliance review record by its ID (healthcare_platform_compliance_reviews table).","parameters":[{"name":"complianceReviewId","description":"Unique identifier (UUID) of the compliance review record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the compliance review record, following IHealthcarePlatformComplianceReview.IUpdate specification.","typeName":"IHealthcarePlatformComplianceReview.IUpdate"},"responseBody":{"description":"The updated compliance review record after accepted changes.","typeName":"IHealthcarePlatformComplianceReview"},"authorizationRole":"organizationAdmin","authorizationType":null,"name":"update","path":"/healthcarePlatform/organizationAdmin/complianceReviews/{complianceReviewId}","method":"put"},{"specification":"This operation erases (soft deletes) a compliance review record by its ID in the healthcare_platform_compliance_reviews table. The record is not physically deleted, but flagged as deleted for compliance and regulatory audit retention. Only users with advanced compliance or administrative roles (systemAdmin, organizationAdmin) are allowed to perform this operation, and complete audit trails are mandatory.\n\nUpon invocation, the operation sets the review's deleted_at timestamp to the current time, ensuring compliance with records retention and post-deletion legal review requirements. All erasure actions are logged, and once soft deleted, the record is excluded from user-facing lists (but retained for audit queries and restoration if allowed by policy).\n\nError handling covers not-found records, permission violations, and systems in which deletion is restricted by active holds, investigations, or organizational policy.","description":"Soft delete (erase) a compliance review by its unique identifier (UUID). The operation marks the compliance review record as deleted by setting its deleted_at field, without actually removing it from the database. This design aligns with regulatory and audit requirements for data retention and review, ensuring that soft-deleted records remain available for audit but are hidden from standard lists and UIs.\n\nThe erasure is only permitted for users with explicit administrative/compliance privileges, and every deletion event is logged for compliance review. Soft deleted records can be restored if policy allows, but generally cannot be erased permanently except by explicit compliance processes. Errors generated include non-existent records, lack of sufficient privilege, or attempts to delete reviews that are locked for active legal or regulatory action.","summary":"Erase (soft delete) a compliance review record by ID (healthcare_platform_compliance_reviews table).","parameters":[{"name":"complianceReviewId","description":"Unique identifier (UUID) of the compliance review record to erase (soft delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase","path":"/healthcarePlatform/systemAdmin/complianceReviews/{complianceReviewId}","method":"delete"},{"specification":"This operation erases (soft deletes) a compliance review record by its ID in the healthcare_platform_compliance_reviews table. The record is not physically deleted, but flagged as deleted for compliance and regulatory audit retention. Only users with advanced compliance or administrative roles (systemAdmin, organizationAdmin) are allowed to perform this operation, and complete audit trails are mandatory.\n\nUpon invocation, the operation sets the review's deleted_at timestamp to the current time, ensuring compliance with records retention and post-deletion legal review requirements. All erasure actions are logged, and once soft deleted, the record is excluded from user-facing lists (but retained for audit queries and restoration if allowed by policy).\n\nError handling covers not-found records, permission violations, and systems in which deletion is restricted by active holds, investigations, or organizational policy.","description":"Soft delete (erase) a compliance review by its unique identifier (UUID). The operation marks the compliance review record as deleted by setting its deleted_at field, without actually removing it from the database. This design aligns with regulatory and audit requirements for data retention and review, ensuring that soft-deleted records remain available for audit but are hidden from standard lists and UIs.\n\nThe erasure is only permitted for users with explicit administrative/compliance privileges, and every deletion event is logged for compliance review. Soft deleted records can be restored if policy allows, but generally cannot be erased permanently except by explicit compliance processes. Errors generated include non-existent records, lack of sufficient privilege, or attempts to delete reviews that are locked for active legal or regulatory action.","summary":"Erase (soft delete) a compliance review record by ID (healthcare_platform_compliance_reviews table).","parameters":[{"name":"complianceReviewId","description":"Unique identifier (UUID) of the compliance review record to erase (soft delete).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"organizationAdmin","authorizationType":null,"name":"erase","path":"/healthcarePlatform/organizationAdmin/complianceReviews/{complianceReviewId}","method":"delete"},{"specification":"This operation provides a paginated list of audit logs, supporting advanced filtering, searching, and sorting based on various criteria such as user, organization, action type, resource, and time window. It reflects the audit logs table in the Prisma schema, enabling organization-level and system-wide compliance monitoring, security forensics, and access reporting. The endpoint is designed for compliance and administrative staff to conduct investigations and ensure regulatory adherence, supporting queryable filters and sorting over critical audit events.","description":"Retrieve a list of audit logs, enabling compliance staff, auditors, or system administrators to monitor, investigate, and export records of user and system actions. This operation supports complex search criteria, such as actor, organization, action_type, date ranges, and business entities affected, supporting both broad and fine-grained investigations required by HIPAA, SOC 2, and internal policy. \n\nSecurity is paramount; only authorized roles may access full records, with query responses restricted by organization and permission scope. Sensitive context is subject to redaction for non-privileged users. The operation leverages the healthcare_platform_audit_logs Prisma table, incorporating primary, foreign key, and time indexing for high-performance queries. Results can be further filtered by related entities or action context, with sorting by date, severity, or actor. Implementation includes comprehensive error handling for invalid filters, unauthorized access attempts, and ensures soft-deleted records (if any) are excluded from standard result sets. \n\nThis operation is essential for compliance audits, breach review, and retrospective security incident analysis, working together with per-item retrieval endpoints and export operations for regulatory reporting. Pagination is supported to manage large result sets efficiently.","summary":"Search and retrieve a paginated, filterable list of audit logs for compliance and security audit.","parameters":[],"requestBody":{"description":"Search and filter criteria, including action types, actor, organization, date range, entity type, pagination, and sorting options.","typeName":"IHealthcarePlatformAuditLog.IRequest"},"responseBody":{"description":"Paginated list of audit log entries matching the search and filter criteria, with summary and detail fields as permitted to the requesting user.","typeName":"IPageIHealthcarePlatformAuditLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/auditLogs","method":"patch"},{"specification":"This operation provides a paginated list of audit logs, supporting advanced filtering, searching, and sorting based on various criteria such as user, organization, action type, resource, and time window. It reflects the audit logs table in the Prisma schema, enabling organization-level and system-wide compliance monitoring, security forensics, and access reporting. The endpoint is designed for compliance and administrative staff to conduct investigations and ensure regulatory adherence, supporting queryable filters and sorting over critical audit events.","description":"Retrieve a list of audit logs, enabling compliance staff, auditors, or system administrators to monitor, investigate, and export records of user and system actions. This operation supports complex search criteria, such as actor, organization, action_type, date ranges, and business entities affected, supporting both broad and fine-grained investigations required by HIPAA, SOC 2, and internal policy. \n\nSecurity is paramount; only authorized roles may access full records, with query responses restricted by organization and permission scope. Sensitive context is subject to redaction for non-privileged users. The operation leverages the healthcare_platform_audit_logs Prisma table, incorporating primary, foreign key, and time indexing for high-performance queries. Results can be further filtered by related entities or action context, with sorting by date, severity, or actor. Implementation includes comprehensive error handling for invalid filters, unauthorized access attempts, and ensures soft-deleted records (if any) are excluded from standard result sets. \n\nThis operation is essential for compliance audits, breach review, and retrospective security incident analysis, working together with per-item retrieval endpoints and export operations for regulatory reporting. Pagination is supported to manage large result sets efficiently.","summary":"Search and retrieve a paginated, filterable list of audit logs for compliance and security audit.","parameters":[],"requestBody":{"description":"Search and filter criteria, including action types, actor, organization, date range, entity type, pagination, and sorting options.","typeName":"IHealthcarePlatformAuditLog.IRequest"},"responseBody":{"description":"Paginated list of audit log entries matching the search and filter criteria, with summary and detail fields as permitted to the requesting user.","typeName":"IPageIHealthcarePlatformAuditLog.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/auditLogs","method":"patch"},{"specification":"This operation retrieves detailed information for a single audit log entry, identified by its unique auditLogId. The operation is modeled on the healthcare_platform_audit_logs Prisma table and is intended for compliance staff, administrators, and auditors to investigate specific events with full context. The endpoint supports referencing all available fields in the log record, including actor, organization, action type, affected entities, IP address, and time of action.","description":"Fetch a detailed audit log entry by unique auditLogId for focused compliance, audit, or security analysis. \n\nThe operation provides full event context, including actor, organization, action_type, related entity, IP address, and structured event metadata. Only users with high-level audit or administrative roles may access complete entries, and records are filtered by organization where necessary to ensure tenant data isolation. Fields containing sensitive context may be redacted based on role privileges.\n\nDesigned for integration with list/search endpoints, this operation enables drill-down on suspicious or significant events, documentation of forensic results, and access for compliance reporting workflows. Detailed error handling is implemented for invalid IDs, access violations, or non-existent records, returning appropriate error responses. This is frequently used together with audit log search, incident management, and export workflows.","summary":"Retrieve a detailed audit log entry by auditLogId for forensic investigation or compliance review.","parameters":[{"name":"auditLogId","description":"Unique identifier of the audit log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed audit log entry, including actor, organization, action context, affected entity, and event metadata.","typeName":"IHealthcarePlatformAuditLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/auditLogs/{auditLogId}","method":"get"},{"specification":"This operation retrieves detailed information for a single audit log entry, identified by its unique auditLogId. The operation is modeled on the healthcare_platform_audit_logs Prisma table and is intended for compliance staff, administrators, and auditors to investigate specific events with full context. The endpoint supports referencing all available fields in the log record, including actor, organization, action type, affected entities, IP address, and time of action.","description":"Fetch a detailed audit log entry by unique auditLogId for focused compliance, audit, or security analysis. \n\nThe operation provides full event context, including actor, organization, action_type, related entity, IP address, and structured event metadata. Only users with high-level audit or administrative roles may access complete entries, and records are filtered by organization where necessary to ensure tenant data isolation. Fields containing sensitive context may be redacted based on role privileges.\n\nDesigned for integration with list/search endpoints, this operation enables drill-down on suspicious or significant events, documentation of forensic results, and access for compliance reporting workflows. Detailed error handling is implemented for invalid IDs, access violations, or non-existent records, returning appropriate error responses. This is frequently used together with audit log search, incident management, and export workflows.","summary":"Retrieve a detailed audit log entry by auditLogId for forensic investigation or compliance review.","parameters":[{"name":"auditLogId","description":"Unique identifier of the audit log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed audit log entry, including actor, organization, action context, affected entity, and event metadata.","typeName":"IHealthcarePlatformAuditLog"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/auditLogs/{auditLogId}","method":"get"},{"specification":"This operation provides a paginated, filterable list of access logs, as modeled by the healthcare_platform_access_logs Prisma table. It enables compliance officers and administrators to audit resource access events, filter by organization, user, resource type, access purpose, and time ranges for complete HIPAA and internal compliance oversight.","description":"Search and retrieve access logs, enabling compliance, administrative, and audit staff to track all read/view access events on sensitive system resources such as EHR, patient records, and business-critical configurations. This operation supports advanced query parameters for actor (user), organization, resource type, resource ID, purpose, IP, and access date range, with the ability to paginate and sort results by any indexed field. \n\nSecurity and privacy are enforced by restricting data returned based on the caller's authorization roles and organization boundaries. Sensitive fields, such as access justification, may be masked for non-privileged users. This operation relies on the healthcare_platform_access_logs table, supporting investigation, breach review, and regulatory reporting. Full audit trails of access attempts, including user, resource, purpose, and network origin, are available for eligible roles. Edge-case handling includes soft-deletion filtering and robust query validation.","summary":"Search and retrieve a paginated, filterable list of access logs for compliance and access reporting.","parameters":[],"requestBody":{"description":"Filter and pagination criteria for searching access logs, supporting actor, organization, resource type, access purpose, date range, and sorting options.","typeName":"IHealthcarePlatformAccessLog.IRequest"},"responseBody":{"description":"Paginated access logs matching filter criteria with summary details per access event.","typeName":"IPageIHealthcarePlatformAccessLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/accessLogs","method":"patch"},{"specification":"This operation provides a paginated, filterable list of access logs, as modeled by the healthcare_platform_access_logs Prisma table. It enables compliance officers and administrators to audit resource access events, filter by organization, user, resource type, access purpose, and time ranges for complete HIPAA and internal compliance oversight.","description":"Search and retrieve access logs, enabling compliance, administrative, and audit staff to track all read/view access events on sensitive system resources such as EHR, patient records, and business-critical configurations. This operation supports advanced query parameters for actor (user), organization, resource type, resource ID, purpose, IP, and access date range, with the ability to paginate and sort results by any indexed field. \n\nSecurity and privacy are enforced by restricting data returned based on the caller's authorization roles and organization boundaries. Sensitive fields, such as access justification, may be masked for non-privileged users. This operation relies on the healthcare_platform_access_logs table, supporting investigation, breach review, and regulatory reporting. Full audit trails of access attempts, including user, resource, purpose, and network origin, are available for eligible roles. Edge-case handling includes soft-deletion filtering and robust query validation.","summary":"Search and retrieve a paginated, filterable list of access logs for compliance and access reporting.","parameters":[],"requestBody":{"description":"Filter and pagination criteria for searching access logs, supporting actor, organization, resource type, access purpose, date range, and sorting options.","typeName":"IHealthcarePlatformAccessLog.IRequest"},"responseBody":{"description":"Paginated access logs matching filter criteria with summary details per access event.","typeName":"IPageIHealthcarePlatformAccessLog.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/accessLogs","method":"patch"},{"specification":"This operation retrieves a detailed access log entry from the healthcare_platform_access_logs table, using the unique accessLogId. Designed for audit, compliance, and security staff conducting investigations or audits of resource access events, the endpoint returns all available fields for the identified access event.","description":"Retrieve detailed information for a specific access log entry by its accessLogId. The record contains the actor/user, organization, resource type, resource ID, access purpose, IP address, and timestamp. Only users with systemAdmin or organizationAdmin roles may access full detail, with enforcement of tenant boundaries to ensure that cross-org access is prevented.\n\nThis operation is intended for investigative workflows when list or search queries indicate suspicious or critical accesses. It allows drill-down for user activity analysis, breach investigations, or verification of access appropriateness. Robust error handling returns clear responses on invalid accessLogId, access denial, or records not found. Used together with access log search endpoints and incident response operations.","summary":"Retrieve a specific access log entry by accessLogId for audit and investigative review.","parameters":[{"name":"accessLogId","description":"Unique identifier of the access log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed access log entry with full access context for security or compliance use.","typeName":"IHealthcarePlatformAccessLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/accessLogs/{accessLogId}","method":"get"},{"specification":"This operation retrieves a detailed access log entry from the healthcare_platform_access_logs table, using the unique accessLogId. Designed for audit, compliance, and security staff conducting investigations or audits of resource access events, the endpoint returns all available fields for the identified access event.","description":"Retrieve detailed information for a specific access log entry by its accessLogId. The record contains the actor/user, organization, resource type, resource ID, access purpose, IP address, and timestamp. Only users with systemAdmin or organizationAdmin roles may access full detail, with enforcement of tenant boundaries to ensure that cross-org access is prevented.\n\nThis operation is intended for investigative workflows when list or search queries indicate suspicious or critical accesses. It allows drill-down for user activity analysis, breach investigations, or verification of access appropriateness. Robust error handling returns clear responses on invalid accessLogId, access denial, or records not found. Used together with access log search endpoints and incident response operations.","summary":"Retrieve a specific access log entry by accessLogId for audit and investigative review.","parameters":[{"name":"accessLogId","description":"Unique identifier of the access log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed access log entry with full access context for security or compliance use.","typeName":"IHealthcarePlatformAccessLog"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/accessLogs/{accessLogId}","method":"get"},{"specification":"This operation retrieves a paginated and searchable list of data export log entries for the healthcarePlatform system. It operates on the healthcare_platform_data_export_logs table, enabling filtered queries based on export type, justification, destination, status, and creation date/time. The response supports advanced filtering, sorting, and pagination, allowing authorized users to audit historical data exports for regulatory compliance, breach investigation, or business review.","description":"Retrieve a list of data export logs matching filters such as export type, justification, destination, status, or created date, with full pagination and sorting capabilities.\n\nThe endpoint is primarily used by systemAdmin and organizationAdmin roles for audit, compliance, and operational review. All responses exclude PHI content and only provide metadata. Filtering parameters include export_type (e.g., EHR_BULK, REPORT), exported_data_scope, status, and date range.\n\nSecurity: Restricted to highly privileged users due to the sensitivity of export operations, and full actions are logged as part of a compliance audit. Query results show only records within the user's organization or the scope of their assignment.\n\nValidation: Only queryable fields from the Prisma schema may be filtered. Sort order defaults to recent events.\n\nThis operation works together with the single log retrieval endpoint for detailed drill-down. Standard errors are returned for access violations, and all access events are audit-logged.","summary":"Search and retrieve a filtered, paginated list of data export log events from healthcare_platform_data_export_logs.","parameters":[],"requestBody":{"description":"Parameters for data export log filtering, searching, pagination, and sorting.","typeName":"IHealthcarePlatformDataExportLog.IRequest"},"responseBody":{"description":"Paginated list of data export log records matching search and filtering criteria.","typeName":"IPageIHealthcarePlatformDataExportLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","method":"patch","name":"index","path":"/healthcarePlatform/systemAdmin/dataExportLogs"},{"specification":"This operation retrieves a paginated and searchable list of data export log entries for the healthcarePlatform system. It operates on the healthcare_platform_data_export_logs table, enabling filtered queries based on export type, justification, destination, status, and creation date/time. The response supports advanced filtering, sorting, and pagination, allowing authorized users to audit historical data exports for regulatory compliance, breach investigation, or business review.","description":"Retrieve a list of data export logs matching filters such as export type, justification, destination, status, or created date, with full pagination and sorting capabilities.\n\nThe endpoint is primarily used by systemAdmin and organizationAdmin roles for audit, compliance, and operational review. All responses exclude PHI content and only provide metadata. Filtering parameters include export_type (e.g., EHR_BULK, REPORT), exported_data_scope, status, and date range.\n\nSecurity: Restricted to highly privileged users due to the sensitivity of export operations, and full actions are logged as part of a compliance audit. Query results show only records within the user's organization or the scope of their assignment.\n\nValidation: Only queryable fields from the Prisma schema may be filtered. Sort order defaults to recent events.\n\nThis operation works together with the single log retrieval endpoint for detailed drill-down. Standard errors are returned for access violations, and all access events are audit-logged.","summary":"Search and retrieve a filtered, paginated list of data export log events from healthcare_platform_data_export_logs.","parameters":[],"requestBody":{"description":"Parameters for data export log filtering, searching, pagination, and sorting.","typeName":"IHealthcarePlatformDataExportLog.IRequest"},"responseBody":{"description":"Paginated list of data export log records matching search and filtering criteria.","typeName":"IPageIHealthcarePlatformDataExportLog.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"patch","name":"index","path":"/healthcarePlatform/organizationAdmin/dataExportLogs"},{"specification":"This operation retrieves detailed information about a specific data export log record identified by its unique dataExportLogId. The endpoint queries the healthcare_platform_data_export_logs table and returns all available metadata for auditing, regulatory reporting, or operational review.","description":"Retrieve the details for an individual data export log record, including export_type, exported_data_scope, justification, status, timestamp, destination, and file metadata, as permitted by the Prisma schema.\n\nThis is an audit/compliance-focused endpoint only for privileged users who have access in their org. PHI content or exported files themselves are never returned—only metadata is shown. Full access event is logged, and invalid/missing dataExportLogId returns a not found error.\n\nWorks together with the data export log search operation. If the record is not visible to the user's scope, returns a forbidden error. All lookup events are audit-logged.","summary":"Get the details of a data export log record from healthcare_platform_data_export_logs by ID.","parameters":[{"name":"dataExportLogId","description":"The unique identifier (UUID) of the data export log record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the requested data export log event, excluding PHI/file payloads.","typeName":"IHealthcarePlatformDataExportLog"},"authorizationType":null,"authorizationRole":"systemAdmin","method":"get","name":"at","path":"/healthcarePlatform/systemAdmin/dataExportLogs/{dataExportLogId}"},{"specification":"This operation retrieves detailed information about a specific data export log record identified by its unique dataExportLogId. The endpoint queries the healthcare_platform_data_export_logs table and returns all available metadata for auditing, regulatory reporting, or operational review.","description":"Retrieve the details for an individual data export log record, including export_type, exported_data_scope, justification, status, timestamp, destination, and file metadata, as permitted by the Prisma schema.\n\nThis is an audit/compliance-focused endpoint only for privileged users who have access in their org. PHI content or exported files themselves are never returned—only metadata is shown. Full access event is logged, and invalid/missing dataExportLogId returns a not found error.\n\nWorks together with the data export log search operation. If the record is not visible to the user's scope, returns a forbidden error. All lookup events are audit-logged.","summary":"Get the details of a data export log record from healthcare_platform_data_export_logs by ID.","parameters":[{"name":"dataExportLogId","description":"The unique identifier (UUID) of the data export log record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Details of the requested data export log event, excluding PHI/file payloads.","typeName":"IHealthcarePlatformDataExportLog"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"get","name":"at","path":"/healthcarePlatform/organizationAdmin/dataExportLogs/{dataExportLogId}"},{"specification":"This operation retrieves a paginated, filterable list of security incidents recorded in the healthcare_platform_security_incidents table. Supports searching by incident_type, status, severity, opened_at date, and additional metadata, according to compliance requirements for audit and forensic investigation.","description":"Retrieve a list of security incidents, including type (e.g., FAILED_LOGIN, PHI_EXFIL, BREACH_SUSPECTED), status (OPEN, INVESTIGATING, RESOLVED, etc.), severity, summary, classification, open/close timestamps, and linked user/organization metadata as permitted by the Prisma schema.\n\nThe endpoint is intended for platform and organization administrators to monitor security posture, respond to incidents, and document investigative workflows. Filtering supports incident_type, date range, status, and severity. Access is restricted—only appropriate admins may query logs within their organization (systemAdmin can view all records).\n\nSecurity: All accesses to this endpoint are themselves logged in the audit trail, with robust permission checking. Only metadata—never PHI—is shown in results. Works with the single incident detail operation for drill-down.\n\nStandard compliant error handling is provided for access restriction, invalid query parameters, or organizational isolation violations.","summary":"Search and retrieve a paginated, filterable list of security incidents from healthcare_platform_security_incidents.","parameters":[],"requestBody":{"description":"Parameters for filtering, searching, paginating, and sorting security incidents.","typeName":"IHealthcarePlatformSecurityIncident.IRequest"},"responseBody":{"description":"Paginated list of security incident summaries matching search criteria.","typeName":"IPageIHealthcarePlatformSecurityIncident.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","method":"patch","name":"index","path":"/healthcarePlatform/systemAdmin/securityIncidents"},{"specification":"This operation retrieves a paginated, filterable list of security incidents recorded in the healthcare_platform_security_incidents table. Supports searching by incident_type, status, severity, opened_at date, and additional metadata, according to compliance requirements for audit and forensic investigation.","description":"Retrieve a list of security incidents, including type (e.g., FAILED_LOGIN, PHI_EXFIL, BREACH_SUSPECTED), status (OPEN, INVESTIGATING, RESOLVED, etc.), severity, summary, classification, open/close timestamps, and linked user/organization metadata as permitted by the Prisma schema.\n\nThe endpoint is intended for platform and organization administrators to monitor security posture, respond to incidents, and document investigative workflows. Filtering supports incident_type, date range, status, and severity. Access is restricted—only appropriate admins may query logs within their organization (systemAdmin can view all records).\n\nSecurity: All accesses to this endpoint are themselves logged in the audit trail, with robust permission checking. Only metadata—never PHI—is shown in results. Works with the single incident detail operation for drill-down.\n\nStandard compliant error handling is provided for access restriction, invalid query parameters, or organizational isolation violations.","summary":"Search and retrieve a paginated, filterable list of security incidents from healthcare_platform_security_incidents.","parameters":[],"requestBody":{"description":"Parameters for filtering, searching, paginating, and sorting security incidents.","typeName":"IHealthcarePlatformSecurityIncident.IRequest"},"responseBody":{"description":"Paginated list of security incident summaries matching search criteria.","typeName":"IPageIHealthcarePlatformSecurityIncident.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"patch","name":"index","path":"/healthcarePlatform/organizationAdmin/securityIncidents"},{"specification":"This operation retrieves full details of a specific security incident from the healthcare_platform_security_incidents table by its unique securityIncidentId. Returns comprehensive metadata for audit, investigation, and response workflows.","description":"Retrieve the detailed metadata for a specific security incident, including type, status, summary, incident classification, timestamps, severity, user/organization references, and all available incident fields except for PHI data.\n\nAccess is restricted to privileged system and organization admins for compliance. Each query is logged as an audit event. Not found or forbidden errors are returned for missing or unauthorized securityIncidentId. This endpoint is designed for use in parallel with the security incident search operation to enable incident triage.\n\nRecords are isolated to the requester's organization unless systemAdmin. All user access is logged per compliance policy.","summary":"Get details for a specific security incident from healthcare_platform_security_incidents by ID.","parameters":[{"name":"securityIncidentId","description":"Unique identifier (UUID) of the security incident to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete metadata for the requested security incident (excludes PHI).","typeName":"IHealthcarePlatformSecurityIncident"},"authorizationType":null,"authorizationRole":"systemAdmin","method":"get","name":"at","path":"/healthcarePlatform/systemAdmin/securityIncidents/{securityIncidentId}"},{"specification":"This operation retrieves full details of a specific security incident from the healthcare_platform_security_incidents table by its unique securityIncidentId. Returns comprehensive metadata for audit, investigation, and response workflows.","description":"Retrieve the detailed metadata for a specific security incident, including type, status, summary, incident classification, timestamps, severity, user/organization references, and all available incident fields except for PHI data.\n\nAccess is restricted to privileged system and organization admins for compliance. Each query is logged as an audit event. Not found or forbidden errors are returned for missing or unauthorized securityIncidentId. This endpoint is designed for use in parallel with the security incident search operation to enable incident triage.\n\nRecords are isolated to the requester's organization unless systemAdmin. All user access is logged per compliance policy.","summary":"Get details for a specific security incident from healthcare_platform_security_incidents by ID.","parameters":[{"name":"securityIncidentId","description":"Unique identifier (UUID) of the security incident to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete metadata for the requested security incident (excludes PHI).","typeName":"IHealthcarePlatformSecurityIncident"},"authorizationType":null,"authorizationRole":"organizationAdmin","method":"get","name":"at","path":"/healthcarePlatform/organizationAdmin/securityIncidents/{securityIncidentId}"},{"specification":"Retrieves a paginated list of emergency access override audit records from the healthcare_platform_emergency_access_overrides table, supporting filtering by organization, user, scope, reason, time window, and status. These records represent all 'break-the-glass' situations where permission boundaries were overridden due to a declared emergency. Fully detailed querying is required by compliance and audit teams for regulatory reviews and post-incident investigations. This operation enables compliance, legal, and security staff to conduct robust searches of all emergency access events, with optional filtering, real-time pagination, and configurable sort order.","description":"This operation is used for compliance reviews, regulatory audits, and internal investigations to track all instances of emergency access override events, commonly known as 'break-the-glass' scenarios, across the healthcarePlatform system.\n\nEach record in the healthcare_platform_emergency_access_overrides table logs the user, organization, access scope, justification, window of override, and post-event review status. Use this API to query by multiple filters (organization, user ID, date range, review status, override scope), supporting advanced search requirements. Permission to use this endpoint is typically reserved for systemAdmin, organizationAdmin, and compliance auditor roles.\n\nThe operation supports full pagination and advanced sorting (e.g., timestamp, urgency, review status), returning rich details necessary for investigation and regulatory reporting. Requesting users must have privileged audit permissions. The result set is strictly filtered to the user's granted organizations/departments.","summary":"Searches and retrieves a filtered, paginated list of emergency access override records for compliance and audit review.","parameters":[],"requestBody":{"description":"Search filters, pagination, and sorting options for querying emergency access override logs, including organization, user, scope, status, date range, and review fields.","typeName":"IHealthcarePlatformEmergencyAccessOverride.IRequest"},"responseBody":{"description":"Paginated list of emergency access override audit entries matching the provided filters and pagination state.","typeName":"IPageIHealthcarePlatformEmergencyAccessOverride"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/emergencyAccessOverrides","method":"patch"},{"specification":"Retrieves a paginated list of emergency access override audit records from the healthcare_platform_emergency_access_overrides table, supporting filtering by organization, user, scope, reason, time window, and status. These records represent all 'break-the-glass' situations where permission boundaries were overridden due to a declared emergency. Fully detailed querying is required by compliance and audit teams for regulatory reviews and post-incident investigations. This operation enables compliance, legal, and security staff to conduct robust searches of all emergency access events, with optional filtering, real-time pagination, and configurable sort order.","description":"This operation is used for compliance reviews, regulatory audits, and internal investigations to track all instances of emergency access override events, commonly known as 'break-the-glass' scenarios, across the healthcarePlatform system.\n\nEach record in the healthcare_platform_emergency_access_overrides table logs the user, organization, access scope, justification, window of override, and post-event review status. Use this API to query by multiple filters (organization, user ID, date range, review status, override scope), supporting advanced search requirements. Permission to use this endpoint is typically reserved for systemAdmin, organizationAdmin, and compliance auditor roles.\n\nThe operation supports full pagination and advanced sorting (e.g., timestamp, urgency, review status), returning rich details necessary for investigation and regulatory reporting. Requesting users must have privileged audit permissions. The result set is strictly filtered to the user's granted organizations/departments.","summary":"Searches and retrieves a filtered, paginated list of emergency access override records for compliance and audit review.","parameters":[],"requestBody":{"description":"Search filters, pagination, and sorting options for querying emergency access override logs, including organization, user, scope, status, date range, and review fields.","typeName":"IHealthcarePlatformEmergencyAccessOverride.IRequest"},"responseBody":{"description":"Paginated list of emergency access override audit entries matching the provided filters and pagination state.","typeName":"IPageIHealthcarePlatformEmergencyAccessOverride"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/emergencyAccessOverrides","method":"patch"},{"specification":"Retrieves the details of a specific emergency access override event from the healthcare_platform_emergency_access_overrides table by its unique identifier. This provides a complete audit trail for one 'break-the-glass' incident, including user, organization, scope, justification, all access metadata, time window, and post-event compliance review fields. Used by privileged roles for incident review, regulatory audit, safety investigation, and compliance reporting.","description":"This operation allows compliance officers, organization admins, and system administrators to view the full, detailed information of a single emergency access override record, identified by emergencyAccessOverrideId.\n\nThe record contains all fields mandated by regulatory and business rules: user identity, role, justification, accessed data scope, override period, review/revocation metadata, and cross-references to related audit events. It is used in post-incident workflow to verify proper compliance, procedural justification, and to document the responsible reviewer's actions.\n\nThe returned data supports legal review, security investigation, and detailed compliance documentation, consistent with the healthcare_platform_emergency_access_overrides schema, including all timestamps, reason fields, and outcome metrics. Query is strictly authorized to privileged auditing roles, with access scope enforcement implemented in backend logic.","summary":"Retrieves full details for a specific emergency access override audit record by its ID.","parameters":[{"name":"emergencyAccessOverrideId","description":"Unique identifier (UUID) of the emergency access override record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the requested emergency access override, including actor, scope, time window, reason, review metadata, and outcome.","typeName":"IHealthcarePlatformEmergencyAccessOverride"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/emergencyAccessOverrides/{emergencyAccessOverrideId}","method":"get"},{"specification":"Retrieves the details of a specific emergency access override event from the healthcare_platform_emergency_access_overrides table by its unique identifier. This provides a complete audit trail for one 'break-the-glass' incident, including user, organization, scope, justification, all access metadata, time window, and post-event compliance review fields. Used by privileged roles for incident review, regulatory audit, safety investigation, and compliance reporting.","description":"This operation allows compliance officers, organization admins, and system administrators to view the full, detailed information of a single emergency access override record, identified by emergencyAccessOverrideId.\n\nThe record contains all fields mandated by regulatory and business rules: user identity, role, justification, accessed data scope, override period, review/revocation metadata, and cross-references to related audit events. It is used in post-incident workflow to verify proper compliance, procedural justification, and to document the responsible reviewer's actions.\n\nThe returned data supports legal review, security investigation, and detailed compliance documentation, consistent with the healthcare_platform_emergency_access_overrides schema, including all timestamps, reason fields, and outcome metrics. Query is strictly authorized to privileged auditing roles, with access scope enforcement implemented in backend logic.","summary":"Retrieves full details for a specific emergency access override audit record by its ID.","parameters":[{"name":"emergencyAccessOverrideId","description":"Unique identifier (UUID) of the emergency access override record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete details of the requested emergency access override, including actor, scope, time window, reason, review metadata, and outcome.","typeName":"IHealthcarePlatformEmergencyAccessOverride"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/emergencyAccessOverrides/{emergencyAccessOverrideId}","method":"get"},{"specification":"Retrieves a paginated, filtered list of audit log archive records from the healthcare_platform_audit_log_archives table, supporting advanced search queries for archive type, organization, retention period, storage location, and creation window. Used primarily by system administrators and compliance teams for managing, validating, and reviewing long-term audit log storage for regulatory and business retention policies.","description":"This operation is used by highly privileged system administrators and organizational compliance officers to search, monitor, and review long-term audit log archives. Each record represents a batch of historical audit data that has been moved into regulated cold storage, with strict metadata tracking required by HIPAA, SOC 2, and organizational policies.\n\nThe operation allows for advanced filtering by archive type, organization context, archive creation/internal date windows, and retention period endpoints. Pagination and sorting support enable efficient review of large volumes of long-term audit data archives. Only users with appropriate platform or org-level compliance permissions can access this endpoint.\n\nBusiness validations in the request may include validation of the organization’s compliance status and data retention policies, ensuring only authorized access and valid organization/archive context. The resulting data is critical for external audits, compliance inspections, and legal proceedings.","summary":"Searches and retrieves a filtered, paginated list of audit log archive records for long-term compliance review.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination fields for listing audit log archive records.","typeName":"IHealthcarePlatformAuditLogArchive.IRequest"},"responseBody":{"description":"Paginated list of audit log archive records matching filters and pagination state.","typeName":"IPageIHealthcarePlatformAuditLogArchive"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/auditLogArchives","method":"patch"},{"specification":"Retrieves a paginated, filtered list of audit log archive records from the healthcare_platform_audit_log_archives table, supporting advanced search queries for archive type, organization, retention period, storage location, and creation window. Used primarily by system administrators and compliance teams for managing, validating, and reviewing long-term audit log storage for regulatory and business retention policies.","description":"This operation is used by highly privileged system administrators and organizational compliance officers to search, monitor, and review long-term audit log archives. Each record represents a batch of historical audit data that has been moved into regulated cold storage, with strict metadata tracking required by HIPAA, SOC 2, and organizational policies.\n\nThe operation allows for advanced filtering by archive type, organization context, archive creation/internal date windows, and retention period endpoints. Pagination and sorting support enable efficient review of large volumes of long-term audit data archives. Only users with appropriate platform or org-level compliance permissions can access this endpoint.\n\nBusiness validations in the request may include validation of the organization’s compliance status and data retention policies, ensuring only authorized access and valid organization/archive context. The resulting data is critical for external audits, compliance inspections, and legal proceedings.","summary":"Searches and retrieves a filtered, paginated list of audit log archive records for long-term compliance review.","parameters":[],"requestBody":{"description":"Filtering, sorting, and pagination fields for listing audit log archive records.","typeName":"IHealthcarePlatformAuditLogArchive.IRequest"},"responseBody":{"description":"Paginated list of audit log archive records matching filters and pagination state.","typeName":"IPageIHealthcarePlatformAuditLogArchive"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/auditLogArchives","method":"patch"},{"specification":"Retrieves the full details of a single audit log archive record by its unique archive ID from the healthcare_platform_audit_log_archives table. Delivers complete archiving metadata, retention parameters, storage location, and organizational context required for compliance reporting, internal review, or rehydration requests. Intended for administrative and compliance review functions.","description":"This operation provides detailed retrieval of all metadata and associated context for a specific audit log archive batch, as referenced by auditLogArchiveId in the healthcare_platform_audit_log_archives table.\n\nThe returned data includes organization, archive type, storage URI, retention and expiry fields, creation timestamp, and all business-required tracking parameters. The endpoint is accessed by compliance teams/system admins in scenarios such as preparing for audits, fulfilling regulatory requests, or validating archive/retention windows.\n\nAccess control is strictly enforced at the platform and organization scope to prevent unauthorized disclosure. All access events should themselves be audited as per compliance policy.","summary":"Retrieves complete details of a specific audit log archive record by its ID.","parameters":[{"name":"auditLogArchiveId","description":"Archive record ID (UUID) of the audit log archive to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete metadata, context, and storage details of the audit log archive record identified by the auditLogArchiveId.","typeName":"IHealthcarePlatformAuditLogArchive"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/auditLogArchives/{auditLogArchiveId}","method":"get"},{"specification":"Retrieves the full details of a single audit log archive record by its unique archive ID from the healthcare_platform_audit_log_archives table. Delivers complete archiving metadata, retention parameters, storage location, and organizational context required for compliance reporting, internal review, or rehydration requests. Intended for administrative and compliance review functions.","description":"This operation provides detailed retrieval of all metadata and associated context for a specific audit log archive batch, as referenced by auditLogArchiveId in the healthcare_platform_audit_log_archives table.\n\nThe returned data includes organization, archive type, storage URI, retention and expiry fields, creation timestamp, and all business-required tracking parameters. The endpoint is accessed by compliance teams/system admins in scenarios such as preparing for audits, fulfilling regulatory requests, or validating archive/retention windows.\n\nAccess control is strictly enforced at the platform and organization scope to prevent unauthorized disclosure. All access events should themselves be audited as per compliance policy.","summary":"Retrieves complete details of a specific audit log archive record by its ID.","parameters":[{"name":"auditLogArchiveId","description":"Archive record ID (UUID) of the audit log archive to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete metadata, context, and storage details of the audit log archive record identified by the auditLogArchiveId.","typeName":"IHealthcarePlatformAuditLogArchive"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/auditLogArchives/{auditLogArchiveId}","method":"get"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/systemAdmin/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/organizationAdmin/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/departmentHead/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"departmentHead","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/medicalDoctor/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/nurse/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"nurse","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/technician/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"technician","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/receptionist/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"receptionist","name":"index"},{"specification":"This operation retrieves a paginated, filtered, and sorted list of notification events within the healthcarePlatform system. It queries the Notifications table and related entities, supporting flexible search for notification type, status, recipient, delivery channel, criticality, and time windows. Designed for both administrative and user-facing notification feeds, the API enables users to retrieve relevant notifications for their account or organization, supporting audit, workflow action, and compliance reporting features. Pagination and advanced filtering are fully supported for production workloads.","description":"This API operation provides a comprehensive, advanced search endpoint for retrieving notifications issued in the healthcarePlatform system. Leveraging the Notifications table and utilizing all available filtering and sorting options, the operation supports multi-tenant, role-aware searches by notification type (e.g., appointment reminder, billing alert), delivery channel (email, SMS, in-app), criticality, status, recipient, sender, and more. \n\nAll search criteria—including pagination, sorting parameters, criticality flag, status codes, and date ranges—are encapsulated in the request body, which is validated against the Notifications schema comments for correct use. Output is paginated, providing summary data for each notification (IDs, types, status, timestamps, subject, body preview, and metadata for display purposes).\n\nSecurity policies are strictly enforced; the caller only receives notifications for which they are authorized, according to organization, role, and privacy configuration. Sensitive notification bodies are appropriately redacted or omitted for unauthorized parties. The implementation makes use of JSONB/Gin indexes and supports highly responsive search even in high-volume environments.\n\nRelated APIs: individual notification retrieval, notification creation, or acknowledgement operations. Error handling covers invalid search criteria, forbidden access, and pagination range errors.","summary":"Search and retrieve notifications with advanced filtering and pagination (Notifications table).","path":"/healthcarePlatform/patient/notifications","method":"patch","parameters":[],"requestBody":{"description":"Notification search and filter criteria, including pagination and sort options.","typeName":"IHealthcarePlatformNotification.IRequest"},"responseBody":{"description":"Paginated result list of matching notification summary objects.","typeName":"IPageIHealthcarePlatformNotification.ISummary"},"authorizationType":null,"authorizationRole":"patient","name":"index"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/systemAdmin/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/organizationAdmin/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/departmentHead/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"departmentHead","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/medicalDoctor/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/nurse/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"nurse","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/technician/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"technician","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/receptionist/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"receptionist","name":"at"},{"specification":"This operation retrieves the detailed information for a specific notification from the Notifications table by its unique identifier. It is used to present full notification content to authorized users, including subject, message body, metadata, and delivery status. This operation is essential for notification viewing, compliance auditing, or follow-up action, and ensures that all access is logged for audit purposes. It strictly enforces access policies, allowing only the recipient or permitted admin roles to view sensitive notification detail.","description":"This API endpoint fetches the full record of a notification event by its unique notificationId. Drawing on the Notifications schema, it returns detailed data including notification type, channel, criticality, recipient, sender, subject, full body, delivery attempts and status, time stamps, and any escalation or acknowledgement data linked to the notification.\n\nAccess is role-checked: only the intended recipient, sender, organization administrators, or permitted compliance staff may view the notification. The API will redact message content or deny access if the requester's role and context do not match privacy and compliance policies. All access requests are logged in the audit subsystem for full traceability.\n\nHandles error conditions such as invalid or missing notificationId, unauthorized access, or already-deleted records. Related APIs enable listing notifications, sending new notifications, or managing delivery status.","summary":"Retrieve full details of a specific notification (Notifications table).","path":"/healthcarePlatform/patient/notifications/{notificationId}","method":"get","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed notification record for the given ID, if authorized.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"patient","name":"at"},{"specification":"This operation creates a new notification record in the system, adding an entry to the Notifications table and triggering delivery via specified channels (email, SMS, in-app, etc.). Administrative or workflow services may call this API to notify users or staff about clinical, administrative, or compliance events. Payload includes full notification content, recipient and sender identifiers, type, and delivery preferences. Creation logic enforces roles, channel restrictions, and triggers initial delivery workflow.","description":"Enables authorized staff or service components to issue new notifications to users, organizations, or roles within the healthcarePlatform. The request body encapsulates all notification creation parameters: recipient identifiers, organization, notification type, channel, subject, message body, critical status, and optional escalation instructions.\n\nThe operation validates the payload according to strict notification schema comments, ensuring delivery channels and recipient roles are permitted and that content respects privacy and compliance regulations. Upon successful creation, the notification is queued for delivery, targeting channels (email, SMS, in-app, etc.) as configured. Returns the newly created notification's full data for tracking or user interface display.\n\nSecurity checks ensure only permitted roles (typically admin, staff, or trusted integration services) may invoke this endpoint to create notifications. Audit trails are automatically generated. Related APIs include notification search, recipient preference queries, and delivery status updates.","summary":"Create and issue a new notification to recipient(s) (Notifications table).","path":"/healthcarePlatform/systemAdmin/notifications","method":"post","parameters":[],"requestBody":{"description":"Information for creating a new notification, including content, recipient, and delivery parameters.","typeName":"IHealthcarePlatformNotification.ICreate"},"responseBody":{"description":"The newly created notification record, including assigned ID and delivery status.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation creates a new notification record in the system, adding an entry to the Notifications table and triggering delivery via specified channels (email, SMS, in-app, etc.). Administrative or workflow services may call this API to notify users or staff about clinical, administrative, or compliance events. Payload includes full notification content, recipient and sender identifiers, type, and delivery preferences. Creation logic enforces roles, channel restrictions, and triggers initial delivery workflow.","description":"Enables authorized staff or service components to issue new notifications to users, organizations, or roles within the healthcarePlatform. The request body encapsulates all notification creation parameters: recipient identifiers, organization, notification type, channel, subject, message body, critical status, and optional escalation instructions.\n\nThe operation validates the payload according to strict notification schema comments, ensuring delivery channels and recipient roles are permitted and that content respects privacy and compliance regulations. Upon successful creation, the notification is queued for delivery, targeting channels (email, SMS, in-app, etc.) as configured. Returns the newly created notification's full data for tracking or user interface display.\n\nSecurity checks ensure only permitted roles (typically admin, staff, or trusted integration services) may invoke this endpoint to create notifications. Audit trails are automatically generated. Related APIs include notification search, recipient preference queries, and delivery status updates.","summary":"Create and issue a new notification to recipient(s) (Notifications table).","path":"/healthcarePlatform/organizationAdmin/notifications","method":"post","parameters":[],"requestBody":{"description":"Information for creating a new notification, including content, recipient, and delivery parameters.","typeName":"IHealthcarePlatformNotification.ICreate"},"responseBody":{"description":"The newly created notification record, including assigned ID and delivery status.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create"},{"specification":"This operation updates an existing notification's properties in the Notifications table by notificationId. Typical use cases include administrative management (e.g., updating delivery status, marking as acknowledged, modifying escalation data). The API enforces notifications' immutable fields (ID, creation metadata) and only permits changes to update-allowed attributes. Strict access controls ensure only authorized admin or system roles can update notifications.","description":"This API endpoint allows permitted admin or workflow users to update the details of a specific notification, as identified by notificationId. Updatable fields include delivery status, acknowledgment state, escalation linkages, or compliance notations. The request body must conform to update-allowed attributes per the Notifications schema comments and business logic: certain fields (e.g., notificationId, created_at) are immutable and cannot be changed through this operation.\n\nThe operation is intended for administrative interventions, retry of failed delivery, or manual escalation/acknowledgment in compliance or incident workflows. Attempts to update immutable or restricted fields will result in error responses. Every invocation triggers audit log entries for compliance monitoring.\n\nStrict authorization policies are enforced: general users cannot update notification records (use acknowledgement APIs instead); only admins or system integrations can update. Related endpoints include notification creation, status audit, and access log queries.","summary":"Update editable fields of an existing notification by ID (Notifications table).","path":"/healthcarePlatform/systemAdmin/notifications/{notificationId}","method":"put","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details for updating allowed attributes of the notification (delivery status, escalation, etc.).","typeName":"IHealthcarePlatformNotification.IUpdate"},"responseBody":{"description":"The updated notification record after applying modifications.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation updates an existing notification's properties in the Notifications table by notificationId. Typical use cases include administrative management (e.g., updating delivery status, marking as acknowledged, modifying escalation data). The API enforces notifications' immutable fields (ID, creation metadata) and only permits changes to update-allowed attributes. Strict access controls ensure only authorized admin or system roles can update notifications.","description":"This API endpoint allows permitted admin or workflow users to update the details of a specific notification, as identified by notificationId. Updatable fields include delivery status, acknowledgment state, escalation linkages, or compliance notations. The request body must conform to update-allowed attributes per the Notifications schema comments and business logic: certain fields (e.g., notificationId, created_at) are immutable and cannot be changed through this operation.\n\nThe operation is intended for administrative interventions, retry of failed delivery, or manual escalation/acknowledgment in compliance or incident workflows. Attempts to update immutable or restricted fields will result in error responses. Every invocation triggers audit log entries for compliance monitoring.\n\nStrict authorization policies are enforced: general users cannot update notification records (use acknowledgement APIs instead); only admins or system integrations can update. Related endpoints include notification creation, status audit, and access log queries.","summary":"Update editable fields of an existing notification by ID (Notifications table).","path":"/healthcarePlatform/organizationAdmin/notifications/{notificationId}","method":"put","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details for updating allowed attributes of the notification (delivery status, escalation, etc.).","typeName":"IHealthcarePlatformNotification.IUpdate"},"responseBody":{"description":"The updated notification record after applying modifications.","typeName":"IHealthcarePlatformNotification"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update"},{"specification":"This operation permanently removes a specific notification by its unique identifier from the healthcare platform. It is associated with the healthcare_platform_notifications table in the database schema, which stores every notification event issued in the system, including recipient, sender, notification type, content, and delivery status. Hard deletion is performed as the operation does not indicate any soft delete or archiving mechanism for the notification records, ensuring that the targeted notification entry is fully expunged and unrecoverable.","description":"This API endpoint deletes a notification identified by its notificationId. The operation targets the healthcare_platform_notifications table, which contains audit/compliance notification records across the entire platform including recipient, sender, notification type, body, criticality, and delivery status. \n\nSecurity considerations: Only users with appropriate administrative or compliance roles should be allowed to perform deletes on notification records, as these actions remove data used for system and compliance audits.\n\nThis operation is generally restricted to system administrators unless organizational policy allows notifications to be retracted or cleared by the affected recipient. Access and execution of this operation should be strictly logged for audit purposes, as it could impact regulatory compliance.\n\nRelated operations may include indexing or retrieving notification lists, but such delete is final and non-reversible. Attempting to delete a notification that does not exist should return a 404 Not Found error.\n","summary":"Delete a specific notification by its ID (healthcare_platform_notifications table)","parameters":[{"name":"notificationId","description":"The unique identifier of the notification to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/notifications/{notificationId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a list of notification preferences with advanced search, filtering, and sorting capabilities. It queries the healthcare_platform_notification_preferences table, which stores delivery channel and notification-type preferences for users or organizations, supporting opt-in/out management and escalation policies.","description":"This API provides a paginated, filtered list of notification preferences across the platform or within a user's context. The healthcare_platform_notification_preferences table tracks per-user or per-organization notification delivery channels, types, statuses (enabled/disabled), mute settings, and escalation policy for each alert type. \n\nRequest body allows specifying search filters such as channel, type, enabled flag, as well as page size and sorting fields. Only active and relevant notification preferences are returned, according to the requestor's access permissions.\n\nSensitivity: Users should only be able to query their own preferences unless granted administrative rights. Audit logs should record all search/filter accesses for compliance.\n\nThis functionality helps manage notification blast radius and user communication policy at scale.","summary":"Search and retrieve a filtered, paginated list of notification preferences (healthcare_platform_notification_preferences table)","parameters":[],"requestBody":{"description":"Search and pagination criteria for filtering notification preferences.","typeName":"IHealthcarePlatformNotificationPreference.IRequest"},"responseBody":{"description":"Paginated search result of matching notification preferences.","typeName":"IPageIHealthcarePlatformNotificationPreference"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/notificationPreferences","method":"patch"},{"specification":"This operation retrieves detailed information about a specific notification preference using its unique identifier from the healthcare_platform_notification_preferences table. It allows users and administrators to review the settings controlling notification delivery for a specific channel and type.","description":"This endpoint returns full details for a single notification preference record, identified by notificationPreferenceId. Each notification preference governs whether a user or organization receives a certain type of notification over a particular channel (email, sms, in-app, etc.). The healthcare_platform_notification_preferences table includes preferences for mute windows, escalation handling, and enabled status.\n\nSecurity: Users may only access their own notification preferences unless they have explicit privilege (admin roles). Sensitive or organizational preferences may require elevated permissions. All access to user configuration should be recorded for auditability.\n\nThis is often used in user profile or notification settings views, and is the foundation for interfaces that allow preference updates. Failure to find the preference returns 404 Not Found.","summary":"Retrieve details of a specific notification preference by its ID (healthcare_platform_notification_preferences table)","parameters":[{"name":"notificationPreferenceId","description":"The unique identifier for the notification preference to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full notification preference details for the specified ID.","typeName":"IHealthcarePlatformNotificationPreference"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/notificationPreferences/{notificationPreferenceId}","method":"get"},{"specification":"This operation creates a new notification preference entry in the platform, assigning notification delivery rules for a user and channel/type combination. It writes to the healthcare_platform_notification_preferences table, where preferences for channel, notification type, mute/dnd, and escalation policy are managed.","description":"This API endpoint allows a user or platform administrator to create a notification preference, which determines the method (channel), type, and scope of notifications a user will receive. The healthcare_platform_notification_preferences table stores whether the preference is enabled, what kinds of escalation apply, and any mute or do-not-disturb window for the alerts.\n\nProper validation ensures the combination of (user_id, notification_channel, notification_type) is unique, as enforced by the schema. Users typically manage their own notification preferences, but organizational administrators can manage preferences for their users via elevated privileges.\n\nIf a preference already exists for the requested combination, the system should return a conflict or ignore duplicates according to business policy. All creations are logged for compliance.\n\nOn success, the full notification preference record is returned, showing the current settings. This endpoint is foundational to personalized alerting and granular preference control in the healthcare SaaS platform.","summary":"Create a new notification preference entry (healthcare_platform_notification_preferences table)","parameters":[],"requestBody":{"description":"Specification for the notification preference being created, including channel, notification type, enable/disable state, and escalation details.","typeName":"IHealthcarePlatformNotificationPreference.ICreate"},"responseBody":{"description":"Created notification preference record, with details for all configured fields.","typeName":"IHealthcarePlatformNotificationPreference"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/notificationPreferences","method":"post"},{"specification":"Update an existing notification preference entry in the healthcare_platform_notification_preferences table. This operation allows modification of a user's notification channel, type, enable state, or DND window by preference identifier. Administrators and users may use this to customize how system notifications (appointment, billing, compliance, etc.) are delivered or muted for each user/org/role. Audit logs ensure all changes are fully tracked for compliance and investigation. Changes are subject to validation against the user's organization membership and security policies.","description":"This API operation permits the update of an individual notification preference setting for a user or staff member. The preference record determines how notifications are delivered (e.g., by email, SMS, in-app, etc.), as well as whether certain types of notifications (reminders, alerts, escalations) are enabled or muted per organization and notification type.\n\nThe request is subject to business logic validating that the specified notificationPreferenceId exists, is owned by the acting user or modifiable by an administrator, and adheres to organizational policy. Changes to notification preference may require audit logging for compliance with user opt-in/opt-out rights and organizational escalation rules. The endpoint supports changes to mute windows (DND), escalation routing, and explicit enable/disable per channel and type.\n\nOnly authorized roles (the notificationPreference owner or organization admin with explicit privilege) can modify notification preferences for a user. System-wide or org-level notification defaults are enforced as fallback if no user preference exists.\n\nRelated operations include creating a new preference (POST), retrieving all preferences for a user (GET/PATCH), or deleting a preference (DELETE). Error scenarios include invalid IDs, attempts to modify preferences outside a user's org context, or violating business rules for critical notifications.","summary":"Update a notification preference record for a user (healthcare_platform_notification_preferences table).","parameters":[{"name":"notificationPreferenceId","description":"Unique identifier for the notification preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Notification preference update payload, including channel, type, mute window, enable state, etc.","typeName":"IHealthcarePlatformNotificationPreference.IUpdate"},"responseBody":{"description":"Returns the updated notification preference record after modification.","typeName":"IHealthcarePlatformNotificationPreference"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/notificationPreferences/{notificationPreferenceId}","method":"put"},{"specification":"Update an existing notification preference entry in the healthcare_platform_notification_preferences table. This operation allows modification of a user's notification channel, type, enable state, or DND window by preference identifier. Administrators and users may use this to customize how system notifications (appointment, billing, compliance, etc.) are delivered or muted for each user/org/role. Audit logs ensure all changes are fully tracked for compliance and investigation. Changes are subject to validation against the user's organization membership and security policies.","description":"This API operation permits the update of an individual notification preference setting for a user or staff member. The preference record determines how notifications are delivered (e.g., by email, SMS, in-app, etc.), as well as whether certain types of notifications (reminders, alerts, escalations) are enabled or muted per organization and notification type.\n\nThe request is subject to business logic validating that the specified notificationPreferenceId exists, is owned by the acting user or modifiable by an administrator, and adheres to organizational policy. Changes to notification preference may require audit logging for compliance with user opt-in/opt-out rights and organizational escalation rules. The endpoint supports changes to mute windows (DND), escalation routing, and explicit enable/disable per channel and type.\n\nOnly authorized roles (the notificationPreference owner or organization admin with explicit privilege) can modify notification preferences for a user. System-wide or org-level notification defaults are enforced as fallback if no user preference exists.\n\nRelated operations include creating a new preference (POST), retrieving all preferences for a user (GET/PATCH), or deleting a preference (DELETE). Error scenarios include invalid IDs, attempts to modify preferences outside a user's org context, or violating business rules for critical notifications.","summary":"Update a notification preference record for a user (healthcare_platform_notification_preferences table).","parameters":[{"name":"notificationPreferenceId","description":"Unique identifier for the notification preference record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Notification preference update payload, including channel, type, mute window, enable state, etc.","typeName":"IHealthcarePlatformNotificationPreference.IUpdate"},"responseBody":{"description":"Returns the updated notification preference record after modification.","typeName":"IHealthcarePlatformNotificationPreference"},"authorizationType":null,"authorizationRole":"patient","name":"update","path":"/healthcarePlatform/patient/notificationPreferences/{notificationPreferenceId}","method":"put"},{"specification":"Delete an existing notification preference entry from the healthcare_platform_notification_preferences table, identified by notificationPreferenceId. This operation supports user and admin-driven removal of custom notification routing, escalation, or mute preferences. Removed records fall back to system/org defaults. Compliance/audit retention is enforced; actual record is soft-deleted if deleted_at field exists.","description":"This API operation allows a user or administrator to delete a specific notification preference record, reverting notification delivery to the organization-level or system default configuration for channel, mute, and escalation policies. The operation marks the preference entry as deleted (soft delete via deleted_at), preserving it for audit and compliance review per policy. \n\nProper authorization is enforced - only the preference owner or an organization admin with privilege can delete a preference. Soft deletion ensures historical opt-in/opt-out records are available for regulatory queries. Open reminders or notifications are unaffected; future messages will follow fallback notification rules.\n\nError scenarios include invalid notificationPreferenceId, attempts to delete records outside the user's org, or system-protected notification types which cannot be disabled due to criticality or regulatory policy. The operation does not physically remove records immediately to comply with audit standards.\n\nRelated operations include creating/updating preferences, retrieving the full preference set for a user, or restoring/re-enabling deleted preferences for audit recourse.","summary":"Delete (soft-delete) a notification preference record for a user (healthcare_platform_notification_preferences table).","parameters":[{"name":"notificationPreferenceId","description":"Unique identifier for the notification preference record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/notificationPreferences/{notificationPreferenceId}","method":"delete"},{"specification":"Delete an existing notification preference entry from the healthcare_platform_notification_preferences table, identified by notificationPreferenceId. This operation supports user and admin-driven removal of custom notification routing, escalation, or mute preferences. Removed records fall back to system/org defaults. Compliance/audit retention is enforced; actual record is soft-deleted if deleted_at field exists.","description":"This API operation allows a user or administrator to delete a specific notification preference record, reverting notification delivery to the organization-level or system default configuration for channel, mute, and escalation policies. The operation marks the preference entry as deleted (soft delete via deleted_at), preserving it for audit and compliance review per policy. \n\nProper authorization is enforced - only the preference owner or an organization admin with privilege can delete a preference. Soft deletion ensures historical opt-in/opt-out records are available for regulatory queries. Open reminders or notifications are unaffected; future messages will follow fallback notification rules.\n\nError scenarios include invalid notificationPreferenceId, attempts to delete records outside the user's org, or system-protected notification types which cannot be disabled due to criticality or regulatory policy. The operation does not physically remove records immediately to comply with audit standards.\n\nRelated operations include creating/updating preferences, retrieving the full preference set for a user, or restoring/re-enabling deleted preferences for audit recourse.","summary":"Delete (soft-delete) a notification preference record for a user (healthcare_platform_notification_preferences table).","parameters":[{"name":"notificationPreferenceId","description":"Unique identifier for the notification preference record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"patient","name":"erase","path":"/healthcarePlatform/patient/notificationPreferences/{notificationPreferenceId}","method":"delete"},{"specification":"Search and filter system notification delivery history events (healthcare_platform_notification_history table) using advanced filters (date range, event type, delivery channel, status, user, org, etc.). Supports operational monitoring, user self-service review, compliance audit, and escalation outcome tracking. Pagination, search, and sorting parameters are supported for large organizations.","description":"This endpoint provides a mechanism to search and retrieve system notification history events. Each event details an attempt or outcome (delivered, failed, retried, acknowledged, escalated, etc.) associated with notification delivery through various channels (email, SMS, in-app, push). The operation allows filtering by user, organization, date range, delivery channel, notification type, delivery status, and acknowledgment outcome.\n\nPagination and full-text search are available to support browsing large volumes of notification events in high-activity organizations. API clients must have appropriate authorization to view notification history for self or, in the case of administrators, their organization's users.\n\nError handling includes protection against data leakage across org boundaries, improper filter use, or exceeding rate limits for bulk history export. This operation supports audit, SLA verification, and compliance workflows to ensure reliable communication and traceability of critical events in the system.\n\nRelated endpoints include individual notification history view (GET), notification summary stats, and notification resend/retry operations (if permitted).","summary":"Search and filter notification delivery history (healthcare_platform_notification_history table).","parameters":[],"requestBody":{"description":"Search and filter criteria for notification delivery history, including user/org, date range, delivery channel, status, and notification type, as well as pagination parameters.","typeName":"IHealthcarePlatformNotificationHistory.IRequest"},"responseBody":{"description":"Paginated result containing filtered system notification delivery history records.","typeName":"IPageIHealthcarePlatformNotificationHistory"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/notificationHistory","method":"patch"},{"specification":"Search and filter system notification delivery history events (healthcare_platform_notification_history table) using advanced filters (date range, event type, delivery channel, status, user, org, etc.). Supports operational monitoring, user self-service review, compliance audit, and escalation outcome tracking. Pagination, search, and sorting parameters are supported for large organizations.","description":"This endpoint provides a mechanism to search and retrieve system notification history events. Each event details an attempt or outcome (delivered, failed, retried, acknowledged, escalated, etc.) associated with notification delivery through various channels (email, SMS, in-app, push). The operation allows filtering by user, organization, date range, delivery channel, notification type, delivery status, and acknowledgment outcome.\n\nPagination and full-text search are available to support browsing large volumes of notification events in high-activity organizations. API clients must have appropriate authorization to view notification history for self or, in the case of administrators, their organization's users.\n\nError handling includes protection against data leakage across org boundaries, improper filter use, or exceeding rate limits for bulk history export. This operation supports audit, SLA verification, and compliance workflows to ensure reliable communication and traceability of critical events in the system.\n\nRelated endpoints include individual notification history view (GET), notification summary stats, and notification resend/retry operations (if permitted).","summary":"Search and filter notification delivery history (healthcare_platform_notification_history table).","parameters":[],"requestBody":{"description":"Search and filter criteria for notification delivery history, including user/org, date range, delivery channel, status, and notification type, as well as pagination parameters.","typeName":"IHealthcarePlatformNotificationHistory.IRequest"},"responseBody":{"description":"Paginated result containing filtered system notification delivery history records.","typeName":"IPageIHealthcarePlatformNotificationHistory"},"authorizationType":null,"authorizationRole":"patient","name":"index","path":"/healthcarePlatform/patient/notificationHistory","method":"patch"},{"specification":"Retrieve a single notification delivery history event by its identifier from the healthcare_platform_notification_history table. Used for viewing delivery/acknowledgment outcome and full status trail for a specific notification event (for user self-audit or compliance record investigation).","description":"This endpoint retrieves the details of an individual notification history event, including the delivery/acknowledgment status, delivery channel, recipient/user, associated notification event, timestamps, and extended delivery outcome metadata. It is used by users to audit notification receipt or by admins to investigate communication status for SLA/incident reporting.\n\nAuthorization logic ensures that only properly privileged users (self, organization admin, patient) can view notification delivery history within their org boundaries. \n\nTypical errors include referencing non-existent or unauthorized event IDs, or attempts to access another organization's data.\n\nRelated operations include retrieving notification details, delivery status (PATCH), or related escalation event/context for auditing communication escalation and response compliance.","summary":"Retrieve a single notification delivery history event (healthcare_platform_notification_history table).","parameters":[{"name":"notificationHistoryId","description":"Unique identifier for the notification delivery history event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested notification delivery history event.","typeName":"IHealthcarePlatformNotificationHistory"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/notificationHistory/{notificationHistoryId}","method":"get"},{"specification":"Retrieve a single notification delivery history event by its identifier from the healthcare_platform_notification_history table. Used for viewing delivery/acknowledgment outcome and full status trail for a specific notification event (for user self-audit or compliance record investigation).","description":"This endpoint retrieves the details of an individual notification history event, including the delivery/acknowledgment status, delivery channel, recipient/user, associated notification event, timestamps, and extended delivery outcome metadata. It is used by users to audit notification receipt or by admins to investigate communication status for SLA/incident reporting.\n\nAuthorization logic ensures that only properly privileged users (self, organization admin, patient) can view notification delivery history within their org boundaries. \n\nTypical errors include referencing non-existent or unauthorized event IDs, or attempts to access another organization's data.\n\nRelated operations include retrieving notification details, delivery status (PATCH), or related escalation event/context for auditing communication escalation and response compliance.","summary":"Retrieve a single notification delivery history event (healthcare_platform_notification_history table).","parameters":[{"name":"notificationHistoryId","description":"Unique identifier for the notification delivery history event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested notification delivery history event.","typeName":"IHealthcarePlatformNotificationHistory"},"authorizationType":null,"authorizationRole":"patient","name":"at","path":"/healthcarePlatform/patient/notificationHistory/{notificationHistoryId}","method":"get"},{"specification":"This operation retrieves a paginated list of escalation events within the healthcarePlatform system. It is associated with the \"healthcare_platform_escalation_events\" table, which logs notification or SLA escalations for compliance, regulatory, or operational attention. The API enables users to search and filter escalation events by status, escalation type, level, deadlines, or resolution outcome, supporting operational monitoring, regulatory reporting, and audit. The response provides detailed event summaries, escalation context, and links to related users or roles, deadline and resolution metadata, and audit trail entries. Business logic includes filtering by status (open, resolved, expired, etc.), escalated user/role, deadline, and escalation level, and is aligned with the schema’s full-text and indexable fields. Strict access restrictions and role-based scoping are enforced due to the compliance-sensitive nature of escalation event data.","description":"Retrieve a filtered and paginated list of escalation events from the healthcarePlatform escalation registry. Each escalation event documents when an actionable incident or SLA breach has required notification and escalated attention, as defined in the healthcare_platform_escalation_events table. This registry supports workflows for compliance, incident response, critical notification follow-up, and operational audit. The operation enables filtering by status (e.g. open, in_progress, resolved, expired), escalation type (e.g. sla_violation, breach), escalation level (e.g. normal, urgent, critical), deadline, assigned user/role, and resolution outcome, leveraging indices for efficient lookup.","summary":"Search and retrieve a paginated list of escalation events from the healthcare_platform_escalation_events table.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for escalation event filtering.","typeName":"IHealthcarePlatformEscalationEvent.IRequest"},"responseBody":{"description":"Paginated summary list of escalation events matching the search criteria, including escalation type, level, deadline, and resolution status.","typeName":"IPageIHealthcarePlatformEscalationEvent.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/healthcarePlatform/systemAdmin/escalationEvents","method":"patch"},{"specification":"This operation retrieves a paginated list of escalation events within the healthcarePlatform system. It is associated with the \"healthcare_platform_escalation_events\" table, which logs notification or SLA escalations for compliance, regulatory, or operational attention. The API enables users to search and filter escalation events by status, escalation type, level, deadlines, or resolution outcome, supporting operational monitoring, regulatory reporting, and audit. The response provides detailed event summaries, escalation context, and links to related users or roles, deadline and resolution metadata, and audit trail entries. Business logic includes filtering by status (open, resolved, expired, etc.), escalated user/role, deadline, and escalation level, and is aligned with the schema’s full-text and indexable fields. Strict access restrictions and role-based scoping are enforced due to the compliance-sensitive nature of escalation event data.","description":"Retrieve a filtered and paginated list of escalation events from the healthcarePlatform escalation registry. Each escalation event documents when an actionable incident or SLA breach has required notification and escalated attention, as defined in the healthcare_platform_escalation_events table. This registry supports workflows for compliance, incident response, critical notification follow-up, and operational audit. The operation enables filtering by status (e.g. open, in_progress, resolved, expired), escalation type (e.g. sla_violation, breach), escalation level (e.g. normal, urgent, critical), deadline, assigned user/role, and resolution outcome, leveraging indices for efficient lookup.","summary":"Search and retrieve a paginated list of escalation events from the healthcare_platform_escalation_events table.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for escalation event filtering.","typeName":"IHealthcarePlatformEscalationEvent.IRequest"},"responseBody":{"description":"Paginated summary list of escalation events matching the search criteria, including escalation type, level, deadline, and resolution status.","typeName":"IPageIHealthcarePlatformEscalationEvent.ISummary"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"index","path":"/healthcarePlatform/organizationAdmin/escalationEvents","method":"patch"},{"specification":"This operation retrieves the details of a single escalation event from the \"healthcare_platform_escalation_events\" table by its unique escalationEventId. The endpoint allows users with compliance or administrative roles to review detailed escalation event information for monitoring, audit, or regulatory review. The returned record includes escalation reason, associated user or role, escalation type and level, deadlines, resolution status, and audit metadata. This supports full traceability of escalated compliance or operational incidents, enforces RBAC according to organizational context, and supports audit log linkage.","description":"Retrieve details of a specific escalation event by its unique identifier (escalationEventId) from the escalation events registry. This operation exposes the full escalation event record for operational audit, compliance review, or workflow status checks. Fields returned include escalation type (e.g. sla_violation, breach, compliance_required), escalation level (normal, urgent, critical), associated user/role, creation and deadline timestamps, current resolution status, and complete audit trail linkage. Access is tightly restricted, with fine-grained authorization allowing only designated compliance or administrator roles to view sensitive escalation event data.","summary":"Get details for a specific escalation event in healthcare_platform_escalation_events.","parameters":[{"name":"escalationEventId","description":"Unique identifier for the escalation event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed escalation event record including escalation type, trigger, related user or role, deadline, resolution, and audit metadata.","typeName":"IHealthcarePlatformEscalationEvent"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/healthcarePlatform/systemAdmin/escalationEvents/{escalationEventId}","method":"get"},{"specification":"This operation retrieves the details of a single escalation event from the \"healthcare_platform_escalation_events\" table by its unique escalationEventId. The endpoint allows users with compliance or administrative roles to review detailed escalation event information for monitoring, audit, or regulatory review. The returned record includes escalation reason, associated user or role, escalation type and level, deadlines, resolution status, and audit metadata. This supports full traceability of escalated compliance or operational incidents, enforces RBAC according to organizational context, and supports audit log linkage.","description":"Retrieve details of a specific escalation event by its unique identifier (escalationEventId) from the escalation events registry. This operation exposes the full escalation event record for operational audit, compliance review, or workflow status checks. Fields returned include escalation type (e.g. sla_violation, breach, compliance_required), escalation level (normal, urgent, critical), associated user/role, creation and deadline timestamps, current resolution status, and complete audit trail linkage. Access is tightly restricted, with fine-grained authorization allowing only designated compliance or administrator roles to view sensitive escalation event data.","summary":"Get details for a specific escalation event in healthcare_platform_escalation_events.","parameters":[{"name":"escalationEventId","description":"Unique identifier for the escalation event to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed escalation event record including escalation type, trigger, related user or role, deadline, resolution, and audit metadata.","typeName":"IHealthcarePlatformEscalationEvent"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"at","path":"/healthcarePlatform/organizationAdmin/escalationEvents/{escalationEventId}","method":"get"},{"specification":"This operation creates a new escalation event in the \"healthcare_platform_escalation_events\" table. It supports logging notification or SLA escalations, with metadata on original notification, target handler, escalation type, escalation level, deadline, and initial resolution status. This can be triggered by automated business logic (e.g., unacknowledged critical alert), compliance/integrity monitoring, or by authorized administrative users. Full RBAC and data validation is enforced to ensure only authorized users or system logic can create escalation events for auditability, SLA compliance, and incident management. Notification and workflow triggers may be linked for appropriate roles after successful creation.","description":"Create a new escalation event for an actionable alert, SLA violation, compliance workflow, or regulatory notification. The endpoint facilitates the creation of escalation records in response to time-critical or critical-urgency incidents, assigning the case to a responsible user or role, defining the escalation type (e.g. breach, compliance_required, business_policy), setting escalation level (e.g. critical, urgent), deadline, and tracking disposition. The operation ensures business and compliance rules are enforced by validating all required fields for escalation event creation and managing notification triggers or follow-up actions as configured. Audit trails record the creation for regulatory requirements.","summary":"Create a new escalation event record in healthcare_platform_escalation_events.","parameters":[],"requestBody":{"description":"Parameters and escalation metadata for escalation event creation, including notification reference, escalation target, type, level, deadline, and summary.","typeName":"IHealthcarePlatformEscalationEvent.ICreate"},"responseBody":{"description":"The newly created escalation event record, including all assigned metadata, creation timestamp, and initial status.","typeName":"IHealthcarePlatformEscalationEvent"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/healthcarePlatform/systemAdmin/escalationEvents","method":"post"},{"specification":"This operation creates a new escalation event in the \"healthcare_platform_escalation_events\" table. It supports logging notification or SLA escalations, with metadata on original notification, target handler, escalation type, escalation level, deadline, and initial resolution status. This can be triggered by automated business logic (e.g., unacknowledged critical alert), compliance/integrity monitoring, or by authorized administrative users. Full RBAC and data validation is enforced to ensure only authorized users or system logic can create escalation events for auditability, SLA compliance, and incident management. Notification and workflow triggers may be linked for appropriate roles after successful creation.","description":"Create a new escalation event for an actionable alert, SLA violation, compliance workflow, or regulatory notification. The endpoint facilitates the creation of escalation records in response to time-critical or critical-urgency incidents, assigning the case to a responsible user or role, defining the escalation type (e.g. breach, compliance_required, business_policy), setting escalation level (e.g. critical, urgent), deadline, and tracking disposition. The operation ensures business and compliance rules are enforced by validating all required fields for escalation event creation and managing notification triggers or follow-up actions as configured. Audit trails record the creation for regulatory requirements.","summary":"Create a new escalation event record in healthcare_platform_escalation_events.","parameters":[],"requestBody":{"description":"Parameters and escalation metadata for escalation event creation, including notification reference, escalation target, type, level, deadline, and summary.","typeName":"IHealthcarePlatformEscalationEvent.ICreate"},"responseBody":{"description":"The newly created escalation event record, including all assigned metadata, creation timestamp, and initial status.","typeName":"IHealthcarePlatformEscalationEvent"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"create","path":"/healthcarePlatform/organizationAdmin/escalationEvents","method":"post"},{"specification":"This operation updates an existing escalation event record in the \"healthcare_platform_escalation_events\" table, allowing partial or full modification of escalation metadata such as assigned target, escalation type, escalation level, deadline, resolution status, and resolution notes. It supports workflow progression (e.g., escalation acknowledged, reassigned, resolved, dismissed) as well as audit, compliance reviews, and business-driven updates. The operation enforces RBAC and schema-driven validation to ensure only authorized roles can make changes, and comprehensive audit logging to support regulatory and security requirements. Business rules support updating escalation assignment, extending deadlines, resolving or dismissing escalations, and attaching compliance review notes for accountability.","description":"Update selected fields on an escalation event, such as assignment, escalation level, type, deadline, status, and resolution notes. Used for progressing an escalation through workflow stages (assignment, handling, closure), modifying responder, marking resolution, or adding compliance-related annotations. Enforces validation of field changes, captures audit trail, and triggers notifications or workflow actions if the escalation is resolved or advanced. This maintains synchronous visibility and accountability for prioritized incidents across organizations.","summary":"Update an existing escalation event in healthcare_platform_escalation_events.","parameters":[{"name":"escalationEventId","description":"Unique identifier of the escalation event to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the escalation event, including assignment, escalation metadata, status, resolution notes, and deadlines.","typeName":"IHealthcarePlatformEscalationEvent.IUpdate"},"responseBody":{"description":"Escalation event record after update, reflecting new disposition, assignment, deadlines, and history.","typeName":"IHealthcarePlatformEscalationEvent"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/escalationEvents/{escalationEventId}","method":"put"},{"specification":"This operation updates an existing escalation event record in the \"healthcare_platform_escalation_events\" table, allowing partial or full modification of escalation metadata such as assigned target, escalation type, escalation level, deadline, resolution status, and resolution notes. It supports workflow progression (e.g., escalation acknowledged, reassigned, resolved, dismissed) as well as audit, compliance reviews, and business-driven updates. The operation enforces RBAC and schema-driven validation to ensure only authorized roles can make changes, and comprehensive audit logging to support regulatory and security requirements. Business rules support updating escalation assignment, extending deadlines, resolving or dismissing escalations, and attaching compliance review notes for accountability.","description":"Update selected fields on an escalation event, such as assignment, escalation level, type, deadline, status, and resolution notes. Used for progressing an escalation through workflow stages (assignment, handling, closure), modifying responder, marking resolution, or adding compliance-related annotations. Enforces validation of field changes, captures audit trail, and triggers notifications or workflow actions if the escalation is resolved or advanced. This maintains synchronous visibility and accountability for prioritized incidents across organizations.","summary":"Update an existing escalation event in healthcare_platform_escalation_events.","parameters":[{"name":"escalationEventId","description":"Unique identifier of the escalation event to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the escalation event, including assignment, escalation metadata, status, resolution notes, and deadlines.","typeName":"IHealthcarePlatformEscalationEvent.IUpdate"},"responseBody":{"description":"Escalation event record after update, reflecting new disposition, assignment, deadlines, and history.","typeName":"IHealthcarePlatformEscalationEvent"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/escalationEvents/{escalationEventId}","method":"put"},{"specification":"This operation deletes an escalation event by its unique identifier from the healthcarePlatform system. It operates on the healthcare_platform_escalation_events table. Permanent deletion is performed, and auditability is preserved through related logs and subsystem tracking. Only system administrators should be allowed to perform this highly privileged action, as escalation events may correspond to critical notification or compliance workflows.","description":"Delete an escalation event from the system by specifying its unique escalationEventId.\n\nThis action is restricted to system administrators because escalation events are part of the system's compliance and incident reporting infrastructure. The event will be permanently deleted from healthcare_platform_escalation_events, but referential integrity and audit evidence may persist in related logs in accordance with regulatory and audit retention requirements.\n\nAs this operation irreversibly removes a record, it should be used only for appropriate administrative or compliance-validated scenarios. Any failure, such as attempting to delete a non-existent or unauthorized escalationEventId, will result in a clear error response.","summary":"Delete a healthcarePlatform escalation event (system admin only, hard delete)","parameters":[{"name":"escalationEventId","description":"The unique identifier (UUID) of the escalation event to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/healthcarePlatform/systemAdmin/escalationEvents/{escalationEventId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/systemAdmin/reminders","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/organizationAdmin/reminders","method":"patch","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/departmentHead/reminders","method":"patch","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/medicalDoctor/reminders","method":"patch","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/nurse/reminders","method":"patch","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/technician/reminders","method":"patch","authorizationRole":"technician","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/receptionist/reminders","method":"patch","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation retrieves a paginated list of reminders from the healthcarePlatform system with advanced filtering, sorting, and search capabilities, based on the healthcare_platform_reminders table. It is designed for system users and supports complex query criteria to help users manage scheduled reminders, audit status, and outcome histories across organizations and notification contexts.","description":"Obtain a filtered and paginated list of reminders stored in the platform, filtered by user role and query parameters.\n\nThe reminders system is responsible for delivering scheduled notifications to users and staff (e.g., appointment, compliance, medication). This operation enables searching, filtering, and sorting reminders according to criteria such as recipient, status, time window, delivery outcome, and organization context, supporting bulk reminder management or analytics. Authorization is typically required for any user account able to view reminders in their organization scope; compliance and privacy rules apply.\n\nThis endpoint operates on the healthcare_platform_reminders table, returning reminder summaries and supporting paging through large volumes of data. Related endpoints include single reminder fetch and reminder creation.","summary":"Search and list reminders with filter, sorting, and pagination","parameters":[],"requestBody":{"description":"Search and filter parameters for retrieving reminders (recipient, status, scheduled window, etc.) with pagination and sorting.","typeName":"IHealthcarePlatformReminder.IRequest"},"responseBody":{"description":"Paginated result set of reminder summary data per search criteria.","typeName":"IPageIHealthcarePlatformReminder.ISummary"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"index","path":"/healthcarePlatform/patient/reminders","method":"patch","authorizationRole":"patient","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/systemAdmin/reminders/{reminderId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/organizationAdmin/reminders/{reminderId}","method":"get","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/departmentHead/reminders/{reminderId}","method":"get","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/medicalDoctor/reminders/{reminderId}","method":"get","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/nurse/reminders/{reminderId}","method":"get","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/technician/reminders/{reminderId}","method":"get","authorizationRole":"technician","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/receptionist/reminders/{reminderId}","method":"get","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation fetches a single reminder's detailed information by its unique identifier from the healthcare_platform_reminders table. Useful for staff, patients, or compliance/audit users reviewing the full details, delivery status, and historical audit trail of a specific notification reminder.","description":"Retrieve the full details for a specified reminder ID, including recipient, type/class, delivery schedule, status, notification channel, and lifecycle history.\n\nThis operation allows users with valid access rights to inspect a reminder record by its unique UUID, supporting user portals, compliance review, or troubleshooting workflows. It ensures that PHI or sensitive notification content is only accessible to users authorized by organizational or role-based policy.\n\nThis endpoint operates on the healthcare_platform_reminders table and includes detailed reminder fields. Audit or compliance logs may require additional review when accessing sensitive reminder data. Related operations include listing reminders and creating new scheduled reminders.","summary":"Get a single reminder by ID (detail view)","parameters":[{"name":"reminderId","description":"The unique identifier (UUID) of the reminder to fetch.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified reminder, including schedule, status, recipient, and history.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"at","path":"/healthcarePlatform/patient/reminders/{reminderId}","method":"get","authorizationRole":"patient","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/systemAdmin/reminders","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/organizationAdmin/reminders","method":"post","authorizationRole":"organizationAdmin","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/departmentHead/reminders","method":"post","authorizationRole":"departmentHead","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/medicalDoctor/reminders","method":"post","authorizationRole":"medicalDoctor","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/nurse/reminders","method":"post","authorizationRole":"nurse","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/technician/reminders","method":"post","authorizationRole":"technician","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/receptionist/reminders","method":"post","authorizationRole":"receptionist","authorizationType":null},{"specification":"This operation creates a new scheduled reminder in the healthcarePlatform system for a user or staff member. It operates on the healthcare_platform_reminders table, supporting the orchestration of notifications for compliance, appointments, medication, or workflow events. New reminders are subject to role and organizational access scope, and all actions are fully auditable and subject to strict business and compliance logic.","description":"Create a new reminder entry for future delivery, specifying recipient, type, scheduled delivery window, and message/payload.\n\nUsed by staff, providers, or system automation to set up reminders for clinical, compliance, appointment, or medication flows. Enforces organizational and role scoping, audit logging, and validation of recipient/channel compatibility. Fails if schedule is invalid, recipient is not found, or the user lacks authorization.\n\nThis endpoint writes to the healthcare_platform_reminders table and triggers downstream notification or escalation workflows as per system policy. Related endpoints include search/list reminders and detailed reminder retrieval.","summary":"Create a new scheduled reminder for user or staff","parameters":[],"requestBody":{"description":"The information required to create a new scheduled reminder, including target, type, payload, schedule, and delivery metadata.","typeName":"IHealthcarePlatformReminder.ICreate"},"responseBody":{"description":"The full scheduled reminder entry as created and stored, including assigned ID and metadata.","typeName":"IHealthcarePlatformReminder"},"authorizationRoles":["systemAdmin","organizationAdmin","departmentHead","medicalDoctor","nurse","technician","receptionist","patient"],"name":"create","path":"/healthcarePlatform/patient/reminders","method":"post","authorizationRole":"patient","authorizationType":null},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/healthcarePlatform/systemAdmin/reminders/{reminderId}","method":"put"},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"organizationAdmin","name":"update","path":"/healthcarePlatform/organizationAdmin/reminders/{reminderId}","method":"put"},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"medicalDoctor","name":"update","path":"/healthcarePlatform/medicalDoctor/reminders/{reminderId}","method":"put"},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"nurse","name":"update","path":"/healthcarePlatform/nurse/reminders/{reminderId}","method":"put"},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"technician","name":"update","path":"/healthcarePlatform/technician/reminders/{reminderId}","method":"put"},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"receptionist","name":"update","path":"/healthcarePlatform/receptionist/reminders/{reminderId}","method":"put"},{"specification":"This operation allows authorized users to update an existing reminder within the healthcare platform. The reminder entity supports features for system, patient, and staff notifications (such as appointment, medication, task, compliance, or follow-up reminders) with customizable schedules, content, and status. The operation updates reminder fields including timing, type, message, target user, delivery channel, and status, ensuring that business rules, audit requirements, and notification preferences are honored. The update request is processed with audit logging to evidence all changes for compliance, operational, and user preference purposes. Business logic ensures that update operations do not interfere with reminders in finalized or immutable compliance states, and only users with appropriate permissions can modify organizational or critical reminders.","description":"The update operation is designed for scenarios where reminder details such as delivery time, message content, reminder type, or delivery channel must be changed — for example, when patient follow-up schedules change, staff coverage is updated, or a business policy requires adjustments. The operation requires that the caller has the necessary permission for the targeted reminder (patient, staff, or organization context). It supports all reminder fields except immutable system audit fields and can be invoked by patients, staff, or automation depending on access rights. All changes are strictly recorded for audit, and business logic prevents update of reminders where business rules require completion or archival (e.g., compliance holds, completed reminders, scheduled medication reminders delivered). If a reminder is already soft-deleted, the operation returns an appropriate error. The update operation is critical for maintaining accurate reminder schedules, effective communication, and regulatory compliance in healthcare workflows. Responses include the updated reminder object. Error handling covers permission validation, validation of reminder state, and data consistency enforcement. This operation relates directly to the healthcare_platform_reminders table in the Prisma schema.","summary":"Update an existing healthcare platform reminder (reminderId) in the healthcare_platform_reminders table.","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated fields for the healthcare platform reminder entity.","typeName":"IHealthcarePlatformReminder.IUpdate"},"responseBody":{"description":"Details of the updated reminder after a successful update operation.","typeName":"IHealthcarePlatformReminder"},"authorizationType":null,"authorizationRole":"patient","name":"update","path":"/healthcarePlatform/patient/reminders/{reminderId}","method":"put"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/healthcarePlatform/systemAdmin/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"organizationAdmin","name":"erase","path":"/healthcarePlatform/organizationAdmin/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"medicalDoctor","name":"erase","path":"/healthcarePlatform/medicalDoctor/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"nurse","name":"erase","path":"/healthcarePlatform/nurse/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"technician","name":"erase","path":"/healthcarePlatform/technician/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"receptionist","name":"erase","path":"/healthcarePlatform/receptionist/reminders/{reminderId}","method":"delete"},{"specification":"This operation deletes an existing reminder from the healthcare platform by marking it as deleted (soft delete). Reminders are scheduled notifications for users (patients or staff) or system jobs, supporting appointment, medication, compliance, and task reminders. The operation performs a soft deletion by updating the deleted_at timestamp, ensuring that audit and compliance requirements are met and the event remains traceable for regulatory and business purposes. This behavior is enforced according to the healthcare_platform_reminders table, which uses a nullable deleted_at column for soft deletion. The operation is permission-guarded, only allowing deletion by authorized users, and implements business rules preventing removal if the reminder is in a finalized or compliance-locked state. Deletion actions are audited for traceability and legal retention policies.","description":"The erase operation allows authorized users to disable (soft delete) an existing reminder, remove it from active workflow, and ensure the change and rationale are captured in audit logs. Reminders in finalized, active compliance workflows, or those that are already soft-deleted are protected from deletion and return errors if deletion is attempted. Soft deletion means that the reminder is excluded from active queries but preserved for compliance retention and recovery. Role-based access rules enforce that only users with organizational or reminder ownership may execute the operation. Every delete operation is recorded with user, timestamp, and context for audit trail purposes, supporting full lifecycle traceability. This operation concretely supports healthcare_platform_reminders table logic and the foundational business rules set out for regulatory obligations in the domain.","summary":"Soft delete a healthcare platform reminder (reminderId) from the healthcare_platform_reminders table (sets deleted_at).","parameters":[{"name":"reminderId","description":"Unique identifier of the reminder to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"patient","name":"erase","path":"/healthcarePlatform/patient/reminders/{reminderId}","method":"delete"}],"components":{"authorization":[{"name":"systemAdmin","description":"Full system access across all organizations. Can configure infrastructure, global settings, manage integrations, oversee analytics, and handle platform-wide security and audits. Responsible for deployment, monitoring, and compliance management.","kind":"admin"},{"name":"organizationAdmin","description":"Administers a specific healthcare organization. Can manage organization staff, facility settings, organizational billing, compliance reporting, and full visibility of organizational operations.","kind":"admin"},{"name":"departmentHead","description":"Leads a department (e.g., Cardiology, Emergency) within an organization. Manages departmental staff, schedules, resources, analytics, and budget. Oversees patient flow within department limits.","kind":"admin"},{"name":"medicalDoctor","description":"Licensed medical doctor providing patient care. Has full access to patient medical records (within scope), can diagnose, prescribe, review lab results, and initiate treatments. Must comply with audit trails and safety validations.","kind":"member"},{"name":"nurse","description":"Nurse or clinical staff managing day-to-day patient care. Can access and update patient vitals, administer medications under doctor orders, communicate with patients, and participate in care coordination with limited modification rights.","kind":"member"},{"name":"technician","description":"Medical technician handling diagnostics or equipment (e.g., imaging, lab work). Can upload, annotate, and manage technical medical data (DICOM, lab results) and view relevant orders.","kind":"member"},{"name":"receptionist","description":"Front-desk staff scheduling appointments, managing patient check-in/out, handling basic inquiries, and managing non-clinical patient information. Access limited to logistics and administrative workflows.","kind":"member"},{"name":"patient","description":"End user (patient) accessing their personal health information, scheduling appointments, communicating with care teams, managing billing and insurance information according to privacy permissions.","kind":"member"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIHealthcarePlatformOrganization.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformOrganization.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformDepartment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformDepartment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformRole.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformRole.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformPermission.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformPermission.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformOrgDepartmentAssignment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformOrgDepartmentAssignment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformUserOrgAssignment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformUserOrgAssignment"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformConfiguration":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformConfiguration"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformLocaleSettings.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformLocaleSettings.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformSystemadmin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformSystemAdmin.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformOrganizationadmin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformOrganizationAdmin.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformDepartmenthead":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformDepartmentHead"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformMedicalDoctor.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformMedicalDoctor.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformNurse.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformNurse.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformTechnician.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformTechnician.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformReceptionist.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformReceptionist.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformPatient.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformPatient.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformUserAuthentication.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformUserAuthentication.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAuthSession.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAuthSession.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformUserMfaFactor":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformUserMfaFactor"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformUserCredential.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformUserCredential.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformUserLicenseVerification.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformUserLicenseVerification.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformPatientRecord.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformPatientRecord.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformEhrEncounter.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformEhrEncounter.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformEhrVersion":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformEhrVersion"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformRecordAmendment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformRecordAmendment"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformRecordAuditTrail":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformRecordAuditTrail"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformMedicalImage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformMedicalImage"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformLabResult.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformLabResult.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformVital":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformVital"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAppointment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAppointment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAppointmentReminder":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAppointmentReminder"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAppointmentWaitlist.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAppointmentWaitlist.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAppointmentStatus.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAppointmentStatus.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformResourceSchedule":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformResourceSchedule"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformRoomReservation.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformRoomReservation.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformEquipmentReservation":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformEquipmentReservation"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformCalendarSetting.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformCalendarSetting.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformTelemedicineSessions.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformTelemedicineSessions.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingInvoice.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingInvoice.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingItem":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingItem"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingCode.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingCode.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingAdjustment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingAdjustment"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingDiscountPolicy.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingDiscountPolicy.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingPaymentPlan.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingPaymentPlan.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingPayment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingPayment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBillingPaymentMethod.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBillingPaymentMethod.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformInsurancePolicy":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformInsurancePolicy"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformInsuranceEligibilityCheck":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformInsuranceEligibilityCheck"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformInsuranceClaim.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformInsuranceClaim.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformInsuranceClaimStatus":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformInsuranceClaimStatus"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformFinancialAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformFinancialAuditLog"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAnalyticsDashboard.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAnalyticsDashboard.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformDashboardPreference":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformDashboardPreference"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAnalyticsReport":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAnalyticsReport"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformDecisionSupportRule":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformDecisionSupportRule"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformClinicalAlert":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformClinicalAlert"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformOutcomeMetric.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformOutcomeMetric.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformBenchmarkDefinition.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformBenchmarkDefinition.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformKpiSnapshot":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformKpiSnapshot"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformExternalEmrConnector.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformExternalEmrConnector.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformLabIntegration.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformLabIntegration.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformLabOrderTransaction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformLabOrderTransaction"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformLabResultImport":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformLabResultImport"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformPharmacyIntegration":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformPharmacyIntegration"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformPharmacyTransaction":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformPharmacyTransaction"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformInsuranceApiIntegration":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformInsuranceApiIntegration"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformDeviceDataIngestion":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformDeviceDataIngestion"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformIntegrationLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformIntegrationLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformComplianceConsent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformComplianceConsent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformComplianceAgreement.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformComplianceAgreement.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformPolicyVersion.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformPolicyVersion.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformRiskAssessment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformRiskAssessment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformLegalHold.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformLegalHold.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformComplianceReview":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformComplianceReview"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAuditLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAuditLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAccessLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAccessLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformDataExportLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformDataExportLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformSecurityIncident.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformSecurityIncident.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformEmergencyAccessOverride":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformEmergencyAccessOverride"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformAuditLogArchive":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformAuditLogArchive"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformNotification.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformNotification.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformNotificationPreference":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformNotificationPreference"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformNotificationHistory":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformNotificationHistory"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformEscalationEvent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformEscalationEvent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformReminder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformReminder.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IHealthcarePlatformSystemAdmin.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Unique email address for the superuser admin. Must be a business email, not a personal domain.\n\nThis field is mandatory for initial onboarding, cross-system mapping, and audited account identity. All registry and compliance actions validate this email for uniqueness and organizational fit.\n\nExample: admin@enterprise-corp.com"},"full_name":{"type":"string","description":"The legal full name of the administrator as used for auditing. This field is required for credential verification, audit log entries, and compliance mappings."},"phone":{"type":"string","description":"Optional business phone number of the admin. Used for contact, MFA challenges, and audit traceability.\n\nThis is not required at registration, but if present, becomes part of the audit metadata. Format as E.164 international number if possible (e.g., +12125551212)."},"provider":{"type":"string","description":"Authentication provider in use for this registration. Supported values: 'local', 'saml', 'oauth2', 'ad'.\n\nBusiness logic enforces provider-specific restrictions (e.g., password required for 'local', provider_key for SSO)."},"provider_key":{"type":"string","description":"Provider key used for authentication context. For local, typically email; for SSO, the federated identity subject or principal name as assigned by the provider."},"password":{"type":"string","description":"Password for local authentication registration. This field must conform to platform credential complexity requirements and is only used for provider: 'local'. Not required for SSO/OAuth flows.\n\nPasswords are NEVER returned in response types and are never stored in plaintext."}},"required":["email","full_name","provider","provider_key"],"description":"Registration payload when creating a new healthcare platform system admin superuser account. Links email/identity to auth provider, sets profile fields, and enforces uniqueness/audit for initial superuser onboarding.\n\nProvider-specific logic: if 'local', password must be included and conform to policy; if SSO, password MUST NOT be included. Always write confidential credentials to secure/auth domain tables, never expose in response. Audit and compliance metadata must be captured for regulatory reviews."},"IHealthcarePlatformSystemAdmin.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Administrator email address for login. Unique key for credential checks and auditing.\n\nExample: sysadmin@enterprise-health.com"},"provider":{"type":"string","description":"Authentication provider being used to sign in (e.g., 'local', 'saml', 'oauth2', 'ad'). Determines which credential flows are checked."},"provider_key":{"type":"string","description":"Provider-specific identity key for authentication. For local, matches email; for SSO, principal/subject as returned by provider."},"password":{"type":"string","description":"Optional password credential for authentication when provider is 'local'. Not required for SSO or external provider login. Never returned in any read or response actions."}},"required":["email","provider","provider_key"],"description":"Login credentials for healthcare platform system administrator. Used to validate identity and receive tokens for authenticated API usage. Password is required for 'local', optional/omitted for SSO routes."},"IHealthcarePlatformSystemAdmin.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token string granted on previous authorization or login. Required for session continuation and token renewal. Opaque, secure value managed by the authentication/session service."}},"required":["refresh_token"],"description":"Request body for system admin session/token refresh operation. Must present an authorized, unexpired refresh token to receive a new access token."},"IHealthcarePlatformSystemAdmin.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"UUID for the authenticated system admin. Used for audit logging, token subject claims, and account management."},"email":{"type":"string","format":"email","description":"Unique email for the admin; used for token claims, audit, and compliance reporting. Business email only."},"full_name":{"type":"string","description":"Full legal (audited) name of the system administrator. Used in compliance logs, messaging, and audit records."},"phone":{"type":"string","description":"Optional phone number used for audit/compliance and minor notification workflows. E.164 preferred."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for when the admin account was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for the last modification to this account."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. Indicates the account is archived or has been deactivated. Null if active."},{"type":"null"}],"description":"Soft deletion marker for compliance retention. Omitted or null when active."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","full_name","created_at","updated_at","token"],"description":"Authorization response object returned after successful system admin registration, login, or token refresh. Provides admin profile and session JWTs needed for authenticated API use."},"IHealthcarePlatformOrganizationAdmin.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Organization-level administrator email for registration. Must be unique in the system. Required for authentication and audit."},"full_name":{"type":"string","description":"Full legal name of the organization administrator for onboarding and audit compliance. Required for identity verification and admin assignment workflows."},"phone":{"oneOf":[{"type":"string","description":"Optional phone number for login, MFA, alerting, and compliance workflows."},{"type":"null"}],"description":"Optional phone number for login, MFA, alerting, and compliance workflows. Can be null or omitted in non-MFA orgs."},"password":{"oneOf":[{"type":"string","description":"Admin login password."},{"type":"null"}],"description":"Login password. Must meet organizational password complexity requirements unless using SSO/onboarding. Should be securely hashed on backend storage, never returned in any response. May be null/omitted if registering via federated identity/SSO."},"provider":{"type":"string","description":"Federated authentication provider (e.g., 'saml', 'oauth2', 'ad', etc.). Required if registering via SSO."},"provider_key":{"type":"string","description":"Unique provider key/id used with federated authentication. Required for SSO registration."}},"required":["email","full_name"],"description":"Request DTO for onboarding a new organization administrator. Maps to the healthcare_platform_organizationadmins and required authentication fields. All supplied properties map to the onboarding API and support local or federated registration."},"IHealthcarePlatformOrganizationAdmin.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique UUID for the newly onboarded administrator as per Prisma schema. Returned on success."},"email":{"type":"string","format":"email","description":"Administrator's business email for future login and notifications."},"full_name":{"type":"string","description":"Full legal name of org admin for identity and session display."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Business phone for out-of-band communications."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when admin account was created (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update to this admin (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion marker for account closure: null if active, ISO8601 string if deactivated."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","full_name","created_at","updated_at","token"],"description":"Response DTO for an authorized organization administrator session, containing admin info plus current JWT tokens. Returned after organization admin join, login, or token refresh. Embeds reference to IAuthorizationToken."},"IHealthcarePlatformOrganizationAdmin.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Administrator email used to login. Case-insensitive per platform normalization."},"password":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Password for login, or null if logging in via federated SSO provider."},"provider":{"type":"string","description":"Federated authentication provider (e.g., 'saml', 'oauth2', 'ad'). Required if not logging in with password."},"provider_key":{"type":"string","description":"Federated provider key/subject id for SSO login."}},"required":["email"],"description":"Request DTO for organization administrator login. Maps to authentication by email/password or SSO. Platform security policy may require SSO for specific tenants or allow both local and federated authentication according to business settings."},"IHealthcarePlatformOrganizationAdmin.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Existing, valid refresh token for the organization admin session. Must follow JWT or platform-standard token format for refresh."}},"required":["refresh_token"],"description":"Request DTO for refreshing organization admin authentication with a valid refresh token. Used for session renewal or token extension."},"IHealthcarePlatformDepartmentHead.IJoinRequest":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address for department head registration. Must be unique to the user and valid for system notifications/business workflows."},"full_name":{"type":"string","description":"Full legal name of the department head for identity and audit record purposes."},"phone":{"oneOf":[{"type":"string","description":"Business or organizational contact number (optional) for notifications or access.","maxLength":30},{"type":"null"}],"description":"Business or organizational contact number (optional) for notifications or access."},"password":{"oneOf":[{"type":"string","description":"Password for department head login; required unless SSO being used.","minLength":8},{"type":"null"}],"description":"Password for department head login; required unless SSO being used."},"sso_provider":{"oneOf":[{"type":"string","description":"SSO provider name if using federated authentication instead of password-based (e.g., saml, oauth2, ad)."},{"type":"null"}],"description":"SSO provider name if using federated authentication instead of password-based (e.g., saml, oauth2, ad)."},"sso_provider_key":{"oneOf":[{"type":"string","description":"SSO provider-specific user or session key."},{"type":"null"}],"description":"SSO provider-specific user or session key."}},"required":["email","full_name"],"description":"Request DTO for registering a new department head in the healthcare platform. Either password or SSO provider/key is required, not both."},"IHealthcarePlatformDepartmentHead.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the department head."},"email":{"type":"string","format":"email","description":"Email address for departmental admin contact and authentication."},"full_name":{"type":"string","description":"Full legal name of the department head."},"phone":{"oneOf":[{"type":"string","maxLength":30},{"type":"null"}],"description":"Optional business phone number."},"created_at":{"type":"string","format":"date-time","description":"Timestamp department head account was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp department head profile was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp if the department head was archived or removed. ISO8601."},{"type":"null"}],"description":"Nullable timestamp marking when the department head was soft-deleted/archived (if applicable). Sourced from {healthcare_platform_departmentheads.deleted_at}."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"},"role":{"type":"string","description":"Role code string assigned (should be 'departmentHead' for this interface)."}},"required":["id","email","full_name","created_at","updated_at","token"],"description":"Successful authorization response after join/login/refresh for a department head in the healthcare platform."},"IHealthcarePlatformDepartmentHead.ILoginRequest":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address for department head authentication."},"password":{"oneOf":[{"type":"string","minLength":8},{"type":"null"}],"description":"Password credential for login (optional if using SSO)."},"sso_provider":{"oneOf":[{"type":"string","description":"SSO provider name for federated login (optional)."},{"type":"null"}],"description":"SSO provider name for federated login (optional)."},"sso_provider_key":{"oneOf":[{"type":"string","description":"SSO provider specific key for federated login (optional)."},{"type":"null"}],"description":"SSO provider specific key for federated login (optional)."}},"required":["email"],"description":"Login request object for department head authentication (can be email/password OR SSO)."},"IHealthcarePlatformDepartmentHead.IRefreshRequest":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token previously issued via login/join/refresh."}},"required":["refresh_token"],"description":"Refresh request body for department head session/token renewal."},"IHealthcarePlatformMedicalDoctor.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Medical doctor business email. Must be unique and used for login/communication. Example: dr.john@examplehospital.com"},"full_name":{"type":"string","description":"Doctor's legal full name for credentialing and clinical privileges. Example: \"John A. Smith, MD\""},"npi_number":{"type":"string","description":"Doctor's National Provider Identifier (NPI), unique and required for licensing/credentialing (US only). Example: \"1234567890\""},"password":{"type":"string","format":"password","description":"Password for local login (8+ characters, required if not using SSO). Never returned in any response."},"specialty":{"oneOf":[{"type":"string","description":"Clinical specialty (e.g., Cardiology, Pediatrics, Internal Medicine)."},{"type":"null"}],"description":"Doctor's medical specialty. Optional on join."},"phone":{"oneOf":[{"type":"string","description":"Business contact or mobile number, for alerts/MFA (may be null)."},{"type":"null"}],"description":"Doctor's phone (for alerts/MFA). Optional on join, nullable."}},"required":["email","full_name","npi_number","password"],"description":"Sign-up payload for platform medical doctor: required fields include email, legal name, NPI, password. Optional: specialty, phone. Used for initial onboarding and credential creation."},"IHealthcarePlatformMedicalDoctor.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for medical doctor, assigned on join."},"email":{"type":"string","format":"email","description":"Doctor's business email (login/notification, unique)."},"full_name":{"type":"string","description":"Doctor's legal name, for display and credentialing."},"npi_number":{"type":"string","description":"Doctor NPI number, required for provider validation."},"specialty":{"oneOf":[{"type":"string","description":"Doctor's medical specialty, as configured in staff profile."},{"type":"null"}],"description":"Medical specialty if available."},"phone":{"oneOf":[{"type":"string","description":"Contact phone—may be null if not set."},{"type":"null"}],"description":"Doctor's phone for notifications/MFA, nullable."},"created_at":{"type":"string","format":"date-time","description":"Doctor account creation time—ISO 8601 (UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Doctor last update (profile/security). ISO 8601 (UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp; null unless this account is archived/inactive."},{"type":"null"}],"description":"Soft deletion timestamp; null unless this account is archived/inactive."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","full_name","npi_number","created_at","updated_at","token"],"description":"After successful join/login/refresh, returns doctor profile with authorization token for continued access. Sensitive credential fields are stripped; for compliance, only public/identity data and standard JWT token are included."},"IHealthcarePlatformMedicalDoctor.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Doctor's login email. Example: dr.jane@hospital.org"},"password":{"type":"string","format":"password","description":"Password credential for login. Not returned in response."}},"required":["email","password"],"description":"Payload required to authenticate medical doctor with platform using email/password credentials. SSO logins are handled via provider-specific endpoints."},"IHealthcarePlatformMedicalDoctor.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Valid, non-expired refresh token issued on previous login/join/refresh operation."}},"required":["refresh_token"],"description":"Payload for refreshing session tokens for doctor authentication. Submits valid refresh token as issued by platform."},"IHealthcarePlatformNurse.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address for login and notifications. Must be unique to this nurse within the system. Only business emails allowed; personal email domains (e.g., gmail, yahoo) are not valid for clinical staff accounts. Used for notifications, password resets, and system identification."},"full_name":{"type":"string","description":"Full legal name of the nurse. Used for credentialing, patient-facing display, and audit. Should match state license records. Cannot be omitted for staff accounts."},"license_number":{"type":"string","description":"State-issued license or certification number. Must be unique to each nurse. Required for credentialing/audit. Used for regulatory and compliance workflows."},"specialty":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Primary clinical area of nursing for the nurse (optional, e.g., ICU, Med/Surg). This field is used for clinical assignment and role mapping. May be null if the nurse is not assigned a specialty."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Work or personal phone number for shift notifications, security alerts, or urgent communications. This field is optional and may be null if no contact number is available."},"password":{"type":"string","description":"Credential for authentication. Must be provided if using local authentication (password login); required complexity enforced by policy. Not returned in any response. Never stored as plain text."}},"required":["email","full_name","license_number"],"description":"Request body for nurse registration (join) API. Used for onboarding a new nurse with all required profile and credential information. All fields map to columns in the healthcare_platform_nurses table."},"IHealthcarePlatformNurse.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the nurse user (UUID). Used to reference the account throughout the platform."},"email":{"type":"string","format":"email","description":"Nurse's business email address. Used for login, notifications, and account recovery."},"full_name":{"type":"string","description":"The full legal name of the nurse. Used for credentials, display, and compliance."},"license_number":{"type":"string","description":"Nurse's state-issued license or certification number. Uniquely identifies clinical staff and is required for audit/compliance."},"specialty":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"The primary clinical area of nursing for the nurse (optional). May be null if unspecified."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Contact phone for notifications and shift/security alerts. May be null if not provided."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the nurse account was created (ISO 8601, UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when nurse account was last updated (ISO 8601, UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion/archival tracking, records when the nurse was deactivated/logically deleted (ISO date-time), or null if still active. This field is used for audit/compliance; when set, the nurse is logically deleted but still present in the system until regulatory retention requirements are met."},{"type":"null","description":"Indicates that the nurse record is currently active, not deleted or archived."}],"description":"Soft deletion/archival tracking, records when the nurse was deactivated/logically deleted (ISO date-time), or null if still active. This field is used for audit/compliance; when set, the nurse is logically deleted but still present in the system until regulatory retention requirements are met."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","full_name","license_number","created_at","updated_at","token"],"description":"Response body for authorized nurse session. Contains all non-sensitive user and credential identifiers for the nurse, excluding any password hashes or secrets. Provides JWT session tokens for authentication."},"IHealthcarePlatformNurse.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Nurse's email address for login (business email only). Must match an active account."},"password":{"type":"string","description":"Login credential. Not returned in any response, must match nurse's authentication record."}},"required":["email","password"],"description":"Request body for nurse login/authentication API. Used to start a new authenticated session for a nurse account."},"IHealthcarePlatformNurse.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token string issued previously at login or join. Used to renew JWT authentication session for the nurse."}},"required":["refresh_token"],"description":"Request body for refreshing nurse authentication tokens. Supplies the refresh_token that must be validated for the nurse's active session."},"IHealthcarePlatformTechnician.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"The business email address for the technician. Must be unique, used for login and notifications. Only business domains are allowed (no public/personal domains)."},"full_name":{"type":"string","description":"The full legal name of the technician as recognized for credentialing and clinical assignments."},"license_number":{"type":"string","description":"The state or registry-issued license number for the technician. Required for identity, compliance, and audit."},"specialty":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) The technician's field of expertise (e.g., Radiology, Phlebotomy). Can be null or omitted if not applicable."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Business or personal phone number for communications and shift notification. May be null."}},"required":["email","full_name","license_number"],"description":"Payload to register/join a technician account in the healthcare platform. All fields are used to create a compliant staff profile for clinical/technical assignment. Email and license_number must be unique. See schema healthcare_platform_technicians for further constraints."},"IHealthcarePlatformTechnician.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"The technician's email address used for login and credential verification."},"password":{"type":"string","minLength":8,"description":"Password for technician authentication. Musn't be stored or returned in cleartext."}},"required":["email","password"],"description":"Login credentials required for technician authentication. Email and password are referenced in healthcare_platform_technicians and healthcare_platform_user_authentications for credential check. Only valid, non-deleted accounts may login."},"IHealthcarePlatformTechnician.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Valid refresh token as issued from prior authentication/token grant, required for session continuation."}},"required":["refresh_token"],"description":"Refresh request structure for technician session. Only valid, active refresh_token values are accepted, which are managed via healthcare_platform_auth_sessions. Used to get updated JWT or session tokens."},"IHealthcarePlatformTechnician.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the technician account (UUID, matches healthcare_platform_technicians.id)."},"email":{"type":"string","format":"email","description":"Business email address registered for the technician."},"full_name":{"type":"string","description":"Full legal name of the technician for identity and audit."},"license_number":{"type":"string","description":"Professional/state license number used for credentialing, audit, and regulatory workflows."},"specialty":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Technician's technical/clinical specialty. Nullable."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Business or personal phone number. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the technician account was created (ISO 8601 date-time)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the technician account was last updated (ISO 8601 date-time)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete/archive marker. Non-null if deactivated/archived. Nullable."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","full_name","license_number","created_at","updated_at","token"],"description":"Response payload after technician authentication/register/login/refresh actions. Returns full technician profile (excluding sensitive credential hashes) and the current session token details. All fields match healthcare_platform_technicians or platform auth session schema."},"IHealthcarePlatformReceptionist.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Receptionist login and business email. Must be unique for this table. Used both for authentication and system notification delivery."},"full_name":{"type":"string","description":"Full name of the receptionist for identification and messaging."},"phone":{"oneOf":[{"type":"string","format":"phone","description":"Business or organizational contact number. Used for notifications/SMS and administrator contact."},{"type":"null"}],"description":"Business or organizational contact number. Used for notifications/SMS and administrator contact. Nullable if not provided."}},"required":["email","full_name"],"description":"Payload for receptionist registration (account creation) referencing the IHealthcarePlatformReceptionist.ICreate structure.\n\n- Receptionist login and business email (MUST be unique)\n- Full name of the receptionist for personnel identification\n- Business/organization contact number (optional, nullable)\n\nOn success, a new healthcare_platform_receptionists record is created and an authentication session can be issued. Never include fields not described in the schema. Designed for front-desk, appointment, or admin staff onboarding."},"IHealthcarePlatformReceptionist.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the receptionist user."},"email":{"type":"string","format":"email","description":"Receptionist login and business email."},"full_name":{"type":"string","description":"Full legal name of the receptionist."},"phone":{"oneOf":[{"type":"string","format":"phone","description":"Business or organizational contact number."},{"type":"null"}],"description":"Business or organizational contact number."},"created_at":{"type":"string","format":"date-time","description":"Receptionist account creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null if active; set to ISO8601 timestamp if logically deleted for compliance/audit."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","full_name","created_at","updated_at","token"],"description":"Payload containing all receptionist credential and profile details upon successful login, join, or session refresh. Never exposes any password or sensitive credential information."},"IHealthcarePlatformReceptionist.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Receptionist business email for login (must match email in receptionist record)."},"password":{"type":"string","description":"Password credential for login (write only; required on authentication, not returned in any API response)."}},"required":["email","password"],"description":"Login credentials structure for a receptionist account (IHealthcarePlatformReceptionist.ILogin).\n\n- email (must match registered receptionist account)\n- password (write-only)\n\nNever expose or return password(s) in any API output."},"IHealthcarePlatformReceptionist.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token for session renewal (not the access JWT, and not the password). Required to prolong authenticated session without password re-entry."}},"required":["refresh_token"],"description":"Payload for receptionist session/token refresh operation (IHealthcarePlatformReceptionist.IRefresh). Contains a refresh token previously issued after login/join, permitting seamless session rotation or continuation."},"IHealthcarePlatformPatient.IJoin":{"type":"object","description":"Payload for registering a new patient user account within the healthcare platform. Fields are mapped to the healthcare_platform_patients schema, supporting both password-based and federated/SSO sign-up paths. Registration must include email, full legal name, and date_of_birth for demographic and identity verification. Either password or provider+provider_key is required. Phone is recommended for SMS and appointment reminders but not required. All fields must match real schema columns; no extraneous fields permitted.","properties":{"email":{"type":"string","description":"Email address for patient registration. Must be unique across patients and represent a valid notification address. E.g., 'jane.doe@domain.com'."},"full_name":{"type":"string","description":"Patient's legal full name, used for matching, display, and identity checks. E.g., 'Jane Doe'."},"date_of_birth":{"type":"string","format":"date-time","description":"Date of birth in ISO 8601 format (YYYY-MM-DD or date-time). Used to verify eligibility, demographics, and medical records mapping."},"phone":{"type":"string","description":"Optional phone number for reminder and notification purposes. Should be a valid E.164 format or locally accepted format if non-international. Not required."},"password":{"type":"string","description":"Plain text password to set for patient login (if not using federated/SSO registration). Complexity is enforced by platform policy. Not returned in any response."},"provider":{"type":"string","description":"(Optional) Federated authentication provider name. E.g., 'saml', 'oauth2', 'ad'. If set, password is not required."},"provider_key":{"type":"string","description":"(Optional) Provider-specific user assertion, key, or identifier (used with provider). E.g., SSO subject or federated user ID."}},"required":["email","full_name","date_of_birth"]},"IHealthcarePlatformPatient.IAuthorized":{"type":"object","description":"A successful authentication or registration result for a patient. Contains the patient's unique system id, profile fields (excluding sensitive fields like hashes/password), and JWT authentication/refresh tokens for API access. All fields mapped to actual columns or DTO contract—never include password hashes. The token property refers to IAuthorizationToken for actual JWT values; refresh token is also returned as string. Single object response for all patient-facing auth flows.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) assigned to the patient user."},"email":{"type":"string","description":"Registered patient's business or personal email (matches registration and login value)."},"full_name":{"type":"string","description":"The patient's legal name as stored in the registration record."},"date_of_birth":{"type":"string","format":"date-time","description":"Patient birth date in ISO 8601 string format."},"phone":{"type":"string","description":"Phone number for notifications; only returned if present."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the patient account was created. Populated automatically by the system. ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the patient account profile was last updated. Used for audit, compliance, and data synchronization. ISO 8601 format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable soft-deletion marker for account closure or regulatory data lifecycle operations. Records the date/time the patient account was flagged deleted. Always null for active accounts."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"},"refresh_token":{"type":"string","description":"Refresh token (JWT or opaque) issued as part of the auth flow; not a hash or secret."}},"required":["id","email","full_name","date_of_birth","created_at","updated_at","token"]},"IHealthcarePlatformPatient.ILogin":{"type":"object","description":"DTO for patient login/authentication attempt. Must contain email; either password for local auth or provider/provider_key for federated/SSO. All fields must directly correspond to actual schema columns, with only one of password or SSO credentials supplied. Do not mix/extend unrelated business fields.","properties":{"email":{"type":"string","description":"Patient email address for authentication. Must match a unique user in the healthcare_platform_patients table. E.g. 'user@example.com'."},"password":{"type":"string","description":"(Optional) Credential supplied when using local/login registration method. Encrypted as per application policy. Not required for SSO/federated login."},"provider":{"type":"string","description":"(Optional) Federated/SSO authentication provider name. E.g., 'saml', 'oauth2', 'ad'. If supplied, must have matching provider_key; password is not required."},"provider_key":{"type":"string","description":"(Optional) Provider-specific assertion/credential for federated/SSO login (e.g., SSO assertion, AD user id)."}},"required":["email"]},"IHealthcarePlatformPatient.IRefresh":{"type":"object","description":"Payload for refreshing an existing authentication session for a patient. Requires only the current refresh_token previously issued during login/join. Must match actual field name and constraints in authentication/session records. No extraneous properties allowed.","properties":{"refresh_token":{"type":"string","description":"Refresh token for JWT session authentication renewal. Required, and must be valid according to auth/session schema."}},"required":["refresh_token"]},"IHealthcarePlatformOrganization.IRequest":{"type":"object","description":"Request type for filtering, searching, and paginating organizations in index/search APIs. All fields are optional for flexible advanced search. Pagination controls are typically required for patch methods.","properties":{"code":{"type":"string","description":"Business/technical organization code filter."},"name":{"type":"string","description":"Filter by partial or fuzzy match for organization name."},"status":{"type":"string","description":"Filter for status (active, pending, archived, etc)."},"created_at_from":{"type":"string","format":"date-time","description":"Include only organizations created at or after this ISO8601 date."},"created_at_to":{"type":"string","format":"date-time","description":"Include only organizations created before this ISO8601 date."},"page":{"type":"integer","description":"Page number for pagination (1-based)."},"limit":{"type":"integer","description":"Page size limit for results; typically 10, 50, 100, etc."}},"required":[]},"IHealthcarePlatformOrganization":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Globally unique identifier (UUID) for the organization."},"code":{"type":"string","description":"Unique business code for the organization. Used internally for technical and business mapping."},"name":{"type":"string","description":"Official organization name for display and legal documentation."},"status":{"type":"string","description":"Current operational and business status of the organization (e.g., active, suspended, pending, archived, etc.)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601 UTC) when the organization was created in the system."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601 UTC) when the record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for archival/compliance retention. Null if organization is active and visible."}},"required":["id","code","name","status","created_at","updated_at"],"description":"Full record for a tenant/organization in the healthcare platform. Used as the top-level multi-tenant partition and compliance audit anchor for all associated records."},"IHealthcarePlatformOrganization.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique business code for the organization. Required; used to map org in internal and external systems."},"name":{"type":"string","description":"Legal display name for the organization. Required for contract, display, and external documentation."},"status":{"type":"string","description":"Initial operational status of the organization. Usually 'active' or 'pending'; must match allowed values for org onboarding."}},"required":["code","name","status"],"description":"Payload for creation of a new healthcare organization entity. All fields are required for onboarding a new organization."},"IHealthcarePlatformOrganization.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Business code (unique within the healthcare platform) to update; must satisfy organization code business rules."},"name":{"type":"string","description":"Organization display/legal name to be updated. Required for legal documentation if changed."},"status":{"type":"string","description":"Updated status; controls visibility and operational capacity (must match allowed values for the business context)."}},"required":[],"description":"Fields for updating healthcare organization records. All fields are optional; any provided property will be updated on the target organization."},"IHealthcarePlatformDepartment.IRequest":{"type":"object","description":"Request filter structure for paginating, searching, or filtering department records. Used in advanced admin dashboards and assignment selection. All fields optional for advanced/fuzzy search.","properties":{"code":{"type":"string","description":"Department business code (unique within organization, short string filter)."},"name":{"type":"string","description":"Fuzzy search for department name."},"status":{"type":"string","description":"Filter for department operational status."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Restrict search to a specific organization's departments (cascade filtering/grouping)."},"created_at_from":{"type":"string","format":"date-time","description":"Departments created after this timestamp."},"created_at_to":{"type":"string","format":"date-time","description":"Departments created before this timestamp."},"page":{"type":"integer","description":"Pagination: page number."},"limit":{"type":"integer","description":"Pagination page size."}},"required":[]},"IHealthcarePlatformDepartment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\nUUID for the department as generated by DB.\nReferences 'id' in healthcare_platform_departments."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Parent organization's id (UUID).\nReferences 'healthcare_platform_organizations.id'."},"code":{"type":"string","description":"Short code for the department (unique within organization).\nSee Prisma 'code' column.\nUsed for business logic and search filtering."},"name":{"type":"string","description":"Department display/legal name.\nTo be used for UI, operational reporting, audit.\nSee Prisma 'name'."},"status":{"type":"string","description":"Current business status (active, suspended, pending, archived).\nString as defined in Prisma 'status' column.\nUsed for filtering, organization management, audit."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the department. ISO 8601.\nReferences Prisma 'created_at' (Timestamptz)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the department (ISO8601). See Prisma 'updated_at'."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion date/time if archived. Null when active.\nPer Prisma 'deleted_at' column."}},"required":["id","healthcare_platform_organization_id","code","name","status","created_at","updated_at"],"description":"A department or business unit within an organization (e.g., Cardiology, Radiology, Billing).\nDefines scope for resource allocation, RBAC, and audit boundaries.\n\nMaps one-to-many to healthcare_platform_organizations.\n- id: Unique department identifier\n- healthcare_platform_organization_id: Parent org (tenant)\n- code: Unique code within org\n- name: Human-readable department name\n- status: active, archived, etc.\n- created_at / updated_at: Timestamps\n- deleted_at: Soft delete/archive date or null.\nCompliant with Prisma healthcare_platform_departments schema.\n"},"IHealthcarePlatformDepartment.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID to which this department belongs.\nSee healthcare_platform_organizations.id in Prisma."},"code":{"type":"string","description":"Short department code, unique within organization. \nString, e.g. 'CARD', 'RAD', 'BILL'."},"name":{"type":"string","description":"Display/business name of department."},"status":{"type":"string","description":"Initial status (e.g., 'active', 'pending') as required by business logic."}},"required":["healthcare_platform_organization_id","code","name","status"],"description":"DTO for department record creation.\nMaps to healthcare_platform_departments in Prisma.\nRequired: organization, code, name, status.\nReturns the full department object with DB-generated ids/timestamps on success.\n"},"IHealthcarePlatformDepartment.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Department code for update. Unique within organization. Optional."},"name":{"type":"string","description":"Department name for update. Optional."},"status":{"type":"string","description":"Updated status, e.g. 'active', 'suspended', 'archived'. Optional."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete date/time. Set value to schedule/archive department. Optional."}},"required":[],"description":"DTO for updating a department record as in Prisma.\nFields are optional to allow for partial updates. Matches healthcare_platform_departments.\n"},"IHealthcarePlatformRole":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the role.\n\nThis is a UUID assigned by the system and serves as the primary key for each role entry. It enables stable referencing and lookup of roles within the RBAC system. Populated by Prisma as @id String @db.Uuid."},"code":{"type":"string","description":"Role code used for assignment, internal mappings, and cross-system integration (e.g., 'system_admin', 'organization_admin', 'medical_doctor').\n\nThis is a unique code per role and scope_type, ensuring no collisions across business logic or integration boundaries. Sourced from the 'code' field in Prisma. Examples include 'system_admin', 'organization_admin', or custom codes for platform, organization, or department-specific roles."},"name":{"type":"string","description":"Role display name, suitable for UI and business documentation. For example, 'System Admin', 'Medical Doctor', or 'Receptionist'. Sourced from the 'name' field in Prisma."},"scope_type":{"type":"string","description":"Level at which this role applies. Expected values are 'platform', 'organization', or 'department'. Dictates RBAC boundary for role assignment and workflow."},"status":{"type":"string","description":"Current lifecycle status of the role (e.g., 'active', 'retired', 'system-only', 'archived'). Used to filter out deprecated roles in assignment/security logic. Sourced from 'status' field in Prisma."},"created_at":{"type":"string","format":"date-time","description":"Role creation timestamp (ISO 8601, RFC 3339). Captures when the role was initially defined in the system, supporting audit trails and lifecycle tracking."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update to any field or metadata for this role. Used for audit and tracking changes in RBAC configurations."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp for archival.\n\nNull if role is currently active. If set, indicates the date/time at which this role was archived/deleted for compliance retention. Sourced from 'deleted_at' in Prisma."}},"required":["id","code","name","scope_type","status","created_at","updated_at"],"description":"A platform-wide, organization-level, or department-scoped role as defined in the healthcare_platform_roles table.\n\nRoles control the boundaries for permission allocation, access enforcement, and workflow eligibility within the multi-tenant healthcare SaaS environment. Each role is uniquely defined by its code and scope_type, and may have status and lifecycle metadata. Documented with comments from the Prisma schema."},"IHealthcarePlatformRole.IRequest":{"type":"object","description":"Request/Filter for listing paginated role records, supporting code, name, scope, status, and free text search.","properties":{"code":{"type":"string","description":"Filter for specific role code."},"name":{"type":"string","description":"Full text search or partial match filter by name."},"scope_type":{"type":"string","description":"Scope (platform, organization, department)."},"status":{"type":"string","description":"Role lifecycle status filter."},"page":{"type":"integer","description":"Page number (for pagination)."},"limit":{"type":"integer","description":"Results per page."}},"required":[]},"IHealthcarePlatformRole.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Role code (unique within scope).\n\nRequired. Must not collide with other codes within the same scope_type. Examples: 'system_admin', 'org_manager', 'nurse', etc."},"name":{"type":"string","description":"Display name for the role. Required."},"scope_type":{"type":"string","description":"Scope type in which this role applies. Value should be one of: 'platform', 'organization', 'department'."},"status":{"type":"string","description":"Initial status for the role (e.g., 'active', 'archived')."}},"required":["code","name","scope_type","status"],"description":"Request payload for creating a new platform-wide, organization-level, or department-scoped role in the healthcare_platform_roles table."},"IHealthcarePlatformRole.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Updated display name for the role. Optional. If omitted, retains current name."},"status":{"type":"string","description":"Updated status for the role (e.g., 'active', 'retired', 'archived'). Optional. If omitted, status remains unchanged."}},"required":[],"description":"Update payload for a role entity. Only allows changing display name and status.\n\nBusiness logic may restrict status changes based on references, deprecation policy, or platform logic. Fields left blank or null are unchanged."},"IHealthcarePlatformPermission":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the permission (UUID).\n\nThis field stores the system-wide UUID for this permission definition as referenced throughout RBAC mappings, audit logs, and assignment tables."},"code":{"type":"string","description":"Unique code for this permission (e.g., 'edit_patient_record').\n\nThis business-facing string code defines the actionable permission in the RBAC system and must remain unique within permission scope. Used in role mapping and audit reporting throughout the healthcare platform."},"name":{"type":"string","description":"Human-readable name for this permission.\n\nUsed in administrative UI, audit reports, and for clarity when assigning permissions to roles or users."},"description":{"type":"string","description":"Explanation of the permission's intent and usage scenario.\n\nDescribes exactly what this permission allows and any intended contexts for assignment. Used by compliance, admin, and security review."},"scope_type":{"type":"string","description":"Level at which this permission is applicable: platform, organization, department.\n\nDesignates where in the RBAC hierarchy this permission can be granted or recognized, supporting multitenant isolation and department/organization-level overrides."},"status":{"type":"string","description":"Current status of the permission (active, retired, system, etc.).\n\nUsed to flag permissions as available for assignment or deprecated, system-only, or under review."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601 date-time).\n\nIndicates when this permission record was first created in the database as a reference for audit and lifecycle management."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO 8601 date-time).\n\nSet to now() when any attribute of the permission is changed, forming the basis for modification audit trails."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for permission archival/retirement (null if active).\n\nIf present, indicates when this permission was soft deleted or archived. Used for compliance review, audit queries, and enforcing immutability for historic permissions. Omit or set to 'null' when the permission is active."}},"required":["id","code","name","description","scope_type","status","created_at","updated_at"],"description":"Permission entity defining a specific actionable operation or privilege in the RBAC system (e.g., 'manage_users', 'view_ehr', 'edit_billing').\n\nPermissions map to actions in the business domain and are referenced by roles for access control. Detailed documentation reflects both the intent and auditability requirements of RBAC in the healthcarePlatform. Permission records are static or versioned; they may be soft-deleted/archived following regulatory retention rules.\n\nOriginal Prisma schema: healthcare_platform_permissions."},"IHealthcarePlatformPermission.IRequest":{"type":"object","description":"Request/Filter object for searching, filtering, and paginating permission definitions. Used in RBAC audit tools and mapping configuration.","properties":{"code":{"type":"string","description":"Permission code filter (exact)."},"name":{"type":"string","description":"Permission name partial text search/filter."},"scope_type":{"type":"string","description":"Scope match (platform, organization, department)."},"status":{"type":"string","description":"Status match."},"page":{"type":"integer","description":"Page number for results, pagination."},"limit":{"type":"integer","description":"Results per page, pagination."}},"required":[]},"IHealthcarePlatformPermission.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code for the new permission (e.g. 'edit_patient_record').\n\nMust comply with RBAC naming conventions and be unique within the table."},"name":{"type":"string","description":"Human-readable name for the permission.\n\nThis is the display label for all role assignment and audit workflows."},"description":{"type":"string","description":"Textual explanation of what the permission grants and any business/compliance rules.\n\nUsed by admins for RBAC review and staff onboarding."},"scope_type":{"type":"string","description":"Level at which this permission is applicable: platform, organization, department.\n\nThis field defines where the permission can be granted and its context within the RBAC tree."},"status":{"type":"string","description":"Operational status of the permission: 'active', 'retired', 'system', etc.\n\nStatus controls whether the permission can be assigned in current workflows and sets the compliance lifecycle stage."}},"required":["code","name","description","scope_type","status"],"description":"Request payload for creating a new RBAC permission record in the healthcarePlatform system.\n\nOriginal business schema: healthcare_platform_permissions."},"IHealthcarePlatformPermission.IUpdate":{"type":"object","properties":{"code":{"type":"string","description":"Update permission code (must remain unique for table scope)."},"name":{"type":"string","description":"Updated permission name (display label)."},"description":{"type":"string","description":"Updated explanation or business context for permission usage."},"scope_type":{"type":"string","description":"Modify the scope_type for the permission (platform, org, department, etc.)."},"status":{"type":"string","description":"Update status (active, archived, system, etc.) for RBAC review."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete/archival timestamp. Set to ISO 8601 date-time to archive permission, or null to restore to active."}},"required":[],"description":"Request payload for updating a platform RBAC permission record. Supports partial update for RBAC review, compliance, and business reconfiguration workflows."},"IHealthcarePlatformOrgDepartmentAssignment.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number for paginated results (1-based index; optional)."},"limit":{"type":"integer","description":"Number of records per page (optional)."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Filter by organization UUID (optional)."},"healthcare_platform_department_id":{"type":"string","format":"uuid","description":"Filter by department UUID (optional)."},"created_at_from":{"type":"string","format":"date-time","description":"Filter: results must have created_at on/after this time (optional, ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Filter: results must have created_at on/before this time (optional, ISO 8601)."},"updated_at_from":{"type":"string","format":"date-time","description":"Filter: results must have updated_at on/after this time (optional, ISO 8601)."},"updated_at_to":{"type":"string","format":"date-time","description":"Filter: results must have updated_at on/before this time (optional, ISO 8601)."},"orderBy":{"type":"string","description":"Sort results by one of the available columns (optional)."},"direction":{"oneOf":[{"const":"asc","description":"Sort order direction (asc or desc, optional)."},{"const":"desc","description":"Sort order direction (asc or desc, optional)."}],"description":"Sort order direction (asc or desc, optional)."}},"description":"Request parameters for searching/filtering organization-department assignments. Supports paging, filtering by org/department, created window, and sorting.","required":[]},"IHealthcarePlatformOrgDepartmentAssignment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the organization-department assignment."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Foreign key: ID of the organization to which the department is assigned."},"healthcare_platform_department_id":{"type":"string","format":"uuid","description":"Foreign key: ID of the department being assigned to the organization."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the assignment was created (ISO 8601 format)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the assignment was last modified (ISO 8601 format)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when the assignment was soft-deleted, if applicable (ISO 8601 format)."},{"type":"null"}],"description":"Timestamp when the assignment was soft-deleted, if applicable (ISO 8601 format)."}},"description":"Organization-department assignment mapping entity, representing the relationship between an organization and a department.\n\nIncludes unique identifier, foreign keys for org and department, audit trail timestamps, and soft-delete marker.","required":["id","healthcare_platform_organization_id","healthcare_platform_department_id","created_at","updated_at"]},"IHealthcarePlatformOrgDepartmentAssignment.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization to which the department will be assigned. Must reference an existing organization entity."},"healthcare_platform_department_id":{"type":"string","format":"uuid","description":"UUID of the department to assign to the organization. Must reference an existing department entity."}},"description":"Request body for creating a new organization-department assignment.\n\nRequires the organization and department identifiers (UUIDs). Used for onboarding, restructuring, or delegating staff/structure in multi-tenant healthcare organizations.","required":["healthcare_platform_organization_id","healthcare_platform_department_id"]},"IHealthcarePlatformOrgDepartmentAssignment.IUpdate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"New UUID of the organization (if a reassignment is needed)."},"healthcare_platform_department_id":{"type":"string","format":"uuid","description":"New UUID of the department (if a reassignment is needed)."}},"description":"Patch/update object for updating fields in an organization-department assignment. Fields are optional and represent only what is being modified. Used for realigning departments between organizations or correcting erroneous assignments.","required":[]},"IHealthcarePlatformUserOrgAssignment.IRequest":{"type":"object","description":"Request/search shape for user-organization assignment list endpoints. Allows filtering/search/query for assignment management screens. Maps to fields in the assignment Prisma table.\n\nIncludes filters for organization, user, role, assignment status, and basic pagination/sort. Used with paginated index endpoints for bulk assignment audit and review.","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization to filter assignments by (UUID)."},"user_id":{"type":"string","format":"uuid","description":"User to filter assignments by (UUID)."},"role_code":{"type":"string","description":"Filter assignments by role_code."},"assignment_status":{"type":"string","description":"Filter by assignment_status (active, deleted, etc)."},"page":{"type":"integer","description":"Pagination: page number (1-based index)."},"limit":{"type":"integer","description":"Pagination: results per page."},"sort":{"type":"string","description":"Sort string for ordering results (e.g., 'created_at desc')."}},"required":[]},"IHealthcarePlatformUserOrgAssignment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of this user-organization-role assignment (UUID)."},"user_id":{"type":"string","format":"uuid","description":"UUID of the user in this assignment."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization this user is assigned to."},"role_code":{"type":"string","description":"Role code for the assignment within this organization; matches roles table value."},"assignment_status":{"type":"string","description":"Current status of this assignment (active, pending, suspended, deleted, etc)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Update timestamp (ISO 8601 UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp if assignment is deleted/archived; null if active."}},"required":["id","user_id","healthcare_platform_organization_id","role_code","assignment_status","created_at","updated_at"],"description":"A single user-to-organization assignment mapping, linking a user record to a given organization with a specific RBAC role. Used for multi-tenant access control, staff assignments, RBAC, and system-level audit/traceability. Represents the current or historical state of the user assignment. All IDs are UUIDs."},"IHealthcarePlatformUserOrgAssignment.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"UUID of the user to assign."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization to which to assign user."},"role_code":{"type":"string","description":"Role code for the assignment (as defined in roles table)."},"assignment_status":{"type":"string","description":"Initial assignment status (active, pending, suspended, deleted, etc)."}},"required":["user_id","healthcare_platform_organization_id","role_code","assignment_status"],"description":"Shape for creating a new user-organization assignment. Must supply all required RBAC, entity, and status info."},"IHealthcarePlatformUserOrgAssignment.IUpdate":{"type":"object","properties":{"role_code":{"type":"string","description":"New role code for the assignment, if being changed."},"assignment_status":{"type":"string","description":"New assignment status (active, pending, suspended, deleted, etc) if being changed."}},"description":"Update request for user-organization assignment: can update role_code and/or assignment_status, but not user/org IDs. All other fields are immutable. Partial updates accepted.","required":[]},"IHealthcarePlatformConfiguration.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization UUID to filter for org-level configurations. Optional - if omitted, search may be global."},"key":{"type":"string","description":"Search/filter configuration records by their configuration key (feature name, flag, etc). Partial or exact match."},"value":{"type":"string","description":"Match on value for searching within configuration records. May be full value or partial string."},"deleted":{"type":"boolean","description":"If true, return only soft-deleted configurations (deleted_at not null). If false/omitted, return only active configs."},"page":{"type":"integer","description":"Page of results to return (pagination, 1-based). Optional, default is first page."},"limit":{"type":"integer","description":"Number of results per page for pagination. Optional."},"sort":{"type":"string","description":"Sort order for results (e.g. 'created_at desc', 'key asc'). Optional."}},"required":[],"description":"Request body for searching and retrieving paginated configuration records. Includes filtering by organization, configuration key, value, soft-deleted status, and pagination/sorting parameters. Only schema-defined filter properties permitted."},"IHealthcarePlatformConfiguration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the configuration entry. UUID primary key, always present."},"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID for org-level config, or null if this is a platform-wide/global configuration."},"key":{"type":"string","description":"Configuration key/feature flag. Human- and machine-identified within org."},"value":{"type":"string","description":"Configuration value (business or operational logic). For complex config, may be JSON stringified."},"description":{"type":"string","description":"Description of the configuration or business/technical impact. Required for audit and compliance. Multi-line should explain the purpose and expected effect of this setting."},"created_at":{"type":"string","format":"date-time","description":"Creation ISO 8601 timestamp. Tracked for audit purposes. Set by the platform."},"updated_at":{"type":"string","format":"date-time","description":"Last update ISO 8601 timestamp. Tracked for audit/auditability. Set by platform logic."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion flag. If present, record is non-active but available for audit. If null, configuration is active."}},"required":["id","key","value","description","created_at","updated_at"],"description":"A single configuration entry for operational, technical, or business feature toggles and settings. Can be scoped to an organization or global. Designed for robust auditability and compliance. All properties must match the platform schema. No sensitive or clinical PHI data is stored."},"IHealthcarePlatformConfiguration.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the organization for which this configuration is being set, or null for global configs. Matches org primary key."},"key":{"type":"string","description":"Key for the configuration or feature flag being defined. Must be unique among active keys in the same org."},"value":{"type":"string","description":"Business logic or operational value for the configuration. For complex records, should be serialized string or base64-encoded JSON."},"description":{"type":"string","description":"Human- and compliance-readable description documenting the purpose and effect of the configuration setting."}},"required":["key","value","description"],"description":"Payload for creating a new configuration entry (for org or platform-wide scope). Auditable and fully described. Only schema properties are allowed. Organization is optional/null for global settings."},"IHealthcarePlatformConfiguration.IUpdate":{"type":"object","properties":{"key":{"type":"string","description":"Update to configuration or feature flag key/name. Only allowed if not in use, otherwise changes result in error."},"value":{"type":"string","description":"New value to set for the configuration (can be string, serialized, or JSON encoded)."},"description":{"type":"string","description":"Update description explaining the business impact or rationale for the configuration change. Required for major updates."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Set the soft-delete timestamp (ISO 8601/UTC) if marking configuration as deleted. Use null to reactivate. For audit compliance."}},"required":[],"description":"Partial or complete payload for updating configuration records. Only defined fields in the object are updatable. No required fields (all are optional for PATCH/PUT). Setting deleted_at marks as soft deleted (record is retained but not used in active workflows)."},"IHealthcarePlatformLocaleSettings.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Optional filter for the unique organization UUID for locale settings."},"department_id":{"type":"string","format":"uuid","description":"Optional filter for the unique department UUID. Only include settings for this department if set."},"language":{"type":"string","description":"Optional filter for the IETF language code, e.g., 'en-US' or 'ko-KR'."},"timezone":{"type":"string","description":"Optional filter for supported IANA timezone, e.g., 'Asia/Seoul', 'America/New_York'."},"date_format":{"type":"string","description":"Optional filter for the preferred date format as string, e.g., 'YYYY-MM-DD' or 'MM/DD/YYYY'."},"time_format":{"type":"string","description":"Optional filter for display of time, e.g., '24h' or '12h'."},"number_format":{"type":"string","description":"Optional filter for numeric formatting rules, e.g., '1,234.56' vs '1.234,56'."},"page":{"type":"integer","minimum":1,"description":"Result page for pagination. Omit or set to 1 for the first results page."},"limit":{"type":"integer","minimum":1,"description":"Number of records per page for pagination."},"sort":{"type":"string","description":"Optional sorting value - can be a field or composite sort string."}},"required":[],"description":"Request DTO for paginated and filterable locale settings. All properties are optional."},"IHealthcarePlatformLocaleSettings":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the locale settings record."},"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID of the linked organization, or null for platform-global settings."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID of the linked department, or null if org-level/global."},"language":{"type":"string","description":"IETF language tag specifying localization language, e.g., 'en-US', 'ko-KR', etc."},"timezone":{"type":"string","description":"IANA timezone name, e.g., 'Asia/Seoul', 'America/New_York'."},"date_format":{"type":"string","description":"Default date display format for this locale setting."},"time_format":{"type":"string","description":"Default time display format for this locale setting, e.g., '24h' or '12h'."},"number_format":{"type":"string","description":"Default number formatting convention for the region/language."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 creation date/time."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when locale settings were last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable timestamp when settings were soft-deleted; null unless deleted."}},"required":["id","language","timezone","date_format","time_format","number_format","created_at","updated_at"],"description":"Locale settings record for organizations/departments, capturing language, timezone, date/time/number formatting."},"IHealthcarePlatformLocaleSettings.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID of the linked organization, or null for system/global settings."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID for target department, or null for org-level/global."},"language":{"type":"string","description":"IETF language code required for the setting, e.g., 'en-US', 'es-ES', etc."},"timezone":{"type":"string","description":"IANA timezone; required. E.g., 'Asia/Seoul'."},"date_format":{"type":"string","description":"Preferred date format string, e.g., 'YYYY-MM-DD', 'MM/DD/YYYY'."},"time_format":{"type":"string","description":"Time format string, e.g., '24h', '12h'."},"number_format":{"type":"string","description":"Numeric formatting convention, e.g., '1,234.56'."}},"required":["language","timezone","date_format","time_format","number_format"],"description":"DTO for creating locale settings - applies to organization or department, with standard formatting props."},"IHealthcarePlatformLocaleSettings.IUpdate":{"type":"object","properties":{"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID of the linked organization, or null for system/global settings."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID for target department, or null for org-level/global."},"language":{"type":"string","description":"IETF language code required for the setting, e.g., 'en-US', 'es-ES', etc."},"timezone":{"type":"string","description":"IANA timezone; required. E.g., 'Asia/Seoul'."},"date_format":{"type":"string","description":"Preferred date format string, e.g., 'YYYY-MM-DD', 'MM/DD/YYYY'."},"time_format":{"type":"string","description":"Time format string, e.g., '24h', '12h'."},"number_format":{"type":"string","description":"Numeric formatting convention, e.g., '1,234.56'."}},"required":[],"description":"DTO for updating locale settings - any subset of properties may be updated; required fields not enforced."},"IHealthcarePlatformSystemAdmin.IRequest":{"type":"object","properties":{"email":{"type":"string","description":"Optional filter for matching admin account email address. May be used for single or partial matches."},"full_name":{"type":"string","description":"Optional filter for matching the full legal name of the system administrator. Useful for partial or case-insensitive search."},"created_at_gte":{"type":"string","format":"date-time","description":"Optional filter to include only accounts created on or after a specific ISO 8601 timestamp."},"created_at_lte":{"type":"string","format":"date-time","description":"Optional filter to include only accounts created on or before a specific ISO 8601 timestamp."},"status":{"type":"string","description":"Optional status filter for admin account lifecycle. Not present in base entity but used for search/index (e.g. 'active', 'archived')."},"page":{"type":"integer","minimum":1,"description":"Pagination control: page number (1-based)."},"limit":{"type":"integer","minimum":1,"description":"Pagination control: number of items per page. Typical default 20–100."},"sort":{"type":"string","description":"Sort instruction for listing results. Example: 'created_at:desc' or 'email:asc'."}},"required":[],"description":"Request type for searching or filtering system administrator user records. Contains only filter/pagination/search parameters. Used for platform admin dashboards."},"IHealthcarePlatformSystemAdmin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for the system administrator (UUID primary key)."},"email":{"type":"string","format":"email","description":"Unique business email for system administrator login and notifications. Must match organizational business domains."},"full_name":{"type":"string","description":"Full legal name of the system administrator, used in audit, display, and notifications."},"phone":{"oneOf":[{"type":"string","description":"Business phone number for system admin. E.164 or local format accepted."},{"type":"null"}],"description":"Optional contact number (may be null or omitted). Used for notification and MFA."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for when the admin account was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp for the last modification to this account."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. Indicates the account is archived or has been deactivated. Null if active."},{"type":"null"}],"description":"Soft deletion marker for compliance retention. Omitted or null when active."}},"required":["id","email","full_name","created_at","updated_at"],"description":"The core entity schema for a system administrator user. Represents privileged users responsible for global platform management, audit, and regulatory compliance. Sensitive credential and internal authentication information is never exposed via this type."},"IHealthcarePlatformSystemAdmin.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Business email address for the new system administrator. Must be unique and match the organization's domain policy."},"full_name":{"type":"string","description":"Legal full name for the system administrator account to be created. Used in display and audit logs."},"phone":{"oneOf":[{"type":"string","description":"Optional business phone number for MFA or alerting."},{"type":"null"}],"description":"Optional phone for 2FA or notifications. Null or omitted if not provided."}},"required":["email","full_name"],"description":"Shape of a request to create a new system administrator. Only required onboarding fields are accepted. Password/credential onboarding is handled by authentication subsystem. Phone is optional."},"IHealthcarePlatformSystemAdmin.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"New or updated unique business email for system administrator. Uniqueness constraint applies if changed."},"full_name":{"type":"string","description":"Updated full legal name for the system administrator account."},"phone":{"oneOf":[{"type":"string","description":"New phone number for contact/MFA/alerting."},{"type":"null"}],"description":"Set, change, or remove contact number. Null to remove."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) for soft deletion of the account. Set to mark as deleted; null to reactivate."},{"type":"null"}],"description":"Soft deletion marker. Use ISO 8601 string to mark as deleted, or null/omitted to clear deletion status."}},"required":[],"description":"Fields accepted for updating a system administrator account record. Only fields that are editable are included. Updating the email may trigger verification or uniqueness errors."},"IHealthcarePlatformOrganizationAdmin.IRequest":{"type":"object","properties":{"email":{"type":"string","description":"Email filter for list search (case-insensitive, partial or full match)."},"full_name":{"type":"string","description":"Full name filter for list search; allows partial match."},"is_active":{"type":"boolean","description":"Limit list to active or archived organization admins."},"sort":{"oneOf":[{"const":"created_at","description":"Sort field name."},{"const":"email","description":"Sort field name."},{"const":"full_name","description":"Sort field name."}],"description":"Sort field name."},"order":{"oneOf":[{"const":"asc","description":"Sort direction for result sorting; must be one of: 'asc' (ascending) or 'desc' (descending)."},{"const":"desc","description":"Sort direction for result sorting; must be one of: 'asc' (ascending) or 'desc' (descending)."}],"description":"Sort direction for result sorting; must be one of: 'asc' (ascending) or 'desc' (descending)."},"page":{"type":"integer","description":"Pagination: page number (1-based)."},"limit":{"type":"integer","description":"Pagination: number of results per page."}},"required":[],"description":"Filter, search, and pagination parameters for listing organization admin users. The 'order' property is correctly defined as a string enum with 'asc'/'desc'."},"IHealthcarePlatformOrganizationAdmin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"ID for this organization admin (UUID)."},"email":{"type":"string","description":"Business email for login (must be unique within platform)."},"full_name":{"type":"string","description":"Full legal name (for audit/identity)."},"phone":{"type":"string","description":"Contact number used for notifications, alerts. Optional. Example: \"+1-202-555-0123\""},"created_at":{"type":"string","format":"date-time","description":"Timestamp when admin account was created (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update to this admin (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion marker for account closure: null if active, ISO8601 string if deactivated."}},"required":["id","email","full_name","created_at","updated_at"],"description":"Main Organization Admin user entity for healthcare_platform_organizationadmins table. This integrates all persistent record fields capturing registration, identity, contact, org scoping, and audit timestamps."},"IHealthcarePlatformOrganizationAdmin.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Unique business/organization email for admin registration."},"full_name":{"type":"string","description":"Full legal name for administrative review/notifications."},"phone":{"type":"string","description":"Organization contact number; optional for notification/MFA."}},"required":["email","full_name"],"description":"Structure for organization admin account creation – only business required fields."},"IHealthcarePlatformOrganizationAdmin.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"Update admin's email (business/organization/replacement). Optional."},"full_name":{"type":"string","description":"Update full legal name of the account. Optional."},"phone":{"type":"string","description":"Update contact phone number for notifications; optional."}},"required":[],"description":"Structure for updating an organization admin account attribution fields."},"IHealthcarePlatformDepartmentHead.IRequest":{"type":"object","properties":{"full_name":{"type":"string","description":"Partial search (case-insensitive) on full_name. Used to filter department head list results by a substring (case-insensitive) anywhere in the full name. Supports advanced search in admin and HR dashboards."},"email":{"type":"string","description":"Partial search (case-insensitive) on email. Enables filtering or searching the department head records by substring match of email address; useful for quick find and audit."},"is_active":{"type":"boolean","description":"Filter by active (deleted_at is null, true) or archived/inactive (deleted_at set, false) department heads only."},"created_from":{"type":"string","format":"date-time","description":"Restrict results to records created on/after this date (ISO 8601 timestamp). Used for date window filtering."},"created_to":{"type":"string","format":"date-time","description":"Restrict results to records created on/before this date (ISO 8601 timestamp). For date window search."},"sort":{"type":"string","description":"Sort field name: one of 'created_at', 'full_name', 'email'. Dictates main field to order result list."},"order":{"oneOf":[{"const":"asc","description":"Sort direction for results: ascending or descending. Used with sort."},{"const":"desc","description":"Sort direction for results: ascending or descending. Used with sort."}],"description":"Sort direction for results: ascending or descending. Used with sort."},"page":{"type":"integer","description":"Page number for paginated response, 1-based."},"limit":{"type":"integer","description":"Number of results per page when paginating."}},"required":[],"description":"Search and filter parameters for department head list with pagination, text search, and field filtering (all fields optional)."},"IHealthcarePlatformDepartmentHead":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the department head. Sourced from {healthcare_platform_departmentheads.id}."},"email":{"type":"string","format":"email","description":"Unique business email for the department head (no personal domain emails allowed). Must match unique constraint in {healthcare_platform_departmentheads.email}."},"full_name":{"type":"string","description":"Full legal name of department head for HR/compliance identity. Sourced from {healthcare_platform_departmentheads.full_name}."},"phone":{"oneOf":[{"type":"string","description":"Optional business/notification phone number for department head, if available."},{"type":"null"}],"description":"Optional phone number for contact and notifications. Format: E.164 or international. Nullable if not supplied."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the department head record was created. ISO8601, for audit/traceability."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update of the department head account. ISO8601. Sourced from {healthcare_platform_departmentheads.updated_at}."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp if the department head was archived or removed. ISO8601."},{"type":"null"}],"description":"Nullable timestamp marking when the department head was soft-deleted/archived (if applicable). Sourced from {healthcare_platform_departmentheads.deleted_at}."}},"required":["id","email","full_name","created_at","updated_at"],"description":"Comprehensive department head entity for organization management. All primary fields required except phone and deleted_at, which are optional/nullable. This object is used in both summary listings and detail/detail endpoints for department head user accounts. Email is systemwide unique and required; full_name required for HR/compliance; phone optional. created_at and updated_at are ISO8601 datetime strings. Soft-deletion tracking is supported via deleted_at, which is nullable and only set when the record is archived for compliance purposes. Never includes authentication secrets, password hashes, or privileged workflow status flags—must remain scoped to departmental admin/HR use only."},"IHealthcarePlatformDepartmentHead.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Business email (must be unique in department head table). Used as login identity and for business communication; should be an eligible domain per policy. Required."},"full_name":{"type":"string","description":"Full legal name of the department head as recorded in HR and assignment logs. Required."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional contact phone number for onboarding/alerts. May be omitted, empty, or null."}},"required":["email","full_name"],"description":"Payload to create/onboard a department head. Accepts business email, full name (required) and optional phone."},"IHealthcarePlatformDepartmentHead.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"New business email for department head (must remain unique if set). Used for email change workflows."},"full_name":{"type":"string","description":"New full legal name. Used for HR/record correction or credentialing changes."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated contact phone number, or explicit null to remove/reset."}},"required":[],"description":"Updates allowed for an existing department head (all fields optional). Supports partial correction/refactoring."},"IHealthcarePlatformMedicalDoctor.IRequest":{"type":"object","properties":{"email":{"type":"string","description":"Partial or full email address for search (case-insensitive, GIN-searchable)."},"full_name":{"type":"string","description":"Partial or full legal name for search."},"npi_number":{"type":"string","description":"NPI number to search exact doctor credential."},"specialty":{"type":"string","description":"Specialty (exact or substring)."},"created_at_from":{"type":"string","format":"date-time","description":"Search filter for created_at date range (ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Search filter for created_at date range (ISO 8601)."},"active_only":{"type":"boolean","description":"Only include doctors NOT soft-deleted (NULL deleted_at) if true."},"page":{"type":"integer","description":"Page number (starting at 1)."},"limit":{"type":"integer","description":"Page size (max 100)."},"order_by":{"oneOf":[{"const":"email","description":"Field to sort by."},{"const":"full_name","description":"Field to sort by."},{"const":"created_at","description":"Field to sort by."},{"const":"npi_number","description":"Field to sort by."},{"const":"specialty","description":"Field to sort by."}],"description":"Field to sort by."},"order_direction":{"oneOf":[{"const":"asc","description":"Sort order."},{"const":"desc","description":"Sort order."}],"description":"Sort order."}},"required":[],"description":"Search, pagination, and filtering parameters for listing doctors."},"IHealthcarePlatformMedicalDoctor":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the medical doctor account (uuid primary key)."},"email":{"type":"string","format":"email","description":"Business email address for system login and clinical communication; must be unique."},"full_name":{"type":"string","description":"Legal full name as registered for licensure and clinical privilege; used for compliance and display."},"npi_number":{"type":"string","description":"National Provider Identifier (NPI) number for professional credential verification; must be unique."},"specialty":{"oneOf":[{"type":"string","description":"Clinical specialty (e.g., Cardiology, Pediatrics); optional for initial registration."},{"type":"null"}],"description":"Clinical specialty (e.g., Cardiology, Pediatrics); optional for initial registration."},"phone":{"oneOf":[{"type":"string","description":"Contact phone number for notifications and emergency alerts (E.164 format if international phone); optional."},{"type":"null"}],"description":"Contact phone number for notifications and emergency alerts (E.164 format if international phone); optional."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of account creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to doctor record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp; null unless this account is archived/inactive."},{"type":"null"}],"description":"Soft deletion timestamp; null unless this account is archived/inactive."}},"required":["id","email","full_name","npi_number","created_at","updated_at"],"description":"Represents a licensed medical doctor account in the healthcarePlatform system as described by the Prisma schema. Includes all core identity, licensure, and compliance tracking fields. Used for provider assignment, credential verification, and regulatory audit."},"IHealthcarePlatformMedicalDoctor.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Business email address for system login and clinical communication (must be unique)."},"full_name":{"type":"string","description":"Legal full name as registered for licensure and clinical privilege."},"npi_number":{"type":"string","description":"National Provider Identifier (NPI) number; uniquely verified for credentialing."},"specialty":{"oneOf":[{"type":"string","description":"Clinical specialty (optional)."},{"type":"null"}],"description":"Clinical specialty (optional)."},"phone":{"oneOf":[{"type":"string","description":"Business phone number for notifications (optional)."},{"type":"null"}],"description":"Business phone number for notifications (optional)."}},"required":["email","full_name","npi_number"],"description":"DTO required for creating a medical doctor account in the platform (for onboarding/registration). Excludes system fields."},"IHealthcarePlatformMedicalDoctor.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Business email address; updatable if organization policy permits (must not collide with existing doc email)."},"full_name":{"type":"string","description":"Full name, as used for display or compliance adjustment."},"specialty":{"oneOf":[{"type":"string","description":"Clinical specialty (optional, for updating)."},{"type":"null"}],"description":"Clinical specialty (optional, for updating)."},"phone":{"oneOf":[{"type":"string","description":"Business phone for notifications (optional)."},{"type":"null"}],"description":"Business phone for notifications (optional)."}},"required":[],"description":"DTO allowed for updating medical doctor profile information. Modifies updatable fields only."},"IHealthcarePlatformNurse":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the nurse. Universally unique identifier (UUID). Set by the system on creation. Used for PK in database and for RBAC, audit, and lookup."},"email":{"type":"string","format":"email","description":"Business email for login and notifications, must be globally unique and use a business domain (not public email like @gmail.com). Used for authentication and contact."},"full_name":{"type":"string","description":"Full legal name of the nurse as used for licensure, documentation, and identity. Must match credentials. Used for display and legal compliance."},"license_number":{"type":"string","description":"State-issued nurse license/certification number, unique for each nurse in compliance/audit workflows. Required for employment, credential check, and regulatory compliance."},"specialty":{"type":"string","description":"Primary specialty of nursing practice (optional), e.g., ICU, Med/Surg, Pediatrics. Used for search, scheduling, and workforce management."},"phone":{"type":"string","description":"Business/organization or personal phone for shift, security, and platform notifications. Optional."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when nurse account was created. Set by the platform system for audit/compliance."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) of last update to this nurse record. Used for change tracking and audit."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion/archival tracking, records when the nurse was deactivated/logically deleted (ISO date-time), or null if still active. This field is used for audit/compliance; when set, the nurse is logically deleted but still present in the system until regulatory retention requirements are met."},{"type":"null","description":"Indicates that the nurse record is currently active, not deleted or archived."}],"description":"Soft deletion/archival tracking, records when the nurse was deactivated/logically deleted (ISO date-time), or null if still active. This field is used for audit/compliance; when set, the nurse is logically deleted but still present in the system until regulatory retention requirements are met."}},"required":["id","email","full_name","license_number","created_at","updated_at"],"description":"Nurse core profile, credential, and account metadata as stored in the healthcare platform. Fields precisely match the healthcare_platform_nurses schema/table and are used for authentication, display, scheduling, audit, and compliance. Personal health and employment-related data are excluded from this type; use for admins, HR, clinical apps, or audits only."},"IHealthcarePlatformNurse.IRequest":{"type":"object","properties":{"full_name":{"type":"string","description":"Partial/full name search filter for nurses."},"email":{"type":"string","description":"Filter for nurse email address (case-insensitive partial match supported)."},"license_number":{"type":"string","description":"Search by nurse license number."},"specialty":{"type":"string","description":"Search by nurse specialty."},"status":{"type":"string","description":"Filter by nurse account, employment or credentialing status."}},"required":[],"description":"Advanced search/filter parameters for nurse list endpoints. Used in PATCH and similar query API methods. Supports pagination and sorting via parent IPage schema."},"IHealthcarePlatformNurse.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Business email for login and notifications, must be globally unique. Used for authentication and contact."},"full_name":{"type":"string","description":"Full legal name of the nurse as used for licensure, documentation, and identity."},"license_number":{"type":"string","description":"State-issued nurse license/certification number, unique for each nurse in compliance/audit workflows."},"specialty":{"oneOf":[{"type":"string","description":"Primary clinical specialty area (optional) (e.g., ICU, Pediatrics, etc)."},{"type":"null"}],"description":"Primary clinical specialty area (optional) (e.g., ICU, Pediatrics, etc)."},"phone":{"oneOf":[{"type":"string","description":"Business phone or personal number for shift notifications and alerts."},{"type":"null"}],"description":"Business phone or personal number for shift notifications and alerts."}},"required":["email","full_name","license_number"],"description":"Payload for creating a nurse account (on registration/join). Only required user identity and credential fields are accepted. No ID, timestamps, or managed audit fields."},"IHealthcarePlatformNurse.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Business email for notifications and login (must remain unique if changed)."},"full_name":{"type":"string","description":"Legal name (for updates due to marriage or legal adjustment)."},"license_number":{"type":"string","description":"State-issued nurse credential/licensure number (may change if re-licensed)."},"specialty":{"oneOf":[{"type":"string","description":"Primary specialty updated (optional)."},{"type":"null"}],"description":"Primary specialty updated (optional)."},"phone":{"oneOf":[{"type":"string","description":"Updated business or personal phone for notifications."},{"type":"null"}],"description":"Updated business or personal phone for notifications."}},"required":[],"description":"Payload for partial update of an existing nurse profile. All fields optional. Only non-managed fields may be updated."},"IHealthcarePlatformTechnician.IRequest":{"type":"object","properties":{"email":{"type":"string","description":"Business email used for technician login and notifications. Used for filtering."},"full_name":{"type":"string","description":"Full legal name of technician. Used for search/filter."},"license_number":{"type":"string","description":"Technical license or certification number."},"specialty":{"type":"string","description":"Search by technical specialty (lab, imaging, etc)."},"status":{"type":"string","description":"Find by account status/flag."}},"required":[],"description":"Filter/search entity for technician listing, used in pagination/search API endpoints."},"IHealthcarePlatformTechnician":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this technician (UUID primary key)."},"email":{"type":"string","description":"Organization-issued business email. Used for login, communication, and identification. Must be unique among technicians."},"full_name":{"type":"string","description":"Full legal name of the technician for credential, HR, and display."},"license_number":{"type":"string","description":"Professional license or registration number. Unique for credential verification and audit. Used for regulatory compliance."},"specialty":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Area of technical expertise. For example, 'Radiology', 'Lab', etc. Optional for generic techs - nullable if not specified."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Organization/HR contact or work phone. Used for scheduling, notification, or emergency contact. Optional."},"created_at":{"type":"string","format":"date-time","description":"Account/record creation timestamp as ISO 8601 date-time string."},"updated_at":{"type":"string","format":"date-time","description":"Date/time (ISO 8601) of last modification, for audit and concurrency."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete/archive marker. Non-null if deactivated/archived. Nullable."}},"required":["id","email","full_name","license_number","created_at","updated_at"],"description":"Represents a technician staff member, typically technical/diagnostic staff such as radiology or lab technicians. Fields correspond directly to those found in the healthcare_platform_technicians Prisma schema. Contains business identity and HR/credential metadata, audit timestamps, and organization communication fields."},"IHealthcarePlatformTechnician.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Business email address used for login, notification, and audit. Must be unique."},"full_name":{"type":"string","description":"Legal full name of the technician per organizational personnel policies."},"license_number":{"type":"string","description":"Official technical/professional license number for compliance, audit, and identity."},"specialty":{"oneOf":[{"type":"string","description":"Technician's technical specialty (e.g. Radiology, Phlebotomy). Optional."},{"type":"null"}],"description":"Technician's technical specialty (e.g. Radiology, Phlebotomy). Optional."},"phone":{"oneOf":[{"type":"string","description":"(Optional) Contact phone for scheduling, shift, and compliance notifications."},{"type":"null"}],"description":"(Optional) Contact phone for scheduling, shift, and compliance notifications."}},"required":["email","full_name","license_number"],"description":"Technician user creation (registration/onboarding) payload."},"IHealthcarePlatformTechnician.IUpdate":{"type":"object","properties":{"full_name":{"type":"string","description":"Updates the full legal name of the technician."},"specialty":{"oneOf":[{"type":"string","description":"Updates the technical specialty for the technician (if any)."},{"type":"null"}],"description":"Updates the technical specialty for the technician (if any)."},"phone":{"oneOf":[{"type":"string","description":"Updates the technician's business/personal phone number."},{"type":"null"}],"description":"Updates the technician's business/personal phone number."}},"required":[],"description":"Payload for updating a technician's user profile information."},"IHealthcarePlatformReceptionist.IRequest":{"type":"object","description":"Advanced request schema for searching, filtering, and paginating receptionist user accounts. Used for receptionist list or staff audit flows. All fields optional/safe for UI or automated query.","properties":{"email":{"type":"string","description":"Receptionist email (string email filter, supports substring/partial match)."},"full_name":{"type":"string","description":"Full legal name substring for receptionist search."},"created_at_from":{"type":"string","format":"date-time","description":"Minimum creation date for receptionist listing."},"created_at_to":{"type":"string","format":"date-time","description":"Maximum creation date for receptionist listing."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Include/deleted status flag for receptionist listing (null=active, else deleted)."},"page":{"type":"integer","minimum":1,"description":"Paginated page number."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Number of records per page (default organization setting)."},"sortBy":{"type":"string","description":"Sort field name (e.g., email, full_name, created_at)."},"sortDir":{"oneOf":[{"const":"asc"},{"const":"desc"}],"description":"Sort order: asc or desc."}},"required":[]},"IHealthcarePlatformReceptionist":{"type":"object","description":"Entity schema for a receptionist user account in the healthcare platform. Represents non-clinical staff responsible for scheduling, check-in/out, and administration. Fields include email, name, contact, and soft-deletion status. Used in user profile, authentication, and admin APIs.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the receptionist (primary key)."},"email":{"type":"string","format":"email","description":"Receptionist's business email; primary login credential. Must be unique and is required for all operations."},"full_name":{"type":"string","description":"Receptionist's full legal name as defined in the schema."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Receptionist's business or organizational phone number (nullable)."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when the receptionist account was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp for the most recent modification to this account."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null if active; set to ISO8601 timestamp if logically deleted for compliance/audit."}},"required":["id","email","full_name","created_at","updated_at"]},"IHealthcarePlatformReceptionist.IUpdate":{"type":"object","description":"Schema for updating receptionist user data (profile fields). Only updatable fields are included. All fields optional for partial update; at least one field is required in a valid update request.","properties":{"full_name":{"type":"string","description":"New full legal name for the receptionist, if being updated."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated business or organizational contact phone number (nullable)."}},"required":[]},"IHealthcarePlatformPatient.IRequest":{"type":"object","description":"Request schema for searching, filtering, and paginating patient user accounts. Used for admin, clinical, and compliance workflows for patient roster management. Permits multi-field queries including demographics. All fields optional. May be used for reporting, onboarding, and compliance dashboards.","properties":{"email":{"type":"string","description":"Patient's email address (unique per patient). Optional filter."},"full_name":{"type":"string","description":"Full legal name of patient (for search; allows partial/substring match)."},"date_of_birth_from":{"type":"string","format":"date","description":"Optional inclusive lower bound for date_of_birth (YYYY-MM-DD)."},"date_of_birth_to":{"type":"string","format":"date","description":"Optional inclusive upper bound for date_of_birth (YYYY-MM-DD)."},"created_at_from":{"type":"string","format":"date-time","description":"Optional inclusive lower bound for created_at (ISO8601 date-time)."},"created_at_to":{"type":"string","format":"date-time","description":"Optional inclusive upper bound for created_at (ISO8601 date-time)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter for soft-deleted records based on deleted_at timestamp. Use null to query active users only."},"page":{"type":"integer","minimum":1,"description":"Page number (1-based indexing) for paginated patient search results."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Number of records per page (pagination limit). Optional; subject to system constraints."},"sortBy":{"type":"string","description":"Field for sorting results (e.g., 'created_at', 'full_name', 'date_of_birth')."},"sortDir":{"oneOf":[{"const":"asc","description":"Sort direction: ascending ('asc') or descending ('desc')."},{"const":"desc","description":"Sort direction: ascending ('asc') or descending ('desc')."}],"description":"Sort direction: ascending ('asc') or descending ('desc')."}},"required":[]},"IHealthcarePlatformPatient":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the patient user in the system. Primary key for linking all patient-specific data, appointments, records, and account settings."},"email":{"type":"string","format":"email","description":"The patient's unique email address. Must be used for login/portal authentication and all system notifications. Uniqueness is enforced across all patients. Uses business or personal domains as permitted by policy."},"full_name":{"type":"string","description":"Legal full name of the patient as recorded during registration or identity verification. Used for official records, compliance, and matching with insurance/clinical data."},"date_of_birth":{"type":"string","format":"date-time","description":"Date and time of birth for patient, in ISO 8601 format. Used for identity verification, clinical calculation, and regulatory compliance. Format example: '1979-05-10T00:00:00Z'."},"phone":{"oneOf":[{"type":"string","description":"Primary contact number for notifications and patient communication. Must match business/clinical communication policies. Optional for registration if not required by org."},{"type":"null"}],"description":"Primary contact number for notifications and patient communication. Must match business/clinical communication policies. Optional for registration if not required by org."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the patient account was created. Populated automatically by the system. ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the patient account profile was last updated. Used for audit, compliance, and data synchronization. ISO 8601 format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable soft-deletion marker for account closure or regulatory data lifecycle operations. Records the date/time the patient account was flagged deleted. Always null for active accounts."}},"required":["id","email","full_name","date_of_birth","created_at","updated_at"],"description":"Represents a patient/consumer account in the healthcarePlatform system. Each patient record captures core identity attributes, contact details, compliance timestamps, and soft-deletion status for full regulatory traceability. Used for onboarding, authentication, appointment booking, medical record management, billing, and consent workflows. All fields use normalized medical record/documentation conventions. For patient registration, see the IHealthcarePlatformPatient.ICreate and update via IHealthcarePlatformPatient.IUpdate."},"IHealthcarePlatformPatient.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Patient's unique email address for initial registration and notifications. Business or personal domain permitted as per policy. MUST NOT duplicate existing patient emails in the system."},"full_name":{"type":"string","description":"Patient's legal full name as declared. Used for patient identity and insurance/legal purposes."},"date_of_birth":{"type":"string","format":"date-time","description":"Date of birth (ISO 8601 date/time) for patient identification and clinical safety calculations. Example: '1990-02-15T00:00:00Z'."},"phone":{"oneOf":[{"type":"string","description":"Primary contact number for communication and notification. Must match organization's communication requirements."},{"type":"null"}],"description":"Primary contact number for communication and notification. Must match organization's communication requirements. Optional depending on org business process."}},"required":["email","full_name","date_of_birth"],"description":"Request body for patient user registration. Must supply all fields required by onboarding policy. On registration, creates a new patient user login and initializes records and notification preferences. Phone is optional and may be required by policy. On success, returns the created IHealthcarePlatformPatient object."},"IHealthcarePlatformPatient.IUpdate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Updated patient email address. Must remain unique among all patients. Only included if the patient is changing email."},"full_name":{"type":"string","description":"Updated legal full name of the patient, if changed for legal or personal reasons."},"date_of_birth":{"type":"string","format":"date-time","description":"Updated date of birth (ISO 8601). Typically only changed after formal correction procedures."},"phone":{"oneOf":[{"type":"string","description":"New or updated contact phone number for communication."},{"type":"null"}],"description":"New or updated contact phone number."}},"required":[],"description":"Payload for partial or full update of a patient profile. Only supply fields to be updated. All business rules and uniqueness constraints apply to supplied values."},"IHealthcarePlatformUserAuthentication.IRequest":{"type":"object","properties":{"user_type":{"type":"string","description":"String identifier indicating user entity type (e.g., 'systemAdmin', 'organizationAdmin', 'medicalDoctor', etc.) for filtered authentication record retrieval."},"provider":{"type":"string","description":"Authentication provider type. Values may include 'local', 'saml', 'oauth2', 'ad', etc."},"provider_key":{"type":"string","description":"Unique key value for filtering by authentication provider user/session key (opaque string or subject identifier for SSO/federated logins)."},"created_after":{"type":"string","format":"date-time","description":"Return authentication records created after this ISO 8601 timestamp."},"created_before":{"type":"string","format":"date-time","description":"Return authentication records created before this ISO 8601 timestamp."},"page":{"type":"integer","description":"Result page number, default is 1. Used for pagination."},"page_size":{"type":"integer","description":"Number of results per page for pagination. Default is 50."},"sort":{"type":"string","description":"Sort field for authentication record search results. Accepts column name and direction (e.g., 'created_at:asc', 'provider:desc')."}},"required":[],"description":"Payload for advanced search/filtering/pagination of user authentication records. Used by administrators/staff to retrieve user/provider authentication credential records by provider, user type, creation time, sorting, or page controls."},"IHealthcarePlatformUserAuthentication":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the user authentication record. References the authentication credential row in the system."},"user_id":{"type":"string","format":"uuid","description":"UUID of the user this authentication record belongs to. Cross-table reference (systemadmin/orgadmin/etc)."},"user_type":{"type":"string","description":"Type of user/actor this authentication record is associated with (e.g., 'systemadmin', 'organizationadmin', 'medicaldoctor')."},"provider":{"type":"string","description":"Authentication provider (e.g., 'local', 'saml', 'oauth2', 'ad'). Indicates login mechanism this record supports."},"provider_key":{"type":"string","description":"Provider-specific user or session key (such as SSO subject, user_id, or external service subject identifier)."},"password_hash":{"oneOf":[{"type":"string","description":"(Optional) Bcrypt hash for local credential authentication. Not set for SSO providers."},{"type":"null"}],"description":"(Optional) Bcrypt hash for local authentication. Not set for SSO providers."},"last_authenticated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of the last successful authentication using this record."},{"type":"null"}],"description":"Timestamp of last successful authentication with this record. May be null if never authenticated."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when the authentication record was created (audit trail & compliance)."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp when authentication record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO8601 timestamp when authentication record was soft-deleted; null if still active."},{"type":"null"}],"description":"Timestamp of soft deletion (nullable). Null means record is active."}},"required":["id","user_id","user_type","provider","provider_key","created_at","updated_at"],"description":"User authentication credential record for the healthcare platform. Stores provider info, credential hashes (if any), last authenticated timestamp, and audit timestamps. Used for login, SSO, and federated authentication records, referenced by actor/user entities (systemadmin, orgadmin, doctor, etc.)."},"IHealthcarePlatformUserAuthentication.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"UUID of the user this authentication record will be associated with (must match actor table/role)."},"user_type":{"type":"string","description":"Type of actor/user for authentication (e.g., 'systemadmin', 'departmentHead', etc.)"},"provider":{"type":"string","description":"Provider type for this authentication record (e.g., 'local', 'saml', 'oauth2', 'ad')."},"provider_key":{"type":"string","description":"Provider-specific user/session key (e.g., SSO subject, username, or external ID)."},"password_hash":{"oneOf":[{"type":"string","description":"(Optional) Hash of the local password credential, if using local authentication."},{"type":"null"}],"description":"(Optional) Credential hash for local (bcrypt or compatible). Omit or set null for SSO providers."}},"required":["user_id","user_type","provider","provider_key"],"description":"Request body for creating a new user authentication credential record. Required for onboarding new users, adding authentication methods, or federated provider integration."},"IHealthcarePlatformUserAuthentication.IUpdate":{"type":"object","properties":{"provider":{"type":"string","description":"(Optional) Updated provider for this authentication record."},"provider_key":{"type":"string","description":"(Optional) Updated provider-specific key for authentication."},"password_hash":{"oneOf":[{"type":"string","description":"(Optional) New hash value for local credential."},{"type":"null"}],"description":"(Optional) New hash value to rotate or reset the local credential."},"last_authenticated_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp of last successful authentication using this record."},{"type":"null"}],"description":"(Optional) Set or clear the last authenticated time."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp of update event (to be set to now on update)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"ISO8601 timestamp for soft delete."},{"type":"null"}],"description":"(Optional) Timestamp for soft-delete of record (null for active)."}},"required":[],"description":"Request body for updating an existing user authentication credential record. Used for credential rotation, provider or key update, toggling or tracking authentication state, and soft deletion."},"IHealthcarePlatformAuthSession.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Search for authentication sessions belonging to this user (optional)."},"user_type":{"type":"string","description":"Type of user/actor (e.g., 'systemadmin', 'organizationadmin', etc.)"},"session_token":{"type":"string","description":"Session token for the authentication session (JWT or opaque string)."},"refresh_token":{"oneOf":[{"type":"string","description":"Refresh token assigned to the session."},{"type":"null"}],"description":"(Optional) Refresh token for session extension/rotation."},"issued_at_from":{"type":"string","format":"date-time","description":"Start of time window filter for session creation."},"issued_at_to":{"type":"string","format":"date-time","description":"End of time window filter for session creation."},"expires_at_from":{"type":"string","format":"date-time","description":"Start of session expiration window (filter)."},"expires_at_to":{"type":"string","format":"date-time","description":"End of session expiration window (filter)."},"revoked_at_from":{"type":"string","format":"date-time","description":"Start time for revoked session filter window."},"revoked_at_to":{"type":"string","format":"date-time","description":"End time for revoked session filter window."},"user_agent":{"type":"string","description":"(Optional) Filter by user agent string (browser/device info)."},"ip_address":{"type":"string","description":"(Optional) Filter by IP address associated with the session."},"page":{"type":"integer","description":"Requested page number (for pagination, starts at 1)."},"limit":{"type":"integer","description":"Number of results per page for paginated search."},"sort":{"type":"string","description":"Sorting expression for results (e.g., '-created_at', 'expires_at ASC')."}},"required":[],"description":"Request body for searching authentication session records (audit, compliance, and session management). Supports advanced filtering and paging options for active, expired, or revoked user sessions."},"IHealthcarePlatformAuthSession":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Session record unique identifier (UUID)."},"user_id":{"type":"string","format":"uuid","description":"Reference to the unique user record (UUID)."},"user_type":{"type":"string","description":"Discriminator for user type (systemadmin, orgadmin, doctor, etc)."},"session_token":{"type":"string","description":"Opaque session token or JWT."},"refresh_token":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Refresh token for session extension; null for some SSO providers."},"issued_at":{"type":"string","format":"date-time","description":"Timestamp for session creation (ISO8601)."},"expires_at":{"type":"string","format":"date-time","description":"Timestamp for session expiration (ISO8601)."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If present, time when session was revoked, otherwise null."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User agent or device fingerprint at session initiation."},"ip_address":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address logged for this session."}},"required":["id","user_id","user_type","session_token","issued_at","expires_at"],"description":"Represents an authentication session (JWT or access token lifecycle) for a user. Used for login, refresh, and session record viewing. Based on the healthcare_platform_auth_sessions table."},"IHealthcarePlatformUserMfaFactor.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Search by user UUID."},"user_type":{"type":"string","description":"Type of user/actor row (systemadmin, orgadmin, etc)."},"factor_type":{"type":"string","description":"Type of MFA factor (totp, sms, email, webauthn, backup)."},"is_active":{"type":"boolean","description":"Whether the MFA factor is currently enabled."},"created_at_from":{"type":"string","format":"date-time","description":"Restrict query to MFA factors created after this time."},"created_at_to":{"type":"string","format":"date-time","description":"Restrict query to MFA factors created before this time."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination, 1-indexed."},"limit":{"type":"integer","minimum":1,"description":"Number of results per page."},"sort":{"type":"string","description":"Sort field/direction (e.g. 'created_at:desc')."}},"required":[],"description":"Query parameters for listing/searching MFA factors for users. Optional fields are for flexible filtering and pagination. Used in admin portals and audit views."},"IHealthcarePlatformUserMfaFactor":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique MFA factor record identifier"},"user_id":{"type":"string","format":"uuid","description":"User to whom this MFA factor belongs"},"user_type":{"type":"string","description":"User type for MFA mapping (systemadmin, orgadmin, etc)."},"factor_type":{"type":"string","description":"Type of MFA factor (totp, sms, email, webauthn, backup)."},"factor_value":{"type":"string","description":"Encoded/hashed value or configuration for the MFA factor."},"priority":{"type":"integer","description":"Sort order/priority (lower = primary)."},"is_active":{"type":"boolean","description":"Whether the MFA factor is enabled or not."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO8601)."}},"required":["id","user_id","user_type","factor_type","factor_value","priority","is_active","created_at","updated_at"],"description":"Represents a multi-factor authentication (MFA) factor for a user - such as TOTP app, SMS, email, etc. Based on healthcare_platform_user_mfa_factors table."},"IHealthcarePlatformUserMfaFactor.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"User to whom this MFA factor will be assigned."},"user_type":{"type":"string","description":"User/actor type for MFA context (systemadmin, orgadmin, etc.)."},"factor_type":{"type":"string","description":"Type of MFA factor, must be one of supported system values (e.g., totp, sms, email, webauthn, backup)."},"factor_value":{"type":"string","description":"MFA secret, hash, or registration detail (encoded/encrypted as per factor type)."},"priority":{"type":"integer","description":"Sort order for MFA challenge; 0=primary."},"is_active":{"type":"boolean","description":"Whether MFA is enabled upon creation."}},"required":["user_id","user_type","factor_type","factor_value","priority","is_active"],"description":"Payload for creating a new multi-factor authentication (MFA) factor for a user. Used by admin and onboarding APIs."},"IHealthcarePlatformUserMfaFactor.IUpdate":{"type":"object","properties":{"factor_type":{"type":"string","description":"Type of MFA factor (e.g., totp, sms, email, webauthn, backup). Optional update."},"factor_value":{"type":"string","description":"Encoded value or key for MFA factor. Optional update."},"priority":{"type":"integer","description":"Sort priority/order for MFA challenge (lower is higher priority). Optional update."},"is_active":{"type":"boolean","description":"Indicate if this factor is enabled for challenge. Optional update."},"updated_at":{"type":"string","format":"date-time","description":"Last modification time (ISO8601). Optional, system generated."}},"required":[],"description":"Update fields for a user MFA factor (healthcare_platform_user_mfa_factors).\n\nAllows partial changes to type, value, priority, activation, or audit fields; other properties immutable."},"IHealthcarePlatformUserCredential.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"ID of the actor/user."},"user_type":{"type":"string","description":"Table/type discriminator for user/actor type (systemadmin, orgadmin, etc)."},"credential_type":{"type":"string","description":"Type of credential (password, sso, certificate, webauthn, etc)."},"archived_at_from":{"type":"string","format":"date-time","description":"Filter: archived at or after this time (ISO8601)."},"archived_at_to":{"type":"string","format":"date-time","description":"Filter: archived before this time (ISO8601)."},"created_at_from":{"type":"string","format":"date-time","description":"Search: created after this time (ISO8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Search: created before this time (ISO8601)."},"page":{"type":"integer","description":"Results page number (1-based indexing)."},"pageSize":{"type":"integer","description":"Number of results per page."}},"required":[],"description":"Search request for archived user credential records, supporting filtering by user, type, dates, and pagination."},"IHealthcarePlatformUserCredential":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the user credential record."},"user_id":{"type":"string","format":"uuid","description":"The associated user record for these credentials (any actor type)."},"user_type":{"type":"string","description":"User table/type discriminator for credentials (systemadmin, orgadmin, etc)."},"credential_type":{"type":"string","description":"Type of credential archived (password, sso, certificate, webauthn, etc)."},"credential_hash":{"type":"string","description":"Hash or encoded credential value (historical, not active)."},"archived_at":{"type":"string","format":"date-time","description":"Time when credential became inactive or was rotated (ISO8601)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp credential was first active (ISO8601)."}},"required":["id","user_id","user_type","credential_type","credential_hash","archived_at","created_at"],"description":"Archived user credential record (healthcare_platform_user_credentials), used for audit/rollback/security."},"IHealthcarePlatformUserCredential.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"User record ID this credential is for (required)."},"user_type":{"type":"string","description":"Type of user/actor associated with this credential (required)."},"credential_type":{"type":"string","description":"Credential type being archived (required)."},"credential_hash":{"type":"string","description":"Credential value (hashed, never cleartext)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this credential was issued (usually system-generated, ISO8601)."},"archived_at":{"type":"string","format":"date-time","description":"When credential became inactive or was rotated (system-generated, ISO8601)."}},"required":["user_id","user_type","credential_type","credential_hash","created_at","archived_at"],"description":"Create archived user authentication credential record for audit/rotation prevention. All fields required, hashes must be securely computed."},"IHealthcarePlatformUserCredential.IUpdate":{"type":"object","properties":{"credential_type":{"type":"string","description":"Type of credential archived (password, sso, certificate, webauthn, etc)."},"credential_hash":{"type":"string","description":"Hash or encoded credential value (historical, not active)."},"archived_at":{"type":"string","description":"Time when credential became inactive or was rotated.","format":"date-time"}},"required":[],"description":"Update contract for credential archive and metadata for user authentication events. Allows updates to non-immutable fields such as credential_type, archived_at."},"IHealthcarePlatformUserLicenseVerification.IRequest":{"type":"object","properties":{"user_id":{"type":"string","description":"Optional user ID for filtering verifications by user."},"user_type":{"type":"string","description":"Optional user type discriminator (medicaldoctor/nurse/technician)."},"license_number":{"type":"string","description":"Optional license number filter."},"license_type":{"type":"string","description":"Optional license type filter (medical, nurse, tech, etc)."},"verification_status":{"type":"string","description":"Optional verification status filter (valid/expired/suspended/pending)."},"last_verified_at_start":{"type":"string","description":"Last verification date (start)."},"last_verified_at_end":{"type":"string","description":"Last verification date (end)."},"organization_id":{"type":"string","description":"Organization ID filter."},"sort_order":{"type":"string","description":"Sort order (e.g., 'asc', 'desc')."},"page":{"type":"integer","description":"Page number for pagination."},"page_size":{"type":"integer","description":"Page size for pagination."}},"required":[],"description":"Request contract for searching and filtering user license verifications."},"IHealthcarePlatformUserLicenseVerification":{"type":"object","properties":{"id":{"type":"string","description":"UUID"},"user_id":{"type":"string","description":"The actor undergoing credential/license check (doctor/nurse/tech)."},"user_type":{"type":"string","description":"Discriminator for user/actor type (medicaldoctor/nurse/technician)."},"license_number":{"type":"string","description":"License or registration number being checked. Invariant per user."},"license_type":{"type":"string","description":"Type of license/credential (medical, nurse, tech, etc)."},"verification_status":{"type":"string","description":"Result of current/most recent check (valid/expired/suspended/pending)."},"last_verified_at":{"type":"string","description":"Last time verification was attempted/recorded (ISO 8601 timestamp)."},"suspend_reason":{"type":"string","description":"Reason for suspension or problem, if applicable."},"created_at":{"type":"string","description":"Record creation timestamp (ISO 8601)."},"updated_at":{"type":"string","description":"Last update timestamp (may include failure, renewal, or audit event)."}},"required":["id","user_id","user_type","license_number","license_type","verification_status","last_verified_at","created_at","updated_at"],"description":"Main entity for user license verification (doctor/nurse/technician)."},"IHealthcarePlatformPatientRecord.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","description":"Filter by organization ID (UUID)."},"department_id":{"type":"string","description":"Filter by department ID (UUID)."},"patient_user_id":{"type":"string","description":"Filter by patient user (UUID)."},"full_name":{"type":"string","description":"Partial/full patient name search."},"dob":{"type":"string","description":"Date of birth (search)."},"gender":{"type":"string","description":"Gender filter."},"status":{"type":"string","description":"Status filter (active/inactive/deceased/etc)."},"external_patient_number":{"type":"string","description":"Additional field: external patient number."},"demographics_contains":{"type":"string","description":"Demographic field filter (search within JSON fields)."},"created_at_start":{"type":"string","description":"Created at (start)."},"created_at_end":{"type":"string","description":"Created at (end)."},"updated_at_start":{"type":"string","description":"Updated at (start)."},"updated_at_end":{"type":"string","description":"Updated at (end)."},"include_deleted":{"type":"boolean","description":"Deleted (true/false) for including/excluding soft-deleted records."},"sort_order":{"type":"string","description":"Sort order (asc/desc by created_at, updated_at, etc)."},"page":{"type":"integer","description":"Page number for pagination."},"page_size":{"type":"integer","description":"Page size for pagination."}},"required":[],"description":"Request structure for searching/filtering patient records."},"IHealthcarePlatformPatientRecord":{"type":"object","description":"Full patient record entity as modeled in healthcare_platform_patient_records. Includes all metadata, organization/department references, PHI, and audit/soft-deletion fields. Used wherever full patient profile context is required.","properties":{"id":{"type":"string","description":"Patient Record Primary Key. String UUID as per Prisma schema."},"organization_id":{"type":"string","description":"The UUID of the organization that owns this patient record. Required for multi-tenant separation."},"department_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Department UUID if patient is assigned. Nullable."},"patient_user_id":{"type":"string","description":"Reference to the patient user's primary key (foreign key)."},"external_patient_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional external or legacy MRN/identifier for EMR migration."},"full_name":{"type":"string","description":"Patient's legal full name, as used for display and search."},"dob":{"type":"string","format":"date-time","description":"Date of birth, ISO 8601 format, required for regulatory compliance."},"gender":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Gender identity. Free text or null."},"status":{"type":"string","description":"Record status (active, inactive, deceased, transferred, etc). Used for regulatory workflows."},"demographics_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Extensible serialized JSON for additional demographic info (race, ethnicity, language, etc)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp patient record created (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp last updated (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete marker for archival (ISO 8601 timestamp or null)."}},"required":["id","organization_id","patient_user_id","full_name","dob","status","created_at","updated_at"]},"IHealthcarePlatformPatientRecord.ICreate":{"type":"object","description":"Schema for creating (POST) a new patient record. Contains all fields required at initial record creation by staff or admin. Audit fields like id/created_at are system-populated, not user-supplied.","properties":{"organization_id":{"type":"string","description":"Organization UUID for patient record registry (tenant isolation)."},"department_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Department UUID (nullable)."},"patient_user_id":{"type":"string","description":"Primary key / UUID for the patient user (must be existing user)."},"external_patient_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional external/legacy medical record number (MRN)."},"full_name":{"type":"string","description":"Legal full name required for patient registration."},"dob":{"type":"string","format":"date-time","description":"Patient date of birth (ISO 8601)."},"gender":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Gender identity as free string or null."},"status":{"type":"string","description":"Initial business status of the record (e.g., 'active', 'inactive')."},"demographics_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Extensible JSON string with additional demographic info. Optional."}},"required":["organization_id","patient_user_id","full_name","dob","status"]},"IHealthcarePlatformPatientRecord.IUpdate":{"type":"object","description":"Update schema for patient record entity (PUT/PATCH). Permits partial update of mutable profile/demographic fields but not organization linkage or primary key.","properties":{"department_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update department assignment (nullable)."},"external_patient_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update legacy/external MRN if required (can set to null)."},"full_name":{"type":"string","description":"Update full legal name of patient."},"dob":{"type":"string","format":"date-time","description":"Update patient birth date (ISO 8601)."},"gender":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update gender field (nullable)."},"status":{"type":"string","description":"Update patient record status."},"demographics_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update or clear serialized demographic JSON."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Set/clear soft delete marker (system archival)."}},"required":[]},"IHealthcarePlatformEhrEncounter.IRequest":{"type":"object","description":"Search, filter, or pagination arguments for EHR encounter index endpoint.\nAllows granular querying by type, provider, time, status, or notes.\nMay be used in PATCH/paged-lists for encounter browsing from patient/clinical UIs.","properties":{"encounter_type":{"type":"array","items":{"type":"string"},"description":"Filter list by allowed encounter type codes (e.g., 'office_visit', 'inpatient')."},"provider_user_ids":{"type":"array","items":{"type":"string"},"description":"Restrict results to encounters by specified provider(s) (UUID list)."},"encounter_start_at_from":{"type":"string","format":"date-time","description":"Filter for encounters starting at or after this date/time."},"encounter_start_at_to":{"type":"string","format":"date-time","description":"Filter for encounters before or at this date/time."},"status":{"type":"array","items":{"type":"string"},"description":"Limit to encounter statuses (planned, active, completed, etc)."},"notes_query":{"type":"string","description":"Full-text search in clinical notes/comments."},"page":{"type":"integer","description":"Page number for paginated lists (1-based)."},"limit":{"type":"integer","description":"Max result count per page."},"sort_by":{"type":"string","description":"Sort encounters by this field (start time, provider, etc)."},"sort_direction":{"type":"string","description":"Sort direction: 'asc' or 'desc'."}},"required":[]},"IHealthcarePlatformEhrEncounter":{"type":"object","description":"Represents a clinical or administrative event for a patient within the EHR system. Contains metadata and relationships for episode tracking, regulatory audit, and care assignment. See PatientRecords.EhrEncounters table in schema for full documentation.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the EHR encounter record."},"patient_record_id":{"type":"string","format":"uuid","description":"Foreign key to root patient record."},"provider_user_id":{"type":"string","format":"uuid","description":"Unique user ID for the provider assigned to this encounter."},"encounter_type":{"type":"string","description":"Describes the type of clinical encounter. Example: office_visit, inpatient_admission, telemedicine, emergency, etc."},"encounter_start_at":{"type":"string","format":"date-time","description":"Datetime (ISO 8601) when the encounter started."},"encounter_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime (ISO 8601) when the encounter ended (null if ongoing)."},"status":{"type":"string","description":"Business status of the encounter (planned, active, completed, cancelled, etc)."},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-form clinical notes for documentation. May be redacted for certain roles."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the encounter record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the encounter record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp (null if active)."}},"required":["id","patient_record_id","provider_user_id","encounter_type","encounter_start_at","status","created_at","updated_at"]},"IHealthcarePlatformEhrEncounter.ICreate":{"type":"object","description":"Payload to create a new EHR encounter for a patient. Used when opening a new clinical episode or administrative event. See PatientRecords.EhrEncounters table for field documentation and required values.","properties":{"patient_record_id":{"type":"string","format":"uuid","description":"Required. Patient record to link this encounter to."},"provider_user_id":{"type":"string","format":"uuid","description":"Required. User ID of the responsible provider for this encounter."},"encounter_type":{"type":"string","description":"Required. The encounter type (office_visit, admission, emergency, etc)."},"encounter_start_at":{"type":"string","format":"date-time","description":"Required. Date/time (ISO 8601) for the start of the encounter."},"encounter_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. End datetime of the encounter. null if ongoing or not applicable."},"status":{"type":"string","description":"Required. Business status of this encounter (planned, active, completed, etc)."},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Free-form clinical or operational notes for the encounter. Redacted as required by business rules."}},"required":["patient_record_id","provider_user_id","encounter_type","encounter_start_at","status"]},"IHealthcarePlatformEhrEncounter.IUpdate":{"type":"object","description":"Payload to update an existing EHR encounter. Used for amending status, documenting end datetime, updating notes, or changing encounter type as allowed by business policy. Only modifiable fields are included. See PatientRecords.EhrEncounters update semantics.","properties":{"encounter_type":{"type":"string","description":"If provided, updates the encounter_type for this encounter record."},"encounter_start_at":{"type":"string","format":"date-time","description":"If provided, sets a new start time (ISO 8601)."},"encounter_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional update for encounter end time (null or ISO 8601 date-time)."},"status":{"type":"string","description":"If supplied, updates the business status of the encounter."},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional: update/replace notes for this encounter. Null to clear notes field."}},"required":[]},"IHealthcarePlatformEhrVersion.IRequest":{"type":"object","description":"Filtering and pagination criteria for listing EHR encounter version records. Used to search for specific version events, review history, or audit amendment events across clinical episodes. See PatientRecords.EhrVersions and API docs.","properties":{"ehr_encounter_id":{"type":"string","format":"uuid","description":"Required. EHR encounter to filter version records for."},"submitted_by_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional. Restrict versions to those submitted by this user."},"version_number":{"oneOf":[{"type":"number","format":"int32"},{"type":"null"}],"description":"Optional. Filter for a specific version number in the sequence."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. Lower bound (inclusive) for version creation time."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. Upper bound (inclusive) for version creation time."},"reason_for_update":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Filter by reason for version update (correction, routine, regulatory, etc)."},"page":{"oneOf":[{"type":"number","format":"int32"},{"type":"null"}],"description":"Optional. Result page (for pagination)."},"limit":{"oneOf":[{"type":"number","format":"int32"},{"type":"null"}],"description":"Optional. Max records per page (pagination control)."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Sorting field for versions (e.g., created_at, version_number)."},"order":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Optional. Sort order direction ('asc','desc')."}},"required":["ehr_encounter_id"]},"IHealthcarePlatformEhrVersion":{"type":"object","description":"Snapshot representation of an EHR version for a healthcare encounter.\n\nEach EHR version captures point-in-time clinical and administrative data for regulatory audits and system change-tracking. This type reflects the full schema of the healthcare_platform_ehr_versions table (Prisma), with all core version control fields: id, parent encounter linkage, submitting user ID, version number, committed snapshot JSON, rationale for update, and creation timestamp.\n\nIntended to support audit, compliance, and rollback workflows, this schema is used in lists, detail, and comparison UI scenarios. Sensitive data is not included here—actual clinical content should be referenced in an isolated/secured payload location if necessary for compliance.\n\nDescriptions for all fields draw from database documentation, ensuring clarity for API implementers and integrators. All rules for English business documentation are followed.\n\n---\nEnsure only compliant, documented fields are exposed in this variant; do not add PHI or extended clinical content inline.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the EHR version record (UUID)."},"ehr_encounter_id":{"type":"string","format":"uuid","description":"ID of the parent EHR encounter (FK, Prisma)."},"submitted_by_user_id":{"type":"string","format":"uuid","description":"ID of the medical doctor submitting/committing this version."},"version_number":{"type":"integer","description":"Monotonic version number for this encounter."},"snapshot_json":{"type":"string","description":"Serialized JSON containing immutable EHR clinical state at this version. Actual PHI/clinical content is stored according to compliance isolation policy."},"reason_for_update":{"oneOf":[{"type":"string","description":"Short text/non-nullable string for the update rationale (correction, regular save, regulatory demand, etc.)."},{"type":"null"}],"description":"Short text/non-nullable string for the update rationale (correction, regular save, regulatory demand, etc.)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this version snapshot was created."}},"required":["id","ehr_encounter_id","submitted_by_user_id","version_number","snapshot_json","created_at"]},"IHealthcarePlatformRecordAmendment":{"type":"object","description":"Amendment record for patient clinical data in the healthcare platform.\n\nThis object is used to strictly document regulatory-compliant record amendments, corrections, or updates to patient data, as prescribed in the healthcare_platform_record_amendments schema in Prisma.\n\nAll actions are auditable, with structured information on the original and amended values, the submitting and reviewing users, approval status, type of amendment, rationale, and timestamps. This schema does not include actual PHI; rather, it references serializable JSON blobs for old/new state, in full compliance with data access and role isolation policy.\n\nAll field descriptions reflect the business and regulatory practice for maintaining an indelible amendment log, supporting regulatory, audit, and compliance review. English-only, multi-paragraph documentation ensures clarity and ensures all implementers follow business logic.\n\n---\nThis object is never used for direct business processing or as input for amend operations—always for output/audit-oriented APIs.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the record amendment row."},"patient_record_id":{"type":"string","format":"uuid","description":"Patient record this amendment was applied to (FK to healthcare_platform_patient_records)."},"submitted_by_user_id":{"type":"string","format":"uuid","description":"ID of user (e.g., nurse) that submitted the amendment request."},"reviewed_by_user_id":{"oneOf":[{"type":"string","format":"uuid","description":"User ID of the reviewer/approver, if present. FK to healthcare_platform_departmentheads."},{"type":"null"}],"description":"User ID of the reviewer/approver, if present. FK to healthcare_platform_departmentheads."},"ehr_encounter_id":{"oneOf":[{"type":"string","format":"uuid","description":"EHR encounter affected, if specific to a clinical event."},{"type":"null"}],"description":"EHR encounter affected, if specific to a clinical event."},"amendment_type":{"type":"string","description":"Type/category of the amendment (e.g., correction, patient_request, regulatory)."},"old_value_json":{"type":"string","description":"Serialized JSON of prior state/data for the amended field(s)."},"new_value_json":{"type":"string","description":"Serialized JSON of after-amendment state/data for the amended field(s)."},"rationale":{"type":"string","description":"Rationale, justification, or business context for the amendment event."},"approval_status":{"oneOf":[{"type":"string","description":"Approval workflow status (pending, approved, rejected, null if not applicable)."},{"type":"null"}],"description":"Approval workflow status (pending, approved, rejected, null if not applicable)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for amendment row creation."}},"required":["id","patient_record_id","submitted_by_user_id","amendment_type","old_value_json","new_value_json","rationale","created_at"]},"IHealthcarePlatformRecordAmendment.IRequest":{"type":"object","properties":{"amendment_type":{"type":"string","description":"Filter results to only amendments of a particular type (e.g., 'correction', 'patient_request', etc.). Optional."},"approval_status":{"type":"string","description":"Limit results to amendments of a specific approval status (pending, approved, rejected, etc.). Optional."},"created_from":{"type":"string","format":"date-time","description":"Earliest created_at timestamp for search/edit range (inclusive). Optional."},"created_to":{"type":"string","format":"date-time","description":"Latest created_at timestamp for editing/searching (inclusive). Optional."},"reviewed_by_user_id":{"type":"string","format":"uuid","description":"Filter results to those reviewed by a particular user; optional."},"page":{"type":"integer","minimum":0,"description":"Index (zero-based) of the requested page of results. Optional."},"limit":{"type":"integer","minimum":1,"description":"Maximum number of results per page. Optional."},"sort":{"type":"string","description":"Field to sort on (e.g., 'created_at', 'approval_status'). Optional."},"order":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' for ascending or 'desc' for descending. Optional."},{"const":"desc","description":"Sort direction: 'asc' for ascending or 'desc' for descending. Optional."}],"description":"Sort direction: 'asc' for ascending or 'desc' for descending. Optional."}},"required":[],"description":"Request/filter criteria for searching record amendments including amendment_type, approval_status, reviewer, creation time, and pagination/sorting."},"IHealthcarePlatformRecordAmendment.ICreate":{"type":"object","properties":{"patient_record_id":{"type":"string","format":"uuid","description":"UUID of the patient record being amended; required."},"submitted_by_user_id":{"type":"string","format":"uuid","description":"UUID of the submitting user (nurse, etc.), always required."},"reviewed_by_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of reviewer/approver user, if required by workflow; optional."},"ehr_encounter_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the EHR encounter or null if N/A."},"amendment_type":{"type":"string","description":"Amendment type (e.g., 'correction', 'patient_request', 'regulatory')."},"old_value_json":{"type":"string","description":"Prior value (JSON string) for audit."},"new_value_json":{"type":"string","description":"New value (JSON string) for compliance."},"rationale":{"type":"string","description":"Rationale/reason for the amendment; required."},"approval_status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Approval status at submission (may be omitted or null if not set at creation)."}},"required":["patient_record_id","submitted_by_user_id","amendment_type","old_value_json","new_value_json","rationale"],"description":"Request payload for creating a new patient record amendment, supporting regulatory audit, business workflow, and approval logic."},"IHealthcarePlatformRecordAmendment.IUpdate":{"type":"object","properties":{"amendment_type":{"type":"string","description":"Amendment type (correction, patient_request, regulatory, etc). Optional in update."},"old_value_json":{"type":"string","description":"Serialized prior value (JSON). Optional."},"new_value_json":{"type":"string","description":"Serialized new value (JSON). Optional"},"rationale":{"type":"string","description":"Clinical or business rationale for amendment. Optional."},"approval_status":{"type":"string","description":"Workflow approval status (pending, approved, rejected, or null). Optional."},"reviewed_by_user_id":{"type":"string","description":"UUID for reviewer/approver. Optional."},"ehr_encounter_id":{"type":"string","description":"UUID of targeted EHR encounter if applicable. Optional."}},"required":[],"description":"PATCH-style update schema for record amendments (corrections/approvals/etc). All fields optional; mapped from healthcare_platform_record_amendments."},"IHealthcarePlatformRecordAuditTrail.IRequest":{"type":"object","properties":{"patient_record_id":{"type":"string","description":"UUID for the patient record. Optional filter."},"actor_user_id":{"type":"string","description":"UUID of the user/actor. Optional filter."},"audit_action":{"type":"string","description":"Audit action filter: access, update, emergency_override, etc."},"created_from":{"type":"string","format":"date-time","description":"Start date-time (ISO 8601) for filtering creations."},"created_to":{"type":"string","format":"date-time","description":"End date-time (ISO 8601) for filtering creations."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number."},"limit":{"type":"integer","minimum":1,"description":"Pagination: page size."},"sort":{"type":"string","description":"Sort order (e.g., 'created_at DESC')."}},"required":[],"description":"Request parameters for paginated search/filter of audit trail entries for a patient record. Used in advanced audit/compliance review on healthcare_platform_record_audit_trails."},"IHealthcarePlatformRecordAuditTrail":{"type":"object","description":"Audit trail entry for clinical or patient record activity in the platform.\n\nThis object is the canonical output type for individual record access, update, deletion, lock, and override actions, reflecting the healthcare_platform_record_audit_trails table. Every event is append-only, ensuring full regulatory compliance for HIPAA and medical recordkeeping.\n\nAll field names and documentation strictly follow the database schema and business requirements, with full English documentation for clarity. PHI is NOT included in this schema; before/after JSON blobs are redacted or held under data minimization rules for compliance. This object is for audit review and not for input to create audit entries.\n\n---\nAll timestamps follow ISO 8601 date-time format. Business context and rationale fields are detailed to support downstream compliance and response workflows as required by your documentation policy.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for audit trail row (UUID)."},"patient_record_id":{"type":"string","format":"uuid","description":"ID of the patient record this event applies to."},"actor_user_id":{"type":"string","format":"uuid","description":"ID of the user or actor initiating the action; see provider assignment, medicalDoctor, or admin role as applicable."},"audit_action":{"type":"string","description":"Action type: create, update, delete, access, lock, unlock, emergency_access_override, etc."},"event_context_json":{"oneOf":[{"type":"string","description":"Optional JSON containing structured event context: device, user agent, or location metadata."},{"type":"null"}],"description":"Optional JSON containing structured event context: device, user agent, or location metadata."},"before_state_json":{"oneOf":[{"type":"string","description":"Serialized before-event entity state, if relevant (for update/delete events)."},{"type":"null"}],"description":"Serialized before-event entity state, if relevant (for update/delete events)."},"after_state_json":{"oneOf":[{"type":"string","description":"Serialized after-event entity state, if updated/applies to action."},{"type":"null"}],"description":"Serialized after-event entity state, if updated/applies to action."},"request_reason":{"oneOf":[{"type":"string","description":"Business or user-provided reason for the action."},{"type":"null"}],"description":"Business or user-provided reason for the action."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when the audit event was recorded."}},"required":["id","patient_record_id","actor_user_id","audit_action","created_at"]},"IHealthcarePlatformMedicalImage.IRequest":{"type":"object","properties":{"patient_record_id":{"type":"string","description":"UUID referencing patient record. Optional filter."},"ehr_encounter_id":{"type":"string","description":"UUID referencing EHR encounter. Optional filter."},"image_type":{"type":"string","description":"Image (file) type: DICOM, JPEG, PNG, etc. Optional filter."},"uploaded_by_user_id":{"type":"string","description":"UUID of image uploader (technician). Optional filter."},"created_from":{"type":"string","format":"date-time","description":"Filter by image creation date, start range (ISO 8601)."},"created_to":{"type":"string","format":"date-time","description":"Filter by image creation end date (ISO 8601)."},"sort":{"type":"string","description":"Sort order string (e.g., 'created_at DESC'). Optional."},"page":{"type":"integer","minimum":1,"description":"Page number (pagination). Optional."},"limit":{"type":"integer","minimum":1,"description":"Page size (pagination). Optional."}},"required":[],"description":"Paginated, filterable request type for searching medical images related to a patient record. Mapped from healthcare_platform_medical_images and supports role/department scoping."},"IHealthcarePlatformMedicalImage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the medical image record."},"ehr_encounter_id":{"type":"string","format":"uuid","description":"Parent EHR encounter to which the image is attached."},"uploaded_by_user_id":{"type":"string","format":"uuid","description":"ID of the technician who uploaded the image."},"image_type":{"type":"string","description":"Classification of the image (e.g., DICOM, JPEG, PNG)."},"image_uri":{"type":"string","description":"Permanent or presigned URI for the clinical image file."},"image_metadata_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Technical metadata (e.g., DICOM tags, study/series info)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when image record was created."}},"required":["id","ehr_encounter_id","uploaded_by_user_id","image_type","image_uri","created_at"],"description":"Full record schema for a clinical medical image. Returned by detailed operations."},"IHealthcarePlatformMedicalImage.ICreate":{"type":"object","properties":{"ehr_encounter_id":{"type":"string","format":"uuid","description":"UUID for the parent EHR encounter to which this image will be attached."},"uploaded_by_user_id":{"type":"string","format":"uuid","description":"UUID for the technician uploading the image."},"image_type":{"type":"string","description":"Type of image (e.g., 'DICOM', 'JPEG', 'PNG')."},"image_uri":{"type":"string","description":"Permanent/presigned URI of the uploaded image file."},"image_metadata_json":{"oneOf":[{"type":"string","description":"(Optional) Stringified metadata such as DICOM tags, acquisition parameters, or study/series information."},{"type":"null"}],"description":"(Optional) Stringified metadata such as DICOM tags, acquisition parameters, or study/series information."}},"required":["ehr_encounter_id","uploaded_by_user_id","image_type","image_uri"],"description":"Request payload schema for uploading and linking a new medical image to an EHR encounter. Used by technicians (or clinical staff) to persist newly acquired or imported clinical images. All fields except image_metadata_json are required. image_metadata_json is optional for extended technical metadata."},"IHealthcarePlatformMedicalImage.IUpdate":{"type":"object","properties":{"image_type":{"type":"string","description":"Type of image for classification/correction (e.g., 'DICOM', 'JPEG', etc.)."},"image_metadata_json":{"oneOf":[{"type":"string","description":"Updated stringified metadata such as DICOM tags, series, or encoding details."},{"type":"null"}],"description":"Updated stringified metadata such as DICOM tags, series, or encoding details."}},"required":[],"description":"Schema for patch/update of a medical image's metadata after the initial upload (not the file itself). All fields are optional. Used in workflows for technical correction, reclassification, or completion of missing metadata. Only metadata fields are editable; image_uri and uploader cannot be changed."},"IHealthcarePlatformLabResult.IRequest":{"type":"object","properties":{"ehr_encounter_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter: EHR encounter UUID to constrain results to a specific visit/event."},{"type":"null"}],"description":"Optional filter: EHR encounter UUID to constrain results to a specific visit/event."},"lab_integration_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional filter: Lab integration ID to filter results from a specific lab connector."},{"type":"null"}],"description":"Optional filter: Lab integration ID to filter results from a specific lab connector."},"test_name":{"oneOf":[{"type":"string","description":"Optional, test name filter (partial match) to narrow to specific test panels or markers."},{"type":"null"}],"description":"Optional, test name filter (partial match) to narrow to specific test panels or markers."},"result_flag":{"oneOf":[{"type":"string","description":"Optional, clinical flag status to show normal/abnormal/critical/corrected/etc."},{"type":"null"}],"description":"Optional, clinical flag status to show normal/abnormal/critical/corrected/etc."},"status":{"oneOf":[{"type":"string","description":"Optional, processing status (pending, completed, revised, cancelled, etc.)."},{"type":"null"}],"description":"Optional, processing status (pending, completed, revised, cancelled, etc.)."},"resulted_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional, lower bound (ISO 8601) for lab result time range search."},{"type":"null"}],"description":"Optional, lower bound (ISO 8601) for lab result time range search."},"resulted_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional, upper bound for when lab result was finalized."},{"type":"null"}],"description":"Optional, upper bound for when lab result was finalized."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time","description":"Optional, lower bound on creation timestamp for the import event."},{"type":"null"}],"description":"Optional, lower bound on creation timestamp for the import event."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time","description":"Optional, upper bound on creation timestamp."},{"type":"null"}],"description":"Optional, upper bound on creation timestamp."},"page":{"oneOf":[{"type":"integer","description":"Pagination, result page number (defaults to 1 if absent)."},{"type":"null"}],"description":"Pagination, result page number (defaults to 1 if absent)."},"pageSize":{"oneOf":[{"type":"integer","description":"Pagination, results per page (defaults to 20/100 by platform convention)."},{"type":"null"}],"description":"Pagination, results per page (defaults to 20/100 by platform convention)."},"sort":{"oneOf":[{"type":"string","description":"Sort order specifier, e.g., 'resulted_at desc', 'test_name asc'."},{"type":"null"}],"description":"Sort order specifier, e.g., 'resulted_at desc', 'test_name asc'."}},"required":[],"description":"Advanced search/filter schema for querying laboratory results. Used to support paginated, filtered, and sorted queries in EHR/lab reporting modules, clinical workflows, and compliance audit. All fields are optional, allowing flexible search across encounters, labs, time windows, and clinical/statistical flags."},"IHealthcarePlatformLabResult":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the lab result. Value is a UUID, used as the primary key for the record."},"ehr_encounter_id":{"type":"string","format":"uuid","description":"Reference to the specific EHR encounter to which this laboratory result belongs. Foreign key to the `healthcare_platform_ehr_encounters.id` column."},"lab_integration_id":{"type":"string","format":"uuid","description":"Reference to the laboratory integration configuration that provided this result. Foreign key to `healthcare_platform_lab_integrations.id`."},"test_name":{"type":"string","description":"Name of the specific laboratory test or panel performed (e.g., 'CBC', 'SARS-CoV-2 PCR', 'Lipid Panel')."},"test_result_value_json":{"type":"string","description":"Serialized JSON containing the raw result values (may include measurements, reference ranges, and reference codes). The structure depends on the panel/test."},"result_flag":{"type":"string","description":"Clinical interpretation flag for this result (e.g., 'normal', 'abnormal', 'critical', 'corrected'). Used for workflow, notification, and alerting."},"resulted_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when this result was officially resulted/reported into the system."},"status":{"type":"string","description":"Status of the lab result (e.g., 'pending', 'completed', 'revised', 'cancelled'). See business documentation for allowed status values."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the lab result record was created in the platform, for auditing and workflow."}},"required":["id","ehr_encounter_id","lab_integration_id","test_name","test_result_value_json","result_flag","resulted_at","status","created_at"],"description":"Lab result record representing the outcome of a diagnostic test or panel, as stored in the healthcare_platform_lab_results table. Contains full context for clinical workflow, audit, compliance, and analytics. All references to external entities (EHR encounter, lab integration) are defined as UUIDs."},"IHealthcarePlatformLabResult.ICreate":{"type":"object","properties":{"ehr_encounter_id":{"type":"string","format":"uuid","description":"Reference to the EHR encounter related to this result."},"lab_integration_id":{"type":"string","format":"uuid","description":"Reference to the laboratory integration."},"test_name":{"type":"string","description":"Name of the test or panel performed."},"test_result_value_json":{"type":"string","description":"Serialized JSON with the raw result values for this test instance."},"result_flag":{"type":"string","description":"Clinical interpretation of the result (e.g., 'normal', 'abnormal', 'critical', 'corrected')."},"resulted_at":{"type":"string","format":"date-time","description":"Date and time the result was officially entered or reported."},"status":{"type":"string","description":"Workflow status, e.g. 'pending', 'completed', 'revised', or 'cancelled'."}},"required":["ehr_encounter_id","lab_integration_id","test_name","test_result_value_json","result_flag","resulted_at","status"],"description":"Request body for creation of a laboratory result record, used in POST endpoints for diagnostic results. All fields except 'id' and 'created_at' are required from the client; these fields are generated by the system."},"IHealthcarePlatformLabResult.IUpdate":{"type":"object","properties":{"test_name":{"type":"string","description":"(Optional) Name of the test or panel. Use for correction if needed."},"test_result_value_json":{"type":"string","description":"(Optional) Updated serialized JSON with result values."},"result_flag":{"type":"string","description":"(Optional) Updated clinical flag (e.g., after correction or review)."},"resulted_at":{"type":"string","format":"date-time","description":"(Optional) Updated timestamp for when the result was reported."},"status":{"type":"string","description":"(Optional) Updated workflow status for the lab result."}},"required":[],"description":"Update body for an existing laboratory result record. Only supply fields that require modification. Mutable fields are test_name, test_result_value_json, result_flag, resulted_at, and status."},"IHealthcarePlatformVital.IRequest":{"type":"object","properties":{"patient_record_id":{"type":"string","format":"uuid","description":"The unique identifier of the patient record for which vitals are to be searched."},"encounter_id":{"type":"string","format":"uuid","description":"The UUID of the clinical encounter whose vitals are being queried."},"vital_type":{"type":"string","description":"(Optional) Filter on a specific vital sign type (e.g., 'heart_rate', 'bp_systolic')."},"value_min":{"type":"number","description":"(Optional) Minimum value filter for vital sign values."},"value_max":{"type":"number","description":"(Optional) Maximum value filter for vital sign values."},"measured_after":{"type":"string","format":"date-time","description":"(Optional) Only include vitals measured after this timestamp (ISO 8601)."},"measured_before":{"type":"string","format":"date-time","description":"(Optional) Only include vitals measured before this timestamp (ISO 8601)."},"recorded_by_user_id":{"type":"string","format":"uuid","description":"(Optional) Filter by the user who recorded the vital measurement."},"unit":{"type":"string","description":"(Optional) Filter on the units of measurement (e.g., 'bpm', 'mmHg', 'C')."},"sort_by":{"type":"string","description":"(Optional) Field to sort results by (e.g., 'measured_at', 'vital_value', etc.)."},"sort_order":{"oneOf":[{"const":"asc","description":"(Optional) Direction to sort results: 'asc' for ascending, 'desc' for descending."},{"const":"desc","description":"(Optional) Direction to sort results: 'asc' for ascending, 'desc' for descending."}],"description":"(Optional) Direction to sort results: 'asc' for ascending, 'desc' for descending."},"page":{"type":"integer","description":"(Optional) Which result page to retrieve. Defaults to 1 if not provided."},"limit":{"type":"integer","description":"(Optional) Maximum number of results per page. Defaults per system configuration."}},"required":["patient_record_id","encounter_id"],"description":"Request body for advanced search/filtering over vital sign records attached to a specific patient record and encounter. Supports flexible filtering, bounding values, sorting, and pagination."},"IHealthcarePlatformVital":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this vital entry. Corresponds to the primary key of the record in the vitals table."},"ehr_encounter_id":{"type":"string","format":"uuid","description":"Foreign key reference to the EHR encounter to which this vital sign recording is linked."},"recorded_by_user_id":{"type":"string","format":"uuid","description":"Foreign key reference to the nurse or clinician who recorded this vital sign. Used for audit, attribution, and compliance."},"vital_type":{"type":"string","description":"Clinical type of the vital, e.g., 'heart_rate', 'temp_c', 'bp_systolic', 'bp_diastolic', etc. Must match codes used for analytics and compliance. @business terminology."},"vital_value":{"type":"number","description":"The actual measured value for the vital sign. Should be in the units defined by the 'unit' property."},"unit":{"type":"string","description":"Measurement units for the vital sign (e.g., 'bpm', 'C', 'mmHg'). Must follow clinical conventions."},"measured_at":{"type":"string","format":"date-time","description":"The exact timestamp when the vital sign was measured, in ISO 8601 format. Used for charting, audit, and clinical workflows."},"created_at":{"type":"string","format":"date-time","description":"Time when this vital record was first created in the system (may be after measured_at for retrospective entries)."}},"required":["id","ehr_encounter_id","recorded_by_user_id","vital_type","vital_value","unit","measured_at","created_at"],"description":"Represents a single vital sign entry associated with a patient EHR encounter. Each record must be linked to an encounter and a submitting user (nurse/clinician). Maintains clinical measurement details, units, time of measurement, and audit fields for compliance."},"IHealthcarePlatformVital.ICreate":{"type":"object","properties":{"ehr_encounter_id":{"type":"string","format":"uuid","description":"Reference to the EHR encounter to which the vital belongs (link to healthcare_platform_ehr_encounters.id). Required for insertion and audit workflows."},"vital_type":{"type":"string","description":"Clinical code/type for the recorded vital. Must be a known term such as 'heart_rate', 'temp_c', etc., as defined in platform conventions."},"vital_value":{"type":"number","description":"Actual measured value for the given vital entry, in the units indicated in the 'unit' property."},"unit":{"type":"string","description":"Units for measurement, e.g., 'bpm', 'C', 'mmHg'. Must match clinical convention and be interpretable for this vital_type."},"measured_at":{"type":"string","format":"date-time","description":"Exact time measurement was taken (ISO 8601) for accurate charting. Required for clinical workflow and audit."}},"required":["ehr_encounter_id","vital_type","vital_value","unit","measured_at"],"description":"Payload for creating a new vital record associated with a specific encounter. User attribution is determined from the authentication context and is not accepted from client input for security/compliance. Used in nurse workflows, charting, and analytics."},"IHealthcarePlatformVital.IUpdate":{"type":"object","properties":{"vital_type":{"type":"string","description":"Clinical code/type of the vital. May be corrected for coding errors or clinical note review."},"vital_value":{"type":"number","description":"Corrected or updated value for the vital sign, if re-charted or amended for error/inaccuracy."},"unit":{"type":"string","description":"Measurement units, in case of correction or recalibration/reclassification of entry."},"measured_at":{"type":"string","format":"date-time","description":"Corrected measurement timestamp (ISO 8601). Allows re-timestamping or amending of clinical data if necessary."}},"required":[],"description":"Update properties for a vital record. Only mutable fields may be changed; audit fields, ownership/user ID, and primary/foreign key actor assignments are forbidden in update request objects. Used for correcting chart entries, regulatory amendment, or clinical workflow review. User attribution is system-controlled. All updates must be fully auditable and tracked."},"IHealthcarePlatformAppointment.IRequest":{"type":"object","properties":{"provider_id":{"type":"string","format":"uuid","description":"Filter appointments by assigned provider (user_org_assignment.id). Only permitted in filter/search by users with RBAC assignment to view provider-level data; NEVER accepted for creation or acting user assignment."},"patient_id":{"type":"string","format":"uuid","description":"Filter appointments by patient reference. Used to search appointments by patient, not to assign patient ownership in requests."},"status_id":{"type":"string","format":"uuid","description":"Filter by appointment status (scheduled, cancelled, confirmed, etc; foreign key to status table)."},"appointment_type":{"type":"string","description":"Type of appointment (in-person, telemedicine), as defined by appointment record."},"start_time_from":{"type":"string","format":"date-time","description":"Lower bound for start_time, filtered in ISO 8601 format."},"start_time_to":{"type":"string","format":"date-time","description":"Upper bound for start_time (ISO 8601)."},"end_time_from":{"type":"string","format":"date-time","description":"Lower bound for end_time filter window."},"end_time_to":{"type":"string","format":"date-time","description":"Upper bound for end_time filter window."},"organization_id":{"type":"string","format":"uuid","description":"Limit to appointments in the given organization (platform admin/superuser only context for cross-org or system use)."},"department_id":{"type":"string","format":"uuid","description":"Filter to appointments in a specific department (for org/department admin role usage)."},"room_id":{"type":"string","format":"uuid","description":"Filter appointments by assigned room if applicable (resource registry/room assignment)."},"equipment_id":{"type":"string","format":"uuid","description":"Filter appointments by equipment usage, if scheduled for diagnostic/support resources."},"sort":{"type":"string","description":"Sort field and order specifier (e.g., 'start_time:desc', 'status_id:asc')."},"page":{"type":"integer","description":"Page number for paginated results. Must be >= 1."},"page_size":{"type":"integer","description":"Page size for paginated results (optional, platform default enforced if omitted)."},"keyword":{"type":"string","description":"Free-text search keyword for appointment title, notes, or participant info for discovery/analytics use."}},"required":[],"description":"Request body schema for searching, filtering, and paginating appointments. Used in staff, patient, and admin portals for robust scheduling workflows. All filters are optional; query may combine zero or more for complex search scenarios. Ownership or acting user identity is never set by client in requests."},"IHealthcarePlatformAppointment":{"type":"object","description":"Detailed appointment entity representing a scheduled event between provider(s) and patient in the healthcarePlatform. This type maps directly to the `healthcare_platform_appointments` table in the schema.\n\nIncludes all business, clinical, and scheduling fields including links to organization, department, provider/user assignment, patient, status, resource/room, start/end time, and associated metadata. The schedule window (start_time to end_time) uses strict ISO8601 UTC format. Soft deletion is exposed via nullable `deleted_at` property for compliance and audit boundaries.\n\nRelationships to patient, provider, status and resources are always represented by unique system UUID identifiers; all such relationships must be externally validated on write workflows. Appointment recurrence and notes fields (optional) support advanced scheduling logic.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the appointment event as a system UUID."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"References the organization (tenant) where this appointment event is scheduled."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department within the organization; may be null for org-level bookings."},"provider_id":{"type":"string","format":"uuid","description":"UUID of the provider's user assignment (must be valid provider in platform)."},"patient_id":{"type":"string","format":"uuid","description":"UUID of the patient assigned to this appointment."},"status_id":{"type":"string","format":"uuid","description":"References appointment status configuration (scheduled, confirmed, cancelled, etc.)."},"room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional reference to the reserved room for this appointment."},"equipment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional reference to reserved equipment for this appointment."},"appointment_type":{"type":"string","description":"Type of appointment; e.g. 'in-person', 'telemedicine', or other business-supported types."},"start_time":{"type":"string","format":"date-time","description":"Start time (inclusive) in ISO 8601 UTC."},"end_time":{"type":"string","format":"date-time","description":"End time (exclusive) in ISO 8601 UTC."},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable title for the appointment. Used for display in user/staff calendar UI."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional additional instructions, pre-visit notes, or context for encounter, visible to staff/patient."},"recurrence_rule":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional recurrence rule string in RFC 5545 (e.g., RRULE:... syntax) for recurring appointment series."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of appointment event creation in ISO 8601 UTC."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for this appointment in ISO 8601 UTC."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion (archival) marker. Null if active; non-null if appointment is archived for compliance, not available to active UI/workflow."}},"required":["id","healthcare_platform_organization_id","provider_id","patient_id","status_id","appointment_type","start_time","end_time","created_at","updated_at"]},"IHealthcarePlatformAppointment.ICreate":{"type":"object","description":"Request body for creating a new appointment in the healthcarePlatform. All required business and scheduling fields directly correspond to the healthcare_platform_appointments model. Entity references (organization, department, provider, patient, status, resources) all use UUID string identifiers.\n\nOptional fields for department, room, equipment, title, description, and recurrence_rule are allowed to supply additional display or scheduling details as defined by the business logic. All datetime fields use ISO 8601 UTC format. Recurrence_rule is optional and adheres to RFC 5545 syntax for recurring events.","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"The target organization (tenant) for the new appointment."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department/context for the appointment—null if not department-scoped."},"provider_id":{"type":"string","format":"uuid","description":"UUID of the provider assigned for the appointment."},"patient_id":{"type":"string","format":"uuid","description":"Patient assigned to this appointment."},"status_id":{"type":"string","format":"uuid","description":"Status for the appointment as configured in platform scheduling (e.g. scheduled, confirmed, no-show, etc)."},"room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional room resource identifier for the appointment, else null."},"equipment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional equipment allocation for this appointment, else null."},"appointment_type":{"type":"string","description":"Type of appointment. Business rules may check for valid platform-supported types (e.g., 'in-person', 'telemedicine', custom defined per org)."},"start_time":{"type":"string","format":"date-time","description":"Start time (inclusive) in ISO 8601 UTC."},"end_time":{"type":"string","format":"date-time","description":"End time (exclusive) in ISO 8601 UTC."},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional appointment title for display purposes."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional additional notes/description/context for staff/patient."},"recurrence_rule":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional recurrence rule, using RFC 5545 RRULE syntax for recurring series."}},"required":["healthcare_platform_organization_id","provider_id","patient_id","status_id","appointment_type","start_time","end_time"]},"IHealthcarePlatformAppointment.IUpdate":{"type":"object","description":"Request body for updating an existing appointment. This partial-update structure supports patching any mutable field of a healthcare_platform_appointments record.\n\nFields not supplied are left unchanged. UUID references, start/end times, and business fields must meet validation/range requirements as per creation. All optional fields (null if not being updated).","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Updated organization context for the appointment if moving the booking."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Department context for appointment, updated if departmental shift required."},"provider_id":{"type":"string","format":"uuid","description":"Update to newly assigned provider for the appointment."},"patient_id":{"type":"string","format":"uuid","description":"Update target patient for appointment."},"status_id":{"type":"string","format":"uuid","description":"Change appointment status, such as to confirmed, cancelled, etc."},"room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Modify assigned room, or null to remove room assignment."},"equipment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Modify assigned equipment, or null to remove equipment assignment."},"appointment_type":{"type":"string","description":"Change type (in-person/telemedicine/custom) for the appointment."},"start_time":{"type":"string","format":"date-time","description":"Reschedule start time for this event."},"end_time":{"type":"string","format":"date-time","description":"Reschedule end time for this event."},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Edit appointment title or remove by setting null."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Modify or clear appointment description/context."},"recurrence_rule":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Edit recurrence rule; null to remove."}},"required":[]},"IHealthcarePlatformAppointmentReminder.IRequest":{"type":"object","description":"Request body for querying appointment reminder records, supporting filtering by various reminder fields and paginating/sorting result set for UI. Used for advanced reminder monitoring, resend, audit, or staff review.\n\nFields should follow API usage conventions—filter and range queries may be left unset if not used. Sorting controls behavior of paged results. Organization-level and appointment-level filtering is supported for strict data isolation and monitoring. Any property may be omitted to default to no filter/sort for respective field.","properties":{"appointment_id":{"type":"string","format":"uuid","description":"Target appointment UUID whose reminders are being queried."},"recipient_type":{"type":"string","description":"Filter results by recipient type (e.g., 'patient', 'provider', 'staff'), if set."},"recipient_id":{"type":"string","format":"uuid","description":"Filter reminder entries for a single recipient user, if set."},"delivery_channel":{"type":"string","description":"Limit results by channel (e.g., 'email', 'sms', 'in_app', etc.)."},"delivery_status":{"type":"string","description":"Filter reminders by delivery status (e.g., 'sent', 'pending', 'failed')."},"reminder_time_from":{"type":"string","format":"date-time","description":"Return reminders scheduled at or after this ISO UTC time."},"reminder_time_to":{"type":"string","format":"date-time","description":"Return reminders scheduled at or before this ISO UTC time."},"page":{"type":"integer","description":"Page index for paginated results (1-based)."},"limit":{"type":"integer","description":"Number of results per page."},"sort_by":{"type":"string","description":"Field to sort results by (e.g., 'reminder_time', 'created_at')."},"sort_direction":{"oneOf":[{"const":"asc","description":"Direction for sorting the result set; must be 'asc' or 'desc'."},{"const":"desc","description":"Direction for sorting the result set; must be 'asc' or 'desc'."}],"description":"Direction for sorting the result set; must be 'asc' or 'desc'."}},"required":[]},"IHealthcarePlatformAppointmentReminder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the appointment reminder. Always a UUID."},"appointment_id":{"type":"string","format":"uuid","description":"Reference to the related appointment (UUID)."},"reminder_time":{"type":"string","format":"date-time","description":"Scheduled time for this reminder to be sent. Must be a valid ISO 8601/RFC3339 date-time string."},"recipient_type":{"type":"string","description":"Type of recipient for this reminder. Example values: 'patient', 'provider', or 'both'."},"recipient_id":{"type":"string","format":"uuid","description":"UUID of the reminder target user (may be patient/staff/etc)."},"delivery_channel":{"type":"string","description":"Channel through which the reminder will be delivered. Examples: 'email', 'sms', 'in_app'."},"delivery_status":{"type":"string","description":"Status code of reminder delivery: 'sent', 'pending', 'failed', etc."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the reminder was created (RFC3339/ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update to this reminder (RFC3339/ISO 8601)."}},"required":["id","appointment_id","reminder_time","recipient_type","recipient_id","delivery_channel","delivery_status","created_at","updated_at"],"description":"Entity representing a scheduled notification/reminder for an appointment. Includes details for timing, delivery, recipient, and status tracking. Used in appointment modules for real-time and audit tracking of all reminders sent to patients or staff."},"IHealthcarePlatformAppointmentReminder.ICreate":{"type":"object","properties":{"reminder_time":{"type":"string","format":"date-time","description":"Scheduled send time of the reminder (ISO 8601/RFC3339)."},"recipient_type":{"type":"string","description":"Type of reminder recipient (e.g., patient, provider, both)."},"recipient_id":{"type":"string","format":"uuid","description":"UUID of the recipient (user, patient, staff)."},"delivery_channel":{"type":"string","description":"Notification channel to use for this reminder ('email', 'sms', 'in_app')."}},"required":["reminder_time","recipient_type","recipient_id","delivery_channel"],"description":"POST payload for creating an appointment reminder. Includes all fields required to schedule a reminder for an appointment by recipient/channel/time."},"IHealthcarePlatformAppointmentReminder.IUpdate":{"type":"object","properties":{"reminder_time":{"type":"string","format":"date-time","description":"If supplied, updates the scheduled time for this reminder."},"recipient_type":{"type":"string","description":"If supplied, changes the recipient type (e.g., 'patient', 'provider')."},"recipient_id":{"type":"string","format":"uuid","description":"If supplied, changes the target user for the reminder."},"delivery_channel":{"type":"string","description":"If supplied, changes the delivery channel for this reminder."},"delivery_status":{"type":"string","description":"If supplied, changes the technical delivery status of this reminder ('sent', 'failed', etc.)."}},"required":[],"description":"PATCH/PUT payload to update an existing appointment reminder. Fields are optional and may be supplied singly or in combination. Only supplied values are updated."},"IHealthcarePlatformAppointmentWaitlist.IRequest":{"type":"object","properties":{"status":{"type":"string","description":"Filter by current waitlist entry status. Example: 'active', 'promoted', 'removed', etc."},"patient_id":{"type":"string","format":"uuid","description":"Filter for entries matching a particular patient UUID."},"join_time_from":{"type":"string","format":"date-time","description":"Return only entries with join_time after this date/time (inclusive)."},"join_time_to":{"type":"string","format":"date-time","description":"Return only entries with join_time before this date/time (inclusive)."},"page":{"type":"integer","description":"Page number for pagination (starting at 1)."},"page_size":{"type":"integer","description":"Maximum number of records to return per paged result."}},"required":[],"description":"Complex filter and search request for querying appointment waitlist entries. Supports filtering by status, patient ID, join time range, and pagination controls."},"IHealthcarePlatformAppointmentWaitlist":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the appointment waitlist entry, as a UUID."},"appointment_id":{"type":"string","format":"uuid","description":"The unique identifier of the appointment that this waitlist entry relates to."},"patient_id":{"type":"string","format":"uuid","description":"The unique identifier of the patient who is on the waitlist for the appointment."},"join_time":{"type":"string","format":"date-time","description":"The timestamp (ISO8601 format) when the patient/user joined the waitlist."},"status":{"type":"string","description":"Status of the waitlist entry. Typically enum values: active, promoted, removed, etc. Represents the current position or result of the waitlist request."},"created_at":{"type":"string","format":"date-time","description":"The timestamp (ISO8601) when this waitlist entry was created."},"updated_at":{"type":"string","format":"date-time","description":"The timestamp (ISO8601) when this waitlist entry was last updated."}},"required":["id","appointment_id","patient_id","join_time","status","created_at","updated_at"],"description":"Represents a patient's (or user's) entry on a specific appointment's waitlist. Tracks join time, relationship to appointment and patient, current status, and audit timestamps. Used in scheduling modules for managing oversubscribed or full appointments, enabling patients to be notified/promoted as slots become available."},"IHealthcarePlatformAppointmentWaitlist.ICreate":{"type":"object","properties":{"appointment_id":{"type":"string","format":"uuid","description":"UUID of the appointment to join (required)."},"patient_id":{"type":"string","format":"uuid","description":"UUID of the patient to be waitlisted (required)."},"join_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp join-time of waitlist (ISO8601), set by server if omitted."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Status of the waitlist request (active, promoted, removed, etc), default is 'active' if omitted."}},"required":["appointment_id","patient_id"],"description":"Request to join an appointment waitlist. Includes the appointment, patient, (optional) join time and initial status."},"IHealthcarePlatformAppointmentWaitlist.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Status of the waitlist entry (typically: active, promoted, removed)."},"join_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) set or amend the join_time (ISO8601) for the waitlist entry."}},"required":[],"description":"Fields to update on an appointment waitlist entry. Allows status and (optionally) join time amendment."},"IHealthcarePlatformAppointmentStatus.IRequest":{"type":"object","properties":{"status_code":{"type":"string","description":"Query on specific appointment status code (e.g. 'scheduled', 'cancelled')."},"display_name":{"type":"string","description":"Partial or case-insensitive search on the display name (e.g. 'Confirmed', 'No-show')."},"business_status":{"type":"string","description":"Query on the business status grouping (e.g. 'active', 'closed')."},"sort_order":{"type":"integer","description":"Order to sort the status codes or for custom sorting operations."},"page":{"type":"integer","description":"Page number for paginated results."},"limit":{"type":"integer","description":"Maximum number of records per page for pagination."}},"required":[],"description":"Search request schema for querying and paginating appointment status codes/types. All properties are optional by default."},"IHealthcarePlatformAppointmentStatus":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this appointment status. Must be a valid UUID as per Prisma schema."},"status_code":{"type":"string","description":"Unique status code for the appointment (e.g. scheduled, cancelled). Must be unique in the appointment_statuses table."},"display_name":{"type":"string","description":"UI/business label for the status (e.g. 'Scheduled', 'Completed', 'No-show')."},"business_status":{"oneOf":[{"type":"string","description":"Workflow grouping for the status (e.g. 'active', 'closed')."},{"type":"null"}],"description":"Workflow grouping for the status (optional). E.g. 'active', 'closed'. Can be null."},"sort_order":{"type":"integer","description":"Integer order for business/UI sorting. Used to control display order."}},"required":["id","status_code","display_name","sort_order"],"description":"Represents a possible status for appointments in the healthcare platform. Used for workflow transitions, UI display, and filtering.\n\nBusiness rules: status_code must be unique, display_name is shown to users. The business_status distinguishes active/closed states for logic. sort_order defines sorting position."},"IHealthcarePlatformAppointmentStatus.ICreate":{"type":"object","properties":{"status_code":{"type":"string","description":"Unique status code for creation. Used in database and workflow logic."},"display_name":{"type":"string","description":"Business/UI label for the appointment status."},"business_status":{"oneOf":[{"type":"string","description":"Workflow grouping (e.g. 'active', 'closed')."},{"type":"null"}],"description":"Optional workflow grouping for the status."},"sort_order":{"type":"integer","description":"Order for UI/business logic sorting."}},"required":["status_code","display_name","sort_order"],"description":"Object used for creating a new appointment status. Only schema-defined fields are present. status_code must be unique. display_name is user-facing. business_status optional. sort_order required."},"IHealthcarePlatformAppointmentStatus.IUpdate":{"type":"object","properties":{"display_name":{"type":"string","description":"Updated label for status (optional)."},"business_status":{"oneOf":[{"type":"string","description":"Updated grouping (e.g. 'active')."},{"type":"null"}],"description":"Optional updated workflow grouping."},"sort_order":{"type":"integer","description":"Updated sorting order (optional)."}},"required":[],"description":"Update object for appointment statuses. Only updatable fields included - display_name, business_status, sort_order. status_code and id are immutable."},"IHealthcarePlatformResourceScheduleIRequest":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID for the organization this resource schedule belongs to."},"resource_type":{"type":"string","description":"Type/category of resource (e.g. provider, room, equipment)."},"resource_id":{"type":"string","format":"uuid","description":"UUID of the resource for this schedule. Not a FK."},"available_start_time":{"type":"string","description":"Start of daily slot (format as string, e.g. 09:00 or ISO time)."},"available_end_time":{"type":"string","description":"End of daily slot (format as string, e.g. 18:00 or ISO time)."},"recurrence_pattern":{"oneOf":[{"type":"string","description":"Recurrence pattern (ICal/JSON/custom), e.g. RRULE string."},{"type":"null"}],"description":"Optional recurrence pattern."},"exception_dates":{"oneOf":[{"type":"string","description":"Blackout/exception dates JSON/string."},{"type":"null"}],"description":"Optional exception/blackout dates."},"status":{"type":"string","description":"Optional status for the schedule."},"created_at":{"type":"string","format":"date-time","description":"Optional creation timestamp for filter/search."},"updated_at":{"type":"string","format":"date-time","description":"Optional update timestamp for filter/search."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp."},{"type":"null"}],"description":"Query soft-deleted records (for audit/compliance) - optional."},"page":{"type":"integer","description":"Pagination - page number (optional)."},"limit":{"type":"integer","description":"Pagination - items per page (optional)."},"sort":{"type":"string","description":"Sort key (e.g. available_start_time, resource_type, etc.)"},"order":{"oneOf":[{"const":"asc","description":"Sort order: 'asc' or 'desc'."},{"const":"desc","description":"Sort order: 'asc' or 'desc'."}],"description":"Sort order: 'asc' or 'desc'."}},"required":[],"description":"Request/Filter object for searching or paginating resource scheduling records. All fields are optional for advanced search. Refer to Resource Schedule table for mapping fields."},"IHealthcarePlatformResourceSchedule.IRequest":{"type":"object","properties":{"organization_id":{"oneOf":[{"type":"string","format":"uuid","description":"Unique identifier of the organization to which the resource schedule belongs. Useful for filtering schedules by organization in a multi-tenant context."},{"type":"null"}],"description":"Unique identifier of the organization to which the resource schedule belongs. Useful for filtering schedules by organization in a multi-tenant context."},"resource_type":{"oneOf":[{"type":"string","description":"The type/category of resource (e.g., provider, room, equipment). Used for polymorphic filtering of different scheduled assets in the healthcare platform."},{"type":"null"}],"description":"The type/category of resource (e.g., provider, room, equipment). Used for polymorphic filtering of different scheduled assets in the healthcare platform."},"resource_id":{"oneOf":[{"type":"string","format":"uuid","description":"Unique identifier of the resource (provider, room, or equipment) for which the schedule is defined. Allows fine-grained filtering by specific asset."},{"type":"null"}],"description":"Unique identifier of the resource (provider, room, or equipment) for which the schedule is defined. Allows fine-grained filtering by specific asset."},"available_start_time_from":{"oneOf":[{"type":"string","format":"time","description":"Lower bound (inclusive) filter for the available resource start time. Typically formatted as HH:mm (e.g., 09:00). Used to find schedules starting after a certain time."},{"type":"null"}],"description":"Lower bound (inclusive) filter for the available resource start time. Typically formatted as HH:mm (e.g., 09:00). Used to find schedules starting after a certain time."},"available_start_time_to":{"oneOf":[{"type":"string","format":"time","description":"Upper bound (inclusive) filter for the available resource start time. Typically formatted as HH:mm (e.g., 18:00). Used to find schedules starting before a certain time."},{"type":"null"}],"description":"Upper bound (inclusive) filter for the available resource start time. Typically formatted as HH:mm (e.g., 18:00). Used to find schedules starting before a certain time."},"available_end_time_from":{"oneOf":[{"type":"string","format":"time","description":"Lower bound (inclusive) filter for the available resource end time. Typically formatted as HH:mm. Used for searching schedules ending after a specific threshold."},{"type":"null"}],"description":"Lower bound (inclusive) filter for the available resource end time. Typically formatted as HH:mm. Used for searching schedules ending after a specific threshold."},"available_end_time_to":{"oneOf":[{"type":"string","format":"time","description":"Upper bound (inclusive) filter for the available resource end time. Typically formatted as HH:mm. Used for searching schedules ending before a specific threshold."},{"type":"null"}],"description":"Upper bound (inclusive) filter for the available resource end time. Typically formatted as HH:mm. Used for searching schedules ending before a specific threshold."},"recurrence_pattern":{"oneOf":[{"type":"string","description":"Filter for schedules matching a recurrence pattern specification (iCal, JSON, CRON, or other expression depending on implementation). Allows filtering regular/recurrent availabilities."},{"type":"null"}],"description":"Filter for schedules matching a recurrence pattern specification (iCal, JSON, CRON, or other expression depending on implementation). Allows filtering regular/recurrent availabilities."},"exception_dates":{"oneOf":[{"type":"string","description":"Filter on blacklist/exception dates encoded as a string or JSON array, identifying schedules that include (or avoid) given dates (e.g., holidays, maintenance days)."},{"type":"null"}],"description":"Filter on blacklist/exception dates encoded as a string or JSON array, identifying schedules that include (or avoid) given dates (e.g., holidays, maintenance days)."},"status":{"oneOf":[{"type":"string","description":"Filter by status of the schedule entry (active, suspended, deleted, etc.). Typically used in admin or operations dashboards."},{"type":"null"}],"description":"Filter by status of the schedule entry (active, suspended, deleted, etc.). Typically used in admin or operations dashboards."},"page":{"oneOf":[{"type":"integer","minimum":1,"description":"Page number for paginated resource schedule search results. Defaults to 1 if not provided."},{"type":"null"}],"description":"Page number for paginated resource schedule search results. Defaults to 1 if not provided."},"limit":{"oneOf":[{"type":"integer","minimum":1,"maximum":1000,"description":"Maximum number of items to return per page in search results. Defaults to 20, maximum of 1000."},{"type":"null"}],"description":"Maximum number of items to return per page in search results. Defaults to 20, maximum of 1000."},"sort":{"oneOf":[{"type":"string","description":"Sorting order of results, e.g., 'available_start_time ASC', 'resource_type DESC'. Follows the backend's accepted syntax for complex sorting."},{"type":"null"}],"description":"Sorting order of results, e.g., 'available_start_time ASC', 'resource_type DESC'. Follows the backend's accepted syntax for complex sorting."}},"description":"Request schema for searching/filtering resource schedules (working hours/availability of providers, rooms, or equipment) in the healthcare platform. Used for both system admin and organization admin advanced queries across resource scheduling, with all fields as optional filters (null or omitted for no filter on that field). Pagination, filtering, and sorting are included for scalable multi-tenant search and reporting workflows.","required":[]},"IHealthcarePlatformResourceSchedule":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the resource schedule entry. Must be a valid UUID string. Maps to the primary key in the healthcare_platform_resource_schedules table."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID referencing the owning organization. Enforces strict multi-tenant resource boundary. Maps to healthcare_platform_organizations.id."},"resource_type":{"type":"string","description":"Type/category of resource (e.g., provider, room, equipment). Dictates how scheduling/availability logic is enforced."},"resource_id":{"type":"string","format":"uuid","description":"Polymorphic resource UUID. Points to the specific provider, room, or equipment instance to be scheduled."},"available_start_time":{"type":"string","description":"Start of the availability window in 24-hour or ISO8601 time format. Example: '09:00' or '2024-06-20T09:00:00+09:00'. Required."},"available_end_time":{"type":"string","description":"End of the availability window in 24-hour or ISO8601 time format. Example: '18:00' or '2024-06-20T18:00:00+09:00'. Required."},"recurrence_pattern":{"oneOf":[{"type":"string","description":"Recurrence pattern for the schedule (iCal, JSON or custom). Example: RRULE string. Nullable."},{"type":"null"}],"description":"Recurrence pattern for the schedule (iCal, JSON or custom). Example: RRULE string. Nullable."},"exception_dates":{"oneOf":[{"type":"string","description":"Blackout (holiday, maintenance) dates as string or JSON. Example: '[\"2025-07-04\"]'. Nullable."},{"type":"null"}],"description":"Blackout (holiday, maintenance) dates as string or JSON. Example: '[\"2025-07-04\"]'. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp in ISO 8601 format. UTC or timezone-aware. Set by the system."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for schedule record in ISO 8601 format. Set by the system."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-deletion timestamp if the record has been archived. Nullable."},{"type":"null"}],"description":"Soft-deletion timestamp if the record has been archived. Nullable."}},"required":["id","healthcare_platform_organization_id","resource_type","resource_id","available_start_time","available_end_time","created_at","updated_at"],"description":"Represents a resource's scheduled available time window for appointments, room/equipment booking, or provider scheduling in a multi-tenant SaaS healthcare setting. Critical for managing resource allocation, preventing double-booking, enforcing business policy, and supporting compliance requirements in organizational calendars."},"IHealthcarePlatformResourceSchedule.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID referencing the owning organization for this resource schedule. Required."},"resource_type":{"type":"string","description":"Type/category of resource to be scheduled (provider, room, equipment). Required."},"resource_id":{"type":"string","format":"uuid","description":"Polymorphic UUID of the resource (provider, room, equipment, etc) to be scheduled. Required."},"available_start_time":{"type":"string","description":"Start time for the resource availability window (24-hour or ISO8601 time). Example: '09:00' or '2024-06-20T09:00:00+09:00'. Required."},"available_end_time":{"type":"string","description":"End time for the resource availability window (24-hour or ISO8601 time). Example: '18:00' or '2024-06-20T18:00:00+09:00'. Required."},"recurrence_pattern":{"oneOf":[{"type":"string","description":"Recurrence rule for the schedule (RRULE string, JSON, or custom). Optional; leave null if not recurring."},{"type":"null"}],"description":"Recurrence rule for the schedule (RRULE string, JSON, or custom). Optional; leave null if not recurring."},"exception_dates":{"oneOf":[{"type":"string","description":"Dates for holiday/maintenance/blackout (string or JSON array). Optional; null if not specified."},{"type":"null"}],"description":"Dates for holiday/maintenance/blackout (string or JSON array). Optional; null if not specified."}},"required":["healthcare_platform_organization_id","resource_type","resource_id","available_start_time","available_end_time"],"description":"Payload for creating a new resource schedule. Specifies the organization, resource, availability window, and optional recurrence/exception rules for bookings."},"IHealthcarePlatformResourceSchedule.IUpdate":{"type":"object","properties":{"resource_type":{"type":"string","description":"Type/category of resource. Optional; can update if changing the class of scheduled resource."},"resource_id":{"type":"string","format":"uuid","description":"Polymorphic resource UUID. Optional; allows changing the scheduled resource instance."},"available_start_time":{"type":"string","description":"New start time for the availability window (24-hour or ISO8601). Optional for partial update."},"available_end_time":{"type":"string","description":"New end time for the availability window (24-hour or ISO8601). Optional for partial update."},"recurrence_pattern":{"oneOf":[{"type":"string","description":"Recurrence rule for the updated schedule; RRULE, JSON, or custom. Null disables recurrence."},{"type":"null"}],"description":"Recurrence rule for the updated schedule; RRULE, JSON, or custom. Null disables recurrence."},"exception_dates":{"oneOf":[{"type":"string","description":"Update for the blackout/exception dates, holiday/maintenance. Null disables."},{"type":"null"}],"description":"Update for the blackout/exception dates, holiday/maintenance. Null disables."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If set, marks the record as deleted/archived (ISO8601 or null)."},{"type":"null"}],"description":"If set, marks the record as deleted/archived (ISO8601 or null)."}},"required":[],"description":"Payload for updating an existing resource schedule. All fields optional; omitted fields remain unchanged. Use explicit null for properties to remove or unset fields."},"IHealthcarePlatformRoomReservation.IRequest":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID to filter room reservations."},"room_id":{"type":"string","format":"uuid","description":"Room UUID to filter reservations."},"reservation_start":{"type":"string","format":"date-time","description":"Filter for reservations starting on/after this date."},"reservation_end":{"type":"string","format":"date-time","description":"Filter for reservations ending on/before this date."},"reservation_type":{"type":"string","description":"Reservation type (e.g., appointment, cleaning, maintenance)."},"appointment_id":{"type":"string","format":"uuid","description":"Appointment UUID if filtering for reservations linked to appointment."},"created_at_from":{"type":"string","format":"date-time","description":"Return reservations created on/after this date."},"created_at_to":{"type":"string","format":"date-time","description":"Return reservations created on/before this date."},"updated_at_from":{"type":"string","format":"date-time","description":"Return reservations updated on/after this date."},"updated_at_to":{"type":"string","format":"date-time","description":"Return reservations updated on/before this date."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If present, filter for deleted/archived reservations as of this timestamp."},{"type":"null"}],"description":"If present, filter for deleted/archived reservations as of this timestamp."},"page":{"type":"integer","minimum":1,"description":"Page number for result paging (1-based)."},"pageSize":{"type":"integer","minimum":1,"description":"Page size for result paging."}},"required":[],"description":"Allows searching, filtering, or paginating room reservation records as stored in the healthcare_platform_room_reservations table. Supports advanced queries for resource, time periods, reservation type, and organization scope. Use in appointment book and admin/scheduling dashboards for search operations."},"IHealthcarePlatformRoomReservation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the room reservation record.\n\nPrimary key in the database, must be UUID. Used for tracking reservation in all scheduling and resource workflows."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization to which the room reservation belongs.\n\nReferences healthcare_platform_organizations and enforces multi-tenant isolation."},"room_id":{"type":"string","format":"uuid","description":"Room identifier (UUID only; not a FK but used for lookup in resource registry).\n\nRequired for mapping reservation to a physical space."},"reservation_start":{"type":"string","format":"date-time","description":"Reservation start time (ISO 8601 with time zone).\n\nDefines when the reserved time block begins. Used for schedule allocation, collision detection, and analytics."},"reservation_end":{"type":"string","format":"date-time","description":"Reservation end time (ISO 8601 with time zone).\n\nDefines when the reserved time block ends. Must be after start time for validation."},"reservation_type":{"type":"string","description":"Purpose of the reservation (appointment, admin, cleaning, maintenance, etc).\n\nDrives workflow logic and identifies block type in scheduling."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"ID of the appointment associated with this reservation, if applicable.\n\nnull if reservation is for admin/maintenance/non-appointment."},"created_at":{"type":"string","format":"date-time","description":"Timestamp reservation was created (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last record update (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp: null if active, set if record is archived or removed from workflow lists."}},"required":["id","healthcare_platform_organization_id","room_id","reservation_start","reservation_end","reservation_type","created_at","updated_at"],"description":"Room reservation record for resource scheduling, referencing organization, room, timeslot, and reservation type. Serves as the primary reference entity for appointment bookings, admin holds, maintenance blocks, and all room-level resource workflows within a healthcare organization.\n\nEach reservation maps to a time window, optionally an appointment, and is subject to organization and resource availability logic. Audit fields enable compliance and operational reporting. Soft delete via deleted_at for compliance retention.\n\nCorresponds directly to healthcare_platform_room_reservations table; properties are mapped 1:1 with the schema. All fields must be validated for type and business context."},"IHealthcarePlatformRoomReservation.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization for this reservation (required)."},"room_id":{"type":"string","format":"uuid","description":"UUID of the room being reserved."},"reservation_start":{"type":"string","format":"date-time","description":"Reservation start timestamp (ISO 8601, required)."},"reservation_end":{"type":"string","format":"date-time","description":"Reservation end timestamp (ISO 8601, required)."},"reservation_type":{"type":"string","description":"Purpose of reservation (e.g., appointment, admin, cleaning, maintenance, etc). Must comply with organization business rules."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Linked appointment UUID if applicable; null for admin/non-appointment holds."}},"required":["healthcare_platform_organization_id","room_id","reservation_start","reservation_end","reservation_type"],"description":"Request payload for creating a new room reservation record in the healthcare_platform_room_reservations table.\n\nAll fields must conform to business and schema constraints. Assigns the reservation to a specific organization, room, and time window, with optional appointment linkage. Used by admin, scheduling staff, or automated workflows. Validation required for time logic, room assignment, organization context, and block overlap."},"IHealthcarePlatformRoomReservation.IUpdate":{"type":"object","properties":{"room_id":{"type":"string","format":"uuid","description":"New room UUID to reassign to reservation (if changing resource)."},"reservation_start":{"type":"string","format":"date-time","description":"New start time for reservation (ISO 8601, optional)."},"reservation_end":{"type":"string","format":"date-time","description":"New end time for reservation (ISO 8601, optional)."},"reservation_type":{"type":"string","description":"Optional update to reservation purpose or category."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional: change the appointment this reservation is linked to, or remove with null."}},"required":[],"description":"Payload for updating allowed, mutable fields of a room reservation entity.\n\nOnly supports update for specific fields as per business/process logic. Organization and resource assignment usually cannot be modified post-initialization except under exceptional admin intervention. Supports time, link, or category modification for record correction, schedule change, or workflow adjustment.\n\nAll updates are audit-logged and must respect organizational and resource constraints for compliance."},"IHealthcarePlatformEquipmentReservation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary unique identifier for an equipment reservation. UUID reference as per Prisma schema."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization for this reservation. Foreign key; aligns with organizational data isolation."},"equipment_id":{"type":"string","format":"uuid","description":"UUID identifying the reserved equipment. Not formally FK-constrained in the current schema, but critical for equipment/workflow mapping."},"reservation_start":{"type":"string","format":"date-time","description":"Reservation start time (ISO 8601 date-time), in the system time zone. Reflects booked time slot."},"reservation_end":{"type":"string","format":"date-time","description":"Reservation end time (ISO 8601 date-time). Null or missing signifies open-ended, but standard business workflows require both endpoints."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional UUID of the linked appointment (if the reservation is for scheduled usage). Nullable; used for maintenance, admin, or blocked slots without appointment reference."},"reservation_type":{"type":"string","description":"Type/category for this reservation ('scheduled', 'blocked', 'maintenance', etc). Used for business workflows; free text constrained by business logic."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of reservation creation (system generated, ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update; for audit and troubleshooting (system managed)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete marker. Null if active; set to system timestamp when reservation is cancelled/archived per compliance/audit policy."}},"required":["id","healthcare_platform_organization_id","equipment_id","reservation_start","reservation_end","reservation_type","created_at","updated_at"],"description":"An equipment reservation resource, corresponding to a single resource booking entry as defined by the Prisma business logic. Captures all required metadata (reservation period, resource mapping, appointment linkage, workflow status, audit timestamps) and supports equipment scheduling, maintenance blockouts, and compliance audit workflows in a multi-tenant healthcare system. The schema is generated directly from 'healthcare_platform_equipment_reservations' and is used for both detail display and API responses."},"IHealthcarePlatformEquipmentReservation.IRequest":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Filter: restrict query to a specific organization by UUID."},"equipment_id":{"type":"string","format":"uuid","description":"Filter: restrict query to a single equipment resource by UUID."},"reservation_type":{"type":"string","description":"Filter: restrict to reservations matching a purpose/category (scheduled/blocked/maintenance, etc)."},"appointment_id":{"type":"string","format":"uuid","description":"Filter: restrict to reservations for a specific appointment (if linked)."},"status":{"type":"string","description":"Status filter (active, archived, etc). Provided for business logic; schema may be convention only."},"reservation_start_from":{"type":"string","format":"date-time","description":"Filter: only reservations starting at or after this ISO 8601 timestamp."},"reservation_start_to":{"type":"string","format":"date-time","description":"Filter: only reservations starting at or before this ISO 8601 timestamp."},"page":{"type":"integer","minimum":1,"description":"Paging: Results page number (starts at 1)."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Paging: Max records per page. Reasonable system max enforced."},"sort_by":{"type":"string","description":"Sorting: Field by which to sort results (e.g., reservation_start, equipment_id)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order for result set (ascending/descending)."},{"const":"desc","description":"Sort order for result set (ascending/descending)."}],"description":"Sort order for result set (ascending/descending)."}},"required":[],"description":"Advanced search/filtering parameters for paginated retrieval of equipment reservation records in scheduling workflows. Supports filtering by organization, resource, time window, reservation type, and appointment. Conventional sort_by/sort_order/page/limit fields for UI/UX pagination and result set control. All fields are optional—unfiltered call returns all visible records in context."},"IHealthcarePlatformEquipmentReservation.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"ID of the organization booking the reservation."},"equipment_id":{"type":"string","format":"uuid","description":"ID of the equipment for reservation."},"reservation_start":{"type":"string","format":"date-time","description":"Start datetime (ISO 8601) for the reservation."},"reservation_end":{"type":"string","format":"date-time","description":"End datetime (ISO 8601) for the reservation."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If this reservation supports an appointment, include its UUID. Nullable."},"reservation_type":{"type":"string","description":"Type/category for this reservation (e.g., 'scheduled', 'blocked', 'maintenance')."}},"required":["organization_id","equipment_id","reservation_start","reservation_end","reservation_type"],"description":"Request payload for creating a new equipment reservation. Required fields: organization, equipment, start/end time, reservation_type. Optionally linked to an appointment by appointment_id."},"IHealthcarePlatformEquipmentReservation.IUpdate":{"type":"object","properties":{"reservation_start":{"type":"string","format":"date-time","description":"Optional new start time for the updated reservation (ISO 8601)."},"reservation_end":{"type":"string","format":"date-time","description":"Optional new end time for the reservation."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optionally link to or update the connected appointment for this reservation."},"reservation_type":{"type":"string","description":"Optionally revise the reservation_type of the reservation."}},"required":[],"description":"Request payload for updating an equipment reservation. Permits modification of start/end time, appointment linkage, or reservation_type. All properties optional so updates may be partial."},"IHealthcarePlatformCalendarSetting.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization ID to search for calendar settings (optional)."},"resource_type":{"type":"string","description":"Resource type filter for calendar settings, e.g., 'room', 'provider', 'equipment' (optional)."},"resource_id":{"type":"string","format":"uuid","description":"Specific resource ID to search for (optional)."},"business_days":{"type":"array","items":{"type":"string"},"description":"List of business days (e.g., ['Mon', 'Tue']) to filter settings."},"availability_hours":{"type":"string","description":"Filter for availability hours (e.g., '08:00-18:00', optional)."},"min_lead_time_minutes":{"type":"integer","description":"Minimum required lead time for a calendar setting (optional)."},"min_cancel_window_minutes":{"type":"integer","description":"Minimum allowed cancellation window in minutes (optional)."},"blackout_dates":{"type":"string","description":"Filter for blackout dates (comma-separated ISO 8601 date(s) or range)."},"post_appointment_survey_enabled":{"type":"boolean","description":"Whether post-appointment survey is enabled for this setting (optional)."},"page":{"type":"integer","description":"Pagination control: page number (optional)."},"limit":{"type":"integer","description":"Pagination control: number of records per page (optional)."},"sort_by":{"type":"string","description":"Sort field name for results, e.g., 'created_at' or 'resource_type' (optional)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' or 'desc' (optional)."},{"const":"desc","description":"Sort direction: 'asc' or 'desc' (optional)."}],"description":"Sort direction: 'asc' or 'desc' (optional)."}},"required":[],"description":"Advanced search/filtering request for calendar settings in the scheduling system. Allows specifying organization/resource filters, business rules (availability, lead/cancel window), and pagination/sorting controls."},"IHealthcarePlatformCalendarSetting":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the calendar setting entry (UUID)."},"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Organization for which the calendar applies (nullable for global/platform-wide)."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Department context for department-specific settings. Nullable if org-wide/global."},"language":{"type":"string","description":"Language code (e.g. en-US, es-ES) for localization of system outputs, notifications, UI/date formatting, and scheduling events."},"timezone":{"type":"string","description":"IANA timezone string (e.g. America/New_York) for all date/time calculations."},"date_format":{"type":"string","description":"Standard date display format (e.g. YYYY-MM-DD, MM/DD/YYYY) for all scheduling output."},"time_format":{"type":"string","description":"Standard time display format (e.g. 24h, 12h) used for calendar/timepickers and business rules."},"number_format":{"type":"string","description":"Number formatting convention for region/country, e.g. 1,234.56 vs 1.234,56."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the calendar setting was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update to calendar setting."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if settings are currently active."}},"required":["id","language","timezone","date_format","time_format","number_format","created_at","updated_at"],"description":"Calendar/locale/regional settings entity for platform, organization, or department. Used for scheduling UI, notifications, date/time/number formatting, and role-based localization. Represents a unique context for localization and availability logic."},"IHealthcarePlatformCalendarSetting.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Organization for which the calendar applies (nullable for global/platform-wide)."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Department context for department-specific settings. Nullable if org-wide/global."},"language":{"type":"string","description":"Language code (e.g. en-US, es-ES) for localization of system outputs, notifications, UI/date formatting, and scheduling events."},"timezone":{"type":"string","description":"IANA timezone string (e.g. America/New_York) for all date/time calculations."},"date_format":{"type":"string","description":"Standard date display format (e.g. YYYY-MM-DD, MM/DD/YYYY) for all scheduling output."},"time_format":{"type":"string","description":"Standard time display format (e.g. 24h, 12h) used for calendar/timepickers and business rules."},"number_format":{"type":"string","description":"Number formatting convention for region/country, e.g. 1,234.56 vs 1.234,56."}},"required":["language","timezone","date_format","time_format","number_format"],"description":"Input DTO for creating a new calendar/locale/regional settings entity for a platform, organization or department context."},"IHealthcarePlatformCalendarSettings.IUpdate":{"type":"object","properties":{"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Updated organization context for this setting (nullable for global)"},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Updated department context, nullable for org/global scope"},"language":{"type":"string","description":"Updated language code for this context"},"timezone":{"type":"string","description":"Updated timezone string in IANA format"},"date_format":{"type":"string","description":"Updated date display format"},"time_format":{"type":"string","description":"Updated time display format"},"number_format":{"type":"string","description":"Updated number formatting convention."}},"required":[],"description":"Input DTO for updating an existing calendar/locale/regional settings entity. All fields are optional, only provided values are updated."},"IHealthcarePlatformCalendarSettings":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformCalendarSetting"},"description":"Array/list of calendar/locale/region settings available in the platform. Used for UI population, localization logic, and regional configuration. Each object in the array defines a distinct context or policy for an organization or department."},"IHealthcarePlatformTelemedicineSessions.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"The page number for pagination (starts at 1)"},"limit":{"type":"integer","description":"Number of records per page (default controlled by business logic, e.g. 50/100)"},"organization_id":{"type":"string","format":"uuid","description":"Organization for which to search telemedicine sessions"},"department_id":{"type":"string","format":"uuid","description":"If filtering for department context only"},"appointment_id":{"type":"string","format":"uuid","description":"Filter by linked appointment if searching for a specific encounter"},"provider_user_id":{"type":"string","format":"uuid","description":"Search for sessions for a specific provider"},"patient_user_id":{"type":"string","format":"uuid","description":"Filter for sessions for a given patient"},"session_recorded":{"type":"boolean","description":"Filter for sessions recorded or not"},"session_start_from":{"type":"string","format":"date-time","description":"Lower bound of session_start time (ISO 8601)"},"session_start_to":{"type":"string","format":"date-time","description":"Upper bound of session_start time (ISO 8601)"},"session_status":{"type":"string","description":"Filter for specific business or recorded status"}},"required":[],"description":"Advanced search/filter/pagination query for listing telemedicine sessions. Used on PATCH endpoints for bulk querying by admin/clinician. All properties are optional for flexible querying."},"IHealthcarePlatformTelemedicineSessions":{"type":"object","properties":{},"required":[],"description":"Paginated collection or semantic container key ONLY for telemedicine session listing endpoints. Not an actual business type -- see paginated result types and IHealthcarePlatformTelemedicineSession for details."},"IHealthcarePlatformTelemedicineSession.ICreate":{"type":"object","properties":{"appointment_id":{"type":"string","format":"uuid","description":"FK to healthcare_platform_appointments referencing which booked appointment creates this telemedicine session"},"join_link":{"type":"string","description":"Secure join URL or virtual room code. Can be a deep link or generated key/URL."},"session_start":{"type":"string","format":"date-time","description":"Planned start time for the telemedicine session (ISO 8601)"},"session_end":{"type":"string","format":"date-time","description":"Planned (or concluded) end time (ISO 8601)"},"provider_joined_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO 8601 datetime when the provider joined, if known; required for attendance/SLA audit"},"patient_joined_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When the patient joined (ISO 8601 or null/undefined if not yet joined). Used to track attendance, patient no-show analytics, and time tracking."},"session_recorded":{"type":"boolean","description":"If true, session will be/was recorded for compliance or quality review."}},"required":["appointment_id","join_link","session_start","session_end","session_recorded"],"description":"Payload to create a telemedicine session, always linked to an appointment. Records join URL, planned start/end, and whether session is recorded. provider_joined_at and patient_joined_at are for legacy/optimization and are optional."},"IHealthcarePlatformTelemedicineSession":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the telemedicine session."},"appointment_id":{"type":"string","format":"uuid","description":"Linked appointment identifier (foreign key to appointment entity)."},"join_link":{"type":"string","description":"Secure URL or deep-link for virtual meeting room. Content must comply with privacy/security configurations (e.g., short-lived, obfuscated, secured from non-participants)."},"session_start":{"type":"string","format":"date-time","description":"Session planned start time (ISO 8601, may or may not be in the past)."},"session_end":{"type":"string","format":"date-time","description":"Session planned or actual end time. Used for SLA/compliance review."},"provider_joined_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When provider joined the session (ISO 8601, nullable). Null if provider did not join or connection failed."},"patient_joined_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When patient joined the session (ISO 8601, nullable if not joined/no-show case)."},"session_recorded":{"type":"boolean","description":"If set true, the session was or will be recorded for compliance, legal review, or QI purposes."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when telemedicine session was created in the platform; immutable."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp for the session record; supports auditability and healing."}},"required":["id","appointment_id","join_link","session_start","session_end","session_recorded","created_at","updated_at"],"description":"Full telemedicine session record, including timing, join link, all audit timestamps, and optional join/attendance events."},"IHealthcarePlatformTelemedicineSession.IUpdate":{"type":"object","properties":{},"required":[],"description":"Update fields for a telemedicine session as part of the platform's session entity. Populate with specific updatable properties per future refinement.","title":"IHealthcarePlatformTelemedicineSession.IUpdate"},"IHealthcarePlatformBillingInvoice.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination. Starts from 1."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Number of items per page for pagination."},"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by organization ID (UUID)."},"patient_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by patient ID (UUID)."},"invoice_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by invoice number."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by invoice status, e.g., 'draft', 'sent', 'paid', 'overdue', 'canceled'."},"created_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Start of creation date range, ISO 8601 UTC."},"created_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End of creation date range, ISO 8601 UTC."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by description, partial match."}},"required":[],"description":"Request structure for searching or filtering billing invoices in the healthcare platform. Contains pagination, filtering, and search parameters.","title":"IHealthcarePlatformBillingInvoice.IRequest"},"IHealthcarePlatformBillingInvoice":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) of the billing invoice."},"organization_id":{"type":"string","format":"uuid","description":"Organization to which the invoice belongs."},"patient_id":{"type":"string","format":"uuid","description":"Patient associated with the invoice."},"encounter_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Clinical encounter ID associated with the invoice, if any."},"invoice_number":{"type":"string","description":"Business invoice number (unique per organization)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Textual description or summary for the invoice."},"status":{"type":"string","description":"Invoice status, e.g., 'draft', 'sent', 'paid', 'overdue', 'canceled'."},"total_amount":{"type":"number","description":"Total amount due for the invoice, in base currency units."},"currency":{"type":"string","description":"Currency code for invoice (e.g., 'USD', 'EUR')."},"due_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Payment due date (ISO 8601 UTC), nullable."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the invoice was created, ISO 8601 UTC."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the invoice was last updated, ISO 8601 UTC."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp, present if the invoice is archived."}},"required":["id","organization_id","patient_id","invoice_number","status","total_amount","currency","created_at","updated_at"],"description":"Represents a billing invoice in the healthcare platform. Includes patient, organization, and financial data, as well as status and timestamps. Alignment with healthcare_platform_billing_invoices schema.","title":"IHealthcarePlatformBillingInvoice"},"IHealthcarePlatformBillingInvoice.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"ID of the organization issuing the invoice."},"patient_id":{"type":"string","format":"uuid","description":"ID of the patient being billed."},"encounter_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Clinical encounter associated with the invoice, if relevant."},"invoice_number":{"type":"string","description":"Business invoice number (unique per organization)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Textual description or summary of this invoice."},"status":{"type":"string","description":"Initial status of the invoice: 'draft', 'sent', 'paid', etc."},"total_amount":{"type":"number","description":"Total billed amount, in invoice's currency units."},"currency":{"type":"string","description":"Currency code (e.g., 'USD', 'EUR')."},"due_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Due date for payment if applicable (ISO 8601 format)."}},"required":["organization_id","patient_id","invoice_number","status","total_amount","currency"],"description":"Request payload to create a new billing invoice in the healthcare platform. Corresponds to required fields for business logic and schema validation. Used for patient or payer financial transaction initiation.","title":"IHealthcarePlatformBillingInvoice.ICreate"},"IHealthcarePlatformBillingInvoice.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Status of the billing invoice (e.g., draft, sent, paid, overdue, canceled). This field supports workflow transitions and finance reporting controls."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description/purpose for the invoice. Can summarize bundled services, reasons for adjustment, or financial context."},"due_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Date/time when payment is due (ISO 8601 format). Used for due event reminders and dunning logic."},"invoice_number":{"type":"string","description":"Unique business invoice number within the organization. Generally immutable after creation to aid reconciliation."},"currency":{"type":"string","description":"Currency code (e.g., USD, EUR) for payment context. Rarely updated in production; included to support compliance correction workflows."},"total_amount":{"type":"number","description":"Total invoice amount. Can support adjustment (never less than sum of active billing items minus adjustments)."}},"required":[],"description":"Update DTO for a billing invoice. All properties are optional and may be supplied individually or in combination. Used for administrative, adjustment, or audit-driven changes according to the healthcare_platform_billing_invoices table. Supports changes to status, description, due date, invoice_number, currency, and total_amount. Does not allow updating core immutable properties (id, organization_id, patient_id, encounter_id)."},"IHealthcarePlatformBillingItem.IRequest":{"type":"object","properties":{"billing_code_id":{"type":"string","description":"Filter by billing code or partial billing code."},"invoice_id":{"type":"string","description":"Filter by invoice id."},"description":{"type":"string","description":"Partial match for description."},"min_total_amount":{"type":"number","description":"Filter by minimum total_amount."},"max_total_amount":{"type":"number","description":"Filter by maximum total_amount."},"offset":{"type":"integer","description":"Pagination: result offset."},"limit":{"type":"integer","description":"Pagination: result limit per page."},"order_by":{"type":"string","description":"Sort order for results."}},"required":[],"description":"Search request structure for billing item list/index endpoints."},"IHealthcarePlatformBillingItem":{"type":"object","properties":{"id":{"type":"string","description":"Database UUID for the billing item row."},"invoice_id":{"type":"string","description":"UUID of the parent invoice."},"billing_code_id":{"type":"string","description":"Linked billing code catalog identifier (UUID)."},"description":{"type":"string","description":"Service/product code description displayed to the administrator or end user."},"quantity":{"type":"integer","description":"Number of units (integer). Must be >=1 for all items."},"unit_price":{"type":"number","description":"Business price per unit in invoice currency."},"total_amount":{"type":"number","description":"Calculated extended line price (quantity * unit_price)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when item was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for item update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp."}},"required":["id","invoice_id","billing_code_id","description","quantity","unit_price","total_amount","created_at","updated_at"],"description":"Main billing item entity. Singular, security-checked, with UUID and audit fields."},"IHealthcarePlatformBillingItem.ICreate":{"type":"object","properties":{"invoice_id":{"type":"string","description":"Parent invoice's UUID."},"billing_code_id":{"type":"string","description":"Billing code UUID."},"description":{"type":"string","description":"Free text or code description (required)."},"quantity":{"type":"integer","description":"Units (must be >=1)."},"unit_price":{"type":"number","description":"Numeric unit price."}},"required":["invoice_id","billing_code_id","description","quantity","unit_price"],"description":"DTO for billing item creation. All fields required."},"IHealthcarePlatformBillingItem.IUpdate":{"type":"object","properties":{"description":{"type":"string","description":"Optional description update."},"quantity":{"type":"integer","description":"Optional quantity update."},"unit_price":{"type":"number","description":"Optional unit price update."},"total_amount":{"type":"number","description":"Optional recalculated line total (business logic backed)."}},"required":[],"description":"Update DTO for billing item entity. Allows partial field updates: description, quantity, unit price, and calculated total. Primary key, invoice_id, and billing_code_id are immutable during update."},"IHealthcarePlatformBillingCode.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Filter: billing code value, e.g., '99214' or code prefix for fuzzy search."},"code_system":{"type":"string","description":"Filter by code system (e.g., 'CPT', 'ICD-10', 'DRG', 'internal')."},"name":{"type":"string","description":"Partial or full match for code display name. Used for description-based code lookups."},"description":{"type":"string","description":"Free-text, supports partial match against code description for advanced searches."},"active":{"type":"boolean","description":"Filter by status: active (in use), or inactive (historical/archived from fee schedule)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination, 1-based."},"pageSize":{"type":"integer","minimum":1,"maximum":1000,"description":"Result page size for pagination. Limits total return count."},"sortBy":{"type":"string","description":"Field name to sort results on. Typically 'code', 'name', 'created_at', etc."},"sortDir":{"oneOf":[{"const":"asc","description":"Sort direction: ascending ('asc') or descending ('desc')."},{"const":"desc","description":"Sort direction: ascending ('asc') or descending ('desc')."}],"description":"Sort direction: ascending ('asc') or descending ('desc')."}},"required":[],"description":"Request DTO for billing code catalogue search. Used in search endpoints with filters supporting fuzzy, exact, and paginated code queries. Maps to listing and UI selection functions."},"IHealthcarePlatformBillingCode":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for this billing code record, as assigned in the database."},"code":{"type":"string","description":"Billing code value as defined in regulatory or internal fee schedule (e.g., CPT/ICD/HCPCS, etc.) Must be unique within code_system. Used in all billing itemization and claim mapping."},"code_system":{"type":"string","description":"The code system this billing code belongs to (CPT, ICD-10, HCPCS, DRG, internal, etc.). Must match organizational policies and reporting requirements. Unique within organization and system."},"name":{"type":"string","description":"Short display name/label for code (e.g., 'Office Visit', 'CBC Test'). Used in selection lists, invoice details, and search interfaces."},"description":{"type":"string","description":"Optional detailed description for code (clinical or billing purpose, guidance, exclusions, or special use notes). Long format, often used in reference UIs."},"active":{"type":"boolean","description":"Whether this code is active and available for new billing activity (true), or inactive/retired (false). Historical codes should be retained for claims/legacy reference."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601 UTC) when billing code row was created in the system."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (ISO 8601 UTC) for this billing code row or any associated metadata."}},"required":["id","code","code_system","name","active","created_at","updated_at"],"description":"Full billing code entity record from the billing codes fee schedule/catalogue (healthcare_platform_billing_codes), including all reference details used in claims, invoices, and code management interfaces."},"IHealthcarePlatformBillingCode.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique billing code value (e.g., '99214' for CPT, 'Z00.00' for ICD-10). Required. Must be unique in code_system and active in schedule."},"code_system":{"type":"string","description":"Billing code system: CPT, ICD-10, HCPCS, DRG, internal, etc. Required. Must match the organizational or regulatory system."},"name":{"type":"string","description":"Short label or display name for this code, required for clinical and business presentation."},"description":{"type":"string","description":"Optional long description of what code represents, usage notes, coding guidance. Used for compliance and clarity."},"active":{"type":"boolean","description":"Whether this code is currently active (available for new billing/invoicing). Must be true for new codes in use, false for newly created legacy or reserved codes."}},"required":["code","code_system","name","active"],"description":"DTO for creating a new billing code in the platform billing code catalogue. Used in admin, billing, or compliance flows to expand the organization's available codes for invoices and claim mapping."},"IHealthcarePlatformBillingAdjustment":{"type":"object","description":"Billing adjustment applied to an invoice or item. May be positive (increase/penalty) or negative (discount/waiver). Used for audit, correction, charity care, or insurance action. Only exposes key adjustment fields, not sensitive billing/patient financial data.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the billing adjustment (UUID)."},"invoice_id":{"type":"string","format":"uuid","description":"Parent invoice id (UUID), if applied at the invoice level."},"item_id":{"type":"string","format":"uuid","description":"If applicable, the specific item id adjusted."},"adjustment_type":{"type":"string","description":"Type/category for business/audit: insurance, write-off, charity, patient satisfaction, etc."},"description":{"type":"string","description":"Reason or explanation for the adjustment."},"amount":{"type":"number","format":"double","description":"Positive or negative numeric adjustment value."},"created_at":{"type":"string","format":"date-time","description":"Adjustment row creation timestamp."}},"required":["id","adjustment_type","amount","created_at"]},"IHealthcarePlatformBillingAdjustment.IRequest":{"type":"object","description":"Advanced search/filter and pagination for billing adjustment entities, supporting review and analytics. Allows filtering by invoice, item, adjustment type, custom business status, and date ranges for creation or update. Used by admins, billing, and regulatory staff to target/monitor adjustments. Pagination and sorting should always be provided when working with large datasets. Not a persisted entity--filters only.","properties":{"invoice_id":{"type":"string","format":"uuid","description":"Optionally restrict query to adjustments belonging to this invoice."},"item_id":{"type":"string","format":"uuid","description":"Optionally restrict query to adjustments attached to this invoice line item."},"adjustment_type":{"type":"string","description":"Optionally restrict to adjustment type (correction, charity, insurance, etc). Should match agreed set per business or regulation."},"status":{"type":"string","description":"Custom business workflow status filter if used in API (nullable in underlying schema). Used for UI flows or analytics, not in persisted entity."},"date_from":{"type":"string","format":"date-time","description":"Optional filter: Only include adjustments created/updated at or after this date. ISO 8601."},"date_to":{"type":"string","format":"date-time","description":"Optional filter: Only include adjustments created/updated before or at this date. ISO 8601."},"page":{"type":"integer","description":"Page number for paginated results."},"pageSize":{"type":"integer","description":"Maximum number of results per page (default by business rule)."}},"required":[]},"IHealthcarePlatformBillingAdjustment.ICreate":{"type":"object","description":"Payload for creating a new billing adjustment record. All fields are required except invoice_id or item_id (only one is required - which determines scope of adjustment). Must state compliant business reason for change (correction, insurance, charity, etc.), and amount. All entries trigger audit logs and regulatory review as per compliance rules. Matches Prisma schema for allowable fields (no id - autogenerated; no timestamps - set by provider).","properties":{"invoice_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the target invoice to which this adjustment is attached (nullable if for item only)."},{"type":"null"}],"description":"UUID of the associated billing invoice if this adjustment applies at the invoice level. Nullable (omit if item_id is given)."},"item_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the target billing item to which this adjustment is attached (nullable if for invoice only)."},{"type":"null"}],"description":"UUID of the associated billing item if this adjustment is at the item level. Nullable (omit if invoice_id is given)."},"adjustment_type":{"type":"string","description":"Category of adjustment (insurance, write-off, charity, error correction, etc). Required. Should match allowed vocabularies."},"description":{"type":"string","description":"Business/audit justification: required explanation for audit/compliance. Must state compliant, policy reason or documentation for the adjustment."},"amount":{"type":"number","description":"The amount of adjustment to apply; required. May be negative (decrease/discount) or positive (increase/reversal/correction). Cannot be zero."}},"required":["adjustment_type","description","amount"]},"IHealthcarePlatformBillingCode.IUpdate":{"type":"object","description":"Payload for updating an existing billing code record. All fields are optional, only supply fields to be updated. Properties must conform to constraints: code, code_system are immutable (set at creation only). Active can enable/disable the code from future use and is audit tracked. Description is free text for compliance/explanation. Name is business/clinical display name. Changes are audited and may propagate to downstream billing and compliance logic.","properties":{"name":{"type":"string","description":"Display name for the code (e.g., procedure short text)."},"description":{"oneOf":[{"type":"string","description":"Detailed explanation, usage rationale, regulatory mapping for the code."},{"type":"null"}],"description":"Detailed explanation, usage rationale, regulatory mapping for the code."},"active":{"type":"boolean","description":"True if code can be used in future invoice/claims entries. Changing this will block/allow new usage for business compliance."}},"required":[]},"IHealthcarePlatformBillingAdjustment.IUpdate":{"type":"object","properties":{"description":{"type":"string","description":"Description or reason for this adjustment/correction.\n\nUseful for audit trails, financial reconciliation, and ensuring each adjustment is clearly explained.\nReferenced from the 'description' column in the Prisma model."},"amount":{"type":"number","description":"New adjustment amount. May be positive (increase invoice/items) or negative (discount/write-off/refund).\nReferenced from the 'amount' column.\n\nUsed in billing corrections, policy adjustments, and error handling. Must reflect currency/financial rules for the invoice/organization context.\n\nValidation:\n- Must be a valid double per Prisma: @db.DoublePrecision\n- Usually non-zero\n- Typically denominated in the system's currency."},"adjustment_type":{"type":"string","description":"Type/category of adjustment:\n- insurance, patient, charity, write-off, correction, etc.\nIndicates the business rationale for adjustment.\n\nReferenced from the 'adjustment_type' column.\n\nUsage:\n- Determines analytics and workflow reporting class\n- Example values: 'charity', 'insurance', 'coding_error', 'reconciliation', 'appeal_settlement', etc."}},"required":[],"description":"Interface for updating a billing adjustment. Used to annotate corrections, reduce or increase invoice amounts, and preserve audit trail for all financial modifications. Only specific fields are mutable after creation; id/invoice_id/item_id typically immutable.\n\nThis record must correspond to an extant row in the healthcare_platform_billing_adjustments table, as defined in the Prisma schema. All non-specified fields remain unchanged.\n\nBusiness rules:\n- Authorization is required for financial role or administrator\n- Adjustment reasons must always be auditable\n- Excessive or repeated adjustment requires compliance flagging\n\nWhen applied, the update is recorded in the financial_audit_logs table for compliance."},"IHealthcarePlatformBillingDiscountPolicy.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","description":"Organization UUID used to scope discount policy search. Returns only policy records belonging to the specified organization. Referenced from the 'organization_id' column. Search by organization partition is mandatory in multitenant platforms."},"policy_name":{"type":"string","description":"Partial case-insensitive search on the policy display name.\n\nMatches any policy_name containing this value as a substring (e.g., 'Charity', 'Staff', etc). Useful for UI quick filtering."},"discount_type":{"type":"string","description":"Filter to return only policies matching the given discount type (e.g., 'percentage', 'fixed', 'sliding_scale', as defined in business rules). Return is always case-insensitive, but values must match records. Referenced from 'discount_type' column."},"is_active":{"type":"boolean","description":"Limits results to only currently available (active) discount policies. Active policy can be applied to new invoices; inactive/archived policies are excluded."},"description":{"type":"string","description":"Keyword or full-text search on the business description/rationale for the policy. Returns all records where 'description' includes this string."},"created_at_from":{"type":"string","format":"date-time","description":"ISO8601 timestamp (optional) indicating the start of the policy creation filter window. Returns policies created at or after this value."},"created_at_to":{"type":"string","format":"date-time","description":"ISO8601 timestamp (optional) indicating the end of the policy creation filter window. Returns policies created on or before this value."}},"required":[],"description":"Request interface for advanced search or pagination of billing discount policies in administrative and analytics dashboards.\n\nEnables organization admins or compliance officers to locate relevant active/inactive discount policies."},"IHealthcarePlatformBillingDiscountPolicy":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for this discount policy.\n\nReferenced as the PK in the Prisma schema.\n\nFormat: UUID (RFC 4122) assigned at creation. Immutable primary key for lookups and references in invoices/items/adjustments/audit."},"organization_id":{"type":"string","description":"UUID of the organization which owns/controls this policy definition. Used for tenant isolation and partitioning of financial workflows. Required field, referenced from 'organization_id' column."},"policy_name":{"type":"string","description":"Display name for the discount policy (e.g., 'Charity', 'Employee', 'Hardship', 'COVID-19 Relief'). Used in UI, invoice receipts, and reporting. Referenced from 'policy_name' column."},"discount_type":{"type":"string","description":"Class of discount mechanism for policy: 'percentage', 'fixed', 'sliding_scale', or organization-defined logic. Used to determine application to billing amounts. Referenced from 'discount_type' column."},"description":{"type":"string","description":"Free-text description or rationale for the policy. Explains the business criteria, eligibility, or workflow applied. Referenced from 'description' column. Optional; usually present for compliance review."},"is_active":{"type":"boolean","description":"Status flag indicating if this discount policy is currently available for use in invoice workflows. Referenced from 'is_active' column."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the policy was created. ISO 8601/RFC 3339 format. Fully auditable for policy versioning. Referenced from 'created_at' column."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last modification to the policy. ISO 8601/RFC 3339 format. Used for change tracking and compliance audits. Referenced from 'updated_at' column."}},"required":["id","organization_id","policy_name","discount_type","is_active","created_at","updated_at"],"description":"Business entity for billing discount policy, as used in invoice workflows, reporting, and compliance.\n\nRepresents an organization-specific policy that can be referenced from invoice/adjustment creation workflows and for compliance analytics.\n\nStrictly linked to organization for tenant isolation. May be referenced by many invoices/items/adjustments.\n\nFields map precisely to the Prisma table's columns with type, required/optional status, and validation."},"IHealthcarePlatformBillingDiscountPolicy.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","description":"UUID of the organization to which this discount policy will belong. Required for partitioning of financial and compliance data. Referenced from the 'organization_id' foreign key column in the Prisma schema."},"policy_name":{"type":"string","description":"Display name for the new discount policy (e.g., 'Staff Assistance', 'Low Income', 'Charity Care'). Used in invoice line items, summary, and reporting. Must be unique per organization."},"discount_type":{"type":"string","description":"Specifies the discount logic: 'percentage', 'fixed', 'sliding_scale', or custom type as defined by business logic. Case-insensitive. Referenced from the 'discount_type' column in the Prisma data model."},"description":{"type":"string","description":"(Optional) Describes the workflow, business policy, or rationale for the discount. Used for compliance, eligibility, or business reporting. Referenced from the 'description' column. Can be omitted on creation, but is encouraged."},"is_active":{"type":"boolean","description":"Whether this discount policy is currently active when created (true = available for immediate use in invoices; false = policy defined as draft or future-dated). Referenced from the 'is_active' column. Required."}},"required":["organization_id","policy_name","discount_type","is_active"],"description":"Creation DTO for registering a new billing discount policy. Used by organizationAdmin roles via UI or script to add charity, employee, or compliance discount programs for use in invoice workflows.\n\nAfter creation, the policy is immediately available for use in invoice/adjustment workflows (if active=true)."},"EHealthcarePlatformBillingDiscountType":{"oneOf":[{"const":"percentage","description":"Enumeration for approved billing discount types. Maps to legal and business rule categories as enforced by the organization. Allowed values:\n- 'percentage': Discount is a percentage amount off total or item (e.g. 10%).\n- 'fixed': Discount is a fixed dollar/unit amount off invoice or item (e.g. $25 off).\n- 'sliding_scale': Discount is calculated based on policy-defined logic (e.g. income, eligibility, FPL family size).\n\nUsed for type validation and UI selection controls."},{"const":"fixed","description":"Enumeration for approved billing discount types. Maps to legal and business rule categories as enforced by the organization. Allowed values:\n- 'percentage': Discount is a percentage amount off total or item (e.g. 10%).\n- 'fixed': Discount is a fixed dollar/unit amount off invoice or item (e.g. $25 off).\n- 'sliding_scale': Discount is calculated based on policy-defined logic (e.g. income, eligibility, FPL family size).\n\nUsed for type validation and UI selection controls."},{"const":"sliding_scale","description":"Enumeration for approved billing discount types. Maps to legal and business rule categories as enforced by the organization. Allowed values:\n- 'percentage': Discount is a percentage amount off total or item (e.g. 10%).\n- 'fixed': Discount is a fixed dollar/unit amount off invoice or item (e.g. $25 off).\n- 'sliding_scale': Discount is calculated based on policy-defined logic (e.g. income, eligibility, FPL family size).\n\nUsed for type validation and UI selection controls."}],"description":"Enumeration for approved billing discount types. Maps to legal and business rule categories as enforced by the organization. Allowed values:\n- 'percentage': Discount is a percentage amount off total or item (e.g. 10%).\n- 'fixed': Discount is a fixed dollar/unit amount off invoice or item (e.g. $25 off).\n- 'sliding_scale': Discount is calculated based on policy-defined logic (e.g. income, eligibility, FPL family size).\n\nUsed for type validation and UI selection controls."},"IHealthcarePlatformBillingDiscountPolicy.IUpdate":{"type":"object","properties":{"policy_name":{"type":"string","description":"Business-facing display name for this discount policy (e.g., Charity, Employee, Hardship).\nOptional during update. Must be unique per organization."},"discount_type":{"type":"string","description":"Type/logic for the discount (e.g., percentage, fixed, sliding scale, policy code)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of this policy."},"is_active":{"type":"boolean","description":"Whether the policy is active and available for use. Set to false when retiring the policy."},"updated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp representing the most recent update (ISO 8601 format). Optional for patch; managed in backend."}},"required":[],"description":"Fields permitted for updating a billing discount policy. All fields are optional and may be submitted partially. This type is used for updating the healthcare_platform_billing_discount_policies table. See schema for property-level details. Nulls are accepted for nullable properties. Unique constraints are enforced on (organization_id, policy_name)."},"IHealthcarePlatformBillingPaymentPlan.IRequest":{"type":"object","properties":{"invoice_id":{"type":"string","description":"Invoice for which the payment plan is or will be created."},"plan_type":{"type":"string","description":"Installment/payment plan type (e.g., self-pay, insurance, deferral)."},"status":{"type":"string","description":"Current status of payment plan (e.g., active, completed, defaulted, expired, cancelled)."},"start_date":{"type":"string","description":"ISO 8601 date string for scheduled/actual payment plan start."},"end_date":{"type":"string","description":"ISO 8601 date string for payment plan end."},"total_amount_min":{"type":"number","description":"Minimum total amount value for filtering, inclusive."},"total_amount_max":{"type":"number","description":"Maximum total amount value for filtering, inclusive."},"page":{"type":"number","description":"Page number for pagination (starts at 1)."},"limit":{"type":"number","description":"Number of records per page."},"sort":{"type":"string","description":"Field name to sort results by."},"order":{"oneOf":[{"const":"asc","description":"Sort direction for the given field."},{"const":"desc","description":"Sort direction for the given field."}],"description":"Sort direction for the given field."}},"required":[],"description":"Request body type for searching/filtering payment plans in healthcare_platform_billing_payment_plans. All fields optional. Used for paginated search."},"IHealthcarePlatformBillingPaymentPlan.ICreate":{"type":"object","properties":{"invoice_id":{"type":"string","description":"Invoice UUID for which plan is established."},"plan_type":{"type":"string","description":"Installment or payment plan type (e.g., self-pay, insurance, promissory)."},"terms_description":{"type":"string","description":"Human-readable description of payment terms (e.g., amount per period, number of installments)."},"status":{"type":"string","description":"Status of payment plan (active, completed, defaulted, expired, etc.)."},"total_amount":{"type":"number","description":"Total amount to be paid as per the payment plan."},"start_date":{"type":"string","description":"Plan start date (ISO 8601 date string)"},"end_date":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Planned or actual payment plan end date (ISO 8601 date string or null for open-ended)."}},"required":["invoice_id","plan_type","terms_description","status","total_amount","start_date"],"description":"Request body for creating a new billing payment plan in healthcare_platform_billing_payment_plans. References invoice_id and defines business terms for the schedule."},"IHealthcarePlatformBillingPaymentPlan":{"type":"object","properties":{"id":{"type":"string","description":"Primary key for payment plan."},"invoice_id":{"type":"string","description":"Invoice for which this plan exists."},"plan_type":{"type":"string","description":"Installment/payment plan type (e.g., self-pay, insurance, payment deferral, promissory)."},"terms_description":{"type":"string","description":"Description of payment terms."},"status":{"type":"string","description":"Status of payment plan (e.g., active, completed, defaulted, cancelled, expired)."},"total_amount":{"type":"number","description":"Total amount to be paid under this plan."},"start_date":{"type":"string","description":"Scheduled start date (ISO 8601)"},"end_date":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Plan end date (ISO 8601) or null if still pending."},"created_at":{"type":"string","description":"Record creation timestamp (ISO 8601 date-time)"},"updated_at":{"type":"string","description":"Record last update timestamp (ISO 8601 date-time)"},"deleted_at":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Soft-delete timestamp. Null if active."}},"required":["id","invoice_id","plan_type","terms_description","status","total_amount","start_date","created_at","updated_at"],"description":"Billing payment plan entity as stored in healthcare_platform_billing_payment_plans. Describes payment arrangements for invoices: type, terms, status, start/end, audit timestamps, and soft-deletion marker."},"IHealthcarePlatformBillingPaymentPlan.IUpdate":{"type":"object","description":"Update DTO payload for billing payment plans, supporting revision of type, description, status, amount, and payment window as used by billing finance staff. All properties are optional, and only supplied fields are updated. Dates use ISO 8601 string format.","properties":{"plan_type":{"type":"string","description":"Payment plan type. Examples: 'self-pay', 'insurance', 'deferred', 'promissory'."},"terms_description":{"type":"string","description":"Human-readable description of payment plan terms, such as payment amount/frequency, comment, etc."},"status":{"type":"string","description":"Plan status. Examples: 'active', 'completed', 'defaulted', 'cancelled', 'expired'."},"total_amount":{"type":"number","description":"Total amount for the payment plan in major currency units (e.g., 123.45 for $123.45)."},"start_date":{"type":"string","format":"date-time","description":"ISO 8601 datetime when the plan begins."},"end_date":{"type":"string","format":"date-time","description":"ISO 8601 datetime for planned or actual plan completion/end."}},"required":[]},"IHealthcarePlatformBillingPayment.IRequest":{"type":"object","description":"Filter/search request format for retrieving billing payment records. All properties are optional and may be combined. Used by finance/billing workflows to slice and page through payment history.","properties":{"status":{"type":"array","items":{"type":"string"},"description":"Status values filter (array of status enums, e.g., 'posted', 'pending', 'voided', etc.)."},"payment_date_range":{"type":"array","items":{"type":"string","format":"date-time"},"minItems":2,"maxItems":2,"description":"Start and end ISO 8601 datetime range for payment_date filtering."},"min_amount":{"type":"number","description":"Minimum payment amount (inclusive) filter."},"max_amount":{"type":"number","description":"Maximum payment amount (inclusive) filter."},"currency":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Filter by payment currency/currencies (e.g., 'USD', ['USD','EUR'])."},"payee":{"type":"string","description":"Name, email, or identifier of payment actor (optional)."},"limit":{"type":"number","description":"Limit number of returned records for pagination."},"page":{"type":"number","description":"Pagination page number."},"offset":{"type":"number","description":"Pagination offset (used for skip calculation)."}},"required":[]},"IHealthcarePlatformBillingPayment":{"type":"object","description":"A posted or recorded billing payment, linked to a billing invoice. Used in audit, account management, and reconciliation. Contains payer, method, status, audit windows, and all required metadata. Designed for financial audit and regulatory workflows in healthcare billing contexts.","properties":{"id":{"type":"string","format":"uuid","description":"UUID primary key of the payment record."},"invoice_id":{"type":"string","format":"uuid","description":"UUID of the parent billing invoice."},"payee_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the user/entity paying the invoice, nullable if payment is by insurance or non-record-linked actor."},"payment_method_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the payment method (e.g., credit card, insurance, etc)."},"amount":{"type":"number","description":"Amount of the payment, to two decimal places, in invoice currency."},"currency":{"type":"string","description":"Currency code in ISO 4217 format (e.g., USD, EUR, etc)."},"reference_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Bank/transaction/check/reference number for payment reconciliation, if available."},"payment_date":{"type":"string","format":"date-time","description":"When payment was received (ISO 8601)."},"memo":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text note or memo associated with payment."},"status":{"type":"string","description":"Current payment status. E.g.: 'posted', 'pending', 'voided', 'refunded', etc."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 datetime when payment was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 datetime for last payment record update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO 8601 datetime if payment was soft-deleted, null if active."}},"required":["id","invoice_id","amount","currency","payment_date","status","created_at","updated_at"]},"IHealthcarePlatformBillingPayment.ICreate":{"type":"object","description":"Request body for creating a billing payment (posting or recording a patient/insurer payment against an invoice). Required fields include invoice_id, amount, currency, payment_date. All fields must align with regulatory, financial audit, and capability requirements.","properties":{"invoice_id":{"type":"string","format":"uuid","description":"UUID of the billing invoice to which this payment is applied."},"payee_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of paying user/entity; optional for insurer or non-record-linked payer."},"payment_method_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the payment method (credit, insurance, check, etc.)."},"amount":{"type":"number","description":"Payment amount (e.g., 120.00 for $120 USD)."},"currency":{"type":"string","description":"Currency code (ISO 4217: USD, EUR, etc.)."},"reference_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Check, reference, or bank transaction number."},"payment_date":{"type":"string","format":"date-time","description":"ISO 8601 datetime when payment was made (recorded, received, or posted)."},"memo":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Free-text or context note for the payment."},"status":{"type":"string","description":"Initial payment status (posted, pending); business logic will update as needed."}},"required":["invoice_id","amount","currency","payment_date"]},"IHealthcarePlatformBillingPaymentMethod.IRequest":{"type":"object","description":"Search and pagination parameters for billing payment methods. Used to filter, sort, and page through available payment method records for an organization.","properties":{"method_type":{"type":"string","description":"Type/category of payment method (e.g. credit_card, ach, insurance, check, cash, bank_transfer, external_service, other)."},"provider_name":{"type":"string","description":"External or internal provider label (e.g. Visa, Stripe, Aetna, Company payroll)."},"is_active":{"type":"boolean","description":"Whether the payment method is currently active/usable in workflows."},"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization this payment method belongs to."},"page":{"type":"integer","description":"Pagination: Page number (1-based)."},"page_size":{"type":"integer","description":"Pagination: Number of records per page."},"sort":{"type":"string","description":"Sort parameter (field name, may include order, e.g. 'created_at desc')."}},"required":[]},"IHealthcarePlatformBillingPaymentMethod":{"type":"object","description":"Represents a configured/registered payment method in use by the organization's billing platform. Contains metadata for payment type, provider details, integration, and status for business workflow use.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key: UUID of the payment method record."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization's UUID."},"method_type":{"type":"string","description":"Kind of method (credit_card, ach, insurance, check, cash, bank_transfer, external_service, other)."},"provider_name":{"type":"string","description":"Provider name/label (e.g. 'Visa', 'Stripe', 'Aetna', internal designation)."},"details_json":{"type":"string","description":"(Optional) Integration/configuration details, serialized as a string. Can be used for API params, settings, etc."},"is_active":{"type":"boolean","description":"True if payment method is available for invoice/payment workflows."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp updated (ISO 8601)."}},"required":["id","organization_id","method_type","is_active","created_at","updated_at"]},"IHealthcarePlatformBillingPaymentMethod.ICreate":{"type":"object","description":"Interface for creating a new payment method record. Used by administrative UI or internal services to register a supported payment method for an organization. All required fields are reflected in the schema. Optional fields provide additional configuration or integration context.","properties":{"organization_id":{"type":"string","format":"uuid","description":"Owning organization's UUID."},"method_type":{"type":"string","description":"Kind of method (credit_card, ach, insurance, check, cash, bank_transfer, external_service, other)."},"provider_name":{"type":"string","description":"Provider name/label (e.g. 'Visa', 'Stripe', or payer company for insurance)."},"details_json":{"type":"string","description":"Serialized settings/configuration (optional JSON string for gateway/API connection data, etc.)."},"is_active":{"type":"boolean","description":"True if method is enabled for new payments/invoices."}},"required":["organization_id","method_type","is_active"]},"IHealthcarePlatformBillingPayment.IUpdate":{"type":"object","description":"Update payment record properties for an invoice payment event. Supports updating amount, payment status, payment method, and memo for staff/admin reconciliation.","properties":{"amount":{"type":"number","description":"Amount paid/posted for the payment (must not exceed invoice total)."},"status":{"type":"string","description":"Status of payment (e.g. posted, pending, voided, disputed, refunded, etc. Business-controlled list)."},"payment_method_id":{"type":"string","format":"uuid","description":"ID of the payment method used for this payment."},"memo":{"type":"string","description":"Any staff or patient-facing memo/comment for reconciliation."},"payment_date":{"type":"string","format":"date-time","description":"The date/time when payment was posted/updated; may be used for backdating offline payments."}},"required":[]},"IHealthcarePlatformBillingPaymentMethod.IUpdate":{"type":"object","properties":{"method_type":{"type":"string","description":"Kind of method (e.g., credit_card, ach, insurance, check, bank_transfer, external_service, other)."},"provider_name":{"type":"string","description":"External or internal provider label (e.g., Visa, Stripe, Aetna, Company payroll)."},"details_json":{"type":"string","description":"Serialized details/settings for integration (e.g., JSON params for gateways or insurance API config)."},"is_active":{"type":"boolean","description":"If true, method is offered for current payments; not deleted to preserve audit trail."}},"required":[],"description":"Payload for updating a billing payment method. All fields optional; PATCH/PUT semantics, only changed fields included."},"IHealthcarePlatformInsurancePolicy.IRequest":{"type":"object","properties":{"policy_number":{"type":"string","description":"Search by policy number (full or partial)."},"payer_name":{"type":"string","description":"Filter by payer name (full or partial)."},"patient_id":{"type":"string","description":"Patient user reference (UUID)."},"organization_id":{"type":"string","description":"Organization reference (UUID)."},"policy_status":{"type":"string","description":"Policy status: active, expired, pending, etc."},"plan_type":{"type":"string","description":"Filter by plan type: commercial, medicare, self-pay, medicaid, etc."},"coverage_start_from":{"type":"string","format":"date","description":"Filter: coverage start date on/after (YYYY-MM-DD)."},"coverage_start_to":{"type":"string","format":"date","description":"Filter: coverage start date on/before (YYYY-MM-DD)."},"coverage_end_from":{"type":"string","format":"date","description":"Filter: coverage end date on/after (YYYY-MM-DD)."},"coverage_end_to":{"type":"string","format":"date","description":"Filter: coverage end date on/before (YYYY-MM-DD)."},"page":{"type":"integer","description":"Paging: page number (1-based)."},"limit":{"type":"integer","description":"Paging: records per page."},"sort":{"type":"string","description":"Sort by field (e.g., created_at, policy_number, payer_name, status)."},"order":{"oneOf":[{"const":"asc","description":"Sort order (asc or desc)."},{"const":"desc","description":"Sort order (asc or desc)."}],"description":"Sort order (asc or desc)."}},"required":[],"description":"Search and filter for insurance policies, with pagination."},"IHealthcarePlatformInsurancePolicy":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key (UUID)."},"patient_id":{"type":"string","format":"uuid","description":"Policyholder (patient/user) entity."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization for this policy."},"policy_number":{"type":"string","description":"Policy number, as provided by payer."},"payer_name":{"type":"string","description":"Insurance company/payer name (Aetna, BlueCross, etc)."},"group_number":{"oneOf":[{"type":"string","description":"Payer group/panel number."},{"type":"null"}],"description":"Payer group/panel number."},"coverage_start_date":{"type":"string","format":"date","description":"Coverage effective date (YYYY-MM-DD)."},"coverage_end_date":{"oneOf":[{"type":"string","format":"date","description":"Coverage end/expiration date (YYYY-MM-DD), null if active."},{"type":"null"}],"description":"Coverage end/expiration date (YYYY-MM-DD), null if active."},"plan_type":{"type":"string","description":"Type/kind of insurance: commercial, medicare, medicaid, self-pay, worker_comp, auto, etc."},"policy_status":{"type":"string","description":"Status of the policy: active, inactive, expired, pending verification."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO8601 date-time)."},"updated_at":{"type":"string","format":"date-time","description":"Most recent update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-deletion field; null if active."},{"type":"null"}],"description":"Soft-deletion field; null if active."}},"required":["id","patient_id","organization_id","policy_number","payer_name","coverage_start_date","plan_type","policy_status","created_at","updated_at"],"description":"Insurance policy entity record with all required database fields."},"IHealthcarePlatformInsurancePolicy.ICreate":{"type":"object","properties":{"patient_id":{"type":"string","format":"uuid","description":"Policyholder (patient/user) entity (UUID)."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization for this policy (UUID, required per tenancy isolation)."},"policy_number":{"type":"string","description":"Policy number as provided by payer."},"payer_name":{"type":"string","description":"Insurance company/payer name (Aetna, BlueCross, etc)."},"group_number":{"oneOf":[{"type":"string","description":"Payer group/panel number (optional)."},{"type":"null"}],"description":"Payer group/panel number (optional)."},"coverage_start_date":{"type":"string","format":"date","description":"Coverage effective date (YYYY-MM-DD)."},"coverage_end_date":{"oneOf":[{"type":"string","format":"date","description":"Coverage end/expiration date (YYYY-MM-DD, may be null if active)."},{"type":"null"}],"description":"Coverage end/expiration date (YYYY-MM-DD, may be null if active)."},"plan_type":{"type":"string","description":"Type of insurance: commercial, medicare, medicaid, self-pay, etc."},"policy_status":{"type":"string","description":"Policy status: active, inactive, expired, pending verification."}},"required":["patient_id","organization_id","policy_number","payer_name","coverage_start_date","plan_type","policy_status"],"description":"Request body payload for creating a new insurance policy record."},"IHealthcarePlatformInsurancePolicy.IUpdate":{"type":"object","properties":{"policy_number":{"type":"string","description":"External/business policy number as provided by payer/insurer. Optional update."},"payer_name":{"type":"string","description":"Insurance company/payer name (Aetna, BlueCross, etc). Optional update."},"group_number":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Payer group/panel number. Used for batch eligibility or claims where applicable. Optional for update."},"coverage_start_date":{"type":"string","format":"date-time","description":"Coverage effective date. Business use for eligibility logic. ISO8601 string."},"coverage_end_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Coverage end/expiration date; null if still active as of record. ISO8601 string or null."},"plan_type":{"type":"string","description":"Type/kind of insurance (e.g., commercial, medicare, medicaid, self-pay, worker_comp, auto, etc). Optional update."},"policy_status":{"type":"string","description":"Status of the policy (e.g., active, inactive, expired, pending verification). Optional update."}},"required":[],"description":"Update operation for insurance policy records. All fields optional, only include those being changed."},"IHealthcarePlatformInsuranceEligibilityCheck.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Page number for pagination."},"limit":{"type":"integer","description":"Page size for pagination."},"status":{"type":"string","description":"Filter: Outcome of eligibility (e.g. verified, not_covered, expired, pending, error, partial)."},"check_timestamp_from":{"type":"string","format":"date-time","description":"Filter (start): Eligibility check timestamp (from, ISO 8601)."},"check_timestamp_to":{"type":"string","format":"date-time","description":"Filter (end): Eligibility check timestamp (to, ISO 8601)."},"performed_by_id":{"type":"string","description":"Filter: User or staff responsible for the check/entry."},"payer_response_code":{"type":"string","description":"Filter: Code returned by payer/clearinghouse."},"insurance_policy_id":{"type":"string","description":"Filter: Insurance policy checked."}},"required":[],"description":"Search/pagination parameters for insurance eligibility checks."},"IHealthcarePlatformInsuranceEligibilityCheck":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key. Insurance eligibility check record UUID."},"insurance_policy_id":{"type":"string","description":"Insurance policy checked. Foreign key."},"performed_by_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User or staff responsible for the check/entry. Optional, can be null."},"check_timestamp":{"type":"string","format":"date-time","description":"Date/time eligibility was checked (ISO 8601)."},"status":{"type":"string","description":"Outcome of eligibility (e.g., verified, not_covered, expired, pending, error, partial)."},"payer_response_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Code from payer/clearinghouse indicating eligibility check outcome. Optional."},"payer_response_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable description/response from payer or integration API. Optional."},"created_at":{"type":"string","format":"date-time","description":"Eligibility check creation timestamp (system entry/audit trail)."},"updated_at":{"type":"string","format":"date-time","description":"Last update to eligibility check record."}},"required":["id","insurance_policy_id","check_timestamp","status","created_at","updated_at"],"description":"Single insurance eligibility check record entity."},"IHealthcarePlatformInsuranceEligibilityCheck.ICreate":{"type":"object","properties":{"insurance_policy_id":{"type":"string","description":"Insurance policy checked. Foreign key, required."},"performed_by_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User or staff who performed the eligibility check (optional, can be null)."},"check_timestamp":{"type":"string","format":"date-time","description":"Datetime check occurred (ISO 8601). Required."},"status":{"type":"string","description":"Outcome of eligibility check (e.g., verified, not_covered, expired, pending, error, partial). Required."},"payer_response_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Code returned by payer/clearinghouse. Optional."},"payer_response_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Response or notes from payer/integration. Optional."}},"required":["insurance_policy_id","check_timestamp","status"],"description":"Insurance eligibility check creation DTO."},"IHealthcarePlatformInsuranceEligibilityCheck.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Outcome of eligibility (e.g., verified, not_covered, expired, pending, error, partial).\nStatus of the eligibility check with the payer/clearinghouse.\nMay influence claims workflow or require escalation/appeal according to business rules."},"payer_response_code":{"type":"string","description":"Code returned by the payer or clearinghouse; reflects business/operational outcome as determined by payer API/standard integration.\nBusiness rules or audit automation may reference this code for downstream escalation or appeals.\nMay map to a standardized payer response list or use custom codes as detailed in payer/provider integration documentation."},"payer_response_description":{"type":"string","description":"Human-readable explanation/response from payer or integration API.\nUsed in compliance audit, appeals, and operational troubleshooting workflows. May be null if not supplied by the payer or integration service."}},"required":[],"description":"Fields updatable for a healthcare platform insurance eligibility check record; used when updating payer status, response code, or business/operational outcome after initial check."},"IHealthcarePlatformInsuranceClaim.IRequest":{"type":"object","properties":{"insurance_policy_id":{"type":"string","format":"uuid","description":"Insurance policy ID (UUID) to which the claim is associated.\nMay be used to filter insurance claims by given policy."},"invoice_id":{"type":"string","format":"uuid","description":"Invoice ID (UUID) associated with the claim.\nUsed to filter insurance claims by specific invoice."},"claim_number":{"type":"string","description":"Unique business/clearinghouse reference for claim submission.\nSearches insurance claims by claim_number within the organization."},"submission_status":{"type":"string","description":"Status in the payer/claim workflow (e.g., submitted, received, accepted, denied, pending, needs_info, paid, rejected, cancelled).\nUsed for status-based filtering in audit, billing, and appeals workflows."},"service_start_date_from":{"type":"string","format":"date-time","description":"Start date lower bound (ISO 8601) for searching claims by service date range."},"service_start_date_to":{"type":"string","format":"date-time","description":"Start date upper bound (ISO 8601) for searching claims by service date range."},"service_end_date_from":{"type":"string","format":"date-time","description":"End date lower bound (ISO 8601) for searching claims by end date range."},"service_end_date_to":{"type":"string","format":"date-time","description":"End date upper bound (ISO 8601) for searching claims by end date range."},"last_payer_response_code":{"type":"string","description":"Last payer/clearinghouse status code or response indicator for advanced search/audit workflows."},"last_payer_response_description":{"type":"string","description":"Text or summary of payer/clearinghouse/status response for auditing/appeal tracking in insurance claims search."},"page":{"type":"integer","description":"Result page number (starts at 1). Optional; used for paginated response."},"limit":{"type":"integer","description":"Pagination: number of records per page. Optional."},"order_by":{"type":"string","description":"Field to order results by (e.g., created_at, service_start_date, claim_number, etc.)."},"order_direction":{"oneOf":[{"const":"asc","description":"Sort order direction for result list.\nAccepted values: \"asc\" (ascending), \"desc\" (descending)."},{"const":"desc","description":"Sort order direction for result list.\nAccepted values: \"asc\" (ascending), \"desc\" (descending)."}],"description":"Sort order direction for result list.\nAccepted values: \"asc\" (ascending), \"desc\" (descending)."}},"required":[],"description":"Filtering/search request type for querying insurance claims (billable, claimable events); includes all business-queryable fields."},"IHealthcarePlatformInsuranceClaim.ICreate":{"type":"object","properties":{"insurance_policy_id":{"type":"string","format":"uuid","description":"Policy under which claim is submitted. Required. Reference to patient's insurance policy."},"invoice_id":{"type":"string","format":"uuid","description":"Invoice ID to which claim relates. Required. Corresponds to billing invoice as per system business rules."},"claim_number":{"type":"string","description":"Unique business/clearinghouse reference for claim submission. Required. Visible in payer/appeals/audit."},"service_start_date":{"type":"string","format":"date-time","description":"Date service(s) started. Required. ISO 8601; must be on/before service_end_date, if set."},"service_end_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Date service(s) ended; null if single-day (see claim schema). Optional."},"total_claimed_amount":{"type":"number","description":"Amount being claimed for the invoice after adjustments (in base currency). Required for claim submission."},"submission_status":{"type":"string","description":"Initial status for claim lifecycle (e.g., submitted, needs_info, denied, accepted, paid). Required."},"last_payer_response_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Payer or clearinghouse response code. Optional at claim submission."},"last_payer_response_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Payer/clearinghouse full text or status description (optional at claim submission)."}},"required":["insurance_policy_id","invoice_id","claim_number","service_start_date","total_claimed_amount","submission_status"],"description":"Type definition for creation of a new insurance claim event; all required policy/invoice identifiers and business values must be present."},"IHealthcarePlatformInsuranceClaim":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique claim identifier (UUID PK)."},"insurance_policy_id":{"type":"string","format":"uuid","description":"Referenced insurance policy (UUID FK)."},"invoice_id":{"type":"string","format":"uuid","description":"Associated billing invoice (UUID FK)."},"claim_number":{"type":"string","description":"Unique clearinghouse/business claim identifier."},"service_start_date":{"type":"string","format":"date-time","description":"Date service(s) started (ISO 8601; must be <= service_end_date, if present)."},"service_end_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Date service(s) ended; null if same as start date."},"total_claimed_amount":{"type":"number","description":"Amount claimed for the invoice after all adjustments (in base currency)."},"submission_status":{"type":"string","description":"Current status in payer/claim workflow (submitted, received, denied, accepted, rejected, paid, etc.)."},"last_payer_response_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Most recent payer/clearinghouse status code for claim lifecycle tracking."},"last_payer_response_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Text summary of payer/clearinghouse last response."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of claim creation (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to claim record (ISO 8601 UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp; null unless claim is archived or logically deleted."}},"required":["id","insurance_policy_id","invoice_id","claim_number","service_start_date","total_claimed_amount","submission_status","created_at","updated_at"],"description":"Primary type for healthcare platform insurance claim; represents a single claim submission and lifecycle, including business identifiers, payer response, status, and audit fields."},"IHealthcarePlatformInsuranceClaimStatus.IRequest":{"type":"object","properties":{"claimId":{"type":"string","description":"Optional filter for claim id (UUID) this status belongs to."},"status_code":{"type":"string","description":"Filter by claim status code (submitted, denied, paid, etc)."},"updated_by_id":{"type":"string","description":"Filter by UUID of user who updated the claim status."},"status_timestamp_from":{"type":"string","format":"date-time","description":"Return claim statuses updated after this ISO8601 timestamp."},"status_timestamp_to":{"type":"string","format":"date-time","description":"Return claim statuses updated before this ISO8601 timestamp."},"payment_amount_min":{"type":"number","description":"Minimum amount for status payment (inclusive)."},"payment_amount_max":{"type":"number","description":"Maximum amount for status payment (inclusive)."},"page":{"type":"integer","minimum":1,"description":"Pagination: which results page to return. 1-based."},"limit":{"type":"integer","minimum":1,"description":"Pagination: how many results per page to return."},"sort_by":{"type":"string","description":"Sort results by a claim status field. (e.g., 'status_timestamp', 'status_code')"},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction: ascending or descending."},{"const":"desc","description":"Sort direction: ascending or descending."}],"description":"Sort direction: ascending or descending."}},"description":"Filter/search options for claim status records.","required":[]},"IHealthcarePlatformInsuranceClaimStatus":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of the insurance claim status."},"claim_id":{"type":"string","format":"uuid","description":"Reference to the parent claim record (UUID)."},"updated_by_id":{"type":"string","format":"uuid","description":"UUID of user who recorded the status. May be null for system events."},"status_code":{"type":"string","description":"Status code for claim: e.g., 'submitted', 'accepted', 'denied', 'needs_info', 'paid'."},"status_description":{"type":"string","description":"Expanded description/notes for the status event from payer or system."},"payment_amount":{"type":"number","description":"Payment amount posted at this status event, if any."},"status_timestamp":{"type":"string","format":"date-time","description":"Timestamp this claim status was recorded."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the claim status record itself was created (audit trail)."}},"required":["id","claim_id","status_code","status_description","status_timestamp","created_at"],"description":"A single status change event for an insurance claim in the lifecycle, including status code, description, timestamps, and reference fields."},"IHealthcarePlatformInsuranceClaim.IUpdate":{"type":"object","properties":{"service_end_date":{"type":"string","format":"date-time","description":"Update the service end date of the claim (ISO8601)."},"total_claimed_amount":{"type":"number","description":"Change the total claimed amount for this claim (USD or currency-specific units)."},"submission_status":{"type":"string","description":"Status in payer/claim workflow (e.g., submitted, denied, paid, etc)."},"last_payer_response_code":{"type":"string","description":"Current or new payer/clearinghouse response code."},"last_payer_response_description":{"type":"string","description":"Summary or log of payer or clearinghouse status messages (notes, denials, approvals, etc)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete marker: timestamp if deleted."},{"type":"null"}],"description":"Soft-delete: ISO8601 timestamp if deleted, or null if active."}},"description":"Updatable fields for insurance claim records (patch/put operations). All fields are optional.","required":[]},"IHealthcarePlatformFinancialAuditLog.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"UUID filter for organization scope."},"entity_type":{"type":"string","description":"Type of audited business entity: 'invoice', 'payment', 'claim', 'item', etc."},"user_id":{"type":"string","format":"uuid","description":"UUID of user involved in the audited event."},"audit_action":{"type":"string","description":"Type of audit event: 'create', 'update', 'delete', 'access', etc."},"action_timestamp_from":{"type":"string","format":"date-time","description":"Filter for audit events occurring after this ISO8601 timestamp."},"action_timestamp_to":{"type":"string","format":"date-time","description":"Filter for audit events occurring before this ISO8601 timestamp."},"page":{"type":"integer","minimum":1,"description":"Result page number (1-based)."},"limit":{"type":"integer","minimum":1,"description":"Results per page."},"sort_by":{"type":"string","description":"Audit log field to sort results by."},"sort_direction":{"oneOf":[{"const":"asc","description":"Ascending or descending sort."},{"const":"desc","description":"Ascending or descending sort."}],"description":"Ascending or descending sort."}},"description":"Search/filter options for platform financial audit logs.","required":[]},"IHealthcarePlatformInsuranceClaimStatus.ICreate":{"type":"object","properties":{"status_code":{"type":"string","description":"Payer, clearinghouse, or internal status code associated with this claim status update. Critical for audit/compliance."},"status_description":{"type":"string","description":"Detailed description or free text for current claim status reason. Used for user workflow, remediation, or appeals."},"payment_amount":{"oneOf":[{"type":"number","description":"Amount (if any) paid at this status (e.g., partial payment, adjustment, supplemental)."},{"type":"null"}],"description":"Amount (if any) paid at this status (e.g., partial payment, adjustment, supplemental)."},"status_timestamp":{"type":"string","format":"date-time","description":"When this claim status was recorded/received (payer API or staff action)."}},"required":["status_code","status_description","status_timestamp"],"description":"Create a new insurance claim status record. Includes status code (audit/compliance), status description (free text, remediation), payment amount (if any, can be null), and timestamp (when this event occurred)."},"IHealthcarePlatformInsuranceClaimStatus.IUpdate":{"type":"object","properties":{"status_code":{"type":"string","description":"Payer, clearinghouse, or internal status code associated with this claim status update. Critical for audit/compliance."},"status_description":{"type":"string","description":"Detailed description or free text for current claim status reason. Used for user workflow, remediation, or appeals."},"payment_amount":{"oneOf":[{"type":"number","description":"Amount (if any) paid at this status (e.g., partial payment, adjustment, supplemental)."},{"type":"null"}],"description":"Amount (if any) paid at this status (e.g., partial payment, adjustment, supplemental)."},"status_timestamp":{"type":"string","format":"date-time","description":"When this claim status was recorded/received (payer API or staff action)."}},"required":[],"description":"Update an existing insurance claim status. All fields are optional. Includes possible update for status code, status description, payment amount (can be null if omitted), and status timestamp."},"IHealthcarePlatformFinancialAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the financial audit log record."},"organization_id":{"type":"string","format":"uuid","description":"Organization context for audit log."},"entity_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the business entity affected (invoice/item/payment/claim/etc). May be null for generic audit events."},{"type":"null"}],"description":"ID of the business entity affected (invoice/item/payment/claim/etc). May be null for generic audit events."},"user_id":{"oneOf":[{"type":"string","format":"uuid","description":"User performing or triggering the audited event. May be null for system or automated event."},{"type":"null"}],"description":"User performing or triggering the audited event. May be null for system or automated event."},"entity_type":{"type":"string","description":"Type of business entity affected (e.g., invoice, payment, claim, item, adjustment, policy, etc)."},"audit_action":{"type":"string","description":"Nature of the audited action (e.g., create, update, delete, access, payment_post, claim_submit, refund, adjustment, status_change, compliance_export, etc)."},"action_description":{"oneOf":[{"type":"string","description":"Human-readable explanation and context for the audit log; may include rationale, business context, before/after values as applicable."},{"type":"null"}],"description":"Human-readable explanation and context for the audit log; may include rationale, business context, before/after values as applicable."},"action_timestamp":{"type":"string","format":"date-time","description":"Date/time when event occurred (may differ from created_at if backfilled or imported for legacy audit log)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when audit log entry was created (system entry)."}},"required":["id","organization_id","entity_type","audit_action","action_timestamp","created_at"],"description":"Comprehensive audit log record for financial, billing, and insurance events for regulatory, SOC2, and HIPAA compliance."},"IHealthcarePlatformAnalyticsDashboard.IRequest":{"type":"object","properties":{"owner_user_id":{"oneOf":[{"type":"string","format":"uuid","description":"Dashboard owner's user assignment (search filter, nullable)."},{"type":"null"}],"description":"Dashboard owner's user assignment (search filter, nullable)."},"organization_id":{"oneOf":[{"type":"string","format":"uuid","description":"Organization id to search dashboards for (nullable, for platform/global dashboards)."},{"type":"null"}],"description":"Organization id to search dashboards for (nullable, for platform/global dashboards)."},"department_id":{"oneOf":[{"type":"string","format":"uuid","description":"Optional department id to filter dashboards by (nullable, for org-level only)."},{"type":"null"}],"description":"Optional department id to filter dashboards by (nullable, for org-level only)."},"title":{"oneOf":[{"type":"string","description":"Dashboard title (text search filter, nullable)."},{"type":"null"}],"description":"Dashboard title (text search filter, nullable)."},"is_public":{"oneOf":[{"type":"boolean","description":"Whether dashboard is public (filter value, nullable)."},{"type":"null"}],"description":"Whether dashboard is public (filter value, nullable)."},"created_from":{"oneOf":[{"type":"string","format":"date-time","description":"Earliest creation date of dashboards to return, for filtering (nullable, ISO 8601 date-time)."},{"type":"null"}],"description":"Earliest creation date of dashboards to return, for filtering (nullable, ISO 8601 date-time)."},"created_to":{"oneOf":[{"type":"string","format":"date-time","description":"Latest creation date for filter (nullable, ISO 8601 date-time)."},{"type":"null"}],"description":"Latest creation date for filter (nullable, ISO 8601 date-time)."},"deleted":{"oneOf":[{"type":"boolean","description":"Include deleted dashboards if true, only non-deleted if false, unset to include all (nullable)."},{"type":"null"}],"description":"Include deleted dashboards if true, only non-deleted if false, unset to include all (nullable)."},"page":{"type":"integer","minimum":1,"description":"Results page to request for pagination (default 1, must be positive integer)."},"limit":{"type":"integer","minimum":1,"description":"Page size for pagination (default as allowed by system, must be positive integer)."},"sort":{"oneOf":[{"type":"string","description":"Sort criteria, e.g. 'created_at desc', for advanced ordering (nullable)."},{"type":"null"}],"description":"Sort criteria, e.g. 'created_at desc', for advanced ordering (nullable)."}},"required":[],"description":"Advanced dashboard search criteria, supporting filter by owner, org, department, title, visibility and creation date, with complete pagination and sorting (results listing/management for analytics dashboards)."},"IHealthcarePlatformAnalyticsDashboard":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The globally unique identifier for this analytics dashboard. Set on creation and immutable. Used across UI and API to reference the dashboard."},"owner_user_id":{"type":"string","format":"uuid","description":"Reference to the dashboard's owning user's UUID. Indicates the creator and default permissions."},"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization (tenant/owner) to which this dashboard belongs. Used for data isolation and multi-tenant compliance."},"department_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of the department this dashboard is scoped to. Nullable."},{"type":"null"}],"description":"Optional reference to the department context for scoping. If null, dashboard is organization- or global-level."},"title":{"type":"string","description":"Human-readable dashboard title for UI display and search. Must be unique within org."},"description":{"oneOf":[{"type":"string","description":"Detailed business/context description for the dashboard. Shown on UI, used for search."},{"type":"null"}],"description":"Optional detailed description or documentation for dashboard purpose/contents."},"config_json":{"type":"string","description":"Dashboard configuration in JSON string format. Contains widget layout, analytics components, and UI/BI metadata."},"is_public":{"type":"boolean","description":"Flag indicating whether the dashboard is public to the org/department (true) or restricted to its owner."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the dashboard was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) of the last update to this dashboard's configuration or meta."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when this dashboard was soft-deleted."},{"type":"null"}],"description":"Soft delete marker (null if not deleted); used for archival and compliance. Not shown in active lists."}},"required":["id","owner_user_id","organization_id","title","config_json","is_public","created_at","updated_at"],"description":"Represents an analytics dashboard configuration and its UI/analytics context.\n- Enforces RBAC: Scoping by owner, organization, and optionally department\n- Business attributes: title (unique per org), description, config_json (for BI/Layout)\n- System/compliance: created_at, updated_at, deleted_at (soft-delete)\nSee Prisma / analytics_dashboard model for authoritative field definitions."},"IHealthcarePlatformAnalyticsDashboard.ICreate":{"type":"object","properties":{"owner_user_id":{"type":"string","format":"uuid","description":"UUID of the user who owns/creates this dashboard. Required for scoping, RBAC, and audit."},"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization (tenant) this dashboard is created under."},"department_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID for department (if dashboard is department-scoped) or null."},{"type":"null"}],"description":"Optional department context for scoping the dashboard (nullable)."},"title":{"type":"string","description":"Required unique dashboard title (per organization) for UI and business lookup."},"description":{"oneOf":[{"type":"string","description":"Optional description for the dashboard. Shown in UI/documentation."},{"type":"null"}],"description":"Optional description for display and search; can be null."},"config_json":{"type":"string","description":"Dashboard layout/configuration in JSON string format. Stores widgets, params, and visualization layout."},"is_public":{"type":"boolean","description":"Whether the dashboard is public to all org/department members (true), or only to the owner (false)."}},"required":["owner_user_id","organization_id","title","config_json","is_public"],"description":"Input DTO for creating a new analytics dashboard. All required business/meta/configuration fields must be present. Output is the persisted dashboard."},"IHealthcarePlatformAnalyticsDashboard.IUpdate":{"type":"object","properties":{"department_id":{"oneOf":[{"type":"string","format":"uuid","description":"UUID if changing department scope, null otherwise."},{"type":"null"}],"description":"(Optional) Department ID for scoping the dashboard, if updating this context."},"title":{"type":"string","description":"(Optional) New dashboard title, must be unique within its organization."},"description":{"oneOf":[{"type":"string","description":"(Optional) New dashboard description text."},{"type":"null"}],"description":"(Optional) Description to display/search in UI/documentation."},"config_json":{"type":"string","description":"(Optional) Updated/configuration JSON for dashboard layout/components."},"is_public":{"type":"boolean","description":"(Optional) Updated flag for public/private visibility in the org/department."}},"required":[],"description":"Input DTO for updating an existing analytics dashboard. Any field may be updated; only those supplied are changed. Follows PATCH/PUT business logic and audit constraints."},"IHealthcarePlatformDashboardPreference.IRequest":{"type":"object","properties":{"dashboard_id":{"type":"string","format":"uuid","description":"UUID for filtering preferences by dashboard context. Optional."},"user_id":{"type":"string","format":"uuid","description":"UUID for filtering by owner user account. Optional."},"last_viewed_at_from":{"type":"string","format":"date-time","description":"Filter: lower bound for last_viewed_at timestamp (ISO 8601)."},"last_viewed_at_to":{"type":"string","format":"date-time","description":"Filter: upper bound for last_viewed_at timestamp (ISO 8601)."},"created_at_from":{"type":"string","format":"date-time","description":"Filter: lower bound for creation timestamp (ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Filter: upper bound for creation timestamp (ISO 8601)."},"updated_at_from":{"type":"string","format":"date-time","description":"Filter: lower bound for updated_at timestamp (ISO 8601)."},"updated_at_to":{"type":"string","format":"date-time","description":"Filter: upper bound for updated_at timestamp (ISO 8601)."},"search":{"type":"string","description":"Free-text search string to match against dashboard title, description, or other preference data."},"page":{"type":"integer","minimum":1,"description":"Page number for results pagination (1-based index)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Maximum number of results per page."},"sort":{"type":"string","description":"Sort key and direction (e.g., 'updated_at desc'). Optional."}},"required":[],"description":"Request body for searching dashboard preference records. Supports filtering by dashboard/user, date ranges, text search, paging, sorting. Used to query healthcare_platform_dashboard_preferences in UI and API. Only supplied fields are filtered."},"IHealthcarePlatformDashboardPreference":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this dashboard preference record."},"dashboard_id":{"type":"string","format":"uuid","description":"ID of the analytics dashboard to which these preferences belong."},"user_id":{"type":"string","format":"uuid","description":"ID of the user who owns these preferences."},"preferences_json":{"type":"string","description":"Serialized preferences/configuration (theme, layout, widget state, etc, as a JSON string)."},"last_viewed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Datetime this dashboard was last viewed by the user."},{"type":"null"}],"description":"Datetime this dashboard was last viewed by the user. Null if never viewed."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"If present, soft deletion timestamp."},{"type":"null"}],"description":"Soft deletion timestamp for this preference record; null if active."}},"required":["id","dashboard_id","user_id","preferences_json","created_at","updated_at"],"description":"Dashboard preferences record, linking a user to an analytics dashboard and tracking their theme, layout, and last-view state. Preferences_json stores the serialized config as a string. Soft deletion and audit fields for compliance are included."},"IHealthcarePlatformDashboardPreference.ICreate":{"type":"object","properties":{"dashboard_id":{"type":"string","format":"uuid","description":"ID of the analytics dashboard for which these preferences are being created."},"user_id":{"type":"string","format":"uuid","description":"User ID who will own these preferences."},"preferences_json":{"type":"string","description":"Dashboard customization config (theme, layout)—must be JSON-serialized."}},"required":["dashboard_id","user_id","preferences_json"],"description":"DTO for creating a new dashboard preference. Links dashboard and user, with required JSON config."},"IHealthcarePlatformDashboardPreference.IUpdate":{"type":"object","properties":{"preferences_json":{"type":"string","description":"Updated dashboard config, theme, or layout JSON (if changing preferences)."},"last_viewed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Update last viewed timestamp."},{"type":"null"}],"description":"Update last viewed timestamp for the dashboard preference record; null if resetting."}},"required":[],"description":"DTO for updating dashboard preferences—only preferences_json or last_viewed_at fields can be modified."},"IHealthcarePlatformAnalyticsReport.IRequest":{"type":"object","properties":{"name":{"type":"string","description":"Report name (partial or full match for searching)."},"created_by_user_id":{"type":"string","format":"uuid","description":"User ID who created the report (filter)."},"organization_id":{"type":"string","format":"uuid","description":"Organization to which the report belongs (filter)."},"department_id":{"type":"string","format":"uuid","description":"Optional department context."},"is_active":{"type":"boolean","description":"Whether the report template is currently active (default: true)."},"page":{"type":"integer","description":"Pagination: page number to retrieve (default: 1)."},"limit":{"type":"integer","description":"Pagination: maximum records per page (default: 20)."},"sort":{"type":"string","description":"Sort by which field (default: created_at or name)."},"order":{"oneOf":[{"const":"asc","description":"Sort order: asc or desc."},{"const":"desc","description":"Sort order: asc or desc."}],"description":"Sort order: asc or desc."}},"required":[],"description":"Request DTO for searching analytics reports. Allows filtering by name, creator, organization, activation, and supports paging/sorting."},"IHealthcarePlatformAnalyticsReport":{"type":"object","description":"Analytics report metadata and template configuration for the healthcare platform. Each analytics report is a user- or org/department-defined report definition, including access scope, owner, and template details. This schema matches the healthcare_platform_analytics_reports table.\n\nAll fields are required unless marked as nullable/optional. ID fields are UUIDs; 'template_config_json' is a serialized JSON structure for the report's configuration. 'created_by_user_id' is the creating user; 'organization_id' is the owning organization; optionally linked to 'department_id' (nullable UUID).","properties":{"id":{"type":"string","format":"uuid","description":"UUID primary key of the analytics report."},"created_by_user_id":{"type":"string","format":"uuid","description":"UUID referencing the user who created the analytics report. System-level foreign key."},"organization_id":{"type":"string","format":"uuid","description":"UUID referencing the owning organization (multi-tenant boundary)."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID referencing department for department-scoped dashboards; null for org-wide."},"name":{"type":"string","description":"Unique name of the report (within org/department scope). Must be descriptive for end-user clarity."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional descriptive text explaining the report's purpose or scope."},"template_config_json":{"type":"string","description":"JSON string containing the report configuration/template definition. Used by the analytics/report rendering engine."},"is_active":{"type":"boolean","description":"Indicates whether this analytics report template is currently active and available for use; false for archived/deleted templates."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when the report was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when the report was last modified."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO 8601 soft deletion timestamp (null if active/not archived)."}},"required":["id","created_by_user_id","organization_id","name","template_config_json","is_active","created_at","updated_at"]},"IHealthcarePlatformAnalyticsReport.ICreate":{"type":"object","description":"Creation payload for analytics report configuration. When creating a new analytics report, the client must supply all required fields as described here. This schema matches the DTO for creating rows in healthcare_platform_analytics_reports.\n\nAll UUIDs must be valid references; department_id is optional. 'template_config_json' is a required string (serialized JSON).","properties":{"created_by_user_id":{"type":"string","format":"uuid","description":"UUID referencing creator user."},"organization_id":{"type":"string","format":"uuid","description":"UUID referencing target organization (multi-tenant boundary)."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable UUID referencing department for department-level report (omit or null for org-wide)."},"name":{"type":"string","description":"Unique report name (within org/department)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Report description (optional, usually shown in report gallery)."},"template_config_json":{"type":"string","description":"JSON string defining widgets, data sources, and rendering configuration."},"is_active":{"type":"boolean","description":"Whether the report is enabled for use; defaults to true on most creation flows."}},"required":["created_by_user_id","organization_id","name","template_config_json","is_active"]},"IHealthcarePlatformAnalyticsReport.IUpdate":{"type":"object","description":"DTO for updating an analytics report definition in the platform. This schema covers all allowed properties for patching or updating existing report settings except immutable fields (e.g., created_by_user_id).\n\nAll fields are optional; only provided fields are updated. Null values are permitted for nullable fields (e.g., department_id). 'template_config_json' must be a JSON-serialized string if supplied.","properties":{"name":{"type":"string","description":"New or updated analytics report name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated description for the analytics report (optional)."},"template_config_json":{"type":"string","description":"Updated JSON configuration of the report (serialized string, must be valid JSON if present)."},"is_active":{"type":"boolean","description":"Change active/archived state (e.g., to archive or revive report)."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Update or clear department assignment for department-scoped analytics reports."}},"required":[]},"IHealthcarePlatformDecisionSupportRule.IRequest":{"type":"object","description":"DTO for advanced search/filter queries to find CDS rules. Used to find decision support rule configuration in admin UI, audit, or analytics workflows. This schema matches the parameters allowed for PATCH /decisionSupportRules or any analytics CDS index operation.\n\nAll fields are optional; filters may be combined.","properties":{"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by owning organization's UUID (multi-tenant scoping); null for global/system rules."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Limit to department-scoped rules; null for org- or global-level rules."},"rule_code":{"type":"string","description":"Unique code to filter rules (exact, partial, or pattern search)."},"title":{"type":"string","description":"Search for rules by title label (partial match supported)."},"is_enabled":{"type":"boolean","description":"Only include currently-enabled CDS rules if true."},"trigger_event":{"type":"string","description":"Filter by the event that triggers the rule (e.g., 'medication_prescribed')."},"created_at_from":{"type":"string","format":"date-time","description":"ISO 8601 lower bound for creation timestamp, for range filtering."},"created_at_to":{"type":"string","format":"date-time","description":"ISO 8601 upper bound for creation timestamp, for range filtering."},"page":{"type":"integer","minimum":1,"description":"Page number for paginated results (1-based indexing)."},"limit":{"type":"integer","minimum":1,"description":"Maximum results per page."},"sort":{"type":"string","description":"Sort order for index results, e.g., 'created_at desc', 'title asc'."}},"required":[]},"IHealthcarePlatformDecisionSupportRule":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the CDS rule (@uuid)."},"organization_id":{"type":"string","format":"uuid","description":"Organization the rule belongs to. References organization entity. Must be a valid UUID."},"rule_code":{"type":"string","description":"Unique code for this clinical decision support rule, unique per organization. Used as reference key for maintenance and workflow triggers."},"title":{"type":"string","description":"Short, human-readable title for the support rule, for dashboard display and search."},"description":{"type":"string","description":"Optional description of the rule's business, clinical, or regulatory purpose. Multi-paragraphs, supports documentation best practices."},"trigger_event":{"type":"string","description":"Event that fires the rule logic. E.g., 'medication_prescribed', 'lab_result_posted', etc. This determines when the CDS logic should be evaluated in workflow."},"expression_json":{"type":"string","description":"Serialized expression or DSL representing the decision support logic. Must be valid JSON that can be parsed by the CDS engine."},"is_enabled":{"type":"boolean","description":"Whether the rule is currently active/executed by the CDS engine."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the CDS rule was created. Required for regulatory trace."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp for the CDS rule."},"deleted_at":{"type":"string","format":"date-time","description":"Soft delete timestamp for the rule archival. Null if active."}},"required":["id","organization_id","rule_code","title","trigger_event","expression_json","is_enabled","created_at","updated_at"],"description":"Represents a clinical decision support (CDS) rule configured at system or organization level. Responsible for real-time safety checks, best-practice reminders, and regulatory/compliance logic in clinical workflows. Definitions are versioned, audited, and can be organization-specific as per the healthcare_platform_decision_support_rules schema. All major CDS properties including trigger mechanism, expression, enabled status, and business documentation are covered."},"IHealthcarePlatformDecisionSupportRule.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization the rule will belong to. Must reference a valid organization."},"rule_code":{"type":"string","description":"Unique code (string) for the CDS rule. Namespaced by organization, must meet business uniqueness requirements."},"title":{"type":"string","description":"Short, human-readable title of the CDS rule for admin display and business search."},"description":{"type":"string","description":"Business/clinical documentation for the rule. Optional, can include multi-line/multi-paragraph markdown, referencing the logic and purpose."},"trigger_event":{"type":"string","description":"The external system or business event that triggers evaluation of this rule (i.e., order placed, lab result posted, etc.). Business and technical trigger key."},"expression_json":{"type":"string","description":"The encoded, machine-readable representation of the clinical or business rule logic."},"is_enabled":{"type":"boolean","description":"Whether the rule is active and will execute when the trigger runs."}},"required":["organization_id","rule_code","title","trigger_event","expression_json","is_enabled"],"description":"Request DTO for creating a new clinical decision support rule. Used by system admins or organization admins to onboard a new best practice, clinical alert, or safety check for workflow integration. All required business and technical fields, with documentation reference."},"IHealthcarePlatformDecisionSupportRule.IUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Update the CDS rule's display title, if needed."},"description":{"type":"string","description":"Markdown documentation, clinical/business description for the rule. Optional field for updating purpose, usage, regulatory context, or markdown rendering."},"trigger_event":{"type":"string","description":"Update the system or business workflow event triggering this logic, if needed by workflow change."},"expression_json":{"type":"string","description":"Modify the serialized business/clinical logic for the rule. Must be a valid JSON logic description or DSL per platform engine constraints."},"is_enabled":{"type":"boolean","description":"Change whether the rule is active (executed) in the CDS engine logic."}},"required":[],"description":"Update DTO for clinical decision support rule configuration. Allows partial or complete mutation of any documentation, display, or logic fields, while preserving audit/compliance traceability. Role-limited to system or org admins."},"IHealthcarePlatformClinicalAlert.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Restrict alert search to a specific organization. Used for RBAC/org-scoped dashboards. Optional."},"department_id":{"type":"string","format":"uuid","description":"Filter to a specific department context, if only changing or reviewing within one clinical domain. Optional."},"decision_support_rule_id":{"type":"string","format":"uuid","description":"Filter to clinical alerts triggered by a specific decision support rule id. Useful for reviewing rule efficacy or incident rates. Optional."},"alert_type":{"type":"string","description":"Business/clinical category of alert – such as 'warning', 'error', 'recommendation', etc. Used to filter alert types for risk review or severity dashboards. Optional."},"subject_summary":{"type":"string","description":"Partial text search across alert summary/subject lines. Use for rapid filtering/triage. Optional."},"status":{"type":"string","description":"Workflow state — e.g., 'new', 'viewed', 'acknowledged', 'resolved', 'escalated'. Used to filter action-state, open incident dashboards, or measure responsiveness. Optional."},"start_date":{"type":"string","format":"date-time","description":"ISO 8601 datetime (UTC) – only return alerts created or occurring after this timestamp. Supports time-window analysis, incident review, or compliance sampling. Optional."},"end_date":{"type":"string","format":"date-time","description":"ISO 8601 datetime (UTC) – only return alerts created before (or up to) this timestamp, allowing open/closed window business analytics. Optional."},"is_public":{"type":"boolean","description":"If true, return only org- or department-public alerts (vs those restricted to role/assignment/audit users). Used for public dashboard workflows. Optional."},"page":{"type":"integer","description":"Page number for pagination (1-based). Required for paginated UI search. Optional; default is 1."},"limit":{"type":"integer","description":"Max results per page (pagination). Optional; defaults based on platform configuration, usually 50 or 100."},"sort":{"type":"string","description":"Sort ordering key (created_at, status, alert_type, etc.). Optional, supports UI dashboard consistency and reporting sorting."}},"required":[],"description":"Request object for searching or filtering paginated clinical alerts in the CDS alert table. Supports RBAC filters, department/org context, trigger rule narrowing, status and time window combing, public/privacy limiting, and pagination controls necessary for real-time dashboard and compliance reporting."},"IHealthcarePlatformClinicalAlert":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the clinical alert record. This acts as the primary key in the database and is critical for audit log traceability and referencing the alert in workflow escalation and analytics operations."},"decision_support_rule_id":{"type":"string","format":"uuid","description":"Foreign key reference to the clinical decision support rule that triggered this alert. Indicates the specific rule logic and configuration responsible for generating the alert event."},"triggered_by_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional user ID for the actor who triggered the alert, if applicable (nullable). Used for individual audit trails, direct assignment, or tracking provider/escalation workflows. May be null for system-generated alerts."},"organization_id":{"type":"string","format":"uuid","description":"UUID identifying the organization responsible for this clinical alert. Used for multi-tenant data partitioning and compliance scope."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Nullable department UUID that further scopes the alert to a department within an organization (for departmental analytics, compliance, or role partitioning)."},"alert_type":{"type":"string","description":"Type or classification of the alert (e.g., warning, error, recommendation, info, compliance). Supports workflow branching, display, and severity prioritization."},"subject_summary":{"type":"string","description":"Short summary describing the entity, event, or workflow context for this alert (e.g., \"Critical Lab Value\", \"Expiring Medication\", etc). This field powers list views, dashboards, and targeted filtering for staff roles."},"detail":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Nullable) Detailed description or content of the alert. Can contain structured/narrative content, rationale, clinical guidelines, or escalation information. This may be omitted for alerts with minimal detail."},"status":{"type":"string","description":"Workflow status of the alert (e.g., new, viewed, acknowledged, resolved, escalated, closed), supporting compliance and audit trail state transitions. Used for task management and alert lifecycle tracking."},"acknowledged_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional date-time timestamp representing acknowledgement time by a user (or automated process). Used for compliance review and time-to-action analytics."},"resolved_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional date-time timestamp representing when the alert was resolved or closed. Drives metrics for alert closure and regulatory compliance."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the alert record in ISO 8601 format. Used for audit, trend analytics, and alert timeline displays."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp of the alert record. Critical for tracking workflow progress, compliance reviews, or escalations."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Date-time when the alert was soft deleted, or null if active. Used for compliance retention and audit cleanup logic."}},"required":["id","decision_support_rule_id","organization_id","alert_type","subject_summary","status","created_at","updated_at"],"description":"Clinical alert record generated from decision support rules, audit/compliance workflows, or operational events. Contains metadata, status, workflow tracking, actor assignments, and full audit trail context. Alerts are scoped to tenants and departments for strict RBAC and compliance purposes. Fields are designed for security, analytics, and regulatory reporting as required by HIPAA and safety standards."},"IHealthcarePlatformClinicalAlert.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Workflow status of the alert after modification (e.g., acknowledged, resolved, escalated). Force workflow propagation in compliance, task management, or operational dashboards."},"detail":{"type":"string","description":"Updated or added detailed information for the alert, supporting compliance annotation, workflow rationales, or corrective action notes."},"acknowledged_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Nullable) New acknowledgement timestamp if the alert is being acknowledged in this update event. Used for compliance event time tracking."},"resolved_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Nullable) New resolve/closure timestamp if the alert is being completed by this update. Enables measurement of time-to-close and compliance calculations."}},"required":[],"description":"Request DTO for updating a clinical alert record. All properties are optional; setting properties triggers workflow propagation across status, detail, and audit fields as permitted by compliance policy."},"IHealthcarePlatformOutcomeMetric.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","description":"Filter for metrics that belong to this organization (UUID as string). Enables RBAC, compliance, and tenant partitioning."},"department_id":{"type":"string","description":"Optional filter for department scope (UUID as string). Limits metric search to a specific department within an organization (nullable)."},"metric_name":{"type":"string","description":"Optional filter for the metric name. Supports partial/text search for targeted analytic queries or cohort analysis."},"observed_at_start":{"type":"string","format":"date-time","description":"Optional lower bound for observed_at time range filter. Only metrics observed at or after this time will be included in results."},"observed_at_end":{"type":"string","format":"date-time","description":"Optional upper bound for observed_at time range filter. Only metrics observed before or at this time will be included."},"value_min":{"type":"number","description":"Optional lower bound filter for observed_value (inclusive). Filters metrics where observed_value >= this minimum."},"value_max":{"type":"number","description":"Optional upper bound filter for observed_value (inclusive). Filters metrics where observed_value <= this maximum."},"page":{"type":"integer","description":"(Optional) Page number for pagination (1-indexed)."},"limit":{"type":"integer","description":"Number of results per page (default 25, maximum enforced by API)."},"sort":{"type":"string","description":"Optional sort field and order, e.g.'observed_at:desc', 'metric_name:asc'. Supports result ordering for trends and tableau integration."}},"required":[],"description":"DTO specifying filters, search, and pagination for outcome metrics analytics dashboards or reporting flows. Optional parameters enable highly targeted cohort, range, and time-based outcome metric queries aligned with RBAC and compliance requirements."},"IHealthcarePlatformOutcomeMetric":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the outcome metric record. Required for referencing, updating, and analytics trend linkage."},"organization_id":{"type":"string","format":"uuid","description":"UUID identifying the organization to which the metric belongs. Enforces multi-tenant data separation, RBAC, and compliance context."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department UUID, indicating department-level granularity for analytics or compliance purposes. Null if metric applies at the organization level."},"metric_name":{"type":"string","description":"String metric name (e.g., 'readmission_rate', 'infection_rate'). Used for querying, time-series aggregation, and analytics series construction. Names should be unique per org/cohort/time."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional text description of what the outcome metric represents. Documents purpose, business logic, calculation rationale, or reporting notes."},"cohort_definition_json":{"type":"string","description":"A JSON-serialized string describing the patient or event cohort used to generate the metric. Enables reproducibility, regulatory review, and dashboard drilldown filters."},"observed_value":{"type":"number","description":"Recorded numeric value for the metric at the given observed_at timepoint. Used for analytics, trend, benchmarking, and reporting."},"observed_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the metric value was observed/recorded (granularity may be daily, monthly, etc). Enables time-series analytics, compliance SLO measurement, and trending."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the outcome metric record was created in the platform. For audit and regulatory trace."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the outcome metric entity was last modified. For analytic, operational, and regulatory audit compliance."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp (ISO 8601) when the metric record was soft-deleted, or null if still active. Maintains long-term retention per compliance and audit requirements."}},"required":["id","organization_id","metric_name","cohort_definition_json","observed_value","observed_at","created_at","updated_at"],"description":"Full analytic/business entity representing a single observed metric for organizational/departmental analytic/reporting. Required for compliance, SLO tracking, and continuous improvement programs. Supports full lifecycle management and regulatory traceability (including soft-delete for retention)."},"IHealthcarePlatformOutcomeMetric.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Owning organization's unique identifier (UUID)."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Department's unique identifier if department scoped; nullable (UUID or null)."},"metric_name":{"type":"string","description":"Outcome metric or variable name (unique within the organization/department)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable description of the outcome metric."},"cohort_definition_json":{"type":"string","description":"JSON string describing the cohort, definition, or inclusion/exclusion logic for the outcome metric."},"observed_value":{"type":"number","description":"Observed numeric value for the outcome metric for the timepoint."},"observed_at":{"type":"string","format":"date-time","description":"Timestamp representing when the outcome metric value was observed (ISO 8601)."}},"required":["organization_id","metric_name","cohort_definition_json","observed_value","observed_at"],"description":"Arguments for creating a new healthcare platform outcome metric record, including all required and optional fields."},"IHealthcarePlatformOutcomeMetric.IUpdate":{"type":"object","properties":{"metric_name":{"type":"string","description":"Outcome metric or variable name (unique within the organization/department)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable description of the outcome metric."},"cohort_definition_json":{"type":"string","description":"JSON string describing the cohort, definition, or inclusion/exclusion logic for the outcome metric."},"observed_value":{"type":"number","description":"Observed numeric value for the outcome metric for the timepoint."},"observed_at":{"type":"string","format":"date-time","description":"Timestamp representing when the outcome metric value was observed (ISO 8601)."},"organization_id":{"type":"string","format":"uuid","description":"Optional org/department reassignment. Org UUID."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department reassignment (UUID or null)."}},"required":[],"description":"Arguments for updating a healthcare platform outcome metric record. Only specified fields will be updated."},"IHealthcarePlatformBenchmarkDefinition.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Limit returned records to those belonging to this organization id."},"benchmark_code":{"type":"string","description":"Filter by benchmark code (exact match, or if supported, partial string match)."},"label":{"type":"string","description":"Filter by label (partial text search)."},"value_min":{"type":"number","description":"Minimum value filtering."},"value_max":{"type":"number","description":"Maximum value filtering."},"unit":{"type":"string","description":"Filter by measurement unit (e.g. percent, per_1000, score, etc)."},"effective_start_at_from":{"type":"string","format":"date-time","description":"Only include benchmarks valid on or after this datetime (ISO 8601)."},"effective_start_at_to":{"type":"string","format":"date-time","description":"Only include benchmarks valid on or before this datetime (ISO 8601)."},"effective_end_at_from":{"type":"string","format":"date-time","description":"Only include benchmarks expiring on or after this datetime (ISO 8601)."},"effective_end_at_to":{"type":"string","format":"date-time","description":"Only include benchmarks expiring on or before this datetime (ISO 8601)."},"page":{"type":"integer","description":"Pagination: page number (default 1)."},"page_size":{"type":"integer","description":"Pagination: page size (record count per page, default 20)."},"sort_field":{"type":"string","description":"Sort by field (e.g. benchmark_code, label, value)."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' or 'desc'."},{"const":"desc","description":"Sort direction: 'asc' or 'desc'."}],"description":"Sort direction: 'asc' or 'desc'."}},"required":[],"description":"Parameters for searching/filtering benchmark definitions, including organization, code, label, value range, unit, effective and end times, pagination, and sorting."},"IHealthcarePlatformBenchmarkDefinition":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the benchmark (UUID)."},"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Owning organization's UUID. Nullable for global benchmarks."},"benchmark_code":{"type":"string","description":"Short programmatic benchmark code (e.g. 'NAT_AVG_23')."},"label":{"type":"string","description":"Human-friendly display label (e.g. '2023 National Average')."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the benchmark."},"value":{"type":"number","description":"Numeric value (target, threshold, mean, etc.)."},"unit":{"type":"string","description":"Measurement unit (percent, per_1000, score, etc.)."},"effective_start_at":{"type":"string","format":"date-time","description":"When the benchmark becomes valid (ISO 8601)."},"effective_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When the benchmark expires (ISO 8601 or null for indefinite)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion date, or null if active."}},"required":["id","benchmark_code","label","value","unit","effective_start_at","created_at","updated_at"],"description":"Full benchmark definition, including code, label, description, value, unit, date windows, status, and audit metadata. Used in reporting, dashboarding, and analytics normalization."},"IHealthcarePlatformBenchmarkDefinition.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization to which this benchmark applies."},"benchmark_code":{"type":"string","description":"Short, programmatic code used for reference (e.g., 'NAT_AVG_2024', must be unique within organization)."},"label":{"type":"string","description":"Human-readable display label (e.g., '2024 National Average')."},"value":{"type":"number","description":"Target or average value for the benchmark (e.g., 20.4, 0.95, etc.)."},"unit":{"type":"string","description":"Unit of measurement (e.g., percent, per_1000, score, seconds)."},"effective_start_at":{"type":"string","format":"date-time","description":"Timestamp when this benchmark becomes effective (ISO 8601)."},"effective_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this benchmark ceases to be effective, or null if open-ended."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the benchmark, context, and use."}},"required":["organization_id","benchmark_code","label","value","unit","effective_start_at"],"description":"Creation payload for a new benchmark definition used in analytics normalization, reporting, and KPI dashboards. All required fields map directly to the benchmark entity in the platform. Dates must be valid ISO8601. Unique constraints apply for benchmark_code per organization."},"IHealthcarePlatformBenchmarkDefinition.IUpdate":{"type":"object","properties":{"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Updated display label."},"value":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"(Optional) New target/average value for the benchmark."},"unit":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Updated unit of measurement."},"effective_start_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) New effective start date (ISO 8601 timestamp)."},"effective_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) New effective end date, or null to make open-ended."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) New benchmark description and context."}},"required":[],"description":"Update payload for an existing benchmark definition. All fields optional; send only fields to update. Dates must use ISO 8601 format. Null values are allowed to clear fields where business rules permit."},"IHealthcarePlatformKpiSnapshot.IRequest":{"type":"object","properties":{"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by organization (UUID) for KPI snapshot query."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Filter by department (UUID) for KPI snapshot query."},"benchmark_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Filter to KPI snapshots linked to this benchmark."},"kpi_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) KPI name to search/filter on for this query."},"label":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Label text filter for KPI dashboard search."},"recorded_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Earliest recorded_at value to include in query (ISO 8601)."},"recorded_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Latest recorded_at value to include in query (ISO 8601)."},"min_value":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Minimum value filter for time-series trend analysis."},"max_value":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Maximum value filter for time-series trend analysis."},"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination—page number (>=1)."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination—number of results per page."},"sort_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional field name to sort by (e.g., recorded_at, value)."},"sort_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order for results ('asc' for ascending, 'desc' for descending)."}},"required":[],"description":"Advanced filter and pagination request body for KPI snapshot analytics dashboards. Provides business logic boundary for analytics pagination, search, date, numeric, and label-based filtering. ISO8601 dates required for date fields. All fields are optional."},"IHealthcarePlatformKpiSnapshot":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the KPI snapshot record."},"organization_id":{"type":"string","format":"uuid","description":"Organization (tenant) to which this KPI snapshot is assigned."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Department context for this KPI snapshot."},"benchmark_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Reference to linked benchmark entity."},"kpi_name":{"type":"string","description":"Canonical KPI identifier (must be unique per org and recorded_at)."},"label":{"type":"string","description":"Display label for the KPI snapshot (user-facing analytics/UI)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description of the KPI, calculation method, or context."},"calculation_config_json":{"type":"string","description":"Configuration, calculation, filter, and normalization parameters for the KPI, as a serialized JSON string."},"value":{"type":"number","description":"The observed/calculated KPI value for analytics/statistical processing."},"recorded_at":{"type":"string","format":"date-time","description":"Timestamp representing the measure's period or point on the time axis. ISO 8601."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the KPI snapshot was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of most recent update to this KPI snapshot."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the KPI snapshot was soft-deleted, or null if not deleted."}},"required":["id","organization_id","kpi_name","label","calculation_config_json","value","recorded_at","created_at","updated_at"],"description":"Full snapshot (record) of a computed organization/department KPI for analytics dashboarding. All timestamps are ISO8601. Supports referencing to benchmarks, department, and audit context."},"IHealthcarePlatformExternalEmrConnector.IRequest":{"type":"object","properties":{"connector_type":{"type":"string","description":"Filter by connector_type (string, optional). Partial value accepted."},"status":{"type":"string","description":"Filter by status (string, optional)."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Filter by healthcare_platform_organization_id (UUID, optional)."},"search":{"type":"string","description":"Full-text search across connector fields (string, optional)."},"last_sync_at_min":{"type":"string","format":"date-time","description":"Minimum RFC3339 date-time for last_sync_at field (string, optional)."},"last_sync_at_max":{"type":"string","format":"date-time","description":"Maximum RFC3339 date-time for last_sync_at field (string, optional)."},"sort_by":{"type":"string","description":"Sort field (string, optional)."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' or 'desc' (string, optional)."},{"const":"desc","description":"Sort direction: 'asc' or 'desc' (string, optional)."}],"description":"Sort direction: 'asc' or 'desc' (string, optional)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (integer, optional; default: 1)."},"page_size":{"type":"integer","minimum":1,"description":"Number of items per page (integer, optional; default: 20)."}},"required":[],"description":"Search/filter and pagination criteria for external EMR/EHR connector index query. Used to find connectors by type, status, org, and sync date."},"IHealthcarePlatformExternalEmrConnector":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID for this EMR/EHR connector configuration (UUID)."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID this connector belongs to."},"connector_type":{"type":"string","description":"EMR/EHR vendor/platform code (e.g., 'Epic', 'Cerner', 'AllScripts', custom)."},"connection_uri":{"type":"string","maxLength":80000,"description":"Connection URI or integration endpoint for the external EMR/EHR instance (max 80,000 chars)."},"status":{"type":"string","description":"Operational/connection status (e.g., active, pending, failed, disabled)."},"last_sync_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp for last successful sync with this connector (nullable/date-time)."},"created_at":{"type":"string","format":"date-time","description":"When the connector configuration was created (date-time)."},"updated_at":{"type":"string","format":"date-time","description":"Last update time for connector configuration (date-time)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Logical soft-delete marker (nullable date-time; null = active)."}},"required":["id","healthcare_platform_organization_id","connector_type","connection_uri","status","created_at","updated_at"],"description":"External EMR/EHR connector configuration for organization-level interoperability. Stores type, URI, status, last sync, and metadata."},"IHealthcarePlatformExternalEmrConnector.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID this connector is for."},"connector_type":{"type":"string","description":"EMR/EHR vendor/platform code (e.g., 'Epic', 'Cerner', 'AllScripts', custom)."},"connection_uri":{"type":"string","description":"Connection endpoint/URI for the EMR/EHR instance."},"status":{"type":"string","description":"Initial status for this connector (e.g., active, pending, disabled)."}},"required":["healthcare_platform_organization_id","connector_type","connection_uri","status"],"description":"Payload for creating a new external EMR/EHR connector config, specifying org, type, URI, and initial status."},"IHealthcarePlatformExternalEmrConnector.IUpdate":{"type":"object","properties":{"connector_type":{"type":"string","description":"Update the EMR/EHR vendor/platform code (string, optional)."},"connection_uri":{"type":"string","description":"Update the connection endpoint/URI (string, optional)."},"status":{"type":"string","description":"Update the operational status (string, optional)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optionally) set deleted_at for soft-deletion (RFC3339 date-time, optional)."}},"required":[],"description":"Payload for updating an external EMR/EHR connector; allows updating vendor type, URI, status, or soft-deletion."},"IHealthcarePlatformLabIntegration.IRequest":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Filter by organization UUID if provided."},"lab_vendor_code":{"type":"string","description":"Partial match or full search for lab integration provider code (e.g., 'LabCorp', 'Quest')."},"status":{"type":"string","description":"Filter by integration status (e.g., 'active', 'pending', etc.)."},"supported_message_format":{"type":"string","description":"Query for supported message formats (e.g., 'HL7', 'FHIR')."},"search":{"type":"string","description":"General search keyword applied to main index fields."},"created_at_from":{"type":"string","format":"date-time","description":"ISO date string for start of created_at filter."},"created_at_to":{"type":"string","format":"date-time","description":"ISO date string for end of created_at filter."},"page":{"type":"integer","description":"Page number for pagination (starts from 1).","minimum":1},"page_size":{"type":"integer","description":"Page size for pagination.","minimum":1},"sort_by":{"type":"string","description":"Field to sort by (e.g., 'created_at', 'lab_vendor_code')."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction: 'asc' or 'desc'."},{"const":"desc","description":"Sort direction: 'asc' or 'desc'."}],"description":"Sort direction: 'asc' or 'desc'."}},"required":[],"description":"Request DTO for searching, filtering, and paginating lab integration connectors (PATCH endpoint)."},"IHealthcarePlatformLabIntegration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the lab integration connector."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID the integration belongs to."},"lab_vendor_code":{"type":"string","description":"Lab vendor/provider code (e.g., 'LabCorp', 'Quest')."},"connection_uri":{"type":"string","description":"Connection URI or integration endpoint."},"supported_message_format":{"type":"string","description":"Supported message format specification (e.g., 'HL7 V2', 'FHIR R4', 'C-CDA')."},"status":{"type":"string","description":"Current operational status of the integration (e.g., 'active', 'pending', 'disabled')."},"created_at":{"type":"string","format":"date-time","description":"Audit timestamp for when this integration was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update of integration configuration."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp; present if integration is archived, else null."}},"required":["id","healthcare_platform_organization_id","lab_vendor_code","connection_uri","supported_message_format","status","created_at","updated_at","deleted_at"],"description":"Main Lab Integration entity as used in configuration and listing."},"IHealthcarePlatformLabIntegration.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Target organization UUID for the integration."},"lab_vendor_code":{"type":"string","description":"Lab provider code (e.g., 'LabCorp'), unique per organization."},"connection_uri":{"type":"string","description":"Primary integration/API endpoint URI."},"supported_message_format":{"type":"string","description":"Message/document format supported by the integration."},"status":{"type":"string","description":"Operational status of this integration connector (e.g., 'active', 'pending')."}},"required":["healthcare_platform_organization_id","lab_vendor_code","connection_uri","supported_message_format","status"],"description":"DTO for creating a Lab Integration connector record."},"IHealthcarePlatformLabIntegration.IUpdate":{"type":"object","properties":{"lab_vendor_code":{"type":"string","description":"(Optional) Change provider code if needed."},"connection_uri":{"type":"string","description":"(Optional) Update connection endpoint URI."},"supported_message_format":{"type":"string","description":"(Optional) Change supported message/document format."},"status":{"type":"string","description":"(Optional) Update operational status."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"(Optional) Organization UUID (mostly for re-assignment, rare)."}},"required":[],"description":"DTO for updating a Lab Integration connector record.\nAll fields are optional for partial update but at least one must be present."},"IHealthcarePlatformLabOrderTransaction.IRequest":{"type":"object","properties":{"organizationId":{"type":"string","format":"uuid","description":"Filter: Organization UUID for matching lab order transactions."},"labIntegrationId":{"type":"string","format":"uuid","description":"Filter: Lab integration UUID for matching order transactions."},"status":{"type":"string","description":"Filter: Lab order transaction status code (e.g., 'sent', 'acknowledged', 'failed')."},"dateFrom":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: Lower (inclusive) bound for requested_at date."},{"type":"null"}],"description":"Optional start of filter range (inclusive, ISO 8601) for requested_at."},"dateTo":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: Upper (inclusive) bound for requested_at date."},{"type":"null"}],"description":"Optional end of filter range (inclusive, ISO 8601) for requested_at."},"sortBy":{"oneOf":[{"const":"requested_at","description":"Sort key for result ordering."},{"const":"status","description":"Sort key for result ordering."}],"description":"Sort key for result ordering."},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort direction (ascending or descending)."},{"const":"desc","description":"Sort direction (ascending or descending)."}],"description":"Sort direction (ascending or descending)."},"page":{"type":"integer","minimum":1,"description":"Page number, starting from 1."},"pageSize":{"type":"integer","minimum":1,"description":"Number of results per page."}},"required":[],"description":"Request body structure for searching lab order transaction records. Supports advanced filtering, sorting, and pagination. All field values, if present, must match the linked column definitions in the lab order transactions table. Used in dashboard or audit/reporting search contexts."},"IHealthcarePlatformLabOrderTransaction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the lab order transaction."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"ID of the organization that sent the lab order."},"lab_integration_id":{"type":"string","format":"uuid","description":"Lab integration record the order was sent through."},"external_lab_order_id":{"oneOf":[{"type":"string","description":"Order ID as provided by the external lab system."},{"type":"null"}],"description":"Order identifier assigned by external lab or integration. Null if not available."},"status":{"type":"string","description":"Status code for this order transaction (e.g., 'created', 'sent', 'acknowledged', 'failed')."},"status_message":{"oneOf":[{"type":"string","description":"Additional status detail or error message from lab/integration."},{"type":"null"}],"description":"Detail field for error/status context supplied by integration responses. Null if not provided."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when lab order was requested/created in system (ISO 8601)."},"transmitted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp order was sent to external lab."},{"type":"null"}],"description":"When the order was sent to the external lab system. Null if not yet transmitted."},"acknowledged_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when lab acknowledged receipt."},{"type":"null"}],"description":"When external lab/respondent acknowledged the order (ISO 8601). Null if unacknowledged."},"created_at":{"type":"string","format":"date-time","description":"Audit trail: record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Audit trail: last update timestamp for transaction record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp for soft delete (if applied by compliance policy)."},{"type":"null"}],"description":"Soft delete field for archiving. Null if active; present if deleted for compliance retention."}},"required":["id","healthcare_platform_organization_id","lab_integration_id","status","requested_at","created_at","updated_at"],"description":"Lab order transaction record—tracks every transmission to an external laboratory system or provider, capturing send/acknowledge lifecycle and error/status attributes. Maps directly to the healthcare_platform_lab_order_transactions table."},"IHealthcarePlatformLabResultImport.IRequest":{"type":"object","properties":{"organizationId":{"type":"string","format":"uuid","description":"Filter: Organization UUID for lab result import queries."},"labIntegrationId":{"type":"string","format":"uuid","description":"Filter: Lab integration (external provider) UUID in search."},"parsed_status":{"type":"string","description":"Status of the import (e.g., 'parsed', 'error', 'partial')."},"dateFrom":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: Lower bound for imported_at date (inclusive)."},{"type":"null"}],"description":"Start of import timestamp range filter (ISO 8601 or null)."},"dateTo":{"oneOf":[{"type":"string","format":"date-time","description":"Filter: Upper bound for imported_at date (inclusive)."},{"type":"null"}],"description":"End of import timestamp range filter (ISO 8601 or null)."},"sortBy":{"oneOf":[{"const":"imported_at","description":"Key field to sort results by."},{"const":"parsed_status","description":"Key field to sort results by."}],"description":"Key field to sort results by."},"sortDirection":{"oneOf":[{"const":"asc","description":"Sorting direction (ascending/descending)."},{"const":"desc","description":"Sorting direction (ascending/descending)."}],"description":"Sorting direction (ascending/descending)."},"page":{"type":"integer","minimum":1,"description":"Results page number."},"pageSize":{"type":"integer","minimum":1,"description":"Count of results per page."}},"required":[],"description":"Request body structure for searching imported lab result records. Enables flexible querying of import status, source, and event window for audit, integration troubleshooting, or compliance workflows."},"IHealthcarePlatformLabResultImport":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key of the imported lab result event."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID for which the result import is relevant."},"lab_integration_id":{"type":"string","format":"uuid","description":"Lab integration (external vendor/provider) UUID for this import."},"raw_payload_reference":{"type":"string","description":"Blob, URI, or filename pointer to original inbound result payload (may be cloud object/file path)."},"parsed_status":{"type":"string","description":"Result parsing status code (e.g., 'parsed', 'error', 'partial')."},"parsed_message":{"oneOf":[{"type":"string","description":"Details of parsing (success, error description, or partial parse context)."},{"type":"null"}],"description":"Extended status message for import handling, left null for unparsed or successful cases as appropriate."},"imported_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of when the payload was imported into the system."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of import record creation (audit trail)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to this import record (audit trail)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp if the import record is archived/soft-deleted."},{"type":"null"}],"description":"Soft delete archival timestamp (compliance/audit retention). Null if active."}},"required":["id","healthcare_platform_organization_id","lab_integration_id","raw_payload_reference","parsed_status","imported_at","created_at","updated_at"],"description":"Record structure for each imported lab result (e.g., from LabCorp, Quest Diagnostics), storing inbound payload pointers, parsing results, event status, and organizational context. Maps directly to healthcare_platform_lab_result_imports."},"IHealthcarePlatformPharmacyIntegration.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","description":"Organization ID (UUID) to filter pharmacy integrations by organization."},"pharmacy_vendor_code":{"type":"string","description":"Lab/pharmacy network vendor identifier (e.g. 'Surescripts') to filter pharmacy integrations."},"status":{"type":"string","description":"Integration status filter (active, pending, disabled, failed, etc)."},"supported_protocol":{"type":"string","description":"Supported communication protocol (NCPDP, FHIR, HL7, etc) to filter results."},"created_at_from":{"type":"string","format":"date-time","description":"Filter integrations created after this date-time (inclusive, ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Filter integrations created before this date-time (inclusive, ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Restrict to deleted (soft-deleted) integrations if set."},"page":{"type":"integer","minimum":1,"description":"Pagination: results page number, default is 1."},"pageSize":{"type":"integer","minimum":1,"description":"Pagination: number of results per page."},"sort":{"type":"string","description":"Sort field (e.g. 'created_at', '-status', etc), minus means descending."}},"required":[],"description":"Pharmacy integration query/search and pagination parameters."},"IHealthcarePlatformPharmacyIntegration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique integration ID for the pharmacy connector record (primary key, UUID)."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID that owns this integration record and determines data isolation boundary."},"pharmacy_vendor_code":{"type":"string","description":"External or internal pharmacy network vendor identifier (e.g. 'Surescripts', 'NCPDP')."},"connection_uri":{"type":"string","description":"Integration connection URI or endpoint for the pharmacy system (may be API URL, messaging address, etc)."},"supported_protocol":{"type":"string","description":"Supported communication protocol between platform and pharmacy integration (e.g. 'NCPDP', 'FHIR', 'HL7')."},"status":{"type":"string","description":"Operational integration status (active, pending, failed, disabled), used to manage runtime health."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for integration record creation (ISO 8601, UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for this integration record (ISO 8601, UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion marker for compliance retention (ISO 8601, UTC or null if active)."}},"required":["id","healthcare_platform_organization_id","pharmacy_vendor_code","connection_uri","supported_protocol","status","created_at","updated_at"],"description":"Full pharmacy integration connector record for platform/organization, includes core connection, status, and metadata fields."},"IHealthcarePlatformPharmacyIntegration.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization UUID (required, must already exist) for connector ownership and tenancy isolation."},"pharmacy_vendor_code":{"type":"string","description":"Business or network pharmacy vendor identifier for this connector (required, e.g. 'Surescripts')."},"connection_uri":{"type":"string","description":"Full connection endpoint/URI for integration with the pharmacy system."},"supported_protocol":{"type":"string","description":"Integration protocol for the pharmacy system (e.g., 'NCPDP', 'FHIR')."},"status":{"type":"string","description":"Initial status of the integration (e.g., 'active', 'pending', etc)"}},"required":["healthcare_platform_organization_id","pharmacy_vendor_code","connection_uri","supported_protocol","status"],"description":"Payload for new pharmacy connector creation (all required fields)."},"IHealthcarePlatformPharmacyIntegration.IUpdate":{"type":"object","properties":{"connection_uri":{"type":"string","description":"New connection URI or endpoint for the pharmacy system."},"supported_protocol":{"type":"string","description":"New supported protocol for pharmacy integration (e.g., change to 'FHIR')."},"status":{"type":"string","description":"Operational status of the pharmacy connector (update to 'disabled', 'active', etc)."},"pharmacy_vendor_code":{"type":"string","description":"Update the network/vendor code for the connector (rare, must remain unique per org)."}},"required":[],"description":"Update payload for modifying fields of a pharmacy connector; all fields optional."},"IHealthcarePlatformPharmacyTransaction.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization UUID. Optional filter to restrict to a particular organization's transactions."},"pharmacy_integration_id":{"type":"string","format":"uuid","description":"Pharmacy integration identifier. Used to filter by specific pharmacy integration (e.g. Surescripts, NCPDP), optional."},"transaction_type":{"type":"string","description":"Type of pharmacy transaction (e.g. 'new eRx', 'refill', 'status_query'). Optional filter."},"status":{"type":"string","description":"Transaction status for filtering (e.g. 'pending', 'sent', 'acknowledged', 'error'). Optional filter."},"transaction_date_range":{"type":"array","items":{"type":"string","format":"date-time"},"minItems":2,"maxItems":2,"description":"Optional filter for transactions requested/transmitted within a date window. Array of [start, end] ISO 8601 timestamps."},"page":{"type":"integer","description":"Pagination: results page (starts at 1)."},"page_size":{"type":"integer","description":"Pagination: number of results per page."},"sort":{"type":"string","description":"Sort field for results (e.g. 'requested_at DESC')."}},"required":[],"description":"Pharmacy transaction search/filter request supporting filtering by organization, pharmacy integration, transaction type, status, time, and pagination."},"IHealthcarePlatformPharmacyTransaction":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for pharmacy transaction."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization associated with this pharmacy transaction."},"pharmacy_integration_id":{"type":"string","format":"uuid","description":"Reference to pharmacy integration (e.g. Surescripts, NCPDP, etc)."},"transaction_type":{"type":"string","description":"Type of pharmacy operation (e.g., new eRx, refill, cancel, status_query)."},"external_transaction_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"External reference assigned by pharmacy network, if available."},"status":{"type":"string","description":"Transaction status (e.g. pending, sent, acknowledged, error)."},"status_message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Additional status message, error, or processing result text."},"payload_reference":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Pointer/URI to stored payload for debugging/compliance, if available."},"requested_at":{"type":"string","format":"date-time","description":"Timestamp when transaction was initiated/requested."},"transmitted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when transaction was sent to external network, if transmitted."},"acknowledged_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of acknowledgement from pharmacy/external system."},"created_at":{"type":"string","format":"date-time","description":"Audit: when transaction entity created."},"updated_at":{"type":"string","format":"date-time","description":"Audit: latest updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null if active."}},"required":["id","healthcare_platform_organization_id","pharmacy_integration_id","transaction_type","status","requested_at","created_at","updated_at"],"description":"Pharmacy system transaction entity, including type, status, related pharmacy integration, and full audit fields."},"IHealthcarePlatformInsuranceApiIntegration.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization UUID. Optional filter to restrict to a particular organization."},"insurance_vendor_code":{"type":"string","description":"Insurance company/payer code (e.g. Aetna, UHC, etc)."},"status":{"type":"string","description":"Status filter (e.g. 'active', 'test', 'failed')."},"supported_transaction_types":{"type":"string","description":"Comma-separated transaction types supported by the integration (e.g. 'eligibility,claims')."},"page":{"type":"integer","description":"Pagination: results page (starts at 1)."},"page_size":{"type":"integer","description":"Pagination: number of results per page."},"sort":{"type":"string","description":"Sort field (e.g., 'created_at DESC')."}},"required":[],"description":"Search/filter for insurance API integration connectors, accepting paging, sort, org, vendor code, status, and supported transaction types."},"IHealthcarePlatformInsuranceApiIntegration":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for insurance API integration configuration."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization scope for this API connector."},"insurance_vendor_code":{"type":"string","description":"Insurance payer or clearinghouse code (e.g. UHC, Aetna, etc)."},"connection_uri":{"type":"string","description":"API endpoint for insurance eligibility/claim submissions."},"supported_transaction_types":{"type":"string","description":"Comma-separated supported transaction types for this connector (e.g. eligibility,claims,realtime)."},"status":{"type":"string","description":"Integration status (active, test, failed, etc)."},"created_at":{"type":"string","format":"date-time","description":"Record/entity creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp (null = active)."}},"required":["id","healthcare_platform_organization_id","insurance_vendor_code","connection_uri","supported_transaction_types","status","created_at","updated_at"],"description":"Insurance API integration connector entity — details for organization-payer connection and supported transaction types, with audit and status fields."},"IHealthcarePlatformInsuranceApiIntegration.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"The unique organization to which this integration applies. Must be a valid UUID."},"insurance_vendor_code":{"type":"string","description":"Insurance payer or clearinghouse code (e.g., 'UHC', 'Aetna', 'Humana')."},"connection_uri":{"type":"string","description":"API endpoint for real-time eligibility or claim submission."},"supported_transaction_types":{"type":"string","description":"Comma-separated types (e.g., 'eligibility,claims,realtime')."},"status":{"type":"string","description":"Connector status, such as 'active','test','failed'."}},"required":["organization_id","insurance_vendor_code","connection_uri","supported_transaction_types","status"],"description":"Schema for creating a new insurance API integration configuration for an organization. All fields are required."},"IHealthcarePlatformInsuranceApiIntegration.IUpdate":{"type":"object","properties":{"insurance_vendor_code":{"type":"string","description":"Insurance payer or clearinghouse code (e.g., 'UHC', 'Aetna', 'Humana')."},"connection_uri":{"type":"string","description":"API endpoint for real-time eligibility or claim submission."},"supported_transaction_types":{"type":"string","description":"Comma-separated types (e.g., 'eligibility,claims,realtime')."},"status":{"type":"string","description":"Connector status, such as 'active','test','failed'."}},"required":[],"description":"Update schema for insurance API integration. Partial updates supported. All fields optional."},"IHealthcarePlatformDeviceDataIngestion.IRequest":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Optional filter for organization context (UUID)."},"device_type":{"type":"string","description":"Optional filter for device type/category."},"supported_protocol":{"type":"string","description":"Optional filter for supported device integration protocol."},"status":{"type":"string","description":"Optional operational status filter (e.g., 'ready', 'pending', 'error')."},"page":{"type":"integer","description":"Page number for pagination (starting at 1)."},"page_size":{"type":"integer","description":"Desired number of records per page."},"sort":{"type":"string","description":"Sort order (e.g., 'created_at desc')."}},"required":[],"description":"Request structure for paginated/search queries of device data ingestion integrations for listing, filtering, and dashboard/operations support."},"IHealthcarePlatformDeviceDataIngestion":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Owning organization UUID."},"device_type":{"type":"string","description":"Ingested device/system type (e.g., 'vital_monitor', 'ecg')."},"ingest_endpoint_uri":{"type":"string","description":"Device data endpoint URI."},"supported_protocol":{"type":"string","description":"Communication protocol (e.g., 'HL7','FHIR','custom')."},"status":{"type":"string","description":"Current operational status (e.g., 'ready','pending','error')."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp (ISO 8601 or null)."}},"required":["id","healthcare_platform_organization_id","device_type","ingest_endpoint_uri","supported_protocol","status","created_at","updated_at"],"description":"Device data ingestion connector record as stored in the system."},"IHealthcarePlatformDeviceDataIngestion.ICreate":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization to which this device ingestion configuration belongs. Must reference a valid organization in the system."},"device_type":{"type":"string","description":"Type or category of device being ingested (e.g., 'vital_monitor', 'ecg', 'infusion_pump'). Use names as per organizational policy."},"ingest_endpoint_uri":{"type":"string","description":"The secure URI for the medical device data ingestion endpoint. Must be a valid URI (TCP, HTTPS, MQTT, etc.) and conform to platform security policy."},"supported_protocol":{"type":"string","description":"Protocol used for ingestion (e.g., 'HL7', 'FHIR', 'MQTT', 'custom'). Must be recognized by the ingestion system."},"status":{"type":"string","description":"Current status of the ingestion endpoint (e.g., 'ready', 'pending', 'error')."}},"required":["healthcare_platform_organization_id","device_type","ingest_endpoint_uri","supported_protocol","status"],"description":"Request structure for creating a new healthcare platform device data ingestion configuration. Defines the core endpoint and integration metadata required to register a new device stream for a healthcare organization. This enables secure, compliant ingestion of clinical or technical data from external devices or systems."},"IHealthcarePlatformDeviceDataIngestion.IUpdate":{"type":"object","properties":{"device_type":{"type":"string","description":"(Optional) Update device type/category (e.g., 'ecg', 'vital_monitor'). Must conform to org/device master list."},"ingest_endpoint_uri":{"type":"string","description":"(Optional) Update the endpoint URI for data ingestion. Must be a valid, reachable URI."},"supported_protocol":{"type":"string","description":"(Optional) Update protocol for ingestion (e.g., 'HL7', 'FHIR'). Only permitted values allowed per system configuration."},"status":{"type":"string","description":"(Optional) Update the status of the ingestion endpoint (e.g., to 'ready', 'error')."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. ISO date-time to soft delete the configuration, or null to reactivate."}},"required":[],"description":"Update structure for modifying an existing device data ingestion record. Allows for partial updates (PATCH semantics) to operational state or connectivity for a device endpoint. All changes are tracked for compliance and must respect org/integration policies."},"IHealthcarePlatformIntegrationLog.IRequest":{"type":"object","properties":{"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Optional filter: only include integration log records associated with this organization."},"integration_type":{"type":"string","description":"Optional filter by integration type: e.g. 'emr', 'lab', 'insurance', 'pharmacy', 'device'."},"event_status":{"type":"string","description":"Optional filter: only include events with this event status (e.g. 'success', 'failure', 'timeout')."},"event_code":{"type":"string","description":"Optional filter for event code (system or business event identifier)."},"occurred_after":{"type":"string","format":"date-time","description":"Return only integration events occurring after this ISO date/time."},"occurred_before":{"type":"string","format":"date-time","description":"Return only integration events occurring before this ISO date/time."},"page":{"type":"integer","minimum":1,"description":"Page number for paginated result sets (starts at 1)."},"page_size":{"type":"integer","minimum":1,"maximum":500,"description":"Maximum records per page. Default/typical is 50-100."},"order_by":{"type":"string","description":"Sort and order keyword (e.g., 'occurred_at desc', 'event_status asc')."},"search":{"type":"string","description":"Full-text search string to match event messages or metadata."}},"required":[],"description":"Request body for searching, filtering, and sorting healthcare platform integration logs across all supported integration types. Provides structured access to technical and business event audit trail for troubleshooting, monitoring, and compliance."},"IHealthcarePlatformIntegrationLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the integration log record."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the associated organization for log data isolation and audit context."},"integration_type":{"type":"string","description":"Type/category of integration (e.g., 'emr', 'lab', 'insurance', 'device', 'pharmacy'). Must match registered platform integration types."},"referenced_transaction_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional. The UUID of the referenced integration transaction if applicable (for cross-reference)."},"event_status":{"type":"string","description":"Status or resolution code for the event (e.g., 'success', 'failure', 'timeout', 'retry')."},"event_code":{"type":"string","description":"A brief technical or business event code (e.g., system-level error code, workflow status code)."},"event_message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Free text/log message/metadata for error or event context. May contain user-readable output or stack trace."},"occurred_at":{"type":"string","format":"date-time","description":"The actual timestamp (ISO 8601) when the event was observed to occur."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp for audit tracking."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for this integration log entry."}},"required":["id","healthcare_platform_organization_id","integration_type","event_status","event_code","occurred_at","created_at","updated_at"],"description":"Represents a single integration log entry for a healthcarePlatform system audit, showing all technical and business event data required for integration troubleshooting, monitoring, and compliance review. Used for security alerting, incident investigation, and platform health checks."},"IHealthcarePlatformComplianceConsent.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","description":"ID of the organization for which to filter compliance consents (UUID)."},"subject_id":{"type":"string","description":"ID of the consenting subject (user/patient/staff) for filtering (UUID)."},"policy_version_id":{"type":"string","description":"ID of the specific policy version to filter by (UUID)."},"consent_type":{"type":"string","description":"Type/category of consent to filter (e.g., 'privacy', 'treatment', 'research', etc.)."},"granted":{"type":"boolean","description":"True to filter for granted consents, false for revoked."},"consent_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when consent was (to be) granted. Used for date-based filtering."},"revoked_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when consent was revoked, for filtering date ranges."},"expires_at":{"type":"string","format":"date-time","description":"ISO 8601 expiration timestamp filter; consents expiring before/after this."},"page":{"type":"integer","format":"int32","description":"Pagination page number to retrieve."},"limit":{"type":"integer","format":"int32","description":"Maximum number of items to return per page."},"sort":{"type":"string","description":"Sorting field and direction (e.g., 'consent_at:desc' or 'granted:asc')."}},"required":[],"description":"Request shape for searching/filtering compliance consents. Supports filtering by organization, subject, policy, consent type, status, and dates."},"IHealthcarePlatformComplianceConsent":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the compliance consent record (UUID format)."},"organization_id":{"type":"string","description":"Organization to which this consent applies (UUID)."},"subject_id":{"type":"string","description":"ID of the consenting subject (nullable, can refer to patient, staff, or admin)."},"policy_version_id":{"type":"string","description":"Version of the policy agreed to by the subject (UUID)."},"consent_type":{"type":"string","description":"The kind of consent (e.g., privacy, treatment, research, data processing)."},"granted":{"type":"boolean","description":"True if consent is currently granted, false if revoked."},"consent_at":{"type":"string","format":"date-time","description":"Timestamp when consent was granted (ISO 8601)."},"revoked_at":{"type":"string","format":"date-time","description":"Timestamp when consent was revoked (ISO 8601, nullable)."},"revocation_reason":{"type":"string","description":"Reason for revoking consent (if applicable, nullable)."},"expires_at":{"type":"string","format":"date-time","description":"Expiry time for consent, null if perpetual (ISO 8601)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the consent record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the consent record was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"Soft deletion timestamp for compliance retention; null if active."}},"required":["id","organization_id","policy_version_id","consent_type","granted","consent_at","created_at","updated_at"],"description":"Full compliance consent record as stored in the system. All fields correspond to the healthcare_platform_compliance_consents table schema."},"IHealthcarePlatformComplianceConsent.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","description":"Organization issuing/requesting the consent (UUID format)."},"subject_id":{"type":"string","description":"ID of the user/patient/staff giving the consent (nullable)."},"policy_version_id":{"type":"string","description":"Version of policy for consent (UUID format)."},"consent_type":{"type":"string","description":"Type/category of consent (privacy, treatment, research, etc.)."},"granted":{"type":"boolean","description":"True if subject is granting consent, false if revoking upon creation."},"consent_at":{"type":"string","format":"date-time","description":"Timestamp when consent was granted (ISO 8601 format)."},"expires_at":{"type":"string","format":"date-time","description":"Optional expiration timestamp for time-limited consent (ISO 8601)."}},"required":["organization_id","policy_version_id","consent_type","granted","consent_at"],"description":"Payload for creating a new compliance consent record, as when a patient grants or revokes consent at intake or policy update."},"IHealthcarePlatformComplianceConsent.IUpdate":{"type":"object","properties":{"granted":{"type":"boolean","description":"True if consent is (still) granted; false if revoked during update."},"revoked_at":{"type":"string","format":"date-time","description":"Timestamp when consent was revoked. Required when revoking consent."},"revocation_reason":{"type":"string","description":"Reason for revocation of consent (required for audit when revoking)."},"expires_at":{"type":"string","format":"date-time","description":"Optional: to set/update expiration window for the consent (ISO 8601 format)."}},"required":[],"description":"Payload for updating a compliance consent record (e.g., revocation, expiration update, or audit update). All fields optional and only updated if present."},"IHealthcarePlatformComplianceAgreement.IRequest":{"type":"object","properties":{"query":{"type":"string","description":"Query string for search by signer identity or agreement type."},"organization_id":{"type":"string","format":"uuid","description":"Only agreements for this organization_id (UUID)."},"policy_version_id":{"type":"string","format":"uuid","description":"Policy version for filtering."},"agreement_type":{"type":"string","description":"Filter by agreement type (e.g., 'HIPAA', 'terms_of_service')."},"status":{"type":"string","description":"Filter by agreement status (e.g., 'signed', 'pending', 'withdrawn')."},"signer_id":{"type":"string","format":"uuid","description":"Filter by user/staff/patient who signed."},"signed_at_min":{"type":"string","format":"date-time","description":"Return only those agreements signed after this date."},"signed_at_max":{"type":"string","format":"date-time","description":"Return only those agreements signed before this date."},"page":{"type":"integer","minimum":0,"description":"For pagination, page number (zero-based)."},"limit":{"type":"integer","minimum":1,"description":"For pagination, page size."},"sort_by":{"type":"string","description":"Sort field."},"sort_dir":{"oneOf":[{"const":"asc","description":"Sort direction (asc/desc)."},{"const":"desc","description":"Sort direction (asc/desc)."}],"description":"Sort direction (asc/desc)."}},"required":[],"description":"Search/filter and pagination request for compliance agreements. Used for finding agreements by policy, signer, status, etc."},"IHealthcarePlatformComplianceAgreement":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the compliance agreement."},"organization_id":{"type":"string","format":"uuid","description":"Organization to which the agreement applies."},"signer_id":{"type":"string","format":"uuid","description":"User, patient, or staff who signed the agreement."},"policy_version_id":{"type":"string","format":"uuid","description":"Which policy version is being agreed (references policy_versions)."},"agreement_type":{"type":"string","description":"Type of legal or policy agreement (e.g., HIPAA, terms_of_service, research agreement)."},"status":{"type":"string","description":"Current agreement status (e.g., 'signed', 'pending', 'withdrawn', 'expired')."},"signed_at":{"type":"string","format":"date-time","description":"When the agreement was signed (nullable if not yet signed)."},"method":{"type":"string","description":"How the agreement was captured (digital signature, checkbox, physical, etc)."},"expires_at":{"type":"string","format":"date-time","description":"When the agreement will expire if not perpetual (optional)."},"created_at":{"type":"string","format":"date-time","description":"When this agreement record was created."},"updated_at":{"type":"string","format":"date-time","description":"When this agreement record was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"Soft deletion timestamp, if archived."}},"required":["id","organization_id","policy_version_id","agreement_type","status","created_at","updated_at"],"description":"Full compliance agreement record."},"IHealthcarePlatformComplianceAgreement.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"ID of the organization bound to this agreement."},"signer_id":{"type":"string","format":"uuid","description":"User/subject who will sign (nullable for org-level agreements)."},"policy_version_id":{"type":"string","format":"uuid","description":"Which policy version is being agreed to (references policy_versions table)."},"agreement_type":{"type":"string","description":"Type/category of agreement (e.g., 'HIPAA', 'terms_of_service')."},"status":{"type":"string","description":"Current agreement status (e.g., 'pending', 'signed', 'withdrawn', etc)."},"signed_at":{"type":"string","format":"date-time","description":"Timestamp when the agreement was signed (optional, often null until signed)."},"method":{"type":"string","description":"How the agreement was captured (e.g., digital signature, checkbox, wet signature)."},"expires_at":{"type":"string","format":"date-time","description":"When the agreement expires (optional, null for perpetual agreements)."}},"required":["organization_id","policy_version_id","agreement_type","status"],"description":"Payload for creating a compliance agreement."},"IHealthcarePlatformComplianceAgreement.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Agreement status (e.g., 'pending', 'signed', 'withdrawn')."},"signed_at":{"type":"string","format":"date-time","description":"When the agreement was signed, or updated to reflect signature."},"method":{"type":"string","description":"Updated/corrected signature method (digital, checkbox, wet signature)."},"expires_at":{"type":"string","format":"date-time","description":"Optional update to expiration date of this agreement."}},"required":[],"description":"Payload for updating a compliance agreement."},"IHealthcarePlatformPolicyVersion.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Filter by organization UUID for this policy version."},"policy_type":{"type":"string","description":"Filter by policy category/type (e.g., 'privacy', 'HIPAA')."},"version":{"type":"string","description":"Filter by version label (e.g., 'v1.2', '2024-01')."},"title":{"type":"string","description":"Filter by policy document title (search or keyword)."},"effective_at_min":{"type":"string","format":"date-time","description":"Minimum effective_at date/time (ISO 8601)."},"effective_at_max":{"type":"string","format":"date-time","description":"Maximum effective_at date/time (ISO 8601)."},"expires_at_min":{"type":"string","format":"date-time","description":"Minimum expires_at date/time (ISO 8601)."},"expires_at_max":{"type":"string","format":"date-time","description":"Maximum expires_at date/time (ISO 8601)."},"search":{"type":"string","description":"Full-text search across all indexable fields."},"sort_field":{"type":"string","description":"Sort field (e.g., 'effective_at', 'title')."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction (asc or desc)."},{"const":"desc","description":"Sort direction (asc or desc)."}],"description":"Sort direction (asc or desc)."},"page":{"type":"integer","minimum":1,"description":"Page number (1-based)."},"page_size":{"type":"integer","minimum":1,"description":"Number of records per page."}},"required":[],"description":"Advanced search, filter, sort, and pagination criteria for policy version retrieval."},"IHealthcarePlatformPolicyVersion":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique id (UUID) of the policy version."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization's UUID (required)."},"policy_type":{"type":"string","description":"Policy category for this version (required)."},"version":{"type":"string","description":"Version label (required)."},"effective_at":{"type":"string","format":"date-time","description":"Policy effectivity start."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Policy expiration timestamp (if any)."},"title":{"type":"string","description":"Display/legal policy document title (required)."},"document_uri":{"type":"string","description":"URI to full, canonical, audited policy document."},"document_hash":{"type":"string","description":"Cryptographic hash of policy document."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last modification."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If present, record is deleted (soft delete for audit)."}},"required":["id","organization_id","policy_type","version","effective_at","title","document_uri","created_at","updated_at"],"description":"Canonical immutable business entity for versioned compliance, privacy, or data policies."},"IHealthcarePlatformPolicyVersion.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Owning organization UUID."},"policy_type":{"type":"string","description":"Policy category (enum/string; required)."},"version":{"type":"string","description":"Version label (required)."},"effective_at":{"type":"string","format":"date-time","description":"Effective start (ISO 8601 required)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Expiration/retirement (optional/null=indefinite)."},"title":{"type":"string","description":"Human policy/document name (required)."},"document_uri":{"type":"string","description":"URI to official document version."},"document_hash":{"type":"string","description":"Optional hash for tamperproofing."}},"required":["organization_id","policy_type","version","effective_at","title","document_uri"],"description":"DTO contract for new policy version creation."},"IHealthcarePlatformPolicyVersion.IUpdate":{"type":"object","properties":{"version":{"type":"string","description":"Update the version label."},"effective_at":{"type":"string","format":"date-time","description":"Updated effective start."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Updated expiration/removal timestamp (null disables)."},"title":{"type":"string","description":"Update display or legal document name."},"document_uri":{"type":"string","description":"Update URI for the document."},"document_hash":{"type":"string","description":"Update or reset the document hash."}},"required":[],"description":"DTO for allowed policy version modification (null/absent fields not changed)."},"IHealthcarePlatformRiskAssessment.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Restrict to this organization (UUID)"},"department_id":{"type":"string","format":"uuid","description":"Restrict to this department (UUID, optional)"},"assessment_type":{"type":"string","description":"Risk assessment type to filter by (e.g., annual, incident, post-breach)"},"status":{"type":"string","description":"Status filter ('scheduled', 'in_progress', 'completed', etc)"},"risk_level":{"type":"string","description":"Filter by risk level ('low', 'moderate', 'high', 'critical', etc)"},"window_start_from":{"type":"string","format":"date-time","description":"Assessments with start after this ISO date"},"window_start_to":{"type":"string","format":"date-time","description":"Assessments with start before this ISO date"},"window_end_from":{"type":"string","format":"date-time","description":"Assessments with end after this ISO date"},"window_end_to":{"type":"string","format":"date-time","description":"Assessments with end before this ISO date"},"search":{"type":"string","description":"Full-text fuzzy search by methodology, recommendations, etc."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination"},"limit":{"type":"integer","minimum":1,"description":"Page size"},"sort_by":{"type":"string","description":"Field by which to sort (e.g. created_at, status, window_start, etc)"},"order":{"oneOf":[{"const":"asc","description":"Sort direction"},{"const":"desc","description":"Sort direction"}],"description":"Sort direction"}},"required":[],"description":"Search and filtering payload for risk assessment index/pagination."},"IHealthcarePlatformRiskAssessment":{"type":"object","required":["id","organization_id","assessment_type","status","methodology","risk_level","window_start","window_end","created_at","updated_at"],"properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the risk assessment record."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization's UUID, primary scope for the risk assessment."},"assessor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Assessor's user UUID (risk reviewer); may be null if not assigned."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Department's UUID context for the assessment, or null if not present."},"assessment_type":{"type":"string","description":"Risk assessment type or trigger ('annual', 'post-breach', 'incident', etc)."},"status":{"type":"string","description":"Current status in lifecycle ('in_progress', 'completed', 'scheduled', etc)."},"methodology":{"type":"string","description":"Assessment methodology (e.g., 'NIST CSF', 'HIPAA', etc)."},"risk_level":{"type":"string","description":"Resulting risk level ('low', 'moderate', 'high', 'critical')."},"window_start":{"type":"string","format":"date-time","description":"Assessment window start (ISO 8601)."},"window_end":{"type":"string","format":"date-time","description":"Assessment window end (ISO 8601)."},"recommendations":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Summary, recommendations, or results from this assessment."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Deletion/archival timestamp (if soft deleted), else null."}},"description":"Full risk assessment data record representing a compliance, incident, or operational review."},"IHealthcarePlatformRiskAssessment.ICreate":{"type":"object","required":["organization_id","assessment_type","status","methodology","risk_level","window_start","window_end"],"properties":{"organization_id":{"type":"string","format":"uuid","description":"Owning organization's UUID (required)"},"assessment_type":{"type":"string","description":"Type of assessment, per schema and business process."},"status":{"type":"string","description":"Status ('scheduled', 'in_progress', etc – required for record state)"},"methodology":{"type":"string","description":"Assessment methodology (e.g., 'NIST CSF', 'HIPAA', etc)."},"risk_level":{"type":"string","description":"Risk level/outcome for the assessment (as string, e.g., 'moderate', 'high')."},"window_start":{"type":"string","format":"date-time","description":"Assessment window start (ISO 8601)"},"window_end":{"type":"string","format":"date-time","description":"Assessment window end (ISO 8601)"},"assessor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Assessor's user id (optional; can be null)"},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Department context UUID (optional; can be null)"},"recommendations":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Assessment recommendations (optional; can be null)"}},"description":"Request DTO for creating new risk assessment record."},"IHealthcarePlatformRiskAssessment.IUpdate":{"type":"object","properties":{"assessment_type":{"type":"string","description":"Assessment type, if updating."},"status":{"type":"string","description":"Current/updated status, if changing."},"methodology":{"type":"string","description":"Assessment methodology (per schema)"},"risk_level":{"type":"string","description":"Risk level, updated as needed."},"window_start":{"type":"string","format":"date-time","description":"(Optional) Update for start of assessment window (ISO 8601)"},"window_end":{"type":"string","format":"date-time","description":"(Optional) Update for end of assessment window (ISO 8601)"},"assessor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Update to change or unset assessor user"},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Department context to update (or unset)"},"recommendations":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Assessment recommendations, if changing"}},"required":[],"description":"Partial update DTO for risk assessment entity; any property may be set or omitted. No required fields, but at least one should be provided."},"IHealthcarePlatformLegalHold.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"If provided, filter by specific organization UUID."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If provided, filter by department UUID. Null allowed to get org-wide holds."},"status":{"type":"string","description":"Filter by hold status (active, released, denied, expired, etc)."},"subject_type":{"type":"string","description":"Type of subject held (e.g., patient_data, org_data, audit_trail)."},"subject_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by specific subject entity under hold (if applicable)."},"reason":{"type":"string","description":"Filter holds matching a specific reason substring."},"method":{"type":"string","description":"Filter by method used to impose hold (e.g., system, manual, legal request)."},"effective_at_start":{"type":"string","format":"date-time","description":"Only holds with effective_at on or after this ISO datetime."},"effective_at_end":{"type":"string","format":"date-time","description":"Only holds with effective_at on or before this datetime."},"release_at_start":{"type":"string","format":"date-time","description":"Only holds with release_at after this time."},"release_at_end":{"type":"string","format":"date-time","description":"Only holds with release_at before this time."},"page":{"type":"integer","description":"Pagination page number.","minimum":1},"limit":{"type":"integer","description":"Maximum items to return per page.","minimum":1,"maximum":100},"sort_field":{"type":"string","description":"Name of the field to sort results by."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction (asc/desc) for sort_field."},{"const":"desc","description":"Sort direction (asc/desc) for sort_field."}],"description":"Sort direction (asc/desc) for sort_field."}},"required":[],"description":"Request/search/filter criteria for listing or searching legal hold records, supporting pagination, sorting, and advanced filters."},"IHealthcarePlatformLegalHold":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this legal hold record. Always UUID."},"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization for which this legal hold is imposed. Defines tenant boundary for compliance."},"imposed_by_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"ID of the user/staff who imposed this hold, or null if imposed by the system or imported."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department within the organization for scoped holds. Null for org-wide holds."},"subject_type":{"type":"string","description":"Business/entity type affected by the hold (e.g., 'patient_data', 'org_data', etc)."},"subject_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the subject under hold (e.g., patient record, data asset), or null for org-wide/blanket holds."},"reason":{"type":"string","description":"Business or legal justification for the hold, required for audit and compliance review."},"method":{"type":"string","description":"How the hold was imposed (system, legal request, investigation, manual, policy, etc)."},"status":{"type":"string","description":"Current status: 'active', 'released', 'denied', 'expired', etc."},"effective_at":{"type":"string","format":"date-time","description":"Start time when the hold becomes effective (ISO 8601 datetime)."},"release_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End time for the hold, if released/expired (ISO 8601 or null)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Latest update/modify timestamp for this hold (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Time at which this legal hold was soft-deleted (retained for compliance audit)."}},"required":["id","organization_id","subject_type","reason","method","status","effective_at","created_at","updated_at"],"description":"A legal hold record for freezing access to records, assets, or data due to legal, regulatory, or compliance reasons. Maps to healthcare_platform_legal_holds. Contains full scope, lifecycle, audit, and compliance metadata. Subject_type/subject_id define the target; organization_id is always required to define tenant boundary. Status denotes active/released/expired; effective/release windows denote timeline. All times ISO 8601."},"IHealthcarePlatformLegalHold.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization for which this legal hold is imposed (required, tenant boundary)."},"imposed_by_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional UUID of staff member initiating the legal hold (may be null for system/legal requests)."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department UUID within org for department-scoped holds."},"subject_type":{"type":"string","description":"Entity/business type the hold applies to (e.g., patient_data, org_data, audit_trail, external_document)."},"subject_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of subject/entity under hold, or null for organization/dept-wide hold."},"reason":{"type":"string","description":"The business, legal, regulatory, or investigatory reason for imposing the hold. Required for audit."},"method":{"type":"string","description":"Describes how the hold was imposed (e.g., 'system', 'policy', 'legal request', 'manual', etc)."},"status":{"type":"string","description":"Initial business/operational status for the hold (usually 'active', may be 'pending', etc)."},"effective_at":{"type":"string","format":"date-time","description":"Datetime at which the hold becomes effective (ISO 8601, required)."},"release_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime for intended/actual release of the hold (can be null)."}},"required":["organization_id","subject_type","reason","method","status","effective_at"],"description":"Payload to create a new legal hold record, providing all assignable fields except DB-generated IDs and audit timestamps. Required fields: organization_id, subject_type, reason, method, status, effective_at. Optional: department, subject_id (for targeted hold), imposed_by_id (for staff-initiated hold), release_at (for time-boxed or pre-resolved holds)."},"IHealthcarePlatformLegalHold.IUpdate":{"type":"object","properties":{"imposed_by_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of staff imposing or updating the hold, or null if system."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Update department UUID for hold scope."},"subject_type":{"type":"string","description":"Updated type/category the hold covers, if modifying scope."},"subject_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Target subject/entity ID, if changing scope; null for org-wide hold."},"reason":{"type":"string","description":"Rationale, justification, or updated reason for modifying hold."},"method":{"type":"string","description":"Updated method/context for the (revised) hold."},"status":{"type":"string","description":"New hold status (e.g., 'released', 'expired', 'denied', etc), or current status (if correct already)."},"effective_at":{"type":"string","format":"date-time","description":"Update effective_at timestamp for hold window."},"release_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp for closing out the hold; may be set in status update."}},"required":[],"description":"Payload to update (patch) or release/expire a legal hold. All fields optional; only supply values to be updated (partial update allowed)."},"IHealthcarePlatformComplianceReview.IRequest":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization context for filtering compliance reviews."},"hold_id":{"type":"string","format":"uuid","description":"Filter by the associated legal hold ID."},"risk_assessment_id":{"type":"string","format":"uuid","description":"Filter by the associated risk assessment ID."},"reviewer_id":{"type":"string","format":"uuid","description":"Filter by assigned reviewer (user/org assignment ID)."},"review_type":{"type":"string","description":"Filter by the type of review (e.g., periodic, incident, audit)."},"status":{"type":"string","description":"Filter by review status (e.g., scheduled, in_progress, completed, approved)."},"outcome":{"type":"string","description":"Filter by review outcome text."},"reviewed_at_from":{"type":"string","format":"date-time","description":"Start of filter for when review occurred (inclusive, ISO 8601)."},"reviewed_at_to":{"type":"string","format":"date-time","description":"End of filter for when review occurred (inclusive, ISO 8601)."},"created_at_from":{"type":"string","format":"date-time","description":"Start of creation timestamp range (inclusive, ISO 8601)."},"created_at_to":{"type":"string","format":"date-time","description":"End of creation timestamp range (inclusive, ISO 8601)."},"sort_by":{"type":"string","description":"Which field to sort results on (created_at, reviewed_at, etc)."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction (ascending or descending)."},{"const":"desc","description":"Sort direction (ascending or descending)."}],"description":"Sort direction (ascending or descending)."},"page":{"type":"integer","minimum":1,"description":"Pagination: page number, 1-based."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Pagination: number of results per page."}},"required":[],"description":"Search and filtering options for compliance review event queries."},"IHealthcarePlatformComplianceReview":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The unique primary key for the compliance review record."},"organization_id":{"type":"string","format":"uuid","description":"Organization the review is conducted for."},"hold_id":{"oneOf":[{"type":"string","format":"uuid","description":"If applicable, the ID of the legal hold being reviewed."},{"type":"null"}],"description":"If applicable, the ID of the legal hold being reviewed."},"risk_assessment_id":{"oneOf":[{"type":"string","format":"uuid","description":"If applicable, the ID for the associated risk assessment."},{"type":"null"}],"description":"If applicable, the ID for the associated risk assessment."},"reviewer_id":{"oneOf":[{"type":"string","format":"uuid","description":"The assigned reviewer (user/org assignment ID)."},{"type":"null"}],"description":"The assigned reviewer (user/org assignment ID)."},"review_type":{"type":"string","description":"Type of compliance review (periodic, incident, external_audit, follow_up, etc). Required."},"method":{"type":"string","description":"Audit or review methodology (e.g., manual audit, external audit, workflow progress, compliance script). Required."},"status":{"type":"string","description":"The current status of this review (scheduled, in_progress, completed, rejected, approved, followup_required, etc). Required."},"outcome":{"oneOf":[{"type":"string","description":"Outcome or results derived from this review (optional)."},{"type":"null"}],"description":"Outcome or results derived from this review (optional)."},"recommendations":{"oneOf":[{"type":"string","description":"Reviewer recommendations or next steps from the outcome, if any."},{"type":"null"}],"description":"Reviewer recommendations or next steps from the outcome, if any."},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time","description":"When the review was performed (may be null if scheduled/in_progress)."},{"type":"null"}],"description":"When the review was performed (may be null if scheduled/in_progress)."},"comments":{"oneOf":[{"type":"string","description":"Reviewer, auditor, or compliance comments attached to this record."},{"type":"null"}],"description":"Reviewer, auditor, or compliance comments attached to this record."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for creation of this review record."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of this review record's most recent update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp (if record was archived/deleted but persists for compliance)."},{"type":"null"}],"description":"Soft delete timestamp (if record was archived/deleted but persists for compliance)."}},"required":["id","organization_id","review_type","method","status","created_at","updated_at"],"description":"A compliance review, as used for regulatory audit, legal/non-conformance follow-up, or scheduled operational review. Contains metadata, status, reviewer, effective window, findings, recommendations, and audit fields."},"IHealthcarePlatformComplianceReview.ICreate":{"type":"object","properties":{"organization_id":{"type":"string","format":"uuid","description":"Organization the review is for (must exist in org table)."},"hold_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of the legal hold being reviewed, if applicable."},{"type":"null"}],"description":"ID of the legal hold being reviewed, if applicable."},"risk_assessment_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID for the associated risk assessment, if any."},{"type":"null"}],"description":"ID for the associated risk assessment, if any."},"reviewer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Assigned reviewer for this review."},{"type":"null"}],"description":"Assigned reviewer for this review."},"review_type":{"type":"string","description":"Type of compliance review (periodic, incident, audit, etc). Required."},"method":{"type":"string","description":"Audit or review workflow (e.g., manual audit, automated review, external audit)."},"status":{"type":"string","description":"Status for the review as created (scheduled, in_progress, etc). Required."},"outcome":{"oneOf":[{"type":"string","description":"Outcome or result text (optional at creation)."},{"type":"null"}],"description":"Outcome or result text (optional at creation)."},"recommendations":{"oneOf":[{"type":"string","description":"Recommendations output (optional)."},{"type":"null"}],"description":"Recommendations output (optional)."},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Date/time review was performed (optional at creation)."},{"type":"null"}],"description":"Date/time review was performed (optional at creation)."},"comments":{"oneOf":[{"type":"string","description":"Reviewer or process comments at review creation, if any."},{"type":"null"}],"description":"Reviewer or process comments at review creation, if any."}},"required":["organization_id","review_type","method","status"],"description":"Input data for creating a new compliance review event. Required fields: organization_id, review_type, method, status. Optional: reviewer, links to hold or risk assessment, outcome, recs, timestamps, comments."},"IHealthcarePlatformComplianceReview.IUpdate":{"type":"object","properties":{"hold_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID of associated legal hold, if updating association."},{"type":"null"}],"description":"ID of associated legal hold, if updating association."},"risk_assessment_id":{"oneOf":[{"type":"string","format":"uuid","description":"ID for linked risk assessment if updating association."},{"type":"null"}],"description":"ID for linked risk assessment if updating association."},"reviewer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Assigned reviewer for this review."},{"type":"null"}],"description":"Assigned reviewer for this review."},"review_type":{"type":"string","description":"Type of review to update, if changing scope or workflow."},"method":{"type":"string","description":"Updated method to record review was completed (e.g., audit, workflow, script, etc)."},"status":{"type":"string","description":"Update the review status (e.g., completed, rejected, approved, followup_required, etc)."},"outcome":{"oneOf":[{"type":"string","description":"Update the outcome or finding of this review entry."},{"type":"null"}],"description":"Update the outcome or finding of this review entry."},"recommendations":{"oneOf":[{"type":"string","description":"Update reviewer recommendations."},{"type":"null"}],"description":"Update reviewer recommendations."},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Set a date/time the review was performed."},{"type":"null"}],"description":"Set a date/time the review was performed."},"comments":{"oneOf":[{"type":"string","description":"Updated or additional comments for the review record."},{"type":"null"}],"description":"Updated or additional comments for the review record."}},"required":[],"description":"Fields for updating a compliance review event. All fields are optional; only supplied fields will be mutated."},"IHealthcarePlatformAuditLog.IRequest":{"type":"object","properties":{"actor":{"type":"string","description":"User identifier or name of the audit event initiator, if applicable."},"organization":{"type":"string","description":"UUID or code of the organization context for the audit log search."},"action_type":{"type":"string","description":"The type of action performed (e.g., 'LOGIN', 'RECORD_UPDATE', 'CONSENT_CHANGE', etc.)."},"related_entity_type":{"type":"string","description":"Type of entity affected (e.g., 'PATIENT_RECORD', 'CONSENT', 'APPOINTMENT')."},"related_entity_id":{"type":"string","format":"uuid","description":"ID of the affected entity, if searching for records related to a specific object."},"from":{"type":"string","format":"date-time","description":"Start date/time for searching logs (ISO 8601 format)."},"to":{"type":"string","format":"date-time","description":"End date/time for searching logs (ISO 8601 format)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination. Default is 1."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Number of records per page (default: 100, max: 1000)."},"sort":{"type":"string","description":"Sort order: property to sort by, optionally asc/desc (e.g., 'created_at:desc')."}},"required":[],"description":"Schema for searching and filtering audit logs.\n\nSupports filtering by actor, organization, action_type, entity type/id, time range, and paginated listing."},"IHealthcarePlatformAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the audit log record."},"user_id":{"type":"string","format":"uuid","description":"Actor's user ID initiating the audit event (nullable for system/anonymous actions)."},"organization_id":{"type":"string","format":"uuid","description":"Context organization UUID for this audit event (nullable for system/global logs)."},"action_type":{"type":"string","description":"Type of action performed (e.g., 'LOGIN', 'RECORD_UPDATE', 'CONSENT_CHANGE', 'SECURITY_EVENT')."},"event_context":{"type":"string","description":"Structured JSON as string or descriptive context for this event."},"ip_address":{"type":"string","description":"Optional IP address associated with the event, for traceability."},"related_entity_type":{"type":"string","description":"Business entity type affected (e.g., 'PATIENT_RECORD', 'CONSENT', 'APPOINTMENT')."},"related_entity_id":{"type":"string","format":"uuid","description":"Business entity UUID affected (nullable if not entity-scoped)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the audit log was created (ISO 8601, with timezone)."}},"required":["id","action_type","created_at"],"description":"Immutable forensic audit log entry tracking user/system actions and resource events. Used for compliance, investigation, and reporting, as per healthcare_platform_audit_logs schema."},"IHealthcarePlatformAccessLog.IRequest":{"type":"object","properties":{"actor":{"type":"string","description":"User ID or actor searching for access events associated with this user."},"organization":{"type":"string","description":"UUID or code for filtering access logs to a specific organization."},"resource_type":{"type":"string","description":"Type of resource accessed (e.g., 'EHR', 'PATIENT_RECORD', 'IMAGING', 'CONFIG')."},"resource_id":{"type":"string","format":"uuid","description":"ID of the referenced resource if searching for object/record-specific access."},"access_purpose":{"type":"string","description":"Free text or role-based reason for access (e.g., 'consent', 'emergency', 'audit', etc.)."},"from":{"type":"string","format":"date-time","description":"Start datetime for the queried access events."},"to":{"type":"string","format":"date-time","description":"End datetime for the queried access events."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination, starting from 1."},"limit":{"type":"integer","minimum":1,"maximum":1000,"description":"Number of items per page (default: 100, max: 1000)."},"sort":{"type":"string","description":"Sort parameter to order results (e.g., 'created_at:desc')."}},"required":[],"description":"Parameters for searching and filtering access log events (read/view resource actions). Supports filtering by actor, organization, resource type, object ID, access purpose, and time range, with pagination and sorting control."},"IHealthcarePlatformAccessLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the access log entry."},"user_id":{"type":"string","format":"uuid","description":"ID of the user initiating the access."},"organization_id":{"type":"string","format":"uuid","description":"UUID of the organization whose data was accessed."},"resource_type":{"type":"string","description":"Type of resource accessed (e.g., 'EHR', 'PATIENT_RECORD', 'IMAGING', 'CONFIG')."},"resource_id":{"type":"string","format":"uuid","description":"UUID of the referenced resource, if applicable."},"access_purpose":{"type":"string","description":"Business/legal justification for access (e.g., role, consent, emergency, audit, etc.)."},"ip_address":{"type":"string","description":"IP address of the access event, if recorded (may be null for some events)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the access was logged (ISO 8601, with timezone)."}},"required":["id","user_id","organization_id","resource_type","created_at"],"description":"Access log record for resource read/view events. Captures user, resource, purpose, time, and organization context for HIPAA compliance."},"IHealthcarePlatformDataExportLog.IRequest":{"type":"object","properties":{"export_type":{"type":"string","description":"Type of data export to search for (e.g., 'EHR_BULK', 'REPORT')."},"exported_data_scope":{"type":"string","description":"Scope or domain of exported data, if filtering by data scope required."},"status":{"type":"string","description":"Status filter for data export event (e.g., 'COMPLETED', 'FAILED')."},"justification":{"type":"string","description":"Audit reason for export event, for audit/compliance searches."},"destination":{"type":"string","description":"Destination category or channel for export, e.g., 'USER_DOWNLOAD', 'EXTERNAL_API'."},"page":{"type":"integer","description":"Page number for pagination (1-based)."},"size":{"type":"integer","description":"Number of records per page (page size)."},"sort":{"type":"string","description":"Sort ordering field/direction as supported, e.g., 'created_at desc'."},"from_date":{"type":"string","format":"date-time","description":"Search from time window (start time, ISO 8601)."},"to_date":{"type":"string","format":"date-time","description":"Search to time window (end time, ISO 8601)."}},"required":[],"description":"Criteria for searching and paginating healthcare platform data export log events.\nAll properties are optional."},"IHealthcarePlatformDataExportLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for export log event."},"user_id":{"type":"string","format":"uuid","description":"ID of user initiating export event."},"organization_id":{"type":"string","format":"uuid","description":"Organization for which export occurred."},"export_type":{"type":"string","description":"Type/category of export (e.g., 'EHR_BULK', 'REPORT')."},"exported_data_scope":{"type":"string","description":"Domain or the type of data exported."},"justification":{"type":"string","description":"Audit reason for export event as supplied."},"destination":{"type":"string","description":"Where the exported data was sent (download, API, portal, etc.)."},"file_uri":{"type":"string","description":"Location URI of exported data file, if persisted."},"file_size":{"type":"number","description":"Size of exported file (in bytes), if available."},"status":{"type":"string","description":"Final status of export event (e.g., 'COMPLETED', 'FAILED', 'IN_PROGRESS')."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when export record was created."}},"required":["id","user_id","organization_id","export_type","exported_data_scope","justification","destination","status","created_at"],"description":"Log record for a healthcare platform data export activity, capturing audit, status, and destination metadata."},"IHealthcarePlatformSecurityIncident.IRequest":{"type":"object","description":"Request body for searching/filtering/paginating security incidents. Used for incident dashboard, compliance audit reports, and incident investigations. Accepts filter and pagination fields specific to the properties in the Prisma schema and business reporting requirements.\n\nFor full field details, see healthcare_platform_security_incidents. All filtering must respect organizational data boundaries and compliance restrictions. The request reflects typical security incident dashboard query patterns.","properties":{"organization_id":{"type":"string","format":"uuid","description":"Filter by organization (uuid, not null if filtering to org-specific events)."},"incident_type":{"type":"string","description":"Filter by incident type (see codebook for available values)."},"status":{"type":"string","description":"Filter by incident status (multiple status codes allowed if required)."},"severity":{"type":"string","description":"Filter by severity: 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL'."},"opened_at_from":{"type":"string","format":"date-time","description":"Start of the opened_at time window, ISO8601."},"opened_at_to":{"type":"string","format":"date-time","description":"End of the opened_at time window, ISO8601."},"summary_contains":{"type":"string","description":"Full-text search on incident summary/headline text."},"page":{"type":"integer","description":"Page number for pagination."},"page_size":{"type":"integer","description":"Page size for pagination."},"sort_by":{"type":"string","description":"Field name to sort by, defaults to 'opened_at'."},"sort_order":{"type":"string","description":"Sort direction (asc or desc)."}},"required":[]},"IHealthcarePlatformSecurityIncident":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique incident identifier (primary key)."},"opened_by_user_id":{"type":"string","format":"uuid","description":"User who reported or triggered the event, if applicable."},"organization_id":{"type":"string","format":"uuid","description":"Organization where the incident applies."},"incident_type":{"type":"string","description":"Classification of security incident (e.g., 'FAILED_LOGIN', 'BREACH_SUSPECTED')."},"summary":{"type":"string","description":"Incident summary/headline for quick reference."},"details":{"type":"string","description":"Full incident details, e.g., event context, system log fragments (may be redacted for PHI)."},"status":{"type":"string","description":"Status of incident (e.g., 'OPEN', 'INVESTIGATING', 'RESOLVED', 'ESCALATED')."},"severity":{"type":"string","description":"Incident severity as determined from business rules (e.g., 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL')."},"opened_at":{"type":"string","format":"date-time","description":"Datetime when incident was reported/opened."},"closed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime when incident was resolved/closed (NULL if still open)."},"updated_at":{"type":"string","format":"date-time","description":"Datetime when incident status or details were last updated."}},"required":["id","organization_id","incident_type","summary","status","severity","opened_at","updated_at"],"description":"Incident event representing a security or compliance event in the healthcare platform system."},"IHealthcarePlatformEmergencyAccessOverride.IRequest":{"type":"object","description":"Request body for searching/filtering/paginating emergency access override audit records. Used for dashboards, compliance review, and regulatory reporting.\n\nAccepts industry-standard search fields based on healthcare_platform_emergency_access_overrides table, including organization, user, started/ended/reviewed windows, reason pattern, and override scope. All filtering is RBAC-guarded and observe full audit and tenant boundaries.\n\nSee full table documentation for all query logic and security rules.","properties":{"organization_id":{"type":"string","format":"uuid","description":"Filter by organization UUID."},"user_id":{"type":"string","format":"uuid","description":"Filter by user UUID who performed the override."},"reason":{"type":"string","description":"Searches for override records with reason matching this (partial) text."},"override_scope":{"type":"string","description":"Scope or resource targeted in the override (pattern match)."},"override_start_at_from":{"type":"string","format":"date-time","description":"Override start window start (inclusive)."},"override_start_at_to":{"type":"string","format":"date-time","description":"Override start window end (inclusive)."},"override_end_at_from":{"type":"string","format":"date-time","description":"Override end window start (inclusive, for ended windows only)."},"override_end_at_to":{"type":"string","format":"date-time","description":"Override end window end (inclusive, for ended windows only)."},"reviewed_by_user_id":{"type":"string","format":"uuid","description":"User UUID for post-incident reviewer (compliance/audit scope)."},"reviewed_at_from":{"type":"string","format":"date-time","description":"Review completion window start (inclusive)."},"reviewed_at_to":{"type":"string","format":"date-time","description":"Review completion window end (inclusive)."},"page":{"type":"integer","description":"Page number for pagination."},"page_size":{"type":"integer","description":"Page size for pagination."},"sort_by":{"type":"string","description":"Field by which to sort results, default = \"override_start_at\"."},"sort_order":{"type":"string","description":"Sort direction (asc or desc)."}},"required":[]},"IHealthcarePlatformEmergencyAccessOverride":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Override event UUID"},"user_id":{"type":"string","format":"uuid","description":"User UUID who broke-glass"},"organization_id":{"type":"string","format":"uuid","description":"Organization UUID in which event occurred"},"reason":{"type":"string","description":"Reason for emergency access"},"override_scope":{"type":"string","description":"Scope/description of overridden access"},"override_start_at":{"type":"string","format":"date-time","description":"Start time of emergency override"},"override_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End time; null if still open"},"reviewed_by_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reviewer user UUID (if reviewed; null if pending)"},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Review completion timestamp"},"created_at":{"type":"string","format":"date-time","description":"Audit record creation"}},"required":["id","user_id","organization_id","reason","override_scope","override_start_at","override_end_at","created_at"],"description":"Emergency access override audit record (break-the-glass event)"},"IHealthcarePlatformAuditLogArchive.IRequest":{"type":"object","description":"Request body for searching/filtering/paginating audit log archives.\n\nUsed in compliance dashboards and regulatory retention reporting. Accepts all industry-required filters (org, archive_type, URI pattern, date ranges) as well as pagination options for dashboards, batch review, or regulatory reporting. For details, review audit_log_archive schema documentation.","properties":{"organization_id":{"type":"string","format":"uuid","description":"Filter by org id."},"archive_type":{"type":"string","description":"Filter by archive_type, e.g., \"access\", \"record\"."},"created_at_from":{"type":"string","format":"date-time","description":"Only include after this datetime (inclusive/ISO8601)."},"created_at_to":{"type":"string","format":"date-time","description":"Only include before this datetime (inclusive/ISO8601)."},"retention_expiry_at_from":{"type":"string","format":"date-time","description":"Retention window start (filter includes items with expiry_at >= this; ISO8601)."},"retention_expiry_at_to":{"type":"string","format":"date-time","description":"Retention window end (inclusive; expiry <= this)."},"archive_file_uri_contains":{"type":"string","description":"Full-text substring match on file uri/path/source."},"page":{"type":"integer","description":"Page number for pagination."},"page_size":{"type":"integer","description":"Page size for pagination."},"sort_by":{"type":"string","description":"Sort field name (e.g., 'created_at', 'archive_type')."},"sort_order":{"type":"string","description":"Sort direction: 'asc', 'desc'."}},"required":[]},"IHealthcarePlatformAuditLogArchive":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Archive record UUID"},"organization_id":{"type":"string","format":"uuid","description":"Owning organization UUID"},"archive_type":{"type":"string","description":"Archive type"},"archive_file_uri":{"type":"string","description":"Storage URI for archive file"},"retention_expiry_at":{"type":"string","format":"date-time","description":"When this archive can be deleted (ISO 8601)"},"created_at":{"type":"string","format":"date-time","description":"Archive creation datetime"}},"required":["id","organization_id","archive_type","archive_file_uri","retention_expiry_at","created_at"],"description":"Audit log archive metadata record."},"IHealthcarePlatformNotification.IRequest":{"type":"object","properties":{"page":{"description":"Page number for results. Used in paginated notification listing endpoints, optional, must be >= 1 when provided.","type":"integer","minimum":1},"limit":{"description":"Maximum number of results per page. Used in paginated notification listing, optional. Organization can set a default or max, e.g. 10-100.","type":"integer","minimum":1},"sortField":{"description":"Field in IHealthcarePlatformNotification by which to sort result set (e.g., 'createdAt', 'deliveryStatus', 'critical'). Sorting is optional, and implementation may restrict sort fields.","type":"string"},"sortOrder":{"oneOf":[{"const":"asc","description":"Sort order for result set if sortField is specified. Defaults to 'desc' if omitted. Enum constrained to 'asc' | 'desc'."},{"const":"desc","description":"Sort order for result set if sortField is specified. Defaults to 'desc' if omitted. Enum constrained to 'asc' | 'desc'."}],"description":"Sort order for result set if sortField is specified. Defaults to 'desc' if omitted. Enum constrained to 'asc' | 'desc'."},"notificationType":{"description":"Type/category of the notification for filtering (e.g., 'appointment_reminder', 'billing_alert'). Enables users/admins to filter by event type as used in notification creation.","type":"string"},"notificationChannel":{"description":"Delivery channel for the notification (e.g., 'in_app', 'email', 'sms', 'push', etc.). Filtering enables restricting results to notifications by preferred channel.","type":"string"},"recipientUserId":{"description":"Unique identifier (UUID) of the recipient user whose notifications are being queried. Used to filter to the caller or, for admins, to other users of their organization.","type":"string","format":"uuid"},"organizationId":{"description":"Unique identifier (UUID) of the organization context for filtering. Restricts search to a single organization's notification events.","type":"string","format":"uuid"},"deliveryStatus":{"description":"Current lifecycle status of notification: e.g., 'pending', 'in_progress', 'delivered', 'failed', 'acknowledged', etc. Used to locate notifications by status.","type":"string"},"critical":{"description":"Whether the notification is marked as critical (true) or routine (false). Used to restrict results to high-priority/incident notifications.","type":"boolean"},"startDate":{"description":"ISO8601 date/time string (inclusive) for filtering notifications with createdAt/deliveredAt after this point. Used for date window queries.","type":"string","format":"date-time"},"endDate":{"description":"ISO8601 date/time string (inclusive) for filtering notifications created/delivered before this point. Used for date range queries.","type":"string","format":"date-time"}},"required":[],"description":"Structure for searching/filtering notifications. Used for paginated list endpoints where users, admins, or auditors need to search notifications by recipient, type, status, date, and channel. All properties optional, with pagination enforced by backend. Must follow platform security policy for user/data isolation."},"IHealthcarePlatformNotification":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification event."},"recipientUserId":{"type":"string","format":"uuid","description":"UUID of the notification's recipient user (staff, patient, etc.)."},"organizationId":{"type":"string","format":"uuid","description":"UUID of the target organization."},"senderUserId":{"type":"string","format":"uuid","description":"UUID of the sender (if available, e.g., staff sending a message to patient)."},"notificationType":{"type":"string","description":"Logical event/type code for the notification (e.g., 'appointment_reminder', 'billing_alert', etc.)"},"notificationChannel":{"type":"string","description":"How notification is or was delivered (e.g., 'in_app', 'email', 'sms', 'push', 'phone_call')."},"subject":{"type":"string","description":"Notification subject for email/SMS/push display (if provided)."},"body":{"type":"string","description":"Full message body for the notification as delivered."},"payloadLink":{"type":"string","description":"URL or internal reference for details/call-to-action (e.g., link to appointment, bill, or compliance document)."},"critical":{"type":"boolean","description":"True if the notification is critical for SLA/compliance, requiring user acknowledgement or escalation."},"deliveryStatus":{"type":"string","description":"Current status of notification delivery ('pending','delivered','failed','acknowledged','escalated')."},"deliveryAttempts":{"type":"integer","description":"Total count of automated delivery attempts for the notification. Incremented on each retry."},"deliveredAt":{"type":"string","format":"date-time","description":"Timestamp when notification was successfully delivered, or null if not delivered."},"lastDeliveryAttemptAt":{"type":"string","format":"date-time","description":"Timestamp of last delivery attempt for auditing SLA."},"acknowledgedAt":{"type":"string","format":"date-time","description":"When user explicitly acknowledged notification (critical ones, as required by policy)."},"snoozedUntil":{"type":"string","format":"date-time","description":"If reminder/notification was snoozed, indicates next attempt or when snooze expires."},"escalationEventId":{"type":"string","format":"uuid","description":"If delivered notification resulted in escalation for compliance, points to escalation event."},"createdAt":{"type":"string","format":"date-time","description":"Timestamp when notification was created."},"updatedAt":{"type":"string","format":"date-time","description":"Timestamp when notification was last updated (e.g., after deliveryStatus or escalation changes)."},"deletedAt":{"type":"string","format":"date-time","description":"If set, notification was soft-deleted/archived for compliance retention."}},"required":["id","notificationType","notificationChannel","body","critical","deliveryStatus","deliveryAttempts","createdAt","updatedAt"],"description":"Represents a notification event in the healthcare platform, including all metadata for delivery, escalation, audit, and visibility to staff/patient. Used in notification APIs for CRUD, display, and search operations. Field definitions map exactly to schema and are auditable for compliance."},"IHealthcarePlatformNotification.ICreate":{"type":"object","properties":{"recipientUserId":{"type":"string","format":"uuid","description":"UUID of the notification recipient. Required unless org-level broadcast/policy alert."},"organizationId":{"type":"string","format":"uuid","description":"UUID of the target organization recipient (optional, for org-level broadcast)."},"senderUserId":{"type":"string","format":"uuid","description":"UUID of the notification sender, if set (e.g., staff sending to patient, optional in system triggers)."},"notificationType":{"type":"string","description":"Logical event type code for this notification ('appointment_reminder', 'billing_alert', 'info', etc.). Required."},"notificationChannel":{"type":"string","description":"Delivery channel code (e.g., 'email','sms','in_app','push','phone_call'). Required, must be a valid channel defined in system config/business policy."},"subject":{"type":"string","description":"Notification subject, used in email/SMS/push message display. Optional in in-app notifications."},"body":{"type":"string","description":"Full notification message/text. Required in all notifications."},"payloadLink":{"type":"string","description":"URL or path to further details for user action (appointment, bill details, regulatory doc, etc.). Optional."},"critical":{"type":"boolean","description":"True if this is a critical notification requiring explicit acknowledgement/escalation (e.g., compliance, incident). Defaults to false if unset."}},"required":["notificationType","notificationChannel","body"],"description":"Payload for creating a new notification to staff, patient, or user. Used in notification creation APIs—delivery channel, type, and body required; subject, recipient, sender, and critical are optional or required per business rules. Maps to healthcare_platform_notifications table on creation."},"IHealthcarePlatformNotification.IUpdate":{"type":"object","properties":{"notificationType":{"type":"string","description":"If provided, overwrites notification event/type code for business logic tracking."},"notificationChannel":{"type":"string","description":"If provided, updates notification delivery channel (e.g., 'in_app','sms')."},"subject":{"type":"string","description":"If present, updates the subject for email/push notifications."},"body":{"type":"string","description":"If present, updates the message body."},"payloadLink":{"type":"string","description":"If present, updates the reference/call-to-action link for the notification."},"deliveryStatus":{"type":"string","description":"Overrides delivery status for administrative intervention ('pending','delivered','failed','acknowledged','escalated')."},"deliveryAttempts":{"type":"integer","description":"If present, updates the attempt counter."},"deliveredAt":{"type":"string","format":"date-time","description":"If set, updates when notification was delivered."},"lastDeliveryAttemptAt":{"type":"string","format":"date-time","description":"If set, updates timestamp of last delivery attempt."},"acknowledgedAt":{"type":"string","format":"date-time","description":"If set, sets when user acknowledged receipt (for critical notifications)."},"snoozedUntil":{"type":"string","format":"date-time","description":"If set, modifies notification’s snooze/until property."},"escalationEventId":{"type":"string","format":"uuid","description":"If set, updates link to an escalation event for compliance and tracking."}},"required":[],"description":"DTO for updating fields of an existing notification. All fields optional; backend logic enforces which properties can be updated per notification lifecycle, status, and compliance policy. Used in notification update/patch endpoints."},"IHealthcarePlatformNotificationPreference.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"The user ID whose notification preferences are being queried."},"organization_id":{"type":"string","format":"uuid","description":"The organization to which the preference applies."},"notification_channel":{"type":"string","description":"The notification delivery channel (e.g., 'email', 'sms', 'in_app', etc.)."},"notification_type":{"type":"string","description":"The logical type/category of notification (e.g., 'appointment_reminder', 'billing_alert', etc.)."},"enabled":{"type":"boolean","description":"Whether this preference is currently active for delivery."},"page":{"type":"integer","description":"Page number for pagination.","minimum":1},"pageSize":{"type":"integer","description":"Number of records to return per page.","minimum":1},"sort":{"type":"string","description":"Optional sort field: e.g., 'created_at desc' or 'notification_type asc'."}},"required":[],"description":"Request schema for searching/filtering notification preferences. Use in platform or user preference management UIs."},"IHealthcarePlatformNotificationPreference":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the preference record."},"user_id":{"type":"string","format":"uuid","description":"The user to whom this notification preference belongs."},"organization_id":{"type":"string","format":"uuid","description":"The organization scope for this preference, if not platform-global."},"notification_channel":{"type":"string","description":"The notification delivery channel (e.g., 'email', 'sms', 'in_app', etc.)."},"notification_type":{"type":"string","description":"The logical notification type (e.g., 'appointment_reminder', 'billing_alert')."},"enabled":{"type":"boolean","description":"Whether this preference is currently active for delivery."},"mute_start":{"oneOf":[{"type":"string","format":"date-time","description":"Window start for muting notifications (Do Not Disturb) in ISO 8601 date-time."},{"type":"null","description":"Indicates no Do Not Disturb window start is set."}],"description":"The window start for Do Not Disturb (DnD) notification-silencing, if configured. Use ISO 8601 date-time or null."},"mute_end":{"oneOf":[{"type":"string","format":"date-time","description":"Window end for muting notifications (Do Not Disturb) in ISO 8601 date-time."},{"type":"null","description":"Indicates no Do Not Disturb window end is set."}],"description":"The window end for Do Not Disturb (DnD) notification-silencing, if configured. Use ISO 8601 date-time or null."},"escalation_policy":{"oneOf":[{"type":"string","description":"Escalation policy/settings for this notification type, if applicable."},{"type":"null","description":"No escalation policy set for this preference."}],"description":"The escalation policy or settings to apply to this notification preference, or null for system default."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this preference record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to this notification preference."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete timestamp for compliance/audit retention."},{"type":"null","description":"Preference record is currently active/not deleted."}],"description":"Soft-delete timestamp for compliance/audit retention, if record is deactivated/erased."}},"required":["id","user_id","notification_channel","notification_type","enabled","created_at","updated_at"],"description":"A user's or organization's notification delivery/channel preference settings for specific notification types, channels, and DnD/escalation policies."},"IHealthcarePlatformNotificationPreference.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Target user for the new notification preference (must exist in users table)."},"organization_id":{"type":"string","format":"uuid","description":"Organization for the preference (nullable for global)."},"notification_channel":{"type":"string","description":"Delivery channel (email, sms, in_app, etc.)."},"notification_type":{"type":"string","description":"Notification type/category (e.g., appointment_reminder)."},"enabled":{"type":"boolean","description":"Initial enabled/disabled state."},"mute_start":{"oneOf":[{"type":"string","format":"date-time","description":"Mute window start (Do Not Disturb) ISO 8601 datetime, or null."},{"type":"null","description":"No mute window start is set for DnD."}],"description":"Set the Do Not Disturb window start for notifications in ISO 8601 date-time format, or null for none."},"mute_end":{"oneOf":[{"type":"string","format":"date-time","description":"Mute window end (Do Not Disturb) ISO 8601 datetime, or null."},{"type":"null","description":"No mute window end is set for DnD."}],"description":"Set the Do Not Disturb window end for notifications in ISO 8601 date-time format, or null for none."},"escalation_policy":{"oneOf":[{"type":"string","description":"Escalation policy identifier or override for this preference."},{"type":"null","description":"No escalation policy for this preference."}],"description":"Escalation policy identifier or business logic setting, if any, or null for default."}},"required":["user_id","notification_channel","notification_type","enabled"],"description":"Creation DTO for new notification preference, as used in user- or admin-driven settings."},"IHealthcarePlatformNotificationPreference.IUpdate":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Change the enabled/disabled state of this notification preference."},"mute_start":{"oneOf":[{"type":"string","format":"date-time","description":"Update Do Not Disturb start time (ISO 8601 or null)."},{"type":"null","description":"Clear any configured Do Not Disturb start time."}],"description":"Update the notification Do Not Disturb start time (ISO 8601 datetime or null for none)."},"mute_end":{"oneOf":[{"type":"string","format":"date-time","description":"Update Do Not Disturb end time (ISO 8601 or null)."},{"type":"null","description":"Clear any configured Do Not Disturb end time."}],"description":"Update the notification Do Not Disturb end time (ISO 8601 datetime or null for none)."},"escalation_policy":{"oneOf":[{"type":"string","description":"Change escalation policy or profile applied to this preference."},{"type":"null","description":"Clear any custom escalation policy (use system/org default)."}],"description":"Set or clear the escalation policy/profile for this preference (string or null for default)."}},"required":[],"description":"Update DTO for notification preference record to apply user, escalation, or DnD changes."},"IHealthcarePlatformNotificationHistory.IRequest":{"type":"object","properties":{"notificationId":{"type":"string","format":"uuid","description":"Filter by parent notification unique identifier (uuid, optional)."},"eventType":{"type":"string","description":"Filter by event type (delivered, failed, retried, acknowledged, snoozed, bounced, escalated, etc.), optional."},"deliveryStatus":{"type":"string","description":"Filter by delivery status after this event, optional."},"deliveryChannel":{"type":"string","description":"Filter by delivery channel (email, sms, in_app, push, etc.), optional."},"eventTimeFrom":{"type":"string","format":"date-time","description":"Start of event time window (ISO 8601 date-time, optional)."},"eventTimeTo":{"type":"string","format":"date-time","description":"End of event time window (ISO 8601 date-time, optional)."},"recipientId":{"type":"string","format":"uuid","description":"Filter by recipient user or staff id (uuid, optional)."},"page":{"type":"integer","format":"int32","minimum":1,"description":"Page number for pagination (optional, default is 1)."},"pageSize":{"type":"integer","format":"int32","minimum":1,"maximum":200,"description":"Number of records per page (optional, default is 50)."},"sortField":{"type":"string","description":"Field to sort results by (optional)."},"sortOrder":{"oneOf":[{"const":"asc","description":"'asc' or 'desc' for result sorting order (optional)."},{"const":"desc","description":"'asc' or 'desc' for result sorting order (optional)."}],"description":"'asc' or 'desc' for result sorting order (optional)."}},"required":[],"description":"Search and filtering options for retrieving notification delivery history records.\n- All fields are optional, and when provided, each is used as a filter or window.\n- Used for operational review, compliance, audit, and troubleshooting of notification delivery flows."},"IHealthcarePlatformNotificationHistory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification history event, as found in the healthcare_platform_notification_history table."},"notification_id":{"type":"string","format":"uuid","description":"ID of the parent notification event this history record belongs to."},"event_type":{"type":"string","description":"Describes the type of history event (e.g., delivered, failed, acknowledged, snoozed, escalated, retried, etc.)."},"event_time":{"type":"string","format":"date-time","description":"Timestamp for when the delivery attempt or status event was recorded. ISO 8601 format."},"delivery_channel":{"type":"string","description":"Delivery channel via which the notification/event was attempted (e.g., email, sms, in_app, push, phone_call, postal, fax)."},"delivery_status":{"type":"string","description":"Delivery status at the time of the event (e.g., sent, failed, acknowledged, snoozed, escalated, delivered)."},"details":{"type":"string","description":"Extended information or failure message, such as error text or user agent involved in the attempt. May contain payload snapshot or operational info."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."}},"required":["id","notification_id","event_type","event_time","delivery_channel","delivery_status","created_at"],"description":"Represents a single notification delivery history record for audit, delivery status tracking, and SLA/incident analysis. (Schema from healthcare_platform_notification_history table.)"},"IHealthcarePlatformEscalationEvent.IRequest":{"type":"object","properties":{"sourceNotificationId":{"type":"string","format":"uuid","description":"Filter by source notification id (uuid), i.e., which notification caused or triggered the escalation event."},"targetUserId":{"type":"string","format":"uuid","description":"Filter by target user id assigned the escalation (uuid, optional)."},"targetRoleId":{"type":"string","format":"uuid","description":"Filter by target role id assigned the escalation (uuid, optional)."},"escalationType":{"type":"string","description":"Filter by escalation type (e.g., sla_violation, breach, compliance_required, business_policy, system_alert, etc.), optional."},"escalationLevel":{"type":"string","description":"Filter by severity or escalation level (normal, urgent, critical, info, etc.), optional."},"deadlineFrom":{"type":"string","format":"date-time","description":"Lower bound for escalation event deadline (ISO 8601 date-time, optional)."},"deadlineTo":{"type":"string","format":"date-time","description":"Upper bound for escalation event deadline (ISO 8601 date-time, optional)."},"status":{"type":"string","description":"Filter by escalation resolution status (open, in_progress, resolved, expired, error, dismissed, etc.), optional."},"createdAtFrom":{"type":"string","format":"date-time","description":"Start of escalation event creation window (optional, ISO 8601)."},"createdAtTo":{"type":"string","format":"date-time","description":"End of escalation event creation window (optional, ISO 8601)."},"page":{"type":"integer","format":"int32","minimum":1,"description":"Page number for pagination (optional, default=1)."},"pageSize":{"type":"integer","format":"int32","minimum":1,"maximum":200,"description":"Page size for pagination (optional, default=50, max=200)."},"sortField":{"type":"string","description":"Result sort field (optional, e.g., deadline_at, created_at, escalation_level)."},"sortOrder":{"oneOf":[{"const":"asc","description":"'asc' or 'desc' for sort order (optional)."},{"const":"desc","description":"'asc' or 'desc' for sort order (optional)."}],"description":"'asc' or 'desc' for sort order (optional)."}},"required":[],"description":"Advanced search, filtering and pagination options for escalation event query.\n- Used for compliance, audit, and operational monitoring of escalations.\n- All fields are optional, and when provided, are used as window or filter."},"IHealthcarePlatformEscalationEvent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the escalation event (from healthcare_platform_escalation_events table)."},"source_notification_id":{"type":"string","format":"uuid","description":"Which notification triggered escalation, if applicable."},"target_user_id":{"type":"string","format":"uuid","description":"User assigned to handle escalation, nullable."},"target_role_id":{"type":"string","format":"uuid","description":"Targeted role for escalation, nullable."},"escalation_type":{"type":"string","description":"Describes why escalation occurred (e.g., sla_violation, breach, compliance_required, business_policy)."},"escalation_level":{"type":"string","description":"Severity/priority (e.g., critical, urgent, normal, info)."},"deadline_at":{"type":"string","format":"date-time","description":"Time by which escalation must be handled/acknowledged."},"resolution_status":{"type":"string","description":"Current status (open, in_progress, resolved, expired, error)."},"resolution_time":{"type":"string","format":"date-time","description":"When escalation was resolved (nullable)."},"resolution_notes":{"type":"string","description":"Disposition, root cause, or audit notes for how escalation resolved."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for escalation record creation."}},"required":["id","escalation_type","escalation_level","deadline_at","resolution_status","created_at"],"description":"Represents an escalation event record for compliance/incident management, as in healthcare_platform_escalation_events. Tracks links to notifications, roles, audit notes, and escalation handling metadata."},"IHealthcarePlatformEscalationEvent.ICreate":{"type":"object","properties":{"source_notification_id":{"type":"string","format":"uuid","description":"Source notification that triggered escalation. References a notification event record."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"User assigned to handle escalation. Nullable for role-based escalations."},"target_role_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If escalated to a role (e.g., compliance, orgAdmin). Nullable for user-based escalations."},"escalation_type":{"type":"string","description":"Reason/type for escalation (e.g., sla_violation, breach, compliance_required, ack_timeout, business_policy, system_alert)."},"escalation_level":{"type":"string","description":"Severity/priority (normal, urgent, critical, info)."},"deadline_at":{"type":"string","format":"date-time","description":"Time by which action/acknowledgement is due (ISO 8601 date-time)."},"resolution_status":{"type":"string","description":"Resolution status (open, in_progress, resolved, expired, error, dismissed)."},"resolution_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when escalation was resolved/closed (nullable if still open)."},"resolution_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-entered disposition, root cause, or audit note (nullable)."}},"required":["source_notification_id","escalation_type","escalation_level","deadline_at","resolution_status"],"description":"Request body for creating a new escalation event. Maps to healthcare_platform_escalation_events. Required: notification reference and escalation reason, level, deadline, status. Optional: assignment to user or role, resolution fields. Excludes system-generated fields (id, created_at)."},"IHealthcarePlatformEscalationEvent.IUpdate":{"type":"object","properties":{"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Update the user assigned to handle escalation."},"target_role_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Update escalation assignment to a role (nullable)."},"escalation_type":{"type":"string","description":"Update the escalation event type."},"escalation_level":{"type":"string","description":"Update the escalation priority/severity."},"deadline_at":{"type":"string","format":"date-time","description":"Extend/change time for escalation to be resolved (ISO 8601)."},"resolution_status":{"type":"string","description":"Update the status (e.g., in_progress, resolved, expired, error, dismissed)."},"resolution_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Update timestamp of resolution (nullable)."},"resolution_notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update notes/summary for escalation event (nullable)."}},"required":[],"description":"Body for updating an escalation event (partial allowed). Only mutable fields permitted: assignment, resolution data, notes, escalation_type, escalation_level, and deadline."},"IHealthcarePlatformReminder.IRequest":{"type":"object","properties":{"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"User to receive this reminder ("},"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Scope organization for the reminder (nullable for global/system reminders)."},"reminder_type":{"type":"string","description":"Class/category (appointment, medication, task, compliance, followup, checkin, survey, job, etc). Partial/keyword search permitted."},"reminder_message":{"type":"string","description":"Filter by reminder message content (supports partial/keyword search)."},"scheduled_for_from":{"type":"string","format":"date-time","description":"Start of reminder scheduled delivery window (ISO 8601)."},"scheduled_for_to":{"type":"string","format":"date-time","description":"End of reminder scheduled delivery window (ISO 8601)."},"status":{"type":"string","description":"Filter by reminder status (pending, sent, snoozed, failed, acknowledged, expired, cancelled)."},"delivered_at_from":{"type":"string","format":"date-time","description":"Filter reminders delivered after this time (ISO 8601)."},"delivered_at_to":{"type":"string","format":"date-time","description":"Filter reminders delivered before this time (ISO 8601)."},"acknowledged_at_from":{"type":"string","format":"date-time","description":"Filter for reminders acknowledged after this time."},"acknowledged_at_to":{"type":"string","format":"date-time","description":"Filter for reminders acknowledged before this time."},"failure_reason":{"type":"string","description":"Filter reminders by failure reason (text/keyword search)."},"page":{"type":"integer","description":"Page number for pagination (1-based)","minimum":1},"limit":{"type":"integer","description":"Records per page (max system-defined; e.g. 100).","minimum":1},"sort":{"type":"string","description":"Sort field or criteria (e.g. scheduled_for, reminder_type, target_user_id, status), may allow asc/desc specification."}},"required":[],"description":"Request body for searching and filtering reminders. Supports text, status, and time-based filtering, plus pagination and sorting."},"IHealthcarePlatformReminder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID for the reminder record (from healthcare_platform_reminders)."},"target_user_id":{"type":"string","format":"uuid","description":"User to receive this reminder (nullable)."},"organization_id":{"type":"string","format":"uuid","description":"Organization context (nullable for platform-global)."},"reminder_type":{"type":"string","description":"Business logic class/category (e.g., appointment, medication, task, compliance, survey)."},"reminder_message":{"type":"string","description":"Payload to display/deliver in notification."},"scheduled_for":{"type":"string","format":"date-time","description":"When to deliver/activate reminder."},"status":{"type":"string","description":"Current status (pending, sent, snoozed, failed, acknowledged, expired, cancelled)."},"delivered_at":{"type":"string","format":"date-time","description":"If delivered, when."},"acknowledged_at":{"type":"string","format":"date-time","description":"If acknowledged by user, when."},"snoozed_until":{"type":"string","format":"date-time","description":"If snoozed, next delivery/activation time."},"failure_reason":{"type":"string","description":"If failed, why."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp."},"deleted_at":{"type":"string","format":"date-time","description":"Soft delete/archival marker."}},"required":["id","reminder_type","reminder_message","scheduled_for","status","created_at"],"description":"Represents a scheduled reminder event for a user or system workflow (from healthcare_platform_reminders table). Aggregates business/notification status, timestamps, and audit metadata."},"IHealthcarePlatformReminder.ICreate":{"type":"object","description":"Data required to create a new scheduled reminder for a recipient or staff member. All timestamps are formatted as ISO 8601 date-time strings. Optional organization or user targeting fields may be specified for reminder assignment. Field-level business rules and audit logic should be enforced by the implementation.","properties":{"reminder_type":{"type":"string","description":"Reminder category (e.g., appointment, medication, compliance, workflow event, etc). Business required field used for routing and classification."},"reminder_message":{"type":"string","description":"Human-targeted reminder message content, to be displayed or delivered by the configured channel. Must be a string and provide clear instructions/notice."},"scheduled_for":{"type":"string","format":"date-time","description":"ISO 8601 date-time value representing when the reminder is scheduled/reminded for delivery. Required for scheduling."},"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Organization this reminder is linked to. UUID or null. Leave null if not org-scoped."},"target_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) User for whom the reminder is intended. UUID for patient/staff reminder, or null for org-wide."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Delivery status of reminder at creation (usually 'pending'). Can be set to other statuses per workflow, or left null and set by downstream workflows."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Timestamp when the reminder was actually delivered (set by system, null at creation)."},"acknowledged_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Timestamp when the reminder was acknowledged by user (for audit/compliance, usually null initially)."},"snoozed_until":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) When reminder is snoozed for future re-delivery (date-time or null)."},"failure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) If the reminder fails (e.g., delivery failure), this field holds the descriptive error."}},"required":["reminder_type","reminder_message","scheduled_for"]},"IHealthcarePlatformReminder.IUpdate":{"type":"object","description":"Updatable fields for an existing reminder record in the healthcare platform. Timestamp fields are ISO 8601 date-time strings. All properties are optional for partial update; absent fields are left unchanged.","properties":{"reminder_type":{"type":"string","description":"Reminder category (appointment, medication, compliance, etc)."},"reminder_message":{"type":"string","description":"Updated message body content shown to recipient."},"scheduled_for":{"type":"string","format":"date-time","description":"Date/time reminder should be (re-)delivered."},"status":{"type":"string","description":"Manual status change for reminder (pending, sent, snoozed, failed, delivered, acknowledged, etc)."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp the reminder was delivered (ISO8601)."},"acknowledged_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp user acknowledged message (ISO8601)."},"snoozed_until":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Next scheduled delivery if the reminder was snoozed (or null if not snoozed)."},"failure_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Failure explanation or error message for non-delivered reminders (if applicable)."}},"required":[]},"IHealthcarePlatformOrganization.ISummary":{"type":"object","description":"Summary object for organization list/search view. Used in paginated result sets and dashboards. All fields are fixed per schema.","properties":{"id":{"type":"string","format":"uuid","description":"Unique UUID primary key for the organization."},"code":{"type":"string","description":"Unique business code for cross-system mapping, as seen in onboarding or technical documentation."},"name":{"type":"string","description":"Organization's legal or business name used for display, compliance, and notifications."},"status":{"type":"string","description":"Current operational status of the organization (active, suspended, pending, archived, etc)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp at which the organization was registered/created (ISO8601 format)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp at which the organization was last modified (ISO8601 format)."}},"required":["id","code","name","status","created_at","updated_at"]},"IHealthcarePlatformDepartment.ISummary":{"type":"object","description":"Summary object for a department (business unit) within an organization as used in list/search views for department management. Used for navigation, dashboards, and resource assignment workflows.","properties":{"id":{"type":"string","format":"uuid","description":"Department's unique identifier."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Parent organization's unique identifier the department belongs to."},"code":{"type":"string","description":"Short business code for department, unique within organization."},"name":{"type":"string","description":"Department's display or legal/business name."},"status":{"type":"string","description":"Operational status of the department (active, suspended, archived, etc)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when department was created (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update of department (ISO8601)."}},"required":["id","healthcare_platform_organization_id","code","name","status","created_at","updated_at"]},"IHealthcarePlatformRole.ISummary":{"type":"object","description":"Role summary object representing a platform, organization, or department role for RBAC in the healthcarePlatform system. Reflects business identity, scope, and status in the RBAC hierarchy. Used in role listing, selection, and summary displays. All fields must correspond to underlying Prisma role model semantics. This type is never to be used for sensitive scope or user assignments directly, as those are handled by assignments tables.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the role as a UUID."},"code":{"type":"string","description":"Role code (e.g., 'system_admin', 'organization_admin') used for cross-system mapping and assignment."},"name":{"type":"string","description":"Human-readable display name for this role."},"scope_type":{"type":"string","description":"The scope where this role applies (platform, organization, department)."},"status":{"type":"string","description":"Role status (active, retired, archived, system-only)."}},"required":["id","code","name","scope_type","status"]},"IHealthcarePlatformPermission.ISummary":{"type":"object","description":"Summary record for a platform permission definition, used for role-permission mapping and RBAC management. Contains minimal identity, code, naming, and RBAC context. Not user/role specific; use in platform permission listings and mapping screens.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the permission as a UUID."},"code":{"type":"string","description":"Permission code (e.g., 'edit_patient_record') to be mapped to roles."},"name":{"type":"string","description":"Human-readable name for this permission."},"scope_type":{"type":"string","description":"Scope where this permission applies (platform, organization, department)."},"status":{"type":"string","description":"Current status of the permission (active, retired, system)."}},"required":["id","code","name","scope_type","status"]},"IHealthcarePlatformOrgDepartmentAssignment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the organization-department assignment."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"UUID of the organization assigned."},"healthcare_platform_department_id":{"type":"string","format":"uuid","description":"UUID of the department assigned."},"created_at":{"type":"string","format":"date-time","description":"Assignment creation timestamp (summary-level)."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp (summary-level)."}},"description":"Summary variant for listing/search results of organization-department assignment relationships. Includes primary identifiers and timestamps only (suitable for list views, not detail forms).","required":["id","healthcare_platform_organization_id","healthcare_platform_department_id","created_at","updated_at"]},"IHealthcarePlatformLocaleSettings.ISummary":{"type":"object","description":"Represents summary view of locale/regionalization settings for the platform, organization, or department context. Used for regional configuration selection and summary listing. The full object is required for downstream audit/compliance and UI display of localization preferences.","properties":{"id":{"type":"string","format":"uuid","description":"UUID for the locale setting entry."},"healthcare_platform_organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID for the organization associated with this setting (nullable for platform global)."},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID for the department if settings are department scoped (nullable)."},"language":{"type":"string","description":"Language standard for the locale setting (e.g., 'en-US')."},"timezone":{"type":"string","description":"IANA timezone string for regional display (e.g., 'Asia/Seoul')."},"date_format":{"type":"string","description":"Canonical date display pattern (e.g., 'YYYY-MM-DD')."},"time_format":{"type":"string","description":"Time display format for locale (e.g., '24h' or '12h')."},"number_format":{"type":"string","description":"Number format string for region/country (e.g., '1,234.56' or '1.234,56')."}},"required":["id","healthcare_platform_organization_id","healthcare_platform_department_id","language","timezone","date_format","time_format","number_format"]},"IHealthcarePlatformMedicalDoctor.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the medical doctor account (uuid primary key)."},"full_name":{"type":"string","description":"Legal full name for display and search."},"email":{"type":"string","format":"email","description":"Business email for communication and identity."},"npi_number":{"type":"string","description":"NPI number for credential verification and provider identity."},"specialty":{"oneOf":[{"type":"string","description":"Clinical specialty (optional, included if present)."},{"type":"null"}],"description":"Clinical specialty (optional, included if present)."}},"required":["id","full_name","email","npi_number"],"description":"Summary view of the medical doctor entity for use in pagination/list/search endpoints. Contains only fields required for identification and list display as per API conventions."},"IHealthcarePlatformSystemAdmin.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"System admin's unique identifier. References {healthcare_platform_systemadmins.id}."},"email":{"type":"string","format":"email","description":"Business email address for the system administrator. Uniqueness required. Personal domains (like gmail/yahoo) are not allowed."},"full_name":{"type":"string","description":"Legal full name of the system admin as registered for compliance, audit, or legal use."},"status":{"type":"string","description":"Current status of the system admin account (e.g., 'active', 'pending', 'suspended', 'deleted', etc.). Must reference the {healthcare_platform_systemadmins.status} column."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when the system admin account was created. ISO8601 format. Sourced from {healthcare_platform_systemadmins.created_at}."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update of the admin's profile (including status changes or contact modifications). ISO8601. Sourced from {healthcare_platform_systemadmins.updated_at}."}},"required":["id","email","full_name","status","created_at","updated_at"],"description":"Summary view of a system (platform) administrator user belonging to the healthcare platform. Used for paginated index/listing endpoints where a lighter, read-optimized representation is preferred. All fields map to the columns in {healthcare_platform_systemadmins} table. Status reflects account state (active, pending, suspended, deleted, etc). Does NOT include sensitive fields such as password hashes or authentication secrets. Email is required and must be unique across all admins. Created_at and Updated_at are in ISO8601 format. The summary object is RBAC-safe for admin-only index queries.\n\nThis summary is essential for system/HR dashboards, audits, and administrator management UIs. All output MUST omit password/security fields and avoid exposing credential resets, tokens, or internal implementation details. Intended for internal superuser/owner management."},"IHealthcarePlatformOrganizationAdmin.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Organization admin's unique identifier. References {healthcare_platform_organizationadmins.id}."},"email":{"type":"string","format":"email","description":"Business email address for the organization admin. Must be unique systemwide. Only business/clinic domains accepted."},"full_name":{"type":"string","description":"Legal full name of organization admin for account identity, compliance review, and notifications."},"status":{"type":"string","description":"Current status of the org admin account (e.g., 'active', 'awaiting_approval', 'suspended', 'deleted', etc.). Derived from {healthcare_platform_organizationadmins.status}."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for when the org admin user was created. ISO8601 format for audit."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update of org admin details (profile, contact, or status). ISO8601."}},"required":["id","email","full_name","status","created_at","updated_at"],"description":"Summary-type representation of a single organization administrator account. Used for paginated lists, admin search endpoints, and organization-level account overviews. Maps to {healthcare_platform_organizationadmins} entity. Email must be unique, business-only, and required for all onboarding. Status tracks account lifecycle (active, suspended, etc). Timestamps are ISO8601 formatted. All RBAC and privacy rules MUST be enforced—this summary never returns authentication secrets or password hashes. Suitable for admin dashboards, audit views, and privileged management tooling. NEVER include personal/PHI-sensitive fields here."},"IHealthcarePlatformNurse.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the nurse record/account (uuid)."},"full_name":{"type":"string","description":"Legal full name of the nurse (for display and search)."},"email":{"type":"string","format":"email","description":"Primary (business) email for identity and contact."},"license_number":{"type":"string","description":"State-issued nurse credential number for compliance and staff audits."},"specialty":{"oneOf":[{"type":"string","description":"Primary specialty (optional, for search/display)."},{"type":"null"}],"description":"Primary specialty (optional, for search/display)."}},"required":["id","full_name","email","license_number"],"description":"Summary DTO for nurse entity for list and pagination results. Includes only identification and distinguishing fields. Does not contain phone or audit/mgmt fields."},"IHealthcarePlatformTechnician.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique UUID identifier for the technician user row."},"email":{"type":"string","format":"email","description":"Business email address for notification, login, and audit tracking."},"full_name":{"type":"string","description":"Legal full name of the technician, used for compliance and notification."},"specialty":{"oneOf":[{"type":"string","description":"Technical specialty or focus area (if applicable)."},{"type":"null"}],"description":"Technical specialty or focus area (if applicable)."}},"required":["id","email","full_name"],"description":"Summary view of technician user for lists/indexes."},"IHealthcarePlatformReceptionist.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Receptionist unique staff/user ID (UUID PK)."},"email":{"type":"string","format":"email","description":"Email for login and notification (must be business-eligible)."},"full_name":{"type":"string","description":"Receptionist full name for administrative display and identification."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business/organization phone for notifications (optional)."},"created_at":{"type":"string","format":"date-time","description":"When the receptionist account was created. (ISO 8601 UTC)"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last account update/edit. (ISO 8601 UTC)"}},"required":["id","email","full_name","created_at","updated_at"],"description":"Receptionist staff summary for use in admin views or scheduling dashboards. Omits sensitive fields. Date/times are UTC ISO 8601."},"IHealthcarePlatformPatient.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique Patient user record identifier (UUID)."},"email":{"type":"string","format":"email","description":"Valid business/consumer email for login/contact."},"full_name":{"type":"string","description":"Patient's legal full name for display/matching."},"date_of_birth":{"type":"string","format":"date","description":"Patient date of birth in ISO 8601 format (YYYY-MM-DD, no time zone)."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional phone number for contact. May be null if not given."},"created_at":{"type":"string","format":"date-time","description":"Patient account created at timestamp (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Last profile or record update (ISO 8601 UTC)."}},"required":["id","email","full_name","date_of_birth","created_at","updated_at"],"description":"Summary record type for a patient. Excludes PHI/PII sensitive fields; only safe display properties. Used for staff/patient index, dashboard, or quick access list. Timestamps are all UTC ISO 8601."},"IHealthcarePlatformUserAuthentication.ISummary":{"type":"object","description":"Summary type for user authentication records (for listing/search/pagination).\n\nRepresents a minimal authentication credential record for admin queries, audit, or session display.\n\nIncludes fields from healthcare_platform_user_authentications: id, user_type, user_id, provider, provider_key, timestamps, and soft-delete fields. Does not expose any credential data (password_hash, tokens, etc).\n\nFollows UUID and ISO8601 standards for identifier and timestamp fields.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this authentication record (UUID).\n\nCorresponds to the 'id' column in healthcare_platform_user_authentications."},"user_type":{"type":"string","description":"User type for this authentication (systemadmin, orgadmin, nurse, etc).\n\nMatches the 'user_type' field."},"user_id":{"type":"string","format":"uuid","description":"User UUID for the actor/principal this authentication record is associated with.\n\nCorresponds to 'user_id'."},"provider":{"type":"string","description":"Authentication provider type (local, saml, oauth2, ad, etc).\n\nCorresponds to 'provider'."},"provider_key":{"type":"string","description":"Provider-specific key or handle (e.g., SSO subject, username, etc).\n\nMatches 'provider_key'."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this record was created. Corresponds to 'created_at', ISO8601 string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp this record was last updated. Corresponds to 'updated_at', ISO8601 string."},"last_authenticated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp for when user last authenticated (ISO8601), if available. Corresponds to 'last_authenticated_at'."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp, if authentication record is deleted. Corresponds to 'deleted_at', nullable."}},"required":["id","user_type","user_id","provider","provider_key","created_at","updated_at"]},"IHealthcarePlatformAuthSession.ISummary":{"type":"object","description":"Summary type for authentication session listings/audits.\n\nCaptures session-level authentication metadata. Used for listing/search by auditors, compliance or security dashboards, and session management interfaces. All fields are guaranteed to be present except for optional values (revoked_at, deleted_at, user_agent, ip_address).","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this authentication session (UUID).\nCorresponds to 'id' in healthcare_platform_auth_sessions."},"user_type":{"type":"string","description":"User type for the session actor (systemadmin, orgadmin, etc). 'user_type' field in DB."},"user_id":{"type":"string","format":"uuid","description":"User UUID this session belongs to, corresponds to 'user_id'."},"session_token":{"type":"string","description":"Session token (opaque or JWT string)."},"issued_at":{"type":"string","format":"date-time","description":"Session issue timestamp, ISO8601. 'issued_at' field."},"expires_at":{"type":"string","format":"date-time","description":"Session planned expiration timestamp (ISO8601). 'expires_at' field."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp session was revoked, if applicable. Nullable."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp (never exposed unless for compliance). Nullable."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional user_agent string for device identification, when recorded."},"ip_address":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional IP address where session was created."}},"required":["id","user_type","user_id","session_token","issued_at","expires_at"]},"IHealthcarePlatformUserCredential.ISummary":{"type":"object","description":"Summary record for an archived user authentication credential.\n\nDoes NOT include any sensitive/password hash information. Used for audit and historical credential attestation purposes. Matches fields from healthcare_platform_user_credentials: id, user_id, user_type, credential_type, archived_at, and created_at.\n\nTimestamps are ISO8601-formatted.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the credential archive record (UUID)."},"user_id":{"type":"string","format":"uuid","description":"User ID this credential attaches to."},"user_type":{"type":"string","description":"User type: systemadmin, orgadmin, etc."},"credential_type":{"type":"string","description":"Credential type (password, sso, certificate, webauthn, etc)."},"archived_at":{"type":"string","format":"date-time","description":"When the credential was archived (password rotated, etc; ISO8601 string)."},"created_at":{"type":"string","format":"date-time","description":"Credential record creation timestamp (ISO8601)."}},"required":["id","user_id","user_type","credential_type","archived_at","created_at"]},"IHealthcarePlatformUserLicenseVerification.ISummary":{"type":"object","description":"Summary object for professional user license verification audit/reporting. Derived from healthcare_platform_user_license_verifications and includes verification metadata for admin or compliance dashboards.\n\nFields: id, user_id, user_type, license_number, license_type, verification_status, last_verified_at, created_at, updated_at.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for license verification record (UUID)."},"user_id":{"type":"string","format":"uuid","description":"User ID for verified (actor, e.g., doctor, nurse, etc.)."},"user_type":{"type":"string","description":"User type this verification is for (medicaldoctor/nurse/technician)."},"license_number":{"type":"string","description":"License/credential value being checked."},"license_type":{"type":"string","description":"Type of license/credential (medical, nurse, tech, etc.)."},"verification_status":{"type":"string","description":"Status of license verification (valid/expired/suspended/pending)."},"last_verified_at":{"type":"string","format":"date-time","description":"Last verified timestamp (ISO8601)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (ISO8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp (ISO8601)."}},"required":["id","user_id","user_type","license_number","license_type","verification_status","last_verified_at","created_at","updated_at"]},"IHealthcarePlatformPatientRecord.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this patient record. Used globally and referenced throughout EHR workflows.\n\n@prisma: id String @id @db.Uuid"},"full_name":{"type":"string","description":"Patient's legal full name. Used for display, search, and clinical documentation.\n\n@prisma: full_name String"},"dob":{"type":"string","format":"date-time","description":"Date of birth (ISO8601 string; timezone inclusive). Required for identity, matching, and legal compliance.\n\n@prisma: dob DateTime @db.Timestamptz"},"gender":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Patient's self-identified gender (may be blank/undisclosed). Freeform or domain-constrained per organizational rules. Optional.\n\n@prisma: gender String?"},"status":{"type":"string","description":"Business status of the patient record (e.g., active, inactive, deceased, transferred).\n\n@prisma: status String"},"organization_id":{"type":"string","format":"uuid","description":"ID of the organization the patient belongs to. Data isolation and compliance scoping.\n\n@prisma: organization_id String @db.Uuid"},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department ID for patients assigned to specific org units (e.g., Cardiology). Used for access control/workflows.\n\n@prisma: department_id String? @db.Uuid"},"patient_user_id":{"type":"string","format":"uuid","description":"Reference to user record for the patient (see healthcare_platform_patients). Used for authentication/notification.\n\n@prisma: patient_user_id String @db.Uuid"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the patient record was created. ISO8601; used for audit/compliance.\n\n@prisma: created_at DateTime @db.Timestamptz"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last record modification. Used for audits, EHR versioning, and data synchronization.\n\n@prisma: updated_at DateTime @db.Timestamptz"}},"required":["id","full_name","dob","status","organization_id","patient_user_id","created_at","updated_at"],"description":"Summary view for a Patient Record as used in list, search, and reference displays.\n\nMaps all identification and organizational fields, and omits large, sensitive, or rarely-used subfields for performance and privacy. Intended for rapid UX rendering and safe public display (excludes PHI and sensitive details such as full EHR history or flagged record fields).\n\nField descriptions reference original Prisma schema comments and are written in clear business English for compliance and technical stakeholders."},"IHealthcarePlatformEhrEncounter.ISummary":{"type":"object","description":"Summary view for EHR encounter records within the platform.\n\nThis summary type is designed for paginated list, index, and lightweight search results, surfacing core identification and workflow fields for a single encounter. It is derived from the healthcare_platform_ehr_encounters table as described in the Prisma schema and is essential for displaying large sets of EHR encounter search results efficiently.\n\nProperties are strictly limited to fields necessary for summary: id, patient_record_id, provider_user_id (as a reference), encounter_type, status, and start/end timestamps.\n\nSensitive fields and extended notes or audit content are intentionally omitted for performance, security, and privacy compliance.\n\nThe summary view enables quick navigation for practitioners, compliance users, and support staff to delve into full encounter detail as needed in further UI steps. All fields align with the database schema and support advanced filtering/sorting.\n\n---\nAll descriptions and field mappings are in full compliance with the business requirements, documentation conventions, and English-language standards set out in your documentation process.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this EHR encounter (UUID, Prisma PK)."},"patient_record_id":{"type":"string","format":"uuid","description":"The patient record to which this encounter belongs. FK to healthcare_platform_patient_records."},"provider_user_id":{"type":"string","format":"uuid","description":"User ID of the provider assigned to this encounter (healthcare_platform_medicaldoctors.id)."},"encounter_type":{"type":"string","description":"Type of encounter, e.g., office_visit, inpatient_admission, telemedicine, emergency, etc."},"encounter_start_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp marking the encounter's start."},"encounter_end_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when the encounter ended (may be null for active/in-progress)."},"status":{"type":"string","description":"Current business status of the encounter (planned, active, completed, cancelled, etc.)."}},"required":["id","patient_record_id","provider_user_id","encounter_type","encounter_start_at","status"]},"IHealthcarePlatformLabResult.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Lab result unique ID."},"ehr_encounter_id":{"type":"string","format":"uuid","description":"Context EHR encounter."},"test_name":{"type":"string","description":"Test or panel name."},"result_flag":{"type":"string","description":"Clinical flag (e.g., normal/abnormal/critical)."},"resulted_at":{"type":"string","format":"date-time","description":"Time when result finalized."},"status":{"type":"string","description":"Lab result workflow status."}},"required":["id","ehr_encounter_id","test_name","result_flag","resulted_at","status"],"description":"Summary/digest view of laboratory results: used for paginated results or list displays; excludes raw measurement payload and other verbose fields."},"IHealthcarePlatformAppointment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Appointment record unique identifier. Used for lookups, scheduling logic, and calendar integration.\n\n@prisma: id String @id"},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"ID of owning organization for this appointment (used for tenant isolation and analytics).\n\n@prisma: healthcare_platform_organization_id String @db.Uuid"},"healthcare_platform_department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional department to which this appointment is assigned. Used for internal routing, analytics, and access separation.\n\n@prisma: healthcare_platform_department_id String? @db.Uuid"},"provider_id":{"type":"string","format":"uuid","description":"Unique identifier for the provider assigned (doctor, PA, staff).\n\n@prisma: provider_id String @db.Uuid"},"patient_id":{"type":"string","format":"uuid","description":"Unique identifier for the patient scheduled for the appointment.\n\n@prisma: patient_id String @db.Uuid"},"status_id":{"type":"string","format":"uuid","description":"Status identifier referencing workflow status in appointment status table (e.g., scheduled, completed, cancelled).\n\n@prisma: status_id String @db.Uuid"},"start_time":{"type":"string","format":"date-time","description":"Appointment start datetime (ISO8601, timezone inclusive).\n\n@prisma: start_time DateTime @db.Timestamptz"},"end_time":{"type":"string","format":"date-time","description":"Appointment end datetime. Required for scheduling, analytics, and compliance.\n\n@prisma: end_time DateTime @db.Timestamptz"},"appointment_type":{"type":"string","description":"Type of appointment (e.g., in-person, telemedicine, followup).\n\n@prisma: appointment_type String"},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Appointment display title (optional; provided for calendar/list UI use). Typically clinician, location, or service summary.\n\n@prisma: title String?"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional free-text notes/description for this appointment (instructions, requests, etc).\n\n@prisma: description String?"}},"required":["id","healthcare_platform_organization_id","provider_id","patient_id","status_id","start_time","end_time","appointment_type"],"description":"Summary schema definition for an appointment record in the HealthcarePlatform scheduling table.\n\nOptimized for list/calendar displays, analytics, and secure cross-user handoff. Field descriptions map to and clarify the related Prisma schema columns in business-focused, compliance-ready English.\n\nOptional fields included (title, description, department ID), with all required properties clearly outlined for regulatory validation and safe scheduling workflows."},"IHealthcarePlatformAppointmentWaitlist.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the appointment waitlist entry."},"appointment_id":{"type":"string","format":"uuid","description":"The appointment's unique identifier that this waitlist entry is associated with."},"patient_id":{"type":"string","format":"uuid","description":"Unique identifier of the patient on the waitlist."},"join_time":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the patient joined the waitlist."},"status":{"type":"string","description":"Current status of the waitlist entry (e.g. active, promoted, removed, etc)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the waitlist entry was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the most recent update to the waitlist entry."}},"required":["id","appointment_id","patient_id","join_time","status","created_at","updated_at"],"description":"Summary entry for an appointment's waitlist. Contains identifiers and key status fields. Used for listing and search endpoints."},"IHealthcarePlatformAppointmentStatus.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the appointment status entity."},"status_code":{"type":"string","description":"Canonical code (system-unique) for this appointment status (e.g. scheduled, confirmed, cancelled)."},"display_name":{"type":"string","description":"Human-readable label for appointment status."},"business_status":{"oneOf":[{"type":"string","description":"Workflow grouping or business status (e.g. active, closed). May be null."},{"type":"null"}],"description":"Workflow grouping or business status (e.g. active, closed). May be null."},"sort_order":{"type":"integer","description":"Ordering value for UI/business logic (lower values sort first)."}},"required":["id","status_code","display_name","sort_order"],"description":"Summary entry for appointment status for display in workflow and configuration interfaces."},"IHealthcarePlatformRoomReservation.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the room reservation record."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization to which this room reservation belongs."},"room_id":{"type":"string","format":"uuid","description":"Room resource identifier for the reservation."},"reservation_start":{"type":"string","format":"date-time","description":"Reservation start time (ISO 8601)."},"reservation_end":{"type":"string","format":"date-time","description":"Reservation end time (ISO 8601)."},"reservation_type":{"type":"string","description":"Type of reservation (appointment, admin, cleaning, maintenance, etc)."},"appointment_id":{"oneOf":[{"type":"string","format":"uuid","description":"Linked appointment if this is for a patient appointment (nullable for admin blocks)."},{"type":"null"}],"description":"Linked appointment if this is for a patient appointment (nullable for admin blocks)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the reservation was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp. Null if active."},{"type":"null"}],"description":"Soft delete timestamp. Null if active."}},"required":["id","healthcare_platform_organization_id","room_id","reservation_start","reservation_end","reservation_type","created_at","updated_at"],"description":"Summary data for a room reservation. Used in room utilization dashboards and booking lists."},"IHealthcarePlatformCalendarSetting.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the calendar setting."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization for which the calendar setting applies."},"resource_type":{"type":"string","description":"Resource this calendar setting applies to (org-wide, provider, room, equipment)."},"resource_id":{"oneOf":[{"type":"string","format":"uuid","description":"Resource id if the setting is for a specific resource, else null."},{"type":"null"}],"description":"Resource id if the setting is for a specific resource, else null."},"business_days":{"type":"string","description":"Business open days (e.g., '[\"Mon\",\"Tue\"]'), JSON string."},"availability_hours":{"type":"string","description":"Standard window for availability (e.g., '08:00-18:00')."},"min_lead_time_minutes":{"type":"integer","description":"Minimum advance booking time in minutes."},"min_cancel_window_minutes":{"type":"integer","description":"Minimum allowed cancellation window in minutes."},"blackout_dates":{"oneOf":[{"type":"string","description":"Blackout (holiday) dates, string/JSON."},{"type":"null"}],"description":"Blackout (holiday) dates, string/JSON."},"post_appointment_survey_enabled":{"type":"boolean","description":"Whether a post-appointment survey is enabled."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this calendar setting was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp. Null if active."},{"type":"null"}],"description":"Soft deletion timestamp. Null if active."}},"required":["id","healthcare_platform_organization_id","resource_type","business_days","availability_hours","min_lead_time_minutes","min_cancel_window_minutes","post_appointment_survey_enabled","created_at","updated_at"],"description":"Summary configuration for org/resource calendar setting, for scheduling configuration and calendar set lookup."},"IHealthcarePlatformTelemedicineSessions.ISummary":{"type":"object","description":"Summary view for a telemedicine session. Used for list views and search results. Mirrors key identifying and scheduling fields in the healthcare_platform_telemedicine_sessions table.\n\n- `id`: Unique identifier of the telemedicine session. (UUID)\n- `appointment_id`: Reference to the parent appointment. (UUID)\n- `join_link`: Teleconference secure join URL for this session.\n- `session_start`: Scheduled session start time (ISO 8601 date-time).\n- `session_end`: Scheduled or actual session end time (ISO 8601 date-time).\n- `provider_joined_at`: When the provider joined, if known.\n- `patient_joined_at`: When the patient joined, if known.\n- `session_recorded`: Was the session set for recording?\n","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the telemedicine session (UUID)"},"appointment_id":{"type":"string","format":"uuid","description":"UUID of the appointment linked to this session"},"join_link":{"type":"string","description":"Secure join link for telemedicine session"},"session_start":{"type":"string","format":"date-time","description":"Scheduled start time of session (ISO 8601)"},"session_end":{"type":"string","format":"date-time","description":"Scheduled or actual end time (ISO 8601)"},"provider_joined_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when provider joined session, if applicable"},"patient_joined_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when patient joined session, if applicable"},"session_recorded":{"type":"boolean","description":"Whether the session was recorded"}},"required":["id","appointment_id","join_link","session_start","session_end","session_recorded"]},"IHealthcarePlatformBillingInvoice.ISummary":{"type":"object","description":"Summary information for a billing invoice, used in paginated index results and compact list views. Includes unique identifier and primary display fields. Should not contain sensitive financial or patient details.\n\nFields conform to core billing invoice schema and only expose key summary attributes for list display and dashboard analytics.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the billing invoice (UUID primary key)"},"invoice_number":{"type":"string","description":"Business invoice number, unique per organization for financial tracking."},"status":{"type":"string","description":"Current status (e.g., draft, sent, paid, overdue, canceled). See main billing_invoice schema."},"total_amount":{"type":"number","description":"Total amount due on the invoice in base currency units.","format":"double"},"currency":{"type":"string","description":"Invoice currency code (e.g., USD, EUR)."},"patient_id":{"type":"string","format":"uuid","description":"Patient unique identifier, only for admin/staff visibility."},"due_date":{"type":"string","format":"date-time","description":"Due date if set (ISO 8601)."},"created_at":{"type":"string","format":"date-time","description":"Invoice creation timestamp."}},"required":["id","invoice_number","status","total_amount","currency","created_at"]},"IHealthcarePlatformBillingCode.ISummary":{"type":"object","description":"Summary of a billing code: suitable for use in code lookup UIs and paginated result sets where only essential identification fields are needed.\n\nUsed for displaying available codes for billing item assignment or mapping, not for code detail or edit screens.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the billing code (UUID)."},"code":{"type":"string","description":"Business or regulatory billing code (CPT, ICD-10, internal etc)."},"name":{"type":"string","description":"Display or business name for this billing code."},"code_system":{"type":"string","description":"Defines the type/origin of the code: CPT, ICD-10, HCPCS, internal, etc."},"active":{"type":"boolean","description":"Whether this code is active (selectable for future invoices/claims)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for code creation."}},"required":["id","code","name","code_system","active"]},"IHealthcarePlatformBillingDiscountPolicy.ISummary":{"type":"object","description":"Summary record for a billing discount/charity/business discount policy as configured per-organization. Used in list/pagination APIs for picking policy or reviewing assignments. Does not expose full formula, just admin details.\n\n- `id`: Policy record unique identifier (UUID)\n- `organization_id`: UUID of the owning organization\n- `policy_name`: Display/business name\n- `discount_type`: E.g., percentage, fixed, sliding scale, etc\n- `is_active`: Whether currently offered/allowed\n","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the discount policy"},"organization_id":{"type":"string","format":"uuid","description":"Owning organization's UUID"},"policy_name":{"type":"string","description":"Display/business-friendly name for this policy (e.g., Charity, Employee, Hardship)"},"discount_type":{"type":"string","description":"Business/logic type (percentage, fixed, code, sliding, etc)"},"is_active":{"type":"boolean","description":"If this discount is actively available for use/application"}},"required":["id","organization_id","policy_name","discount_type","is_active"]},"IHealthcarePlatformBillingPaymentPlan.ISummary":{"type":"object","description":"Summary view for paginated billing payment plan lists—fewer fields, suitable for IPage responses. Includes plan key, plan_type, status, total amount, start/end, primary status, and audit dates.","properties":{"id":{"type":"string","format":"uuid","description":"UUID of the payment plan (primary key)."},"invoice_id":{"type":"string","format":"uuid","description":"UUID of the parent billing invoice."},"plan_type":{"type":"string","description":"Installment/payment plan type (e.g., self-pay, insurance, payment deferral, promissory)."},"status":{"oneOf":[{"const":"active","description":"Status of payment plan (enum)."},{"const":"completed","description":"Status of payment plan (enum)."},{"const":"defaulted","description":"Status of payment plan (enum)."},{"const":"cancelled","description":"Status of payment plan (enum)."},{"const":"expired","description":"Status of payment plan (enum)."}],"description":"Status of payment plan (enum)."},"total_amount":{"type":"number","description":"Total amount to be paid under this plan."},"start_date":{"type":"string","format":"date-time","description":"Plan start date (ISO 8601)."},"end_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End date if known (ISO 8601 or null)."},"created_at":{"type":"string","format":"date-time","description":"Created timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp."}},"required":["id","invoice_id","plan_type","status","total_amount","start_date","created_at"]},"IHealthcarePlatformBillingPayment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the billing payment record."},"invoice_id":{"type":"string","format":"uuid","description":"Reference to the parent invoice for this payment."},"amount":{"type":"number","description":"Actual payment amount for this record."},"status":{"type":"string","description":"Current payment status (e.g., 'posted', 'pending', 'voided', etc)."},"payment_date":{"type":"string","format":"date-time","description":"Date and time when payment was made or recorded (ISO 8601 datetime)."},"currency":{"type":"string","description":"Three-letter currency code (e.g., 'USD').'"},"payment_method_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reference to payment method used (nullable if not applicable)."}},"required":["id","invoice_id","amount","status","payment_date","currency"],"description":"Summary information for a billing payment record for minimal listing in invoices/payments context."},"IHealthcarePlatformBillingPaymentMethod.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the payment method record."},"method_type":{"type":"string","description":"Kind of payment method (e.g., credit_card, ach, insurance, cash, etc.)."},"provider_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Label or provider for the payment method (nullable or omitted if not applicable)."},"is_active":{"type":"boolean","description":"Indicates if this payment method is currently active for organization use."},"organization_id":{"type":"string","format":"uuid","description":"Reference to the organization this payment method belongs to."}},"required":["id","method_type","is_active","organization_id"],"description":"Minimal summary information for a billing payment method, suitable for selection/listing in payment forms."},"IHealthcarePlatformInsuranceClaim.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the insurance claim record."},"invoice_id":{"type":"string","format":"uuid","description":"Reference to the invoice submitted for this claim."},"insurance_policy_id":{"type":"string","format":"uuid","description":"Reference to the associated insurance policy for this claim."},"claim_number":{"type":"string","description":"Business/clearinghouse claim reference number."},"submission_status":{"type":"string","description":"Current status in claim workflow (e.g., submitted, received, denied, paid etc)."},"total_claimed_amount":{"type":"number","description":"Total amount claimed under this insurance claim."},"service_start_date":{"type":"string","format":"date-time","description":"Service start date for claimed encounter(s) (ISO 8601 datetime)."},"service_end_date":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Service end date for claimed encounter(s) (nullable, ISO 8601 datetime)."},"last_payer_response_code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Most recent response code from the payer/clearinghouse (nullable)."}},"required":["id","invoice_id","insurance_policy_id","claim_number","submission_status","total_claimed_amount","service_start_date"],"description":"Summary fields for an insurance claim record as used in invoice/claims listing UI."},"IHealthcarePlatformAnalyticsDashboard.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The analytics dashboard ID."},"title":{"type":"string","description":"The title of the dashboard."},"owner_user_id":{"type":"string","format":"uuid","description":"Dashboard owner user assignment ID."},"organization_id":{"type":"string","format":"uuid","description":"The organization associated with this dashboard."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"The department associated with this dashboard (nullable)."},"is_public":{"type":"boolean","description":"Whether this dashboard is public within the tenant/org/department."},"created_at":{"type":"string","format":"date-time","description":"When dashboard was created."},"updated_at":{"type":"string","format":"date-time","description":"When dashboard was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When dashboard was deleted/archived."}},"required":["id","title","owner_user_id","organization_id","is_public","created_at","updated_at"],"description":"Summary information for analytics dashboards, as displayed in index/search results. Includes dashboard ID, title, organizational/dept relationships, ownership, current status, and lifecycle audit timestamps. Used for list views and search workflows in analytic/BI UIs."},"IHealthcarePlatformOutcomeMetric.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The outcome metric record ID."},"organization_id":{"type":"string","format":"uuid","description":"The parent organization's ID."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"The department's ID if department-scoped."},"metric_name":{"type":"string","description":"The metric name (e.g., 'readmission_rate')."},"observed_at":{"type":"string","format":"date-time","description":"The time this metric value was observed (single-point, timeseries timestamp)."},"observed_value":{"type":"number","description":"The main numeric outcome/score/benchmark value."},"created_at":{"type":"string","format":"date-time","description":"When this record was created (for ingestion/audit purposes)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"If this record is soft-deleted, when it was deleted (null if active)."}},"required":["id","organization_id","metric_name","observed_at","observed_value","created_at"],"description":"Summary data for outcome metric timeseries/records for BI/analytics dashboards. Includes name, context, timestamp, and numeric observed value, with organizational and audit context for search and reporting."},"IHealthcarePlatformBenchmarkDefinition.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The benchmark definition ID."},"organization_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"The owning organization's ID, if not global."},"benchmark_code":{"type":"string","description":"Short benchmark code."},"label":{"type":"string","description":"Label for the benchmark."},"value":{"type":"number","description":"Value used for KPI/analytics normalization."},"unit":{"type":"string","description":"Measurement unit string for KPI normalization."},"effective_start_at":{"type":"string","format":"date-time","description":"Start of validity for this benchmark (inclusive)."},"effective_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End of validity (null if open-ended)."},"created_at":{"type":"string","format":"date-time","description":"When this record was created."},"updated_at":{"type":"string","format":"date-time","description":"When this was most recently updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion timestamp for this benchmark (null if active)."}},"required":["id","benchmark_code","label","value","unit","effective_start_at","created_at","updated_at"],"description":"Summary data for benchmark definition records, used in KPI/analytics dashboard comparison. Global or organization-scoped, metadata for reporting, active period boundaries, and lifecycle audit fields."},"IHealthcarePlatformExternalEmrConnector.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"The EMR connector ID."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Organization to which this connector belongs."},"connector_type":{"type":"string","description":"Vendor/EMR/EHR type string."},"status":{"type":"string","description":"Operational status code for connector (e.g., active, failed, disabled)."},"last_sync_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When this connector last successfully synchronized (nullable)."},"created_at":{"type":"string","format":"date-time","description":"When this connector config was created."},"updated_at":{"type":"string","format":"date-time","description":"When this connector config was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When this connector was soft deleted (null if still active)."}},"required":["id","healthcare_platform_organization_id","connector_type","status","created_at","updated_at"],"description":"Summary information for external EMR/EHR connector configurations, includes org, type, status, sync/failure timestamps, and lifecycle meta for dashboard or config audit UI."},"IHealthcarePlatformLabIntegration.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the lab integration record. References the primary key from the lab integration entity."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Unique identifier of the organization to which this lab integration belongs."},"lab_vendor_code":{"type":"string","description":"Code identifying the external laboratory provider/vendor. (e.g., LabCorp, Quest, custom code)."},"connection_uri":{"type":"string","description":"Primary API or system endpoint URI for the laboratory provider integration. Should be a valid URI, but not necessarily a web URL (can be system or local endpoint, depending on network architecture)."},"supported_message_format":{"type":"string","description":"The structured message/document format the integration supports (e.g., HL7, FHIR, C-CDA)."},"status":{"type":"string","description":"Operational status of the integration (e.g., 'active', 'disabled', 'pending', etc.). Valid business statuses only."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) for when the integration record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) of last modification to this integration record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp, null if the record is active. If non-null, the record is logically deleted for compliance - actual resource remains in storage for audit retention."}},"required":["id","healthcare_platform_organization_id","lab_vendor_code","connection_uri","supported_message_format","status","created_at","updated_at"],"description":"Summary view of a laboratory integration configuration. Records a single integration registration for an organization, including connectivity details, vendor/provider code, messaging format, operational status, and audit fields. Used in lab integration lists for admin dashboard and compliance review."},"IHealthcarePlatformIntegrationLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the integration log event."},"healthcare_platform_organization_id":{"type":"string","format":"uuid","description":"Reference ID of the organization in which this log event occurred."},"integration_type":{"type":"string","description":"Type/category of integration for this event (e.g., 'emr', 'lab', 'pharmacy', 'insurance', 'device')."},"referenced_transaction_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Transaction or related entity being referenced by the event (nullable depending on integration type/event context)."},"event_status":{"type":"string","description":"Discrete event status for this log (e.g., 'success', 'failure', 'timeout', 'retry')."},"event_code":{"type":"string","description":"Short status/error code (e.g., 'E_CONN', 'E_PARSE', 'OK')."},"event_message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Extended error message/event context payload, if present (can contain stack traces or integration info)."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when the integration event occurred (audit date-time, ISO 8601)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last log event update (ISO 8601)."}},"required":["id","healthcare_platform_organization_id","integration_type","event_status","event_code","occurred_at","created_at","updated_at"],"description":"Summary of an integration log record for compliance, troubleshooting, and audit. Each log represents an integration point event such as success, failure, error, or status event for an interaction with an external laboratory, EMR, insurance, device, or pharmacy."},"IHealthcarePlatformComplianceConsent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the compliance consent record."},"organization_id":{"type":"string","format":"uuid","description":"Reference ID for the organization associated with this consent."},"subject_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of consenting subject, can be a patient, staff member, or other PHI-holding entity."},"policy_version_id":{"type":"string","format":"uuid","description":"The specific compliance policy version under which this consent was recorded."},"consent_type":{"type":"string","description":"Category of consent (e.g., privacy, treatment, research, data use)."},"granted":{"type":"boolean","description":"Boolean indicating whether consent is currently granted (true) or revoked (false)."},"consent_at":{"type":"string","format":"date-time","description":"Timestamp when consent was granted."},"revoked_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when consent was revoked, if revocation occurred."},"revocation_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Business/case reason for consent revocation."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when consent expires, if the consent is time-bound."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (for audit/compliance)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update (audit field)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for compliance records. If set, record is retained for audit purposes."}},"required":["id","organization_id","policy_version_id","consent_type","granted","consent_at","created_at","updated_at"],"description":"Summary representation of a compliance consent entry, including organization, subject, consent type, granted/revoked state, timestamps, and audit metadata. Used for audit reporting, compliance dashboards, and consent lifecycle management."},"IHealthcarePlatformComplianceAgreement.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the compliance agreement record."},"organization_id":{"type":"string","format":"uuid","description":"Reference to the organization under which this agreement is recorded."},"signer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the staff or patient who signed the agreement (nullable for org-wide/automated signatures)."},"policy_version_id":{"type":"string","format":"uuid","description":"Reference to the policy version for which this agreement is signed."},"agreement_type":{"type":"string","description":"Type of compliance agreement (e.g., HIPAA, terms_of_service, business_associate, data_sharing, consent, etc.)."},"status":{"type":"string","description":"Agreement status (e.g., 'signed', 'pending', 'withdrawn', 'expired', 'rejected')."},"signed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when signature was recorded, nullable if agreement is still pending or unsigned."},"method":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"How the signature/agreement was recorded (e.g., digital_signature, checkbox_acknowledge, wet_signature, etc.)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this agreement expires, nullable if perpetual."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (ISO 8601) for auditing/reporting."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this record was last modified."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete marker for audit and retention compliance. If set, indicates agreement is no longer active/visible in primary workflows."}},"required":["id","organization_id","policy_version_id","agreement_type","status","created_at","updated_at"],"description":"Summary of a compliance agreement, indicating signer, organization context, policy version, type, status, method, key timestamps, and audit trail metadata. Used for compliance dashboard, agreement management, and regulatory audit workflows."},"IHealthcarePlatformPolicyVersion.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the policy version entity."},"policy_type":{"type":"string","description":"Category of this policy version (e.g. privacy, HIPAA, risk management)."},"version":{"type":"string","description":"Semantic or document version identifier for this policy version (e.g. 'v2.1', '2024-06')."},"title":{"type":"string","description":"Title of the policy version for quick identification."},"effective_at":{"type":"string","format":"date-time","description":"Timestamp when the policy version becomes effective (ISO 8601)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Expiration timestamp for the policy version if it is not perpetual. Can be null for no expiration."}},"required":["id","policy_type","version","title","effective_at"],"description":"Summary information for a policy version entity as referenced in compliance and consent, aggregating type, version, title, and time scope. Suitable for dashboard/index listings and quick review. Derived from the healthcare_platform_policy_versions table."},"IHealthcarePlatformRiskAssessment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Globally unique identifier for this risk assessment record."},"assessment_type":{"type":"string","description":"Type of risk assessment (e.g., annual, incident, ad hoc)."},"status":{"type":"string","description":"Status of the risk assessment (scheduled, in_progress, completed, approved, rejected, etc)."},"risk_level":{"type":"string","description":"Risk severity level determined (e.g., low, moderate, high, critical)."},"window_start":{"type":"string","format":"date-time","description":"Assessment period start timestamp."},"window_end":{"type":"string","format":"date-time","description":"Assessment period end timestamp."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional link to the department for which this risk assessment was performed (nullable)."}},"required":["id","assessment_type","status","risk_level","window_start","window_end"],"description":"Summary information for a risk assessment event for an organization/department, including minimal compliance-relevant metadata as used in audit and review screens. Derived from the healthcare_platform_risk_assessments table."},"IHealthcarePlatformLegalHold.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the legal hold entity."},"subject_type":{"type":"string","description":"Entity or object type held by the legal hold (patient_data, org_data, audit_log, etc)."},"status":{"type":"string","description":"Legal hold status (active, released, expired, denied, archived, etc)."},"effective_at":{"type":"string","format":"date-time","description":"Datetime when this legal hold was imposed."},"release_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime the legal hold is or was released. Can be null if active."},"department_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional link to the department affected by the legal hold."}},"required":["id","subject_type","status","effective_at"],"description":"Summary view for a legal hold event, capturing business/legal tracking info: type, status, effective window, department. For index, dashboard, notification, or operational audit. Derived from healthcare_platform_legal_holds."},"IHealthcarePlatformAuditLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the audit log record."},"user_id":{"type":"string","format":"uuid","description":"User who triggered the audit event (nullable if system event)."},"organization_id":{"type":"string","format":"uuid","description":"Organization context (nullable for global/system-level events)."},"action_type":{"type":"string","description":"Type of action performed (e.g., LOGIN, RECORD_UPDATE, ACCESS, SECURITY_EVENT, etc.)."},"related_entity_type":{"type":"string","description":"Type of the business entity referenced in the audit action (nullable, e.g., PATIENT_RECORD, CONSENT, APPOINTMENT)."},"related_entity_id":{"type":"string","format":"uuid","description":"ID of the related business entity (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of the audit log creation."}},"required":["id","action_type","created_at"],"description":"Summary of an audit log entry for list/pagination purposes. Excludes sensitive context and full metadata, providing only identifying fields, action types, and organizational scope. Designed for search/index container usage."},"IHealthcarePlatformAccessLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the access log record."},"user_id":{"type":"string","format":"uuid","description":"User who accessed the resource."},"organization_id":{"type":"string","format":"uuid","description":"Organization whose resource was accessed."},"resource_type":{"type":"string","description":"Type of resource accessed (EHR, PATIENT_RECORD, IMAGING, CONFIG, etc.)."},"resource_id":{"type":"string","format":"uuid","description":"Primary key/UUID of referenced resource (nullable)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of access event."}},"required":["id","user_id","organization_id","resource_type","created_at"],"description":"Summary of an access log entry for paginated listing. Excludes purpose, IP, and detailed context, focusing on identifiers and basic metadata for compliance review and search containers."},"IHealthcarePlatformDataExportLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of this data export log event."},"user_id":{"type":"string","format":"uuid","description":"User who initiated the export event."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization for the export."},"export_type":{"type":"string","description":"Nature of export (REPORT, EHR_BULK, DATA_DUMP, etc.)."},"destination":{"type":"string","description":"Export destination (USER_DOWNLOAD, EXTERNAL_API, etc.)."},"status":{"type":"string","description":"Current export status (e.g., REQUESTED, IN_PROGRESS, COMPLETED, FAILED)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp export log entry was created."}},"required":["id","export_type","status","created_at"],"description":"Summary of a data export log event for pagination. Includes identifying and audit fields, status, and destination, but omits detailed file and actor context for safe summary use."},"IHealthcarePlatformSecurityIncident.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of this security incident event."},"organization_id":{"type":"string","format":"uuid","description":"Owning organization where the incident occurred."},"incident_type":{"type":"string","description":"Classification of the incident (FAILED_LOGIN, PHI_EXFIL, BREACH_SUSPECTED, etc.)."},"status":{"type":"string","description":"Incident status (e.g., OPEN, INVESTIGATING, RESOLVED, ESCALATED, ARCHIVED)."},"severity":{"type":"string","description":"Severity classification (LOW, MEDIUM, HIGH, CRITICAL)."},"opened_at":{"type":"string","format":"date-time","description":"Incident opened timestamp."}},"required":["id","incident_type","status","severity","opened_at"],"description":"Summary of a security incident for paginated listing. Contains identifying and status fields only, withholding full details, summary, and sensitive context. Suitable for secure search and overview containers."},"IHealthcarePlatformNotification.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification event."},"notificationType":{"type":"string","description":"Logical event/type code (appointment_reminder, billing_alert, etc)."},"notificationChannel":{"type":"string","description":"Channel - email, sms, in_app, etc."},"critical":{"type":"boolean","description":"True if notification requires explicit acknowledgement/escalation."},"deliveryStatus":{"type":"string","description":"Current delivery status: pending, delivered, failed, acknowledged, etc."},"createdAt":{"type":"string","format":"date-time","description":"Timestamp of notification creation."},"subject":{"type":"string","description":"Notification subject (display/optional, for list previews)."},"deliveredAt":{"type":"string","format":"date-time","description":"Timestamp if delivered, else null/absent."}},"required":["id","notificationType","notificationChannel","critical","deliveryStatus","createdAt"],"description":"Minimal summary view of notification suitable for list views and search results. Used in paginated containers and table displays, returns no sensitive or full message body information. Safe for non-admin and routine user access."},"IHealthcarePlatformEscalationEvent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Escalation event ID."},"escalation_type":{"type":"string","description":"Type of escalation."},"escalation_level":{"type":"string","description":"Level (e.g., critical, normal)."},"deadline_at":{"type":"string","format":"date-time","description":"Pending/resolution deadline."},"resolution_status":{"type":"string","description":"Current status of escalation event."}},"required":["id","escalation_type","escalation_level","deadline_at","resolution_status"],"description":"Summary information for an escalation event for listing and dashboards."},"IHealthcarePlatformReminder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Reminder ID."},"reminder_type":{"type":"string","description":"e.g., appointment, compliance."},"reminder_message":{"type":"string","description":"Summary message/content."},"scheduled_for":{"type":"string","format":"date-time","description":"Scheduled delivery time."},"status":{"type":"string","description":"Latest status (pending, delivered, expired, acknowledged)."}},"required":["id","reminder_type","reminder_message","scheduled_for","status"],"description":"Summary view of a scheduled reminder (basic fields for list UI or table display, omitting audit/internal details)."},"IPageIHealthcarePlatformEscalationEvent":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformEscalationEvent"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIHealthcarePlatformReminder":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformReminder"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IHealthcarePlatformNotificationHistory.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"History event ID."},"notification_id":{"type":"string","format":"uuid","description":"Parent notification ID."},"event_type":{"type":"string","description":"Event type for the notification history."},"event_time":{"type":"string","format":"date-time","description":"Timestamp of the event."},"delivery_channel":{"type":"string","description":"Notification delivery channel."},"delivery_status":{"type":"string","description":"Delivery status at event time."}},"required":["id","notification_id","event_type","event_time","delivery_channel","delivery_status"],"description":"Summary view of notification delivery history record. Used for page-list response types and auditing UIs, omitting large detail/info fields."},"IPage":{"type":"object","description":"Top-level page container schema for all paginated results. Used as a base for all IPage<Type> schemas. Has fixed/required pagination and data fields.","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Detailed pagination metadata for results"},"data":{"type":"array","items":{"type":"object","properties":{},"required":[]},"description":"Array of paginated records (the type is specified by the additional schema for each endpoint)."}},"required":["pagination","data"]},"IHealthcarePlatformMedicalImage.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the medical image."},"ehr_encounter_id":{"type":"string","format":"uuid","description":"EHR encounter context for this image."},"uploaded_by_user_id":{"type":"string","format":"uuid","description":"Uploader’s user/actor ID."},"image_type":{"type":"string","description":"Short code or label for the image type (e.g., DICOM, JPEG, etc.)."},"created_at":{"type":"string","format":"date-time","description":"Medical image upload timestamp."}},"required":["id","ehr_encounter_id","uploaded_by_user_id","image_type","created_at"],"description":"Summary/digest schema for medical image list results or paginated containers. Contains only safe fields for list or dashboard display."},"IPageIHealthcarePlatformMedicalImage.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IHealthcarePlatformMedicalImage.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IHealthcarePlatformBillingItem.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Database UUID for the billing item row."},"invoice_id":{"type":"string","description":"Linked invoice for context."},"description":{"type":"string","description":"Simplified summary field for display in list views."},"quantity":{"type":"integer","description":"Number of units in list view."},"unit_price":{"type":"number","description":"Unit price for high-level summary."},"total_amount":{"type":"number","description":"Line total in summary context."}},"required":["id","invoice_id","description","quantity","unit_price","total_amount"],"description":"Summary variant for billing items to be used in list/search/paginated responses. Omits audit and soft-delete detail."},"IHealthcarePlatformDeviceDataIngestion.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier."},"device_type":{"type":"string","description":"Type/category of device being ingested (e.g., 'vital_monitor', 'ecg')."},"ingest_endpoint_uri":{"type":"string","description":"Device data endpoint URI."},"supported_protocol":{"type":"string","description":"Communication protocol (e.g., 'HL7','FHIR','custom')."},"status":{"type":"string","description":"Current operational status (e.g., 'ready','pending','error')."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp."}},"required":["id","device_type","ingest_endpoint_uri","supported_protocol","status","created_at","updated_at"],"description":"Summary representation of a device data ingestion integration for paged/index/search views. Includes only the most critical identification, operational, and status fields."},"IHealthcarePlatformSecurityIncident.IUpdate":{"type":"object","description":"Request body for updating a security incident. Used to track progression and remediation steps for production security or compliance incidents in the healthcare platform's security monitoring and reporting system.\n\nFields may be set by compliance/NOC staff, legal reviewers, or incident response automation as workflow progresses. All updates are fully logged for compliance and audit review, and may trigger further escalation or notification.\n\nThe permitted update fields are as per the updatable fields in healthcare_platform_security_incidents. id/organization_id are immutable. All updates must be validated by business/compliance policy, especially for status and severity changes.\n\nConsult Prisma schema comments for full property intent and business logic requirements.","properties":{"incident_type":{"type":"string","description":"Re-classification or re-categorization of the incident according to incident taxonomy."},"summary":{"type":"string","description":"Updated summary or headline. May be modified to include follow-up summary as incident proceeds."},"details":{"type":"string","description":"Detailed incident description, post-mortem, or workflow annotation text."},"status":{"type":"string","description":"Updated workflow status, e.g., 'INVESTIGATING', 'RESOLVED', 'ESCALATED', 'OPEN', etc."},"severity":{"type":"string","description":"Incident severity as determined during workflow. 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL' expected."},"closed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Set to current timestamp on final incident closure. Null otherwise. Mutated only at completion."}},"required":[]},"IHealthcarePlatformEmergencyAccessOverride.IUpdate":{"type":"object","description":"Request body for updating an existing emergency access override record. Used for workflow transitions such as ending overrides, recording review outcomes, or appending additional business metadata post-incident.\n\nAll updates are fully audited to support regulatory trace and incident/follow-up review. Modifiable fields correspond to mutable columns in the healthcare_platform_emergency_access_overrides table, allowing for status, review, or timestamp updates (never for overwrite of core historical characteristics).\n\nUpdate is typically performed by compliance or administrative staff after incident review, using reviewed_by_user_id and reviewed_at, or to explicitly close out an emergency window (setting override_end_at).\n\nFor all permission and audit rules, consult business documentation and table comments for break-the-glass event processing.","properties":{"override_end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime override window ended, use null to leave unchanged."},"reviewed_by_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"User UUID of post-incident reviewer; set null to clear."},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime of review."}},"required":[]},"IHealthcarePlatformAuditLogArchive.IUpdate":{"type":"object","description":"Request body for updating metadata on an audit log archive (rare).\n\nMost fields are immutable after archive creation; only retention_expiry_at and archive_file_uri may typically be updated (e.g., extending retention or correcting storage endpoints due to location/policy change).\n\nAll updates are tracked and require justification for audit/compliance purposes. For business logic, see retention policy documentation and healthcare_platform_audit_log_archives table.","properties":{"retention_expiry_at":{"type":"string","format":"date-time","description":"Extended/changed expiry. No effect if set to earlier than created_at."},"archive_file_uri":{"type":"string","description":"Corrected or migrated file URI if archive moves or endpoints are reconfigured."}},"required":[]}}}}