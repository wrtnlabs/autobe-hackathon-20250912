import { tags } from "typia";

/**
 * Notification workflow node entity representing a single step in a
 * notification workflow DAG.
 *
 * This entity contains fields such as node type, templates for email and SMS
 * messages, delay configurations, and audit timestamps.
 *
 * The node is linked to its parent workflow by workflow_id.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type INotificationWorkflowWorkflowNode = {
  /** Primary key of the workflow node. */
  id: string & tags.Format<"uuid">;

  /** Foreign key referencing the parent workflow. */
  workflow_id: string & tags.Format<"uuid">;

  /** Type of node indicating Email, SMS, or Delay. */
  node_type: string;

  /** Display name of the node. */
  name: string;

  /** LiquidJS template string for email recipient address. */
  email_to_template?: string | null | undefined;

  /** LiquidJS template string for email subject. */
  email_subject_template?: string | null | undefined;

  /** LiquidJS template string for email body content. */
  email_body_template?: string | null | undefined;

  /** LiquidJS template string for SMS recipient number. */
  sms_to_template?: string | null | undefined;

  /** LiquidJS template string for SMS content. */
  sms_body_template?: string | null | undefined;

  /** Delay in milliseconds for DelayNode steps. */
  delay_ms?: (number & tags.Type<"int32">) | null | undefined;

  /** ISO 8601 duration string representing delay. */
  delay_duration?: string | null | undefined;

  /** Timestamp when the node was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the node was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp for the node. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace INotificationWorkflowWorkflowNode {
  /**
   * Request parameters for filtering, searching, and paginating workflow
   * nodes within a workflow.
   */
  export type IRequest = {
    /** Unique identifier of the workflow node to filter on. */
    id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Unique identifier of the parent workflow to filter workflow nodes. */
    workflow_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Type of the workflow node, e.g. email, sms, delay. */
    node_type?: string | null | undefined;

    /** Name of the workflow node for filtering and search. */
    name?: string | null | undefined;

    /** LiquidJS template string for email recipient address, nullable. */
    email_to_template?: string | null | undefined;

    /** LiquidJS template string for email subject line, nullable. */
    email_subject_template?: string | null | undefined;

    /** LiquidJS template string for email body content, nullable. */
    email_body_template?: string | null | undefined;

    /** LiquidJS template string for SMS recipient, nullable. */
    sms_to_template?: string | null | undefined;

    /** LiquidJS template string for SMS body, nullable. */
    sms_body_template?: string | null | undefined;

    /** Delay in milliseconds for DelayNode nodes, nullable. */
    delay_ms?: (number & tags.Type<"int32">) | null | undefined;

    /** ISO 8601 duration string for delay, nullable. */
    delay_duration?: string | null | undefined;

    /** Filter by node creation timestamp from (start). */
    created_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by node creation timestamp to (end). */
    created_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by node update timestamp from (start). */
    updated_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by node update timestamp to (end). */
    updated_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of items per page for pagination. */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Request body schema for creating a new Workflow Node.
   *
   * Includes required references to workflow, node type discriminator, name,
   * and optional LiquidJS templates or delay fields.
   */
  export type ICreate = {
    /** Foreign key referencing the parent workflow. */
    workflow_id: string & tags.Format<"uuid">;

    /** Type of node indicating Email, SMS, or Delay. */
    node_type: string;

    /** Display name of the node. */
    name: string;

    /** LiquidJS template string for email recipient address. */
    email_to_template?: string | null | undefined;

    /** LiquidJS template string for email subject. */
    email_subject_template?: string | null | undefined;

    /** LiquidJS template string for email body content. */
    email_body_template?: string | null | undefined;

    /** LiquidJS template string for SMS recipient number. */
    sms_to_template?: string | null | undefined;

    /** LiquidJS template string for SMS content. */
    sms_body_template?: string | null | undefined;

    /** Delay in milliseconds for DelayNode steps. */
    delay_ms?: (number & tags.Type<"int32">) | null | undefined;

    /** ISO 8601 duration string representing delay. */
    delay_duration?: string | null | undefined;
  };

  /**
   * Request body schema for updating a Workflow Node.
   *
   * All properties are optional allowing partial updates to any combination
   * of workflow ID, node type, templates, delay values, and deletion
   * timestamp.
   */
  export type IUpdate = {
    /** Foreign key referencing the parent workflow. */
    workflow_id?: (string & tags.Format<"uuid">) | undefined;

    /** Type of node indicating Email, SMS, or Delay. */
    node_type?: string | undefined;

    /** Display name of the node. */
    name?: string | undefined;

    /** LiquidJS template string for email recipient address. */
    email_to_template?: string | null | undefined;

    /** LiquidJS template string for email subject. */
    email_subject_template?: string | null | undefined;

    /** LiquidJS template string for email body content. */
    email_body_template?: string | null | undefined;

    /** LiquidJS template string for SMS recipient number. */
    sms_to_template?: string | null | undefined;

    /** LiquidJS template string for SMS content. */
    sms_body_template?: string | null | undefined;

    /** Delay in milliseconds for DelayNode steps. */
    delay_ms?: (number & tags.Type<"int32">) | null | undefined;

    /** ISO 8601 duration string representing delay. */
    delay_duration?: string | null | undefined;

    /** Soft deletion timestamp for the node. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary info of workflow node suitable for list display.
   *
   * Includes basic identifiers and classification fields needed to show a
   * list of workflow nodes.
   */
  export type ISummary = {
    /** Unique identifier of the workflow node */
    id: string & tags.Format<"uuid">;

    /** Type of node indicating Email, SMS, or Delay. */
    node_type: string;

    /** Display name of the node */
    name: string;

    /** Timestamp when the node was created */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp when the node was last updated */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };
}
