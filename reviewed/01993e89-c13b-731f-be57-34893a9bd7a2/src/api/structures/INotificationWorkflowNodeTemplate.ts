import { tags } from "typia";

/**
 * Represents reusable node templates for notification workflows including
 * email, sms, and delay templates.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type INotificationWorkflowNodeTemplate = {
  /** Primary Key of the node template entity. */
  id: string & tags.Format<"uuid">;

  /** Unique business identifier code for the node template. */
  code: string;

  /** Human-readable name of the node template. */
  name: string;

  /** Type of the node template: email, sms, or delay. */
  type: "email" | "sms" | "delay";

  /** LiquidJS template content of the node template. */
  template_body: string;

  /** Timestamp when the template was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the template was last updated. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace INotificationWorkflowNodeTemplate {
  /**
   * Request parameters for searching and filtering notification node
   * templates. Supports pagination and optional filtering by type and search
   * query.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. @default 100 */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** General purpose search string for template code, name, or content. */
    search?: string | null | undefined;

    /** Filter node templates by type: email, sms, delay. */
    type?: "email" | "sms" | "delay" | null | undefined;
  };

  /** Request payload for creating a new notification node template. */
  export type ICreate = {
    /** Unique business identifier code for the node template. */
    code: string;

    /** Human-readable name of the node template. */
    name: string;

    /** Type of the node template: email, sms, or delay. */
    type: "email" | "sms" | "delay";

    /** LiquidJS template content of the node template. */
    template_body: string;
  };

  /** Request payload for updating an existing notification node template. */
  export type IUpdate = {
    /** Unique business identifier code for the node template. */
    code?: string | null | undefined;

    /** Human-readable name of the node template. */
    name?: string | null | undefined;

    /** Type of the node template: email, sms, or delay. */
    type?: "email" | "sms" | "delay" | null | undefined;

    /** LiquidJS template content of the node template. */
    template_body?: string | null | undefined;
  };

  /**
   * Summary view for notification workflow node template.
   *
   * Contains the minimal identifying and descriptive properties for list
   * views.
   */
  export type ISummary = {
    /** Unique identifier of the node template. */
    id: string & tags.Format<"uuid">;

    /** Unique business identifier code for the node template. */
    code: string;

    /** Human-readable name of the node template. */
    name: string;

    /** Type of the node template: "email", "sms", or "delay". */
    type: string;
  };
}
