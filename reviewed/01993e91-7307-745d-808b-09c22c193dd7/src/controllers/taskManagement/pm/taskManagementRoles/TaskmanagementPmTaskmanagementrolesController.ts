import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deletetaskManagementPmTaskManagementRolesId } from "../../../../providers/deletetaskManagementPmTaskManagementRolesId";
import { PmAuth } from "../../../../decorators/PmAuth";
import { PmPayload } from "../../../../decorators/payload/PmPayload";

@Controller("/taskManagement/pm/taskManagementRoles/:id")
export class TaskmanagementPmTaskmanagementrolesController {
  /**
   * Delete a taskManagementRole by ID.
   *
   * Deletes a specific taskManagementRole by its unique identifier. This
   * permanently removes the role from the underlying task_management_roles
   * table.
   *
   * Only authorized users such as TPM, PM, or PMO roles may perform this
   * operation to ensure security and integrity of role management.
   *
   * Failure to locate the specified role by ID should result in an appropriate
   * error response.
   *
   * The operation has no request body and returns no response content upon
   * success.
   *
   * @param connection
   * @param id Unique UUID identifier of the taskManagementRole to delete
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @PmAuth()
    pm: PmPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deletetaskManagementPmTaskManagementRolesId({
        pm,
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
