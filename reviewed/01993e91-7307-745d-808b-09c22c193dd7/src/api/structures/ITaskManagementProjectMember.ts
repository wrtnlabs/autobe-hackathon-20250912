import { tags } from "typia";

/**
 * Project membership represents the link between users and projects, recording
 * user inclusion in projects with creation and update audit timestamps.
 * Supports soft deletion via optional deleted_at timestamp.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementProjectMember = {
  /** Primary key UUID of the project member record. */
  id: string & tags.Format<"uuid">;

  /** UUID of the associated project. */
  project_id: string & tags.Format<"uuid">;

  /** UUID of the user who is member of the project. */
  user_id: string & tags.Format<"uuid">;

  /** Timestamp when the project member record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the project member record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITaskManagementProjectMember {
  /**
   * Request payload for creating a new project member association, linking a
   * user to a project with audit timestamps. Optional soft deletion timestamp
   * may be included.
   */
  export type ICreate = {
    /** Associated project reference. */
    project_id: string & tags.Format<"uuid">;

    /** Member user reference. */
    user_id: string & tags.Format<"uuid">;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** Optional timestamp indicating soft deletion. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request payload for searching and paginating project member associations
   * with optional filters and pagination parameters.
   */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Limit of records per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Search term or filter for project members. */
    search?: string | null | undefined;
  };

  /**
   * Update interface for project membership allowing optional update of
   * project or user references and soft deletion timestamp.
   */
  export type IUpdate = {
    /** Optional new project UUID or null to unset the association. */
    project_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional new user UUID or null to unset the association. */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional updated soft delete timestamp or null to clear deletion. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
