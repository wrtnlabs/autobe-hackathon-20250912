import { tags } from "typia";

/**
 * Board membership entity representing users associated with specific boards,
 * with audit information including creation, update, and optional soft deletion
 * timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementBoardMember = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Associated board reference. */
  board_id: string & tags.Format<"uuid">;

  /** Member user reference. */
  user_id: string & tags.Format<"uuid">;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Optional timestamp indicating soft deletion. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITaskManagementBoardMember {
  /**
   * Request parameters for searching and paginating board members.
   *
   * Includes pagination, sorting, and keyword-based filtering options.
   */
  export type IRequest = {
    /** Page number. */
    page?: number | null | undefined;

    /** Limitation of records per a page. */
    limit?: number | null | undefined;

    /** Sorting field and direction, e.g., 'name asc'. */
    sort?: string | null | undefined;

    /** Search keyword for filtering members. */
    search?: string | null | undefined;
  };

  /**
   * Request payload for creating a new board member association, linking a
   * user to a board with audit timestamps. Optional soft deletion timestamp
   * may be specified.
   */
  export type ICreate = {
    /** Associated board reference. */
    board_id: string & tags.Format<"uuid">;

    /** Member user reference. */
    user_id: string & tags.Format<"uuid">;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** Optional timestamp indicating soft deletion. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request payload for updating board member information with audit
   * timestamps and optional soft deletion timestamp. All fields are optional
   * except for required presence of created_at and updated_at if provided.
   */
  export type IUpdate = {
    /** Associated board reference. */
    board_id?: (string & tags.Format<"uuid">) | undefined;

    /** Member user reference. */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Creation timestamp. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Last update timestamp. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Optional timestamp indicating soft deletion. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary type for Task Management Board Member entity.
   *
   * Represents the membership details at minimum, useful for listing board
   * members.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   */
  export type ISummary = {
    /**
     * Unique identifier of the membership record (UUID).
     *
     * Primary key of the board membership record.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Identifier of the associated board (UUID).
     *
     * Links membership record to the board entity.
     */
    board_id: string & tags.Format<"uuid">;

    /**
     * User identifier who is a member of the board (UUID).
     *
     * Identity reference for the member user.
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * Timestamp when the membership was created.
     *
     * Audit and tracking purposes.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the membership was last updated.
     *
     * Reflects last membership update.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
