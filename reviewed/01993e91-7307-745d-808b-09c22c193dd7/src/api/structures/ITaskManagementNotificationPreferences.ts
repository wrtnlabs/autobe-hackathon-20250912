import { tags } from "typia";

/**
 * Notification preference record specifying user opt-in and delivery methods
 * for various notification types within the task management system.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementNotificationPreferences = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * User owning these notification preferences, referencing their role table
   * such as user_id.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * Notification preference key, e.g. 'assignment', 'status_change',
   * 'comment', indicating the type of notification this preference controls.
   */
  preference_key: string;

  /** Indicates if the notification preference is enabled or disabled. */
  enabled: boolean;

  /**
   * Preferred method for notification delivery, such as 'email', 'push', or
   * 'sms'.
   */
  delivery_method: string;

  /** Timestamp when the preference was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the preference was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the preference was deleted (soft delete). Nullable if not
   * deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITaskManagementNotificationPreferences {
  /**
   * Search criteria and pagination parameters for notification preference
   * filtering
   */
  export type IRequest = {
    /**
     * Notification preference key, e.g. 'assignment', 'status_change',
     * 'comment', indicating the type of notification this preference
     * controls.
     */
    preference_key?: string | null | undefined;

    /** Indicates if the notification preference is enabled or disabled. */
    enabled?: boolean | null | undefined;

    /**
     * Preferred method for notification delivery, such as 'email', 'push',
     * or 'sms'.
     */
    delivery_method?: string | null | undefined;

    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Request to update notification preference with optional key, enabled
   * status, and delivery method.
   */
  export type IUpdate = {
    /**
     * Notification preference key, e.g. 'assignment', 'status_change',
     * 'comment', indicating the type of notification this preference
     * controls.
     */
    preference_key?: string | null | undefined;

    /** Indicates if the notification preference is enabled or disabled. */
    enabled?: boolean | undefined;

    /**
     * Preferred method for notification delivery, such as 'email', 'push',
     * or 'sms'.
     */
    delivery_method?: string | undefined;
  };
}
