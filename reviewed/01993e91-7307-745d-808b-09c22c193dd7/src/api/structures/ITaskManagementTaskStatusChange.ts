import { tags } from "typia";

/**
 * Record of a change to a task's status including references to the task and
 * the new status, timestamp, and optional comment.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementTaskStatusChange = {
  /** Unique identifier for the task status change record. */
  id: string & tags.Format<"uuid">;

  /** Foreign key referencing the associated task. */
  task_id: string & tags.Format<"uuid">;

  /** References an existing status entity. */
  new_status_id: string & tags.Format<"uuid">;

  /** Timestamp when the status was changed. */
  changed_at: string & tags.Format<"date-time">;

  /** Optional comment explaining the reason for status change. */
  comment?: string | null | undefined;
};
export namespace ITaskManagementTaskStatusChange {
  /**
   * Request body for creating a new task status change record. Includes
   * required references and timestamp. Optional comment is nullable.
   */
  export type ICreate = {
    /** Foreign key referencing the task. */
    task_id: string & tags.Format<"uuid">;

    /** Foreign key referencing new task status. */
    new_status_id: string & tags.Format<"uuid">;

    /** Timestamp when the status was changed. */
    changed_at: string & tags.Format<"date-time">;

    /** Optional comment explaining the status change reason. */
    comment?: string | null | undefined;
  };

  /**
   * Request body parameters to filter, paginate and sort task status change
   * list.
   */
  export type IRequest = {
    /** Optional filter for related task ID. */
    task_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit number of items per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Update payload for task status change records.
   *
   * Used to modify an existing status change entry with new values for
   * status, timestamp, or comment.
   */
  export type IUpdate = {
    /**
     * The ID of the new task status.
     *
     * This property specifies the unique identifier of the status being
     * applied to the task.
     *
     * It must reference a valid task status record in the system.
     */
    new_status_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * ISO 8601 date-time when the status change occurred.
     *
     * This timestamp records exactly when the status modification was made
     * in the system.
     *
     * It must follow correct date-time format.
     */
    changed_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional comment describing the status change.
     *
     * This field allows the user or system to note explanations or reasons
     * for the status update.
     *
     * Nullable in case no comment is provided.
     */
    comment?: string | null | undefined;
  };
}
