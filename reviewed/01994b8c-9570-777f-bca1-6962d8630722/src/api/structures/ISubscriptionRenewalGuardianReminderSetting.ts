import { tags } from "typia";

/**
 * Reminder settings attached to subscriptions for renewal notifications. Each
 * setting defines how many days before renewal to notify and via which channel.
 * Uniqueness enforced on subscription and days_before. Supports created_at,
 * updated_at, and soft delete timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ISubscriptionRenewalGuardianReminderSetting = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Referenced subscription's ID. */
  subscription_id: string & tags.Format<"uuid">;

  /**
   * Number of days before the subscription renewal to send the reminder.
   * Allowed values are 7, 3, or 1.
   */
  days_before: 7 | 3 | 1;

  /**
   * Communication channel for reminders. Allowed values are 'EMAIL' or
   * 'NONE'.
   */
  channel: "EMAIL" | "NONE";

  /** Timestamp when the reminder setting was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the reminder setting was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the reminder setting was soft deleted. Null if not
   * deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ISubscriptionRenewalGuardianReminderSetting {
  /**
   * Request query for subscriptionRenewalGuardianReminderSetting for
   * filtering and pagination.
   */
  export type IRequest = {
    /** Referenced subscription ID for filtering reminder settings. Nullable. */
    subscription_id?: string | null | undefined;

    /**
     * Days before renewal to filter reminder settings. Allowed values: 7,
     * 3, 1. Nullable.
     */
    days_before?: 7 | 3 | 1 | null | undefined;

    /**
     * Reminder communication channel to filter. Allowed values: EMAIL,
     * NONE. Nullable.
     */
    channel?: "EMAIL" | "NONE" | null | undefined;

    /** Pagination limit for list size. Nullable. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Pagination offset for list start. Nullable. */
    offset?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;
  };

  /**
   * Create request for subscriptionRenewalGuardianReminderSetting. Requires
   * subscription_id, days_before, and channel.
   */
  export type ICreate = {
    /** Referenced subscription's ID. */
    subscription_id: string & tags.Format<"uuid">;

    /**
     * Number of days before the subscription renewal to send the reminder.
     * Allowed values are 7, 3, or 1.
     */
    days_before: 7 | 3 | 1;

    /**
     * Communication channel for reminders. Allowed values are 'EMAIL' or
     * 'NONE'.
     */
    channel: "EMAIL" | "NONE";
  };

  /**
   * Partial update for reminder settings.
   *
   * All properties are optional except none are omitted
   *
   * - Use null explicitly for fields that need to be reset.
   *
   * Allows users to modify reminder trigger days, channel, or soft deletion.
   */
  export type IUpdate = {
    /**
     * Number of days before the subscription renewal to send the reminder.
     *
     * Allowed values are 7, 3, or 1.
     */
    days_before?: (number & tags.Type<"int32">) | undefined;

    /**
     * Communication channel for reminders.
     *
     * Allowed values are 'EMAIL' or 'NONE'.
     */
    channel?: string | undefined;

    /**
     * Timestamp when the reminder setting was soft deleted. Null if not
     * deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary of reminder settings with timing and channel. */
  export type ISummary = {
    /** Unique identifier of the reminder setting. */
    id: string & tags.Format<"uuid">;

    /** Number of days before renewal to send this reminder. */
    days_before: number & tags.Type<"int32">;

    /** Communication channel for the reminder. */
    channel: "EMAIL" | "NONE";
  };
}
