import { tags } from "typia";

/**
 * Subscription entity schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ISubscriptionRenewalGuardianSubscription = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Belonged user's unique identifier. */
  user_id: string & tags.Format<"uuid">;

  /** Subscribed vendor's unique identifier. */
  vendor_id: string & tags.Format<"uuid">;

  /** Name of the subscription plan. Unique per user and vendor. */
  plan_name: string;

  /** Billing cycle interval. */
  billing_cycle: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY";

  /** Subscription amount, must be >= 0. */
  amount: number;

  /** Currency code following ISO 4217 3-letter uppercase format. */
  currency: string;

  /** Subscription start date in UTC ISO 8601 format. */
  started_at: string & tags.Format<"date-time">;

  /** Next scheduled renewal date in UTC ISO 8601 format. */
  next_renewal_at: string & tags.Format<"date-time">;

  /** Subscription status. */
  status: "ACTIVE" | "PAUSED" | "CANCELED";

  /** Optional notes about the subscription. */
  notes?: string | null | undefined;

  /** Record creation timestamp in UTC ISO 8601 format. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp in UTC ISO 8601 format. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ISubscriptionRenewalGuardianSubscription {
  /** Subscription creation schema. */
  export type ICreate = {
    /** Subscribed vendor's unique identifier. */
    vendor_id: string & tags.Format<"uuid">;

    /** Name of the subscription plan. Unique per user and vendor. */
    plan_name: string;

    /** Billing cycle interval. */
    billing_cycle: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY";

    /** Subscription amount, must be >= 0. */
    amount: number;

    /** Currency code following ISO 4217 3-letter uppercase format. */
    currency: string;

    /** Subscription start date in UTC ISO 8601 format. */
    started_at: string & tags.Format<"date-time">;

    /** Subscription status. */
    status?: "ACTIVE" | "PAUSED" | "CANCELED" | null | undefined;

    /** Optional notes about the subscription. */
    notes?: string | null | undefined;
  };

  /**
   * Update object for subscriptionRenewalGuardianSubscription. Partial and
   * fields nullable for updates.
   */
  export type IUpdate = {
    /**
     * Name of the subscription plan. Unique per user and vendor. Nullable
     * for updates.
     */
    plan_name?: string | undefined;

    /**
     * Billing cycle interval. Allowed values: DAILY, WEEKLY, MONTHLY,
     * YEARLY. Nullable for updates.
     */
    billing_cycle?:
      | "DAILY"
      | "WEEKLY"
      | "MONTHLY"
      | "YEARLY"
      | null
      | undefined;

    /** Subscription amount, must be >= 0. Nullable for updates. */
    amount?: number | undefined;

    /**
     * Currency code following ISO 4217 3-letter uppercase format. Nullable
     * for updates.
     */
    currency?: string | null | undefined;

    /** Subscription start date in UTC ISO 8601 format. Nullable for updates. */
    started_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Next scheduled renewal date in UTC ISO 8601 format. Calculated by
     * advancing started_at by billing cycle intervals until strictly
     * greater than current time. Nullable for updates.
     */
    next_renewal_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Subscription status. Allowed values: ACTIVE, PAUSED, CANCELED.
     * Nullable for updates.
     */
    status?: "ACTIVE" | "PAUSED" | "CANCELED" | null | undefined;

    /** Optional notes about the subscription. Nullable for updates. */
    notes?: string | null | undefined;
  };

  /**
   * Request parameters for upcoming renewals listing including optional
   * pagination.
   */
  export type IUpcomingRenewalsRequest = {
    /** Page number for pagination, optional. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit of records per page, optional. */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /** Detailed summary of subscription with key fields for UI. */
  export type ISummary = {
    /** Unique identifier of the subscription. */
    id: string & tags.Format<"uuid">;

    /** Subscription plan name. */
    plan_name: string;

    /** Billing cycle of subscription. */
    billing_cycle: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY";

    /** Next renewal date/time in ISO8601 UTC. */
    next_renewal_at: string & tags.Format<"date-time">;

    /** Current subscription status. */
    status: "ACTIVE" | "PAUSED" | "CANCELED";

    /** Subscription amount, greater or equal to 0. */
    amount: number;

    /** Currency code ISO 4217 3-letter string. */
    currency: string;
  };
}
