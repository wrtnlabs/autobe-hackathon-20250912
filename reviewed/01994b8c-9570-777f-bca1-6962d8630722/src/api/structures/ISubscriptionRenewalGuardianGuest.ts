import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Guest users are unauthenticated visitors who can register and login. This
 * table tracks guest registration attempts or temporary data as needed.
 *
 * Primary key is UUID `id`.
 *
 * Created and updated timestamps for record maintenance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ISubscriptionRenewalGuardianGuest = {
  /**
   * Primary Key.
   *
   * Unique identifier of the guest user.
   */
  id: string & tags.Format<"uuid">;

  /** Guest user's email address. */
  email: string;

  /** Timestamp when the guest record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the guest record was last updated. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ISubscriptionRenewalGuardianGuest {
  /**
   * Guest user account creation payload.
   *
   * Contains guest email address for registration.
   *
   * Required for creating a guest user record.
   *
   * Email must be valid.
   */
  export type ICreate = {
    /** Guest user's email address. */
    email: string & tags.Format<"email">;
  };

  /**
   * Authorization response containing JWT token for guest user.
   *
   * Returned after successful authentication or join operations.
   */
  export type IAuthorized = {
    /** Unique guest user id. */
    id: string & tags.Format<"uuid">;

    /** Guest user's email address. */
    email: string & tags.Format<"email">;

    /** Timestamp when the guest record was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the guest record was last updated. */
    updated_at: string & tags.Format<"date-time">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request payload for refreshing JWT tokens using refresh token.
   *
   * Refresh token is required for authentication renewal.
   */
  export type IRefresh = {
    /** Refresh token string used to renew authorization. */
    refresh_token: string;
  };

  /** Request parameters for filtering and paginating guest user list. */
  export type IRequest = {
    /** Page number for paginated requests. */
    page?: number | null | undefined;

    /** Number of items per page limit. */
    limit?: number | null | undefined;

    /** Filter guests by email substring or exact match. */
    email?: string | null | undefined;
  };

  /**
   * Update of guest user details. Allowed to modify email and timestamps
   * updated_at.
   */
  export type IUpdate = {
    /** Guest user's email address. Must be a valid email format. */
    email?: (string & tags.Format<"email">) | undefined;
  };

  /**
   * Summary representation of a guest user with essential identification
   * fields.
   */
  export type ISummary = {
    /** Unique identifier of the guest user account */
    id: string & tags.Format<"uuid">;

    /** Email address of the guest user */
    email: string;

    /** Guest account creation timestamp */
    created_at: string & tags.Format<"date-time">;

    /** Guest account last update timestamp */
    updated_at: string & tags.Format<"date-time">;
  };
}
