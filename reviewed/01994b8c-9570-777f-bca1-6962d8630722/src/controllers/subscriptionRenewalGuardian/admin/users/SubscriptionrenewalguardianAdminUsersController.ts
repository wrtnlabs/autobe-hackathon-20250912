import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";

import { IPageISubscriptionRenewalGuardianUser } from "../../../../api/structures/IPageISubscriptionRenewalGuardianUser";
import { ISubscriptionRenewalGuardianUser } from "../../../../api/structures/ISubscriptionRenewalGuardianUser";

@Controller("/subscriptionRenewalGuardian/admin/users")
export class SubscriptionrenewalguardianAdminUsersController {
  /**
   * Search and retrieve a filtered, paginated list of subscription renewal
   * guardian users.
   *
   * Retrieve a filtered and paginated list of subscription renewal guardian
   * users from the system. This operation provides advanced search capabilities
   * for finding user accounts based on various criteria including email and
   * creation date.
   *
   * The operation supports comprehensive pagination with configurable page
   * sizes and offset. User sensitive fields such as password_hash are handled
   * securely and are not exposed.
   *
   * Security considerations include strict authorization roles ensuring only
   * admins may access this data. The data corresponds to the
   * subscription_renewal_guardian_user table as defined in the Prisma schema,
   * including all available user fields except sensitive authentication data.
   *
   * This operation is read-only and intended for administrative users with
   * appropriate permissions. It facilitates system oversight and user
   * management.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for subscription
   *   renewal guardian user filtering
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @TypedBody()
    body: ISubscriptionRenewalGuardianUser.IRequest,
  ): Promise<IPageISubscriptionRenewalGuardianUser> {
    body;
    return typia.random<IPageISubscriptionRenewalGuardianUser>();
  }

  /**
   * Retrieve detailed subscription renewal guardian user information by ID.
   *
   * Retrieve detailed subscription renewal guardian user information by user
   * ID. This operation fetches the user record including all available
   * properties except the password hash for security.
   *
   * The retrieval requires a valid user ID path parameter in UUID format.
   * Authorization is restricted to administrators and the user themselves. The
   * data source is the subscription_renewal_guardian_user table as defined in
   * the Prisma schema.
   *
   * This endpoint validates the path parameter format and handles errors
   * gracefully in the case of missing or unauthorized access.
   *
   * @param connection
   * @param id Unique identifier of the target subscription renewal guardian
   *   user
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":id")
  public async at(
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<ISubscriptionRenewalGuardianUser> {
    id;
    return typia.random<ISubscriptionRenewalGuardianUser>();
  }
}
