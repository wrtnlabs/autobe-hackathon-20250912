import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";

import { IPageISubscriptionRenewalGuardianGuest } from "../../../../api/structures/IPageISubscriptionRenewalGuardianGuest";
import { ISubscriptionRenewalGuardianGuest } from "../../../../api/structures/ISubscriptionRenewalGuardianGuest";

@Controller("/subscriptionRenewalGuardian/admin/guests")
export class SubscriptionrenewalguardianAdminGuestsController {
  /**
   * Search and retrieve paginated guest users list.
   *
   * Retrieve a filtered and paginated list of guest users. This operation
   * supports search parameters such as email filtering and date ranges for
   * creation or update. The response includes summarized information suitable
   * for administrative user listing purposes.
   *
   * Only users with admin roles are authorized to access this resource.
   *
   * List results support pagination with limit and offset parameters.
   *
   * This operation directly accesses the subscription_renewal_guardian_guest
   * database table.
   *
   * @param connection
   * @param body Search criteria and pagination parameters for guest users
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async search(
    @TypedBody()
    body: ISubscriptionRenewalGuardianGuest.IRequest,
  ): Promise<IPageISubscriptionRenewalGuardianGuest.ISummary> {
    body;
    return typia.random<IPageISubscriptionRenewalGuardianGuest.ISummary>();
  }

  /**
   * Get guest user details by ID.
   *
   * Retrieve detailed information about a specific guest user by their unique
   * ID. Useful for administrative audits or investigations.
   *
   * Accessible only to users with admin authorization roles.
   *
   * Detailed guest data includes email and timestamps for creation and last
   * update.
   *
   * This operation directly maps to the subscription_renewal_guardian_guest
   * database record.
   *
   * @param connection
   * @param id Unique identifier of the guest user
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":id")
  public async at(
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<ISubscriptionRenewalGuardianGuest> {
    id;
    return typia.random<ISubscriptionRenewalGuardianGuest>();
  }
}
