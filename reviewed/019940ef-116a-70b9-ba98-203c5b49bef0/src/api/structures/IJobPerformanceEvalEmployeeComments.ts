import { tags } from "typia";

/**
 * Employee comments on their own performance evaluations, capturing qualitative
 * feedback distinct from numeric scores. Linked to the employee making the
 * comment and to the evaluation cycle. Provides contextual insights into
 * employee perceptions and subjective assessment. Includes timestamps for
 * creation and update tracking. This table is a primary business entity for
 * independent CRUD operations on employee comments.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalEmployeeComments = {
  /** Primary Key. */
  id: string;

  /**
   * Belonged employee who authored the comment.
   * {@link job_performance_eval_employees.id}.
   *
   * UUID of the employee who made the comment.
   */
  employee_id: string;

  /**
   * Related evaluation cycle of the comment.
   * {@link job_performance_eval_evaluation_cycles.id}.
   *
   * UUID of the evaluation cycle linked to this comment.
   */
  evaluation_cycle_id: string;

  /**
   * Content of the employee's comment on their evaluation.
   *
   * This property contains the actual qualitative feedback or remarks
   * provided by the employee regarding their evaluation.
   *
   * It is a free text comment that can include detailed descriptions,
   * insights, or opinions about their performance.
   *
   * It is expected to be a reasonably sized text field.
   */
  comment: string;

  /**
   * Timestamp of when the comment was created.
   *
   * ISO 8601 formatted date-time string indicating when this comment record
   * was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of when the comment was last updated.
   *
   * ISO 8601 formatted date-time string indicating the last modification time
   * of this record.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IJobPerformanceEvalEmployeeComments {
  /** Request parameters for searching and paginating employee comments. */
  export type IRequest = {
    /**
     * Search keyword to filter employee comments by full text search or
     * similar matching.
     *
     * Optional property to filter comments containing the keyword.
     */
    search?: string | null | undefined;

    /**
     * Filter by employee ID to retrieve comments made by a specific
     * employee.
     *
     * Optional UUID filter for employee.
     */
    employee_id?: string | null | undefined;

    /**
     * Filter by evaluation cycle ID to get comments associated with a
     * specific evaluation period.
     *
     * Optional UUID filter for evaluation cycle.
     */
    evaluation_cycle_id?: string | null | undefined;

    /**
     * Pagination parameter: page number to fetch.
     *
     * Optional. If not specified, may default to 1.
     */
    page?: number | null | undefined;

    /**
     * Pagination parameter: number of records per page.
     *
     * Optional. Defaults to a sensible limit like 100 if not set.
     */
    limit?: number | null | undefined;
  };

  /** Request payload for creating a new employee comment. */
  export type ICreate = {
    /**
     * UUID of the employee creating the comment.
     *
     * Required to associate the comment with employee.
     */
    employee_id: string;

    /**
     * UUID of the evaluation cycle this comment is related to.
     *
     * Required to reference evaluation timeframe.
     */
    evaluation_cycle_id: string;

    /**
     * The content of the employee's comment.
     *
     * Required free text field.
     */
    comment: string;
  };

  /**
   * Request payload for updating an employee comment. Only comment text can
   * be changed.
   */
  export type IUpdate = {
    /**
     * The content of the employee's comment.
     *
     * Optional property to modify the comment text.
     */
    comment?: string | null | undefined;
  };

  /**
   * Summary of an employee's comment on their job performance evaluation.
   *
   * Includes:
   *
   * - Id: Unique UUID
   * - Employee_id: UUID of commenting employee
   * - Evaluation_cycle_id: UUID of related evaluation cycle
   * - Comment: Actual comment text
   *
   * This summary streamlines comment information for list displays without
   * timestamps.
   */
  export type ISummary = {
    /** Unique identifier for the employee comment record. */
    id: string & tags.Format<"uuid">;

    /** UUID of the employee who authored the comment. */
    employee_id: string & tags.Format<"uuid">;

    /** UUID of the evaluation cycle related to the comment. */
    evaluation_cycle_id: string & tags.Format<"uuid">;

    /** Content of the employee's comment regarding their evaluation. */
    comment: string;
  };
}
