import { tags } from "typia";

/**
 * System setting entity representing configuration key-value pairs and auditing
 * information.
 *
 * Includes unique keys, values, optional description, creation and update
 * timestamps, and soft deletion support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalSystemSettings = {
  /**
   * Primary Key.
   *
   * Unique identifier for the system setting.
   */
  id: string;

  /**
   * Unique key identifying the system setting.
   *
   * Represents the configuration key for this system setting.
   */
  setting_key: string;

  /**
   * Value corresponding to the system setting key.
   *
   * Contains the actual configuration value associated with the setting key.
   */
  setting_value: string;

  /**
   * Description providing context or notes about the system setting.
   *
   * Optional detailed explanation or notes regarding the setting usage.
   */
  description?: string | null | undefined;

  /**
   * Record creation timestamp.
   *
   * ISO 8601 date-time string indicating when the record was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * ISO 8601 date-time string indicating when the record was last updated.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp, null if not deleted.
   *
   * ISO 8601 date-time string or null if the record is active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IJobPerformanceEvalSystemSettings {
  /**
   * Request parameters for searching and pagination of system settings.
   *
   * Supports filtering, pagination, and sorting criteria for the system
   * settings.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * Page index for pagination starting from 1.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limit of records per page.
     *
     * Maximum number of records returned per page.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Search keyword.
     *
     * Search term applied on setting_key or description.
     */
    search?: string | null | undefined;

    /**
     * Filter by setting key.
     *
     * Allows to filter system settings by exact setting key.
     */
    setting_key?: string | null | undefined;

    /**
     * Sort order.
     *
     * Sort by setting_key ascending or descending.
     */
    order_by?: "asc" | "desc" | null | undefined;
  };
}
