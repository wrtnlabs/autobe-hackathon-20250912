import { tags } from "typia";

/**
 * Aggregated statistics for job performance evaluations by team and evaluation
 * cycle.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalTeamStatistic = {
  /** Unique identifier (UUID) for the team statistic record. */
  id: string & tags.Format<"uuid">;

  /** UUID of the evaluation cycle this statistic corresponds to. */
  evaluation_cycle_id: string & tags.Format<"uuid">;

  /** Identifier of the organizational team. */
  team_id: string;

  /** Average job performance score for the team, on a 1-5 scale. */
  average_performance_score: number;

  /** Average knowledge and skills score for the team, on a 1-5 scale. */
  average_knowledge_score: number;

  /**
   * Average problem solving and collaboration score for the team, on a 1-5
   * scale.
   */
  average_problem_solving_score: number;

  /** Average innovation score for the team, on a 1-5 scale. */
  average_innovation_score: number;

  /** Count of evaluations included in this team's statistics. */
  evaluation_count: number & tags.Type<"int32">;

  /** Timestamp of record creation (ISO 8601 format). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update (ISO 8601 format). */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp (nullable, ISO 8601 format). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IJobPerformanceEvalTeamStatistic {
  /** Request parameters for searching and paginating team statistics. */
  export type IRequest = {
    /** Page number for paginated retrieval. */
    page?: (number & tags.Minimum<0>) | null | undefined;

    /** Maximum number of items per page. */
    limit?: (number & tags.Minimum<0>) | null | undefined;

    /**
     * Filter criteria to include only team statistics satisfying provided
     * conditions.
     */
    filter?:
      | {
          /** UUID of evaluation cycle to filter by. */
          evaluation_cycle_id?: (string & tags.Format<"uuid">) | undefined;

          /** Organizational team identifier to filter by. */
          team_id?: string | undefined;

          /** Include records created after this ISO 8601 date-time. */
          created_after?: (string & tags.Format<"date-time">) | undefined;

          /** Include records created before this ISO 8601 date-time. */
          created_before?: (string & tags.Format<"date-time">) | undefined;
        }
      | null
      | undefined;

    /** Text search term to filter results. */
    search?: string | null | undefined;

    /** Field name by which to order the data. */
    orderBy?: string | null | undefined;

    /** Direction in which to order the results: 'asc' or 'desc'. */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary information of team statistics for job performance evaluations.
   *
   * Includes average scores and evaluation count for quick reference.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique identifier for the team statistics record.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Referenced evaluation cycle's unique ID.
     *
     * Links the record to a defined evaluation period.
     */
    evaluation_cycle_id: string & tags.Format<"uuid">;

    /**
     * Organizational team identifier.
     *
     * Used to distinguish team-level statistics.
     */
    team_id: string & tags.Format<"uuid">;

    /**
     * Average job performance score for the team during the evaluation
     * cycle.
     *
     * Computed as the mean of individual employee scores.
     */
    average_performance_score: number;

    /**
     * Average knowledge and skills score for the team during the evaluation
     * cycle.
     */
    average_knowledge_score: number;

    /**
     * Average problem solving and collaboration score for the team during
     * the evaluation cycle.
     */
    average_problem_solving_score: number;

    /** Average innovation score for the team during the evaluation cycle. */
    average_innovation_score: number;

    /** Number of individual evaluations included in the team's statistics. */
    evaluation_count: number & tags.Type<"int32">;

    /**
     * Record creation timestamp.
     *
     * Indicates when the statistics record was created.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Record last update timestamp.
     *
     * Indicates the latest update time.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
