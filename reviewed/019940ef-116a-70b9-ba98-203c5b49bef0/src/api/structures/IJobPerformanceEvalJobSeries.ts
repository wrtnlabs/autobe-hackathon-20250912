import { tags } from "typia";

/**
 * Job Series represents the mid-level job classification under a job group.
 *
 * It helps segment job roles into more specific clusters. This model references
 * the parent job group and is essential for maintaining job hierarchy.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalJobSeries = {
  /**
   * Unique identifier for the job series.
   *
   * Format: UUID string.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the parent job group.
   *
   * Format: UUID string.
   */
  job_group_id: string & tags.Format<"uuid">;

  /** Unique code representing the job series. */
  code: string;

  /** The name of the job series. */
  name: string;

  /** Optional detailed description of the job series. */
  description?: string | null | undefined;

  /** Timestamp when the record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Optional timestamp for soft deletion. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IJobPerformanceEvalJobSeries {
  /** Request parameters for searching and paginating job series. */
  export type IRequest = {
    /** Optional filter for job series code */
    code?: string | undefined;

    /** Optional filter for job series name, supports partial matching */
    name?: string | undefined;

    /** Optional filter for job series description */
    description?: string | null | undefined;

    /** Optional page number for pagination */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional limit of records per page */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional sort field and direction */
    orderBy?: string | null | undefined;
  };

  /** Request payload to create a new job series entity. */
  export type ICreate = {
    /** Parent job group's UUID */
    job_group_id: string & tags.Format<"uuid">;

    /** Unique code for the job series */
    code: string;

    /** Name of the job series */
    name: string;

    /** Optional detailed description */
    description?: string | null | undefined;
  };

  /**
   * Request payload to update an existing job series entity with optional
   * partial fields.
   */
  export type IUpdate = {
    /** Optional updated parent job group's UUID */
    job_group_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional updated unique code */
    code?: string | null | undefined;

    /** Optional updated name */
    name?: string | null | undefined;

    /** Optional updated description */
    description?: string | null | undefined;

    /** Optional soft delete timestamp */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary of Job Series with essential identification and descriptive
   * fields.
   */
  export type ISummary = {
    /** Unique identifier for the job series. */
    id: string;

    /** The name of the job series. */
    name: string;

    /** Unique code representing the job series. */
    code: string;

    /** Optional brief description of the job series. */
    description?: string | null | undefined;
  };
}
