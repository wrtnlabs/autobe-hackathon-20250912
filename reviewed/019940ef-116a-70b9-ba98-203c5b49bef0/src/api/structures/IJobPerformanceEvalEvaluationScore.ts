import { tags } from "typia";

/**
 * Represents a job performance evaluation score record linked to a specific
 * evaluation (self or manager evaluation).
 *
 * Captures category and score details stored in the database along with audit
 * timestamps.
 *
 * This schema is used for both input and output of evaluation score data in
 * various API endpoints.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalEvaluationScore = {
  /** Primary key unique identifier of the evaluation score record */
  id: string & tags.Format<"uuid">;

  /** Reference to either self or manager evaluation this score belongs to */
  evaluation_id: string & tags.Format<"uuid">;

  /**
   * Category name of the evaluation score, e.g., 'work_performance',
   * 'knowledge_skill'
   */
  category: string;

  /** Integer score value from 1 to 5 representing the evaluation result */
  score: number & tags.Type<"int32">;

  /** Timestamp when the record was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the record was last updated */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IJobPerformanceEvalEvaluationScore {
  /**
   * Request parameters for querying and filtering evaluation scores with
   * pagination.
   *
   * Supports filtering on evaluation_id, category, score range, and sorting
   * directions.
   *
   * Paging parameters page and limit control the result set size and offset.
   */
  export type IRequest = {
    /** Filter scores by associated evaluation ID */
    evaluation_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Evaluation category name to filter on. E.g., 'work_performance',
     * 'knowledge_skill'
     */
    category?: string | undefined;

    /** Minimum score value filter. Inclusive. 1 to 5 scale. */
    min_score?: (number & tags.Type<"int32">) | undefined;

    /** Maximum score value filter. Inclusive. 1 to 5 scale. */
    max_score?: (number & tags.Type<"int32">) | undefined;

    /** Page number for paginated results. Nullable. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit of records per page. Nullable. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Property name used to sort records. */
    order_by?: string | null | undefined;

    /** Sorting direction for the order_by property. */
    order_direction?: "asc" | "desc" | null | undefined;
  };

  /**
   * Request body schema to create a new evaluation score record.
   *
   * Includes evaluation ID, category name, and score value in 1 to 5 scale.
   *
   * Properties created_at and updated_at are system managed and omitted in
   * create requests.
   */
  export type ICreate = {
    /** Reference ID of the parent evaluation (self or manager evaluation) */
    evaluation_id: string & tags.Format<"uuid">;

    /**
     * Category name of the evaluation score, e.g., 'work_performance',
     * 'knowledge_skill'
     */
    category: string;

    /**
     * Score value assigned in the evaluation category, expected 1 to 5
     * inclusive.
     */
    score: number & tags.Type<"int32">;
  };

  /**
   * Request body schema to update an evaluation score record partially.
   *
   * Allows modifying category name and score value. All fields are optional.
   *
   * Properties evaluation_id, created_at, and updated_at are system managed
   * and not included for update.
   */
  export type IUpdate = {
    /**
     * Category name of the evaluation score, e.g., 'work_performance',
     * 'knowledge_skill'
     */
    category?: string | null | undefined;

    /**
     * Score value assigned in the evaluation category, expected 1 to 5
     * inclusive.
     */
    score?: (number & tags.Type<"int32">) | null | undefined;
  };
}
