import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Employee entity representing system users with authentication details
 * including unique email and hashed password.
 *
 * Includes personal identification, timestamps, and soft deletion support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalEmployee = {
  /**
   * Primary Key.
   *
   * Unique identifier for the employee.
   */
  id: string;

  /** Employee's unique email address used for login and notifications. */
  email: string;

  /**
   * Hashed password for authentication.
   *
   * This field is NOT included in response bodies for security.
   */
  password_hash: string;

  /** Employee's full name. */
  name: string;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when record was soft deleted, NULL if active.
   *
   * This field is optional.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IJobPerformanceEvalEmployee {
  /**
   * Request body for creating a new employee.
   *
   * Contains required fields excluding id and timestamps which are
   * auto-generated. Password hash must be provided, password hashing should
   * be done before sending. Does NOT accept user_id or other actor IDs.
   */
  export type ICreate = {
    /**
     * Employee's unique email address.
     *
     * Must be unique and used for login.
     */
    email: string;

    /**
     * Hashed password for authentication.
     *
     * Password must be hashed prior to sending.
     */
    password_hash: string;

    /** Employee's full name. */
    name: string;
  };

  /**
   * Request payload for employee login authentication.
   *
   * Includes email and password fields.
   */
  export type ILogin = {
    /** Email address for employee login. */
    email: string;

    /** Cleartext password for authentication. */
    password: string;
  };

  /**
   * Request payload for refreshing JWT authorization tokens.
   *
   * Must include valid refresh token string.
   */
  export type IRefresh = {
    /** Refresh token issued on prior authentication. */
    refresh_token: string;
  };

  /**
   * Response containing employee authentication tokens and identity info.
   *
   * Includes access and refresh JWT tokens along with expiration.
   */
  export type IAuthorized = {
    /** Employee unique UUID identifier. */
    id: string & tags.Format<"uuid">;

    /** Email address of the employee. */
    email: string;

    /**
     * Hashed password for authentication.
     *
     * This field is NOT included in response bodies for security.
     */
    password_hash: string;

    /** Full name of the employee. */
    name: string;

    /** Record creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Record last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when record was soft deleted, NULL if active.
     *
     * This field is optional.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT access token string for API authorization. */
    access_token?: string | undefined;

    /** JWT refresh token string to renew access. */
    refresh_token?: string | undefined;

    /** Token expiration timestamp in ISO 8601 format. */
    expires_at?: (string & tags.Format<"date-time">) | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Input type for updating existing Employee information.
   *
   * Allows partial updates of mutable fields like email, password hash, and
   * name.
   *
   * The 'deleted_at' field supports logical deletion and must be nullable.
   */
  export type IUpdate = {
    /**
     * Employee's unique email address used for login and notifications.
     *
     * Must follow the format of a valid email.
     */
    email?: string | undefined;

    /**
     * Hashed password for authentication. Never store plaintext passwords.
     *
     * Must be a secure hash value.
     */
    password_hash?: string | undefined;

    /**
     * Employee's full name.
     *
     * Used for display and identification in the system.
     */
    name?: string | undefined;

    /**
     * Timestamp when record was soft deleted, NULL if active.
     *
     * Used for logical deletion and audit purposes.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
