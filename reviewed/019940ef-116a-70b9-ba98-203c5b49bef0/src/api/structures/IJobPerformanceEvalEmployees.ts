import { tags } from "typia";

/**
 * Employee entity representing basic employee information in the system.
 *
 * Includes unique email, name, timestamps, and soft deletion support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalEmployees = {
  /**
   * Primary Key.
   *
   * Unique identifier for the employee.
   */
  id: string;

  /** Employee's unique email address used for login and notifications. */
  email: string;

  /** Employee's full name. */
  name: string;

  /**
   * Record creation timestamp.
   *
   * ISO 8601 date-time string when the record was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * ISO 8601 date-time string for last update time.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when record was soft deleted, NULL if active.
   *
   * ISO 8601 date-time string or null if the record is active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IJobPerformanceEvalEmployees {
  /**
   * Request parameters to query/filter employee list with pagination.
   *
   * Includes filter criteria like search keyword on name or email.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * The current page number for paginated results.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limit of records per page.
     *
     * Defines max number of entries to fetch.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Search text.
     *
     * Keyword to search employees by name or email.
     */
    search?: string | null | undefined;

    /**
     * Sort order by name.
     *
     * Can be 'asc' or 'desc'.
     */
    order_by_name?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary information for an employee, including unique ID and full name.
   *
   * Optimized for listing employees in user interfaces.
   *
   * Derived from job_performance_eval_employees table.
   */
  export type ISummary = {
    /** Unique identifier. */
    id: string & tags.Format<"uuid">;

    /** Employee's full name. */
    name: string;
  };
}
