import { tags } from "typia";

/**
 * Schema defining flags raised by users on recipe reviews to report
 * inappropriate content.
 *
 * Includes user identity, the review flagged, reason, and creation timestamp.
 *
 * Enables moderation and content quality control via flag tracking.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRecipeSharingReviewFlag = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** User who flagged the review recipe_sharing_regularusers.id */
  recipe_sharing_user_id: string & tags.Format<"uuid">;

  /** Flagged review recipe_sharing_reviews.id */
  recipe_sharing_review_id: string & tags.Format<"uuid">;

  /**
   * Reason selected by the user for flagging (e.g., spam, offensive
   * language).
   */
  reason: string;

  /** Timestamp when the flag was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IRecipeSharingReviewFlag {
  /**
   * Request parameters for listing and searching review flags with
   * pagination, filtering, and sorting support.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Search term or filter string. This property enables filtering flags
     * by criteria such as reason or user ID.
     */
    search?: string | null | undefined;

    /** Sorting order, e.g., 'asc' or 'desc'. */
    order?: string | null | undefined;
  };

  /**
   * Create a new flag for a review indicating inappropriate content or other
   * issues. This requires the user ID of the flagger, the review ID being
   * flagged, and a reason for the flag.
   */
  export type ICreate = {
    /** User who flagged the review recipe_sharing_regularusers.id */
    recipe_sharing_user_id: string & tags.Format<"uuid">;

    /** Flagged review recipe_sharing_reviews.id */
    recipe_sharing_review_id: string & tags.Format<"uuid">;

    /**
     * Reason selected by the user for flagging (e.g., spam, offensive
     * language)
     */
    reason: string;
  };

  /**
   * Update an existing review flag reason. Only the reason field may be
   * updated and is optional.
   */
  export type IUpdate = {
    /** Optional updated reason for flagging */
    reason?: string | null | undefined;
  };
}
