import { tags } from "typia";

/**
 * Schema representing a Recipe Category in the system.
 *
 * Includes category type, human-readable name, optional description, and audit
 * timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRecipeSharingRecipeCategory = {
  /** Primary key identifier of the recipe category. */
  id: string & tags.Format<"uuid">;

  /** Type of category such as cuisine, diet, or difficulty. */
  category_type: string;

  /** Human-readable name of the category. */
  name: string;

  /** Detailed description of the category, if available. */
  description?: string | null | undefined;

  /** Creation timestamp of the category. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp of the category. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IRecipeSharingRecipeCategory {
  /**
   * Request parameters for searching and filtering recipe categories.
   *
   * Includes pagination controls and optional filtering by category type and
   * name.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * The page number for paginated results.
     *
     * If not provided, defaults to first page.
     */
    page?: number | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * Defines how many records to return.
     *
     * Defaults to 100 if omitted.
     */
    limit?: number | null | undefined;

    /**
     * Type of category such as cuisine, diet, or difficulty.
     *
     * Used for filtering categories in search results.
     */
    category_type?: string | null | undefined;

    /**
     * Name of the category to filter by substring matching.
     *
     * Supports partial matching for searching categories.
     */
    name?: string | null | undefined;
  };

  /**
   * Payload for creating a new recipe category.
   *
   * Requires specifying the category type and name. Description is optional.
   */
  export type ICreate = {
    /** Type of category such as cuisine, diet, or difficulty. */
    category_type: string;

    /** Human-readable name of the category. */
    name: string;

    /** Optional detailed description of the category. */
    description?: string | null | undefined;
  };

  /**
   * Request body to update an existing recipe category.
   *
   * All properties are optional and nullable for partial updates.
   */
  export type IUpdate = {
    /**
     * Type of category (e.g., cuisine, diet, difficulty). Optional for
     * update.
     */
    category_type?: string | null | undefined;

    /** Category name. Optional for update. */
    name?: string | null | undefined;

    /** Optional category description. */
    description?: string | null | undefined;
  };

  /** Summary variant for list displays. */
  export type ISummary = {
    /** Unique identifier of the recipe category. */
    id: string & tags.Format<"uuid">;

    /** The type of category, e.g., cuisine, diet, difficulty. */
    category_type: string;

    /** Name of the category. */
    name: string;

    /** Optional description of the category. */
    description?: string | null | undefined;
  };
}
