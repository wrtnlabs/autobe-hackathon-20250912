import { tags } from "typia";

/**
 * A shopping list item representing one ingredient to buy including quantity
 * and unit information.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRecipeSharingShoppingListItem = {
  /** Unique identifier of the shopping list item */
  id: string & tags.Format<"uuid">;

  /** UUID of the parent shopping list to which this item belongs */
  shopping_list_id: string & tags.Format<"uuid">;

  /** UUID of the ingredient being purchased */
  ingredient_id: string & tags.Format<"uuid">;

  /** Quantity of the ingredient to purchase */
  quantity: number;

  /** Measurement unit for the quantity, e.g., grams, cups */
  unit: string;

  /** Optional notes such as brand preference or substitution hints */
  notes?: string | null | undefined;

  /** Timestamp when the shopping list item was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the shopping list item was last updated */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IRecipeSharingShoppingListItem {
  /** Properties required to create a new shopping list item. */
  export type ICreate = {
    /** UUID of the parent shopping list */
    shopping_list_id: string & tags.Format<"uuid">;

    /** UUID of the ingredient */
    ingredient_id: string & tags.Format<"uuid">;

    /** Quantity to purchase */
    quantity: number;

    /** Measurement unit */
    unit: string;

    /** Optional notes, can be null */
    notes?: string | null | undefined;
  };

  /** Properties allowed to update for a shopping list item. */
  export type IUpdate = {
    /** UUID of the parent shopping list */
    shopping_list_id?: (string & tags.Format<"uuid">) | undefined;

    /** UUID of the ingredient */
    ingredient_id?: (string & tags.Format<"uuid">) | undefined;

    /** Quantity to purchase */
    quantity?: number | undefined;

    /** Measurement unit */
    unit?: string | undefined;

    /** Optional notes, can be null */
    notes?: string | null | undefined;
  };

  /**
   * Summary type for a shopping list item.
   *
   * Includes essential information for list displays without detailed nested
   * properties.
   */
  export type ISummary = {
    /**
     * Unique identifier of the shopping list item.
     *
     * Unique identifier for the shopping list item to track it in the
     * system.
     */
    id: string & tags.Format<"uuid">;

    /** Unique identifier of the linked ingredient. */
    ingredient_id: string & tags.Format<"uuid">;

    /**
     * Amount of the ingredient to purchase, expressed as a floating-point
     * number.
     */
    quantity: number;

    /** Unit of measurement for the quantity, e.g., grams, cups. */
    unit: string;
  };
}
