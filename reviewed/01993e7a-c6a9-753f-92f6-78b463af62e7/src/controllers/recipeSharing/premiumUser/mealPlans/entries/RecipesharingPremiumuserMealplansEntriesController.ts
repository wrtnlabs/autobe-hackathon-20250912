import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { patchrecipeSharingPremiumUserMealPlansMealPlanIdEntries } from "../../../../../providers/patchrecipeSharingPremiumUserMealPlansMealPlanIdEntries";
import { PremiumuserAuth } from "../../../../../decorators/PremiumuserAuth";
import { PremiumuserPayload } from "../../../../../decorators/payload/PremiumuserPayload";

import { IPageIRecipeSharingMealPlanEntry } from "../../../../../api/structures/IPageIRecipeSharingMealPlanEntry";

@Controller("/recipeSharing/premiumUser/mealPlans/:mealPlanId/entries")
export class RecipesharingPremiumuserMealplansEntriesController {
  /**
   * List meal plan entries for a meal plan.
   *
   * Retrieve all entries for a specified meal plan identified by mealPlanId.
   * Entries include recipes planned, quantities, scheduled dates, and meal
   * slots.
   *
   * Allows users to view and manage their scheduled meal recipes.
   *
   * Requires authentication and ownership authorization.
   *
   * Errors are returned for invalid or unauthorized requests.
   *
   * @param connection
   * @param mealPlanId Unique identifier of the meal plan to retrieve entries
   *   for
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @PremiumuserAuth()
    premiumUser: PremiumuserPayload,
    @TypedParam("mealPlanId")
    mealPlanId: string & tags.Format<"uuid">,
  ): Promise<IPageIRecipeSharingMealPlanEntry> {
    try {
      return await patchrecipeSharingPremiumUserMealPlansMealPlanIdEntries({
        premiumUser,
        mealPlanId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
