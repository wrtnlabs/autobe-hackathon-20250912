import { tags } from "typia";

/**
 * Resource schema for a story image linked to an AI-generated story or story
 * page (storyfield_ai_story_images table). Includes metadata such as S3 URI,
 * image description, audit fields, and relational foreign keys, with
 * documentation referencing the relevant Prisma schema columns.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiStoryImage = {
  /**
   * Primary key of the storyfield_ai_story_images record. Unique identifier
   * for the image entry. Sourced from the Prisma model, this property ensures
   * relational and access accuracy in business flows.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the parent AI-generated story (storyfield_ai_stories.id).
   * This is a required foreign key, always present, linking the image to its
   * owner story for all list, detail, and business logic operations.
   */
  storyfield_ai_story_id: string & tags.Format<"uuid">;

  /**
   * Optional reference to the child page (storyfield_ai_story_pages.id) if
   * the image is associated with a specific page. Nullable; if omitted or
   * null, the image belongs to the overall story and not to a particular
   * page. Used for positioning images within the correct context inside a
   * story.
   */
  storyfield_ai_story_page_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * URI to the actual image resource. Should be a complete S3 or storage
   * location. Referenced by readers/editors and accessible as an external
   * resource via pre-signed URL, never as a raw file.
   */
  image_uri: string;

  /**
   * Optional alt text or accessibility description for the image. Used to
   * facilitate screen-reader usability, search indexing, or accessibility
   * compliance. Nullable field; can be omitted if not available.
   */
  description?: string | null | undefined;

  /**
   * Timestamp when the image record was created. Used for ordering, audit,
   * and compliance reporting. Always set on creation and never NULL in valid
   * records.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of the most recent update to this image record. Required for
   * update tracking and business audit trails, always present in non-deleted
   * records.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * If soft-deleted, this field holds the time at which the image was
   * logically removed or hidden from general listing. Nullable. When not
   * null, indicates the image is soft-deleted and is excluded from standard
   * API/UX flows.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiStoryImage {
  /**
   * Query, filter, and pagination contract to list/search story images for a
   * specific fairy tale story (storyfield_ai_story_images table). Used in API
   * endpoints that return paginated and filtered lists of images.
   */
  export type IRequest = {
    /**
     * Request page number for the paginated result set. This controls which
     * page of results to return, supporting typical paging UI patterns.
     * Optional for queries.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of records to return per page of results. Controls
     * result size for paginated queries for story images.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Indicates the field on which to sort the story images in the search
     * result (e.g., 'created_at'). Sorting field must refer to schema
     * column.
     */
    sort?: string | undefined;

    /**
     * Defines sorting direction for returned results, can be 'asc' for
     * ascending or 'desc' for descending. Used in conjunction with 'sort'.
     */
    direction?: "asc" | "desc" | undefined;

    /**
     * Optional filter to restrict results to images linked to a specific
     * page (by page UUID). Must be a valid UUID string if supplied.
     */
    storyfield_ai_story_page_id?: string | undefined;

    /**
     * Filter for image result records where the description contains this
     * substring. Useful for keyword search and accessibility filtering.
     */
    description_contains?: string | undefined;

    /**
     * Filter for images with created_at timestamp equal to or after this
     * value (inclusive). ISO 8601 date-time string.
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter for images with created_at timestamp up to and including this
     * value. Used for date range filtering. ISO 8601 format.
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;
  };

  /**
   * Image upload DTO for attaching an illustration to a fairy tale story.
   * Used to insert a new record in storyfield_ai_story_images. Required
   * fields are story ID and image URI. Optionally include the page ID (for
   * page illustrations) and a description (for accessibility or search).
   * Respects business and compliance requirements for S3 URI handling and
   * page linkage.
   *
   * Mapped from request body of: IStoryfieldAiStoryImage.ICreate
   */
  export type ICreate = {
    /**
     * Parent story's UUID. Must refer to an existing story record. Used to
     * establish business context and ensure the image is attached to the
     * correct AI fairy tale. Always required and validated upon creation.
     * Value is a canonical UUID string, e.g.,
     * "123e4567-e89b-12d3-a456-426614174000".
     *
     * Referenced from original Prisma schema:
     * storyfield_ai_story_images.storyfield_ai_story_id
     */
    storyfield_ai_story_id: string & tags.Format<"uuid">;

    /**
     * Optional reference to a story page within the parent story. If the
     * image is associated with a specific page, provide the page's UUID;
     * otherwise, use null for a story-wide illustration. Enables page-level
     * illustration support and navigation. Value is a canonical UUID string
     * or null.
     *
     * Referenced from original Prisma schema:
     * storyfield_ai_story_images.storyfield_ai_story_page_id
     */
    storyfield_ai_story_page_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * URI (generally an S3 pre-signed URL or file location) for the image
     * associated with the story or page. This property governs where the
     * image is retrieved or rendered fromâ€”must be a valid URI (HTTPS
     * recommended for S3). Example:
     * "https://bucket.s3.amazonaws.com/path/to/image.png". Length
     * restricted per underlying business schema.
     *
     * Referenced from original Prisma schema:
     * storyfield_ai_story_images.image_uri
     */
    image_uri: string & tags.MaxLength<80000>;

    /**
     * Optional descriptive text, alt tag, or accessibility annotation for
     * the image. Aids in accessibility compliance, search, and non-visual
     * rendering. Freeform text, can be null if unneeded. Max length defined
     * by schema (string type).
     *
     * Referenced from original Prisma schema:
     * storyfield_ai_story_images.description
     */
    description?: string | null | undefined;
  };

  /**
   * DTO for updating existing story image metadata (image URI, description).
   * Allows patching file association or accessibility text. All properties
   * optional; must provide at least one field per API business rule. Based on
   * business logic and request context.
   *
   * Mapped from request body of: IStoryfieldAiStoryImage.IUpdate
   */
  export type IUpdate = {
    /**
     * (Optional) New URI for the image. Allows replacing the S3 file or
     * re-associating an illustration with a different image file. Must be a
     * valid URI string and conform to business file requirements. Maximum
     * length is 80000 characters as defined in schema.
     *
     * Referenced from original Prisma schema:
     * storyfield_ai_story_images.image_uri.
     */
    image_uri?: (string & tags.MaxLength<80000>) | undefined;

    /**
     * (Optional) New description, alt text, or annotation for the image.
     * This field can be used to update accessibility labels or provide
     * improved descriptive context for the image. Freeform text compliant
     * with string/biz rules.
     */
    description?: string | null | undefined;
  };

  /**
   * Summary object for images (including AI-generated illustrations,
   * user-uploaded images, or page-level artwork) in a story. Contains the
   * essentials for image listing, review, moderation, and client rendering.
   * Background data and sensitive operational fields are omitted for
   * efficiency.
   */
  export type ISummary = {
    /**
     * Unique identifier for the illustration or image record attached to a
     * story or individual page. Sourced from the primary key of
     * storyfield_ai_story_images table.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Canonical URI location of the image file (often an S3 pre-signed
     * URL). Used by the client for direct access, rendering, sharing, or
     * moderation. May be used as story cover, page illustration, or
     * thumbnail.
     */
    image_uri: string;

    /**
     * Optional alternate text or accessibility annotation for the image.
     * Aids screen readers and fulfills compliance for accessible content.
     * Null or omitted if not provided.
     */
    description?: string | null | undefined;

    /**
     * Soft deletion (suppression) time for the image. Used for logical
     * removal, content moderation, compliance, or restoring audit trace of
     * illustrated artifacts.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
