import { tags } from "typia";

/**
 * API-facing DTO for a single story page record, returning all business, audit,
 * and compliance metadata. All fields are mapped directly to the
 * storyfield_ai_story_pages Prisma model, following exact names for
 * traceability and object-relational mapping. Used for both frontend detail and
 * admin review flows.
 *
 * - Id: Unique page record identifier (UUID).
 * - Storyfield_ai_story_id: Parent story (UUID).
 * - Page_number: Logical ordering/index (int).
 * - Text: Narrative content (string).
 * - Created_at/updated_at: Timestamps (ISO 8601).
 * - Deleted_at: Optional soft-deletion field for compliance/audit/trash flows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiStoryPage = {
  /**
   * Primary key identifier for the story page (UUID). Set by the service on
   * creation. Referenced by storyfield_ai_story_pages.id (Prisma).
   */
  id: string & tags.Format<"uuid">;

  /**
   * Foreign key to the parent story's ID (UUID). All pages must be associated
   * with a valid story. Used for secure page lookup. Linked to
   * storyfield_ai_story_pages.storyfield_ai_story_id (Prisma).
   */
  storyfield_ai_story_id: string & tags.Format<"uuid">;

  /**
   * 0-based or 1-based sequential position of this page within the parent
   * story. Ensures natural reading order and enables direct navigation. Must
   * be positive and unique within story. From
   * storyfield_ai_story_pages.page_number (Prisma).
   */
  page_number: number & tags.Type<"int32">;

  /**
   * Textual content of the story page. This field holds the generated or
   * edited page narrative. Required. Maps to storyfield_ai_story_pages.text
   * (Prisma).
   */
  text: string;

  /**
   * Timestamp for when the story page was created (ISO 8601 format). Used for
   * audit trail and compliance. Originates from
   * storyfield_ai_story_pages.created_at (Prisma).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of the last update to the page (ISO 8601 format). Used for
   * change auditing and revision tracking. Maps to
   * storyfield_ai_story_pages.updated_at (Prisma).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp (ISO 8601); null if not soft-deleted. Enables
   * content recovery, audit, and compliance workflows. From
   * storyfield_ai_story_pages.deleted_at (Prisma); optional in output; always
   * omitted or null for active pages.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiStoryPage {
  /**
   * Pagination, sorting, and search/filter criteria for listing story pages
   * in the context of a given story. Follows standard business and compliance
   * requirements:
   *
   * - 'page': number for pagination
   * - 'limit': items per result set
   * - 'orderBy': field to sort by (must be valid field)
   * - 'order': sort direction
   * - 'search': fulltext search for page text
   * - 'showDeleted': if true, includes soft-deleted pages (admin only)
   *
   * All parameters are optional. If omitted, default paging (page 1, limit
   * 15) and ordering are used.
   */
  export type IRequest = {
    /**
     * Page number for pagination (starts from 1). Optional. If omitted,
     * defaults to first page.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Number of results per page (default: 15). Optional. Used for
     * restricting result size for paging high-page-count stories.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Field to order results by. Optional. Must be one of: 'page_number',
     * 'created_at', or 'updated_at'. Defaults to 'page_number'.
     */
    orderBy?: "page_number" | "created_at" | "updated_at" | undefined;

    /**
     * Sort direction. Must be 'asc' or 'desc'. Optional. When absent,
     * defaults to 'asc'.
     */
    order?: "asc" | "desc" | undefined;

    /**
     * Search keyword for fulltext filtering of story page content ('text'
     * field). Optional. Allows users to search for a phrase, word, or
     * thematic match across all pages within the story.
     */
    search?: string | undefined;

    /**
     * Optional flag to include soft-deleted pages (deleted_at not null) in
     * result set. Used only for admin/compliance flows.
     */
    showDeleted?: boolean | undefined;
  };

  /**
   * Payload to create a new page for a fairy tale story
   * (storyfield_ai_story_pages table). Includes the required page number for
   * ordering and the story content as text. Used during the addition of new
   * pages to an AI-generated story. Sourced from the Prisma model's required
   * fields.
   */
  export type ICreate = {
    /**
     * The sequential page number within the story. Used for natural
     * ordering and to determine the position of this page in the complete
     * story. Must be an integer and positive. Sourced from the
     * storyfield_ai_story_pages table. This property is required to ensure
     * correct sorting and referencing in multi-page stories.
     */
    page_number: number & tags.Type<"int32">;

    /**
     * Textual content for the page. This is the actual AI-generated or
     * user-supplied story content. It must be a string value and adhere to
     * any length limits as set by the application. This property represents
     * the visible story data on the page and is core to the storytelling
     * content.
     */
    text: string;
  };

  /**
   * Payload to update a story page (storyfield_ai_story_pages table). Only
   * one or both fields may be supplied to partially update an existing page.
   * Supports editing page order and text content. Sourced from the Prisma
   * schema.
   */
  export type IUpdate = {
    /**
     * Optional new page number to update the ordering/position of the story
     * page in the complete story. This value adjusts the location of the
     * page during later edits or reorganizations. It is always an integer
     * (positive).
     */
    page_number?: (number & tags.Type<"int32">) | undefined;

    /**
     * Optional update to the textual content of the page. This allows for
     * corrections, editing, or regeneration of story content for this page.
     * Leave absent if not changing.
     */
    text?: string | undefined;
  };

  /**
   * Story page summary for list/pagination result sets. Encapsulates minimal
   * but essential information for UI navigation, review, or content
   * moderation in the context of a multi-page AI story. Derived from
   * storyfield_ai_story_pages table. Excludes full audit and relational
   * metadata for performance.
   */
  export type ISummary = {
    /**
     * Unique identifier for the story page record, mapped to the parent
     * story's multi-page structure. Used for client-side navigation, page
     * referencing, and business traceability.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Logical sequential order number of the page within the parent story.
     * Must be positive integer, used for accurate page navigation and
     * reading order enforcement.
     */
    page_number: number & tags.Type<"int32">;

    /**
     * AI-generated or user-edited textual content of the story page. May be
     * truncated or summarized if presented in list UIs. Full text available
     * at detail endpoint.
     */
    text: string;

    /**
     * Soft deletion timestamp of the page. Not set (null) for active pages;
     * date-time string when suppressed for compliance, moderation, or user
     * erasure traces.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
