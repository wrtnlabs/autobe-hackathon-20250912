import { tags } from "typia";

/**
 * Descriptive schema for business representation and retrieval of a single TTS
 * (Text-to-Speech) result for AI-generated fairy tales. All
 * audit/traceability/compliance fields included.
 *
 * Drawn directly from engine table: storyfield_ai_tts_results and mapped to
 * platform API responses.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiTtsResult = {
  /**
   * Primary key for the TTS result. Unique business identifier for reference
   * and audit. Generated by system upon creation. Example:
   * "e3fad8bc-9e48-4c0a-91ea-0a07c1fa4e27".
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to parent AI-generated story (storyfield_ai_stories.id).
   * Establishes business/data relationship for the TTS result and ensures
   * linkage to story ownership and compliance traceability.
   *
   * Mapped from field: storyfield_ai_tts_results.storyfield_ai_story_id
   */
  storyfield_ai_story_id: string & tags.Format<"uuid">;

  /**
   * Reference to associated page if result is per-page. Can be null for TTS
   * results covering whole story. Business logic uses this to relate
   * narration to individual pages or global story. Canonical UUID or null.
   */
  storyfield_ai_story_page_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * URI (generally S3 pre-signed URL) for retrieved/generated TTS audio file.
   * Always required for playback, download, or UI preview. Must be a valid
   * string URI and not exceed defined max length.
   *
   * Linked to: storyfield_ai_tts_results.tts_audio_uri
   */
  tts_audio_uri: string & tags.MaxLength<80000>;

  /**
   * Text input that resulted in TTS synthesis. Used for display, review, and
   * compliance. May be user-supplied or business-generated. Referenced from:
   * storyfield_ai_tts_results.source_text
   */
  source_text: string;

  /**
   * Language or dialect string for the generated audio (e.g., "standard",
   * "gyeongsang", etc.). Used for filtering, search, and replay operations.
   * Maps to: storyfield_ai_tts_results.dialect.
   */
  dialect: string;

  /**
   * Timestamp (ISO 8601) indicating when the TTS result was generated. Used
   * for sort/order, compliance, audit. Example: "2025-01-15T15:46:09Z".
   * Sourced from: storyfield_ai_tts_results.created_at.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp for last modification to this TTS result (ISO 8601). Changes on
   * update/regeneration. Used in business for status/auditing. Sourced from:
   * storyfield_ai_tts_results.updated_at.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-deletion timestamp if the TTS result was logically deleted. Null if
   * active/visible. For business audit/property, system triggers, and
   * compliance review. Mapped from: storyfield_ai_tts_results.deleted_at.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiTtsResult {
  /**
   * Search and filter options for retrieving TTS results associated with a
   * story in paginated fashion. Fields allow dialect/page filtering,
   * full-text search, custom sorting, and page/limit control.
   */
  export type IRequest = {
    /**
     * Optional dialect filter for TTS results—e.g., "standard",
     * "gyeongsang", "jeolla". Used for searching or listing TTS outputs in
     * specific language options. Set to null to query all dialects. Mapped
     * from: IStoryfieldAiTtsResult.IRequest.dialect.
     */
    dialect?: string | null | undefined;

    /**
     * Optional page filter for per-page TTS results. Setting this property
     * limits query to a specific story page; use null for story-wide TTS
     * result listing. Ensures precise filtering for user playback/view
     * operations.
     */
    storyfield_ai_story_page_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Full-text search term for filtering TTS results by source text.
     * Allows users/admins to find TTS audio associated with prompts or text
     * matching the specified value. If not provided, no text filtering is
     * performed.
     */
    search?: string | null | undefined;

    /**
     * Page number for pagination, 1-based index. Ensures efficient
     * retrieval and UI display of TTS results. Default behavior is
     * business-defined.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * Maximum number of results per page for pagination. For business and
     * performance tuning, standardize to 10, 20, or other platform
     * default.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Optional sort field (e.g., "created_at", "dialect"). Allows
     * client-side specification of sort key for custom UI or review
     * workflows. Null for default system ordering.
     */
    sort?: string | null | undefined;

    /**
     * Sort direction: "asc" for ascending, "desc" for descending order.
     * Used with the sort field for user/admin control of listing order.
     * Only permitted values are "asc" or "desc". System default if not set
     * is implementation-defined.
     */
    direction?: "asc" | "desc" | undefined;
  };

  /**
   * Payload for creating a new Text-to-Speech (TTS) result record.
   *
   * This is used to register a newly generated TTS audio file (for a whole
   * story or single page). The record includes the audio output URI, the
   * source text, dialect, and an optional association with an individual page
   * for per-page narration. No user or story linkage is provided here—they
   * are set by the context of the API operation. Audit fields are managed
   * separately.
   */
  export type ICreate = {
    /**
     * URI of the generated TTS audio file (e.g. S3 pre-signed URL). This
     * must be a valid URI referencing the location of the audio result in
     * persistent storage. Required for audio access and verification.
     */
    tts_audio_uri: string;

    /**
     * The text from which TTS was generated. This must match the story or
     * story page content to be spoken.
     */
    source_text: string;

    /**
     * Dialect or language option used in TTS result. Must represent the
     * language/dialect code as registered for the synthesis operation
     * (e.g., 'ko', 'gyeongsang', 'jeolla').
     */
    dialect: string;

    /**
     * Optional: The UUID of the specific story page if this TTS result is
     * associated with a particular page. Null if the TTS applies to the
     * whole story.
     */
    storyfield_ai_story_page_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /**
   * Payload for updating an existing Text-to-Speech (TTS) result record.
   *
   * Supports regeneration, metadata correction, or dialect reassignment for
   * TTS results. All fields are optional and will only update if provided in
   * the payload. Audit/ownership are handled by business context. No user or
   * story linkage is set here—they are managed by the endpoint context.
   */
  export type IUpdate = {
    /**
     * (Optional) Updated URI for the TTS audio file. If the TTS audio is
     * regenerated or its S3/link location changes, this field should be
     * updated accordingly.
     */
    tts_audio_uri?: string | undefined;

    /**
     * (Optional) Updated source text to reflect new synthesis or text
     * corrections. May be used if TTS result is regenerated due to content
     * edits.
     */
    source_text?: string | undefined;

    /**
     * (Optional) New dialect or language selection for this TTS result. Set
     * only if the dialect changes from its initial value.
     */
    dialect?: string | undefined;

    /**
     * (Optional) If this TTS result is reassigned to a different story page
     * or made a global/story-level TTS (null), this field may be updated.
     */
    storyfield_ai_story_page_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /**
   * Summary object for Text-to-Speech (TTS) result records. Includes
   * identifying, playback, and context fields for use in client UIs,
   * dashboards, or reporting. Omits full audit, parent story/page links, and
   * system-managed fields for concise list rendering.
   */
  export type ISummary = {
    /**
     * Unique identifier of the TTS result, referencing the audio resource
     * as part of a story's accessibility enhancement. Primary key from
     * storyfield_ai_tts_results table.
     */
    id: string & tags.Format<"uuid">;

    /**
     * URI for pre-signed S3 or storage location of the TTS-generated audio
     * file. Enables streaming, download, or integration to story reader
     * experiences. Must be valid, authenticated-accessible URI with
     * appropriate retention guarantee per session or content.
     */
    tts_audio_uri: string;

    /**
     * Label for the dialect or language option used in generating this TTS
     * audio result. Reflects user choice or story language (e.g. 'Korean',
     * 'Gyeongsang', or other dialect identifier). Required for
     * disambiguation and accessibility.
     */
    dialect: string;

    /**
     * Exact text (sentence, paragraph, or page) that was submitted for TTS
     * audio synthesis. Enables audit, QA, and user context restoration for
     * playback.
     */
    source_text: string;

    /**
     * Soft deletion timestamp; null if the TTS result is currently active
     * and available, date-time string otherwise. Used for compliance, user
     * erasure, or moderation activities.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
