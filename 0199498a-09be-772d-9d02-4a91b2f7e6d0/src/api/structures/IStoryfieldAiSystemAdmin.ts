import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * System administrator account entity from the `storyfield_ai_systemadmins`
 * table.
 *
 * This schema is a definitive representation of an admin actor within
 * StoryField AI, mapped directly to the underlying database model. It provides
 * compliance, operational visibility, and role management for all business
 * workflows involving administrator privilege. Sensitive fields such as
 * authentication tokens or internal passwords are never exposed. All lifecycle
 * fields are included for traceability and investigation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiSystemAdmin = {
  /**
   * Primary Key. Unique identifier for the system administrator account.
   *
   * This property directly maps to the `id` column in the
   * `storyfield_ai_systemadmins` table. It is a UUID generated by the system
   * and used for entity relationships, traceability, and audit logs.
   */
  id: string & tags.Format<"uuid">;

  /**
   * External admin ID, mapped from Spring/JWT backend. Uniquely identifies an
   * administrator for credential mapping and traceability.
   *
   * Corresponds to the `external_admin_id` column in
   * `storyfield_ai_systemadmins`. Holds the external identity unique across
   * the business ecosystem for SSO and policy linkage.
   */
  external_admin_id: string;

  /**
   * Administrative email address, unique per admin. Used for
   * login/audit/policy notification.
   *
   * Reflects the `email` field in `storyfield_ai_systemadmins`. Email must
   * correspond to the external identity and is used for communication and
   * compliance notifications.
   */
  email: string & tags.Format<"email">;

  /**
   * Role descriptor for actor type; always `systemAdmin` for this model.
   *
   * Directly sourced from `actor_type` in the table, this value defines the
   * privilege/role context in the system and enforcement policies.
   */
  actor_type: string;

  /**
   * Datetime of the admin's last successful login into the system.
   *
   * Correlates to `last_login_at` column, updated by the business login
   * controller for privilege and compliance audit.
   */
  last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional notes regarding admin privileges, actions, or incident response
   * logs.
   *
   * Maps to `admin_notes` for compliance or operational context. Not required
   * but useful for privileged admin history and incident documentation.
   */
  admin_notes?: string | null | undefined;

  /**
   * Timestamp of initial record creation. Used for audit trails and
   * compliance timelines.
   *
   * From `created_at` in table, set at admin account inception, immutable and
   * central for investigations or operational metrics.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last information update or privilege change for this
   * account.
   *
   * Taken from `updated_at` in the table; updated at each modification, used
   * for incremental tracking and compliance.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of logical deletion (soft delete) if admin is removed from
   * current oversight, null if active.
   *
   * Maps to `deleted_at`. Used for retention, temporary privilege suspension,
   * and GDPR compliance.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiSystemAdmin {
  /**
   * Request schema for onboarding a new system administrator into StoryField
   * AI (storyfield_ai_systemadmins). This payload includes an externally
   * issued admin identifier, a unique business email, and the actor type
   * (always 'systemAdmin'). No password is required. This schema directly
   * corresponds to administrative account registration business logic and
   * database constraints.
   */
  export type IJoin = {
    /**
     * External admin ID as provided by the Spring/JWT backend. Uniquely
     * identifies a system administrator for credential mapping and
     * traceability. This field is required at registration to securely
     * onboard new admin accounts.
     */
    external_admin_id: string;

    /**
     * Administrative email address, unique per system admin, used for
     * login, audit, and policy notification. Must match the business
     * requirements for admin identification and communication.
     */
    email: string & tags.Format<"email">;

    /**
     * Role descriptor and discriminator field for the system administrator.
     * Should always be set to 'systemAdmin'. This property may be omitted
     * from request body if system defaults insert it, but should be
     * included for explicitness in API contracts.
     */
    actor_type?: "systemAdmin" | undefined;
  };

  /**
   * Standard response contract for system administrator authentication and
   * registration. Provides admin identity details along with issued JWT
   * access/refresh tokens. Fulfills compliance, audit, and operator
   * traceability requirements. Used for join, login, and refresh flows for
   * systemAdmin actors.
   */
  export type IAuthorized = {
    /**
     * Unique system-wide identifier for the system admin account, matching
     * the primary key in storyfield_ai_systemadmins.
     */
    id: string & tags.Format<"uuid">;

    /**
     * External admin ID, mapped from Spring/JWT backend. Uniquely
     * identifies an administrator for credential mapping and traceability.
     *
     * Corresponds to the `external_admin_id` column in
     * `storyfield_ai_systemadmins`. Holds the external identity unique
     * across the business ecosystem for SSO and policy linkage.
     */
    external_admin_id: string;

    /**
     * Business email address for the system admin, unique for operator
     * identification and communication.
     */
    email: string & tags.Format<"email">;

    /**
     * Discriminator and business role for the administrator actor. Always
     * set to 'systemAdmin'.
     */
    actor_type: "systemAdmin";

    /**
     * ISO8601 date and time of the last successful system admin login. Null
     * if never logged in.
     */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional administrative notes, business context, or compliance
     * history for this account. Null if empty. Provided for transparent
     * privileged account governance.
     */
    admin_notes?: string | null | undefined;

    /**
     * Timestamp of initial record creation. Used for audit trails and
     * compliance timelines.
     *
     * From `created_at` in table, set at admin account inception, immutable
     * and central for investigations or operational metrics.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of last information update or privilege change for this
     * account.
     *
     * Taken from `updated_at` in the table; updated at each modification,
     * used for incremental tracking and compliance.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of logical deletion (soft delete) if admin is removed from
     * current oversight, null if active.
     *
     * Maps to `deleted_at`. Used for retention, temporary privilege
     * suspension, and GDPR compliance.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Login request schema for authenticating a system administrator. Requires
   * two-factor identification: external_admin_id (mapped from Spring/JWT
   * backend) and administrative email. Password is managed exclusively by
   * external system/JWT provider, never directly handled by API. Used solely
   * for privileged actor verification.
   */
  export type ILogin = {
    /**
     * External admin ID as issued by Spring/JWT backend. Used to securely
     * identify the system administrator during login. Must map to an
     * existing admin account in the system.
     */
    external_admin_id: string;

    /**
     * Administrative email address, unique per system admin, for business
     * and communication traceability. Required for login. Must match the
     * registered email for the admin.
     */
    email: string & tags.Format<"email">;
  };

  /**
   * Refresh request schema for system administrator authentication. This
   * should always be an empty objectâ€”the refresh operation uses the
   * Authorization header and session token for validation and does not
   * require any body properties. Schema-compliant clients must send either an
   * empty object or omit the body entirely.
   */
  export type IRefresh = {};

  /**
   * Structured request body for searching, filtering, and paginating
   * Storyfield AI system administrator records in the admin panel or
   * compliance audit flows. All fields are optional and layered on top of
   * base admin registry logic.
   */
  export type IRequest = {
    /** Email address of the system administrator, for filtering or search. */
    email?: string | undefined;

    /**
     * External system admin identifier from the Spring backend, for
     * filtering mapped identity.
     */
    external_admin_id?: string | undefined;

    /** Role type for filtering (should always be 'systemAdmin' here). */
    actor_type?: string | undefined;

    /** Filter for system admins created at or after this date. */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for system admins created at or before this date. */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for admins with updates on or after this date. */
    updated_from?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for admins with updates on or before this date. */
    updated_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * If true, include soft-deleted admins; if false or omitted, only
     * active accounts.
     */
    deleted?: boolean | undefined;

    /** Search for system admins whose last login was at or after this time. */
    last_login_from?: (string & tags.Format<"date-time">) | undefined;

    /** Search for admins whose last login was at or before this time. */
    last_login_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination results (default 1). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page (default 20, max 100). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Field for ordering results (email, created_at, etc.). */
    sort?: string | undefined;

    /** Sort order (ascending or descending). */
    order?: "asc" | "desc" | undefined;
  };

  /**
   * DTO for updating permissible fields of a system administrator record in
   * StoryField AI.
   *
   * Fields are validated against uniqueness rules and compliance policy; only
   * privileged business users (systemAdmin) are permitted to invoke this
   * contract. Audit fields and ownership are immutable here.
   */
  export type IUpdate = {
    /**
     * Administrative email address. Unique and changeable under business
     * rules.
     *
     * Modifies the `email` field, subject to uniqueness and format
     * constraints. Audited for change history.
     */
    email?: (string & tags.Format<"email">) | undefined;

    /**
     * Update to role/privilege descriptor. In this table, typically remains
     * `systemAdmin` but can future-proof for privilege classes.
     *
     * Updates the `actor_type` field for flexible privilege expansion.
     */
    actor_type?: string | undefined;

    /**
     * Administrative or compliance notes for incident tracking, privilege
     * changes, or context marking. Optional in updates.
     *
     * Maps to the `admin_notes` field; supports operational documentation
     * and organizational context.
     */
    admin_notes?: string | null | undefined;
  };

  /**
   * System administrator summary record. Provides a concise view of a
   * privileged admin account for use in admin/account listing UIs, compliance
   * audits, and privilege management workflows. All sensitive operational
   * fields and business contract properties are sourced from the
   * storyfield_ai_systemadmins table. Excludes highly confidential notes or
   * historical update context to prevent over-exposure in summary lists.
   */
  export type ISummary = {
    /**
     * Unique identifier for the system administrator account. This field
     * corresponds to the primary key of the admin entity and uniquely
     * distinguishes individual administrators for audit, privilege, and
     * compliance purposes. Format is a UUID string.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Business-unique email address mapped to the admin account. Used for
     * authentication (through external SSO/JWT), notification, compliance
     * action logs, and audit. Must be globally unique across all active and
     * soft-deleted admin accounts.
     */
    email: string & tags.Format<"email">;

    /**
     * Business role code for the admin account (always 'systemAdmin'). Used
     * to enforce strict privilege boundaries for API, UI, and audit
     * procedures. Must always match role policy for this table.
     */
    actor_type: string;

    /**
     * Datetime ISO8601 string of the admin's most recent successful
     * authentication to the system. Primarily used for monitoring
     * privileged access and detecting stale or at-risk accounts. Can be
     * null if never logged in.
     */
    last_login_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Datetime when the admin account was first created. Used for
     * operational, compliance, and historical monitoring.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp for the account. When set, the account is
     * logically deleted (deactivated), no longer permitted to login or
     * perform actions, and all APIs enforce admin-inactivity for this
     * record. Null if the account is active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
