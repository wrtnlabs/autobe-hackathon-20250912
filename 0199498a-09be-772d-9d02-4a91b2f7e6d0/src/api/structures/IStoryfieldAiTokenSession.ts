import { tags } from "typia";

/**
 * Full record type for authentication token session. Used for both user- and
 * admin-linked sessions.
 *
 * Encapsulates all audit fields and device fingerprint metadata for a session,
 * as well as secure (hashed) token reference. All time fields use ISO8601
 * format. Soft deletion is handled via deleted_at. Session linkage to a user or
 * admin is determined by the respective optional IDs, which may be null based
 * on the authentication role.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiTokenSession = {
  /** Primary key. Unique token session ID. */
  id: string & tags.Format<"uuid">;

  /**
   * (Optional) UUID of the authenticated user if session is user-associated,
   * null otherwise.
   */
  authenticated_user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * (Optional) UUID of the system administrator if session is
   * admin-associated, null otherwise.
   */
  system_admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Hashed authentication token value; used for secure session validation and
   * never contains a plain-text token. This value is write-only and must not
   * be exposed to clients.
   */
  token_hash: string;

  /**
   * Device or browser fingerprint to uniquely identify the session by device
   * context.
   */
  fingerprint: string;

  /**
   * Timestamp when the session token was originally issued. Set in ISO8601
   * format.
   */
  issued_at: string & tags.Format<"date-time">;

  /**
   * Expiration timestamp for the token session (ISO8601). After this date,
   * the session is invalid.
   */
  expires_at: string & tags.Format<"date-time">;

  /**
   * (Optional) Time the session was last refreshed (extended). Set to null if
   * not refreshed.
   */
  refreshed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Timestamp of the most recent proof of session activity (API call or usage
   * event). For session lifecycle tracking.
   */
  last_activity_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when session record was created (may match issued_at for most
   * records). For audit.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last update to the token session. Used for record lifecycle
   * audit.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp. Non-null if session is revoked or forcibly
   * removed. Null if still active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiTokenSession {
  /**
   * Request object for filtering, searching, and paginating authentication
   * token sessions.
   *
   * Supports a rich set of filters for sessions by user ID, admin ID, device
   * fingerprint, issued and expiry times, and activity windows. Also supports
   * pagination through 'page' and 'limit' fields. This enables advanced
   * search and monitoring of authentication sessions for security and
   * compliance purposes. All fields are optionalâ€”any combination can be
   * supplied as needed.
   */
  export type IRequest = {
    /**
     * (Optional) Filter sessions by the unique authenticated user ID.
     * Applies only to sessions linked to users, not admins.
     */
    authenticated_user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Filter sessions by the unique ID of the system
     * administrator. Applies to admin sessions only.
     */
    system_admin_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * (Optional) Filter sessions by device or browser fingerprint. Used for
     * device-level session management.
     */
    fingerprint?: string | undefined;

    /**
     * (Optional) Lower bound (inclusive) filter for issued_at (session
     * creation time). ISO8601 format.
     */
    issued_at_min?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Upper bound (inclusive) filter for issued_at (session
     * creation time). ISO8601 format.
     */
    issued_at_max?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Lower bound (inclusive) filter for expires_at. Only
     * sessions expiring on or after this point are included.
     */
    expires_at_min?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Upper bound (inclusive) filter for expires_at. Only
     * sessions expiring on or before this point are included.
     */
    expires_at_max?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Lower bound (inclusive) filter for last_activity_at. Used
     * to find active/inactive sessions within a period.
     */
    last_activity_at_min?: (string & tags.Format<"date-time">) | undefined;

    /**
     * (Optional) Upper bound (inclusive) filter for last_activity_at. Used
     * to find active/inactive sessions within a period.
     */
    last_activity_at_max?: (string & tags.Format<"date-time">) | undefined;

    /** (Optional) The page number for result pagination (1-based index). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** (Optional) Maximum number of results per page for pagination. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Update session properties for a given authentication token session.
   *
   * Allows adjustment of expiry, last usage, device fingerprint, and soft
   * deletion timestamp for operational security, forced logout, or session
   * management purposes. Used exclusively by system administrators in service
   * admin.
   */
  export type IUpdate = {
    /**
     * The expiry time for this authentication token session.
     *
     * Updates the valid until date for the token session. Changes take
     * effect immediately, potentially triggering expiration in clients
     * immediately if the new time is in the past. Required for forced
     * logouts, session duration control, or admin-forced refreshes.
     */
    expires_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * The most recent refresh timestamp for this session.
     *
     * Null if never refreshed, otherwise the last time a refresh token was
     * used for this session.
     */
    refreshed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * The timestamp of the most recent authentication or usage activity for
     * this session.
     *
     * Helps admins and security reviews to track session use and
     * distinguish stale or active sessions.
     */
    last_activity_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Device/browser fingerprint for session uniqueness.
     *
     * May be used to correct or update recorded device IDs for this
     * session. Usually a secure hash.
     */
    fingerprint?: string | undefined;

    /**
     * Soft-deleted datetime for when this session was administratively
     * deactivated (forced logout or invalidation).
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view for an authentication token session from
   * storyfield_ai_token_sessions table. Includes PK, user/admin linkage,
   * fingerprint, lifecycle timestamps, and soft deletion status for
   * operational auditing.
   */
  export type ISummary = {
    /**
     * Unique identifier for the authentication token session. Primary key
     * from the storyfield_ai_token_sessions table. Always a UUID string.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Authenticated user reference for this session, if the session is
     * associated with an end-user (nullable for admin-only sessions).
     */
    authenticated_user_id: (string & tags.Format<"uuid">) | null;

    /**
     * System administrator reference for this session, if session is
     * associated with an admin (nullable for user sessions).
     */
    system_admin_id: (string & tags.Format<"uuid">) | null;

    /**
     * Device/browser fingerprint, used for session uniqueness and tying to
     * a specific device/browser context.
     */
    fingerprint: string;

    /**
     * Timestamp (ISO 8601) when the token was initially issued. Auditable
     * creation point.
     */
    issued_at: string & tags.Format<"date-time">;

    /**
     * Timestamp (ISO 8601) when the token is set to expire. Reflects
     * current session expiration policy.
     */
    expires_at: string & tags.Format<"date-time">;

    /**
     * Timestamp of the last activity recorded for this session. Used for
     * tracking session lifecycle and abandonment.
     */
    last_activity_at: string & tags.Format<"date-time">;

    /**
     * Timestamp (ISO 8601) when this session was soft-deleted
     * (revoked/disabled); null if still active.
     */
    deleted_at: (string & tags.Format<"date-time">) | null;
  };
}
