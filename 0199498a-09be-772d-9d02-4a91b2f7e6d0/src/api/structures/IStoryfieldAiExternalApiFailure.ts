import { tags } from "typia";

/**
 * External API failure event record. Captures detailed information about
 * failures and errors when communicating with third-party services or
 * integration endpoints (OpenAI, ASR, TTS, Spring backend, S3, etc.). Includes
 * API error code, endpoint, HTTP method, request/response payloads (if
 * allowed), retry counts, timestamps, and optionally links to user or story.
 * Used for troubleshooting, SLA compliance, trend monitoring, and security
 * review.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStoryfieldAiExternalApiFailure = {
  /** Unique identifier for this external API failure record (UUID). */
  id: string & tags.Format<"uuid">;

  /**
   * Optional reference to the authenticated user involved in the failed
   * external API request (UUID), if applicable.
   */
  storyfield_ai_authenticateduser_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /**
   * Optional reference to the story associated with the failure (UUID), if
   * any.
   */
  storyfield_ai_story_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type of external API involved in failure (e.g., 'openai', 'asr', 'tts',
   * 'spring_backend', 's3', 'payment').
   */
  api_type: string;

  /** API endpoint or resource path that triggered the failure event. */
  endpoint: string;

  /**
   * HTTP method used for the failed request (e.g., 'GET', 'POST', 'PUT',
   * 'DELETE').
   */
  http_method: string;

  /**
   * API/system-specific error code or HTTP status associated with this
   * failure event.
   */
  error_code: string;

  /**
   * Human-readable description or diagnostic message for the error. Nullable,
   * especially if the system did not supply a detailed error.
   */
  error_message?: string | null | undefined;

  /**
   * Optional: request payload (usually JSON) sent to the API (typically
   * omitted or masked in results for security/privacy).
   */
  request_payload?: string | null | undefined;

  /**
   * Optional: response body returned with the error (may be omitted due to
   * security/privacy).
   */
  response_payload?: string | null | undefined;

  /**
   * How many retries were attempted for this failed operation (includes the
   * initial attempt).
   */
  retry_count: number & tags.Type<"int32">;

  /**
   * Optional business/session group or distributed trace for linking failures
   * across services.
   */
  session_id?: string | null | undefined;

  /**
   * Timestamp when this failure event was recorded (ISO 8601 date-time
   * format).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of the most recent update to this record (ISO 8601 date-time
   * format).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-delete timestamp for the record (ISO 8601). Set when logically
   * deleted, otherwise null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IStoryfieldAiExternalApiFailure {
  /**
   * Search and filtering request structure for retrieving external API
   * failure logs. All properties are optional; filters and pagination can be
   * combined as needed. Used for advanced troubleshooting, SLA compliance,
   * and incident review by system administrators.
   */
  export type IRequest = {
    /**
     * Optional filter: Type of external API involved in the failure (e.g.,
     * 'openai', 'asr', 'tts', 'spring_backend', 's3', 'payment').
     */
    api_type?: string | undefined;

    /**
     * Optional filter: Specific API endpoint or resource path that had the
     * failure.
     */
    endpoint?: string | undefined;

    /** Optional filter: HTTP method (e.g., 'GET', 'POST', 'PUT', 'DELETE'). */
    http_method?: string | undefined;

    /**
     * Optional filter: API or HTTP error code associated with the failure
     * event.
     */
    error_code?: string | undefined;

    /**
     * Optional filter: earliest creation timestamp for filtering records
     * (ISO 8601).
     */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /** Optional filter: latest creation timestamp (ISO 8601). */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional filter: Restrict results to failures tied to a particular
     * authenticated user (UUID).
     */
    storyfield_ai_authenticateduser_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /**
     * Optional filter: Restrict results to failures tied to a particular
     * story (UUID).
     */
    storyfield_ai_story_id?: (string & tags.Format<"uuid">) | undefined;

    /** Pagination parameter: page number for result set navigation. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination parameter: Maximum number of records per page. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary/row display for external API call failures from
   * storyfield_ai_external_api_failures. Useful for incident, reliability,
   * and technical troubleshooting dashboards.
   */
  export type ISummary = {
    /** Unique identifier for this API failure event (PK, UUID). */
    id: string & tags.Format<"uuid">;

    /**
     * Optional reference to the authenticated user involved in this API
     * failure event.
     */
    storyfield_ai_authenticateduser_id: (string & tags.Format<"uuid">) | null;

    /** Optional reference to the story impacted by this API failure event. */
    storyfield_ai_story_id: (string & tags.Format<"uuid">) | null;

    /**
     * External API type string for which the failure occurred (e.g.,
     * 'openai', 'asr', 'tts', 'spring_backend', 's3', etc).
     */
    api_type: string;

    /** API endpoint or resource path that experienced the failure. */
    endpoint: string;

    /** HTTP method of failed request (GET, POST, PUT, etc). */
    http_method: string;

    /** System-specific code, status, or identifier for this API failure. */
    error_code: string;

    /** Free-form, developer- or system-generated error description/message. */
    error_message: string | null;

    /**
     * Number of times the failed operation was retried (including
     * original).
     */
    retry_count: number & tags.Type<"int32">;

    /** Timestamp when the API failure event was created/logged. */
    created_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp for incident response or cleanup (null if
     * still present).
     */
    deleted_at: (string & tags.Format<"date-time">) | null;
  };
}
