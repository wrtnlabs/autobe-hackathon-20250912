{"files":[{"filename":"schema-01-actors.prisma","namespace":"Actors","models":[{"name":"storyfield_ai_authenticatedusers","description":"Holds registered authenticated StoryField AI users that have passed Spring backend verification and possess a valid external user ID. Each entry maps to a verified, onboarded user authorized to generate content and access their own data only. Serves as the reference basis for all user-generated content, TTS, and story traceability. Maintains audit fields for creation, update, and soft deletion. Stance is primary, as these users require independent business management, onboarding, and compliance traceability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"external_user_id","type":"string","description":"External user ID issued by Spring backend; unique per authenticated user. Used as a reference key to external identity system.","nullable":false},{"name":"email","type":"string","description":"Unique email address of authenticated user; must match email used for Spring registration.","nullable":false},{"name":"actor_type","type":"string","description":"Describes the actor type in the business domain; always \"authenticatedUser\" for this table.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of initial record creation. Used for traceability and compliance.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to record. For audit tracking.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when user soft-deleted (deactivated or removed, but not fully purged). Null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["external_user_id"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]},{"name":"storyfield_ai_systemadmins","description":"Records StoryField AI system administrative accounts. Each entry maps to a separate admin, distinct from standard authenticated users, with privilege for system oversight, abuse monitoring, and administrative actions. Tracks audit and compliance fields, as well as last login date and optional admin notes. Stance is primary due to independent admin lifecycle management and business impact.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"external_admin_id","type":"string","description":"External admin ID, mapped from Spring/JWT backend. Uniquely identifies an administrator for credential mapping and traceability.","nullable":false},{"name":"email","type":"string","description":"Administrative email address, unique per admin and used for login/audit/policy notification.","nullable":false},{"name":"actor_type","type":"string","description":"Role descriptor for actor type; always \"systemAdmin\" for this table.","nullable":false},{"name":"last_login_at","type":"datetime","description":"Datetime of the admin's last successful login into the system. For privileged access tracking and compliance audits.","nullable":true},{"name":"admin_notes","type":"string","description":"Optional notes regarding admin privileges, actions, or incident response logs. Enables enhanced compliance and system audit.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of initial record creation. Audit/investigation baseline.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last information update or privilege change for this admin account.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp of logical deletion (soft delete) if admin is removed from current oversight, null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["external_admin_id"],"unique":true},{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-stories.prisma","namespace":"Stories","models":[{"name":"storyfield_ai_stories","description":"Master table for AI-generated fairy tales. Each record represents a complete story created by an authenticated user, with metadata such as title, main plot, language, and creation details. Each story can have multiple pages ({@link storyfield_ai_story_pages}), images ({@link storyfield_ai_story_images}), and TTS results ({@link storyfield_ai_tts_results}). Ownership is tracked by foreign key to authenticated users. Supports soft deletion and audit trails for content moderation, copyright disputes, and compliance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_authenticateduser_id","type":"uuid","description":"Owner's {@link storyfield_ai_authenticatedusers.id}. The user who created this story.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the story as provided or generated by the user.","nullable":false},{"name":"main_plot","type":"string","description":"The main plot or summary provided as the core input for this story.","nullable":true},{"name":"language","type":"string","description":"Primary language or dialect option chosen for this story instance (e.g., Korean, Gyeongsang dialect).","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp. Required for audit trail and ordering.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update time. Required for modification tracking.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion time for GDPR and moderation compliance.","nullable":true}],"uniqueIndexes":[{"fieldNames":["storyfield_ai_authenticateduser_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["storyfield_ai_authenticateduser_id"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"storyfield_ai_story_pages","description":"Stores the textual content and ordering for each page within a story. Pages are independently addressable to allow specific moderation or user revision (e.g., editing a single page). Connected to its parent story ({@link storyfield_ai_stories.id}) and may have multiple supporting images ({@link storyfield_ai_story_images}). Page number enforces logical order. Soft deletion and temporal fields for compliance, moderation, and granular auditing.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_story_id","type":"uuid","description":"Reference to parent story's {@link storyfield_ai_stories.id}.","relation":{"name":"story","targetModel":"storyfield_ai_stories"},"unique":false,"nullable":false}],"plainFields":[{"name":"page_number","type":"int","description":"The sequential page number within the story. Used for natural ordering.","nullable":false},{"name":"text","type":"string","description":"Textual content for the page. AI-generated or user-edited.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the page was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update time for the page.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion for this page, supporting recoverability and compliance.","nullable":true}],"uniqueIndexes":[{"fieldNames":["storyfield_ai_story_id","page_number"],"unique":true}],"plainIndexes":[{"fieldNames":["storyfield_ai_story_id"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"text"}]},{"name":"storyfield_ai_story_images","description":"Stores generated or user-provided images associated with stories or specific pages. Each image can be tied to a parent story, a specific page, or both. Used to display illustrations within stories or as thumbnails. Images references their storage (typically S3) by URI. Only supporting entity; must always belong to a parent story and optionally a page. Deleted via soft delete if parent is deleted.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_story_id","type":"uuid","description":"Parent story's {@link storyfield_ai_stories.id}.","relation":{"name":"story","targetModel":"storyfield_ai_stories"},"unique":false,"nullable":false},{"name":"storyfield_ai_story_page_id","type":"uuid","description":"Specific page's {@link storyfield_ai_story_pages.id} if image is tied to a page. Nullable for story-overall images.","relation":{"name":"storyPage","targetModel":"storyfield_ai_story_pages"},"unique":false,"nullable":true}],"plainFields":[{"name":"image_uri","type":"uri","description":"URI (usually S3 URL) of the image storage location.","nullable":false},{"name":"description","type":"string","description":"Optional alt text or description for accessibility or search.","nullable":true},{"name":"created_at","type":"datetime","description":"When image was added or generated.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last modification time of image record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp. Image becomes inaccessible if set.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["storyfield_ai_story_id"]},{"fieldNames":["storyfield_ai_story_page_id"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"description"}]},{"name":"storyfield_ai_tts_results","description":"Stores results of text-to-speech generation for both entire stories and specific pages. Each record contains the URI of the audio file, the text source, and links to the owning story and, if relevant, the specific page. Used to enable playback for users, accessibility features, and dialect variation support. Not directly created by users, but is returned or accessed as business artifacts of story creation. Soft delete supported for data removal and compliance.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_story_id","type":"uuid","description":"Story's {@link storyfield_ai_stories.id} for which this TTS was produced.","relation":{"name":"story","targetModel":"storyfield_ai_stories"},"unique":false,"nullable":false},{"name":"storyfield_ai_story_page_id","type":"uuid","description":"Story page's {@link storyfield_ai_story_pages.id} if TTS is for a specific page. Nullable for whole-story TTS.","relation":{"name":"storyPage","targetModel":"storyfield_ai_story_pages"},"unique":false,"nullable":true}],"plainFields":[{"name":"tts_audio_uri","type":"uri","description":"URI of the generated TTS audio file (e.g. S3 pre-signed URL).","nullable":false},{"name":"source_text","type":"string","description":"The text from which TTS was generated.","nullable":false},{"name":"dialect","type":"string","description":"Dialect or language option used in TTS result.","nullable":false},{"name":"created_at","type":"datetime","description":"When TTS was generated or uploaded.","nullable":false},{"name":"updated_at","type":"datetime","description":"When record was last modified.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion for regulatory and content-management purposes.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["storyfield_ai_story_id"]},{"fieldNames":["storyfield_ai_story_page_id"]},{"fieldNames":["dialect"]},{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"source_text"}]}]},{"filename":"schema-03-auth.prisma","namespace":"Auth","models":[{"name":"storyfield_ai_token_sessions","description":"Active authentication token/session registry. Tracks each unique issued token, maps it to the authenticated user (or admin), records device/fingerprint for session uniqueness, and manages timestamps for creation, last activity, and (optional) soft-deletion. Used to validate token presence for the full duration of session's allowed lifetime. Keys token value hashes (not plain value), user link, and session fingerprint. Critical for session verification and security audit.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"authenticated_user_id","type":"uuid","description":"Belonged authenticated user's {@link storyfield_ai_authenticatedusers.id}.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":true},{"name":"system_admin_id","type":"uuid","description":"Belonged system admin's {@link storyfield_ai_systemadmins.id}. Can be null for end-users.","relation":{"name":"systemAdmin","targetModel":"storyfield_ai_systemadmins"},"unique":false,"nullable":true}],"plainFields":[{"name":"token_hash","type":"string","description":"Hashed authentication token value used for session validation (never raw token).","nullable":false},{"name":"fingerprint","type":"string","description":"Device or browser fingerprint for session uniqueness and frictioned session control.","nullable":false},{"name":"issued_at","type":"datetime","description":"Timestamp when token was issued.","nullable":false},{"name":"expires_at","type":"datetime","description":"Timestamp when token will expire.","nullable":false},{"name":"refreshed_at","type":"datetime","description":"Most recent refresh timestamp for this session, or null if never refreshed.","nullable":true},{"name":"last_activity_at","type":"datetime","description":"Timestamp of last activity/proof of life for the session (token usage event).","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of session record (may match issued_at).","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for record lifecycle tracking.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp, null unless the session is explicitly invalidated/closed prior to expiration.","nullable":true}],"uniqueIndexes":[{"fieldNames":["token_hash"],"unique":true},{"fieldNames":["authenticated_user_id","fingerprint"],"unique":true}],"plainIndexes":[{"fieldNames":["authenticated_user_id"]},{"fieldNames":["system_admin_id"]},{"fieldNames":["expires_at"]},{"fieldNames":["last_activity_at"]}],"ginIndexes":[]},{"name":"storyfield_ai_token_revocations","description":"Registry of forcibly-revoked or blacklisted tokens for security response and audit. Each record logs a revoked token (by hash), context, related session or user where detectable, and permanent timestamps. Used to deny reused/compromised/invalid in-flight tokens regardless of their session status. Non-deletable, immutable audit source.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"token_session_id","type":"uuid","description":"Related session's {@link storyfield_ai_token_sessions.id} if known. Null for external/sessionless revocations.","relation":{"name":"tokenSession","targetModel":"storyfield_ai_token_sessions"},"unique":false,"nullable":true},{"name":"authenticated_user_id","type":"uuid","description":"Authenticated user's {@link storyfield_ai_authenticatedusers.id}. Nullable for sessionless revocations.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":true},{"name":"system_admin_id","type":"uuid","description":"System admin's {@link storyfield_ai_systemadmins.id}. Nullable for userless admin or script-level actions.","relation":{"name":"systemAdmin","targetModel":"storyfield_ai_systemadmins"},"unique":false,"nullable":true}],"plainFields":[{"name":"token_hash","type":"string","description":"Hash of revoked token (never store plain token) for future match and deny-list operations.","nullable":false},{"name":"revoked_reason","type":"string","description":"Administrative or automated reason for revocation (compromise, logout, abuse, etc.).","nullable":false},{"name":"revoked_by_ip","type":"string","description":"Source IP address from which revocation was requested/executed.","nullable":true},{"name":"created_at","type":"datetime","description":"Time of revocation record creation.","nullable":false}],"uniqueIndexes":[{"fieldNames":["token_hash"],"unique":true}],"plainIndexes":[{"fieldNames":["authenticated_user_id"]},{"fieldNames":["token_session_id"]}],"ginIndexes":[]},{"name":"storyfield_ai_auth_audit_logs","description":"Immutable authentication and authorization audit/event log. Records every major token event (creation, validation attempt, refresh, expiration, failure, manual revoke, etc.) and includes actor, session, IP, and event meta context for compliance, forensics, and abuse detection. Append-only, never edited or deleted. Supports cross-user, cross-session, and time-range searches.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"token_session_id","type":"uuid","description":"Session (if known) whose event is being audited. Nullable for failed or unknown events. References {@link storyfield_ai_token_sessions.id}.","relation":{"name":"tokenSession","targetModel":"storyfield_ai_token_sessions"},"unique":false,"nullable":true},{"name":"authenticated_user_id","type":"uuid","description":"User associated with the event if available. Nullable for external/failure events. References {@link storyfield_ai_authenticatedusers.id}.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":true},{"name":"system_admin_id","type":"uuid","description":"System admin actor if event is triggered by administrative or automated script action. Nullable otherwise. References {@link storyfield_ai_systemadmins.id}.","relation":{"name":"systemAdmin","targetModel":"storyfield_ai_systemadmins"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"High-level type of audit event: issued, validated, refreshed, expired, revoked, denied, etc.","nullable":false},{"name":"event_outcome","type":"string","description":"Result of event (success, failure, partial, etc.).","nullable":false},{"name":"event_message","type":"string","description":"Additional human-readable message or context for event, for compliance review.","nullable":true},{"name":"source_ip","type":"string","description":"IP address from which the auth event was triggered.","nullable":true},{"name":"user_agent","type":"string","description":"Reported user-agent string or device for the triggering event.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of the authentication/audit event.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["event_type"]},{"fieldNames":["authenticated_user_id"]}],"ginIndexes":[{"fieldName":"event_message"}]}]},{"filename":"schema-04-integration.prisma","namespace":"Integration","models":[{"name":"storyfield_ai_integration_logs","description":"Integration event and audit trail logs for all cross-system actions within the service. Records essential events such as API calls, connector triggers, recovery events, and business actions tied to external system interactions. Enables system-wide monitoring, troubleshooting, and operational auditing. Standalone independent events reviewed by system admin and engineering personnel. May reference users or stories via optional foreign key but is operated as an independent business event log. Designed for high-throughput insertions and fast event filtering.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_authenticateduser_id","type":"uuid","description":"Optional reference to the authenticated user associated with this integration event. {@link storyfield_ai_authenticatedusers.id}.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":true},{"name":"storyfield_ai_story_id","type":"uuid","description":"Optional reference to the story entity associated with this integration event. {@link storyfield_ai_stories.id}.","relation":{"name":"story","targetModel":"storyfield_ai_stories"},"unique":false,"nullable":true}],"plainFields":[{"name":"event_type","type":"string","description":"Type of integration event (ex: API_CALL, CONNECTOR_TRIGGER, RECOVERY, S3_UPLOAD, ERROR, RETRY, etc.). Business event category for filtering and audit.","nullable":false},{"name":"subsystem","type":"string","description":"Subsystem or third-party connector involved in this event (e.g., s3, spring_backend, openai, tts_engine, etc.).","nullable":false},{"name":"status","type":"string","description":"Human-friendly description or status code of the integration event outcome (SUCCESS, FAILURE, PARTIAL, etc.).","nullable":false},{"name":"message","type":"string","description":"Detailed description/message or error context for this event. Can include error messages from external systems, stack traces, or summary information.","nullable":true},{"name":"request_id","type":"string","description":"Optional: Correlation ID or unique request trace for distributed event linking. Enables cross-system root cause tracing.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of integration event log creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the log record was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the log record was soft deleted. Null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["request_id"],"unique":true}],"plainIndexes":[{"fieldNames":["event_type","created_at"]},{"fieldNames":["subsystem","created_at"]},{"fieldNames":["status"]}],"ginIndexes":[{"fieldName":"message"}]},{"name":"storyfield_ai_s3_upload_histories","description":"Records the detailed histories of S3 upload attempts for all integration uploads performed through the Spring backend. Captures file upload events required for troubleshooting, SLA measurement, failed upload analysis, and regulatory audits. Standalone per-attempt, per-file business event history. Each record holds the filename, size, related resource type, upload status, error context, and timestamps. Key for tracking reliability and providing clear root cause analysis of media delivery failures.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_authenticateduser_id","type":"uuid","description":"Optional reference to the user who initiated the media upload. {@link storyfield_ai_authenticatedusers.id}.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":true},{"name":"storyfield_ai_story_id","type":"uuid","description":"Optional reference to the story associated with this upload. {@link storyfield_ai_stories.id}.","relation":{"name":"story","targetModel":"storyfield_ai_stories"},"unique":false,"nullable":true}],"plainFields":[{"name":"filename","type":"string","description":"Name of the file being uploaded (original or system-generated filename).","nullable":false},{"name":"file_size","type":"int","description":"File size in bytes when submitted for upload. Helps audit upload policy enforcement.","nullable":false},{"name":"media_type","type":"string","description":"The type of media resource being uploaded (e.g., story_image, tts_audio, asr_audio, etc.).","nullable":false},{"name":"upload_status","type":"string","description":"Result of the upload attempt (SUCCESS, FAILURE, RETRY, PARTIAL, etc.).","nullable":false},{"name":"error_message","type":"string","description":"Descriptive error or diagnostic message related to upload failure if any occurred during this upload event.","nullable":true},{"name":"spring_upload_url","type":"uri","description":"Spring backend upload endpoint used in this upload event (full URI for traceability).","nullable":false},{"name":"s3_object_url","type":"uri","description":"Resulting S3 object URL provided by the Spring service, if successful. Null if upload did not return a valid S3 URL.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of the upload record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to this upload record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp if the upload record was soft deleted. Null otherwise.","nullable":true}],"uniqueIndexes":[{"fieldNames":["filename","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["upload_status","created_at"]},{"fieldNames":["filename","media_type"]}],"ginIndexes":[{"fieldName":"error_message"}]},{"name":"storyfield_ai_external_api_failures","description":"Tracks integration failures, exceptions, and error events for all external API communications (ASR, TTS, OpenAI, Spring backend, payment, etc.). Logs actionable business incidents, API-specific error codes, exception stack, user/session trace. Each record stands independently for error review, postmortem analysis, and quality assurance. Helps drive SLA monitoring, platform reliability, and incident response.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"storyfield_ai_authenticateduser_id","type":"uuid","description":"Optional reference to the user involved in the failed request if applicable. {@link storyfield_ai_authenticatedusers.id}.","relation":{"name":"authenticatedUser","targetModel":"storyfield_ai_authenticatedusers"},"unique":false,"nullable":true},{"name":"storyfield_ai_story_id","type":"uuid","description":"Optional reference to the story related to the API failure event if any. {@link storyfield_ai_stories.id}.","relation":{"name":"story","targetModel":"storyfield_ai_stories"},"unique":false,"nullable":true}],"plainFields":[{"name":"api_type","type":"string","description":"Type of external API where the failure was detected (e.g., openai, asr, tts, spring_backend, s3, payment, etc.).","nullable":false},{"name":"endpoint","type":"string","description":"API endpoint or resource path that triggered the failure event.","nullable":false},{"name":"http_method","type":"string","description":"HTTP method used for the failed request (GET, POST, PUT, DELETE, etc.).","nullable":false},{"name":"error_code","type":"string","description":"API/system specific error code or HTTP status associated with this failure event.","nullable":false},{"name":"error_message","type":"string","description":"Detailed description or exception message for analysis. Allows full-text search for troubleshooting.","nullable":true},{"name":"request_payload","type":"string","description":"Request payload (usually JSON) sent to the API which caused the failure. Can be omitted for privacy/security if not allowed.","nullable":true},{"name":"response_payload","type":"string","description":"Response body returned with the error/failure. Can be omitted for privacy/security if not allowed.","nullable":true},{"name":"retry_count","type":"int","description":"How many retries attempted for this failed operation, including the initial request.","nullable":false},{"name":"session_id","type":"string","description":"Optional business/session group or distributed trace for associating failures across services.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of API failure event record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to this record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Null unless the failure record is soft deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["session_id","api_type","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["api_type","created_at"]},{"fieldNames":["http_method","api_type"]},{"fieldNames":["error_code"]}],"ginIndexes":[{"fieldName":"error_message"}]}]},{"filename":"schema-05-systematic.prisma","namespace":"Systematic","models":[{"name":"storyfield_ai_system_policies","description":"Service-wide system policy registry. Stores all business, technical, feature toggle, and compliance rules as policy records for the StoryField AI platform. Provides versioned policy management for runtime enforcement and auditability. Used by service admin for global settings and operational toggles. Independent management and change history required.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"policy_code","type":"string","description":"Unique string code representing the policy for programmatic reference by subsystems (e.g., 'INTEGRATION_TIMEOUT_LIMIT', 'MAINTENANCE_MODE').","nullable":false},{"name":"name","type":"string","description":"Human-friendly policy name for admin UI and documentation.","nullable":false},{"name":"description","type":"string","description":"Full description of the policy's business intent, operational effect, or compliance requirements.","nullable":false},{"name":"value","type":"string","description":"The policy's current value. Can be stringified JSON for complex types or scalar for simple toggles.","nullable":false},{"name":"type","type":"string","description":"The policy's data type (e.g., 'boolean', 'int', 'duration', 'json'). For informational/admin validation.","nullable":false},{"name":"active","type":"boolean","description":"Whether this policy is currently enforced (true = in effect, false = not enforced; allows for toggling).","nullable":false},{"name":"created_at","type":"datetime","description":"Creation datetime for audit trail.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated datetime for policy modification tracking.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. Null unless logically removed.","nullable":true}],"uniqueIndexes":[{"fieldNames":["policy_code"],"unique":true}],"plainIndexes":[{"fieldNames":["active"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"name"},{"fieldName":"description"}]},{"name":"storyfield_ai_env_settings","description":"Application environment settings audit log. Tracks key=value configuration for all distinct runtime environments (development, staging, production). Captures environment variable versioning, change origin, and historical context. Provides strong traceability for configuration drift, issue diagnosis, and rollback decisions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"env_key","type":"string","description":"Configuration key name. Matches a single environment variable or logical config item (e.g., 'OPENAI_API_KEY').","nullable":false},{"name":"env_value","type":"string","description":"Configuration value (mask sensitive data in UI).","nullable":false},{"name":"env_name","type":"string","description":"Environment label (e.g., 'local', 'development', 'staging', 'production').","nullable":false},{"name":"changed_by","type":"string","description":"Identifier (username, email, or adminId) representing the actor who introduced the change.","nullable":false},{"name":"change_reason","type":"string","description":"Human-facing description of why this change was made (e.g., key rotation, urgent bug fix).","nullable":false},{"name":"created_at","type":"datetime","description":"Datetime when this setting entry was created; marks effective date of config.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime of last update (for correction or rollover).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for audit log. Null unless deleted logically.","nullable":true}],"uniqueIndexes":[{"fieldNames":["env_key","env_name"],"unique":true}],"plainIndexes":[{"fieldNames":["env_name"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"change_reason"}]},{"name":"storyfield_ai_deployment_logs","description":"Deployment and rollback event log for system operations. Records all release, rollback, and hotfix actions for service version control, audit traceability, and incident response. Enables review of deployment outcome, initiator, timing, label, and associated summary for postmortems and compliance review.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"deployment_label","type":"string","description":"Label identifying the deployment or rollback event. Should match the tag, branch, or semantic version (e.g., 'v1.10.7', 'bugfix-hot-deploy').","nullable":false},{"name":"action_type","type":"string","description":"Type of deployment action (e.g., 'deploy', 'rollback', 'hotfix', 'config-change').","nullable":false},{"name":"environment","type":"string","description":"Deployment target environment (e.g., 'production', 'staging', 'development').","nullable":false},{"name":"initiated_by","type":"string","description":"Identifier for the initiator (admin handle, CI/CD user, scriptID).","nullable":false},{"name":"status","type":"string","description":"Outcome status (e.g., 'success', 'failed', 'in-progress', 'aborted'); for workflow tracking and recovery.","nullable":false},{"name":"summary","type":"string","description":"Free-form summary of the deployment action and impact. Used for compliance audit and operational history.","nullable":false},{"name":"created_at","type":"datetime","description":"Datetime when deployment/rollback started.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime of last modification/status update.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. Null unless logically removed from report view.","nullable":true}],"uniqueIndexes":[{"fieldNames":["deployment_label","environment"],"unique":true}],"plainIndexes":[{"fieldNames":["environment"]},{"fieldNames":["status"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"summary"}]},{"name":"storyfield_ai_service_alerts","description":"Centralized service alert and event notification log. Stores technical event alerts (error, warning, info, recovery, anomaly, quota breach, etc.) for both real-time and historical monitoring. Enables systematic search by type, environment, resolution status, and content for incident response and analytics. Independent querying and search required for system health review.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"alert_type","type":"string","description":"Categorical alert/event type (e.g., 'error', 'warning', 'info', 'quota', 'incident', 'recovery').","nullable":false},{"name":"alert_code","type":"string","description":"Optional structured alert code, for business logic and filtering (e.g., 'AUTH_401_012', 'S3_UPLOAD_FAIL').","nullable":false},{"name":"content","type":"string","description":"Detailed description of the alert or event for admin review and downstream action. Used for analytics and audit.","nullable":false},{"name":"environment","type":"string","description":"Target environment for the alert/event (e.g., 'production', 'staging').","nullable":false},{"name":"resolved","type":"boolean","description":"Whether the alert/event has been resolved or closed (true = closed, false = active).","nullable":false},{"name":"resolution_note","type":"string","description":"Human-facing note explaining how the alert/event was resolved or closed. Null until event is resolved.","nullable":true},{"name":"created_at","type":"datetime","description":"Datetime when alert/event was recorded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Datetime of last update (e.g., resolution).","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp. Null unless logically removed from view.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["alert_type"]},{"fieldNames":["environment"]},{"fieldNames":["resolved"]},{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"content"}]}]}]}