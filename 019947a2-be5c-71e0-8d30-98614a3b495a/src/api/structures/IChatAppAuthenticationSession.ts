import { tags } from "typia";

/**
 * Authentication session entity for a regular user logged in via Snapchat
 * social login. Stores OAuth2 tokens and expiration info.
 *
 * This entity is linked to a regular user by chat_app_regular_user_id,
 * representing a secure authentication session with token lifecycle management.
 * Supports soft deletion to revoke sessions.
 *
 * Properties:
 *
 * - **id**: Unique UUID identifier of the session.
 * - **chat_app_regular_user_id**: UUID reference to the user owning the session.
 * - **access_token**: OAuth2 access token string from Snapchat.
 * - **refresh_token**: OAuth2 refresh token string for renewing access.
 * - **expires_at**: ISO 8601 timestamp when access token expires.
 * - **created_at**/**updated_at**: Timestamps of session creation and last
 *   update.
 * - **deleted_at**: Optional soft deletion timestamp indicating session
 *   revocation.
 *
 * This entity ensures secure, session-based access management for authenticated
 * regular users.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatAppAuthenticationSession = {
  /** Unique UUID for the authentication session. */
  id: string & tags.Format<"uuid">;

  /** UUID reference for the regular user who owns this session. */
  chat_app_regular_user_id: string & tags.Format<"uuid">;

  /** OAuth2 access token issued for this session by Snapchat. */
  access_token: string;

  /** OAuth2 refresh token used to obtain new access tokens. */
  refresh_token: string;

  /** Timestamp in ISO 8601 format indicating when the access token expires. */
  expires_at: string & tags.Format<"date-time">;

  /** Timestamp in ISO 8601 format indicating when the session was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp in ISO 8601 format indicating last update time for the session. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Optional timestamp in ISO 8601 format indicating when the session was
   * soft deleted (revoked). Null if not deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatAppAuthenticationSession {
  /**
   * Request body for authentication sessions search queries. Allows filtering
   * and pagination of authentication session records.
   */
  export type IRequest = {
    /** Optional pagination page number. */
    page?: (number & tags.Minimum<1>) | null | undefined;

    /** Optional pagination limit per page. */
    limit?: (number & tags.Minimum<1>) | null | undefined;

    /** Optional filter by user ID linked to sessions. */
    chat_app_regular_user_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Optional filter by whether session is soft deleted or not. */
    is_deleted?: boolean | null | undefined;

    /** Optional search string for access or refresh tokens. */
    token_search?: string | null | undefined;

    /** Optional sort order: 'asc' or 'desc' for sorting by expires_at. */
    sort_order?: "asc" | "desc" | null | undefined;
  };
}
