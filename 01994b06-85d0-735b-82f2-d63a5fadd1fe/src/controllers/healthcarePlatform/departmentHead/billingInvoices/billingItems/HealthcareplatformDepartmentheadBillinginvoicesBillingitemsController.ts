import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { posthealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItems } from "../../../../../providers/posthealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItems";
import { DepartmentheadAuth } from "../../../../../decorators/DepartmentheadAuth";
import { DepartmentheadPayload } from "../../../../../decorators/payload/DepartmentheadPayload";
import { patchhealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItems } from "../../../../../providers/patchhealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItems";
import { gethealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItemsBillingItemId } from "../../../../../providers/gethealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItemsBillingItemId";
import { puthealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItemsBillingItemId } from "../../../../../providers/puthealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItemsBillingItemId";

import { IHealthcarePlatformBillingItem } from "../../../../../api/structures/IHealthcarePlatformBillingItem";
import { IPageIHealthcarePlatformBillingItem } from "../../../../../api/structures/IPageIHealthcarePlatformBillingItem";

@Controller(
  "/healthcarePlatform/departmentHead/billingInvoices/:billingInvoiceId/billingItems",
)
export class HealthcareplatformDepartmentheadBillinginvoicesBillingitemsController {
  /**
   * Create a billing item for an invoice (IHealthcarePlatformBillingItem).
   *
   * This operation enables authorized billing or administrative users to create
   * a new billing item under a given invoice, as stored in the
   * healthcare_platform_billing_items table. Required details generally include
   * the billing code, quantity, item description, price, and calculation logic
   * as defined in schema columns.
   *
   * Business validation ensures that item creation is allowed only when the
   * parent invoice is active and appropriate organization and billing
   * permissions are in effect. Item creation must be fully auditable, with pre-
   * and post-validation states recorded for compliance review.
   *
   * Only authorized roles (billing staff, administrators, department heads) may
   * perform this operation. This action is typically part of broader invoice
   * creation, amendment, or post-encounter correction workflows. Related
   * endpoints are the list (PATCH), detail (GET), and update (PUT) operations.
   *
   * @param connection
   * @param billingInvoiceId Unique identifier of the billing invoice to which
   *   the new item will be added.
   * @param body Data for new billing item to be created under the specified
   *   invoice.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingItem.ICreate,
  ): Promise<IHealthcarePlatformBillingItem> {
    try {
      return await posthealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItems(
        {
          departmentHead,
          billingInvoiceId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve and search billing items for a specific invoice
   * (IHealthcarePlatformBillingItem).
   *
   * Retrieves a filtered, paginated list of billing items tied to a given
   * billing invoice, as defined in the healthcare_platform_billing_items table.
   * Filtering options enable staff to locate billing items by service code,
   * amount, date, item status, and other searchable fields. Paging and result
   * ordering are required for workflows handling large, complex invoices.
   *
   * Access to this operation should be controlled so only administrators,
   * billing staff, or auditors of the organization associated with the invoice
   * can use it. Audit logs must be maintained for all access events. Related
   * endpoints include detail retrieval (GET
   * /billingInvoices/{billingInvoiceId}/billingItems/{billingItemId}), creation
   * (POST), and update (PUT).
   *
   * All filtering and sorting logic leverages column definitions and index
   * strategies from the billing items schema, providing response formats
   * suitable for UI tabular display and export.
   *
   * @param connection
   * @param billingInvoiceId Unique identifier for the billing invoice whose
   *   items are to be retrieved.
   * @param body Search and pagination options for billing items within a given
   *   invoice.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingItem.IRequest,
  ): Promise<IPageIHealthcarePlatformBillingItem> {
    try {
      return await patchhealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItems(
        {
          departmentHead,
          billingInvoiceId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve detailed information for a specific billing item
   * (IHealthcarePlatformBillingItem).
   *
   * This operation fetches all the detailed attributes of a single billing item
   * as defined in the healthcare_platform_billing_items table, for the given
   * invoice. It is intended for use by billing administrators, organization
   * admins, finance, or compliance staff who need to review the complete
   * structure of the item—including service code, description, quantity,
   * pricing, and adjustment links.
   *
   * Authorization is restricted to organization administrators, designated
   * department heads, and other roles with invoice/billing access. Audit
   * logging is performed for all access.
   *
   * This endpoint supports workflows for invoice review, dispute resolution,
   * and compliance audit. Related operations include list retrieval (PATCH),
   * creation (POST), and update (PUT).
   *
   * @param connection
   * @param billingInvoiceId Unique identifier of the parent billing invoice.
   * @param billingItemId Unique identifier of the billing item to retrieve.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":billingItemId")
  public async at(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedParam("billingItemId")
    billingItemId: string & tags.Format<"uuid">,
  ): Promise<IHealthcarePlatformBillingItem> {
    try {
      return await gethealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItemsBillingItemId(
        {
          departmentHead,
          billingInvoiceId,
          billingItemId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Update an existing billing item linked to an invoice
   * (IHealthcarePlatformBillingItem).
   *
   * Applies updates to a billing item, referenced by its ID and parent invoice,
   * in the healthcare_platform_billing_items table. Permitted fields for update
   * include description, quantity, item code, pricing, and adjustment
   * details—subject to business logic and compliance review. Edits are logged
   * for full auditability, with before/after comparison and justification (if
   * required).
   *
   * Only billing staff, department heads, or organization administrators with
   * the correct permissions may use this operation. The endpoint supports
   * workflows for error correction, regulatory compliance, post-payment
   * reconciliation, and dispute resolution. Related endpoints include detail
   * retrieval (GET), bulk/list (PATCH), and creation (POST) operations.
   *
   * @param connection
   * @param billingInvoiceId Unique identifier of the parent billing invoice.
   * @param billingItemId Unique identifier of the billing item to update.
   * @param body Fields for the billing item update, such as new quantity, code,
   *   description, or pricing.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put(":billingItemId")
  public async update(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedParam("billingItemId")
    billingItemId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingItem.IUpdate,
  ): Promise<IHealthcarePlatformBillingItem> {
    try {
      return await puthealthcarePlatformDepartmentHeadBillingInvoicesBillingInvoiceIdBillingItemsBillingItemId(
        {
          departmentHead,
          billingInvoiceId,
          billingItemId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
