import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { posthealthcarePlatformDepartmentHeadReminders } from "../../../../providers/posthealthcarePlatformDepartmentHeadReminders";
import { DepartmentheadAuth } from "../../../../decorators/DepartmentheadAuth";
import { DepartmentheadPayload } from "../../../../decorators/payload/DepartmentheadPayload";
import { patchhealthcarePlatformDepartmentHeadReminders } from "../../../../providers/patchhealthcarePlatformDepartmentHeadReminders";
import { gethealthcarePlatformDepartmentHeadRemindersReminderId } from "../../../../providers/gethealthcarePlatformDepartmentHeadRemindersReminderId";

import { IHealthcarePlatformReminder } from "../../../../api/structures/IHealthcarePlatformReminder";
import { IPageIHealthcarePlatformReminder } from "../../../../api/structures/IPageIHealthcarePlatformReminder";

@Controller("/healthcarePlatform/departmentHead/reminders")
export class HealthcareplatformDepartmentheadRemindersController {
  /**
   * Create a new scheduled reminder for user or staff.
   *
   * Create a new reminder entry for future delivery, specifying recipient,
   * type, scheduled delivery window, and message/payload.
   *
   * Used by staff, providers, or system automation to set up reminders for
   * clinical, compliance, appointment, or medication flows. Enforces
   * organizational and role scoping, audit logging, and validation of
   * recipient/channel compatibility. Fails if schedule is invalid, recipient is
   * not found, or the user lacks authorization.
   *
   * This endpoint writes to the healthcare_platform_reminders table and
   * triggers downstream notification or escalation workflows as per system
   * policy. Related endpoints include search/list reminders and detailed
   * reminder retrieval.
   *
   * @param connection
   * @param body The information required to create a new scheduled reminder,
   *   including target, type, payload, schedule, and delivery metadata.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedBody()
    body: IHealthcarePlatformReminder.ICreate,
  ): Promise<IHealthcarePlatformReminder> {
    try {
      return await posthealthcarePlatformDepartmentHeadReminders({
        departmentHead,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Search and list reminders with filter, sorting, and pagination.
   *
   * Obtain a filtered and paginated list of reminders stored in the platform,
   * filtered by user role and query parameters.
   *
   * The reminders system is responsible for delivering scheduled notifications
   * to users and staff (e.g., appointment, compliance, medication). This
   * operation enables searching, filtering, and sorting reminders according to
   * criteria such as recipient, status, time window, delivery outcome, and
   * organization context, supporting bulk reminder management or analytics.
   * Authorization is typically required for any user account able to view
   * reminders in their organization scope; compliance and privacy rules apply.
   *
   * This endpoint operates on the healthcare_platform_reminders table,
   * returning reminder summaries and supporting paging through large volumes of
   * data. Related endpoints include single reminder fetch and reminder
   * creation.
   *
   * @param connection
   * @param body Search and filter parameters for retrieving reminders
   *   (recipient, status, scheduled window, etc.) with pagination and sorting.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedBody()
    body: IHealthcarePlatformReminder.IRequest,
  ): Promise<IPageIHealthcarePlatformReminder.ISummary> {
    try {
      return await patchhealthcarePlatformDepartmentHeadReminders({
        departmentHead,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Get a single reminder by ID (detail view).
   *
   * Retrieve the full details for a specified reminder ID, including recipient,
   * type/class, delivery schedule, status, notification channel, and lifecycle
   * history.
   *
   * This operation allows users with valid access rights to inspect a reminder
   * record by its unique UUID, supporting user portals, compliance review, or
   * troubleshooting workflows. It ensures that PHI or sensitive notification
   * content is only accessible to users authorized by organizational or
   * role-based policy.
   *
   * This endpoint operates on the healthcare_platform_reminders table and
   * includes detailed reminder fields. Audit or compliance logs may require
   * additional review when accessing sensitive reminder data. Related
   * operations include listing reminders and creating new scheduled reminders.
   *
   * @param connection
   * @param reminderId The unique identifier (UUID) of the reminder to fetch.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":reminderId")
  public async at(
    @DepartmentheadAuth()
    departmentHead: DepartmentheadPayload,
    @TypedParam("reminderId")
    reminderId: string & tags.Format<"uuid">,
  ): Promise<IHealthcarePlatformReminder> {
    try {
      return await gethealthcarePlatformDepartmentHeadRemindersReminderId({
        departmentHead,
        reminderId,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
