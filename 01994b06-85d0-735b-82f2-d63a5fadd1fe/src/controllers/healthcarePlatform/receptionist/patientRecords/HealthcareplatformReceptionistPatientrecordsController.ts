import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { posthealthcarePlatformReceptionistPatientRecords } from "../../../../providers/posthealthcarePlatformReceptionistPatientRecords";
import { ReceptionistAuth } from "../../../../decorators/ReceptionistAuth";
import { ReceptionistPayload } from "../../../../decorators/payload/ReceptionistPayload";

import { IHealthcarePlatformPatientRecord } from "../../../../api/structures/IHealthcarePlatformPatientRecord";

@Controller("/healthcarePlatform/receptionist/patientRecords")
export class HealthcareplatformReceptionistPatientrecordsController {
  /**
   * Create a new patient record in healthcare_platform_patient_records table.
   *
   * This endpoint allows for creating a new patient record within a specified
   * organization (and optionally mapped department), as defined by the
   * 'healthcare_platform_patient_records' table. Required fields include
   * patient user reference, full legal name, date of birth, demographic data in
   * JSON format if available, and business status. Optional fields such as
   * external patient number, gender, and department ID support advanced mapping
   * or integration needs. Timestamps for creation and updates are managed by
   * the system.
   *
   * Roles allowed to use this operation are tightly regulated: patient creation
   * can be performed by the organization's admin staff, clinical staff with
   * patient onboarding permissions, or by authorized receptionists during
   * intake. The business logic validates all required fields, checks for
   * duplicate assignments by patient_user_id, and applies organizational data
   * isolation rules. A successfully created record is returned for further use
   * in EHR flows, appointment booking, or regulatory workflows.
   *
   * If records are created for patients already active, appropriate errors or
   * contextual data (e.g., merging, archival logic) are triggered to align with
   * platform business rules. All creation actions are audit logged for
   * regulatory compliance and incident investigation.
   *
   * @param connection
   * @param body Data required to create a new patient record, including user
   *   reference, demographics, and business metadata.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @ReceptionistAuth()
    receptionist: ReceptionistPayload,
    @TypedBody()
    body: IHealthcarePlatformPatientRecord.ICreate,
  ): Promise<IHealthcarePlatformPatientRecord> {
    try {
      return await posthealthcarePlatformReceptionistPatientRecords({
        receptionist,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
