import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { posthealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustments } from "../../../../../providers/posthealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustments";
import { OrganizationadminAuth } from "../../../../../decorators/OrganizationadminAuth";
import { OrganizationadminPayload } from "../../../../../decorators/payload/OrganizationadminPayload";
import { patchhealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustments } from "../../../../../providers/patchhealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustments";
import { gethealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId } from "../../../../../providers/gethealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId";
import { puthealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId } from "../../../../../providers/puthealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId";
import { deletehealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId } from "../../../../../providers/deletehealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId";

import { IHealthcarePlatformBillingAdjustment } from "../../../../../api/structures/IHealthcarePlatformBillingAdjustment";
import { IPageIHealthcarePlatformBillingAdjustment } from "../../../../../api/structures/IPageIHealthcarePlatformBillingAdjustment";

@Controller(
  "/healthcarePlatform/organizationAdmin/billingInvoices/:billingInvoiceId/billingAdjustments",
)
export class HealthcareplatformOrganizationadminBillinginvoicesBillingadjustmentsController {
  /**
   * Create a billing adjustment for a given invoice
   * (healthcare_platform_billing_adjustments).
   *
   * This API operation allows authorized billing or administrative staff to
   * create a new billing adjustment for a specific invoice identified by the
   * billingInvoiceId path parameter. The
   * healthcare_platform_billing_adjustments table logs every adjustment applied
   * at the invoice or item level, such as discounts, charity write-offs, error
   * corrections, or special policy-based adjustments. This operation requires
   * the client to specify details such as the adjustment type, description, and
   * adjustment amount, as well as associating the adjustment with the correct
   * invoice or billing item through request data. Input validation ensures
   * compliance with business policy (e.g., adjustment must not exceed invoice
   * total without proper authorization, reasons must be provided for audit, and
   * discounts follow organizational policy).
   *
   * The endpoint adheres to financial compliance standards for traceability and
   * audit trails. Only users with proper billing privileges may invoke this
   * operation, and all adjustments are subject to downstream audit logging and
   * review. Soft deletion of adjustments exists for compliance, allowing audit
   * review of removed or reversed adjustments. Related APIs include POST
   * /billingInvoices (invoice creation), and GET/PATCH endpoints for invoice
   * and item overview, forming part of a comprehensive billing lifecycle.
   *
   * Any error such as unauthorized access, missing required fields, or business
   * rule violations (like amount out of bounds, missing rationale, or invalid
   * adjustment type for context) will be met with detailed validation errors.
   *
   * @param connection
   * @param billingInvoiceId Unique identifier of the target billing invoice to
   *   which the adjustment will be applied.
   * @param body Detailed information of the billing adjustment to be created
   *   for the target invoice, following
   *   IHealthcarePlatformBillingAdjustment.ICreate structure.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @OrganizationadminAuth()
    organizationAdmin: OrganizationadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingAdjustment.ICreate,
  ): Promise<IHealthcarePlatformBillingAdjustment> {
    try {
      return await posthealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustments(
        {
          organizationAdmin,
          billingInvoiceId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * List all billing adjustments for a given invoice, supporting pagination and
   * filtering.
   *
   * Obtain a paginated list of all billing adjustments applied to the specified
   * billing invoice. The billing adjustments, which may include insurance
   * write-offs, patient discounts, and administrative corrections, are filtered
   * to the target invoice using the billingInvoiceId path parameter. Additional
   * filtering, searching, or sorting may be provided via the request body.
   *
   * Access to this operation is restricted to billing staff, system
   * administrators, and organization administrators. All data is returned in
   * accordance with permission scopes, organizational boundaries, and audit
   * requirements. The operation is essential for financial reconciliation,
   * compliance audits, and patient billing inquiries. Related endpoints include
   * adjustment creation and retrieval.
   *
   * @param connection
   * @param billingInvoiceId The unique identifier for the invoice whose
   *   adjustments are to be listed.
   * @param body Filtering, sorting, and pagination parameters for billing
   *   adjustments.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @OrganizationadminAuth()
    organizationAdmin: OrganizationadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingAdjustment.IRequest,
  ): Promise<IPageIHealthcarePlatformBillingAdjustment> {
    try {
      return await patchhealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustments(
        {
          organizationAdmin,
          billingInvoiceId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve a single billing adjustment's detailed information for a specific
   * invoice.
   *
   * Fetch complete metadata and details for a single billing adjustment
   * belonging to the specified invoice, identified by both the parent
   * billingInvoiceId and the billingAdjustmentId. Response includes type,
   * value, timestamps, description, and references to impacted items or
   * invoices.
   *
   * Access is limited to systemAdmin and organizationAdmin roles, ensuring only
   * appropriate staff may inspect adjustment records. All requests and
   * resulting actions are fully audit-logged for compliance and regulatory
   * purposes. Related endpoints support adjustment modification and broader
   * invoice/billing review.
   *
   * @param connection
   * @param billingInvoiceId The unique identifier for the parent invoice of the
   *   adjustment.
   * @param billingAdjustmentId The unique identifier for the billing adjustment
   *   to retrieve.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":billingAdjustmentId")
  public async at(
    @OrganizationadminAuth()
    organizationAdmin: OrganizationadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedParam("billingAdjustmentId")
    billingAdjustmentId: string & tags.Format<"uuid">,
  ): Promise<IHealthcarePlatformBillingAdjustment> {
    try {
      return await gethealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId(
        {
          organizationAdmin,
          billingInvoiceId,
          billingAdjustmentId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Update an existing billing adjustment for a specific invoice
   * (healthcare_platform_billing_adjustments).
   *
   * This operation enables authorized organization administrators or billing
   * staff to modify details of an existing billing adjustment tied to a
   * specific invoice. By specifying both the billingInvoiceId and
   * billingAdjustmentId path parameters, the user identifies the exact
   * adjustment to update. The request body supports updates for fields such as
   * adjustment type, description, and amount, with validation enforcing audit
   * compliance: required reasons for adjustment, limits on value changes, and
   * consistency with financial policies (such as not exceeding invoice total or
   * backdating without rationale).
   *
   * Only authenticated staff holding the organizationAdmin role (or equivalent)
   * can invoke this API. The system maintains a revision/audit trail to ensure
   * all updates are historical and reviewable, thus preserving compliance.
   * Attempts to edit non-editable fields (e.g., invoice_id) or adjustments that
   * are already soft-deleted/archived are rejected with validation errors and
   * detailed audit logging. Related API paths include creation and deletion of
   * adjustments, with this endpoint enabling correction or clarification
   * workflows for open invoices.
   *
   * Errors such as insufficient privilege, invalid adjustment status, or data
   * validation failures are clearly reported and audited for organizational
   * accountability.
   *
   * @param connection
   * @param billingInvoiceId Unique identifier of the billing invoice to which
   *   the adjustment belongs.
   * @param billingAdjustmentId Unique identifier of the billing adjustment to
   *   be updated.
   * @param body New values for the billing adjustment fields to update, using
   *   IHealthcarePlatformBillingAdjustment.IUpdate structure.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put(":billingAdjustmentId")
  public async update(
    @OrganizationadminAuth()
    organizationAdmin: OrganizationadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedParam("billingAdjustmentId")
    billingAdjustmentId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingAdjustment.IUpdate,
  ): Promise<IHealthcarePlatformBillingAdjustment> {
    try {
      return await puthealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId(
        {
          organizationAdmin,
          billingInvoiceId,
          billingAdjustmentId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Soft-delete (archive) an existing billing adjustment for a billing invoice
   * (healthcare_platform_billing_adjustments).
   *
   * This API operation allows an authorized organization administrator or
   * billing staff member to remove (soft-delete) a billing adjustment entry
   * linked to a specific invoice. Both the billingInvoiceId and
   * billingAdjustmentId path parameters are required to precisely target the
   * appropriate adjustment. Instead of a hard delete, the operation sets the
   * deleted_at timestamp, ensuring the adjustment remains archived for
   * downstream audit, regulatory review, or compliance recovery per
   * organizational policy. No data loss occurs, and downstream reports and
   * workflows adjust to exclude soft-deleted adjustments.
   *
   * Security and privilege checks ensure only users with the organizationAdmin
   * role and appropriate billing permissions can execute this operation. Any
   * attempts to remove already archived adjustments, adjust non-existent
   * records, or bypass audit logging are rejected and logged for compliance.
   * Related workflow APIs include adjustment creation and update for full
   * billing lifecycle control.
   *
   * Clear error responses are provided in the event of privilege violations,
   * missing records, or audit failures. The operation integrates with the
   * platform’s overall compliance and retention framework, supporting robust
   * traceability.
   *
   * @param connection
   * @param billingInvoiceId Unique identifier of the billing invoice to which
   *   the adjustment belongs.
   * @param billingAdjustmentId Unique identifier of the billing adjustment to
   *   be archived (soft-deleted).
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete(":billingAdjustmentId")
  public async erase(
    @OrganizationadminAuth()
    organizationAdmin: OrganizationadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedParam("billingAdjustmentId")
    billingAdjustmentId: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deletehealthcarePlatformOrganizationAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId(
        {
          organizationAdmin,
          billingInvoiceId,
          billingAdjustmentId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
