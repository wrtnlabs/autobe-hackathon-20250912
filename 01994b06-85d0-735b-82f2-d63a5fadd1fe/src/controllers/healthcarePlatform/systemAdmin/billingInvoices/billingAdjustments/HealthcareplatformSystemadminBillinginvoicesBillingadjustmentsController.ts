import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patchhealthcarePlatformSystemAdminBillingInvoicesBillingInvoiceIdBillingAdjustments } from "../../../../../providers/patchhealthcarePlatformSystemAdminBillingInvoicesBillingInvoiceIdBillingAdjustments";
import { SystemadminAuth } from "../../../../../decorators/SystemadminAuth";
import { SystemadminPayload } from "../../../../../decorators/payload/SystemadminPayload";
import { gethealthcarePlatformSystemAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId } from "../../../../../providers/gethealthcarePlatformSystemAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId";

import { IPageIHealthcarePlatformBillingAdjustment } from "../../../../../api/structures/IPageIHealthcarePlatformBillingAdjustment";
import { IHealthcarePlatformBillingAdjustment } from "../../../../../api/structures/IHealthcarePlatformBillingAdjustment";

@Controller(
  "/healthcarePlatform/systemAdmin/billingInvoices/:billingInvoiceId/billingAdjustments",
)
export class HealthcareplatformSystemadminBillinginvoicesBillingadjustmentsController {
  /**
   * List all billing adjustments for a given invoice, supporting pagination and
   * filtering.
   *
   * Obtain a paginated list of all billing adjustments applied to the specified
   * billing invoice. The billing adjustments, which may include insurance
   * write-offs, patient discounts, and administrative corrections, are filtered
   * to the target invoice using the billingInvoiceId path parameter. Additional
   * filtering, searching, or sorting may be provided via the request body.
   *
   * Access to this operation is restricted to billing staff, system
   * administrators, and organization administrators. All data is returned in
   * accordance with permission scopes, organizational boundaries, and audit
   * requirements. The operation is essential for financial reconciliation,
   * compliance audits, and patient billing inquiries. Related endpoints include
   * adjustment creation and retrieval.
   *
   * @param connection
   * @param billingInvoiceId The unique identifier for the invoice whose
   *   adjustments are to be listed.
   * @param body Filtering, sorting, and pagination parameters for billing
   *   adjustments.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IHealthcarePlatformBillingAdjustment.IRequest,
  ): Promise<IPageIHealthcarePlatformBillingAdjustment> {
    try {
      return await patchhealthcarePlatformSystemAdminBillingInvoicesBillingInvoiceIdBillingAdjustments(
        {
          systemAdmin,
          billingInvoiceId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Retrieve a single billing adjustment's detailed information for a specific
   * invoice.
   *
   * Fetch complete metadata and details for a single billing adjustment
   * belonging to the specified invoice, identified by both the parent
   * billingInvoiceId and the billingAdjustmentId. Response includes type,
   * value, timestamps, description, and references to impacted items or
   * invoices.
   *
   * Access is limited to systemAdmin and organizationAdmin roles, ensuring only
   * appropriate staff may inspect adjustment records. All requests and
   * resulting actions are fully audit-logged for compliance and regulatory
   * purposes. Related endpoints support adjustment modification and broader
   * invoice/billing review.
   *
   * @param connection
   * @param billingInvoiceId The unique identifier for the parent invoice of the
   *   adjustment.
   * @param billingAdjustmentId The unique identifier for the billing adjustment
   *   to retrieve.
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Get(":billingAdjustmentId")
  public async at(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("billingInvoiceId")
    billingInvoiceId: string & tags.Format<"uuid">,
    @TypedParam("billingAdjustmentId")
    billingAdjustmentId: string & tags.Format<"uuid">,
  ): Promise<IHealthcarePlatformBillingAdjustment> {
    try {
      return await gethealthcarePlatformSystemAdminBillingInvoicesBillingInvoiceIdBillingAdjustmentsBillingAdjustmentId(
        {
          systemAdmin,
          billingInvoiceId,
          billingAdjustmentId,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
