import { tags } from "typia";

/**
 * Permission entity defining a specific actionable operation or privilege in
 * the RBAC system (e.g., 'manage_users', 'view_ehr', 'edit_billing').
 *
 * Permissions map to actions in the business domain and are referenced by roles
 * for access control. Detailed documentation reflects both the intent and
 * auditability requirements of RBAC in the healthcarePlatform. Permission
 * records are static or versioned; they may be soft-deleted/archived following
 * regulatory retention rules.
 *
 * Original Prisma schema: healthcare_platform_permissions.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformPermission = {
  /**
   * Unique identifier for the permission (UUID).
   *
   * This field stores the system-wide UUID for this permission definition as
   * referenced throughout RBAC mappings, audit logs, and assignment tables.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique code for this permission (e.g., 'edit_patient_record').
   *
   * This business-facing string code defines the actionable permission in the
   * RBAC system and must remain unique within permission scope. Used in role
   * mapping and audit reporting throughout the healthcare platform.
   */
  code: string;

  /**
   * Human-readable name for this permission.
   *
   * Used in administrative UI, audit reports, and for clarity when assigning
   * permissions to roles or users.
   */
  name: string;

  /**
   * Explanation of the permission's intent and usage scenario.
   *
   * Describes exactly what this permission allows and any intended contexts
   * for assignment. Used by compliance, admin, and security review.
   */
  description: string;

  /**
   * Level at which this permission is applicable: platform, organization,
   * department.
   *
   * Designates where in the RBAC hierarchy this permission can be granted or
   * recognized, supporting multitenant isolation and
   * department/organization-level overrides.
   */
  scope_type: string;

  /**
   * Current status of the permission (active, retired, system, etc.).
   *
   * Used to flag permissions as available for assignment or deprecated,
   * system-only, or under review.
   */
  status: string;

  /**
   * Creation timestamp (ISO 8601 date-time).
   *
   * Indicates when this permission record was first created in the database
   * as a reference for audit and lifecycle management.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp (ISO 8601 date-time).
   *
   * Set to now() when any attribute of the permission is changed, forming the
   * basis for modification audit trails.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp for permission archival/retirement (null if
   * active).
   *
   * If present, indicates when this permission was soft deleted or archived.
   * Used for compliance review, audit queries, and enforcing immutability for
   * historic permissions. Omit or set to 'null' when the permission is
   * active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformPermission {
  /**
   * Request/Filter object for searching, filtering, and paginating permission
   * definitions. Used in RBAC audit tools and mapping configuration.
   */
  export type IRequest = {
    /** Permission code filter (exact). */
    code?: string | undefined;

    /** Permission name partial text search/filter. */
    name?: string | undefined;

    /** Scope match (platform, organization, department). */
    scope_type?: string | undefined;

    /** Status match. */
    status?: string | undefined;

    /** Page number for results, pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Results per page, pagination. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Request payload for creating a new RBAC permission record in the
   * healthcarePlatform system.
   *
   * Original business schema: healthcare_platform_permissions.
   */
  export type ICreate = {
    /**
     * Unique code for the new permission (e.g. 'edit_patient_record').
     *
     * Must comply with RBAC naming conventions and be unique within the
     * table.
     */
    code: string;

    /**
     * Human-readable name for the permission.
     *
     * This is the display label for all role assignment and audit
     * workflows.
     */
    name: string;

    /**
     * Textual explanation of what the permission grants and any
     * business/compliance rules.
     *
     * Used by admins for RBAC review and staff onboarding.
     */
    description: string;

    /**
     * Level at which this permission is applicable: platform, organization,
     * department.
     *
     * This field defines where the permission can be granted and its
     * context within the RBAC tree.
     */
    scope_type: string;

    /**
     * Operational status of the permission: 'active', 'retired', 'system',
     * etc.
     *
     * Status controls whether the permission can be assigned in current
     * workflows and sets the compliance lifecycle stage.
     */
    status: string;
  };

  /**
   * Request payload for updating a platform RBAC permission record. Supports
   * partial update for RBAC review, compliance, and business reconfiguration
   * workflows.
   */
  export type IUpdate = {
    /** Update permission code (must remain unique for table scope). */
    code?: string | undefined;

    /** Updated permission name (display label). */
    name?: string | undefined;

    /** Updated explanation or business context for permission usage. */
    description?: string | undefined;

    /**
     * Modify the scope_type for the permission (platform, org, department,
     * etc.).
     */
    scope_type?: string | undefined;

    /** Update status (active, archived, system, etc.) for RBAC review. */
    status?: string | undefined;

    /**
     * Soft delete/archival timestamp. Set to ISO 8601 date-time to archive
     * permission, or null to restore to active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary record for a platform permission definition, used for
   * role-permission mapping and RBAC management. Contains minimal identity,
   * code, naming, and RBAC context. Not user/role specific; use in platform
   * permission listings and mapping screens.
   */
  export type ISummary = {
    /** Unique identifier for the permission as a UUID. */
    id: string & tags.Format<"uuid">;

    /** Permission code (e.g., 'edit_patient_record') to be mapped to roles. */
    code: string;

    /** Human-readable name for this permission. */
    name: string;

    /**
     * Scope where this permission applies (platform, organization,
     * department).
     */
    scope_type: string;

    /** Current status of the permission (active, retired, system). */
    status: string;
  };
}
