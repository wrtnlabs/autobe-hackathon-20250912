import { tags } from "typia";

/**
 * Access log record for resource read/view events. Captures user, resource,
 * purpose, time, and organization context for HIPAA compliance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformAccessLog = {
  /** Unique identifier for the access log entry. */
  id: string & tags.Format<"uuid">;

  /** ID of the user initiating the access. */
  user_id: string & tags.Format<"uuid">;

  /** UUID of the organization whose data was accessed. */
  organization_id: string & tags.Format<"uuid">;

  /**
   * Type of resource accessed (e.g., 'EHR', 'PATIENT_RECORD', 'IMAGING',
   * 'CONFIG').
   */
  resource_type: string;

  /** UUID of the referenced resource, if applicable. */
  resource_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Business/legal justification for access (e.g., role, consent, emergency,
   * audit, etc.).
   */
  access_purpose?: string | undefined;

  /**
   * IP address of the access event, if recorded (may be null for some
   * events).
   */
  ip_address?: string | undefined;

  /** Timestamp when the access was logged (ISO 8601, with timezone). */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformAccessLog {
  /**
   * Parameters for searching and filtering access log events (read/view
   * resource actions). Supports filtering by actor, organization, resource
   * type, object ID, access purpose, and time range, with pagination and
   * sorting control.
   */
  export type IRequest = {
    /**
     * User ID or actor searching for access events associated with this
     * user.
     */
    actor?: string | undefined;

    /** UUID or code for filtering access logs to a specific organization. */
    organization?: string | undefined;

    /**
     * Type of resource accessed (e.g., 'EHR', 'PATIENT_RECORD', 'IMAGING',
     * 'CONFIG').
     */
    resource_type?: string | undefined;

    /**
     * ID of the referenced resource if searching for object/record-specific
     * access.
     */
    resource_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Free text or role-based reason for access (e.g., 'consent',
     * 'emergency', 'audit', etc.).
     */
    access_purpose?: string | undefined;

    /** Start datetime for the queried access events. */
    from?: (string & tags.Format<"date-time">) | undefined;

    /** End datetime for the queried access events. */
    to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination, starting from 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of items per page (default: 100, max: 1000). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<1000>)
      | undefined;

    /** Sort parameter to order results (e.g., 'created_at:desc'). */
    sort?: string | undefined;
  };

  /**
   * Summary of an access log entry for paginated listing. Excludes purpose,
   * IP, and detailed context, focusing on identifiers and basic metadata for
   * compliance review and search containers.
   */
  export type ISummary = {
    /** Unique identifier of the access log record. */
    id: string & tags.Format<"uuid">;

    /** User who accessed the resource. */
    user_id: string & tags.Format<"uuid">;

    /** Organization whose resource was accessed. */
    organization_id: string & tags.Format<"uuid">;

    /**
     * Type of resource accessed (EHR, PATIENT_RECORD, IMAGING, CONFIG,
     * etc.).
     */
    resource_type: string;

    /** Primary key/UUID of referenced resource (nullable). */
    resource_id?: (string & tags.Format<"uuid">) | undefined;

    /** Timestamp of access event. */
    created_at: string & tags.Format<"date-time">;
  };
}
