import { tags } from "typia";

/**
 * A department or business unit within an organization (e.g., Cardiology,
 * Radiology, Billing). Defines scope for resource allocation, RBAC, and audit
 * boundaries.
 *
 * Maps one-to-many to healthcare_platform_organizations.
 *
 * - Id: Unique department identifier
 * - Healthcare_platform_organization_id: Parent org (tenant)
 * - Code: Unique code within org
 * - Name: Human-readable department name
 * - Status: active, archived, etc.
 * - Created_at / updated_at: Timestamps
 * - Deleted_at: Soft delete/archive date or null. Compliant with Prisma
 *   healthcare_platform_departments schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformDepartment = {
  /**
   * Primary Key. UUID for the department as generated by DB. References 'id'
   * in healthcare_platform_departments.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Parent organization's id (UUID). References
   * 'healthcare_platform_organizations.id'.
   */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /**
   * Short code for the department (unique within organization). See Prisma
   * 'code' column. Used for business logic and search filtering.
   */
  code: string;

  /**
   * Department display/legal name. To be used for UI, operational reporting,
   * audit. See Prisma 'name'.
   */
  name: string;

  /**
   * Current business status (active, suspended, pending, archived). String as
   * defined in Prisma 'status' column. Used for filtering, organization
   * management, audit.
   */
  status: string;

  /**
   * Creation timestamp for the department. ISO 8601. References Prisma
   * 'created_at' (Timestamptz).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Last update timestamp for the department (ISO8601). See Prisma
   * 'updated_at'.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft-deletion date/time if archived. Null when active. Per Prisma
   * 'deleted_at' column.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformDepartment {
  /**
   * Request filter structure for paginating, searching, or filtering
   * department records. Used in advanced admin dashboards and assignment
   * selection. All fields optional for advanced/fuzzy search.
   */
  export type IRequest = {
    /**
     * Department business code (unique within organization, short string
     * filter).
     */
    code?: string | undefined;

    /** Fuzzy search for department name. */
    name?: string | undefined;

    /** Filter for department operational status. */
    status?: string | undefined;

    /**
     * Restrict search to a specific organization's departments (cascade
     * filtering/grouping).
     */
    healthcare_platform_organization_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /** Departments created after this timestamp. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Departments created before this timestamp. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Pagination: page number. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination page size. */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * DTO for department record creation. Maps to
   * healthcare_platform_departments in Prisma. Required: organization, code,
   * name, status. Returns the full department object with DB-generated
   * ids/timestamps on success.
   */
  export type ICreate = {
    /**
     * Organization UUID to which this department belongs. See
     * healthcare_platform_organizations.id in Prisma.
     */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /**
     * Short department code, unique within organization. String, e.g.
     * 'CARD', 'RAD', 'BILL'.
     */
    code: string;

    /** Display/business name of department. */
    name: string;

    /**
     * Initial status (e.g., 'active', 'pending') as required by business
     * logic.
     */
    status: string;
  };

  /**
   * DTO for updating a department record as in Prisma. Fields are optional to
   * allow for partial updates. Matches healthcare_platform_departments.
   */
  export type IUpdate = {
    /** Department code for update. Unique within organization. Optional. */
    code?: string | undefined;

    /** Department name for update. Optional. */
    name?: string | undefined;

    /** Updated status, e.g. 'active', 'suspended', 'archived'. Optional. */
    status?: string | undefined;

    /**
     * Soft delete date/time. Set value to schedule/archive department.
     * Optional.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary object for a department (business unit) within an organization as
   * used in list/search views for department management. Used for navigation,
   * dashboards, and resource assignment workflows.
   */
  export type ISummary = {
    /** Department's unique identifier. */
    id: string & tags.Format<"uuid">;

    /** Parent organization's unique identifier the department belongs to. */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /** Short business code for department, unique within organization. */
    code: string;

    /** Department's display or legal/business name. */
    name: string;

    /**
     * Operational status of the department (active, suspended, archived,
     * etc).
     */
    status: string;

    /** Timestamp when department was created (ISO8601). */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for last update of department (ISO8601). */
    updated_at: string & tags.Format<"date-time">;
  };
}
