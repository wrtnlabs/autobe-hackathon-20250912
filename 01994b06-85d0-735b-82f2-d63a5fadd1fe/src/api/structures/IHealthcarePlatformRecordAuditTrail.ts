import { tags } from "typia";

/**
 * Audit trail entry for clinical or patient record activity in the platform.
 *
 * This object is the canonical output type for individual record access,
 * update, deletion, lock, and override actions, reflecting the
 * healthcare_platform_record_audit_trails table. Every event is append-only,
 * ensuring full regulatory compliance for HIPAA and medical recordkeeping.
 *
 * All field names and documentation strictly follow the database schema and
 * business requirements, with full English documentation for clarity. PHI is
 * NOT included in this schema; before/after JSON blobs are redacted or held
 * under data minimization rules for compliance. This object is for audit review
 * and not for input to create audit entries.
 *
 * All timestamps follow ISO 8601 date-time format. Business context and
 * rationale fields are detailed to support downstream compliance and response
 * workflows as required by your documentation policy.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformRecordAuditTrail = {
  /** Primary key for audit trail row (UUID). */
  id: string & tags.Format<"uuid">;

  /** ID of the patient record this event applies to. */
  patient_record_id: string & tags.Format<"uuid">;

  /**
   * ID of the user or actor initiating the action; see provider assignment,
   * medicalDoctor, or admin role as applicable.
   */
  actor_user_id: string & tags.Format<"uuid">;

  /**
   * Action type: create, update, delete, access, lock, unlock,
   * emergency_access_override, etc.
   */
  audit_action: string;

  /**
   * Optional JSON containing structured event context: device, user agent, or
   * location metadata.
   */
  event_context_json?: string | null | undefined;

  /**
   * Serialized before-event entity state, if relevant (for update/delete
   * events).
   */
  before_state_json?: string | null | undefined;

  /** Serialized after-event entity state, if updated/applies to action. */
  after_state_json?: string | null | undefined;

  /** Business or user-provided reason for the action. */
  request_reason?: string | null | undefined;

  /** Timestamp for when the audit event was recorded. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformRecordAuditTrail {
  /**
   * Request parameters for paginated search/filter of audit trail entries for
   * a patient record. Used in advanced audit/compliance review on
   * healthcare_platform_record_audit_trails.
   */
  export type IRequest = {
    /** UUID for the patient record. Optional filter. */
    patient_record_id?: string | undefined;

    /** UUID of the user/actor. Optional filter. */
    actor_user_id?: string | undefined;

    /** Audit action filter: access, update, emergency_override, etc. */
    audit_action?: string | undefined;

    /** Start date-time (ISO 8601) for filtering creations. */
    created_from?: (string & tags.Format<"date-time">) | undefined;

    /** End date-time (ISO 8601) for filtering creations. */
    created_to?: (string & tags.Format<"date-time">) | undefined;

    /** Pagination: page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Pagination: page size. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Sort order (e.g., 'created_at DESC'). */
    sort?: string | undefined;
  };
}
