import { tags } from "typia";

/**
 * Represents an analytics dashboard configuration and its UI/analytics context.
 *
 * - Enforces RBAC: Scoping by owner, organization, and optionally department
 * - Business attributes: title (unique per org), description, config_json (for
 *   BI/Layout)
 * - System/compliance: created_at, updated_at, deleted_at (soft-delete) See
 *   Prisma / analytics_dashboard model for authoritative field definitions.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformAnalyticsDashboard = {
  /**
   * The globally unique identifier for this analytics dashboard. Set on
   * creation and immutable. Used across UI and API to reference the
   * dashboard.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the dashboard's owning user's UUID. Indicates the creator
   * and default permissions.
   */
  owner_user_id: string & tags.Format<"uuid">;

  /**
   * UUID of the organization (tenant/owner) to which this dashboard belongs.
   * Used for data isolation and multi-tenant compliance.
   */
  organization_id: string & tags.Format<"uuid">;

  /**
   * Optional reference to the department context for scoping. If null,
   * dashboard is organization- or global-level.
   */
  department_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Human-readable dashboard title for UI display and search. Must be unique
   * within org.
   */
  title: string;

  /**
   * Optional detailed description or documentation for dashboard
   * purpose/contents.
   */
  description?: string | null | undefined;

  /**
   * Dashboard configuration in JSON string format. Contains widget layout,
   * analytics components, and UI/BI metadata.
   */
  config_json: string;

  /**
   * Flag indicating whether the dashboard is public to the org/department
   * (true) or restricted to its owner.
   */
  is_public: boolean;

  /** Timestamp (ISO 8601) when the dashboard was created. */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp (ISO 8601) of the last update to this dashboard's configuration
   * or meta.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete marker (null if not deleted); used for archival and
   * compliance. Not shown in active lists.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformAnalyticsDashboard {
  /**
   * Advanced dashboard search criteria, supporting filter by owner, org,
   * department, title, visibility and creation date, with complete pagination
   * and sorting (results listing/management for analytics dashboards).
   */
  export type IRequest = {
    /** Dashboard owner's user assignment (search filter, nullable). */
    owner_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Organization id to search dashboards for (nullable, for
     * platform/global dashboards).
     */
    organization_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional department id to filter dashboards by (nullable, for
     * org-level only).
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Dashboard title (text search filter, nullable). */
    title?: string | null | undefined;

    /** Whether dashboard is public (filter value, nullable). */
    is_public?: boolean | null | undefined;

    /**
     * Earliest creation date of dashboards to return, for filtering
     * (nullable, ISO 8601 date-time).
     */
    created_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Latest creation date for filter (nullable, ISO 8601 date-time). */
    created_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Include deleted dashboards if true, only non-deleted if false, unset
     * to include all (nullable).
     */
    deleted?: boolean | null | undefined;

    /**
     * Results page to request for pagination (default 1, must be positive
     * integer).
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Page size for pagination (default as allowed by system, must be
     * positive integer).
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Sort criteria, e.g. 'created_at desc', for advanced ordering
     * (nullable).
     */
    sort?: string | null | undefined;
  };

  /**
   * Input DTO for creating a new analytics dashboard. All required
   * business/meta/configuration fields must be present. Output is the
   * persisted dashboard.
   */
  export type ICreate = {
    /**
     * UUID of the user who owns/creates this dashboard. Required for
     * scoping, RBAC, and audit.
     */
    owner_user_id: string & tags.Format<"uuid">;

    /** UUID of the organization (tenant) this dashboard is created under. */
    organization_id: string & tags.Format<"uuid">;

    /** Optional department context for scoping the dashboard (nullable). */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Required unique dashboard title (per organization) for UI and
     * business lookup.
     */
    title: string;

    /** Optional description for display and search; can be null. */
    description?: string | null | undefined;

    /**
     * Dashboard layout/configuration in JSON string format. Stores widgets,
     * params, and visualization layout.
     */
    config_json: string;

    /**
     * Whether the dashboard is public to all org/department members (true),
     * or only to the owner (false).
     */
    is_public: boolean;
  };

  /**
   * Input DTO for updating an existing analytics dashboard. Any field may be
   * updated; only those supplied are changed. Follows PATCH/PUT business
   * logic and audit constraints.
   */
  export type IUpdate = {
    /**
     * (Optional) Department ID for scoping the dashboard, if updating this
     * context.
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * (Optional) New dashboard title, must be unique within its
     * organization.
     */
    title?: string | undefined;

    /** (Optional) Description to display/search in UI/documentation. */
    description?: string | null | undefined;

    /**
     * (Optional) Updated/configuration JSON for dashboard
     * layout/components.
     */
    config_json?: string | undefined;

    /**
     * (Optional) Updated flag for public/private visibility in the
     * org/department.
     */
    is_public?: boolean | undefined;
  };

  /**
   * Summary information for analytics dashboards, as displayed in
   * index/search results. Includes dashboard ID, title, organizational/dept
   * relationships, ownership, current status, and lifecycle audit timestamps.
   * Used for list views and search workflows in analytic/BI UIs.
   */
  export type ISummary = {
    /** The analytics dashboard ID. */
    id: string & tags.Format<"uuid">;

    /** The title of the dashboard. */
    title: string;

    /** Dashboard owner user assignment ID. */
    owner_user_id: string & tags.Format<"uuid">;

    /** The organization associated with this dashboard. */
    organization_id: string & tags.Format<"uuid">;

    /** The department associated with this dashboard (nullable). */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Whether this dashboard is public within the tenant/org/department. */
    is_public: boolean;

    /** When dashboard was created. */
    created_at: string & tags.Format<"date-time">;

    /** When dashboard was last updated. */
    updated_at: string & tags.Format<"date-time">;

    /** When dashboard was deleted/archived. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
