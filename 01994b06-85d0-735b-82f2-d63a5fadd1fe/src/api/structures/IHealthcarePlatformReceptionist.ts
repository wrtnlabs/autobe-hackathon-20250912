import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Entity schema for a receptionist user account in the healthcare platform.
 * Represents non-clinical staff responsible for scheduling, check-in/out, and
 * administration. Fields include email, name, contact, and soft-deletion
 * status. Used in user profile, authentication, and admin APIs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformReceptionist = {
  /** Unique identifier for the receptionist (primary key). */
  id: string & tags.Format<"uuid">;

  /**
   * Receptionist's business email; primary login credential. Must be unique
   * and is required for all operations.
   */
  email: string & tags.Format<"email">;

  /** Receptionist's full legal name as defined in the schema. */
  full_name: string;

  /** Receptionist's business or organizational phone number (nullable). */
  phone?: string | null | undefined;

  /** ISO8601 timestamp when the receptionist account was created. */
  created_at: string & tags.Format<"date-time">;

  /** ISO8601 timestamp for the most recent modification to this account. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp. Null if active; set to ISO8601 timestamp if
   * logically deleted for compliance/audit.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformReceptionist {
  /**
   * Payload for receptionist registration (account creation) referencing the
   * IHealthcarePlatformReceptionist.ICreate structure.
   *
   * - Receptionist login and business email (MUST be unique)
   * - Full name of the receptionist for personnel identification
   * - Business/organization contact number (optional, nullable)
   *
   * On success, a new healthcare_platform_receptionists record is created and
   * an authentication session can be issued. Never include fields not
   * described in the schema. Designed for front-desk, appointment, or admin
   * staff onboarding.
   */
  export type ICreate = {
    /**
     * Receptionist login and business email. Must be unique for this table.
     * Used both for authentication and system notification delivery.
     */
    email: string & tags.Format<"email">;

    /** Full name of the receptionist for identification and messaging. */
    full_name: string;

    /**
     * Business or organizational contact number. Used for notifications/SMS
     * and administrator contact. Nullable if not provided.
     */
    phone?: string | null | undefined;
  };

  /**
   * Payload containing all receptionist credential and profile details upon
   * successful login, join, or session refresh. Never exposes any password or
   * sensitive credential information.
   */
  export type IAuthorized = {
    /** Unique identifier for the receptionist user. */
    id: string & tags.Format<"uuid">;

    /** Receptionist login and business email. */
    email: string & tags.Format<"email">;

    /** Full legal name of the receptionist. */
    full_name: string;

    /** Business or organizational contact number. */
    phone?: string | null | undefined;

    /** Receptionist account creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp. Null if active; set to ISO8601 timestamp if
     * logically deleted for compliance/audit.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Login credentials structure for a receptionist account
   * (IHealthcarePlatformReceptionist.ILogin).
   *
   * - Email (must match registered receptionist account)
   * - Password (write-only)
   *
   * Never expose or return password(s) in any API output.
   */
  export type ILogin = {
    /**
     * Receptionist business email for login (must match email in
     * receptionist record).
     */
    email: string & tags.Format<"email">;

    /**
     * Password credential for login (write only; required on
     * authentication, not returned in any API response).
     */
    password: string;
  };

  /**
   * Payload for receptionist session/token refresh operation
   * (IHealthcarePlatformReceptionist.IRefresh). Contains a refresh token
   * previously issued after login/join, permitting seamless session rotation
   * or continuation.
   */
  export type IRefresh = {
    /**
     * Refresh token for session renewal (not the access JWT, and not the
     * password). Required to prolong authenticated session without password
     * re-entry.
     */
    refresh_token: string;
  };

  /**
   * Advanced request schema for searching, filtering, and paginating
   * receptionist user accounts. Used for receptionist list or staff audit
   * flows. All fields optional/safe for UI or automated query.
   */
  export type IRequest = {
    /**
     * Receptionist email (string email filter, supports substring/partial
     * match).
     */
    email?: string | undefined;

    /** Full legal name substring for receptionist search. */
    full_name?: string | undefined;

    /** Minimum creation date for receptionist listing. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Maximum creation date for receptionist listing. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Include/deleted status flag for receptionist listing (null=active,
     * else deleted).
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Paginated page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of records per page (default organization setting). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /** Sort field name (e.g., email, full_name, created_at). */
    sortBy?: string | undefined;

    /** Sort order: asc or desc. */
    sortDir?: "asc" | "desc" | undefined;
  };

  /**
   * Schema for updating receptionist user data (profile fields). Only
   * updatable fields are included. All fields optional for partial update; at
   * least one field is required in a valid update request.
   */
  export type IUpdate = {
    /** New full legal name for the receptionist, if being updated. */
    full_name?: string | undefined;

    /** Updated business or organizational contact phone number (nullable). */
    phone?: string | null | undefined;
  };

  /**
   * Receptionist staff summary for use in admin views or scheduling
   * dashboards. Omits sensitive fields. Date/times are UTC ISO 8601.
   */
  export type ISummary = {
    /** Receptionist unique staff/user ID (UUID PK). */
    id: string & tags.Format<"uuid">;

    /** Email for login and notification (must be business-eligible). */
    email: string & tags.Format<"email">;

    /** Receptionist full name for administrative display and identification. */
    full_name: string;

    /** Business/organization phone for notifications (optional). */
    phone?: string | null | undefined;

    /** When the receptionist account was created. (ISO 8601 UTC) */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp of last account update/edit. (ISO 8601 UTC) */
    updated_at: string & tags.Format<"date-time">;
  };
}
