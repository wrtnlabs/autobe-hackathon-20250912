import { tags } from "typia";

/**
 * Represents a clinical decision support (CDS) rule configured at system or
 * organization level. Responsible for real-time safety checks, best-practice
 * reminders, and regulatory/compliance logic in clinical workflows. Definitions
 * are versioned, audited, and can be organization-specific as per the
 * healthcare_platform_decision_support_rules schema. All major CDS properties
 * including trigger mechanism, expression, enabled status, and business
 * documentation are covered.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformDecisionSupportRule = {
  /** Unique identifier of the CDS rule (@uuid). */
  id: string & tags.Format<"uuid">;

  /**
   * Organization the rule belongs to. References organization entity. Must be
   * a valid UUID.
   */
  organization_id: string & tags.Format<"uuid">;

  /**
   * Unique code for this clinical decision support rule, unique per
   * organization. Used as reference key for maintenance and workflow
   * triggers.
   */
  rule_code: string;

  /**
   * Short, human-readable title for the support rule, for dashboard display
   * and search.
   */
  title: string;

  /**
   * Optional description of the rule's business, clinical, or regulatory
   * purpose. Multi-paragraphs, supports documentation best practices.
   */
  description?: string | undefined;

  /**
   * Event that fires the rule logic. E.g., 'medication_prescribed',
   * 'lab_result_posted', etc. This determines when the CDS logic should be
   * evaluated in workflow.
   */
  trigger_event: string;

  /**
   * Serialized expression or DSL representing the decision support logic.
   * Must be valid JSON that can be parsed by the CDS engine.
   */
  expression_json: string;

  /** Whether the rule is currently active/executed by the CDS engine. */
  is_enabled: boolean;

  /** Timestamp when the CDS rule was created. Required for regulatory trace. */
  created_at: string & tags.Format<"date-time">;

  /** Last updated timestamp for the CDS rule. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for the rule archival. Null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | undefined;
};
export namespace IHealthcarePlatformDecisionSupportRule {
  /**
   * DTO for advanced search/filter queries to find CDS rules. Used to find
   * decision support rule configuration in admin UI, audit, or analytics
   * workflows. This schema matches the parameters allowed for PATCH
   * /decisionSupportRules or any analytics CDS index operation.
   *
   * All fields are optional; filters may be combined.
   */
  export type IRequest = {
    /**
     * Filter by owning organization's UUID (multi-tenant scoping); null for
     * global/system rules.
     */
    organization_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Limit to department-scoped rules; null for org- or global-level
     * rules.
     */
    department_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Unique code to filter rules (exact, partial, or pattern search). */
    rule_code?: string | undefined;

    /** Search for rules by title label (partial match supported). */
    title?: string | undefined;

    /** Only include currently-enabled CDS rules if true. */
    is_enabled?: boolean | undefined;

    /**
     * Filter by the event that triggers the rule (e.g.,
     * 'medication_prescribed').
     */
    trigger_event?: string | undefined;

    /** ISO 8601 lower bound for creation timestamp, for range filtering. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** ISO 8601 upper bound for creation timestamp, for range filtering. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for paginated results (1-based indexing). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Maximum results per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Sort order for index results, e.g., 'created_at desc', 'title asc'. */
    sort?: string | undefined;
  };

  /**
   * Request DTO for creating a new clinical decision support rule. Used by
   * system admins or organization admins to onboard a new best practice,
   * clinical alert, or safety check for workflow integration. All required
   * business and technical fields, with documentation reference.
   */
  export type ICreate = {
    /**
     * Organization the rule will belong to. Must reference a valid
     * organization.
     */
    organization_id: string & tags.Format<"uuid">;

    /**
     * Unique code (string) for the CDS rule. Namespaced by organization,
     * must meet business uniqueness requirements.
     */
    rule_code: string;

    /**
     * Short, human-readable title of the CDS rule for admin display and
     * business search.
     */
    title: string;

    /**
     * Business/clinical documentation for the rule. Optional, can include
     * multi-line/multi-paragraph markdown, referencing the logic and
     * purpose.
     */
    description?: string | undefined;

    /**
     * The external system or business event that triggers evaluation of
     * this rule (i.e., order placed, lab result posted, etc.). Business and
     * technical trigger key.
     */
    trigger_event: string;

    /**
     * The encoded, machine-readable representation of the clinical or
     * business rule logic.
     */
    expression_json: string;

    /** Whether the rule is active and will execute when the trigger runs. */
    is_enabled: boolean;
  };

  /**
   * Update DTO for clinical decision support rule configuration. Allows
   * partial or complete mutation of any documentation, display, or logic
   * fields, while preserving audit/compliance traceability. Role-limited to
   * system or org admins.
   */
  export type IUpdate = {
    /** Update the CDS rule's display title, if needed. */
    title?: string | undefined;

    /**
     * Markdown documentation, clinical/business description for the rule.
     * Optional field for updating purpose, usage, regulatory context, or
     * markdown rendering.
     */
    description?: string | undefined;

    /**
     * Update the system or business workflow event triggering this logic,
     * if needed by workflow change.
     */
    trigger_event?: string | undefined;

    /**
     * Modify the serialized business/clinical logic for the rule. Must be a
     * valid JSON logic description or DSL per platform engine constraints.
     */
    expression_json?: string | undefined;

    /** Change whether the rule is active (executed) in the CDS engine logic. */
    is_enabled?: boolean | undefined;
  };
}
