import { tags } from "typia";

/**
 * A single user-to-organization assignment mapping, linking a user record to a
 * given organization with a specific RBAC role. Used for multi-tenant access
 * control, staff assignments, RBAC, and system-level audit/traceability.
 * Represents the current or historical state of the user assignment. All IDs
 * are UUIDs.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformUserOrgAssignment = {
  /** Unique ID of this user-organization-role assignment (UUID). */
  id: string & tags.Format<"uuid">;

  /** UUID of the user in this assignment. */
  user_id: string & tags.Format<"uuid">;

  /** UUID of the organization this user is assigned to. */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /**
   * Role code for the assignment within this organization; matches roles
   * table value.
   */
  role_code: string;

  /**
   * Current status of this assignment (active, pending, suspended, deleted,
   * etc).
   */
  assignment_status: string;

  /** Creation timestamp (ISO 8601 UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Update timestamp (ISO 8601 UTC). */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp if assignment is deleted/archived; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformUserOrgAssignment {
  /**
   * Request/search shape for user-organization assignment list endpoints.
   * Allows filtering/search/query for assignment management screens. Maps to
   * fields in the assignment Prisma table.
   *
   * Includes filters for organization, user, role, assignment status, and
   * basic pagination/sort. Used with paginated index endpoints for bulk
   * assignment audit and review.
   */
  export type IRequest = {
    /** Organization to filter assignments by (UUID). */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** User to filter assignments by (UUID). */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter assignments by role_code. */
    role_code?: string | undefined;

    /** Filter by assignment_status (active, deleted, etc). */
    assignment_status?: string | undefined;

    /** Pagination: page number (1-based index). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Pagination: results per page. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Sort string for ordering results (e.g., 'created_at desc'). */
    sort?: string | undefined;
  };

  /**
   * Shape for creating a new user-organization assignment. Must supply all
   * required RBAC, entity, and status info.
   */
  export type ICreate = {
    /** UUID of the user to assign. */
    user_id: string & tags.Format<"uuid">;

    /** UUID of the organization to which to assign user. */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /** Role code for the assignment (as defined in roles table). */
    role_code: string;

    /** Initial assignment status (active, pending, suspended, deleted, etc). */
    assignment_status: string;
  };

  /**
   * Update request for user-organization assignment: can update role_code
   * and/or assignment_status, but not user/org IDs. All other fields are
   * immutable. Partial updates accepted.
   */
  export type IUpdate = {
    /** New role code for the assignment, if being changed. */
    role_code?: string | undefined;

    /**
     * New assignment status (active, pending, suspended, deleted, etc) if
     * being changed.
     */
    assignment_status?: string | undefined;
  };
}
