import { tags } from "typia";

/**
 * Immutable forensic audit log entry tracking user/system actions and resource
 * events. Used for compliance, investigation, and reporting, as per
 * healthcare_platform_audit_logs schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformAuditLog = {
  /** Unique identifier for the audit log record. */
  id: string & tags.Format<"uuid">;

  /**
   * Actor's user ID initiating the audit event (nullable for system/anonymous
   * actions).
   */
  user_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Context organization UUID for this audit event (nullable for
   * system/global logs).
   */
  organization_id?: (string & tags.Format<"uuid">) | undefined;

  /**
   * Type of action performed (e.g., 'LOGIN', 'RECORD_UPDATE',
   * 'CONSENT_CHANGE', 'SECURITY_EVENT').
   */
  action_type: string;

  /** Structured JSON as string or descriptive context for this event. */
  event_context?: string | undefined;

  /** Optional IP address associated with the event, for traceability. */
  ip_address?: string | undefined;

  /**
   * Business entity type affected (e.g., 'PATIENT_RECORD', 'CONSENT',
   * 'APPOINTMENT').
   */
  related_entity_type?: string | undefined;

  /** Business entity UUID affected (nullable if not entity-scoped). */
  related_entity_id?: (string & tags.Format<"uuid">) | undefined;

  /** Timestamp when the audit log was created (ISO 8601, with timezone). */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformAuditLog {
  /**
   * Schema for searching and filtering audit logs.
   *
   * Supports filtering by actor, organization, action_type, entity type/id,
   * time range, and paginated listing.
   */
  export type IRequest = {
    /** User identifier or name of the audit event initiator, if applicable. */
    actor?: string | undefined;

    /** UUID or code of the organization context for the audit log search. */
    organization?: string | undefined;

    /**
     * The type of action performed (e.g., 'LOGIN', 'RECORD_UPDATE',
     * 'CONSENT_CHANGE', etc.).
     */
    action_type?: string | undefined;

    /**
     * Type of entity affected (e.g., 'PATIENT_RECORD', 'CONSENT',
     * 'APPOINTMENT').
     */
    related_entity_type?: string | undefined;

    /**
     * ID of the affected entity, if searching for records related to a
     * specific object.
     */
    related_entity_id?: (string & tags.Format<"uuid">) | undefined;

    /** Start date/time for searching logs (ISO 8601 format). */
    from?: (string & tags.Format<"date-time">) | undefined;

    /** End date/time for searching logs (ISO 8601 format). */
    to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number for pagination. Default is 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of records per page (default: 100, max: 1000). */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<1000>)
      | undefined;

    /**
     * Sort order: property to sort by, optionally asc/desc (e.g.,
     * 'created_at:desc').
     */
    sort?: string | undefined;
  };

  /**
   * Summary of an audit log entry for list/pagination purposes. Excludes
   * sensitive context and full metadata, providing only identifying fields,
   * action types, and organizational scope. Designed for search/index
   * container usage.
   */
  export type ISummary = {
    /** Unique identifier of the audit log record. */
    id: string & tags.Format<"uuid">;

    /** User who triggered the audit event (nullable if system event). */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /** Organization context (nullable for global/system-level events). */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Type of action performed (e.g., LOGIN, RECORD_UPDATE, ACCESS,
     * SECURITY_EVENT, etc.).
     */
    action_type: string;

    /**
     * Type of the business entity referenced in the audit action (nullable,
     * e.g., PATIENT_RECORD, CONSENT, APPOINTMENT).
     */
    related_entity_type?: string | undefined;

    /** ID of the related business entity (nullable). */
    related_entity_id?: (string & tags.Format<"uuid">) | undefined;

    /** Timestamp of the audit log creation. */
    created_at: string & tags.Format<"date-time">;
  };
}
