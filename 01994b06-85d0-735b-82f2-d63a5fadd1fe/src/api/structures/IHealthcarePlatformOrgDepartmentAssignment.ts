import { tags } from "typia";

/**
 * Organization-department assignment mapping entity, representing the
 * relationship between an organization and a department.
 *
 * Includes unique identifier, foreign keys for org and department, audit trail
 * timestamps, and soft-delete marker.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformOrgDepartmentAssignment = {
  /** Unique identifier of the organization-department assignment. */
  id: string & tags.Format<"uuid">;

  /** Foreign key: ID of the organization to which the department is assigned. */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /** Foreign key: ID of the department being assigned to the organization. */
  healthcare_platform_department_id: string & tags.Format<"uuid">;

  /** Timestamp when the assignment was created (ISO 8601 format). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the assignment was last modified (ISO 8601 format). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the assignment was soft-deleted, if applicable (ISO 8601
   * format).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformOrgDepartmentAssignment {
  /**
   * Request parameters for searching/filtering organization-department
   * assignments. Supports paging, filtering by org/department, created
   * window, and sorting.
   */
  export type IRequest = {
    /** Page number for paginated results (1-based index; optional). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page (optional). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Filter by organization UUID (optional). */
    healthcare_platform_organization_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /** Filter by department UUID (optional). */
    healthcare_platform_department_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /**
     * Filter: results must have created_at on/after this time (optional,
     * ISO 8601).
     */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter: results must have created_at on/before this time (optional,
     * ISO 8601).
     */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter: results must have updated_at on/after this time (optional,
     * ISO 8601).
     */
    updated_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter: results must have updated_at on/before this time (optional,
     * ISO 8601).
     */
    updated_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Sort results by one of the available columns (optional). */
    orderBy?: string | undefined;

    /** Sort order direction (asc or desc, optional). */
    direction?: "asc" | "desc" | undefined;
  };

  /**
   * Request body for creating a new organization-department assignment.
   *
   * Requires the organization and department identifiers (UUIDs). Used for
   * onboarding, restructuring, or delegating staff/structure in multi-tenant
   * healthcare organizations.
   */
  export type ICreate = {
    /**
     * UUID of the organization to which the department will be assigned.
     * Must reference an existing organization entity.
     */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /**
     * UUID of the department to assign to the organization. Must reference
     * an existing department entity.
     */
    healthcare_platform_department_id: string & tags.Format<"uuid">;
  };

  /**
   * Patch/update object for updating fields in an organization-department
   * assignment. Fields are optional and represent only what is being
   * modified. Used for realigning departments between organizations or
   * correcting erroneous assignments.
   */
  export type IUpdate = {
    /** New UUID of the organization (if a reassignment is needed). */
    healthcare_platform_organization_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /** New UUID of the department (if a reassignment is needed). */
    healthcare_platform_department_id?:
      | (string & tags.Format<"uuid">)
      | undefined;
  };

  /**
   * Summary variant for listing/search results of organization-department
   * assignment relationships. Includes primary identifiers and timestamps
   * only (suitable for list views, not detail forms).
   */
  export type ISummary = {
    /** Unique identifier of the organization-department assignment. */
    id: string & tags.Format<"uuid">;

    /** UUID of the organization assigned. */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /** UUID of the department assigned. */
    healthcare_platform_department_id: string & tags.Format<"uuid">;

    /** Assignment creation timestamp (summary-level). */
    created_at: string & tags.Format<"date-time">;

    /** Last modification timestamp (summary-level). */
    updated_at: string & tags.Format<"date-time">;
  };
}
