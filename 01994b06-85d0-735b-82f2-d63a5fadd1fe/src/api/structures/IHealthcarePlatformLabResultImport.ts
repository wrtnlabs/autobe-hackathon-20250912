import { tags } from "typia";

/**
 * Record structure for each imported lab result (e.g., from LabCorp, Quest
 * Diagnostics), storing inbound payload pointers, parsing results, event
 * status, and organizational context. Maps directly to
 * healthcare_platform_lab_result_imports.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformLabResultImport = {
  /** Primary key of the imported lab result event. */
  id: string & tags.Format<"uuid">;

  /** Organization UUID for which the result import is relevant. */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /** Lab integration (external vendor/provider) UUID for this import. */
  lab_integration_id: string & tags.Format<"uuid">;

  /**
   * Blob, URI, or filename pointer to original inbound result payload (may be
   * cloud object/file path).
   */
  raw_payload_reference: string;

  /** Result parsing status code (e.g., 'parsed', 'error', 'partial'). */
  parsed_status: string;

  /**
   * Extended status message for import handling, left null for unparsed or
   * successful cases as appropriate.
   */
  parsed_message?: string | null | undefined;

  /** ISO 8601 timestamp of when the payload was imported into the system. */
  imported_at: string & tags.Format<"date-time">;

  /** Timestamp of import record creation (audit trail). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to this import record (audit trail). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete archival timestamp (compliance/audit retention). Null if
   * active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformLabResultImport {
  /**
   * Request body structure for searching imported lab result records. Enables
   * flexible querying of import status, source, and event window for audit,
   * integration troubleshooting, or compliance workflows.
   */
  export type IRequest = {
    /** Filter: Organization UUID for lab result import queries. */
    organizationId?: (string & tags.Format<"uuid">) | undefined;

    /** Filter: Lab integration (external provider) UUID in search. */
    labIntegrationId?: (string & tags.Format<"uuid">) | undefined;

    /** Status of the import (e.g., 'parsed', 'error', 'partial'). */
    parsed_status?: string | undefined;

    /** Start of import timestamp range filter (ISO 8601 or null). */
    dateFrom?: (string & tags.Format<"date-time">) | null | undefined;

    /** End of import timestamp range filter (ISO 8601 or null). */
    dateTo?: (string & tags.Format<"date-time">) | null | undefined;

    /** Key field to sort results by. */
    sortBy?: "imported_at" | "parsed_status" | undefined;

    /** Sorting direction (ascending/descending). */
    sortDirection?: "asc" | "desc" | undefined;

    /** Results page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Count of results per page. */
    pageSize?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };
}
