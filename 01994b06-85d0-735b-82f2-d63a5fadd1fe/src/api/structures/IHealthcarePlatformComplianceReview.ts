import { tags } from "typia";

/**
 * A compliance review, as used for regulatory audit, legal/non-conformance
 * follow-up, or scheduled operational review. Contains metadata, status,
 * reviewer, effective window, findings, recommendations, and audit fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformComplianceReview = {
  /** The unique primary key for the compliance review record. */
  id: string & tags.Format<"uuid">;

  /** Organization the review is conducted for. */
  organization_id: string & tags.Format<"uuid">;

  /** If applicable, the ID of the legal hold being reviewed. */
  hold_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** If applicable, the ID for the associated risk assessment. */
  risk_assessment_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** The assigned reviewer (user/org assignment ID). */
  reviewer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type of compliance review (periodic, incident, external_audit, follow_up,
   * etc). Required.
   */
  review_type: string;

  /**
   * Audit or review methodology (e.g., manual audit, external audit, workflow
   * progress, compliance script). Required.
   */
  method: string;

  /**
   * The current status of this review (scheduled, in_progress, completed,
   * rejected, approved, followup_required, etc). Required.
   */
  status: string;

  /** Outcome or results derived from this review (optional). */
  outcome?: string | null | undefined;

  /** Reviewer recommendations or next steps from the outcome, if any. */
  recommendations?: string | null | undefined;

  /** When the review was performed (may be null if scheduled/in_progress). */
  reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Reviewer, auditor, or compliance comments attached to this record. */
  comments?: string | null | undefined;

  /** Timestamp for creation of this review record. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of this review record's most recent update. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp (if record was archived/deleted but persists for
   * compliance).
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformComplianceReview {
  /** Search and filtering options for compliance review event queries. */
  export type IRequest = {
    /** Organization context for filtering compliance reviews. */
    organization_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by the associated legal hold ID. */
    hold_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by the associated risk assessment ID. */
    risk_assessment_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by assigned reviewer (user/org assignment ID). */
    reviewer_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by the type of review (e.g., periodic, incident, audit). */
    review_type?: string | undefined;

    /**
     * Filter by review status (e.g., scheduled, in_progress, completed,
     * approved).
     */
    status?: string | undefined;

    /** Filter by review outcome text. */
    outcome?: string | undefined;

    /** Start of filter for when review occurred (inclusive, ISO 8601). */
    reviewed_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** End of filter for when review occurred (inclusive, ISO 8601). */
    reviewed_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Start of creation timestamp range (inclusive, ISO 8601). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** End of creation timestamp range (inclusive, ISO 8601). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Which field to sort results on (created_at, reviewed_at, etc). */
    sort_by?: string | undefined;

    /** Sort direction (ascending or descending). */
    sort_direction?: "asc" | "desc" | undefined;

    /** Pagination: page number, 1-based. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Pagination: number of results per page. */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;
  };

  /**
   * Input data for creating a new compliance review event. Required fields:
   * organization_id, review_type, method, status. Optional: reviewer, links
   * to hold or risk assessment, outcome, recs, timestamps, comments.
   */
  export type ICreate = {
    /** Organization the review is for (must exist in org table). */
    organization_id: string & tags.Format<"uuid">;

    /** ID of the legal hold being reviewed, if applicable. */
    hold_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** ID for the associated risk assessment, if any. */
    risk_assessment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Assigned reviewer for this review. */
    reviewer_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Type of compliance review (periodic, incident, audit, etc). Required. */
    review_type: string;

    /**
     * Audit or review workflow (e.g., manual audit, automated review,
     * external audit).
     */
    method: string;

    /**
     * Status for the review as created (scheduled, in_progress, etc).
     * Required.
     */
    status: string;

    /** Outcome or result text (optional at creation). */
    outcome?: string | null | undefined;

    /** Recommendations output (optional). */
    recommendations?: string | null | undefined;

    /** Date/time review was performed (optional at creation). */
    reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Reviewer or process comments at review creation, if any. */
    comments?: string | null | undefined;
  };

  /**
   * Fields for updating a compliance review event. All fields are optional;
   * only supplied fields will be mutated.
   */
  export type IUpdate = {
    /** ID of associated legal hold, if updating association. */
    hold_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** ID for linked risk assessment if updating association. */
    risk_assessment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Assigned reviewer for this review. */
    reviewer_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Type of review to update, if changing scope or workflow. */
    review_type?: string | undefined;

    /**
     * Updated method to record review was completed (e.g., audit, workflow,
     * script, etc).
     */
    method?: string | undefined;

    /**
     * Update the review status (e.g., completed, rejected, approved,
     * followup_required, etc).
     */
    status?: string | undefined;

    /** Update the outcome or finding of this review entry. */
    outcome?: string | null | undefined;

    /** Update reviewer recommendations. */
    recommendations?: string | null | undefined;

    /** Set a date/time the review was performed. */
    reviewed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Updated or additional comments for the review record. */
    comments?: string | null | undefined;
  };
}
