import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Represents a patient/consumer account in the healthcarePlatform system. Each
 * patient record captures core identity attributes, contact details, compliance
 * timestamps, and soft-deletion status for full regulatory traceability. Used
 * for onboarding, authentication, appointment booking, medical record
 * management, billing, and consent workflows. All fields use normalized medical
 * record/documentation conventions. For patient registration, see the
 * IHealthcarePlatformPatient.ICreate and update via
 * IHealthcarePlatformPatient.IUpdate.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformPatient = {
  /**
   * Unique identifier for the patient user in the system. Primary key for
   * linking all patient-specific data, appointments, records, and account
   * settings.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The patient's unique email address. Must be used for login/portal
   * authentication and all system notifications. Uniqueness is enforced
   * across all patients. Uses business or personal domains as permitted by
   * policy.
   */
  email: string & tags.Format<"email">;

  /**
   * Legal full name of the patient as recorded during registration or
   * identity verification. Used for official records, compliance, and
   * matching with insurance/clinical data.
   */
  full_name: string;

  /**
   * Date and time of birth for patient, in ISO 8601 format. Used for identity
   * verification, clinical calculation, and regulatory compliance. Format
   * example: '1979-05-10T00:00:00Z'.
   */
  date_of_birth: string & tags.Format<"date-time">;

  /**
   * Primary contact number for notifications and patient communication. Must
   * match business/clinical communication policies. Optional for registration
   * if not required by org.
   */
  phone?: string | null | undefined;

  /**
   * Timestamp when the patient account was created. Populated automatically
   * by the system. ISO 8601 format.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the patient account profile was last updated. Used for
   * audit, compliance, and data synchronization. ISO 8601 format.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Nullable soft-deletion marker for account closure or regulatory data
   * lifecycle operations. Records the date/time the patient account was
   * flagged deleted. Always null for active accounts.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformPatient {
  /**
   * Payload for registering a new patient user account within the healthcare
   * platform. Fields are mapped to the healthcare_platform_patients schema,
   * supporting both password-based and federated/SSO sign-up paths.
   * Registration must include email, full legal name, and date_of_birth for
   * demographic and identity verification. Either password or
   * provider+provider_key is required. Phone is recommended for SMS and
   * appointment reminders but not required. All fields must match real schema
   * columns; no extraneous fields permitted.
   */
  export type IJoin = {
    /**
     * Email address for patient registration. Must be unique across
     * patients and represent a valid notification address. E.g.,
     * 'jane.doe@domain.com'.
     */
    email: string;

    /**
     * Patient's legal full name, used for matching, display, and identity
     * checks. E.g., 'Jane Doe'.
     */
    full_name: string;

    /**
     * Date of birth in ISO 8601 format (YYYY-MM-DD or date-time). Used to
     * verify eligibility, demographics, and medical records mapping.
     */
    date_of_birth: string & tags.Format<"date-time">;

    /**
     * Optional phone number for reminder and notification purposes. Should
     * be a valid E.164 format or locally accepted format if
     * non-international. Not required.
     */
    phone?: string | undefined;

    /**
     * Plain text password to set for patient login (if not using
     * federated/SSO registration). Complexity is enforced by platform
     * policy. Not returned in any response.
     */
    password?: string | undefined;

    /**
     * (Optional) Federated authentication provider name. E.g., 'saml',
     * 'oauth2', 'ad'. If set, password is not required.
     */
    provider?: string | undefined;

    /**
     * (Optional) Provider-specific user assertion, key, or identifier (used
     * with provider). E.g., SSO subject or federated user ID.
     */
    provider_key?: string | undefined;
  };

  /**
   * A successful authentication or registration result for a patient.
   * Contains the patient's unique system id, profile fields (excluding
   * sensitive fields like hashes/password), and JWT authentication/refresh
   * tokens for API access. All fields mapped to actual columns or DTO
   * contractâ€”never include password hashes. The token property refers to
   * IAuthorizationToken for actual JWT values; refresh token is also returned
   * as string. Single object response for all patient-facing auth flows.
   */
  export type IAuthorized = {
    /** Unique identifier (UUID) assigned to the patient user. */
    id: string & tags.Format<"uuid">;

    /**
     * Registered patient's business or personal email (matches registration
     * and login value).
     */
    email: string;

    /** The patient's legal name as stored in the registration record. */
    full_name: string;

    /** Patient birth date in ISO 8601 string format. */
    date_of_birth: string & tags.Format<"date-time">;

    /** Phone number for notifications; only returned if present. */
    phone?: string | undefined;

    /**
     * Timestamp when the patient account was created. Populated
     * automatically by the system. ISO 8601 format.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the patient account profile was last updated. Used for
     * audit, compliance, and data synchronization. ISO 8601 format.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Nullable soft-deletion marker for account closure or regulatory data
     * lifecycle operations. Records the date/time the patient account was
     * flagged deleted. Always null for active accounts.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;

    /**
     * Refresh token (JWT or opaque) issued as part of the auth flow; not a
     * hash or secret.
     */
    refresh_token?: string | undefined;
  };

  /**
   * DTO for patient login/authentication attempt. Must contain email; either
   * password for local auth or provider/provider_key for federated/SSO. All
   * fields must directly correspond to actual schema columns, with only one
   * of password or SSO credentials supplied. Do not mix/extend unrelated
   * business fields.
   */
  export type ILogin = {
    /**
     * Patient email address for authentication. Must match a unique user in
     * the healthcare_platform_patients table. E.g. 'user@example.com'.
     */
    email: string;

    /**
     * (Optional) Credential supplied when using local/login registration
     * method. Encrypted as per application policy. Not required for
     * SSO/federated login.
     */
    password?: string | undefined;

    /**
     * (Optional) Federated/SSO authentication provider name. E.g., 'saml',
     * 'oauth2', 'ad'. If supplied, must have matching provider_key;
     * password is not required.
     */
    provider?: string | undefined;

    /**
     * (Optional) Provider-specific assertion/credential for federated/SSO
     * login (e.g., SSO assertion, AD user id).
     */
    provider_key?: string | undefined;
  };

  /**
   * Payload for refreshing an existing authentication session for a patient.
   * Requires only the current refresh_token previously issued during
   * login/join. Must match actual field name and constraints in
   * authentication/session records. No extraneous properties allowed.
   */
  export type IRefresh = {
    /**
     * Refresh token for JWT session authentication renewal. Required, and
     * must be valid according to auth/session schema.
     */
    refresh_token: string;
  };

  /**
   * Request schema for searching, filtering, and paginating patient user
   * accounts. Used for admin, clinical, and compliance workflows for patient
   * roster management. Permits multi-field queries including demographics.
   * All fields optional. May be used for reporting, onboarding, and
   * compliance dashboards.
   */
  export type IRequest = {
    /** Patient's email address (unique per patient). Optional filter. */
    email?: string | undefined;

    /**
     * Full legal name of patient (for search; allows partial/substring
     * match).
     */
    full_name?: string | undefined;

    /** Optional inclusive lower bound for date_of_birth (YYYY-MM-DD). */
    date_of_birth_from?: (string & tags.Format<"date">) | undefined;

    /** Optional inclusive upper bound for date_of_birth (YYYY-MM-DD). */
    date_of_birth_to?: (string & tags.Format<"date">) | undefined;

    /** Optional inclusive lower bound for created_at (ISO8601 date-time). */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Optional inclusive upper bound for created_at (ISO8601 date-time). */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Filter for soft-deleted records based on deleted_at timestamp. Use
     * null to query active users only.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number (1-based indexing) for paginated patient search results. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Number of records per page (pagination limit). Optional; subject to
     * system constraints.
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;

    /**
     * Field for sorting results (e.g., 'created_at', 'full_name',
     * 'date_of_birth').
     */
    sortBy?: string | undefined;

    /** Sort direction: ascending ('asc') or descending ('desc'). */
    sortDir?: "asc" | "desc" | undefined;
  };

  /**
   * Request body for patient user registration. Must supply all fields
   * required by onboarding policy. On registration, creates a new patient
   * user login and initializes records and notification preferences. Phone is
   * optional and may be required by policy. On success, returns the created
   * IHealthcarePlatformPatient object.
   */
  export type ICreate = {
    /**
     * Patient's unique email address for initial registration and
     * notifications. Business or personal domain permitted as per policy.
     * MUST NOT duplicate existing patient emails in the system.
     */
    email: string & tags.Format<"email">;

    /**
     * Patient's legal full name as declared. Used for patient identity and
     * insurance/legal purposes.
     */
    full_name: string;

    /**
     * Date of birth (ISO 8601 date/time) for patient identification and
     * clinical safety calculations. Example: '1990-02-15T00:00:00Z'.
     */
    date_of_birth: string & tags.Format<"date-time">;

    /**
     * Primary contact number for communication and notification. Must match
     * organization's communication requirements. Optional depending on org
     * business process.
     */
    phone?: string | null | undefined;
  };

  /**
   * Payload for partial or full update of a patient profile. Only supply
   * fields to be updated. All business rules and uniqueness constraints apply
   * to supplied values.
   */
  export type IUpdate = {
    /**
     * Updated patient email address. Must remain unique among all patients.
     * Only included if the patient is changing email.
     */
    email?: (string & tags.Format<"email">) | undefined;

    /**
     * Updated legal full name of the patient, if changed for legal or
     * personal reasons.
     */
    full_name?: string | undefined;

    /**
     * Updated date of birth (ISO 8601). Typically only changed after formal
     * correction procedures.
     */
    date_of_birth?: (string & tags.Format<"date-time">) | undefined;

    /** New or updated contact phone number. */
    phone?: string | null | undefined;
  };

  /**
   * Summary record type for a patient. Excludes PHI/PII sensitive fields;
   * only safe display properties. Used for staff/patient index, dashboard, or
   * quick access list. Timestamps are all UTC ISO 8601.
   */
  export type ISummary = {
    /** Unique Patient user record identifier (UUID). */
    id: string & tags.Format<"uuid">;

    /** Valid business/consumer email for login/contact. */
    email: string & tags.Format<"email">;

    /** Patient's legal full name for display/matching. */
    full_name: string;

    /** Patient date of birth in ISO 8601 format (YYYY-MM-DD, no time zone). */
    date_of_birth: string & tags.Format<"date">;

    /** Optional phone number for contact. May be null if not given. */
    phone?: string | null | undefined;

    /** Patient account created at timestamp (ISO 8601 UTC). */
    created_at: string & tags.Format<"date-time">;

    /** Last profile or record update (ISO 8601 UTC). */
    updated_at: string & tags.Format<"date-time">;
  };
}
