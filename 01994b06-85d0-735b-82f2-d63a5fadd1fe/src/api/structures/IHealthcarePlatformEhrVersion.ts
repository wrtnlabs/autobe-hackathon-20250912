import { tags } from "typia";

/**
 * Snapshot representation of an EHR version for a healthcare encounter.
 *
 * Each EHR version captures point-in-time clinical and administrative data for
 * regulatory audits and system change-tracking. This type reflects the full
 * schema of the healthcare_platform_ehr_versions table (Prisma), with all core
 * version control fields: id, parent encounter linkage, submitting user ID,
 * version number, committed snapshot JSON, rationale for update, and creation
 * timestamp.
 *
 * Intended to support audit, compliance, and rollback workflows, this schema is
 * used in lists, detail, and comparison UI scenarios. Sensitive data is not
 * included hereâ€”actual clinical content should be referenced in an
 * isolated/secured payload location if necessary for compliance.
 *
 * Descriptions for all fields draw from database documentation, ensuring
 * clarity for API implementers and integrators. All rules for English business
 * documentation are followed.
 *
 * Ensure only compliant, documented fields are exposed in this variant; do not
 * add PHI or extended clinical content inline.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformEhrVersion = {
  /** Primary key for the EHR version record (UUID). */
  id: string & tags.Format<"uuid">;

  /** ID of the parent EHR encounter (FK, Prisma). */
  ehr_encounter_id: string & tags.Format<"uuid">;

  /** ID of the medical doctor submitting/committing this version. */
  submitted_by_user_id: string & tags.Format<"uuid">;

  /** Monotonic version number for this encounter. */
  version_number: number & tags.Type<"int32">;

  /**
   * Serialized JSON containing immutable EHR clinical state at this version.
   * Actual PHI/clinical content is stored according to compliance isolation
   * policy.
   */
  snapshot_json: string;

  /**
   * Short text/non-nullable string for the update rationale (correction,
   * regular save, regulatory demand, etc.).
   */
  reason_for_update?: string | null | undefined;

  /** Timestamp when this version snapshot was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IHealthcarePlatformEhrVersion {
  /**
   * Filtering and pagination criteria for listing EHR encounter version
   * records. Used to search for specific version events, review history, or
   * audit amendment events across clinical episodes. See
   * PatientRecords.EhrVersions and API docs.
   */
  export type IRequest = {
    /** Required. EHR encounter to filter version records for. */
    ehr_encounter_id: string & tags.Format<"uuid">;

    /** Optional. Restrict versions to those submitted by this user. */
    submitted_by_user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional. Filter for a specific version number in the sequence. */
    version_number?: number | null | undefined;

    /** Optional. Lower bound (inclusive) for version creation time. */
    created_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional. Upper bound (inclusive) for version creation time. */
    created_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional. Filter by reason for version update (correction, routine,
     * regulatory, etc).
     */
    reason_for_update?: string | null | undefined;

    /** Optional. Result page (for pagination). */
    page?: number | null | undefined;

    /** Optional. Max records per page (pagination control). */
    limit?: number | null | undefined;

    /**
     * Optional. Sorting field for versions (e.g., created_at,
     * version_number).
     */
    sort?: string | null | undefined;

    /** Optional. Sort order direction ('asc','desc'). */
    order?: "asc" | "desc" | null | undefined;
  };
}
