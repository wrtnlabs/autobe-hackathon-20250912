import { tags } from "typia";

/**
 * Room reservation record for resource scheduling, referencing organization,
 * room, timeslot, and reservation type. Serves as the primary reference entity
 * for appointment bookings, admin holds, maintenance blocks, and all room-level
 * resource workflows within a healthcare organization.
 *
 * Each reservation maps to a time window, optionally an appointment, and is
 * subject to organization and resource availability logic. Audit fields enable
 * compliance and operational reporting. Soft delete via deleted_at for
 * compliance retention.
 *
 * Corresponds directly to healthcare_platform_room_reservations table;
 * properties are mapped 1:1 with the schema. All fields must be validated for
 * type and business context.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IHealthcarePlatformRoomReservation = {
  /**
   * Unique identifier for the room reservation record.
   *
   * Primary key in the database, must be UUID. Used for tracking reservation
   * in all scheduling and resource workflows.
   */
  id: string & tags.Format<"uuid">;

  /**
   * UUID of the organization to which the room reservation belongs.
   *
   * References healthcare_platform_organizations and enforces multi-tenant
   * isolation.
   */
  healthcare_platform_organization_id: string & tags.Format<"uuid">;

  /**
   * Room identifier (UUID only; not a FK but used for lookup in resource
   * registry).
   *
   * Required for mapping reservation to a physical space.
   */
  room_id: string & tags.Format<"uuid">;

  /**
   * Reservation start time (ISO 8601 with time zone).
   *
   * Defines when the reserved time block begins. Used for schedule
   * allocation, collision detection, and analytics.
   */
  reservation_start: string & tags.Format<"date-time">;

  /**
   * Reservation end time (ISO 8601 with time zone).
   *
   * Defines when the reserved time block ends. Must be after start time for
   * validation.
   */
  reservation_end: string & tags.Format<"date-time">;

  /**
   * Purpose of the reservation (appointment, admin, cleaning, maintenance,
   * etc).
   *
   * Drives workflow logic and identifies block type in scheduling.
   */
  reservation_type: string;

  /**
   * ID of the appointment associated with this reservation, if applicable.
   *
   * Null if reservation is for admin/maintenance/non-appointment.
   */
  appointment_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Timestamp reservation was created (ISO 8601). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for last record update (ISO 8601). */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp: null if active, set if record is archived or
   * removed from workflow lists.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IHealthcarePlatformRoomReservation {
  /**
   * Allows searching, filtering, or paginating room reservation records as
   * stored in the healthcare_platform_room_reservations table. Supports
   * advanced queries for resource, time periods, reservation type, and
   * organization scope. Use in appointment book and admin/scheduling
   * dashboards for search operations.
   */
  export type IRequest = {
    /** Organization UUID to filter room reservations. */
    healthcare_platform_organization_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /** Room UUID to filter reservations. */
    room_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter for reservations starting on/after this date. */
    reservation_start?: (string & tags.Format<"date-time">) | undefined;

    /** Filter for reservations ending on/before this date. */
    reservation_end?: (string & tags.Format<"date-time">) | undefined;

    /** Reservation type (e.g., appointment, cleaning, maintenance). */
    reservation_type?: string | undefined;

    /** Appointment UUID if filtering for reservations linked to appointment. */
    appointment_id?: (string & tags.Format<"uuid">) | undefined;

    /** Return reservations created on/after this date. */
    created_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Return reservations created on/before this date. */
    created_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Return reservations updated on/after this date. */
    updated_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Return reservations updated on/before this date. */
    updated_at_to?: (string & tags.Format<"date-time">) | undefined;

    /**
     * If present, filter for deleted/archived reservations as of this
     * timestamp.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for result paging (1-based). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Page size for result paging. */
    pageSize?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /**
   * Request payload for creating a new room reservation record in the
   * healthcare_platform_room_reservations table.
   *
   * All fields must conform to business and schema constraints. Assigns the
   * reservation to a specific organization, room, and time window, with
   * optional appointment linkage. Used by admin, scheduling staff, or
   * automated workflows. Validation required for time logic, room assignment,
   * organization context, and block overlap.
   */
  export type ICreate = {
    /** UUID of the organization for this reservation (required). */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /** UUID of the room being reserved. */
    room_id: string & tags.Format<"uuid">;

    /** Reservation start timestamp (ISO 8601, required). */
    reservation_start: string & tags.Format<"date-time">;

    /** Reservation end timestamp (ISO 8601, required). */
    reservation_end: string & tags.Format<"date-time">;

    /**
     * Purpose of reservation (e.g., appointment, admin, cleaning,
     * maintenance, etc). Must comply with organization business rules.
     */
    reservation_type: string;

    /**
     * Linked appointment UUID if applicable; null for admin/non-appointment
     * holds.
     */
    appointment_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Payload for updating allowed, mutable fields of a room reservation
   * entity.
   *
   * Only supports update for specific fields as per business/process logic.
   * Organization and resource assignment usually cannot be modified
   * post-initialization except under exceptional admin intervention. Supports
   * time, link, or category modification for record correction, schedule
   * change, or workflow adjustment.
   *
   * All updates are audit-logged and must respect organizational and resource
   * constraints for compliance.
   */
  export type IUpdate = {
    /** New room UUID to reassign to reservation (if changing resource). */
    room_id?: (string & tags.Format<"uuid">) | undefined;

    /** New start time for reservation (ISO 8601, optional). */
    reservation_start?: (string & tags.Format<"date-time">) | undefined;

    /** New end time for reservation (ISO 8601, optional). */
    reservation_end?: (string & tags.Format<"date-time">) | undefined;

    /** Optional update to reservation purpose or category. */
    reservation_type?: string | undefined;

    /**
     * Optional: change the appointment this reservation is linked to, or
     * remove with null.
     */
    appointment_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Summary data for a room reservation. Used in room utilization dashboards
   * and booking lists.
   */
  export type ISummary = {
    /** Unique identifier for the room reservation record. */
    id: string & tags.Format<"uuid">;

    /** Organization to which this room reservation belongs. */
    healthcare_platform_organization_id: string & tags.Format<"uuid">;

    /** Room resource identifier for the reservation. */
    room_id: string & tags.Format<"uuid">;

    /** Reservation start time (ISO 8601). */
    reservation_start: string & tags.Format<"date-time">;

    /** Reservation end time (ISO 8601). */
    reservation_end: string & tags.Format<"date-time">;

    /** Type of reservation (appointment, admin, cleaning, maintenance, etc). */
    reservation_type: string;

    /**
     * Linked appointment if this is for a patient appointment (nullable for
     * admin blocks).
     */
    appointment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Timestamp when the reservation was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp for last update. */
    updated_at: string & tags.Format<"date-time">;

    /** Soft delete timestamp. Null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
