import { tags } from "typia";

/**
 * Task assignment entity representing a user's assignment to a task.
 *
 * This schema includes IDs for the assignment, task, and assignee user, plus
 * the timestamp of the assignment.
 *
 * It is used to track which user is responsible for a given task in the task
 * management system.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementTaskAssignment = {
  /** Unique identifier of the task assignment. */
  id: string & tags.Format<"uuid">;

  /** Identifier of the related task. */
  task_id: string & tags.Format<"uuid">;

  /** Identifier of the assigned user. */
  assignee_id: string & tags.Format<"uuid">;

  /** Timestamp when the assignment was made. */
  assigned_at: string & tags.Format<"date-time">;
};
export namespace ITaskManagementTaskAssignment {
  /** Creation payload for a task assignment. */
  export type ICreate = {
    /** Task ID to assign */
    task_id: string & tags.Format<"uuid">;

    /** Assignee ID to assign to */
    assignee_id: string & tags.Format<"uuid">;

    /** Timestamp of assignment (optional, usually auto-set by system) */
    assigned_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request body for updating a task assignment.
   *
   * All properties are optional and can be null.
   *
   * Used for PATCH or PUT methods to modify task assignment details.
   */
  export type IUpdate = {
    /** Optional update of the task ID associated with the assignment. */
    task_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional update of the assignee user ID. */
    assignee_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional update of the timestamp when the assignment was made. */
    assigned_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
