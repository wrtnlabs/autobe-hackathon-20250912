import { tags } from "typia";

/**
 * Entity representing possible task statuses such as 'To Do', 'In Progress',
 * and 'Done'. Contains metadata and timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementTaskStatuses = {
  /** Unique identifier of the taskManagementTaskStatus. Primary key. */
  id: string & tags.Format<"uuid">;

  /**
   * Unique code representing the task status, e.g., 'to_do', 'in_progress',
   * 'done'.
   */
  code: string;

  /** Human-readable status name, e.g., 'To Do', 'In Progress', 'Done'. */
  name: string;

  /** Detailed explanation of the status and its significance in the workflow. */
  description?: string | null | undefined;

  /** Timestamp indicating when the status was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp indicating when the status was last modified. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITaskManagementTaskStatuses {
  /**
   * Request schema for filtering and paginating task statuses.
   *
   * Allows clients to filter task statuses by optional code and name, with
   * pagination and sorting. All fields are optional and nullable.
   */
  export type IRequest = {
    /** Optional search filter for the task status code. */
    code?: string | null | undefined;

    /** Optional search filter for the task status name. */
    name?: string | null | undefined;

    /** Optional page number for pagination. */
    page?: number | null | undefined;

    /** Optional number of records per page. */
    limit?: number | null | undefined;

    /** Optional field to specify sorting criteria. */
    orderBy?: string | null | undefined;
  };

  /**
   * Request schema for updating an existing task status record. Allows
   * partial updates to code, name, and description.
   */
  export type IUpdate = {
    /** Code identifier for the task status. */
    code?: string | null | undefined;

    /** Human-readable name for the task status. */
    name?: string | null | undefined;

    /** Optional detailed description for the task status. */
    description?: string | null | undefined;
  };

  /**
   * Simplified summary view of a task status entity representing key
   * properties like the unique code, name, and optional description.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /**
     * Unique code representing the task status, e.g., 'to_do',
     * 'in_progress', 'done'.
     */
    code: string;

    /** Human-readable status name, e.g., 'To Do', 'In Progress', 'Done'. */
    name: string;

    /**
     * Detailed explanation of the status and its significance in the
     * workflow.
     */
    description?: string | null | undefined;
  };
}
