import { tags } from "typia";

/**
 * Notification entity representing user alerts, referenced tasks, types, read
 * status, and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementNotification = {
  /** Unique identifier of the notification record. */
  id: string & tags.Format<"uuid">;

  /** UUID of the user to whom the notification is addressed. */
  user_id: string & tags.Format<"uuid">;

  /** Optional UUID of the task related to this notification. */
  task_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type of notification, e.g., 'assignment', 'status_change', 'comment',
   * 'general'.
   */
  notification_type: string;

  /** Flag indicating if the notification has been read. */
  is_read: boolean;

  /** Timestamp when the notification was read, null if unread. */
  read_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp when the notification was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the notification was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the notification was deleted (soft delete), null if not
   * deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITaskManagementNotification {
  /** Parameters for requesting filtered and paginated notification lists. */
  export type IRequest = {
    /** Page number for pagination, optional. */
    page?: number | null | undefined;

    /** Limit of items per page, optional. */
    limit?: number | null | undefined;

    /** Search string for filtering notifications, optional. */
    search?: string | null | undefined;

    /**
     * Filter notifications by type such as 'assignment', 'status_change',
     * etc., optional.
     */
    notification_type?: string | null | undefined;

    /** Filter notifications by read status (true or false), optional. */
    is_read?: boolean | null | undefined;
  };

  /** Interface to update read status and timestamp of a notification record. */
  export type IUpdate = {
    /** Update flag indicating read status of the notification. */
    is_read?: boolean | undefined;

    /**
     * Timestamp marking when the notification was read, null if clearing
     * the read status.
     */
    read_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary type for Task Management Notification entity.
   *
   * Contains minimal properties needed for notification lists.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   */
  export type ISummary = {
    /**
     * Unique notification identifier (UUID).
     *
     * Primary key for each notification record.
     */
    id: string & tags.Format<"uuid">;

    /**
     * User ID who receives the notification (UUID).
     *
     * Links notification to the target user.
     */
    user_id: string & tags.Format<"uuid">;

    /**
     * Optional related task ID this notification pertains to (UUID or
     * null).
     *
     * May be null for general or system notifications.
     */
    task_id: (string & tags.Format<"uuid">) | null;

    /**
     * Notification type such as 'assignment', 'status_change', 'comment',
     * or 'general'.
     *
     * Supports notification categorization for filtering and display.
     */
    notification_type: string;

    /**
     * Flag indicating if the notification has been read.
     *
     * Determines visual status and read receipts.
     */
    is_read: boolean;

    /**
     * Timestamp when the notification was read (nullable).
     *
     * Null if unread.
     */
    read_at: (string & tags.Format<"date-time">) | null;

    /**
     * Timestamp when the notification was created.
     *
     * Used for sorting and audit.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the notification was last updated.
     *
     * Used for tracking updates.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
