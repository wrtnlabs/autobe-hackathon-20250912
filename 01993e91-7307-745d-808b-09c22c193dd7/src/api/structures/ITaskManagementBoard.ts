import { tags } from "typia";

/**
 * Board entity representing logical groupings of tasks within projects.
 *
 * Boards have unique codes, descriptive names, project associations, owners,
 * and temporal audit fields.
 *
 * They enable task organization and management distinct from projects and
 * support soft deletion.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementBoard = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Associated project reference. {@link task_management_projects.id}. */
  project_id: string & tags.Format<"uuid">;

  /**
   * Board owner user reference. {@link task_management_tpm.id} or equivalent
   * user table.
   */
  owner_id: string & tags.Format<"uuid">;

  /** Unique board code within the project. */
  code: string;

  /** Descriptive name of the board. */
  name: string;

  /** Optional detailed description of the board. */
  description?: string | null | undefined;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update. */
  updated_at: string & tags.Format<"date-time">;

  /** Optional timestamp indicating soft deletion. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITaskManagementBoard {
  /**
   * Request object for searching and paginating TaskManagementBoard entities.
   * Supports filters like name and owner_id, pagination, and sorting
   * options.
   */
  export type IRequest = {
    /** Optional filter by board name. */
    name?: string | null | undefined;

    /** Optional filter by owner_id (UUID string). */
    owner_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional pagination page number. */
    page?: number | null | undefined;

    /** Optional number of items per page. */
    limit?: number | null | undefined;

    /** Optional sort field, e.g., 'name', 'created_at' */
    sortBy?: string | null | undefined;

    /** Optional sort direction: 'asc' or 'desc'. */
    sortDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Request type to create a new TaskManagementBoard entity, requiring
   * project ID, owner ID, unique code, and name, with optional description.
   */
  export type ICreate = {
    /** Project ID this board belongs to. Required for board creation. */
    project_id: string & tags.Format<"uuid">;

    /** Owner ID of the board. Required - references TPM user. */
    owner_id: string & tags.Format<"uuid">;

    /** Unique code for the board within the project. Required. */
    code: string;

    /** Human-readable name of the board. Required. */
    name: string;

    /** Optional detailed description. */
    description?: string | null | undefined;
  };

  /**
   * Update data for an existing board.
   *
   * Allows modification of project association, owner, code, name, and
   * description.
   *
   * All fields are optional for partial updates.
   */
  export type IUpdate = {
    /** Associated project reference. {@link task_management_projects.id}. */
    project_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Board owner user reference. {@link task_management_tpm.id} or
     * equivalent user table.
     */
    owner_id?: (string & tags.Format<"uuid">) | undefined;

    /** Unique board code within the project. */
    code?: string | undefined;

    /** Descriptive name of the board. */
    name?: string | undefined;

    /** Optional detailed description of the board. */
    description?: string | null | undefined;
  };

  /**
   * Summary type for Task Management Board entity.
   *
   * Represents brief overview properties suitable for board lists.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   */
  export type ISummary = {
    /**
     * Unique identifier of the board in UUID format.
     *
     * Primary key reference for the board.
     */
    id: string & tags.Format<"uuid">;

    /**
     * The project ID this board belongs to, in UUID format.
     *
     * Relations between boards and projects allow hierarchical
     * organization.
     */
    project_id: string & tags.Format<"uuid">;

    /**
     * Unique code for the board within the project.
     *
     * Supports business distinction of boards in project context.
     */
    code: string;

    /**
     * Board name.
     *
     * Human-readable title for display and management.
     */
    name: string;

    /**
     * Board creation timestamp.
     *
     * Used for auditing and temporal queries.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Board last update timestamp.
     *
     * Reflects last modification date.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
