import { tags } from "typia";

/**
 * Represents a comment made on a task by a developer user.
 *
 * Includes content, author reference, timestamps, and soft delete information.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementTaskComment = {
  /**
   * Primary key identifier for the task comment.
   *
   * Unique UUID string identifying the comment within the system.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of the task this comment belongs to.
   *
   * This GUID links the comment to a specific task entity.
   */
  task_id: string & tags.Format<"uuid">;

  /**
   * Identifier of the user who made the comment.
   *
   * References a developer user identifier.
   */
  commenter_id: string & tags.Format<"uuid">;

  /**
   * Body text content of the comment.
   *
   * Contains the detailed message or note added to the task.
   */
  comment_body: string;

  /**
   * Timestamp marking when the comment was created.
   *
   * ISO 8601 date-time string representing creation time.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp marking the last update of the comment.
   *
   * ISO 8601 date-time string representing the last modification time.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Optional soft delete timestamp indicating if the comment was deleted.
   *
   * Null if active, else ISO 8601 date-time string when deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITaskManagementTaskComment {
  /**
   * Request body schema for creating a new comment on a task.
   *
   * Contains the task ID, commenter ID, and the comment content.
   *
   * All properties are required.
   */
  export type ICreate = {
    /** ID of the task the comment is associated with. */
    task_id: string & tags.Format<"uuid">;

    /** ID of the commenter making the comment. */
    commenter_id: string & tags.Format<"uuid">;

    /** Content body of the comment. */
    comment_body: string;
  };

  /**
   * Request body schema for filtering and paginating task comments.
   *
   * Supports optional filters such as task ID, commenter ID, partial comment
   * text, and creation/update date ranges.
   *
   * Also includes pagination properties page and limit for controlling result
   * size.
   */
  export type IRequest = {
    /** Page number for paginated results. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Maximum number of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter comments by task UUID. */
    task_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter comments by commenter UUID. */
    commenter_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter comments by partial or full comment text. */
    comment_body?: string | null | undefined;

    /** Filter comments created after this timestamp. */
    created_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter comments created before this timestamp. */
    created_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter comments updated after this timestamp. */
    updated_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter comments updated before this timestamp. */
    updated_at_to?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request body schema for updating a task comment.
   *
   * Allows partial updates of comment content, update timestamp, and soft
   * deletion.
   */
  export type IUpdate = {
    /**
     * Optional updated comment content body.
     *
     * May be omitted if no change in content.
     */
    comment_body?: string | null | undefined;

    /**
     * Optional update timestamp.
     *
     * If provided, ISO 8601 date-time string representing update time.
     */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional soft delete timestamp.
     *
     * Set to ISO 8601 date-time string to soft-delete; null for active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of task comment including id, comment content, and creation
   * timestamp.
   */
  export type ISummary = {
    /** Unique identifier of the task comment */
    id: string & tags.Format<"uuid">;

    /** Content of the comment */
    comment_body: string;

    /** Timestamp when the comment was created */
    created_at: string & tags.Format<"date-time">;
  };
}
