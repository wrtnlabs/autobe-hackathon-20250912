import { tags } from "typia";

/**
 * Primary table representing the core tasks in the system, including title,
 * description, status, priority, due date, creator info, and timestamps. Tasks
 * have independent lifecycle management and relate to statuses, priorities,
 * projects, and boards via foreign keys. Supports soft delete and audit
 * fields.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITaskManagementTask = {
  /** Unique identifier for the task */
  id: string & tags.Format<"uuid">;

  /** Status ID referencing the task status */
  status_id: string & tags.Format<"uuid">;

  /** Priority ID referencing the task priority */
  priority_id: string & tags.Format<"uuid">;

  /** Creator ID of the task */
  creator_id: string & tags.Format<"uuid">;

  /** Project ID this task belongs to (optional) */
  project_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Board ID this task belongs to (optional) */
  board_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Task title (non-empty string) */
  title: string;

  /** Task description (optional) */
  description?: string | null | undefined;

  /** Status name (denormalized, optional) */
  status_name?: string | null | undefined;

  /** Priority name (denormalized, optional) */
  priority_name?: string | null | undefined;

  /** Due date and time (optional) */
  due_date?: (string & tags.Format<"date-time">) | null | undefined;

  /** Creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp (optional) */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** User ID who deleted the record */
  deletedBy?: (string & tags.Format<"uuid">) | null | undefined;
};
export namespace ITaskManagementTask {
  /**
   * Creation payload for a new task.
   *
   * This includes required references to status, priority, and creator as
   * well as mandatory title.
   *
   * Optional descriptive and relational fields are included.
   *
   * Values must comply with schema relationships and data formats.
   */
  export type ICreate = {
    /** UUID reference to the status of the task. */
    status_id: string & tags.Format<"uuid">;

    /** UUID reference to the priority of the task. */
    priority_id: string & tags.Format<"uuid">;

    /** UUID of the user who created the task. */
    creator_id: string & tags.Format<"uuid">;

    /** Optional UUID reference to the project the task belongs to. */
    project_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional UUID reference to the board the task belongs to. */
    board_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Title of the task, must be a non-empty string. */
    title: string & tags.MinLength<1>;

    /** Optional description of the task. */
    description?: string | null | undefined;

    /** Optional name representing the task status. */
    status_name?: string | null | undefined;

    /** Optional name representing the task priority. */
    priority_name?: string | null | undefined;

    /** Optional due date of the task in ISO 8601 date-time format. */
    due_date?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Update payload for Task entity. */
  export type IUpdate = {
    /** Status ID referencing a valid task status */
    status_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Priority ID referencing task priority */
    priority_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Project ID this task belongs to (optional) */
    project_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Board ID this task belongs to (optional) */
    board_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Task title */
    title?: string | undefined;

    /** Task description */
    description?: string | null | undefined;

    /** Due date (optional, ISO 8601 date-time string) */
    due_date?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
