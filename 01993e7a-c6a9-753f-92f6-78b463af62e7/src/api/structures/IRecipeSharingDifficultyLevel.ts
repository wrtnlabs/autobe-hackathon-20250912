import { tags } from "typia";

/**
 * Difficulty Level entity representing classification of recipe complexity.
 *
 * This entity categorizes recipes by user skill level required, from beginner
 * to advanced. It facilitates filtering and guidance in meal planning and
 * recipe selection.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRecipeSharingDifficultyLevel = {
  /** Unique identifier of the difficulty level. */
  id: string & tags.Format<"uuid">;

  /** Unique difficulty level code used internally. */
  code: string;

  /** Descriptive name of the difficulty level. */
  name: string;

  /** Optional detailed description explaining the difficulty. */
  description?: string | null | undefined;

  /** Timestamp when the difficulty level entry was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the difficulty level entry was last updated. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IRecipeSharingDifficultyLevel {
  /**
   * Request interface for filtered and paginated listing of difficulty levels
   * supporting optional search, pagination, and sorting.
   */
  export type IRequest = {
    /** Optional search string to filter difficulty levels. */
    search?: string | null | undefined;

    /** Page number (zero-based) for pagination. */
    page?: number | null | undefined;

    /** Number of records per page for pagination. */
    limit?: number | null | undefined;

    /** Sort field for ordering results. */
    sort?: "name" | "created_at" | "code" | null | undefined;

    /** Sort order direction. */
    sortOrder?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary type for listing difficulty levels including core identification
   * and display properties.
   */
  export type ISummary = {
    /** Unique identifier of the difficulty level summary. */
    id: string & tags.Format<"uuid">;

    /** Unique code representing the difficulty level. */
    code: string;

    /** Human-readable name of the difficulty level. */
    name: string;

    /**
     * Optional description providing additional information about the
     * difficulty level summary.
     */
    description?: string | null | undefined;
  };

  /**
   * Creation type for new difficulty levels requiring code and name with
   * optional description.
   */
  export type ICreate = {
    /** Unique code identifier for creating the difficulty level. */
    code: string;

    /** Name of the difficulty level for creation. */
    name: string;

    /** Optional detailed description for creation. */
    description?: string | null | undefined;
  };

  /**
   * Update type for existing difficulty levels allowing partial
   * modifications.
   */
  export type IUpdate = {
    /** Optional unique code identifier for update. */
    code?: string | null | undefined;

    /** Optional name for update. */
    name?: string | null | undefined;

    /** Optional detailed description for update. */
    description?: string | null | undefined;
  };
}
