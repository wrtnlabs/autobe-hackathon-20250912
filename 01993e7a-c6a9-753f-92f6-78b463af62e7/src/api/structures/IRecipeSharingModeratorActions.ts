import { tags } from "typia";

/**
 * Audit trail logging all moderation actions taken on flagged reviews,
 * including hides, unhides, moderator identity, timestamp, and comments.
 * Essential for compliance and transparency.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRecipeSharingModeratorActions = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Identifier of moderator performing the action.
   * {@link recipe_sharing_moderators.id}
   */
  moderator_id: string & tags.Format<"uuid">;

  /**
   * The moderation action type such as hide_review, unhide_review,
   * approve_category, reject_category.
   */
  action_type: string;

  /**
   * ID of the entity affected by the moderator action (review, category
   * approval, etc.).
   */
  target_id: string & tags.Format<"uuid">;

  /** Timestamp when the moderation action was logged. */
  action_timestamp: string & tags.Format<"date-time">;

  /** Optional comment explaining the moderation decision. */
  comments?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion time if the record is removed. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IRecipeSharingModeratorActions {
  /**
   * Audit records of moderator operations on flagged content and category
   * approvals. Each action records moderator identity, action type, target
   * entity, timestamp, and optional comments to maintain accountability and
   * history.
   */
  export type ICreate = {
    /**
     * Identifier of moderator performing the action.
     * {@link recipe_sharing_moderators.id}
     */
    moderator_id: string & tags.Format<"uuid">;

    /**
     * The moderation action type such as hide_review, unhide_review,
     * approve_category, reject_category.
     */
    action_type: string;

    /**
     * ID of the entity affected by the moderator action (review, category
     * approval, etc.).
     */
    target_id: string & tags.Format<"uuid">;

    /** Timestamp when the moderation action was logged. */
    action_timestamp: string & tags.Format<"date-time">;

    /** Optional comment explaining the moderation decision. */
    comments?: string | null | undefined;

    /** Record creation timestamp. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Record update timestamp. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft deletion time if the record is removed. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Update a moderator action by its ID.
   *
   * Allows modification of action details and comments while preserving audit
   * compliance.
   *
   * Only authorized moderators can perform updates.
   *
   * The system manages timestamps for creation and updates.
   *
   * The response provides the updated moderator action object.
   *
   * Errors occur if the ID is invalid or update data fails validation.
   */
  export type IUpdate = {
    /**
     * Identifier of moderator performing the action.
     * {@link recipe_sharing_moderators.id}
     */
    moderator_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * The moderation action type such as hide_review, unhide_review,
     * approve_category, reject_category.
     */
    action_type?: string | undefined;

    /**
     * ID of the entity affected by the moderator action (review, category
     * approval, etc.)
     */
    target_id?: (string & tags.Format<"uuid">) | undefined;

    /** Timestamp when the moderation action was logged. */
    action_timestamp?: (string & tags.Format<"date-time">) | undefined;

    /** Optional comment explaining the moderation decision. */
    comments?: string | null | undefined;

    /** Record creation timestamp. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Record update timestamp. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft deletion time if the record is removed. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
