import { tags } from "typia";

/**
 * Detailed shopping list entity representing a user's shopping list including
 * ownership, timestamps, and soft deletion status.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IRecipeSharingShoppingList = {
  /** Primary key UUID for the shopping list record. */
  id: string & tags.Format<"uuid">;

  /** Owner user ID. Links to the user who owns this shopping list. */
  user_id: string & tags.Format<"uuid">;

  /**
   * User-defined name for the shopping list.
   *
   * This should clearly identify the shopping list for the user.
   */
  name: string;

  /** Timestamp of when this shopping list was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to this shopping list. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp. If null, the shopping list is active. */
  deleted_at: (string & tags.Format<"date-time">) | null;
};
export namespace IRecipeSharingShoppingList {
  /**
   * Request parameters object for filtering and retrieving shopping lists.
   * Includes optional filtering, pagination, and sorting.
   */
  export type IRequest = {
    /** User ID to filter shopping lists by owner. Optional filter, nullable. */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Name filter for shopping lists. Partial matching allowed. Optional,
     * nullable.
     */
    name?: string | undefined;

    /** Current page number for pagination. Optional, nullable. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records per page for pagination. Optional, nullable. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort criteria, e.g., "name", "created_at". Optional, nullable. */
    sort?: string | undefined;
  };

  /**
   * Request body for creating a new shopping list entry.
   *
   * Requires user_id and name properties.
   */
  export type ICreate = {
    /** Owner user ID. Required. Must be a UUID formatted string. */
    user_id: string & tags.Format<"uuid">;

    /** Name of the shopping list. Required. */
    name: string;
  };

  /**
   * Request body for updating an existing shopping list.
   *
   * All properties optional for partial update.
   */
  export type IUpdate = {
    /** Shopping list name. Optional, nullable. */
    name?: string | undefined;

    /**
     * Soft deletion timestamp. Nullable.
     *
     * Setting value to a date marks the list as deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary type containing minimal fields used in lists. */
  export type ISummary = {
    /** Unique identifier of the shopping list. */
    id: string & tags.Format<"uuid">;

    /** Name of the shopping list. */
    name: string;
  };
}
