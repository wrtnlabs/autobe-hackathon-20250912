import { tags } from "typia";

/**
 * This table records enrollment information for learners in courses and
 * programs within the LMS. It links learners to learning paths or courses,
 * enforcing prerequisite validations and status tracking. Includes soft
 * deletion support, creation, and update timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsEnrollment = {
  /** Primary Key. UUID string identifying the enrollment */
  id: string & tags.Format<"uuid">;

  /** Belonged learner's UUID */
  learner_id: string & tags.Format<"uuid">;

  /** Belonged learning path's UUID */
  learning_path_id: string & tags.Format<"uuid">;

  /** Current enrollment status such as 'active', 'completed', 'cancelled' */
  status: string;

  /** Optional business workflow state */
  business_status?: string | null | undefined;

  /** Record creation timestamp ISO 8601 string */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp ISO 8601 string */
  updated_at: string & tags.Format<"date-time">;

  /** Optional soft delete timestamp */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsEnrollment {
  /**
   * Retrieves a filtered, sorted, and paginated list of learner enrollments
   * for learning paths.
   *
   * The operation accepts extensive search criteria in the request body such
   * as learner identification, learning path filters, enrollment status, date
   * range filtering, and paging options.
   *
   * Security controls ensure that returned data is scoped to the requesting
   * user's permissions, preventing exposure of enrollments from other
   * tenants.
   *
   * The response includes a paginated list of enrollments summarized with
   * essential properties for display in management UIs or reporting tools.
   *
   * This API supports efficient querying of enrollment data to facilitate
   * administrative actions and learner progress monitoring.
   */
  export type IRequest = {
    /** Optional search term for filtering enrollments */
    search?: string | null | undefined;

    /** Optional status filter for enrollment status */
    status?: string | null | undefined;

    /** Optional business status filter */
    business_status?: string | null | undefined;

    /** Page number (uint32) */
    page?: (number & tags.Minimum<0>) | null | undefined;

    /** Limit of records per page (uint32) */
    limit?: (number & tags.Minimum<0>) | null | undefined;

    /** Sort order key, e.g., 'created_at', 'updated_at' */
    orderBy?: string | null | undefined;

    /** Sort direction: 'asc' or 'desc' */
    orderDirection?: "asc" | "desc" | null | undefined;

    /** Optionally filter by learner ID UUID */
    learner_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optionally filter by learning path ID UUID */
    learning_path_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Create a new enrollment record for a learner into a learning path within
   * the enterprise LMS. Accepts learner ID, learning path ID, status, and
   * optional business status for lifecycle control.
   */
  export type ICreate = {
    /** Required learner UUID */
    learner_id: string & tags.Format<"uuid">;

    /** Required learning path UUID */
    learning_path_id: string & tags.Format<"uuid">;

    /** Current enrollment status */
    status: string;

    /** Optional business status */
    business_status?: string | null | undefined;
  };

  /**
   * This schema defines the update payload for modifying an existing
   * Enrollment record within the Enterprise LMS. Properties are optional,
   * allowing partial updates. It excludes creating or mandatory identity
   * fields, which are managed internally or via authentication context.
   *
   * All date-time fields must conform to ISO 8601 standard.
   *
   * Business logic on statuses and enrollment state transitions should be
   * enforced server-side.
   */
  export type IUpdate = {
    /**
     * The ID of the learner associated with this enrollment. Must
     * correspond to an existing learner UUID in the system.
     */
    learner_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * The ID of the learning path this enrollment belongs to. Must
     * correspond to an existing learning path UUID.
     */
    learning_path_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Specifies the current enrollment status such as 'active',
     * 'completed', or 'cancelled'. This controls the learner's progression
     * state.
     */
    status?: string | undefined;

    /**
     * Optional business workflow state indicating special conditions or
     * approvals related to this enrollment.
     */
    business_status?: string | null | undefined;

    /** Record creation timestamp in ISO 8601 format. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp of the last update to this record in ISO 8601 format. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional soft delete timestamp indicating when the record was
     * logically deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of an enrollment record.
   *
   * Includes primary keys and status fields relevant to the enrollment's
   * lifecycle.
   *
   * Provides identifiers for learner and learning path association.
   */
  export type ISummary = {
    /** Unique identifier of the enrollment */
    id: string & tags.Format<"uuid">;

    /** Belonged learner's unique identifier */
    learner_id: string & tags.Format<"uuid">;

    /** Belonged learning path unique identifier */
    learning_path_id: string & tags.Format<"uuid">;

    /** Current enrollment status such as 'active', 'completed', 'cancelled' */
    status: string;

    /** Business workflow state for enrollment approvals or special states */
    business_status?: string | null | undefined;
  };
}
