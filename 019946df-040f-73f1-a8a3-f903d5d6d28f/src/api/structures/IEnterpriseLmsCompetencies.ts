import { tags } from "typia";

/**
 * Competency entity representing skill sets or capabilities within tenant
 * organizations.
 *
 * Includes unique code, name, description, timestamps, and soft deletion
 * status.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsCompetencies = {
  /**
   * Unique identifier for a competency.
   *
   * This is a UUID string uniquely identifying the competency entity.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Tenant organization this competency belongs to.
   *
   * Foreign key UUID reference to tenant, enforcing multi-tenancy.
   */
  tenant_id: string & tags.Format<"uuid">;

  /**
   * Unique code representing the competency.
   *
   * This code uniquely identifies competency within a tenant scope.
   */
  code: string;

  /**
   * Name of the competency skill or capability.
   *
   * This is the display name indicative of the competency.
   */
  name: string;

  /**
   * Detailed explanation of the competency.
   *
   * Optional descriptive text providing further details.
   */
  description?: string | null | undefined;

  /**
   * Timestamp representing when competency was created.
   *
   * ISO 8601 formatted date-time string (UTC).
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp representing last update time.
   *
   * ISO 8601 formatted date-time string (UTC).
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp representing soft-deletion time.
   *
   * Nullable column, ISO 8601 date-time string or null if not deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsCompetencies {
  /**
   * Create data required to instantiate a new competency entity.
   *
   * Includes required tenant reference, unique code, and name, with optional
   * description.
   */
  export type ICreate = {
    /**
     * Tenant organization this competency belongs to. Must be a UUID
     * string.
     */
    tenant_id: string & tags.Format<"uuid">;

    /** Unique code representing the competency. */
    code: string;

    /** Name of the competency skill or capability. */
    name: string;

    /** Optional descriptive explanation. Nullable and optional. */
    description?: string | null | undefined;
  };

  /**
   * Update payload for modifying a competency entity.
   *
   * All fields are optional including soft delete timestamp to mark logical
   * deletion or undo it.
   */
  export type IUpdate = {
    /**
     * Tenant organization this competency belongs to. Optional UUID string.
     *
     * While tenant_id is usually immutable, this field is optional for
     * updates.
     */
    tenant_id?: (string & tags.Format<"uuid">) | undefined;

    /** Unique code representing the competency. Optional on update. */
    code?: string | undefined;

    /** Name of the competency skill or capability. Optional. */
    name?: string | undefined;

    /** Optional descriptive explanation. Nullable. */
    description?: string | null | undefined;

    /**
     * Soft deletion timestamp. Nullable. Allows marking for soft-delete or
     * clear.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
