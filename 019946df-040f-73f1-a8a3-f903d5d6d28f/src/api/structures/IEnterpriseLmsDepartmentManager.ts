import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Department Manager users who manage users, content assignments, and budgets
 * within their department. Tenant-aware with departmental scope.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsDepartmentManager = {
  /** Primary key UUID. */
  id: string & tags.Format<"uuid">;

  /** Tenant identifier. */
  tenant_id: string & tags.Format<"uuid">;

  /** Unique email. */
  email: string;

  /** Password hash. */
  password_hash: string;

  /** First name. */
  first_name: string;

  /** Last name. */
  last_name: string;

  /** Account status. */
  status: string;

  /** Created timestamp as ISO date-time string. */
  created_at: string & tags.Format<"date-time">;

  /** Updated timestamp as ISO date-time string. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Optional deleted timestamp.
   *
   * Nullable ISO date-time string.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsDepartmentManager {
  /**
   * Request body for creating a new department manager account providing
   * email, plaintext password, and personal names.
   */
  export type ICreate = {
    /** Unique email address for login and communications. */
    email: string;

    /** Plaintext password for authentication. */
    password: string;

    /** First name of the department manager. */
    first_name: string;

    /** Last name of the department manager. */
    last_name: string;
  };

  /**
   * Request body for department manager login authentication including email
   * and password.
   */
  export type ILogin = {
    /** Email address for authentication. */
    email: string;

    /** Plaintext password for authentication. */
    password: string;
  };

  /**
   * Request body to refresh JWT authentication tokens for department manager
   * role.
   */
  export type IRefresh = {
    /** JWT refresh token string for session renewal. */
    refresh_token: string;
  };

  /**
   * Authorization response containing the authenticated department manager's
   * ID and JWT authentication token.
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated department manager. */
    id: string & tags.Format<"uuid">;

    /** Tenant identifier. */
    tenant_id: string & tags.Format<"uuid">;

    /** Unique email. */
    email: string;

    /** Password hash. */
    password_hash: string;

    /** First name. */
    first_name: string;

    /** Last name. */
    last_name: string;

    /** Account status. */
    status: string;

    /** Created timestamp as ISO date-time string. */
    created_at: string & tags.Format<"date-time">;

    /** Updated timestamp as ISO date-time string. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Optional deleted timestamp.
     *
     * Nullable ISO date-time string.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Page request parameters for Department Manager entity.
   *
   * Supports pagination, filtering by search or status, and sorting order.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * Optional unsigned 32-bit integer.
     */
    page?: number | null | undefined;

    /**
     * Records limit per page.
     *
     * Default is 100.
     */
    limit?: number | null | undefined;

    /** Search keyword. */
    search?: string | null | undefined;

    /**
     * Sorting order.
     *
     * E.g. 'asc', 'desc'
     */
    order?: string | null | undefined;

    /**
     * Status filter.
     *
     * Optional status string to filter results.
     */
    status?: string | null | undefined;
  };

  /**
   * Update request data for Department Manager user.
   *
   * All fields are optional and can be used to update user information
   * cautiously. This data structure is suitable for PATCH or PUT operations
   * for partial/full updates.
   */
  export type IUpdate = {
    /** Email address. */
    email?: string | undefined;

    /** Hashed password. */
    password_hash?: string | undefined;

    /** First name. */
    first_name?: string | undefined;

    /** Last name. */
    last_name?: string | undefined;

    /** Account status. */
    status?: string | undefined;

    /** Soft deleted timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary of a department manager user entity within the Enterprise LMS.
   *
   * This summary contains key fields such as ID, tenant association, contact
   * details, status, and creation timestamp.
   *
   * Primarily used for listing and querying department manager users
   * efficiently.
   *
   * The structure supports tenant separation and role-based data access
   * controls.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique identifier of the department manager user.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Tenant organization identifier.
     *
     * Links this manager to the correct tenant organization.
     */
    tenant_id: string & tags.Format<"uuid">;

    /**
     * Unique email address for login and communications.
     *
     * Serves as the username and contact point.
     */
    email: string;

    /**
     * First name of the department manager.
     *
     * Used for interface display and official communication.
     */
    first_name: string;

    /**
     * Last name of the department manager.
     *
     * Recorded for identity verification and contact.
     */
    last_name: string;

    /**
     * Current status of the department manager account (e.g., active,
     * suspended).
     *
     * Denotes operational status.
     */
    status: string;

    /**
     * Record creation timestamp.
     *
     * Timestamp when the department manager account was created.
     */
    created_at: string & tags.Format<"date-time">;
  };
}
