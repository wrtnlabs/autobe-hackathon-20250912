import { tags } from "typia";

/**
 * Historical snapshot representing a specific version of content for audit,
 * rollback, or compliance tracking.
 *
 * Each version provides details about the state of the content at a certain
 * point in time, preserving historical information for traceability.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsContentVersion = {
  /** Unique identifier of the content version snapshot. */
  id: string & tags.Format<"uuid">;

  /** UUID of the parent content that this version relates to. */
  content_id: string & tags.Format<"uuid">;

  /** Sequential version number indicating the order of this snapshot. */
  version_number: number & tags.Type<"int32">;

  /**
   * Title of the content version snapshot, reflecting the historical title at
   * the time of versioning.
   */
  title: string;

  /**
   * Optional description matching the content version state for historical
   * reference.
   */
  description?: string | null | undefined;

  /** Content type format at snapshot, same as the main content type. */
  content_type: string;

  /**
   * Approval workflow status at the time of this version, such as draft,
   * approved, or rejected.
   */
  status: string;

  /** Business lifecycle status at the snapshot time, e.g., active, archived. */
  business_status: string;

  /** Timestamp when this version snapshot was recorded and stored. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IEnterpriseLmsContentVersion {
  /**
   * Request body for querying paginated content versions with search and
   * sorting capabilities. Includes typical pagination controls.
   */
  export type IRequest = {
    /**
     * Optional search keyword to filter content versions by title or
     * description.
     */
    search?: string | null | undefined;

    /** Page number for paginated query results starting from 1. */
    page?: number | null | undefined;

    /**
     * Maximum number of records to return per page for limiting payload
     * size and response times.
     */
    limit?: number | null | undefined;

    /**
     * Sorting order of results increasing or decreasing by a specified
     * property.
     */
    sort?: string | null | undefined;
  };

  /** Summary information for a content version snapshot. */
  export type ISummary = {
    /** Version unique identifier (UUID). */
    id: string & tags.Format<"uuid">;

    /**
     * Reference to the related content entity.
     *
     * UUID format.
     */
    content_id: string & tags.Format<"uuid">;

    /** Sequential version number of this snapshot. */
    version_number: number & tags.Type<"int32">;

    /** Content title snapshot at version creation. */
    title: string;

    /** Content type snapshot, e.g., video, document, SCORM, xAPI. */
    content_type: string;

    /** Approval status snapshot at version time. */
    status: string;

    /** Business lifecycle status snapshot at version time. */
    business_status: string;

    /** Version creation timestamp in ISO 8601 format. */
    created_at: string & tags.Format<"date-time">;
  };
}
