import { tags } from "typia";

/**
 * Progress tracking record capturing detailed interaction metrics for a
 * learner's engagement with specific content, including time spent, assessment
 * attempts, and engagement score.
 *
 * This entity supports auditing, learner analytics, and progress monitoring.
 *
 * Soft deletion is supported through the nullable deleted_at property.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsProgressTracking = {
  /** Unique identifier of the progress tracking record */
  id: string & tags.Format<"uuid">;

  /** Identifier of the learner associated with this progress tracking record */
  learner_id: string & tags.Format<"uuid">;

  /** Identifier of the content item associated with this progress tracking */
  content_id: string & tags.Format<"uuid">;

  /** Total time spent on the content in seconds */
  time_spent_seconds: number & tags.Type<"int32">;

  /** Number of assessment attempts made */
  assessment_attempts: number & tags.Type<"int32">;

  /** Engagement level metric */
  engagement_score: number;

  /** Record creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsProgressTracking {
  /**
   * Create model for learner progress tracking.
   *
   * Contains essential metrics for content engagement and assessment
   * attempts.
   *
   * All fields are required to create a new record.
   */
  export type ICreate = {
    /** Identifier of the learner who this progress tracking belongs to. */
    learner_id: string & tags.Format<"uuid">;

    /** Identifier of the content item tracked for progress. */
    content_id: string & tags.Format<"uuid">;

    /** Total time spent on content in seconds. */
    time_spent_seconds: number & tags.Type<"int32">;

    /** Number of assessment attempts made. */
    assessment_attempts: number & tags.Type<"int32">;

    /** Engagement level metric. */
    engagement_score: number;
  };

  /**
   * Request model for querying learner progress tracking entries.
   *
   * Includes pagination and optional filters for learner and content IDs.
   */
  export type IRequest = {
    /** Page number for pagination */
    page?: number | null | undefined;

    /** Limit of records per page */
    limit?: number | null | undefined;

    /** Filter results by learner ID */
    learner_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter results by content ID */
    content_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Request type for updating progress tracking metrics with required fields.
   *
   * Allows modification of metrics such as time spent, attempts, and
   * engagement.
   */
  export type IUpdate = {
    /** Total time spent on the content in seconds */
    time_spent_seconds: number & tags.Type<"int32">;

    /** Number of assessment attempts made */
    assessment_attempts: number & tags.Type<"int32">;

    /** Engagement level metric */
    engagement_score: number;
  };

  /** Summary of progress tracking information including time and engagement. */
  export type ISummary = {
    /** Unique identifier of the progress tracking record. */
    id: string;

    /** Identifier of the learner related to this record. */
    learner_id: string;

    /** Identifier of the content related to this record. */
    content_id: string;

    /** Total time spent on the content in seconds. */
    time_spent_seconds: number & tags.Type<"int32">;

    /** Number of assessment attempts. */
    assessment_attempts: number & tags.Type<"int32">;

    /** Engagement score metric. */
    engagement_score: number;

    /** Creation timestamp of the record. */
    created_at: string & tags.Format<"date-time">;

    /** Last updated timestamp of the record. */
    updated_at: string & tags.Format<"date-time">;

    /** Optional soft delete timestamp if applicable. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
