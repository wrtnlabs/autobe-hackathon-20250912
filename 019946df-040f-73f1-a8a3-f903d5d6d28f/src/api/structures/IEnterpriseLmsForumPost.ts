import { tags } from "typia";

/**
 * Forum post entity representing individual posts inside forum threads.
 *
 * Each post includes body, author info, timestamps, and supports soft deletion
 * for audit and compliance.
 *
 * Forum thread association ensures posts are linked to valid discussion
 * threads.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEnterpriseLmsForumPost = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Forum thread containing this post. */
  thread_id: string & tags.Format<"uuid">;

  /** User who authored the post (corporate learner or instructor). */
  author_id: string & tags.Format<"uuid">;

  /** Content body of the post. */
  body: string;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEnterpriseLmsForumPost {
  /** Request object for filtered paginated list of forum posts. */
  export type IRequest = {
    /** Forum thread containing this post. */
    thread_id?: (string & tags.Format<"uuid">) | undefined;

    /** User who authored the post (corporate learner or instructor). */
    author_id?: (string & tags.Format<"uuid">) | undefined;

    /** Content body of the post. */
    body?: string | undefined;

    /** Creation timestamp. */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Last update timestamp. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Soft delete timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Current page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Sorting rule for the list. */
    sort?: string | null | undefined;
  };

  /**
   * Payload to create a new forum post within a forum thread.
   *
   * Includes thread linkage, author, and post content.
   *
   * No timestamps or IDs are submitted; they are generated by the system.
   */
  export type ICreate = {
    /** Forum thread containing this post. */
    thread_id: string & tags.Format<"uuid">;

    /** User who authored the post (corporate learner or instructor). */
    author_id: string & tags.Format<"uuid">;

    /** Content body of the post. */
    body: string;
  };

  /**
   * Payload for updating an existing forum post.
   *
   * Fields are optional to support partial update semantics.
   *
   * Includes thread and author references, post content, and delete flag.
   */
  export type IUpdate = {
    /** Forum thread containing this post. */
    thread_id?: (string & tags.Format<"uuid">) | undefined;

    /** User who authored the post (corporate learner or instructor). */
    author_id?: (string & tags.Format<"uuid">) | undefined;

    /** Content body of the post. */
    body?: string | undefined;

    /** Soft delete timestamp. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
