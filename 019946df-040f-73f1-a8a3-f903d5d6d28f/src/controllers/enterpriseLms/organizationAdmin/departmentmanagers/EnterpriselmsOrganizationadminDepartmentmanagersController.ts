import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { patchenterpriseLmsOrganizationAdminDepartmentmanagers } from "../../../../providers/patchenterpriseLmsOrganizationAdminDepartmentmanagers";
import { OrganizationadminAuth } from "../../../../decorators/OrganizationadminAuth";
import { OrganizationadminPayload } from "../../../../decorators/payload/OrganizationadminPayload";

import { IPageIEnterpriseLmsDepartmentmanager } from "../../../../api/structures/IPageIEnterpriseLmsDepartmentmanager";
import { IEnterpriseLmsDepartmentManager } from "../../../../api/structures/IEnterpriseLmsDepartmentManager";

@Controller("/enterpriseLms/organizationAdmin/departmentmanagers")
export class EnterpriselmsOrganizationadminDepartmentmanagersController {
  /**
   * Search and list department managers with filtering and pagination.
   *
   * Retrieve a filtered and paginated list of department managers within the
   * system.
   *
   * Department managers are users who manage users, content assignments, and
   * budgets within their specific department and tenant organization.
   *
   * This operation supports searching by multiple fields, filtering by status,
   * sorting, and pagination.
   *
   * Security restrictions ensure only authorized users with appropriate roles
   * can access this list.
   *
   * Response includes summary information of department managers for display in
   * administrative user interfaces.
   *
   * This operation requires tenant context to ensure multi-tenant data
   * isolation and proper data segregation.
   *
   * Errors may occur if tenant context is invalid or parameters are malformed.
   *
   * @param connection
   * @param body Search and pagination criteria for filtering department
   *   managers
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @OrganizationadminAuth()
    organizationAdmin: OrganizationadminPayload,
    @TypedBody()
    body: IEnterpriseLmsDepartmentManager.IRequest,
  ): Promise<IPageIEnterpriseLmsDepartmentmanager.ISummary> {
    try {
      return await patchenterpriseLmsOrganizationAdminDepartmentmanagers({
        organizationAdmin,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
