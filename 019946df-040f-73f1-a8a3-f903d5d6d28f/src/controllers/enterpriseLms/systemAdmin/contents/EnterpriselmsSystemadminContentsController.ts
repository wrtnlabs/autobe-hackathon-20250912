import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";
import { deleteenterpriseLmsSystemAdminContentsId } from "../../../../providers/deleteenterpriseLmsSystemAdminContentsId";
import { SystemadminAuth } from "../../../../decorators/SystemadminAuth";
import { SystemadminPayload } from "../../../../decorators/payload/SystemadminPayload";

@Controller("/enterpriseLms/systemAdmin/contents/:id")
export class EnterpriselmsSystemadminContentsController {
  /**
   * Delete a specific content record by its ID.
   *
   * Permanently deletes a content entity including all its metadata from the
   * Enterprise LMS database. This operation is irreversible and removes the
   * content identified by the unique content ID provided as a path parameter.
   * Proper security measures ensure only authorized roles can perform this
   * action to maintain data isolation in the multi-tenant architecture.
   *
   * @param connection
   * @param id Unique identifier of the target content
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deleteenterpriseLmsSystemAdminContentsId({
        systemAdmin,
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
