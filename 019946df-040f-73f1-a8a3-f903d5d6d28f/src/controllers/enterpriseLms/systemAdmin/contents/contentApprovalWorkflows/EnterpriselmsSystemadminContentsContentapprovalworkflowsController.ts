import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { patchenterpriseLmsSystemAdminContentsContentIdContentApprovalWorkflows } from "../../../../../providers/patchenterpriseLmsSystemAdminContentsContentIdContentApprovalWorkflows";
import { SystemadminAuth } from "../../../../../decorators/SystemadminAuth";
import { SystemadminPayload } from "../../../../../decorators/payload/SystemadminPayload";

import { IPageIEnterpriseLmsContentApprovalWorkflow } from "../../../../../api/structures/IPageIEnterpriseLmsContentApprovalWorkflow";
import { IEnterpriseLmsContentApprovalWorkflow } from "../../../../../api/structures/IEnterpriseLmsContentApprovalWorkflow";

@Controller(
  "/enterpriseLms/systemAdmin/contents/:contentId/contentApprovalWorkflows",
)
export class EnterpriselmsSystemadminContentsContentapprovalworkflowsController {
  /**
   * Retrieve content approval workflow steps for a given content.
   *
   * Provides a paged view of content approval workflow steps linked to a
   * specified content entry. Users can query, filter, and paginate approval
   * steps, viewing step number, reviewer role, status, and comments per step.
   * This supports the content approval and compliance process. Tenant-based
   * access control applies.
   *
   * @param connection
   * @param contentId Unique identifier of the content for approval workflows
   * @param body Parameters for searching and paginating approval workflow steps
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Patch()
  public async index(
    @SystemadminAuth()
    systemAdmin: SystemadminPayload,
    @TypedParam("contentId")
    contentId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IEnterpriseLmsContentApprovalWorkflow.IRequest,
  ): Promise<IPageIEnterpriseLmsContentApprovalWorkflow.ISummary> {
    try {
      return await patchenterpriseLmsSystemAdminContentsContentIdContentApprovalWorkflows(
        {
          systemAdmin,
          contentId,
          body,
        },
      );
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
