import { tags } from "typia";

/**
 * Event category entity representing classification for events.
 *
 * Each category has a unique name and optional description. Categories help
 * organize events for filtering and reporting.
 *
 * Managed by the event registration platform.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEventRegistrationEventCategory = {
  /**
   * Unique identifier (UUID) for the event category.
   *
   * Auto-generated primary key.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique name of the event category, such as "workshop" or "seminar".
   *
   * Used for category identification and filtering.
   */
  name: string;

  /**
   * Optional detailed description for the category.
   *
   * Provides human-readable details to describe the category.
   */
  description?: string | null | undefined;

  /**
   * Timestamp when the category was created.
   *
   * Stored as UTC date-time string in ISO 8601 format.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the category was last updated.
   *
   * Stored as UTC date-time string in ISO 8601 format.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp; null if the category is active.
   *
   * Indicates if the category is deleted logically.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEventRegistrationEventCategory {
  /** Request type for filtering and pagination of event categories. */
  export type IRequest = {
    /** Unique name of the event category, such as workshop or seminar. */
    name?: string | null | undefined;

    /** Optional detailed description for the category. */
    description?: string | null | undefined;

    /** Timestamp when the category record was created. */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the category record was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp for soft deletion; null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * @default 100
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort field name. */
    sortBy?: string | null | undefined;

    /** Sort direction. */
    sortDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Payload to create a new event category.
   *
   * Requires unique name property to be specified.
   */
  export type ICreate = {
    /**
     * Unique name of the event category to create.
     *
     * Required, non-empty string.
     */
    name: string;

    /**
     * Optional description to provide details about the category.
     *
     * Set to null or provide a string.
     */
    description?: string | null | undefined;
  };

  /**
   * Payload to update existing event category data.
   *
   * Fields are optional; only specified fields will be updated.
   */
  export type IUpdate = {
    /** Optional new name for the event category. */
    name?: string | undefined;

    /** Optional updated description for the category. */
    description?: string | null | undefined;

    /**
     * Optional soft delete timestamp. If specified, marks category as
     * deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information for the event category entity including identifier,
   * name, and timestamps for audit tracking.
   */
  export type ISummary = {
    /** Primary Key UUID of the event category */
    id: string & tags.Format<"uuid">;

    /** Unique name of the event category */
    name: string;

    /** Optional detailed description for the category */
    description?: string | null | undefined;

    /** Timestamp when the category record was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the category record was last updated */
    updated_at: string & tags.Format<"date-time">;
  };
}
