import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Manager identity and authentication information for the Job Performance
 * Evaluation service. Includes email, password hash for login, full name, and
 * temporal audit fields. Unique email ensures distinct manager accounts.
 * Supports soft delete with deleted_at. This table is a primary business entity
 * for manager users who supervise employees.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @namespace Actors
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalManager = {
  /**
   * Unique identifier of the manager.
   *
   * Primary Key.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Manager's unique email address used for login and notifications.
   *
   * Must be a valid email string.
   */
  email: string;

  /**
   * Hashed password for authentication. Passwords are never stored in
   * plaintext.
   *
   * This field is excluded from response to protect sensitive information.
   */
  password_hash: string;

  /** Manager's full name. */
  name: string;

  /**
   * Record creation timestamp.
   *
   * ISO 8601 format date-time string.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * ISO 8601 format date-time string.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp; if null, record is active.
   *
   * Nullable ISO 8601 date-time string or null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IJobPerformanceEvalManager {
  /**
   * Request body for creating new manager user.
   *
   * This includes email, password (plain text), and name fields necessary for
   * account creation and authentication.
   *
   * Password will be securely hashed.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Actors
   */
  export type ICreate = {
    /**
     * Manager's unique email address used for login and notifications.
     *
     * Must be a valid email string.
     */
    email: string;

    /**
     * Password in plain text for initial registration.
     *
     * This will be hashed and stored as password_hash.
     *
     * Should meet password security requirements.
     */
    password: string;

    /**
     * Manager's full name.
     *
     * Required for identification.
     */
    name: string;
  };

  /**
   * Authorization response containing JWT token for manager users.
   *
   * This response is returned after successful authentication operations such
   * as login, join, or token refresh.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Actors
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated manager. */
    id: string & tags.Format<"uuid">;

    /**
     * Manager's unique email address used for login and notifications.
     *
     * Must be a valid email string.
     */
    email: string;

    /**
     * Hashed password for authentication. Passwords are never stored in
     * plaintext.
     *
     * This field is excluded from response to protect sensitive
     * information.
     */
    password_hash: string;

    /** Manager's full name. */
    name: string;

    /**
     * Record creation timestamp.
     *
     * ISO 8601 format date-time string.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Record last update timestamp.
     *
     * ISO 8601 format date-time string.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft delete timestamp; if null, record is active.
     *
     * Nullable ISO 8601 date-time string or null.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request body for manager login credentials.
   *
   * Includes email and password fields for authentication purposes.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Actors
   */
  export type ILogin = {
    /** Manager's unique email address. */
    email: string;

    /** Password in plain text for authentication. */
    password: string;
  };

  /**
   * Request body for refreshing JWT tokens using a refresh token.
   *
   * Includes refresh_token field.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Actors
   */
  export type IRefresh = {
    /** Valid refresh token string to obtain new access tokens. */
    refresh_token: string;
  };

  /**
   * Request body interface for manager list queries.
   *
   * Supports paging, searching by name, and sorting.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Actors
   */
  export type IRequest = {
    /**
     * Name or partial name to search managers.
     *
     * Can be null to indicate no filter.
     */
    search?: string | null | undefined;

    /**
     * Page number for pagination.
     *
     * Optional; defaults to 1.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Number of items per page.
     *
     * Optional; defaults to 20.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Sort criteria.
     *
     * Could be null or string representing field and order, e.g.,
     * "name_asc".
     */
    sort?: string | null | undefined;
  };

  /**
   * Input type for updating manager information.
   *
   * Allows partial updates to email, password hash, name, and logical
   * deletion timestamp.
   */
  export type IUpdate = {
    /**
     * Manager's unique email address used for login and notifications.
     *
     * Must follow the format of a valid email.
     */
    email?: string | undefined;

    /**
     * Hashed password for authentication. Passwords are never stored in
     * plaintext.
     *
     * Must be a secure hash value.
     */
    password_hash?: string | undefined;

    /**
     * Manager's full name.
     *
     * Used for display and identification in the system.
     */
    name?: string | undefined;

    /**
     * Soft delete timestamp; if null, record is active.
     *
     * Used for logical deletion and audit purposes.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of a manager entity including unique identifier and
   * full name.
   *
   * This is used for list views or selection inputs in management
   * applications.
   *
   * Derived from the job_performance_eval_managers table.
   */
  export type ISummary = {
    /** Unique identifier of the manager. */
    id: string & tags.Format<"uuid">;

    /** Manager's full name. */
    name: string;
  };
}
