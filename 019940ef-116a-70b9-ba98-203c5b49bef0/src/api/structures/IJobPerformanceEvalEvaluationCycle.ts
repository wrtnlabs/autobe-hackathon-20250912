import { tags } from "typia";

/**
 * Evaluation cycle entity representing a distinct period when evaluations are
 * conducted.
 *
 * Referenced by evaluations, comments, and statistics.
 *
 * Includes comprehensive temporal tracking and soft deletion for audit and data
 * lifecycle management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalEvaluationCycle = {
  /**
   * Primary Key.
   *
   * Unique identifier for each evaluation cycle.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique code representing the evaluation cycle.
   *
   * Business rule: must be unique across all evaluation cycles.
   */
  cycle_code: string;

  /** Descriptive name of the evaluation cycle. */
  cycle_name: string;

  /** Starting datetime of the evaluation cycle period in ISO 8601 format. */
  start_date: string & tags.Format<"date-time">;

  /** Ending datetime of the evaluation cycle period in ISO 8601 format. */
  end_date: string & tags.Format<"date-time">;

  /** Flag indicating whether this evaluation cycle is currently active. */
  is_active: boolean;

  /**
   * Record creation timestamp in ISO 8601 format.
   *
   * System managed.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp in ISO 8601 format.
   *
   * System managed.
   */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp, null if not deleted. ISO 8601 datetime optional. */
  deleted_at: (string & tags.Format<"date-time">) | null;
};
export namespace IJobPerformanceEvalEvaluationCycle {
  /**
   * Request type for filtering and pagination in list operations.
   *
   * Supports filtering by cycle_code, cycle_name, date ranges, and active
   * status. Includes pagination parameters: page, limit.
   */
  export type IRequest = {
    /** Optional cycle code filter (exact match). */
    cycle_code?: string | undefined;

    /** Optional cycle name filter (partial match supported). */
    cycle_name?: string | undefined;

    /** Optional start date filter: records starting AFTER or ON this date. */
    start_date_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional end date filter: records ending BEFORE or ON this date. */
    end_date_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional active status filter. */
    is_active?: boolean | null | undefined;

    /** Pagination: page number (unsigned integer). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;

    /** Pagination: records per page (unsigned integer). */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;
  };

  /**
   * Request body type for creating a new evaluation cycle.
   *
   * Requires all fields except system-managed timestamps and soft delete.
   *
   * Cycle_code: unique string.
   *
   * Cycle_name: descriptive string.
   *
   * Start_date, end_date: ISO 8601 datetimes.
   *
   * Is_active: boolean.
   */
  export type ICreate = {
    /**
     * Unique code representing the evaluation cycle.
     *
     * Business rule: must be unique across all evaluation cycles.
     */
    cycle_code: string;

    /** Descriptive name of the evaluation cycle. */
    cycle_name: string;

    /** Starting datetime of the evaluation cycle period in ISO 8601 format. */
    start_date: string & tags.Format<"date-time">;

    /** Ending datetime of the evaluation cycle period in ISO 8601 format. */
    end_date: string & tags.Format<"date-time">;

    /** Flag indicating whether this evaluation cycle is currently active. */
    is_active: boolean;
  };

  /**
   * Request body type for updating an existing evaluation cycle.
   *
   * Allows updating fields except system-managed timestamps, id, and soft
   * delete.
   *
   * All fields optional to support partial updates.
   */
  export type IUpdate = {
    /**
     * Unique code representing the evaluation cycle.
     *
     * Business rule: must be unique across all evaluation cycles.
     */
    cycle_code?: string | undefined;

    /** Descriptive name of the evaluation cycle. */
    cycle_name?: string | undefined;

    /** Starting datetime of the evaluation cycle period in ISO 8601 format. */
    start_date?: (string & tags.Format<"date-time">) | undefined;

    /** Ending datetime of the evaluation cycle period in ISO 8601 format. */
    end_date?: (string & tags.Format<"date-time">) | undefined;

    /** Flag indicating whether this evaluation cycle is currently active. */
    is_active?: boolean | undefined;
  };

  /**
   * Evaluaton cycle summary providing minimal identifying information such as
   * ID, code, name, and active status.
   *
   * Useful for listing evaluation cycles in UI lists or summary displays.
   *
   * Derived from job_performance_eval_evaluation_cycles table.
   */
  export type ISummary = {
    /** Unique identifier. */
    id: string & tags.Format<"uuid">;

    /** Unique code identifying the evaluation cycle. */
    cycle_code: string;

    /** Descriptive name of the evaluation cycle. */
    cycle_name: string;

    /** Flag indicating whether the evaluation cycle is currently active. */
    is_active: boolean;
  };
}
