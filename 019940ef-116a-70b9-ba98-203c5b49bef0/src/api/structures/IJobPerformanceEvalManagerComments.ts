import { tags } from "typia";

/**
 * Manager comments on employee performance evaluations, providing qualitative
 * feedback separate from numeric evaluation scores. Linked to the manager who
 * authored the comment and the specific evaluation cycle. Enables managerial
 * insights and contextual remarks. Includes creation and update timestamps for
 * audit and tracking. This table is a primary business entity allowing
 * independent management of manager comments.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalManagerComments = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Manager who authored the comment.
   * {@link job_performance_eval_managers.id}.
   *
   * Unique identifier (UUID) of the manager who wrote this comment.
   */
  manager_id: string & tags.Format<"uuid">;

  /**
   * Linked evaluation cycle for the comment.
   * {@link job_performance_eval_evaluation_cycles.id}.
   */
  evaluation_cycle_id: string & tags.Format<"uuid">;

  /**
   * Content of the manager's comment on the employee's evaluation.
   *
   * This comment contains qualitative feedback from the manager regarding an
   * employee's evaluation during a specific evaluation cycle. The content
   * should be descriptive yet concise, providing meaningful context.
   */
  comment: string;

  /**
   * Timestamp marking when the comment was created.
   *
   * ISO 8601 formatted date-time string indicating when this record was
   * initially created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp marking last update time of the comment.
   *
   * ISO 8601 formatted date-time string indicating the last time this comment
   * was modified.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IJobPerformanceEvalManagerComments {
  /**
   * Request parameters for searching and paginating manager comments.
   *
   * Includes page number, limit of records per page, filtering by manager ID,
   * by evaluation cycle ID, full text search on comment content, and sort
   * order.
   *
   * Nullable fields allow for flexible querying.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * Optional pagination parameter to specify which page of results to
     * fetch.
     */
    page?: number | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * Optional pagination parameter to set the number of records returned
     * per page.
     *
     * @default 100
     */
    limit?: number | null | undefined;

    /**
     * Filter property: Manager ID.
     *
     * Optional UUID string used to filter comments by a specific manager.
     */
    manager_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter property: Evaluation Cycle ID.
     *
     * Optional UUID string used to filter comments by evaluation cycle.
     */
    evaluation_cycle_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Search text filter.
     *
     * Optional full text search string to query comment content.
     */
    comment?: string | null | undefined;

    /**
     * Sort order specification.
     *
     * Optional string indicating sorting field and direction.
     *
     * Example: 'created_at_DESC'
     */
    orderBy?: string | null | undefined;
  };

  /** Request format for creating a new manager comment. */
  export type ICreate = {
    /**
     * Manager who authored the comment. The UUID must correspond to an
     * existing manager.
     *
     * This field associates the comment with its author.
     */
    manager_id: string & tags.Format<"uuid">;

    /**
     * Linked evaluation cycle ID to which this comment pertains.
     *
     * This connects the comment to a specific performance evaluation
     * period.
     */
    evaluation_cycle_id: string & tags.Format<"uuid">;

    /**
     * Content of the manager's comment.
     *
     * This is a required textual content field where the manager inputs
     * qualitative feedback. Should respect size constraints and business
     * rules for comments.
     */
    comment: string;
  };

  /** Request format for updating an existing manager comment. */
  export type IUpdate = {
    /**
     * Manager who authored the comment. UUID of the manager.
     *
     * This field may be optional or required depending on update policies
     * but is defined here optional.
     */
    manager_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Evaluation cycle ID to which this comment belongs.
     *
     * Optional field to update linkage to evaluation cycle.
     */
    evaluation_cycle_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Content of the comment.
     *
     * Enables managers to revise their feedback.
     */
    comment?: string | undefined;
  };

  /**
   * Summary information of manager comments for list displays.
   *
   * Includes unique ID, comment text, and timestamps for creation and last
   * update.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique identifier for the manager comment entry.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Content of the manager's comment on the employee's evaluation.
     *
     * This property contains qualitative feedback provided by the manager
     * as part of job performance evaluations.
     */
    comment: string;

    /**
     * Timestamp marking when the comment was created.
     *
     * Used for audit and chronological record-keeping purposes.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp marking last update time of the comment.
     *
     * Reflects the most recent modification to the comment content.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
