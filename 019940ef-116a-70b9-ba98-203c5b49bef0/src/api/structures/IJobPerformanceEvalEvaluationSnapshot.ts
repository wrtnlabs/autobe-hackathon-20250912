import { tags } from "typia";

/**
 * Detailed snapshot of evaluation scores combining employee self-evaluation and
 * manager evaluation.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IJobPerformanceEvalEvaluationSnapshot = {
  /** Unique UUID identifier for the evaluation snapshot. */
  id: string & tags.Format<"uuid">;

  /** UUID of the evaluation cycle this snapshot belongs to. */
  evaluation_cycle_id: string & tags.Format<"uuid">;

  /** UUID of the employee associated with this snapshot. */
  employee_id: string & tags.Format<"uuid">;

  /** Employee's self-evaluated job performance score, 1 to 5. */
  performance_score: number & tags.Type<"int32">;

  /** Employee's self-evaluated knowledge and skills score, 1 to 5. */
  knowledge_score: number & tags.Type<"int32">;

  /**
   * Employee's self-evaluated problem solving and collaboration score, 1 to
   * 5.
   */
  problem_solving_score: number & tags.Type<"int32">;

  /** Employee's self-evaluated innovation score, 1 to 5. */
  innovation_score: number & tags.Type<"int32">;

  /**
   * Manager's evaluation of job performance score, 1 to 5, nullable if
   * unavailable.
   */
  manager_performance_score?: (number & tags.Type<"int32">) | null | undefined;

  /**
   * Manager's evaluation of knowledge and skills score, 1 to 5, nullable if
   * unavailable.
   */
  manager_knowledge_score?: (number & tags.Type<"int32">) | null | undefined;

  /**
   * Manager's evaluation of problem solving and collaboration score, 1 to 5,
   * nullable if unavailable.
   */
  manager_problem_solving_score?:
    | (number & tags.Type<"int32">)
    | null
    | undefined;

  /**
   * Manager's evaluation of innovation score, 1 to 5, nullable if
   * unavailable.
   */
  manager_innovation_score?: (number & tags.Type<"int32">) | null | undefined;

  /** Comprehensive comment provided by the employee, nullable. */
  employee_comment?: string | null | undefined;

  /** Comprehensive comment provided by the manager, nullable. */
  manager_comment?: string | null | undefined;

  /** ISO 8601 date-time of record creation. */
  created_at: string & tags.Format<"date-time">;

  /** ISO 8601 date-time of last update. */
  updated_at: string & tags.Format<"date-time">;

  /** ISO 8601 date-time marking soft deletion, nullable if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
