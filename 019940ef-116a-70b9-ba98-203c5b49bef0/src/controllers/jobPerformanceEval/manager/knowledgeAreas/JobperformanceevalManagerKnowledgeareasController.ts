import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";
import { putjobPerformanceEvalManagerKnowledgeAreasId } from "../../../../providers/putjobPerformanceEvalManagerKnowledgeAreasId";
import { ManagerAuth } from "../../../../decorators/ManagerAuth";
import { ManagerPayload } from "../../../../decorators/payload/ManagerPayload";
import { deletejobPerformanceEvalManagerKnowledgeAreasId } from "../../../../providers/deletejobPerformanceEvalManagerKnowledgeAreasId";

import { IJobPerformanceEvalKnowledgeArea } from "../../../../api/structures/IJobPerformanceEvalKnowledgeArea";

@Controller("/jobPerformanceEval/manager/knowledgeAreas/:id")
export class JobperformanceevalManagerKnowledgeareasController {
  /**
   * Update a knowledge area by ID in the job_performance_eval_knowledge_areas
   * table.
   *
   * This API endpoint allows authorized users to update a specific knowledge
   * area identified by its unique ID. The knowledge area represents domains of
   * expertise within the organizational job evaluation context. The update
   * operation accepts new values for code, name, and an optional description to
   * reflect current knowledge area attributes.
   *
   * Users must provide the knowledge area's unique identifier as a path
   * parameter in UUID format. The request body must include the new code and
   * name for the knowledge area, optionally updating the description if needed.
   * The system records update timestamps automatically.
   *
   * Security checks ensure only users with appropriate roles can modify
   * knowledge areas. This operation corresponds to the
   * job_performance_eval_knowledge_areas table in the database.
   *
   * The response returns the updated knowledge area entity reflecting the
   * changes.
   *
   * @param connection
   * @param id Unique identifier of the target knowledge area
   * @param body Updated information for the knowledge area
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Put()
  public async updateKnowledgeArea(
    @ManagerAuth()
    manager: ManagerPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
    @TypedBody()
    body: IJobPerformanceEvalKnowledgeArea.IUpdate,
  ): Promise<IJobPerformanceEvalKnowledgeArea> {
    try {
      return await putjobPerformanceEvalManagerKnowledgeAreasId({
        manager,
        id,
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }

  /**
   * Delete a knowledge area by ID from the job_performance_eval_knowledge_areas
   * table.
   *
   * This API endpoint performs a hard delete of a knowledge area specified by
   * its unique ID. The knowledge area corresponds to a domain of expertise
   * within the job evaluation framework. Deleting this entity removes it
   * permanently from the database.
   *
   * The knowledge area ID must be provided as a path parameter in UUID format.
   * Only users with the manager role can execute this deletion. Upon success,
   * no content is returned.
   *
   * This operation maps to the job_performance_eval_knowledge_areas table in
   * Prisma schema.
   *
   * @param connection
   * @param id Unique identifier of the knowledge area to delete
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async eraseKnowledgeArea(
    @ManagerAuth()
    manager: ManagerPayload,
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<void> {
    try {
      return await deletejobPerformanceEvalManagerKnowledgeAreasId({
        manager,
        id,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
