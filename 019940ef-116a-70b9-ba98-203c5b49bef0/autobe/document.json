{"operations":[{"specification":"The API operation at /auth/employee/join is for registering new employee users in the Job Performance Evaluation system. This endpoint creates a new employee account, including their email and password for login, and issues initial JWT tokens for authenticated access. It targets the job_performance_eval_employees table which stores employee identities, emails, password hashes, and timestamps. The registration involves storing the employee email as unique identifier and secure password hash. This join operation is publicly accessible and generates JWT tokens in the response upon successful account creation to enable session management.\n\nSecurity is ensured by validating email uniqueness and password security. The operation supports immediate user registration with the required fields described by IJobPerformanceEvalEmployee.ICreate type.\n\nThis operation is essential for member-kind roles (like employees) to onboard the system.\n\nRelated operations include login and refresh token issuance, enabling authenticated session lifecycle management.","authorizationType":"join","description":"This API endpoint allows new employee users to register for the Job Performance Evaluation system. It captures essential authentication credentials, including unique email and securely hashed password fields as stored in the job_performance_eval_employees table. After registration, an access token is issued represented by IJobPerformanceEvalJobPerformanceEvalEmployee.IAuthorized type enabling subsequent authenticated interactions.\n\nThe operation validates the uniqueness of the email to prevent duplicate accounts and ensures password hashing security. It enables member users to create their accounts and gain authenticated access.\n\nIt is publicly accessible without prior authentication but requires valid user input conforming to defined schema.\n\nThis operation is the first step in the authentication flow for employee role users.\n\nSubsequent operations include login (to authenticate) and refresh (to renew access tokens) which depend on successful join operation execution.","summary":"Register new employee user and issue JWT tokens, related to job_performance_eval_employees table.","parameters":[],"requestBody":{"description":"Request payload for creating new employee user.","typeName":"IJobPerformanceEvalEmployee.ICreate"},"responseBody":{"description":"Response with JWT authorization tokens for employee.","typeName":"IJobPerformanceEvalEmployee.IAuthorized"},"authorizationRole":null,"name":"joinEmployee","path":"/auth/employee/join","method":"post"},{"specification":"This API operation enables employee user login using their email and password. It authenticates employee credentials stored securely in the job_performance_eval_employees table, validating the user exists and password hash matches. Upon success, it issues JWT tokens to manage session and access control.\n\nThe operation requires email and password as input represented in IJobPerformanceEvalEmployee.ILogin. The response returns JWT tokens in IJobPerformanceEvalEmployee.IAuthorized type.\n\nThis login API is publicly accessible, providing a key step after registration for employee role users to authenticate and access protected resources.\n\nIt is designed specifically for member-kind roles who have full login capability.\n\nRelated operations include join (registration) and refresh (token renewal).\n\nSecurity considerations include protecting password data and token integrity.","authorizationType":"login","description":"Authenticate employee user via email and password, issuing JWT tokens upon success. Uses job_performance_eval_employees table for credential validation and user identity. This is a public endpoint enabling regular users to login.\n\nEnsures password hash comparison and secure token issuance with IJobPerformanceEvalEmployee.IAuthorized in response.\n\nCritical for member-role authentication workflows, paired with join and refresh operations.\n\nAuthentication failures result in HTTP 401 with clear error messages.\n\nAllows session management consistent with JWT-based security.","summary":"Employee login with email and password, issuing JWT tokens, related to job_performance_eval_employees table.","parameters":[],"requestBody":{"description":"Login credentials payload for employee authentication.","typeName":"IJobPerformanceEvalEmployee.ILogin"},"responseBody":{"description":"Response with JWT authorization tokens for employee.","typeName":"IJobPerformanceEvalEmployee.IAuthorized"},"authorizationRole":null,"name":"loginEmployee","path":"/auth/employee/login","method":"post"},{"specification":"This API operation allows employee users to refresh their JWT access tokens using a valid refresh token. It uses the job_performance_eval_employees table to validate the token's association and issues new JWT tokens for continued authenticated access.\n\nThe request requires a refresh token payload defined in IJobPerformanceEvalEmployee.IRefresh and returns new JWT tokens in IJobPerformanceEvalEmployee.IAuthorized.\n\nThis is a key operation to maintain session continuity without requiring full login again, essential for member-kind roles.\n\nIt protects security by ensuring only valid refresh tokens can trigger token renewal.\n\nWorks in conjunction with join and login operations for a full authentication lifecycle.\n\nAccess requires a valid refresh token, and unauthorized or expired tokens result in appropriate HTTP error responses.","authorizationType":"refresh","description":"Refresh JWT tokens using a valid refresh token for employee users. Validates token association with the job_performance_eval_employees table.\n\nReturns new JWT tokens in the response for continued authenticated sessions.\n\nFacilitates seamless session continuity for member role users.\n\nRequires secure validation to prevent token misuse.\n\nWorks as part of the full authentication flow along with join and login operations.","summary":"Refresh JWT tokens for employee user, related to job_performance_eval_employees table.","parameters":[],"requestBody":{"description":"Refresh token payload for employee authentication renewal.","typeName":"IJobPerformanceEvalEmployee.IRefresh"},"responseBody":{"description":"Response with renewed JWT authorization tokens for employee.","typeName":"IJobPerformanceEvalEmployee.IAuthorized"},"authorizationRole":null,"name":"refreshEmployee","path":"/auth/employee/refresh","method":"post"},{"specification":"This API operation is to register a new manager account for the Job Performance Evaluation system, an admin-kind user role. It handles user creation with email and password credentials, creates associated manager identity, and issues initial JWT tokens for authentication to access the system functionalities that include evaluation management and reporting. This is a public endpoint allowing anyone to join as a manager.\n\nThe implementation must securely store password hashes, ensure email uniqueness based on the job_performance_eval_managers.email field, and initialize user sessions with access and refresh tokens represented as IJobPerformanceEvalManager.IAuthorized. The operation corresponds to the job_performance_eval_managers table in the database.\n\nThis join operation requires no prior authentication and returns authorized tokens upon successful registration. It is usually the first step before login.\n\nOther operations like login and refresh use credentials and tokens issued through this registration.\n\nThe system ensures that manager accounts have unique emails and supports soft deletion via deleted_at column for account lifecycle management.\n\nRelated operations: login and refresh for token management.\n\nSecurity includes password hashing and validation of input fields corresponding to the database schema.","authorizationType":"join","description":"Register a new manager account by providing valid email and password credentials. This operation creates a new manager entity in the job_performance_eval_managers table and returns JWT tokens for subsequent authentication.\n\nThe operation ensures email uniqueness by checking against existing entries in job_performance_eval_managers.email.\n\nPassword must be securely hashed and stored as password_hash.\n\nReturns authorized JWT tokens upon successful registration.\n\nThis is a public endpoint with no authentication required.\n\nRelated to login and token refresh operations to maintain authentication lifecycle.","summary":"Register manager account, creates job_performance_eval_managers user and returns JWT tokens.","parameters":[],"requestBody":{"description":"Manager registration request containing email and password credentials.","typeName":"IJobPerformanceEvalManager.ICreate"},"responseBody":{"description":"Authorized manager tokens and identity upon successful registration.","typeName":"IJobPerformanceEvalManager.IAuthorized"},"authorizationRole":"manager","name":"join","path":"/auth/manager/join","method":"post"},{"specification":"Authenticate a manager user by verifying email and password credentials. This API endpoint validates the credentials against the job_performance_eval_managers.email and password_hash fields. Upon successful authentication, it issues new JWT access and refresh tokens encapsulated in IJobPerformanceEvalManager.IAuthorized, allowing the manager to access protected system resources for evaluation and reporting tasks.\n\nThis endpoint is public and does not require prior authentication.\n\nThe login operation complements the join operation, providing access token renewal through refresh operations.\n\nSecurity best practices necessitate secure password verification, throttling login attempts, and secure token handling.\n\nSchema fields involved include email, password_hash, created_at, updated_at, and deleted_at.\n\nThe entity maps to the job_performance_eval_managers table.","authorizationType":"login","description":"Authenticate manager with email and password and issue JWT tokens upon successful validation.\n\nThis operation checks credentials against the job_performance_eval_managers.email and password_hash fields.\n\nReturns JWT access and refresh tokens required for session authorization.\n\nDoes not require prior authentication.\n\nRelated to join and token refresh operations for lifecycle management.","summary":"Authenticate manager and issue JWT tokens.","parameters":[],"requestBody":{"description":"Manager login request with email and password.","typeName":"IJobPerformanceEvalManager.ILogin"},"responseBody":{"description":"Authorized manager tokens and identity upon successful login.","typeName":"IJobPerformanceEvalManager.IAuthorized"},"authorizationRole":"manager","name":"login","path":"/auth/manager/login","method":"post"},{"specification":"This operation refreshes JWT tokens for an authenticated manager using a valid refresh token. The request must include the refresh token issued during login or registration. Upon successful validation, new access and refresh tokens are returned in IJobPerformanceEvalManager.IAuthorized format.\n\nThis endpoint ensures prolonged authenticated sessions without requiring users to re-enter credentials frequently. It is essential for maintaining secure and seamless user experiences.\n\nThe operation references tokens issued for the job_performance_eval_managers role.\n\nThe refresh token must be valid and not expired.\n\nThe operation is a public endpoint requiring valid tokens only, no user credentials.\n\nRelated operations include join and login for complete authentication lifecycle management.\n\nSchema fields relevant: none directly, but depends on secure token storage.","authorizationType":"refresh","description":"Refresh JWT tokens for manager with a valid refresh token.\n\nEnsures continued authenticated sessions.\n\nNo prior login required when a valid refresh token is presented.\n\nReturns new JWT tokens upon success.\n\nRelated to join and login lifecycle operations.","summary":"Refresh JWT tokens for manager role.","parameters":[],"requestBody":{"description":"Refresh token request with current refresh token.","typeName":"IJobPerformanceEvalManager.IRefresh"},"responseBody":{"description":"New authorized tokens upon refresh success.","typeName":"IJobPerformanceEvalManager.IAuthorized"},"authorizationRole":"manager","name":"refresh","path":"/auth/manager/refresh","method":"post"},{"specification":"This operation retrieves a filtered, paginated list of evaluation cycles from the 'job_performance_eval_evaluation_cycles' table. It supports querying evaluation cycles with various criteria such as cycle codes, names, date ranges, and active status to enable clients to view evaluation periods available for assessments. The operation returns summarized information suitable for display in lists and supports sorting and paging for efficient data consumption.","path":"/jobPerformanceEval/manager/evaluationCycles","method":"patch","summary":"Retrieve filtered, paginated list of evaluation cycles","description":"Retrieve a paginated list of job performance evaluation cycles allowing clients to filter by properties such as cycle code, cycle name, date ranges, and active status.\n\nThese cycles represent distinct periods where employee and manager evaluations occur, enabling users to select and manage evaluations within those defined periods.\n\nSecurity considerations include restricting access to authorized roles who can view evaluation periods and ensuring that inactive or deleted cycles can be excluded.\n\nThis operation interacts with the 'job_performance_eval_evaluation_cycles' table and allows querying across historical and current cycles.\n\nValidation rules include verifying that paging and filtering parameters match expected formats and ensuring that only accessible cycles are returned based on user roles.\n\nThis endpoint is typically combined with detail retrieval and update operations to fully manage evaluation cycles.","parameters":[],"requestBody":{"description":"Search criteria and pagination settings for evaluation cycles","typeName":"IJobPerformanceEvalEvaluationCycle.IRequest"},"responseBody":{"description":"Paginated list of evaluation cycle summaries matching criteria","typeName":"IPageIJobPerformanceEvalEvaluationCycle.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index"},{"specification":"This operation fetches detailed information for a specific evaluation cycle identified by its unique ID from the 'job_performance_eval_evaluation_cycles' table. It returns all properties associated with the evaluation cycle including code, name, start/end dates, and active status.\n\nThe detailed information allows clients to review evaluation cycle settings, perform validation on active status, and enable update or deletion workflows.\n\nSecurity requires that only authorized administrative users may access evaluation cycle details due to sensitivity of evaluation periods.\n\nThe operation ensures ID parameter is a valid UUID and returns a single evaluation cycle entity or 404 if not found.","path":"/jobPerformanceEval/manager/evaluationCycles/{id}","method":"get","summary":"Get evaluation cycle details by ID","description":"Fetch detailed information about a single job performance evaluation cycle by its unique identifier.\n\nThis enables administrative users to view and validate properties such as start and end dates, cycle codes, and active status.\n\nThe operation links directly to the 'job_performance_eval_evaluation_cycles' table and supports use cases involving evaluation scheduling and management.\n\nAccess restrictions apply to prevent unauthorized data exposure.\n\nError handling includes returning appropriate HTTP 404 when the ID is not found and 400 for invalid UUID formats.","parameters":[{"name":"id","description":"Unique identifier of the evaluation cycle","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed evaluation cycle information","typeName":"IJobPerformanceEvalEvaluationCycle"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"This operation creates a new evaluation cycle record in the 'job_performance_eval_evaluation_cycles' table. It accepts detailed input data including cycle code, name, start and end timestamps, and active flag.\n\nValidated inputs ensure the cycle code is unique and times represent a valid period. Timestamps for creation and update are handled by the system.\n\nAccess control restricts creation to authorized users.\n\nUpon successful creation, the newly created evaluation cycle entity is returned for confirmation and further use.\n\nThe operation handles validation errors like duplicate cycle codes or incorrect date ranges gracefully.","path":"/jobPerformanceEval/manager/evaluationCycles","method":"post","summary":"Create a new evaluation cycle","description":"Create a new job performance evaluation cycle with specified code, name, dates, and active status.\n\nAuthorized users can define new evaluation periods to manage cycles of employee and manager assessments.\n\nValidation of unique cycle code and proper date intervals is enforced to maintain data integrity.\n\nThe operation inserts a new record into the 'job_performance_eval_evaluation_cycles' table and returns the created entity.\n\nOnly authorized users may perform this operation.","parameters":[],"requestBody":{"description":"Details required to create an evaluation cycle","typeName":"IJobPerformanceEvalEvaluationCycle.ICreate"},"responseBody":{"description":"The created evaluation cycle entity","typeName":"IJobPerformanceEvalEvaluationCycle"},"authorizationType":null,"authorizationRole":"manager","name":"create"},{"specification":"This operation updates an existing evaluation cycle by its unique ID in the 'job_performance_eval_evaluation_cycles' table. It accepts updated fields such as cycle code, name, start/end dates, and active flag.\n\nInputs are validated to ensure unique cycle codes and valid date ranges. The system manages timestamps for updates.\n\nOnly authorized users are permitted to perform this operation.\n\nReturns the updated evaluation cycle entity upon successful modification.\n\nHandles errors such as not found IDs and duplicates appropriately.","path":"/jobPerformanceEval/manager/evaluationCycles/{id}","method":"put","summary":"Update evaluation cycle by ID","description":"Update an existing job performance evaluation cycle identified by ID.\n\nAllows modification of properties including cycle code, name, start and end dates, and active status.\n\nEnsures that input data respects uniqueness constraints and valid date ranges.\n\nThis operation updates the record in the 'job_performance_eval_evaluation_cycles' table.\n\nRestricted to authorized users to maintain controlled evaluation scheduling.","parameters":[{"name":"id","description":"Unique identifier of the evaluation cycle to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated evaluation cycle information","typeName":"IJobPerformanceEvalEvaluationCycle.IUpdate"},"responseBody":{"description":"The updated evaluation cycle entity","typeName":"IJobPerformanceEvalEvaluationCycle"},"authorizationType":null,"authorizationRole":"manager","name":"update"},{"specification":"This operation deletes a specific evaluation cycle record from the job_performance_eval_evaluation_cycles table, identified uniquely by the evaluation cycle UUID. The deletion is permanent and removes all associated metadata related to the evaluation cycle such as cycle code, name, and active status. This endpoint is typically restricted to system administrators to prevent unauthorized data loss.","path":"/jobPerformanceEval/manager/evaluationCycles/{id}","method":"delete","summary":"Delete job performance evaluation cycle by ID","description":"Delete a job performance evaluation cycle identified by its unique UUID. This operation permanently removes the evaluation cycle record from the database. It has no request body or response body content.\n\nSecurity is critical: This operation should be limited to administrators, as deleting evaluation cycles affects historical data consistency. Proper authorization checks must exist in the implementation layer.\n\nThe operation strictly maps to physical deletion in the job_performance_eval_evaluation_cycles table with the primary key UUID provided in the path parameter.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the evaluation cycle to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"erase"},{"specification":"Retrieve a filtered and paginated list of system settings for job performance evaluation from job_performance_eval_system_settings table. Supports search criteria, filtering, pagination, and sorting based on system setting keys and values.","path":"/jobPerformanceEval/manager/systemSettings","method":"patch","summary":"Search and retrieve paginated list of system settings","description":"Search and retrieve paginated list of job performance evaluation system settings. Supports filtering by setting key, value, and description with pagination parameters in the request.\n\nAccess is typically restricted to users with administrative privileges such as managers.\n\nThis is a PATCH request with a structured request body that defines search filters. Response includes paginated system settings data.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering system settings","typeName":"IJobPerformanceEvalSystemSettings.IRequest"},"responseBody":{"description":"Paginated list of system settings matching criteria","typeName":"IPageIJobPerformanceEvalSystemSettings"},"authorizationType":null,"authorizationRole":"manager","name":"index"},{"specification":"Get detailed information of a single system setting for job performance evaluation identified by its UUID from the job_performance_eval_system_settings table.","path":"/jobPerformanceEval/manager/systemSettings/{id}","method":"get","summary":"Get system setting details by ID","description":"Retrieve the full details of a job performance evaluation system setting via its unique identifier.\n\nSecurity access is usually granted to manager roles or equivalent administrators.\n\nThe response contains all properties of the system setting record.","parameters":[{"name":"id","in":"path","description":"Unique UUID of the system setting","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed system setting information","typeName":"IJobPerformanceEvalSystemSettings"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"Retrieve a filtered and paginated list of employee records from job_performance_eval_employees table. Supports search, filtering, and sorting capabilities on employee attributes such as name, email, and creation date.","path":"/jobPerformanceEval/manager/employees","method":"patch","summary":"List employees with filtering and pagination","description":"Search and retrieve paginated employee list with filtering options.\n\nTypically available to managerial users for staff management.\n\nRequest includes search criteria including pagination. Response returns paged employee summaries.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for employee filtering","typeName":"IJobPerformanceEvalEmployees.IRequest"},"responseBody":{"description":"Paginated list of employee summary information matching criteria","typeName":"IPageIJobPerformanceEvalEmployees.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index"},{"specification":"This operation retrieves detailed information of a specific employee by their unique identifier from the job_performance_eval_employees table. It allows authorized users to view employee details including email and full name, ensuring secure access control based on user roles.","description":"This GET API endpoint allows clients to fetch the personal and authentication-related information of a single employee identified by their unique UUID. It provides essential details such as employee email and name, which are fundamental for identification and notification purposes within the Job Performance Evaluation system.\n\nAccess to this resource is restricted to authenticated employees or managers who require employee information for management or operational tasks.\n\nThe operation directly queries the job_performance_eval_employees table in the database, ensuring the latest data is retrieved, including timestamps for creation and updates. Since employee data is sensitive, authorization and authentication measures are enforced.\n\nError handling includes returning an appropriate error if the employee ID does not exist. This endpoint is foundational for user profile management and further operations involving employee-related data.","summary":"Retrieve detailed information of a specific employee by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the target employee","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed employee information including email and name","typeName":"IJobPerformanceEvalEmployee"},"authorizationRoles":["employee","manager"],"name":"at","path":"/jobPerformanceEval/employee/employees/{id}","method":"get","authorizationRole":"employee","authorizationType":null},{"specification":"This operation retrieves detailed information of a specific employee by their unique identifier from the job_performance_eval_employees table. It allows authorized users to view employee details including email and full name, ensuring secure access control based on user roles.","description":"This GET API endpoint allows clients to fetch the personal and authentication-related information of a single employee identified by their unique UUID. It provides essential details such as employee email and name, which are fundamental for identification and notification purposes within the Job Performance Evaluation system.\n\nAccess to this resource is restricted to authenticated employees or managers who require employee information for management or operational tasks.\n\nThe operation directly queries the job_performance_eval_employees table in the database, ensuring the latest data is retrieved, including timestamps for creation and updates. Since employee data is sensitive, authorization and authentication measures are enforced.\n\nError handling includes returning an appropriate error if the employee ID does not exist. This endpoint is foundational for user profile management and further operations involving employee-related data.","summary":"Retrieve detailed information of a specific employee by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the target employee","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed employee information including email and name","typeName":"IJobPerformanceEvalEmployee"},"authorizationRoles":["employee","manager"],"name":"at","path":"/jobPerformanceEval/manager/employees/{id}","method":"get","authorizationRole":"manager","authorizationType":null},{"specification":"This operation updates the information of an existing employee in the job_performance_eval_employees table. It accepts employee-specific details such as email, password hash, and name for modification. The update ensures audit timestamps are maintained, and soft deletion timestamps are respected. Only authorized users can perform this update operation.","description":"This PUT API endpoint allows modification of an existing employee's data identified by their unique UUID. The operation supports updating employee email, hashed password, and name fields which are necessary for authentication and personal records.\n\nThe endpoint is critical for user account management workflows, enabling updates to credentials and identifying information. The system expects input to comply with validation rules, including unique email constraints and secure password hashing.\n\nSecurity considerations include ensuring only authorized users with appropriate role-based access can perform updates. Input validation and error handling are key to prevent inconsistent or duplicate data.\n\nThe operation interacts with the job_performance_eval_employees table, updating the record while preserving timestamp fields for record creation, updates, and soft deletion. It returns the updated employee data upon success.","summary":"Update existing employee information by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the target employee","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated employee data","typeName":"IJobPerformanceEvalEmployee.IUpdate"},"responseBody":{"description":"Updated employee detailed information","typeName":"IJobPerformanceEvalEmployee"},"authorizationRoles":["employee","manager"],"name":"update","path":"/jobPerformanceEval/employee/employees/{id}","method":"put","authorizationRole":"employee","authorizationType":null},{"specification":"This operation updates the information of an existing employee in the job_performance_eval_employees table. It accepts employee-specific details such as email, password hash, and name for modification. The update ensures audit timestamps are maintained, and soft deletion timestamps are respected. Only authorized users can perform this update operation.","description":"This PUT API endpoint allows modification of an existing employee's data identified by their unique UUID. The operation supports updating employee email, hashed password, and name fields which are necessary for authentication and personal records.\n\nThe endpoint is critical for user account management workflows, enabling updates to credentials and identifying information. The system expects input to comply with validation rules, including unique email constraints and secure password hashing.\n\nSecurity considerations include ensuring only authorized users with appropriate role-based access can perform updates. Input validation and error handling are key to prevent inconsistent or duplicate data.\n\nThe operation interacts with the job_performance_eval_employees table, updating the record while preserving timestamp fields for record creation, updates, and soft deletion. It returns the updated employee data upon success.","summary":"Update existing employee information by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the target employee","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated employee data","typeName":"IJobPerformanceEvalEmployee.IUpdate"},"responseBody":{"description":"Updated employee detailed information","typeName":"IJobPerformanceEvalEmployee"},"authorizationRoles":["employee","manager"],"name":"update","path":"/jobPerformanceEval/manager/employees/{id}","method":"put","authorizationRole":"manager","authorizationType":null},{"specification":"This operation deletes a specific employee record from the job_performance_eval_employees table by their unique identifier. This deletion is a hard delete removing the record completely from the database, as the schema does not specify a soft delete flag for user deletion. This operation is restricted to authorized roles due to the sensitivity of employee data.","description":"This DELETE API endpoint allows removal of an employee record identified by their unique UUID. It permanently deletes the employee data, ensuring no recovery is possible. This operation is critical for user management lifecycle, particularly for employee offboarding scenarios.\n\nAuthorization is required to prevent unauthorized data removal. The system performs necessary validation before deletion to ensure integrity.\n\nThe operation affects the job_performance_eval_employees schema table directly and does not return a response body. Clients should handle standard HTTP status codes for success or failure.","summary":"Erase an employee record by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the target employee","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["manager"],"name":"erase","path":"/jobPerformanceEval/manager/employees/{id}","method":"delete","authorizationRole":"manager","authorizationType":null},{"specification":"This operation searches and retrieves a paginated list of manager users from the job_performance_eval_managers table. It supports filtering, searching, and sorting based on various criteria defined in the request body. It returns summarized manager information optimized for list display purposes.","description":"This PATCH API endpoint enables complex querying and retrieval of manager records with support for pagination, filters, and sorting. It operates on the job_performance_eval_managers database table.\n\nClients can specify filtering criteria such as name, email, or creation date ranges, along with pagination parameters like page number and size to efficiently retrieve relevant subsets of manager data.\n\nThe response includes paginated results with manager summary data, providing essential details needed for listing and selection in administrative interfaces.\n\nAccess control ensures only authorized management users can perform this operation due to the sensitivity of manager data.\n\nError handling includes validation of request parameters and providing informative error responses.","summary":"Search and retrieve a filtered, paginated list of managers","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for manager filtering","typeName":"IJobPerformanceEvalManager.IRequest"},"responseBody":{"description":"Paginated list of manager summary information matching search criteria","typeName":"IPageIJobPerformanceEvalManager.ISummary"},"authorizationRoles":["manager"],"name":"index","path":"/jobPerformanceEval/manager/managers","method":"patch","authorizationRole":"manager","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific manager in the job performance evaluation system, including their unique identifier, email, name, and timestamps. It directly interacts with the job_performance_eval_managers table from the Prisma schema, ensuring full data retrieval relevant to manager identity and authentication. The operation supports secure access control and data privacy and is intended for authenticated users with roles employee or manager. It requires the manager's UUID as a path parameter and returns the full manager record excluding password hashes for security.","path":"/jobPerformanceEval/employee/managers/{id}","method":"get","summary":"Retrieve manager details by ID","description":"Retrieve detailed information for a manager by their unique identifier. This API operation accesses the job_performance_eval_managers table, which stores manager authentication and profile data.\n\nThis operation requires authentication and authorization to ensure that only permitted users (such as managers or employees) can access sensitive information.\n\nThe returned manager data includes the manager's ID, email, name, and timestamps for record creation and updates. Password hashes are never exposed through this API to maintain security.\n\nThis operation is commonly used in management dashboards or administrative interfaces where individual manager details are displayed for review or further processing.\n\nIf the manager ID does not exist, the API will return a suitable error indicating the resource was not found.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the manager","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Manager entity with full details","typeName":"IJobPerformanceEvalManager"},"authorizationType":null,"authorizationRole":"employee","name":"at"},{"specification":"This operation retrieves detailed information about a specific manager in the job performance evaluation system, including their unique identifier, email, name, and timestamps. It directly interacts with the job_performance_eval_managers table from the Prisma schema, ensuring full data retrieval relevant to manager identity and authentication. The operation supports secure access control and data privacy and is intended for authenticated users with roles employee or manager. It requires the manager's UUID as a path parameter and returns the full manager record excluding password hashes for security.","path":"/jobPerformanceEval/manager/managers/{id}","method":"get","summary":"Retrieve manager details by ID","description":"Retrieve detailed information for a manager by their unique identifier. This API operation accesses the job_performance_eval_managers table, which stores manager authentication and profile data.\n\nThis operation requires authentication and authorization to ensure that only permitted users (such as managers or employees) can access sensitive information.\n\nThe returned manager data includes the manager's ID, email, name, and timestamps for record creation and updates. Password hashes are never exposed through this API to maintain security.\n\nThis operation is commonly used in management dashboards or administrative interfaces where individual manager details are displayed for review or further processing.\n\nIf the manager ID does not exist, the API will return a suitable error indicating the resource was not found.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the manager","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Manager entity with full details","typeName":"IJobPerformanceEvalManager"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"This operation updates information for a specific manager based on their unique identifier. The job_performance_eval_managers table is updated with new manager data including email and name fields. The password_hash should be updated via a dedicated password update endpoint (if applicable) and is not part of this general update operation. The operation accepts a validated update request body conforming to IJobPerformanceEvalManager.IUpdate and returns the updated manager entity upon success. Authorization roles include employee and manager with applicable privileges.","path":"/jobPerformanceEval/employee/managers/{id}","method":"put","summary":"Update manager information by ID","description":"Update manager information by ID in the job performance evaluation system. This operation modifies the manager's profile details such as email and name.\n\nPassword changes are not supported in this endpoint and should be managed via a separate password update API to ensure security best practices.\n\nThe operation requires a valid manager ID path parameter and a request body with updated fields respecting data validation rules.\n\nUpon success, the updated manager details are returned.\n\nAuthorization is restricted to employees and managers with rights to edit their own or subordinate profiles.\n\nThis endpoint supports management of user data for authentication and administrative purposes.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the manager","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Manager update request data","typeName":"IJobPerformanceEvalManager.IUpdate"},"responseBody":{"description":"Updated manager entity","typeName":"IJobPerformanceEvalManager"},"authorizationType":null,"authorizationRole":"employee","name":"update"},{"specification":"This operation updates information for a specific manager based on their unique identifier. The job_performance_eval_managers table is updated with new manager data including email and name fields. The password_hash should be updated via a dedicated password update endpoint (if applicable) and is not part of this general update operation. The operation accepts a validated update request body conforming to IJobPerformanceEvalManager.IUpdate and returns the updated manager entity upon success. Authorization roles include employee and manager with applicable privileges.","path":"/jobPerformanceEval/manager/managers/{id}","method":"put","summary":"Update manager information by ID","description":"Update manager information by ID in the job performance evaluation system. This operation modifies the manager's profile details such as email and name.\n\nPassword changes are not supported in this endpoint and should be managed via a separate password update API to ensure security best practices.\n\nThe operation requires a valid manager ID path parameter and a request body with updated fields respecting data validation rules.\n\nUpon success, the updated manager details are returned.\n\nAuthorization is restricted to employees and managers with rights to edit their own or subordinate profiles.\n\nThis endpoint supports management of user data for authentication and administrative purposes.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the manager","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Manager update request data","typeName":"IJobPerformanceEvalManager.IUpdate"},"responseBody":{"description":"Updated manager entity","typeName":"IJobPerformanceEvalManager"},"authorizationType":null,"authorizationRole":"manager","name":"update"},{"specification":"This operation marks a manager record as deleted by setting the deleted_at timestamp in the job performance evaluation system. It performs a soft delete on the job_performance_eval_managers table, ensuring audit trail integrity and data recovery possibilities. Authorization is restricted to employee and manager roles due to the sensitive nature of user accounts deletion. The operation requires the unique manager ID as a path parameter and does not return any response body.","path":"/jobPerformanceEval/employee/managers/{id}","method":"delete","summary":"Soft delete a manager by ID","description":"Soft delete a manager by ID in the job performance evaluation system. This marks the manager record as deleted by setting the deleted_at timestamp.\n\nPhysical removal of the record is not performed to maintain audit trails and data integrity.\n\nThe operation requires a manager ID path parameter.\n\nOnly users with employee and manager privileges can execute this deletion.\n\nThis function is crucial for managing active managers list by logically removing inactive or removed personnel from the system without losing historical records.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the manager","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"employee","name":"erase"},{"specification":"This operation marks a manager record as deleted by setting the deleted_at timestamp in the job performance evaluation system. It performs a soft delete on the job_performance_eval_managers table, ensuring audit trail integrity and data recovery possibilities. Authorization is restricted to employee and manager roles due to the sensitive nature of user accounts deletion. The operation requires the unique manager ID as a path parameter and does not return any response body.","path":"/jobPerformanceEval/manager/managers/{id}","method":"delete","summary":"Soft delete a manager by ID","description":"Soft delete a manager by ID in the job performance evaluation system. This marks the manager record as deleted by setting the deleted_at timestamp.\n\nPhysical removal of the record is not performed to maintain audit trails and data integrity.\n\nThe operation requires a manager ID path parameter.\n\nOnly users with employee and manager privileges can execute this deletion.\n\nThis function is crucial for managing active managers list by logically removing inactive or removed personnel from the system without losing historical records.","parameters":[{"name":"id","in":"path","description":"Unique identifier of the manager","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"erase"},{"specification":"This operation retrieves a list of job groups with advanced filtering, pagination, and sorting capabilities. It operates on the job_performance_eval_job_groups table from the Prisma schema, which stores the top-level job classification including code, name, and description. This endpoint accepts complex search criteria in the request body conforming to IJobPerformanceEvalJobGroups.IRequest, enabling clients to query job groups by code, name, creation date, and other attributes.\n\nThe response is a paginated list of job group summaries optimized for UI display. Typical users of this API are administrative clients or HR systems managing job architecture data. Authorization is restricted to users with employee or manager roles.","path":"/jobPerformanceEval/employee/jobGroups","method":"patch","summary":"Search and retrieve paginated list of job groups","description":"Retrieve filtered and paginated list of job groups in the job performance evaluation system. The operation supports criteria such as code, name, and creation range filtering.\n\nJob groups represent the highest level category of job hierarchy managed within the system.\n\nThis API endpoint provides pagination and sorting features for efficient data handling.\n\nOnly authorized users with employee or manager permissions can access this resource.\n\nThe response provides summarized data of job groups suitable for listings.","parameters":[],"requestBody":{"description":"Job group search and pagination parameters","typeName":"IJobPerformanceEvalJobGroups.IRequest"},"responseBody":{"description":"Paginated list of job group summaries matching criteria","typeName":"IPageIJobPerformanceEvalJobGroups.ISummary"},"authorizationType":null,"authorizationRole":"employee","name":"index"},{"specification":"This operation retrieves a list of job groups with advanced filtering, pagination, and sorting capabilities. It operates on the job_performance_eval_job_groups table from the Prisma schema, which stores the top-level job classification including code, name, and description. This endpoint accepts complex search criteria in the request body conforming to IJobPerformanceEvalJobGroups.IRequest, enabling clients to query job groups by code, name, creation date, and other attributes.\n\nThe response is a paginated list of job group summaries optimized for UI display. Typical users of this API are administrative clients or HR systems managing job architecture data. Authorization is restricted to users with employee or manager roles.","path":"/jobPerformanceEval/manager/jobGroups","method":"patch","summary":"Search and retrieve paginated list of job groups","description":"Retrieve filtered and paginated list of job groups in the job performance evaluation system. The operation supports criteria such as code, name, and creation range filtering.\n\nJob groups represent the highest level category of job hierarchy managed within the system.\n\nThis API endpoint provides pagination and sorting features for efficient data handling.\n\nOnly authorized users with employee or manager permissions can access this resource.\n\nThe response provides summarized data of job groups suitable for listings.","parameters":[],"requestBody":{"description":"Job group search and pagination parameters","typeName":"IJobPerformanceEvalJobGroups.IRequest"},"responseBody":{"description":"Paginated list of job group summaries matching criteria","typeName":"IPageIJobPerformanceEvalJobGroups.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index"},{"specification":"This operation retrieves a specific job group entity by its unique identifier from the job_performance_eval_job_groups table in the Prisma schema. It allows users to fetch detailed information about a job group, including its code, name, description, and timestamps. This is essential for displaying job group details to users such as HR staff or administrators managing job classifications. The operation requires path parameter 'id' adhering to UUID format, which corresponds to the primary key of the job_performance_eval_job_groups table. The response body returns a single IJobPerformanceEvalJobGroup object with full details. Authorization requires 'employee' or 'manager' role to ensure only authenticated users can access job group information. No request body is needed for this GET operation.","path":"/jobPerformanceEval/employee/jobGroups/{id}","method":"get","summary":"Retrieve a job group by its ID from the job_performance_eval_job_groups table.","description":"Retrieve detailed information of a specific job group identified by its unique ID.\n\nThis API retrieves data from the job_performance_eval_job_groups table, including the unique code, name, and optional description of the job group. It is intended for authenticated users who need to view job group details for management or reporting purposes.\n\nSecurity considerations include requiring authenticated access to prevent unauthorized data exposure. The system validates the UUID format of the job group ID.\n\nRelated operations include creating, updating, and deleting job groups which manage the lifecycle of job group records.\n\nThis operation returns the full job group data including timestamps for creation and last update.\n\nErrors such as not found or invalid ID format will result in appropriate HTTP error responses.","parameters":[{"name":"id","description":"Unique identifier of the job group (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Job group details returned from the database","typeName":"IJobPerformanceEvalJobGroup"},"authorizationType":null,"authorizationRole":"employee","name":"at"},{"specification":"This operation retrieves a specific job group entity by its unique identifier from the job_performance_eval_job_groups table in the Prisma schema. It allows users to fetch detailed information about a job group, including its code, name, description, and timestamps. This is essential for displaying job group details to users such as HR staff or administrators managing job classifications. The operation requires path parameter 'id' adhering to UUID format, which corresponds to the primary key of the job_performance_eval_job_groups table. The response body returns a single IJobPerformanceEvalJobGroup object with full details. Authorization requires 'employee' or 'manager' role to ensure only authenticated users can access job group information. No request body is needed for this GET operation.","path":"/jobPerformanceEval/manager/jobGroups/{id}","method":"get","summary":"Retrieve a job group by its ID from the job_performance_eval_job_groups table.","description":"Retrieve detailed information of a specific job group identified by its unique ID.\n\nThis API retrieves data from the job_performance_eval_job_groups table, including the unique code, name, and optional description of the job group. It is intended for authenticated users who need to view job group details for management or reporting purposes.\n\nSecurity considerations include requiring authenticated access to prevent unauthorized data exposure. The system validates the UUID format of the job group ID.\n\nRelated operations include creating, updating, and deleting job groups which manage the lifecycle of job group records.\n\nThis operation returns the full job group data including timestamps for creation and last update.\n\nErrors such as not found or invalid ID format will result in appropriate HTTP error responses.","parameters":[{"name":"id","description":"Unique identifier of the job group (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Job group details returned from the database","typeName":"IJobPerformanceEvalJobGroup"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"This operation creates a new job group record in the job_performance_eval_job_groups table as defined in the Prisma schema. It allows authorized users to add new job groups by submitting a payload containing the required code and name fields, along with optional description. The system enforces uniqueness of the code. Upon successful creation, it returns the created job group with all details including timestamps. Security is enforced by requiring 'manager' role authorization to prevent unauthorized creation of job groups. This operation uses POST method and requires request body of type IJobPerformanceEvalJobGroup.ICreate.","path":"/jobPerformanceEval/manager/jobGroups","method":"post","summary":"Create a new job group in job_performance_eval_job_groups table.","description":"Create a new job group entry in the system.\n\nThis API allows authorized managers to add new job groups used in the organizational hierarchy. The input includes unique code, name, and optional description. The system validates uniqueness of the code.\n\nSecurity measures require 'manager' role authorization to restrict access to authorized personnel only.\n\nOn success, the API returns the created job group record with detailed attributes including creation and update timestamps.\n\nRelated operations are retrieving, updating, and deleting job groups.\n\nValidation errors or duplicate codes will result in error responses.","parameters":[],"requestBody":{"description":"Request body to create a job group","typeName":"IJobPerformanceEvalJobGroup.ICreate"},"responseBody":{"description":"Created job group details","typeName":"IJobPerformanceEvalJobGroup"},"authorizationType":null,"authorizationRole":"manager","name":"create"},{"specification":"This operation updates an existing job group record identified by its UUID in the job_performance_eval_job_groups table. It allows authorized users to modify fields like code, name, and description. Uniqueness of the code is enforced during updates. The request requires path parameter 'id' specifying the job group to update and the update payload matching IJobPerformanceEvalJobGroup.IUpdate schema. Success response returns the updated job group details. Authorization is limited to users having 'manager' role. Validation ensures the UUID parameter is valid and the payload respects schema constraints.","path":"/jobPerformanceEval/manager/jobGroups/{id}","method":"put","summary":"Update a job group by its ID in job_performance_eval_job_groups table.","description":"Update details of a specific job group by ID.\n\nAllows authorized managers to modify existing job group information. Fields such as the code, name, and description can be updated. The system checks for unique code constraints on update.\n\nThis operation requires path parameter 'id' as UUID to identify the job group. The request body must conform to IJobPerformanceEvalJobGroup.IUpdate type.\n\nSecurity restrictions limit access to 'manager' users.\n\nUpon success, returns the updated job group details.\n\nErrors include not found, invalid UUID, or validation failures for input fields.\n\nRelated endpoints include creating and deleting job groups.","parameters":[{"name":"id","description":"Unique identifier of the job group (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request body to update a job group","typeName":"IJobPerformanceEvalJobGroup.IUpdate"},"responseBody":{"description":"Updated job group details","typeName":"IJobPerformanceEvalJobGroup"},"authorizationType":null,"authorizationRole":"manager","name":"update"},{"specification":"This operation permanently deletes a job group record identified by its UUID in the job_performance_eval_job_groups table. This is a hard delete operation as there is no soft-delete mechanism defined in the schema for this table. The request requires the path parameter 'id' representing the job group ID. Authorization is restricted to users with 'manager' role due to the sensitive nature of data deletion. No request body is expected. No response body is returned upon successful deletion. Errors include not found or unauthorized access.","path":"/jobPerformanceEval/manager/jobGroups/{id}","method":"delete","summary":"Delete a job group by ID (hard delete) in job_performance_eval_job_groups table.","description":"Permanently remove a job group from the system by its ID.\n\nThis operation performs a hard delete of the job group record from the job_performance_eval_job_groups table. Once deleted, the record cannot be recovered.\n\nBecause there is no soft delete timestamp in this schema, the deletion is permanent.\n\nPath parameter 'id' specifies the target job group's UUID.\n\nAccess is restricted to 'manager' users to prevent accidental or unauthorized deletion.\n\nNo request body is required. On success, the operation returns no content.\n\nRelevant related operations include retrieval, creation, and update of job groups.","parameters":[{"name":"id","description":"Unique identifier of the job group (UUID)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"erase"},{"specification":"This operation retrieves a list of job series associated with a specific job group from the job_performance_eval_job_series table. It supports advanced filtering, searching, and pagination within the context of a single job group identified by 'jobGroupId'. The job series entries include details such as code, name, description, and timestamps. This API enables authorized employees or managers to browse job series under a job group with efficient search and sorting capabilities.","description":"Retrieve a filtered and paginated list of job series under a specified job group. This operation provides detailed access to job series data within the context of the job group identified by the path parameter 'jobGroupId'. Users with roles 'employee' or 'manager' can perform advanced searches and sorting to locate particular job series relevant to organizational management.\n\nSecurity considerations include role-based access control, ensuring only employees and managers authorized for the job group can access job series data. The operation correlates directly with the 'job_performance_eval_job_series' table in the Prisma schema, utilizing properties such as 'code', 'name', 'description', and relational constraints referencing the parent job group.\n\nThis endpoint supports pagination and search criteria passed in the request body to enable scalable data retrieval. The response includes a paginated list of summarized job series entries optimized for list displays.","summary":"List and search job series within a specific job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"}],"requestBody":{"description":"Search criteria and pagination parameters for job series filtering","typeName":"IJobPerformanceEvalJobSeries.IRequest"},"responseBody":{"description":"Paginated list of job series summary information matching search criteria","typeName":"IPageIJobPerformanceEvalJobSeries.ISummary"},"authorizationType":null,"authorizationRole":"employee","name":"index","path":"/jobPerformanceEval/employee/jobGroups/{jobGroupId}/jobSeries","method":"patch"},{"specification":"This operation retrieves a list of job series associated with a specific job group from the job_performance_eval_job_series table. It supports advanced filtering, searching, and pagination within the context of a single job group identified by 'jobGroupId'. The job series entries include details such as code, name, description, and timestamps. This API enables authorized employees or managers to browse job series under a job group with efficient search and sorting capabilities.","description":"Retrieve a filtered and paginated list of job series under a specified job group. This operation provides detailed access to job series data within the context of the job group identified by the path parameter 'jobGroupId'. Users with roles 'employee' or 'manager' can perform advanced searches and sorting to locate particular job series relevant to organizational management.\n\nSecurity considerations include role-based access control, ensuring only employees and managers authorized for the job group can access job series data. The operation correlates directly with the 'job_performance_eval_job_series' table in the Prisma schema, utilizing properties such as 'code', 'name', 'description', and relational constraints referencing the parent job group.\n\nThis endpoint supports pagination and search criteria passed in the request body to enable scalable data retrieval. The response includes a paginated list of summarized job series entries optimized for list displays.","summary":"List and search job series within a specific job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"}],"requestBody":{"description":"Search criteria and pagination parameters for job series filtering","typeName":"IJobPerformanceEvalJobSeries.IRequest"},"responseBody":{"description":"Paginated list of job series summary information matching search criteria","typeName":"IPageIJobPerformanceEvalJobSeries.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index","path":"/jobPerformanceEval/manager/jobGroups/{jobGroupId}/jobSeries","method":"patch"},{"specification":"This operation retrieves detailed information for a specific job series identified by 'jobSeriesId' within a particular job group 'jobGroupId'. It accesses the job_performance_eval_job_series table to provide all relevant fields inclusive of the job group's relationship, codes, descriptions, and timestamps.\n\nThe endpoint is designed for users needing thorough details on a singular job series entity for purposes such as editing, review, or hierarchical navigation. Authorization ensures that only employees and managers with appropriate permissions can access detailed job series data.","description":"Retrieve detailed information about a specific job series within the given job group. This endpoint provides comprehensive data stored in the 'job_performance_eval_job_series' table including unique code, name, description, creation and modification timestamps.\n\nSecurity considerations ensure that only authorized employees or managers can access this detailed information. The operation validates 'jobGroupId' and 'jobSeriesId' parameters to correctly locate the requested job series.\n\nThis operation is essential for UI detail views or administrative workflows requiring single job series data retrieval.","summary":"Retrieve a specific job series by ID within a job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"},{"name":"jobSeriesId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job series"}],"requestBody":null,"responseBody":{"description":"Detailed job series information","typeName":"IJobPerformanceEvalJobSeries"},"authorizationType":null,"authorizationRole":"employee","name":"at","path":"/jobPerformanceEval/employee/jobGroups/{jobGroupId}/jobSeries/{jobSeriesId}","method":"get"},{"specification":"This operation retrieves detailed information for a specific job series identified by 'jobSeriesId' within a particular job group 'jobGroupId'. It accesses the job_performance_eval_job_series table to provide all relevant fields inclusive of the job group's relationship, codes, descriptions, and timestamps.\n\nThe endpoint is designed for users needing thorough details on a singular job series entity for purposes such as editing, review, or hierarchical navigation. Authorization ensures that only employees and managers with appropriate permissions can access detailed job series data.","description":"Retrieve detailed information about a specific job series within the given job group. This endpoint provides comprehensive data stored in the 'job_performance_eval_job_series' table including unique code, name, description, creation and modification timestamps.\n\nSecurity considerations ensure that only authorized employees or managers can access this detailed information. The operation validates 'jobGroupId' and 'jobSeriesId' parameters to correctly locate the requested job series.\n\nThis operation is essential for UI detail views or administrative workflows requiring single job series data retrieval.","summary":"Retrieve a specific job series by ID within a job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"},{"name":"jobSeriesId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job series"}],"requestBody":null,"responseBody":{"description":"Detailed job series information","typeName":"IJobPerformanceEvalJobSeries"},"authorizationType":null,"authorizationRole":"manager","name":"at","path":"/jobPerformanceEval/manager/jobGroups/{jobGroupId}/jobSeries/{jobSeriesId}","method":"get"},{"specification":"This operation creates a new job series under a specified job group in the job_performance_eval_job_series table. It accepts input data describing the job series properties such as code, name, and optional description. The system ensures the job series is linked with the parent job group identified by 'jobGroupId'.\n\nThis API operation supports organizational hierarchy expansion by enabling authorized employees and managers to add new job series entities. Validation rules ensure the uniqueness of the job series code within the database.\n\nSecurity roles restrict creation to employees and managers with appropriate permissions. The result is the newly created job series details returned in the response.","description":"Create a new job series under the specified job group. The input includes details needed to define the job series such as its unique code, name, and description optionally.\n\nThe operation respects the relationship to the parent job group to maintain organizational hierarchy. Access control limits this operation to employees and managers with appropriate authorization.\n\nA successful creation returns the full details of the newly created job series entry.","summary":"Create a new job series under a job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"}],"requestBody":{"description":"Creation data for a new job series","typeName":"IJobPerformanceEvalJobSeries.ICreate"},"responseBody":{"description":"Details of the newly created job series","typeName":"IJobPerformanceEvalJobSeries"},"authorizationType":null,"authorizationRole":"employee","name":"create","path":"/jobPerformanceEval/employee/jobGroups/{jobGroupId}/jobSeries","method":"post"},{"specification":"This operation creates a new job series under a specified job group in the job_performance_eval_job_series table. It accepts input data describing the job series properties such as code, name, and optional description. The system ensures the job series is linked with the parent job group identified by 'jobGroupId'.\n\nThis API operation supports organizational hierarchy expansion by enabling authorized employees and managers to add new job series entities. Validation rules ensure the uniqueness of the job series code within the database.\n\nSecurity roles restrict creation to employees and managers with appropriate permissions. The result is the newly created job series details returned in the response.","description":"Create a new job series under the specified job group. The input includes details needed to define the job series such as its unique code, name, and description optionally.\n\nThe operation respects the relationship to the parent job group to maintain organizational hierarchy. Access control limits this operation to employees and managers with appropriate authorization.\n\nA successful creation returns the full details of the newly created job series entry.","summary":"Create a new job series under a job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"}],"requestBody":{"description":"Creation data for a new job series","typeName":"IJobPerformanceEvalJobSeries.ICreate"},"responseBody":{"description":"Details of the newly created job series","typeName":"IJobPerformanceEvalJobSeries"},"authorizationType":null,"authorizationRole":"manager","name":"create","path":"/jobPerformanceEval/manager/jobGroups/{jobGroupId}/jobSeries","method":"post"},{"specification":"This operation updates an existing job series identified by 'jobSeriesId' within a specified job group 'jobGroupId'. It modifies fields such as code, name, and description in the job_performance_eval_job_series table, preserving relationships and audit timestamps.\n\nValidation ensures the uniqueness of codes and the existence of the target job series within the job group. Security roles enforce update permissions to employees and managers.\n\nThe endpoint returns the updated job series details to confirm changes.","description":"Update an existing job series under the given job group. Input data may include updates to the job series code, name, and description.\n\nThe operation ensures the target job series identified by path parameters exists and is properly linked to the specified job group.\n\nRole-based access restricts operation to authorized employees and managers.\n\nReturn data includes the updated details after successful update.","summary":"Update a specific job series within a job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"},{"name":"jobSeriesId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job series"}],"requestBody":{"description":"Updated data for the job series","typeName":"IJobPerformanceEvalJobSeries.IUpdate"},"responseBody":{"description":"Details of the updated job series","typeName":"IJobPerformanceEvalJobSeries"},"authorizationType":null,"authorizationRole":"employee","name":"update","path":"/jobPerformanceEval/employee/jobGroups/{jobGroupId}/jobSeries/{jobSeriesId}","method":"put"},{"specification":"This operation updates an existing job series identified by 'jobSeriesId' within a specified job group 'jobGroupId'. It modifies fields such as code, name, and description in the job_performance_eval_job_series table, preserving relationships and audit timestamps.\n\nValidation ensures the uniqueness of codes and the existence of the target job series within the job group. Security roles enforce update permissions to employees and managers.\n\nThe endpoint returns the updated job series details to confirm changes.","description":"Update an existing job series under the given job group. Input data may include updates to the job series code, name, and description.\n\nThe operation ensures the target job series identified by path parameters exists and is properly linked to the specified job group.\n\nRole-based access restricts operation to authorized employees and managers.\n\nReturn data includes the updated details after successful update.","summary":"Update a specific job series within a job group","parameters":[{"name":"jobGroupId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job group"},{"name":"jobSeriesId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target job series"}],"requestBody":{"description":"Updated data for the job series","typeName":"IJobPerformanceEvalJobSeries.IUpdate"},"responseBody":{"description":"Details of the updated job series","typeName":"IJobPerformanceEvalJobSeries"},"authorizationType":null,"authorizationRole":"manager","name":"update","path":"/jobPerformanceEval/manager/jobGroups/{jobGroupId}/jobSeries/{jobSeriesId}","method":"put"},{"specification":"This operation deletes a specific job series identified by its UUID, operating on the job_performance_eval_job_series table in the Prisma schema. This endpoint performs a hard delete, permanently removing the record and all related data due to absence of explicit soft delete handling in delete operation. It requires the jobGroupId path parameter to specify the parent job group and the jobSeriesId path parameter to identify the job series to delete. Only authorized users with employee or manager roles can perform deletions. The operation does not return a response body, and access control is critical to prevent unauthorized data removal.","description":"This DELETE operation targets the job_performance_eval_job_series table, allowing authorized users to permanently remove a specific job series by its unique identifier.\n\nAs the job series is hierarchically linked to a job group, this endpoint requires both the jobGroupId and jobSeriesId path parameters for precise identification.\n\nThe system performs a hard delete; records are irreversibly removed from the database with no recovery option. Appropriate authorization checks ensure that only users with roles 'employee' or 'manager' can access this endpoint to protect data integrity.\n\nNo response body is returned upon successful deletion. Error handling includes notifying the client if the specified job series does not exist or unauthorized access is attempted.","summary":"Permanently delete a specific job series by ID within a job group","parameters":[{"name":"jobGroupId","description":"UUID of the parent job group for context","schema":{"type":"string","format":"uuid"}},{"name":"jobSeriesId","description":"UUID of the target job series to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"employee","path":"/jobPerformanceEval/employee/jobGroups/{jobGroupId}/jobSeries/{jobSeriesId}","method":"delete","name":"erase"},{"specification":"This operation deletes a specific job series identified by its UUID, operating on the job_performance_eval_job_series table in the Prisma schema. This endpoint performs a hard delete, permanently removing the record and all related data due to absence of explicit soft delete handling in delete operation. It requires the jobGroupId path parameter to specify the parent job group and the jobSeriesId path parameter to identify the job series to delete. Only authorized users with employee or manager roles can perform deletions. The operation does not return a response body, and access control is critical to prevent unauthorized data removal.","description":"This DELETE operation targets the job_performance_eval_job_series table, allowing authorized users to permanently remove a specific job series by its unique identifier.\n\nAs the job series is hierarchically linked to a job group, this endpoint requires both the jobGroupId and jobSeriesId path parameters for precise identification.\n\nThe system performs a hard delete; records are irreversibly removed from the database with no recovery option. Appropriate authorization checks ensure that only users with roles 'employee' or 'manager' can access this endpoint to protect data integrity.\n\nNo response body is returned upon successful deletion. Error handling includes notifying the client if the specified job series does not exist or unauthorized access is attempted.","summary":"Permanently delete a specific job series by ID within a job group","parameters":[{"name":"jobGroupId","description":"UUID of the parent job group for context","schema":{"type":"string","format":"uuid"}},{"name":"jobSeriesId","description":"UUID of the target job series to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","path":"/jobPerformanceEval/manager/jobGroups/{jobGroupId}/jobSeries/{jobSeriesId}","method":"delete","name":"erase"},{"specification":"Retrieve a paginated list of job roles associated with a specific job series, using the job_performance_eval_job_roles table in Prisma schema. This operation supports complex search, filtering, and sorting based on provided criteria. It requires the jobSeriesId path parameter to filter roles under a given job series. The request body allows filtering by attributes such as name or growth level, and pagination control. The response body returns a paginated list of job role summaries. This is primarily a read operation accessible to employee and manager roles to explore job roles in the system.","description":"This PATCH operation enables clients to search and retrieve a paginated list of job roles under a specified job series.\n\nThe jobSeriesId path parameter scopes the roles within the specified job series. The request body supports various filtering options such as job role name, growth level, and other attributes.\n\nResults are paginated and sortable, providing efficient querying capabilities for large datasets.\n\nAuthorization is set to allow employees and managers to access this operation.\n\nThe response contains a paginated collection of job role summaries, useful for display in UI listings or further processing.","summary":"Search and list job roles within a job series with pagination and filtering","parameters":[{"name":"jobSeriesId","description":"UUID of the job series to list roles for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for job role search","typeName":"IJobPerformanceEvalJobRole.IRequest"},"responseBody":{"description":"Paginated list of job role summaries matching search criteria","typeName":"IPageIJobPerformanceEvalJobRole.ISummary"},"authorizationType":null,"authorizationRole":"employee","path":"/jobPerformanceEval/employee/jobSeries/{jobSeriesId}/jobRoles","method":"patch","name":"index"},{"specification":"Retrieve a paginated list of job roles associated with a specific job series, using the job_performance_eval_job_roles table in Prisma schema. This operation supports complex search, filtering, and sorting based on provided criteria. It requires the jobSeriesId path parameter to filter roles under a given job series. The request body allows filtering by attributes such as name or growth level, and pagination control. The response body returns a paginated list of job role summaries. This is primarily a read operation accessible to employee and manager roles to explore job roles in the system.","description":"This PATCH operation enables clients to search and retrieve a paginated list of job roles under a specified job series.\n\nThe jobSeriesId path parameter scopes the roles within the specified job series. The request body supports various filtering options such as job role name, growth level, and other attributes.\n\nResults are paginated and sortable, providing efficient querying capabilities for large datasets.\n\nAuthorization is set to allow employees and managers to access this operation.\n\nThe response contains a paginated collection of job role summaries, useful for display in UI listings or further processing.","summary":"Search and list job roles within a job series with pagination and filtering","parameters":[{"name":"jobSeriesId","description":"UUID of the job series to list roles for","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filter and pagination parameters for job role search","typeName":"IJobPerformanceEvalJobRole.IRequest"},"responseBody":{"description":"Paginated list of job role summaries matching search criteria","typeName":"IPageIJobPerformanceEvalJobRole.ISummary"},"authorizationType":null,"authorizationRole":"manager","path":"/jobPerformanceEval/manager/jobSeries/{jobSeriesId}/jobRoles","method":"patch","name":"index"},{"specification":"Retrieve detailed information of a specific job role under a job series, using the job_performance_eval_job_roles table in Prisma schema. This operation requires the jobSeriesId and jobRoleId path parameters to identify the exact job role. It is a read-only GET operation returning full details of the job role, including codes, names, descriptions, growth level, and timestamps. Authorization is limited to employee and manager roles. No request body is needed, and the response body contains the job role entity.","description":"This GET operation fetches detailed information of a specific job role identified by jobRoleId, scoped within a job series identified by jobSeriesId.\n\nThe endpoint ensures hierarchical integrity by requiring the parent jobSeriesId.\n\nAuthorized employees and managers can retrieve fields including code, name, description, growth level, creation and update timestamps.\n\nNo request body is necessary. The operation returns a full entity representation for use in detailed views or editing.","summary":"Get detailed information of a specific job role by ID under a job series","parameters":[{"name":"jobSeriesId","description":"UUID of the parent job series","schema":{"type":"string","format":"uuid"}},{"name":"jobRoleId","description":"UUID of the target job role","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job role entity","typeName":"IJobPerformanceEvalJobRole"},"authorizationType":null,"authorizationRole":"employee","path":"/jobPerformanceEval/employee/jobSeries/{jobSeriesId}/jobRoles/{jobRoleId}","method":"get","name":"at"},{"specification":"Retrieve detailed information of a specific job role under a job series, using the job_performance_eval_job_roles table in Prisma schema. This operation requires the jobSeriesId and jobRoleId path parameters to identify the exact job role. It is a read-only GET operation returning full details of the job role, including codes, names, descriptions, growth level, and timestamps. Authorization is limited to employee and manager roles. No request body is needed, and the response body contains the job role entity.","description":"This GET operation fetches detailed information of a specific job role identified by jobRoleId, scoped within a job series identified by jobSeriesId.\n\nThe endpoint ensures hierarchical integrity by requiring the parent jobSeriesId.\n\nAuthorized employees and managers can retrieve fields including code, name, description, growth level, creation and update timestamps.\n\nNo request body is necessary. The operation returns a full entity representation for use in detailed views or editing.","summary":"Get detailed information of a specific job role by ID under a job series","parameters":[{"name":"jobSeriesId","description":"UUID of the parent job series","schema":{"type":"string","format":"uuid"}},{"name":"jobRoleId","description":"UUID of the target job role","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job role entity","typeName":"IJobPerformanceEvalJobRole"},"authorizationType":null,"authorizationRole":"manager","path":"/jobPerformanceEval/manager/jobSeries/{jobSeriesId}/jobRoles/{jobRoleId}","method":"get","name":"at"},{"specification":"Create a new job role within a specified job series, using the job_performance_eval_job_roles table in the Prisma schema. The operation requires the jobSeriesId path parameter to indicate the parent job series. The request body contains the data necessary for job role creation, including code, name, description, optional growth level, and timestamps handled by the server. The response returns the newly created job role entity. Access is granted to employee and manager roles able to manage job roles within their domain.","description":"This POST operation allows for creation of a new job role linked to a specific job series.\n\nThe jobSeriesId path parameter ensures the role is correctly associated with the parent job series.\n\nThe request body captures all required and optional job role details, following the schema's definitions for creation data.\n\nThe newly created job role entity is returned upon success for immediate client-side use.\n\nAuthorization is granted to employees and managers with appropriate privileges to add job roles.","summary":"Create a new job role under a specified job series","parameters":[{"name":"jobSeriesId","description":"UUID of the parent job series","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New job role creation data","typeName":"IJobPerformanceEvalJobRole.ICreate"},"responseBody":{"description":"Created job role entity","typeName":"IJobPerformanceEvalJobRole"},"authorizationType":null,"authorizationRole":"employee","path":"/jobPerformanceEval/employee/jobSeries/{jobSeriesId}/jobRoles","method":"post","name":"create"},{"specification":"Create a new job role within a specified job series, using the job_performance_eval_job_roles table in the Prisma schema. The operation requires the jobSeriesId path parameter to indicate the parent job series. The request body contains the data necessary for job role creation, including code, name, description, optional growth level, and timestamps handled by the server. The response returns the newly created job role entity. Access is granted to employee and manager roles able to manage job roles within their domain.","description":"This POST operation allows for creation of a new job role linked to a specific job series.\n\nThe jobSeriesId path parameter ensures the role is correctly associated with the parent job series.\n\nThe request body captures all required and optional job role details, following the schema's definitions for creation data.\n\nThe newly created job role entity is returned upon success for immediate client-side use.\n\nAuthorization is granted to employees and managers with appropriate privileges to add job roles.","summary":"Create a new job role under a specified job series","parameters":[{"name":"jobSeriesId","description":"UUID of the parent job series","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New job role creation data","typeName":"IJobPerformanceEvalJobRole.ICreate"},"responseBody":{"description":"Created job role entity","typeName":"IJobPerformanceEvalJobRole"},"authorizationType":null,"authorizationRole":"manager","path":"/jobPerformanceEval/manager/jobSeries/{jobSeriesId}/jobRoles","method":"post","name":"create"},{"specification":"This operation updates an existing job role associated with the given job series. It allows modification of job role details such as code, name, description, growth level, timestamps, and soft deletion status. The underlying Prisma table is 'job_performance_eval_job_roles', representing specific job functions within a job series hierarchy. The update requires the job series ID as a path parameter to ensure the role belongs to the correct series and the job role ID to identify the specific role to update. Updates must maintain data integrity and enforce unique constraints on code. Request body must conform to IJobPerformanceEvalJobRole.IUpdate DTO with validation according to the Prisma schema. Users with 'employee' or 'manager' roles can be authorized to perform this update.","authorizationRole":"employee","authorizationType":null,"description":"This endpoint updates details of a specific job role attached to a job series, enabling editing of role code, name, description, and growth level classifications. It operates on the 'job_performance_eval_job_roles' table in the database, which stores the hierarchical job role structures used for employee job assignments and evaluations.\n\nUsers with appropriate privileges such as 'employee' or 'manager' roles can modify job role details to keep job definitions current and aligned with organizational needs.\n\nThe operation enforces validation rules for unique codes and proper data types. It uses path parameters 'jobSeriesId' and 'jobRoleId' to target the precise job role resource while preserving referential integrity in the job hierarchy.\n\nIn case of data conflicts such as duplicate codes, the operation will reject the update with appropriate errors.","method":"put","name":"update","path":"/jobPerformanceEval/employee/jobSeries/{jobSeriesId}/jobRoles/{jobRoleId}","parameters":[{"description":"Unique identifier of the target job series","in":"path","name":"jobSeriesId","schema":{"format":"uuid","type":"string"}},{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}}],"requestBody":{"description":"Update data for job role","typeName":"IJobPerformanceEvalJobRole.IUpdate"},"responseBody":{"description":"Updated job role detail","typeName":"IJobPerformanceEvalJobRole"},"summary":"Update a specific job role in a job series"},{"specification":"This operation updates an existing job role associated with the given job series. It allows modification of job role details such as code, name, description, growth level, timestamps, and soft deletion status. The underlying Prisma table is 'job_performance_eval_job_roles', representing specific job functions within a job series hierarchy. The update requires the job series ID as a path parameter to ensure the role belongs to the correct series and the job role ID to identify the specific role to update. Updates must maintain data integrity and enforce unique constraints on code. Request body must conform to IJobPerformanceEvalJobRole.IUpdate DTO with validation according to the Prisma schema. Users with 'employee' or 'manager' roles can be authorized to perform this update.","authorizationRole":"manager","authorizationType":null,"description":"This endpoint updates details of a specific job role attached to a job series, enabling editing of role code, name, description, and growth level classifications. It operates on the 'job_performance_eval_job_roles' table in the database, which stores the hierarchical job role structures used for employee job assignments and evaluations.\n\nUsers with appropriate privileges such as 'employee' or 'manager' roles can modify job role details to keep job definitions current and aligned with organizational needs.\n\nThe operation enforces validation rules for unique codes and proper data types. It uses path parameters 'jobSeriesId' and 'jobRoleId' to target the precise job role resource while preserving referential integrity in the job hierarchy.\n\nIn case of data conflicts such as duplicate codes, the operation will reject the update with appropriate errors.","method":"put","name":"update","path":"/jobPerformanceEval/manager/jobSeries/{jobSeriesId}/jobRoles/{jobRoleId}","parameters":[{"description":"Unique identifier of the target job series","in":"path","name":"jobSeriesId","schema":{"format":"uuid","type":"string"}},{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}}],"requestBody":{"description":"Update data for job role","typeName":"IJobPerformanceEvalJobRole.IUpdate"},"responseBody":{"description":"Updated job role detail","typeName":"IJobPerformanceEvalJobRole"},"summary":"Update a specific job role in a job series"},{"specification":"This operation permanently removes a job role within a specific job series. It deletes the record in the 'job_performance_eval_job_roles' Prisma table. The deletion is hard (not soft) due to no soft delete handling in this context, meaning the record is removed completely and irreversibly. The operation requires 'jobSeriesId' and 'jobRoleId' to identify the specific role within the job series to delete. Users with 'employee' or 'manager' roles can be authorized to perform this operation. No request body or response body is required.","authorizationRole":"employee","authorizationType":null,"description":"Deletes a job role permanently from the given job series by its identifier. This operation affects the 'job_performance_eval_job_roles' table, removing the job role record entirely from the database.\n\nWhile the 'job_performance_eval_job_roles' table supports a 'deleted_at' field for soft deletion, this operation performs hard delete, permanently removing data without recovery.\n\nUsers with 'employee' or 'manager' roles are authorized to carry out this operation.\n\nThere is no request body or returned response content for this deletion. Appropriate errors will be returned if the identifiers do not exist.","method":"delete","name":"erase","path":"/jobPerformanceEval/employee/jobSeries/{jobSeriesId}/jobRoles/{jobRoleId}","parameters":[{"description":"Unique identifier of the target job series","in":"path","name":"jobSeriesId","schema":{"format":"uuid","type":"string"}},{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}}],"requestBody":null,"responseBody":null,"summary":"Permanently delete a job role from a job series"},{"specification":"This operation permanently removes a job role within a specific job series. It deletes the record in the 'job_performance_eval_job_roles' Prisma table. The deletion is hard (not soft) due to no soft delete handling in this context, meaning the record is removed completely and irreversibly. The operation requires 'jobSeriesId' and 'jobRoleId' to identify the specific role within the job series to delete. Users with 'employee' or 'manager' roles can be authorized to perform this operation. No request body or response body is required.","authorizationRole":"manager","authorizationType":null,"description":"Deletes a job role permanently from the given job series by its identifier. This operation affects the 'job_performance_eval_job_roles' table, removing the job role record entirely from the database.\n\nWhile the 'job_performance_eval_job_roles' table supports a 'deleted_at' field for soft deletion, this operation performs hard delete, permanently removing data without recovery.\n\nUsers with 'employee' or 'manager' roles are authorized to carry out this operation.\n\nThere is no request body or returned response content for this deletion. Appropriate errors will be returned if the identifiers do not exist.","method":"delete","name":"erase","path":"/jobPerformanceEval/manager/jobSeries/{jobSeriesId}/jobRoles/{jobRoleId}","parameters":[{"description":"Unique identifier of the target job series","in":"path","name":"jobSeriesId","schema":{"format":"uuid","type":"string"}},{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}}],"requestBody":null,"responseBody":null,"summary":"Permanently delete a job role from a job series"},{"specification":"This operation retrieves a paginated list of task groups associated with a specific job role. Task groups organize related tasks under the job role for better management and categorization. The Prisma table is 'job_performance_eval_task_groups'. This operation supports complex filtering, sorting, and pagination, taking a request body of type IJobPerformanceEvalTaskGroup.IRequest. The response is a paginated list of task group summaries in IPageIJobPerformanceEvalTaskGroup.ISummary. Users with 'employee' or 'manager' roles can authenticate to use this endpoint.","authorizationRole":"employee","authorizationType":null,"description":"This endpoint returns a filtered and paginated list of task groups under a given job role. Task groups are logical groupings of tasks relevant to the job role, facilitating clearer management and categorization.\n\nUsers with authorized roles 'employee' or 'manager' can access this list.\n\nFiltering, sorting, and pagination parameters can be provided in the request body to refine the results.\n\nThis operation corresponds to the 'job_performance_eval_task_groups' table, returning summaries of task group entries.\n\nThe response includes paginated data structured to enable efficient client-side rendering and navigation through potentially large datasets.","method":"patch","name":"index","path":"/jobPerformanceEval/employee/jobRoles/{jobRoleId}/taskGroups","parameters":[{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}}],"requestBody":{"description":"Filtering and pagination criteria for task groups","typeName":"IJobPerformanceEvalTaskGroup.IRequest"},"responseBody":{"description":"Paginated task group summaries","typeName":"IPageIJobPerformanceEvalTaskGroup.ISummary"},"summary":"List task groups of a job role with filtering"},{"specification":"This operation retrieves a paginated list of task groups associated with a specific job role. Task groups organize related tasks under the job role for better management and categorization. The Prisma table is 'job_performance_eval_task_groups'. This operation supports complex filtering, sorting, and pagination, taking a request body of type IJobPerformanceEvalTaskGroup.IRequest. The response is a paginated list of task group summaries in IPageIJobPerformanceEvalTaskGroup.ISummary. Users with 'employee' or 'manager' roles can authenticate to use this endpoint.","authorizationRole":"manager","authorizationType":null,"description":"This endpoint returns a filtered and paginated list of task groups under a given job role. Task groups are logical groupings of tasks relevant to the job role, facilitating clearer management and categorization.\n\nUsers with authorized roles 'employee' or 'manager' can access this list.\n\nFiltering, sorting, and pagination parameters can be provided in the request body to refine the results.\n\nThis operation corresponds to the 'job_performance_eval_task_groups' table, returning summaries of task group entries.\n\nThe response includes paginated data structured to enable efficient client-side rendering and navigation through potentially large datasets.","method":"patch","name":"index","path":"/jobPerformanceEval/manager/jobRoles/{jobRoleId}/taskGroups","parameters":[{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}}],"requestBody":{"description":"Filtering and pagination criteria for task groups","typeName":"IJobPerformanceEvalTaskGroup.IRequest"},"responseBody":{"description":"Paginated task group summaries","typeName":"IPageIJobPerformanceEvalTaskGroup.ISummary"},"summary":"List task groups of a job role with filtering"},{"specification":"This operation retrieves detailed information about a specific task group identified by its ID under a job role. The data is sourced from the 'job_performance_eval_task_groups' Prisma table. The request requires path parameters 'jobRoleId' and 'taskGroupId' to locate the resource. The response returns the detailed task group entity as IJobPerformanceEvalTaskGroup. Users with 'employee' or 'manager' roles can access this endpoint.","authorizationRole":"employee","authorizationType":null,"description":"This endpoint fetches detailed information about a specific task group within a job role. Task groups consist of related tasks grouped for better organization and management.\n\nThe operation relies on 'jobRoleId' and 'taskGroupId' path parameters to locate the targeted task group record in the database.\n\nUsers with roles 'employee' or 'manager' have access to this endpoint for security reasons.\n\nThe returned data includes all relevant properties of the task group entity as defined in the Prisma schema, suitable for full detail views or editing interfaces.","method":"get","name":"at","path":"/jobPerformanceEval/employee/jobRoles/{jobRoleId}/taskGroups/{taskGroupId}","parameters":[{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}},{"description":"Unique identifier of the target task group","in":"path","name":"taskGroupId","schema":{"format":"uuid","type":"string"}}],"requestBody":null,"responseBody":{"description":"Detailed task group entity","typeName":"IJobPerformanceEvalTaskGroup"},"summary":"Get detailed task group information by ID"},{"specification":"This operation retrieves detailed information about a specific task group identified by its ID under a job role. The data is sourced from the 'job_performance_eval_task_groups' Prisma table. The request requires path parameters 'jobRoleId' and 'taskGroupId' to locate the resource. The response returns the detailed task group entity as IJobPerformanceEvalTaskGroup. Users with 'employee' or 'manager' roles can access this endpoint.","authorizationRole":"manager","authorizationType":null,"description":"This endpoint fetches detailed information about a specific task group within a job role. Task groups consist of related tasks grouped for better organization and management.\n\nThe operation relies on 'jobRoleId' and 'taskGroupId' path parameters to locate the targeted task group record in the database.\n\nUsers with roles 'employee' or 'manager' have access to this endpoint for security reasons.\n\nThe returned data includes all relevant properties of the task group entity as defined in the Prisma schema, suitable for full detail views or editing interfaces.","method":"get","name":"at","path":"/jobPerformanceEval/manager/jobRoles/{jobRoleId}/taskGroups/{taskGroupId}","parameters":[{"description":"Unique identifier of the target job role","in":"path","name":"jobRoleId","schema":{"format":"uuid","type":"string"}},{"description":"Unique identifier of the target task group","in":"path","name":"taskGroupId","schema":{"format":"uuid","type":"string"}}],"requestBody":null,"responseBody":{"description":"Detailed task group entity","typeName":"IJobPerformanceEvalTaskGroup"},"summary":"Get detailed task group information by ID"},{"specification":"This operation creates a new task group under a specific job role in the Job Performance Evaluation system, using the path parameter 'jobRoleId' to identify the parent job role. It corresponds to the 'job_performance_eval_task_groups' table in the Prisma schema, which organizes related tasks under job roles. The creation request requires a unique code, name, and optional description for the task group. It maintains referential integrity by linking to the parent job role and ensures that system-managed fields such as timestamps are handled internally. This endpoint is designed for authorized employees to manage organizational job structures.","description":"Creates a new task group within the specified job role.\n\nThis API enables authorized users to add a task group that logically organizes tasks under a given job role identified by 'jobRoleId'. The task group must have a unique 'code' and a descriptive 'name'; an optional 'description' may also be included.\n\nThe operation ensures hierarchical consistency and enforces uniqueness rules as per the Prisma schema definition. System fields like 'created_at' and 'updated_at' are managed automatically.\n\nErrors due to invalid 'jobRoleId' or duplicate 'code' will result in appropriate error responses.\n\nThis operation supports organizational hierarchy management within the job performance evaluation system.","path":"/jobPerformanceEval/employee/jobRoles/{jobRoleId}/taskGroups","method":"post","summary":"Create a new task group under a job role","parameters":[{"name":"jobRoleId","in":"path","description":"The ID of the job role to which the new task group belongs","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information needed to create a task group","typeName":"IJobPerformanceEvalTaskGroup.ICreate"},"responseBody":{"description":"Details of the created task group","typeName":"IJobPerformanceEvalTaskGroup"},"authorizationType":null,"authorizationRole":"employee","name":"createTaskGroup"},{"specification":"This operation updates an existing task group identified by 'taskGroupId' within a specific job role identified by 'jobRoleId' in the Job Performance Evaluation system. The update request allows modification of the task group's fields such as 'code', 'name', and optional 'description'. System-managed fields like creation and update timestamps are handled automatically and not part of the request payload. This API enforces hierarchical integrity and uniqueness constraints defined in the Prisma schema. It is intended for authorized employees managing organizational job structures.","description":"Updates an existing task group within the specified job role.\n\nAuthorized users can modify attributes of a task group, including 'code', 'name', and optionally 'description'. The task group is uniquely identified by 'taskGroupId' and linked to the parent job role via 'jobRoleId'.\n\nThe operation prevents updates of the parent job role association and handles auditing fields internally.\n\nValidation errors such as duplicate codes or invalid IDs will produce suitable HTTP error messages.\n\nThis endpoint is critical for maintaining an accurate and consistent job structure hierarchy in the system.","path":"/jobPerformanceEval/employee/jobRoles/{jobRoleId}/taskGroups/{taskGroupId}","method":"put","summary":"Update an existing task group within a job role","parameters":[{"name":"jobRoleId","in":"path","description":"The ID of the parent job role of the task group","schema":{"type":"string","format":"uuid"}},{"name":"taskGroupId","in":"path","description":"The ID of the task group to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the task group","typeName":"IJobPerformanceEvalTaskGroup.IUpdate"},"responseBody":{"description":"Details of the updated task group","typeName":"IJobPerformanceEvalTaskGroup"},"authorizationType":null,"authorizationRole":"employee","name":"updateTaskGroup"},{"specification":"This operation permanently deletes a task group identified by 'taskGroupId' under a job role identified by 'jobRoleId' in the Job Performance Evaluation system. This hard delete operation removes the record and associated data from the database as the Prisma schema does not define a soft delete flag for this entity. The delete action requires authorization and provides no response body upon success. Clients should handle errors for non-existent or already deleted task groups appropriately.","description":"Deletes a task group permanently from the specified job role.\n\nThis operation removes the task group with the given 'taskGroupId' linked to 'jobRoleId'. It performs a hard delete, permanently removing associated data.\n\nOnly authorized employees may execute this operation.\n\nNo request body is required, and a successful deletion returns no content.\n\nClients must handle scenarios of non-existent or already deleted task groups with appropriate error responses.","path":"/jobPerformanceEval/employee/jobRoles/{jobRoleId}/taskGroups/{taskGroupId}","method":"delete","summary":"Delete an existing task group within a job role","parameters":[{"name":"jobRoleId","in":"path","description":"The ID of the parent job role of the task group","schema":{"type":"string","format":"uuid"}},{"name":"taskGroupId","in":"path","description":"The ID of the task group to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"employee","name":"eraseTaskGroup"},{"specification":"This operation performs a filtered and paginated search to retrieve task details within a specified task group in the Job Performance Evaluation system. It uses the PATCH method for complex query parameters via the request body, supporting filtering, sorting, and pagination as defined in the Prisma schema for the 'job_performance_eval_tasks' table. The path parameter 'taskGroupId' identifies the task group to list tasks for. The response returns a paginated collection of task entities matching the search criteria.","description":"Retrieves a paginated, filtered list of tasks within the specified task group.\n\nClients can specify search filters, sorting orders, and pagination parameters in the request body to refine the task list results.\n\nThe 'taskGroupId' path parameter identifies the task group whose tasks are to be listed.\n\nAuthorization is required, permitting only employees to access this endpoint.\n\nReturns a paginated response containing task details including codes, names, optional descriptions, and linked knowledge areas.\n\nProper validation on path parameters and request body is enforced with appropriate error handling for invalid inputs.\n\nThis endpoint directly maps to the 'job_performance_eval_tasks' table defined in the Prisma schema, ensuring consistent and reliable data retrieval.","path":"/jobPerformanceEval/employee/taskGroups/{taskGroupId}/tasks","method":"patch","summary":"Search and retrieve paginated list of tasks within a task group","parameters":[{"name":"taskGroupId","in":"path","description":"The ID of the task group to list tasks from","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and pagination criteria for tasks within the task group","typeName":"IJobPerformanceEvalTask.IRequest"},"responseBody":{"description":"Paginated list of tasks matching search criteria","typeName":"IPageIJobPerformanceEvalTask"},"authorizationRoles":["employee"],"name":"searchTasks","authorizationRole":"employee","authorizationType":null},{"specification":"This operation retrieves detailed information of a single Task entity within the Job Performance Evaluation system, identified by both the taskGroupId and taskId path parameters. It operates on the job_performance_eval_tasks table from the Prisma schema. This endpoint allows clients, such as authorized users with roles 'employee' or 'manager', to fetch the precise details of a task within a specific task group, including codes, names, descriptions, knowledge area linkage, and timestamps. It ensures security by restricting access to authenticated roles and provides full task detail in the response consistent with the database schema.","description":"Retrieve detailed information about a specific task within a task group in the Job Performance Evaluation system. This operation fetches the task's unique code, name, optional description, and related knowledge area reference if available.\n\nSecurity is enforced; this operation allows only authenticated users with roles 'employee' or 'manager'. This ensures data integrity and confidentiality.\n\nThis API corresponds directly to the job_performance_eval_tasks table in the Prisma schema. It returns all relevant fields including timestamps in ISO 8601 format.\n\nThe parameters 'taskGroupId' and 'taskId' must be valid UUIDs referencing existing resources.\n\nThis is a read-only operation supporting safe retrieval and will return errors for unauthorized access or non-existent tasks.","summary":"Retrieve a task by its ID within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the target task group containing the task","schema":{"type":"string","format":"uuid"}},{"name":"taskId","description":"UUID of the target task to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed task information","typeName":"IJobPerformanceEvalTask"},"authorizationType":null,"authorizationRole":"employee","name":"at","path":"/jobPerformanceEval/employee/taskGroups/{taskGroupId}/tasks/{taskId}","method":"get"},{"specification":"This operation retrieves detailed information of a single Task entity within the Job Performance Evaluation system, identified by both the taskGroupId and taskId path parameters. It operates on the job_performance_eval_tasks table from the Prisma schema. This endpoint allows clients, such as authorized users with roles 'employee' or 'manager', to fetch the precise details of a task within a specific task group, including codes, names, descriptions, knowledge area linkage, and timestamps. It ensures security by restricting access to authenticated roles and provides full task detail in the response consistent with the database schema.","description":"Retrieve detailed information about a specific task within a task group in the Job Performance Evaluation system. This operation fetches the task's unique code, name, optional description, and related knowledge area reference if available.\n\nSecurity is enforced; this operation allows only authenticated users with roles 'employee' or 'manager'. This ensures data integrity and confidentiality.\n\nThis API corresponds directly to the job_performance_eval_tasks table in the Prisma schema. It returns all relevant fields including timestamps in ISO 8601 format.\n\nThe parameters 'taskGroupId' and 'taskId' must be valid UUIDs referencing existing resources.\n\nThis is a read-only operation supporting safe retrieval and will return errors for unauthorized access or non-existent tasks.","summary":"Retrieve a task by its ID within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the target task group containing the task","schema":{"type":"string","format":"uuid"}},{"name":"taskId","description":"UUID of the target task to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed task information","typeName":"IJobPerformanceEvalTask"},"authorizationType":null,"authorizationRole":"manager","name":"at","path":"/jobPerformanceEval/manager/taskGroups/{taskGroupId}/tasks/{taskId}","method":"get"},{"specification":"This operation creates a new task entity within a specified task group in the Job Performance Evaluation system. It accepts a JSON payload with required and optional fields based on the job_performance_eval_tasks Prisma schema, including code, name, description, and optional linkage to a knowledge area. The taskGroupId path parameter associates the new task with its parent task group. The operation enforces input validation, persists the new task, and returns the created record with system-generated timestamps.\n\nAccess is restricted to authenticated users with roles 'employee' or 'manager' to ensure authorized creation of job tasks. Validation errors and unauthorized access errors are handled appropriately.","description":"Create a new task under a specific task group in the Job Performance Evaluation system. The request body includes the task's unique code, name, optional description, and optional knowledge area association.\n\nOnly authenticated roles 'employee' or 'manager' are permitted to create tasks to ensure controlled job data consistency.\n\nThe endpoint validates the input JSON against the Prisma schema for the task entity. On success, the newly created task's full data representation is returned, including timestamps.\n\nSoft delete is supported in the schema but not exposed via this API.\n\nThis operation supports updating organizational job definitions securely and correctly.","summary":"Create a new task within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the task group under which the new task will be created","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information for creating a task","typeName":"IJobPerformanceEvalTask.ICreate"},"responseBody":{"description":"Newly created task details","typeName":"IJobPerformanceEvalTask"},"authorizationType":null,"authorizationRole":"employee","name":"create","path":"/jobPerformanceEval/employee/taskGroups/{taskGroupId}/tasks","method":"post"},{"specification":"This operation creates a new task entity within a specified task group in the Job Performance Evaluation system. It accepts a JSON payload with required and optional fields based on the job_performance_eval_tasks Prisma schema, including code, name, description, and optional linkage to a knowledge area. The taskGroupId path parameter associates the new task with its parent task group. The operation enforces input validation, persists the new task, and returns the created record with system-generated timestamps.\n\nAccess is restricted to authenticated users with roles 'employee' or 'manager' to ensure authorized creation of job tasks. Validation errors and unauthorized access errors are handled appropriately.","description":"Create a new task under a specific task group in the Job Performance Evaluation system. The request body includes the task's unique code, name, optional description, and optional knowledge area association.\n\nOnly authenticated roles 'employee' or 'manager' are permitted to create tasks to ensure controlled job data consistency.\n\nThe endpoint validates the input JSON against the Prisma schema for the task entity. On success, the newly created task's full data representation is returned, including timestamps.\n\nSoft delete is supported in the schema but not exposed via this API.\n\nThis operation supports updating organizational job definitions securely and correctly.","summary":"Create a new task within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the task group under which the new task will be created","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information for creating a task","typeName":"IJobPerformanceEvalTask.ICreate"},"responseBody":{"description":"Newly created task details","typeName":"IJobPerformanceEvalTask"},"authorizationType":null,"authorizationRole":"manager","name":"create","path":"/jobPerformanceEval/manager/taskGroups/{taskGroupId}/tasks","method":"post"},{"specification":"This operation updates an existing task entity identified by taskId within a specified task group. It accepts the taskGroupId and taskId path parameters and a JSON body compatible with the job_performance_eval_tasks Prisma schema update structure. The operation validates input, applies updates, and returns the updated task entity.\n\nAccess is limited to authenticated users with roles 'employee' or 'manager' to maintain security and proper job data management. Errors for unauthorized access, non-existent tasks, or validation failures are handled appropriately.","description":"Update the details of an existing task within a task group in the Job Performance Evaluation system. Provides ability to modify fields such as the task code, name, description, and associated knowledge area.\n\nOnly authenticated users with roles 'employee' or 'manager' may perform this update to maintain job data integrity.\n\nThe API uses taskGroupId and taskId as path parameters to specify the target task.\n\nThe request body is validated against the task update schema. Upon success, the updated task data is returned with timestamps.\n\nThis endpoint supports full task record updates and maintains audit information automatically.","summary":"Update an existing task within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the task group containing the target task","schema":{"type":"string","format":"uuid"}},{"name":"taskId","description":"UUID of the task to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update a task","typeName":"IJobPerformanceEvalTask.IUpdate"},"responseBody":{"description":"Updated task details","typeName":"IJobPerformanceEvalTask"},"authorizationType":null,"authorizationRole":"employee","name":"update","path":"/jobPerformanceEval/employee/taskGroups/{taskGroupId}/tasks/{taskId}","method":"put"},{"specification":"This operation updates an existing task entity identified by taskId within a specified task group. It accepts the taskGroupId and taskId path parameters and a JSON body compatible with the job_performance_eval_tasks Prisma schema update structure. The operation validates input, applies updates, and returns the updated task entity.\n\nAccess is limited to authenticated users with roles 'employee' or 'manager' to maintain security and proper job data management. Errors for unauthorized access, non-existent tasks, or validation failures are handled appropriately.","description":"Update the details of an existing task within a task group in the Job Performance Evaluation system. Provides ability to modify fields such as the task code, name, description, and associated knowledge area.\n\nOnly authenticated users with roles 'employee' or 'manager' may perform this update to maintain job data integrity.\n\nThe API uses taskGroupId and taskId as path parameters to specify the target task.\n\nThe request body is validated against the task update schema. Upon success, the updated task data is returned with timestamps.\n\nThis endpoint supports full task record updates and maintains audit information automatically.","summary":"Update an existing task within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the task group containing the target task","schema":{"type":"string","format":"uuid"}},{"name":"taskId","description":"UUID of the task to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update a task","typeName":"IJobPerformanceEvalTask.IUpdate"},"responseBody":{"description":"Updated task details","typeName":"IJobPerformanceEvalTask"},"authorizationType":null,"authorizationRole":"manager","name":"update","path":"/jobPerformanceEval/manager/taskGroups/{taskGroupId}/tasks/{taskId}","method":"put"},{"specification":"This operation permanently deletes an existing task identified by taskId within a specified task group. It accepts taskGroupId and taskId as path parameters. This is a hard delete operation that removes the task record from the database.\n\nAccess is restricted to authenticated users with roles 'employee' or 'manager' for security reasons to prevent unauthorized data removal. On success, the operation returns no content. Unauthorized or non-existent resource scenarios are appropriately handled.\n\nThis operation directly affects job definitions and must be used cautiously as it is irreversible.","description":"Permanently delete a task from a specific task group in the Job Performance Evaluation system. This operation removes the task record entirely from the database.\n\nRequires valid taskGroupId and taskId path parameters to identify the target task.\n\nAccessible only to authenticated users with roles 'employee' or 'manager' to prevent unauthorized deletions.\n\nThis operation is irreversible and will remove all associated task data completely.\n\nAppropriate error responses are returned for invalid IDs or unauthorized access.","summary":"Delete a task within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the task group containing the task to delete","schema":{"type":"string","format":"uuid"}},{"name":"taskId","description":"UUID of the task to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"employee","name":"erase","path":"/jobPerformanceEval/employee/taskGroups/{taskGroupId}/tasks/{taskId}","method":"delete"},{"specification":"This operation permanently deletes an existing task identified by taskId within a specified task group. It accepts taskGroupId and taskId as path parameters. This is a hard delete operation that removes the task record from the database.\n\nAccess is restricted to authenticated users with roles 'employee' or 'manager' for security reasons to prevent unauthorized data removal. On success, the operation returns no content. Unauthorized or non-existent resource scenarios are appropriately handled.\n\nThis operation directly affects job definitions and must be used cautiously as it is irreversible.","description":"Permanently delete a task from a specific task group in the Job Performance Evaluation system. This operation removes the task record entirely from the database.\n\nRequires valid taskGroupId and taskId path parameters to identify the target task.\n\nAccessible only to authenticated users with roles 'employee' or 'manager' to prevent unauthorized deletions.\n\nThis operation is irreversible and will remove all associated task data completely.\n\nAppropriate error responses are returned for invalid IDs or unauthorized access.","summary":"Delete a task within a task group","parameters":[{"name":"taskGroupId","description":"UUID of the task group containing the task to delete","schema":{"type":"string","format":"uuid"}},{"name":"taskId","description":"UUID of the task to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"erase","path":"/jobPerformanceEval/manager/taskGroups/{taskGroupId}/tasks/{taskId}","method":"delete"},{"specification":"This operation retrieves the list of task activities for a specific task from the job_performance_eval_task_activities table. It accepts filtering and pagination criteria in the request body and returns a paged summary list. The taskId parameter identifies the parent task and must be a UUID. Only authenticated employees and managers can access this endpoint.","path":"/jobPerformanceEval/employee/tasks/{taskId}/taskActivities","method":"patch","summary":"Retrieve list of task activities under a task","description":"Retrieve a paginated and filtered list of task activities associated with the specified task identified by taskId. This operation fetches data from the job_performance_eval_task_activities table, returning details such as code, name, description, and timestamps.\n\nThe path parameter taskId is a UUID that uniquely identifies the parent task. The request body supports complex filters and pagination options to efficiently query large sets of task activities. \n\nOnly users with roles 'employee' or 'manager' are authorized to access this endpoint.\n\nErrors caused by invalid or non-existent taskId result in 404 or 400 HTTP responses managed by the system.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the target task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination criteria for listing task activities","typeName":"IJobPerformanceEvalTaskActivity.IRequest"},"responseBody":{"description":"Paginated list of task activities summary data","typeName":"IPageIJobPerformanceEvalTaskActivity.ISummary"},"authorizationType":null,"authorizationRole":"employee","name":"index"},{"specification":"This operation retrieves the list of task activities for a specific task from the job_performance_eval_task_activities table. It accepts filtering and pagination criteria in the request body and returns a paged summary list. The taskId parameter identifies the parent task and must be a UUID. Only authenticated employees and managers can access this endpoint.","path":"/jobPerformanceEval/manager/tasks/{taskId}/taskActivities","method":"patch","summary":"Retrieve list of task activities under a task","description":"Retrieve a paginated and filtered list of task activities associated with the specified task identified by taskId. This operation fetches data from the job_performance_eval_task_activities table, returning details such as code, name, description, and timestamps.\n\nThe path parameter taskId is a UUID that uniquely identifies the parent task. The request body supports complex filters and pagination options to efficiently query large sets of task activities. \n\nOnly users with roles 'employee' or 'manager' are authorized to access this endpoint.\n\nErrors caused by invalid or non-existent taskId result in 404 or 400 HTTP responses managed by the system.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the target task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination criteria for listing task activities","typeName":"IJobPerformanceEvalTaskActivity.IRequest"},"responseBody":{"description":"Paginated list of task activities summary data","typeName":"IPageIJobPerformanceEvalTaskActivity.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index"},{"specification":"This operation fetches detailed information for a specific task activity identified by taskActivityId under a task identified by taskId. The detailed data include code, name, description, and timestamps from the job_performance_eval_task_activities table.\n\nBoth taskId and taskActivityId are validated as UUIDs with taskActivityId representing an activity belonging to the specified task.\n\nPermissions require roles 'employee' or 'manager'.\n\nErrors for invalid or non-existent identifiers are handled by the service layer with appropriate HTTP error responses.","path":"/jobPerformanceEval/employee/tasks/{taskId}/taskActivities/{taskActivityId}","method":"get","summary":"Retrieve detailed information of a specific task activity","description":"Retrieve detailed information of a specific task activity by taskActivityId under the task identified by taskId. The returned data includes activity code, name, description, creation and update timestamps as per the job_performance_eval_task_activities schema.\n\nAuthorized users with the roles 'employee' or 'manager' can perform this read operation.\n\nInvalid path parameters or missing records result in HTTP error responses.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the parent task","schema":{"type":"string","format":"uuid"}},{"name":"taskActivityId","in":"path","description":"Unique identifier of the task activity","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed task activity entity information","typeName":"IJobPerformanceEvalTaskActivity"},"authorizationType":null,"authorizationRole":"employee","name":"at"},{"specification":"This operation fetches detailed information for a specific task activity identified by taskActivityId under a task identified by taskId. The detailed data include code, name, description, and timestamps from the job_performance_eval_task_activities table.\n\nBoth taskId and taskActivityId are validated as UUIDs with taskActivityId representing an activity belonging to the specified task.\n\nPermissions require roles 'employee' or 'manager'.\n\nErrors for invalid or non-existent identifiers are handled by the service layer with appropriate HTTP error responses.","path":"/jobPerformanceEval/manager/tasks/{taskId}/taskActivities/{taskActivityId}","method":"get","summary":"Retrieve detailed information of a specific task activity","description":"Retrieve detailed information of a specific task activity by taskActivityId under the task identified by taskId. The returned data includes activity code, name, description, creation and update timestamps as per the job_performance_eval_task_activities schema.\n\nAuthorized users with the roles 'employee' or 'manager' can perform this read operation.\n\nInvalid path parameters or missing records result in HTTP error responses.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the parent task","schema":{"type":"string","format":"uuid"}},{"name":"taskActivityId","in":"path","description":"Unique identifier of the task activity","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed task activity entity information","typeName":"IJobPerformanceEvalTaskActivity"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"This operation creates a new task activity under a given task specified by taskId. The creation data must conform to the IJobPerformanceEvalTaskActivity.ICreate schema and include properties like code, name, and optional description.\n\nThe taskId path parameter identifies the parent task to which the new activity belongs. Roles 'employee' and 'manager' are authorized to perform this operation.\n\nOn success, the created task activity record is returned. Validation errors, conflicts, and authorization failures are properly managed by the API backend.","path":"/jobPerformanceEval/employee/tasks/{taskId}/taskActivities","method":"post","summary":"Create a new task activity under a task","description":"Create a new task activity under the task specified by taskId. The request body should provide the necessary task activity data such as code, name, and optional description according to the creation schema.\n\nThe operation requires authorization with either 'employee' or 'manager' roles.\n\nSuccessful creation returns the full detail of the newly created task activity entity.\n\nValidation errors and duplicate codes cause error responses.\n\nThe parameter taskId associates the new activity with the corresponding parent task.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the parent task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data needed to create a new task activity","typeName":"IJobPerformanceEvalTaskActivity.ICreate"},"responseBody":{"description":"Newly created task activity details","typeName":"IJobPerformanceEvalTaskActivity"},"authorizationType":null,"authorizationRole":"employee","name":"create"},{"specification":"This operation creates a new task activity under a given task specified by taskId. The creation data must conform to the IJobPerformanceEvalTaskActivity.ICreate schema and include properties like code, name, and optional description.\n\nThe taskId path parameter identifies the parent task to which the new activity belongs. Roles 'employee' and 'manager' are authorized to perform this operation.\n\nOn success, the created task activity record is returned. Validation errors, conflicts, and authorization failures are properly managed by the API backend.","path":"/jobPerformanceEval/manager/tasks/{taskId}/taskActivities","method":"post","summary":"Create a new task activity under a task","description":"Create a new task activity under the task specified by taskId. The request body should provide the necessary task activity data such as code, name, and optional description according to the creation schema.\n\nThe operation requires authorization with either 'employee' or 'manager' roles.\n\nSuccessful creation returns the full detail of the newly created task activity entity.\n\nValidation errors and duplicate codes cause error responses.\n\nThe parameter taskId associates the new activity with the corresponding parent task.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the parent task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data needed to create a new task activity","typeName":"IJobPerformanceEvalTaskActivity.ICreate"},"responseBody":{"description":"Newly created task activity details","typeName":"IJobPerformanceEvalTaskActivity"},"authorizationType":null,"authorizationRole":"manager","name":"create"},{"specification":"This operation updates an existing task activity identified by taskActivityId under the specified task by taskId. The update data must conform to IJobPerformanceEvalTaskActivity.IUpdate schema.\n\nPath parameters taskId and taskActivityId identify the specific task and task activity. Only roles 'employee' and 'manager' can perform this update.\n\nOn success, the updated task activity data is returned, while invalid input or unauthorized access is managed by the backend.","path":"/jobPerformanceEval/employee/tasks/{taskId}/taskActivities/{taskActivityId}","method":"put","summary":"Update an existing task activity's details","description":"Update the specified task activity identified by taskActivityId under the task specified by taskId. The request body contains updated properties compliant with the update schema.\n\nThis operation requires roles 'employee' or 'manager' for authorization.\n\nSuccessful updates return the updated task activity entity data.\n\nErrors for invalid IDs or validation issues are returned appropriately.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the parent task","schema":{"type":"string","format":"uuid"}},{"name":"taskActivityId","in":"path","description":"Unique identifier of the task activity to be updated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated task activity data","typeName":"IJobPerformanceEvalTaskActivity.IUpdate"},"responseBody":{"description":"Updated task activity entity information","typeName":"IJobPerformanceEvalTaskActivity"},"authorizationType":null,"authorizationRole":"employee","name":"update"},{"specification":"This operation updates an existing task activity identified by taskActivityId under the specified task by taskId. The update data must conform to IJobPerformanceEvalTaskActivity.IUpdate schema.\n\nPath parameters taskId and taskActivityId identify the specific task and task activity. Only roles 'employee' and 'manager' can perform this update.\n\nOn success, the updated task activity data is returned, while invalid input or unauthorized access is managed by the backend.","path":"/jobPerformanceEval/manager/tasks/{taskId}/taskActivities/{taskActivityId}","method":"put","summary":"Update an existing task activity's details","description":"Update the specified task activity identified by taskActivityId under the task specified by taskId. The request body contains updated properties compliant with the update schema.\n\nThis operation requires roles 'employee' or 'manager' for authorization.\n\nSuccessful updates return the updated task activity entity data.\n\nErrors for invalid IDs or validation issues are returned appropriately.","parameters":[{"name":"taskId","in":"path","description":"Unique identifier of the parent task","schema":{"type":"string","format":"uuid"}},{"name":"taskActivityId","in":"path","description":"Unique identifier of the task activity to be updated","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated task activity data","typeName":"IJobPerformanceEvalTaskActivity.IUpdate"},"responseBody":{"description":"Updated task activity entity information","typeName":"IJobPerformanceEvalTaskActivity"},"authorizationType":null,"authorizationRole":"manager","name":"update"},{"specification":"This operation retrieves a paginated list of knowledge areas used for categorizing knowledge relevant to job tasks, from the job_performance_eval_knowledge_areas table in the Prisma schema. It supports advanced search, filtering, sorting, and pagination to allow users to find knowledge areas by code, name, or description. This facilitates effective management and navigation of knowledge areas in the job performance evaluation service.","description":"Retrieve a filtered and paginated list of knowledge areas within the job performance evaluation system. This operation enables users to search knowledge areas by various criteria such as code, name, or description, which helps in organizing and managing domains of expertise relevant to job tasks.\n\nSecurity considerations require authentication and appropriate permissions to access sensitive organizational knowledge data. The operation integrates directly with the job_performance_eval_knowledge_areas table, incorporating all relevant fields as defined in the Prisma schema.\n\nSearch filters, pagination parameters, and sorting options can be specified in the request body, supporting flexible queries tailored to user needs. The response provides a paginated summary of knowledge areas, facilitating efficient UI rendering and user experience.","summary":"Search and retrieve a filtered, paginated list of knowledge areas","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for knowledge area filtering","typeName":"IJobPerformanceEvalKnowledgeArea.IRequest"},"responseBody":{"description":"Paginated list of knowledge area summary information matching search criteria","typeName":"IPageIJobPerformanceEvalKnowledgeArea.ISummary"},"authorizationRoles":["employee"],"name":"index","path":"/jobPerformanceEval/employee/knowledgeAreas","method":"patch","authorizationRole":"employee","authorizationType":null},{"specification":"This operation retrieves detail information of a single knowledge area identified by its unique ID, from the job_performance_eval_knowledge_areas table in the Prisma schema. It returns all relevant fields for the specified knowledge area, including its code, name, description, and timestamps.","description":"Retrieve detailed information of a specific knowledge area by its unique identifier. This operation fetches the full data record from the job_performance_eval_knowledge_areas table representing the knowledge domain relevant to job tasks.\n\nUsers must provide the knowledge area ID as the path parameter. Security measures require authentication and authorization to ensure only permitted users can access detailed knowledge area data.\n\nThis endpoint supports viewing a single knowledge area for inspection or editing purposes, returning comprehensive attributes including descriptive and metadata fields.","summary":"Retrieve detailed information of a knowledge area by ID","parameters":[{"name":"id","description":"Unique identifier of the target knowledge area","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Knowledge area detailed information","typeName":"IJobPerformanceEvalKnowledgeArea"},"authorizationRoles":["employee"],"name":"at","path":"/jobPerformanceEval/employee/knowledgeAreas/{id}","method":"get","authorizationRole":"employee","authorizationType":null},{"specification":"This operation creates a new knowledge area record in the job_performance_eval_knowledge_areas table within the Prisma schema. It accepts data required to define a knowledge area such as the code, name, and optional description. Upon success, it returns the created knowledge area entity.","description":"Create a new knowledge area entry in the job performance evaluation system. This operation allows authorized users to add new knowledge domains relevant to job tasks.\n\nValidation ensures the uniqueness of code and other required fields. Users must be authenticated and authorized to perform this creation.\n\nThe response includes the full details of the newly created knowledge area. Errors occur if required fields are missing or constraints violated.","summary":"Create a new knowledge area","parameters":[],"requestBody":{"description":"Creation info of the knowledge area","typeName":"IJobPerformanceEvalKnowledgeArea.ICreate"},"responseBody":{"description":"Created knowledge area information","typeName":"IJobPerformanceEvalKnowledgeArea"},"authorizationRoles":["employee"],"name":"create","path":"/jobPerformanceEval/employee/knowledgeAreas","method":"post","authorizationRole":"employee","authorizationType":null},{"specification":"This operation permanently deletes a specific task activity under a task, identified by taskId and taskActivityId from the job_performance_eval_task_activities table. The deletion removes the record permanently as the table uses a soft delete timestamp but this operation is designed as a hard delete endpoint. It requires authentication and proper authorization.","description":"Delete a specific task activity record permanently from the system. The task activity is identified by both the task ID and the task activity ID path parameters.\n\nThis operation interacts with the job_performance_eval_task_activities table, which stores detailed actions within tasks for the job roles. The deletion is permanent and the record cannot be recovered.\n\nUsers must be authorized to delete task activities. Attempting to delete a task activity that does not exist shall result in an error response.\n\nThis endpoint takes no request body and returns no content upon success.","summary":"Delete a specific task activity by IDs","parameters":[{"name":"taskId","description":"Unique identifier of the target task","schema":{"type":"string","format":"uuid"}},{"name":"taskActivityId","description":"Unique identifier of the task activity to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["employee"],"name":"erase","path":"/jobPerformanceEval/employee/tasks/{taskId}/taskActivities/{taskActivityId}","method":"delete","authorizationRole":"employee","authorizationType":null},{"specification":"This operation updates an existing knowledge area entity in the Job Performance Evaluation system's knowledge area management module. It targets the job_performance_eval_knowledge_areas table, allowing authorized users to modify properties such as code, name, description, and timestamps. Update operations require providing the knowledge area ID via the path parameter and the new details in the request body. It ensures the entity's unique code remains consistent and records modification timestamps.","description":"This API endpoint allows authorized users to update a specific knowledge area identified by its unique ID. The knowledge area represents domains of expertise within the organizational job evaluation context. The update operation accepts new values for code, name, and an optional description to reflect current knowledge area attributes.\n\nUsers must provide the knowledge area's unique identifier as a path parameter in UUID format. The request body must include the new code and name for the knowledge area, optionally updating the description if needed. The system records update timestamps automatically.\n\nSecurity checks ensure only users with appropriate roles can modify knowledge areas. This operation corresponds to the job_performance_eval_knowledge_areas table in the database.\n\nThe response returns the updated knowledge area entity reflecting the changes.","summary":"Update a knowledge area by ID in the job_performance_eval_knowledge_areas table","parameters":[{"name":"id","description":"Unique identifier of the target knowledge area","schema":{"type":"string","format":"uuid"},"in":"path"}],"requestBody":{"description":"Updated information for the knowledge area","typeName":"IJobPerformanceEvalKnowledgeArea.IUpdate"},"responseBody":{"description":"Updated knowledge area entity","typeName":"IJobPerformanceEvalKnowledgeArea"},"authorizationType":null,"authorizationRole":"manager","name":"updateKnowledgeArea","path":"/jobPerformanceEval/manager/knowledgeAreas/{id}","method":"put"},{"specification":"This operation permanently deletes a knowledge area entity from the Job Performance Evaluation system. It removes the record from the job_performance_eval_knowledge_areas table using the knowledge area ID provided in the path parameter. This hard delete action fully eliminates the knowledge area data and cannot be undone.\n\nOnly authorized users with the manager role may perform this deletion. The system will confirm successful deletion via HTTP status codes without response body.\n\nThis operation affects only the specified knowledge area identified by its UUID.","description":"This API endpoint performs a hard delete of a knowledge area specified by its unique ID. The knowledge area corresponds to a domain of expertise within the job evaluation framework. Deleting this entity removes it permanently from the database.\n\nThe knowledge area ID must be provided as a path parameter in UUID format. Only users with the manager role can execute this deletion. Upon success, no content is returned.\n\nThis operation maps to the job_performance_eval_knowledge_areas table in Prisma schema.","summary":"Delete a knowledge area by ID from the job_performance_eval_knowledge_areas table","parameters":[{"name":"id","description":"Unique identifier of the knowledge area to delete","schema":{"type":"string","format":"uuid"},"in":"path"}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"eraseKnowledgeArea","path":"/jobPerformanceEval/manager/knowledgeAreas/{id}","method":"delete"},{"specification":"This operation retrieves a paginated list of self-evaluations submitted by employees. It supports filtering, searching, sorting, and pagination to efficiently access evaluation data. The operation relates to the job_performance_eval_self_evaluations table, which stores employee-submitted assessment records for specific evaluation cycles.\n\nThe request body accepts complex search and filter criteria encapsulated in the IJobPerformanceEvalSelfEvaluation.IRequest type. This allows clients to specify conditions like employee ID, evaluation cycle, date ranges, or score filters.\n\nThe response returns a paginated collection of summarized self-evaluation entries matching the query parameters. This enables users and administrators to browse evaluation data efficiently.","description":"This API endpoint allows clients to search and retrieve a filtered, paginated list of employee self-evaluations. These self-evaluations include scores for job performance, knowledge/skill proficiency, problem solving, collaboration, and innovation, submitted by employees during defined evaluation cycles.\n\nThe request body accepts detailed search criteria allowing filtering by employee, evaluation cycle, score thresholds, and other relevant parameters to narrow results. Pagination controls enable clients to fetch manageable pages of data.\n\nThe response provides summarized information on each self-evaluation, optimized for list views. Authorization restricts access to authorized roles such as employees and managers.\n\nThis operation corresponds to the job_performance_eval_self_evaluations table, facilitating review and management of evaluation records.","summary":"Search and retrieve paginated employee self-evaluations","parameters":[],"requestBody":{"description":"Search criteria for employee self-evaluations","typeName":"IJobPerformanceEvalSelfEvaluation.IRequest"},"responseBody":{"description":"Paginated list of self-evaluation summaries matching criteria","typeName":"IPageIJobPerformanceEvalSelfEvaluation.ISummary"},"authorizationType":null,"authorizationRole":"employee","name":"searchSelfEvaluations","path":"/jobPerformanceEval/employee/selfEvaluations","method":"patch"},{"specification":"This operation retrieves a paginated list of self-evaluations submitted by employees. It supports filtering, searching, sorting, and pagination to efficiently access evaluation data. The operation relates to the job_performance_eval_self_evaluations table, which stores employee-submitted assessment records for specific evaluation cycles.\n\nThe request body accepts complex search and filter criteria encapsulated in the IJobPerformanceEvalSelfEvaluation.IRequest type. This allows clients to specify conditions like employee ID, evaluation cycle, date ranges, or score filters.\n\nThe response returns a paginated collection of summarized self-evaluation entries matching the query parameters. This enables users and administrators to browse evaluation data efficiently.","description":"This API endpoint allows clients to search and retrieve a filtered, paginated list of employee self-evaluations. These self-evaluations include scores for job performance, knowledge/skill proficiency, problem solving, collaboration, and innovation, submitted by employees during defined evaluation cycles.\n\nThe request body accepts detailed search criteria allowing filtering by employee, evaluation cycle, score thresholds, and other relevant parameters to narrow results. Pagination controls enable clients to fetch manageable pages of data.\n\nThe response provides summarized information on each self-evaluation, optimized for list views. Authorization restricts access to authorized roles such as employees and managers.\n\nThis operation corresponds to the job_performance_eval_self_evaluations table, facilitating review and management of evaluation records.","summary":"Search and retrieve paginated employee self-evaluations","parameters":[],"requestBody":{"description":"Search criteria for employee self-evaluations","typeName":"IJobPerformanceEvalSelfEvaluation.IRequest"},"responseBody":{"description":"Paginated list of self-evaluation summaries matching criteria","typeName":"IPageIJobPerformanceEvalSelfEvaluation.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"searchSelfEvaluations","path":"/jobPerformanceEval/manager/selfEvaluations","method":"patch"},{"specification":"This operation retrieves detailed information about a single self-evaluation submitted by an employee. The retrieval is based on the self-evaluation's unique ID provided as a path parameter.\n\nThe operation returns the full self-evaluation entity including scores on various evaluation categories, comments, associated employee and evaluation cycle details. It corresponds directly to the job_performance_eval_self_evaluations table in the database.\n\nAuthorization ensures only permitted roles can access detailed self-evaluation data of employees.","description":"This API endpoint fetches complete details of a single employee self-evaluation, identified by its unique ID in UUID format.\n\nClients must provide the self-evaluation ID as a path parameter. The response includes all evaluation scores, comments, and metadata associated with that evaluation.\n\nAccess is restricted to authorized users, ensuring privacy and data protection.\n\nThis operation maps to the job_performance_eval_self_evaluations table in Prisma schema.","summary":"Retrieve a specific employee self-evaluation by ID","parameters":[{"name":"id","description":"Unique identifier of the target self-evaluation","schema":{"type":"string","format":"uuid"},"in":"path"}],"requestBody":null,"responseBody":{"description":"Detailed employee self-evaluation entity","typeName":"IJobPerformanceEvalSelfEvaluation"},"authorizationType":null,"authorizationRole":"employee","name":"atSelfEvaluation","path":"/jobPerformanceEval/employee/selfEvaluations/{id}","method":"get"},{"specification":"This operation retrieves detailed information about a single self-evaluation submitted by an employee. The retrieval is based on the self-evaluation's unique ID provided as a path parameter.\n\nThe operation returns the full self-evaluation entity including scores on various evaluation categories, comments, associated employee and evaluation cycle details. It corresponds directly to the job_performance_eval_self_evaluations table in the database.\n\nAuthorization ensures only permitted roles can access detailed self-evaluation data of employees.","description":"This API endpoint fetches complete details of a single employee self-evaluation, identified by its unique ID in UUID format.\n\nClients must provide the self-evaluation ID as a path parameter. The response includes all evaluation scores, comments, and metadata associated with that evaluation.\n\nAccess is restricted to authorized users, ensuring privacy and data protection.\n\nThis operation maps to the job_performance_eval_self_evaluations table in Prisma schema.","summary":"Retrieve a specific employee self-evaluation by ID","parameters":[{"name":"id","description":"Unique identifier of the target self-evaluation","schema":{"type":"string","format":"uuid"},"in":"path"}],"requestBody":null,"responseBody":{"description":"Detailed employee self-evaluation entity","typeName":"IJobPerformanceEvalSelfEvaluation"},"authorizationType":null,"authorizationRole":"manager","name":"atSelfEvaluation","path":"/jobPerformanceEval/manager/selfEvaluations/{id}","method":"get"},{"specification":"This operation creates a new self-evaluation record in the Job Performance Evaluation system based on the job_performance_eval_self_evaluations Prisma DB table. It allows an employee to submit scores for work performance level, knowledge/skill, problem solving and collaboration, and innovation, along with a mandatory overall comment. The evaluation is tied to a specific evaluation cycle and employee, with audit timestamps and soft delete support. This creation endpoint validates that the scores are within the 1-5 range and that the commentary is provided as required by business rules.","description":"This API operation enables authenticated employees (role: employee) to create a self-evaluation for a specified evaluation cycle. The self-evaluation includes integer scores ranging from 1 to 5 for work performance level, knowledge/skill, problem solving and collaboration, and innovation. A mandatory overall comment summarizing their self-assessment must also be provided.\n\nThis operation requires employee authentication and authorization, linking the evaluation to the specific employee and evaluation cycle. It stores timestamps for creation and updates for auditing, and supports soft deletion for data lifecycle management.\n\nThe API complements read operations used by employees and managers to retrieve evaluations and related comments, supporting comprehensive evaluation data governance.","summary":"Create a new self-evaluation record for an employee","parameters":[],"requestBody":{"description":"Input data for creating a self-evaluation record, including scores and evaluation cycle reference","typeName":"IJobPerformanceEvalSelfEvaluation.ICreate"},"responseBody":{"description":"Detailed self-evaluation record data after creation","typeName":"IJobPerformanceEvalSelfEvaluation"},"authorizationType":null,"authorizationRole":"employee","name":"create","path":"/jobPerformanceEval/employee/selfEvaluations","method":"post"},{"specification":"This operation updates an existing self-evaluation record identified by its UUID primary key in the job_performance_eval_self_evaluations table. Employees can modify their evaluation scores and overall comment corresponding to an evaluation cycle. It includes timestamps and supports soft deletion to preserve audit history.\n\nRequest includes the target record ID as a path parameter and update payload in the request body.","description":"This API operation allows authenticated employees (role: employee) to update their own self-evaluation record by its unique ID. Scores for work performance, knowledge/skill, problem solving and collaboration, and innovation can be modified, along with the mandatory overall comment.\n\nThe update enforces ownership and authorization checks and updates timestamps for audit purposes. Soft deletion is respected to maintain data integrity and history.\n\nThis endpoint facilitates corrections before finalizing the evaluation submission during the evaluation period.","summary":"Update an existing self-evaluation record by ID","parameters":[{"name":"id","description":"Unique identifier of the self-evaluation record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the self-evaluation record","typeName":"IJobPerformanceEvalSelfEvaluation.IUpdate"},"responseBody":{"description":"Detailed self-evaluation record after update","typeName":"IJobPerformanceEvalSelfEvaluation"},"authorizationType":null,"authorizationRole":"employee","name":"update","path":"/jobPerformanceEval/employee/selfEvaluations/{id}","method":"put"},{"specification":"This operation performs a soft delete of a self-evaluation record identified by UUID in the job_performance_eval_self_evaluations table. Instead of physical deletion, the deleted_at timestamp is set, allowing for logical removal while preserving auditability and compliance.\n\nOnly the owning employee or authorized users can soft delete the record. It does not require a request body and returns no response content.\n\nThis operation supports data governance practices for evaluation data.","description":"This API operation allows employees (role: employee) to soft delete their self-evaluation record using the record's UUID. The system sets the deleted_at timestamp instead of permanently deleting the record, ensuring logical removal while maintaining data integrity and history.\n\nAuthorization checks ensure only permitted users may perform this operation. No content is returned upon success.\n\nThis complements create and update operations in lifecycle management of evaluation data.","summary":"Soft delete a self-evaluation record by ID","parameters":[{"name":"id","description":"Unique identifier of the self-evaluation record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"employee","name":"erase","path":"/jobPerformanceEval/employee/selfEvaluations/{id}","method":"delete"},{"specification":"This operation retrieves a paginated list of manager evaluations from the job_performance_eval_manager_evaluations table in the Prisma DB schema. Managers can search and filter evaluations for employees they manage, including scores and comments, with advanced filtering and sorting based on request body criteria.\n\nThis endpoint is restricted to authenticated users with the manager role. It supports pagination and returns summarized evaluation data optimized for list views.\n\nThe endpoint forms a critical component of the manager evaluation workflow in the Job Performance Evaluation system.","description":"This API operation allows authenticated managers (role: manager) to search, filter, and paginate through manager evaluation records. The operation accepts comprehensive request body parameters to support complex query scenarios for finding evaluation data by employee, evaluation cycle, score ranges, dates, and other criteria.\n\nSecurity measures ensure access is limited to evaluations for which the requesting manager is authorized. The results return summary information to optimize frontend display.\n\nThis search endpoint complements detailed read and write operations, facilitating managerial oversight and evaluation management.","summary":"Search and retrieve a filtered, paginated list of manager evaluations","parameters":[],"requestBody":{"description":"Request body containing filters and pagination settings for manager evaluations","typeName":"IJobPerformanceEvalManagerEvaluation.IRequest"},"responseBody":{"description":"Paginated summary list of manager evaluations","typeName":"IPageIJobPerformanceEvalManagerEvaluation.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index","path":"/jobPerformanceEval/manager/managerEvaluations","method":"patch"},{"specification":"This operation retrieves a specific manager evaluation record by its unique identifier from the job_performance_eval_manager_evaluations table. The manager evaluation contains evaluation scores for various categories submitted by a manager for an employee within a specific evaluation cycle, along with a comprehensive comment. This operation supports viewing detailed evaluation data for audit, review, and reporting purposes. The retrieved record includes all stored fields except relations. Access to this endpoint requires authenticated user roles such as 'manager'.","path":"/jobPerformanceEval/manager/managerEvaluations/{id}","method":"get","summary":"Get detailed manager evaluation by ID","description":"Retrieve a manager's evaluation entry by its unique ID from the job_performance_eval_manager_evaluations table.\n\nThis operation is intended for managers to view the detailed evaluation they have performed on employees during specific evaluation cycles. The evaluation data includes scores for work performance, knowledge and skills, problem solving and collaboration, innovation, and an overall comment.\n\nThe endpoint returns the full evaluation record, including management of timestamps and soft deletion status for auditing.\n\nSecurity considerations ensure only authorized roles such as managers can retrieve this information.\n\nPossible errors include attempts to access non-existent IDs or unauthorized access attempts.\n\nThe API supports relationships to employee and evaluation cycle data, which should be referenced separately as needed.","parameters":[{"name":"id","description":"Unique identifier of the manager evaluation record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of a manager evaluation record","typeName":"IJobPerformanceEvalManagerEvaluation"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"This operation creates a new manager evaluation record in the job_performance_eval_manager_evaluations table. Managers can submit evaluation scores for employees for various categories within a specified evaluation cycle. The submitted data includes the manager's identifier, the employee being evaluated, evaluation cycle, evaluation date, category scores, and a comprehensive comment. The system stores the record with creation and update timestamps and supports soft deletion. Authorization is limited to managers.","path":"/jobPerformanceEval/manager/managerEvaluations","method":"post","summary":"Create a new manager evaluation","description":"Create a new manager evaluation entry with scores and comments for an employee within a specific evaluation cycle.\n\nThe manager provides scores on work performance, knowledge and skills, problem solving and collaboration, innovation, and an overall comment.\n\nThis operation is restricted to users with manager role to ensure security and data integrity.\n\nUpon success, the newly created evaluation record is returned.\n\nValidation includes checking for valid user IDs, cycle IDs, score ranges (1-5), and required comment fields.\n\nErrors may occur if required fields are missing, IDs are invalid, or authorization is not granted.","parameters":[],"requestBody":{"description":"Manager evaluation creation data","typeName":"IJobPerformanceEvalManagerEvaluation.ICreate"},"responseBody":{"description":"Information of the newly created manager evaluation","typeName":"IJobPerformanceEvalManagerEvaluation"},"authorizationType":null,"authorizationRole":"manager","name":"create"},{"specification":"This operation updates an existing manager evaluation record identified by its unique ID in the job_performance_eval_manager_evaluations table. Managers can modify evaluation scores and comments for employees within a particular evaluation cycle. The updated data includes evaluation category scores and overall comments. This operation logs update timestamps and supports soft deletion status. Authorization to update is restricted to managers.","path":"/jobPerformanceEval/manager/managerEvaluations/{id}","method":"put","summary":"Update a manager evaluation by ID","description":"Update an existing manager evaluation record by its ID.\n\nManagers can modify scores for work performance, knowledge and skills, problem solving and collaboration, innovation, and update the comprehensive comment field.\n\nThis ensures evaluation corrections or amendments can be tracked with audit timestamps.\n\nOnly users with manager role have permission to perform this update.\n\nError handling covers non-existent records, invalid input data, and unauthorized access.","parameters":[{"name":"id","description":"Unique identifier of the manager evaluation to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Manager evaluation update data","typeName":"IJobPerformanceEvalManagerEvaluation.IUpdate"},"responseBody":{"description":"Updated manager evaluation information","typeName":"IJobPerformanceEvalManagerEvaluation"},"authorizationType":null,"authorizationRole":"manager","name":"update"},{"specification":"This operation deletes a manager evaluation record by its unique ID from the job_performance_eval_manager_evaluations table. This is a hard delete operation that permanently removes the record from the database. Access control requires the user to have the 'manager' role. This operation does not return a response body. Appropriate error responses are given if the record does not exist or the user lacks authorization.","path":"/jobPerformanceEval/manager/managerEvaluations/{id}","method":"delete","summary":"Delete a manager evaluation by ID","description":"Permanently remove a manager evaluation record identified by its unique ID.\n\nThis hard delete operation completely deletes the record from the database and cannot be undone.\n\nOnly users with manager role are authorized to perform this deletion.\n\nError scenarios include attempting to delete a non-existent record or unauthorized access attempts.\n\nNo response body is returned upon successful deletion.","parameters":[{"name":"id","description":"Unique identifier of the manager evaluation to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"erase"},{"specification":"This operation retrieves a paginated list of job performance evaluation scores, supporting complex search, filtering, and sorting functionalities. It operates on the job_performance_eval_evaluation_scores table from the Prisma schema. This table holds individual evaluation score records categorized by evaluation types and linked to corresponding evaluations, allowing detailed analysis of performance scores.","path":"/jobPerformanceEval/employee/evaluationScores","method":"patch","summary":"Search and retrieve paginated list of evaluation scores","description":"Retrieve a paginated collection of job performance evaluation scores matching specified search and filter criteria.\n\nThis operation enables users to query evaluation scores across categories and evaluations, with support for pagination and sorting to manage large datasets efficiently.\n\nSecurity considerations enforce role-based access control, ensuring that only users with 'employee' or 'manager' roles can access this data.\n\nThe endpoint maps to the job_performance_eval_evaluation_scores table in the database, guaranteeing accurate and up-to-date evaluation scoring information.\n\nRelated API operations include fetching individual evaluation scores by ID, creating new score entries, and updating existing records.","parameters":[],"requestBody":{"description":"Request payload for filtering and paging job performance evaluation scores","typeName":"IJobPerformanceEvalEvaluationScore.IRequest"},"responseBody":{"description":"Paginated response containing evaluation score data matching search criteria","typeName":"IPageIJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"employee","name":"index"},{"specification":"This operation retrieves a paginated list of job performance evaluation scores, supporting complex search, filtering, and sorting functionalities. It operates on the job_performance_eval_evaluation_scores table from the Prisma schema. This table holds individual evaluation score records categorized by evaluation types and linked to corresponding evaluations, allowing detailed analysis of performance scores.","path":"/jobPerformanceEval/manager/evaluationScores","method":"patch","summary":"Search and retrieve paginated list of evaluation scores","description":"Retrieve a paginated collection of job performance evaluation scores matching specified search and filter criteria.\n\nThis operation enables users to query evaluation scores across categories and evaluations, with support for pagination and sorting to manage large datasets efficiently.\n\nSecurity considerations enforce role-based access control, ensuring that only users with 'employee' or 'manager' roles can access this data.\n\nThe endpoint maps to the job_performance_eval_evaluation_scores table in the database, guaranteeing accurate and up-to-date evaluation scoring information.\n\nRelated API operations include fetching individual evaluation scores by ID, creating new score entries, and updating existing records.","parameters":[],"requestBody":{"description":"Request payload for filtering and paging job performance evaluation scores","typeName":"IJobPerformanceEvalEvaluationScore.IRequest"},"responseBody":{"description":"Paginated response containing evaluation score data matching search criteria","typeName":"IPageIJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"manager","name":"index"},{"specification":"This operation retrieves detailed data for a specific job performance evaluation score identified by its unique ID. The data includes category, score value, and references to the related evaluation record (self or manager evaluation). It operates on the job_performance_eval_evaluation_scores table in the Prisma schema. The API provides fine-grained access to individual score records for review or display.","path":"/jobPerformanceEval/employee/evaluationScores/{id}","method":"get","summary":"Get job performance evaluation score by ID","description":"Fetch detailed information of a single evaluation score by its unique identifier.\n\nThe operation ensures retrieval of all relevant properties including evaluation linkage, category, score, and audit timestamps.\n\nPermissions restrict access to users with 'employee' or 'manager' roles.\n\nThis API complements the listing, creation, and update operations for evaluation scores, facilitating comprehensive management of evaluation data.","parameters":[{"name":"id","description":"Unique identifier of the evaluation score","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed evaluation score record","typeName":"IJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"employee","name":"at"},{"specification":"This operation retrieves detailed data for a specific job performance evaluation score identified by its unique ID. The data includes category, score value, and references to the related evaluation record (self or manager evaluation). It operates on the job_performance_eval_evaluation_scores table in the Prisma schema. The API provides fine-grained access to individual score records for review or display.","path":"/jobPerformanceEval/manager/evaluationScores/{id}","method":"get","summary":"Get job performance evaluation score by ID","description":"Fetch detailed information of a single evaluation score by its unique identifier.\n\nThe operation ensures retrieval of all relevant properties including evaluation linkage, category, score, and audit timestamps.\n\nPermissions restrict access to users with 'employee' or 'manager' roles.\n\nThis API complements the listing, creation, and update operations for evaluation scores, facilitating comprehensive management of evaluation data.","parameters":[{"name":"id","description":"Unique identifier of the evaluation score","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed evaluation score record","typeName":"IJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"manager","name":"at"},{"specification":"Create a new evaluation score record linked to a specific evaluation (self or manager) in the job_performance_eval_evaluation_scores table. This operation requires specifying the evaluation ID, category, and score value (1 to 5) according to evaluation scales. It does not allow setting audit fields, which are system managed. The API enforces role-based permissions to control creation access.","path":"/jobPerformanceEval/employee/evaluationScores","method":"post","summary":"Create evaluation score record","description":"Create a new job performance evaluation score record.\n\nRequires an evaluation ID referencing either a self or manager evaluation, a category name (e.g., work_performance), and an integer score between 1 and 5.\n\nAccess is restricted to authorized users with roles 'employee' and 'manager'.\n\nOn success, returns the full created evaluation score record with timestamps.\n\nErrors occur if evaluation ID is invalid or score outside allowed range.\n\nThis operation is part of the full CRUD lifecycle for evaluation score management.","parameters":[],"requestBody":{"description":"Payload data to create a new evaluation score record","typeName":"IJobPerformanceEvalEvaluationScore.ICreate"},"responseBody":{"description":"Created evaluation score details","typeName":"IJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"employee","name":"create"},{"specification":"Create a new evaluation score record linked to a specific evaluation (self or manager) in the job_performance_eval_evaluation_scores table. This operation requires specifying the evaluation ID, category, and score value (1 to 5) according to evaluation scales. It does not allow setting audit fields, which are system managed. The API enforces role-based permissions to control creation access.","path":"/jobPerformanceEval/manager/evaluationScores","method":"post","summary":"Create evaluation score record","description":"Create a new job performance evaluation score record.\n\nRequires an evaluation ID referencing either a self or manager evaluation, a category name (e.g., work_performance), and an integer score between 1 and 5.\n\nAccess is restricted to authorized users with roles 'employee' and 'manager'.\n\nOn success, returns the full created evaluation score record with timestamps.\n\nErrors occur if evaluation ID is invalid or score outside allowed range.\n\nThis operation is part of the full CRUD lifecycle for evaluation score management.","parameters":[],"requestBody":{"description":"Payload data to create a new evaluation score record","typeName":"IJobPerformanceEvalEvaluationScore.ICreate"},"responseBody":{"description":"Created evaluation score details","typeName":"IJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"manager","name":"create"},{"specification":"Update an existing evaluation score record identified by its unique ID on the job_performance_eval_evaluation_scores table. This operation allows modification of category and score fields, but not the evaluation ID. System-managed timestamps are automatically updated. Role-based authorization ensures only permitted users can update records to maintain data integrity.","path":"/jobPerformanceEval/employee/evaluationScores/{id}","method":"put","summary":"Update evaluation score record by ID","description":"Update an existing job performance evaluation score by its unique ID.\n\nAllows updating the category and score values while keeping the evaluation ID immutable.\n\nAccess restricted to users with 'employee' or 'manager' roles.\n\nReturns the updated evaluation score record including timestamps.\n\nHandles errors such as invalid IDs or data validation failures.\n\nComplements creation, retrieval, and listing APIs for comprehensive score management.","parameters":[{"name":"id","description":"Unique identifier of the evaluation score to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload data to update evaluation score fields","typeName":"IJobPerformanceEvalEvaluationScore.IUpdate"},"responseBody":{"description":"Updated evaluation score details","typeName":"IJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"employee","name":"update"},{"specification":"Update an existing evaluation score record identified by its unique ID on the job_performance_eval_evaluation_scores table. This operation allows modification of category and score fields, but not the evaluation ID. System-managed timestamps are automatically updated. Role-based authorization ensures only permitted users can update records to maintain data integrity.","path":"/jobPerformanceEval/manager/evaluationScores/{id}","method":"put","summary":"Update evaluation score record by ID","description":"Update an existing job performance evaluation score by its unique ID.\n\nAllows updating the category and score values while keeping the evaluation ID immutable.\n\nAccess restricted to users with 'employee' or 'manager' roles.\n\nReturns the updated evaluation score record including timestamps.\n\nHandles errors such as invalid IDs or data validation failures.\n\nComplements creation, retrieval, and listing APIs for comprehensive score management.","parameters":[{"name":"id","description":"Unique identifier of the evaluation score to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload data to update evaluation score fields","typeName":"IJobPerformanceEvalEvaluationScore.IUpdate"},"responseBody":{"description":"Updated evaluation score details","typeName":"IJobPerformanceEvalEvaluationScore"},"authorizationType":null,"authorizationRole":"manager","name":"update"},{"specification":"This operation deletes a job performance evaluation score by its unique ID from the job_performance_eval_evaluation_scores table. It performs a hard delete, permanently removing the record from the database.\n\nOnly users with role 'employee' are authorized to access this endpoint.\nThis operation requires the 'id' parameter in the path, which must be a UUID.","description":"Delete a specific job performance evaluation score identified by the unique UUID `id`.\n\nThis operation permanently removes the record from the database and cannot be undone.\n\nAuthorization: Only accessible to authenticated employees.\n\nPath Parameter:\n- `id`: UUID of the evaluation score to delete.","summary":"Delete a job performance evaluation score by ID","parameters":[{"name":"id","description":"UUID of the evaluation score to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"employee","name":"erase","path":"/jobPerformanceEval/employee/evaluationScores/{id}","method":"delete"},{"specification":"This operation retrieves a paginated list of employee comments related to job performance evaluations from the job_performance_eval_employee_comments table.\n\nIt supports filtering, sorting, and pagination through request body parameters.\n\nAccessible by users with roles 'employee' and 'manager'.","description":"Retrieve a paginated list of employee comments on job performance evaluations with support for search, filtering, and pagination.\n\nEmployee comments capture qualitative feedback linked to evaluation cycles for context.\n\nAuthorization roles: 'employee' and 'manager'.\n\nRequest Body: Search criteria and pagination details.\nResponse Body: Paginated list of employee comments summaries.","summary":"Search and retrieve employee comments","parameters":[],"requestBody":{"description":"Search and pagination parameters for employee comments","typeName":"IJobPerformanceEvalEmployeeComments.IRequest"},"responseBody":{"description":"Paginated list of employee comment summaries","typeName":"IPageIJobPerformanceEvalEmployeeComments.ISummary"},"authorizationType":null,"authorizationRole":"employee","name":"index","path":"/jobPerformanceEval/employee/employeeComments","method":"patch"},{"specification":"This operation retrieves a paginated list of employee comments related to job performance evaluations from the job_performance_eval_employee_comments table.\n\nIt supports filtering, sorting, and pagination through request body parameters.\n\nAccessible by users with roles 'employee' and 'manager'.","description":"Retrieve a paginated list of employee comments on job performance evaluations with support for search, filtering, and pagination.\n\nEmployee comments capture qualitative feedback linked to evaluation cycles for context.\n\nAuthorization roles: 'employee' and 'manager'.\n\nRequest Body: Search criteria and pagination details.\nResponse Body: Paginated list of employee comments summaries.","summary":"Search and retrieve employee comments","parameters":[],"requestBody":{"description":"Search and pagination parameters for employee comments","typeName":"IJobPerformanceEvalEmployeeComments.IRequest"},"responseBody":{"description":"Paginated list of employee comment summaries","typeName":"IPageIJobPerformanceEvalEmployeeComments.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index","path":"/jobPerformanceEval/manager/employeeComments","method":"patch"},{"specification":"This operation retrieves detailed information about a specific employee comment by its UUID `id` from the job_performance_eval_employee_comments table.\n\nAuthorized roles include 'employee' and 'manager'.\n\nPath Parameter:\n- `id`: Unique identifier of the employee comment.","description":"Get detailed information of an employee comment by its unique UUID `id`.\n\nIncludes comment text, association to employee and evaluation cycle, and timestamps.\n\nAuthorization roles: 'employee' and 'manager'.","summary":"Get employee comment details by ID","parameters":[{"name":"id","description":"Unique identifier of the employee comment","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed employee comment information","typeName":"IJobPerformanceEvalEmployeeComments"},"authorizationType":null,"authorizationRole":"employee","name":"at","path":"/jobPerformanceEval/employee/employeeComments/{id}","method":"get"},{"specification":"This operation retrieves detailed information about a specific employee comment by its UUID `id` from the job_performance_eval_employee_comments table.\n\nAuthorized roles include 'employee' and 'manager'.\n\nPath Parameter:\n- `id`: Unique identifier of the employee comment.","description":"Get detailed information of an employee comment by its unique UUID `id`.\n\nIncludes comment text, association to employee and evaluation cycle, and timestamps.\n\nAuthorization roles: 'employee' and 'manager'.","summary":"Get employee comment details by ID","parameters":[{"name":"id","description":"Unique identifier of the employee comment","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed employee comment information","typeName":"IJobPerformanceEvalEmployeeComments"},"authorizationType":null,"authorizationRole":"manager","name":"at","path":"/jobPerformanceEval/manager/employeeComments/{id}","method":"get"},{"specification":"This operation creates a new employee comment record in the job_performance_eval_employee_comments table. The employee comment must include employee ID, evaluation cycle ID, and comment content.\n\nOnly users with role 'employee' are authorized to create employee comments.\n\nRequest Body: Data required to create an employee comment.\nResponse Body: Created employee comment information.","description":"Create a new employee comment with required fields employee ID, evaluation cycle ID, and comment text.\n\nOnly accessible to users with role 'employee'.","summary":"Create a new employee comment","parameters":[],"requestBody":{"description":"Data required to create an employee comment","typeName":"IJobPerformanceEvalEmployeeComments.ICreate"},"responseBody":{"description":"Newly created employee comment data","typeName":"IJobPerformanceEvalEmployeeComments"},"authorizationType":null,"authorizationRole":"employee","name":"create","path":"/jobPerformanceEval/employee/employeeComments","method":"post"},{"specification":"This operation updates an existing employee comment record in the job_performance_eval_employee_comments table. The API allows changing the comment text of an employee's evaluation comment identified by a unique UUID. All required user permissions must be held by authenticated employees to perform this operation. The operation updates the comment content, and timestamps created_at and updated_at help audit the modification. This supports tracking employee qualitative feedback on their own evaluations for a specific evaluation cycle.","description":"Update an existing employee comment by its unique ID.\n\nThis operation modifies the comment text of the employee comment record. The record is identified using the employee comment's unique UUID path parameter. The updated comment must comply with content length and format policies and is linked to an employee and an evaluation cycle in the database.\n\nOnly authenticated users with employee role authorization may perform this update. The operation ensures that the related audit fields such as updated_at are managed accordingly.\n\nNo other record fields such as employee ID or evaluation cycle ID can be changed using this method. The operation supports soft deletion logic internally but does not expose soft delete via API.\n\nThis API is integral for managing employee-submitted qualitative remarks within the Job Performance Evaluation service.","summary":"Update an employee comment by ID","parameters":[{"name":"id","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the employee comment to update"}],"requestBody":{"description":"New content for the employee comment","typeName":"IJobPerformanceEvalEmployeeComments.IUpdate"},"responseBody":{"description":"Updated employee comment record","typeName":"IJobPerformanceEvalEmployeeComments"},"authorizationRoles":["employee"],"name":"updateEmployeeComment","path":"/jobPerformanceEval/employee/employeeComments/{id}","method":"put","authorizationRole":"employee","authorizationType":null},{"specification":"This operation deletes an existing employee comment record identified by the unique UUID in the job_performance_eval_employee_comments table. The deletion is a hard delete permanently removing the record from the database as no soft delete handling is exposed via this API. This is strictly available to users with employee role to manage their own comments. Once deleted, the deleted comment cannot be recovered via this API and must be handled through backup or audit logs if necessary.","description":"Delete an employee comment by ID.\n\nThis operation permanently removes the employee comment record from the database, identified by the UUID path parameter.\n\nOnly users authenticated as employees can perform this deletion. Once deleted, the comment cannot be restored through this API.\n\nThis endpoint is critical for users managing their qualitative feedback and comments related to their evaluations within the system.","summary":"Delete an employee comment by ID","parameters":[{"name":"id","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the employee comment to delete"}],"requestBody":null,"responseBody":null,"authorizationRoles":["employee"],"name":"eraseEmployeeComment","path":"/jobPerformanceEval/employee/employeeComments/{id}","method":"delete","authorizationRole":"employee","authorizationType":null},{"specification":"This operation retrieves a paginated list of manager comments related to employee evaluations from the job_performance_eval_manager_comments table. It supports advanced filtering, searching, and pagination through the request body parameters allowing users to query comments by manager ID, evaluation cycle, date ranges, or keywords in comments. The response returns a paginated list of manager comment summaries optimized for client display. This API is available to users with manager role authorization as it handles sensitive evaluation feedback relevant to managerial functions.","description":"Retrieve a paginated list of manager comments with filtering and search capabilities.\n\nThis operation allows querying manager comments by various criteria including manager ID, evaluation cycle, date ranges, and keywords. It supports sorting and pagination parameters in the request body.\n\nThe returned results are paginated and use a summary DTO for optimized client-side display.\n\nAuthorization is restricted to users with manager role due to the sensitive nature of managerial evaluation comments.\n\nThis API supports effective management and review of qualitative managerial feedback within the job performance evaluation system.","summary":"Search and paginate manager comments","parameters":[],"requestBody":{"description":"Search and filter criteria for manager comments","typeName":"IJobPerformanceEvalManagerComments.IRequest"},"responseBody":{"description":"Paginated list of manager comment summaries","typeName":"IPageIJobPerformanceEvalManagerComments.ISummary"},"authorizationRoles":["manager"],"name":"searchManagerComments","path":"/jobPerformanceEval/manager/managerComments","method":"patch","authorizationRole":"manager","authorizationType":null},{"specification":"This operation retrieves a specific manager comment record by UUID from the job_performance_eval_manager_comments table. It returns detailed information about the manager comment, including the manager who authored it, related evaluation cycle, comment content, and audit timestamps. Access is limited to authorized manager users. This API supports viewing and verifying individual manager feedback records in the job performance evaluation system.","description":"Retrieve detail of a manager comment by its unique ID.\n\nThis operation fetches the manager comment information identified by the UUID from the path parameter. It includes manager info, evaluation cycle linkage, comment content, and timestamps.\n\nAccess is limited to users with manager role authorization.\n\nThe operation does not allow modifications, only retrieval.\n\nThis API is essential for auditing and reviewing manager qualitative feedback on employee evaluations.","summary":"Retrieve a manager comment by ID","parameters":[{"name":"id","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the manager comment to retrieve"}],"requestBody":null,"responseBody":{"description":"Detailed manager comment information","typeName":"IJobPerformanceEvalManagerComments"},"authorizationRoles":["manager"],"name":"atManagerComment","path":"/jobPerformanceEval/manager/managerComments/{id}","method":"get","authorizationRole":"manager","authorizationType":null},{"specification":"This operation creates a new manager comment record in the job_performance_eval_manager_comments table. It stores qualitative text feedback from a manager about an employee in a specific evaluation cycle. The API requires the manager's ID, the evaluation cycle ID, and the comment content. Created and updated timestamps are set by the system, and soft deletion is supported via a nullable deleted_at column. This operation is used by managers to submit their evaluation comments for employees during evaluation periods.","description":"Create a new manager comment linking a manager to an evaluation cycle with a textual comment. This API validates the manager's identity and requires a valid evaluation cycle. Manager comments provide qualitative insights complementing numeric evaluation scores.\n\nAuthorization is restricted to authenticated managers. The system automatically timestamps creation and updates, and supports soft deletion.\n\nThis operation corresponds to the job_performance_eval_manager_comments table described in the Prisma schema, which includes references to the manager and evaluation cycle entities along with comment content. The created record can later be retrieved or updated. Errors result from invalid foreign keys or missing required fields.","summary":"Create a manager comment for evaluation cycle","parameters":[],"requestBody":{"description":"Manager comment creation data","typeName":"IJobPerformanceEvalManagerComments.ICreate"},"responseBody":{"description":"Created manager comment information","typeName":"IJobPerformanceEvalManagerComments"},"authorizationType":null,"authorizationRole":"manager","name":"create","path":"/jobPerformanceEval/manager/managerComments","method":"post"},{"specification":"This operation updates an existing manager comment by ID in the job_performance_eval_manager_comments table. It allows modification of the comment content associated with a specific manager, linked to a particular evaluation cycle. The operation requires the comment ID as a path parameter and the updated comment data in the request body. Created and deleted timestamps are system-managed. The updated_at timestamp is refreshed on modification. Soft deletion support is maintained.\n\nManagers can update their evaluation comments to reflect changes or corrections during the evaluation period. Access control ensures only authorized managers can modify their comments.\n\nThe operation relates specifically to records in job_performance_eval_manager_comments with the specified comment ID. It rejects invalid IDs or unauthorized attempts.","description":"Update the text content of a manager comment identified by its ID. This API allows managers to revise their evaluation comments for employees during active evaluation cycles.\n\nAuthorization is limited to the comment author or authorized managers. Data integrity and soft deletion status are handled by the system.\n\nThe request requires the comment ID path parameter and the updated comment data in the request body. Successful update returns the updated record.","summary":"Update a manager comment by ID","parameters":[{"name":"id","description":"Unique identifier of the manager comment to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated manager comment data","typeName":"IJobPerformanceEvalManagerComments.IUpdate"},"responseBody":{"description":"Updated manager comment information","typeName":"IJobPerformanceEvalManagerComments"},"authorizationType":null,"authorizationRole":"manager","name":"update","path":"/jobPerformanceEval/manager/managerComments/{id}","method":"put"},{"specification":"This operation permanently deletes a manager comment from the job_performance_eval_manager_comments table identified by its unique ID. It removes the record entirely, so the comment is no longer retrievable unless restored from backup. The operation requires the manager comment ID as a path parameter. Soft deletion is logically supported by a nullable deleted_at column, but this API performs a hard delete.\n\nAuthorization is restricted to managers with appropriate permissions. Deletion is irreversible, so caution is advised.\n\nThis endpoint interacts with the job_performance_eval_manager_comments table, deleting comments associated with managers and evaluation cycles.","description":"Delete a manager comment identified by its ID. This operation removes the record completely from the database.\n\nOnly authorized managers can delete comments, ensuring compliance and accountability.\n\nThe process does not return any content. Errors result from invalid IDs or authorization failures.","summary":"Delete a manager comment by ID","parameters":[{"name":"id","description":"Unique identifier of the manager comment to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"manager","name":"erase","path":"/jobPerformanceEval/manager/managerComments/{id}","method":"delete"},{"specification":"This operation retrieves a paginated list of evaluation snapshots representing historical job performance evaluations for employees. It supports filtering, sorting, and pagination to accommodate enterprise level evaluation history management and reporting. The operation references the job_performance_eval_evaluation_snapshots table storing combined employee self-evaluations and manager evaluations with scores, comments, and timestamps.\n\nClients use this operation to view historical evaluation data snapshots, enabling audit, trend analysis, and reporting.\n\nBecause evaluation snapshots are stable historical data, this endpoint is read-only and accessible to authorized roles such as managers and potentially HR. The operation accepts complex filtering, includes pagination parameters, and returns a paginated collection of evaluation snapshot summaries.\n\nIt involves related entities such as employees and evaluation cycles to provide rich historical context.","description":"Retrieve a paginated list of job performance evaluation snapshots representing historical combined employee and manager evaluation data.\n\nThis operation allows filtering by evaluation cycle, employee, and other criteria using a flexible request body schema. Pagination and sorting improve usability for large datasets.\n\nAuthorization roles include managers who review evaluation histories for compliance, trend tracking, and HR decision making.\n\nThe response returns paginated evaluation snapshot summaries suitable for listing and detail exploration.","summary":"List paginated evaluation snapshots with filtering","parameters":[],"requestBody":{"description":"Filtering, pagination, and sorting parameters for evaluation snapshots","typeName":"IJobPerformanceEvalEvaluationSnapshots.IRequest"},"responseBody":{"description":"Paginated list of evaluation snapshot summaries","typeName":"IPageIJobPerformanceEvalEvaluationSnapshots.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index","path":"/jobPerformanceEval/manager/evaluationSnapshots","method":"patch"},{"specification":"This operation retrieves a single job performance evaluation snapshot record by its unique identifier. It accesses the job_performance_eval_evaluation_snapshots table, which contains historical snapshots of employee self-evaluations and manager evaluations for a specific evaluation cycle. The snapshot stores both employee and manager scores for performance, knowledge, problem-solving, and innovation, along with optional comments. This endpoint is used to fetch detailed evaluation snapshot data for reporting and audit purposes.","path":"/jobPerformanceEval/employee/evaluationSnapshots/{id}","method":"get","summary":"Retrieve a specific job performance evaluation snapshot by ID","parameters":[{"name":"id","description":"Unique identifier of the evaluation snapshot to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed evaluation snapshot information","typeName":"IJobPerformanceEvalEvaluationSnapshot"},"authorizationType":null,"authorizationRole":"employee","name":"at","description":"Retrieve a detailed snapshot of job performance evaluation for a specific evaluation record identified by its unique ID. This snapshot includes both employee self-assessment and manager evaluation scores across multiple categories such as work performance, knowledge/skills, problem-solving and collaboration, and innovation.\n\nThe operation retrieves data from the job_performance_eval_evaluation_snapshots table, which serves as an immutable historical record for evaluations conducted during specific evaluation cycles. It includes timestamps and supports soft deletion for logical record management.\n\nSecurity considerations require that only authorized users such as HR personnel, managers, or administrators access this detailed data. Proper validation of the snapshot ID is necessary to avoid invalid or unauthorized data access.\n\nThis operation returns the full detailed evaluation snapshot, useful for report generation, historical analysis, and audit compliance. No request body is required as this is a read-only GET operation. Errors such as not found or unauthorized access should be handled at the application layer."},{"specification":"This operation retrieves a single job performance evaluation snapshot record by its unique identifier. It accesses the job_performance_eval_evaluation_snapshots table, which contains historical snapshots of employee self-evaluations and manager evaluations for a specific evaluation cycle. The snapshot stores both employee and manager scores for performance, knowledge, problem-solving, and innovation, along with optional comments. This endpoint is used to fetch detailed evaluation snapshot data for reporting and audit purposes.","path":"/jobPerformanceEval/manager/evaluationSnapshots/{id}","method":"get","summary":"Retrieve a specific job performance evaluation snapshot by ID","parameters":[{"name":"id","description":"Unique identifier of the evaluation snapshot to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed evaluation snapshot information","typeName":"IJobPerformanceEvalEvaluationSnapshot"},"authorizationType":null,"authorizationRole":"manager","name":"at","description":"Retrieve a detailed snapshot of job performance evaluation for a specific evaluation record identified by its unique ID. This snapshot includes both employee self-assessment and manager evaluation scores across multiple categories such as work performance, knowledge/skills, problem-solving and collaboration, and innovation.\n\nThe operation retrieves data from the job_performance_eval_evaluation_snapshots table, which serves as an immutable historical record for evaluations conducted during specific evaluation cycles. It includes timestamps and supports soft deletion for logical record management.\n\nSecurity considerations require that only authorized users such as HR personnel, managers, or administrators access this detailed data. Proper validation of the snapshot ID is necessary to avoid invalid or unauthorized data access.\n\nThis operation returns the full detailed evaluation snapshot, useful for report generation, historical analysis, and audit compliance. No request body is required as this is a read-only GET operation. Errors such as not found or unauthorized access should be handled at the application layer."},{"specification":"This operation provides a paginated search and filter interface for retrieving aggregated team-level statistics of job performance evaluations. It interacts with the job_performance_eval_team_statistics table that stores average evaluation scores per evaluation cycle and organizational team unit. This endpoint supports complex queries including filtering by evaluation cycle, team, date ranges, and sorting, enabling HR and management to monitor team performance trends effectively.","path":"/jobPerformanceEval/employee/teamStatistics","method":"patch","summary":"Search and retrieve paginated job performance evaluation team statistics","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for team statistics filtering","typeName":"IJobPerformanceEvalTeamStatistic.IRequest"},"responseBody":{"description":"Paginated list of team statistics matching search criteria","typeName":"IPageIJobPerformanceEvalTeamStatistic.ISummary"},"authorizationType":null,"authorizationRole":"employee","name":"index","description":"Search and retrieve aggregated team statistics from job performance evaluations. Users can apply various filters such as evaluation cycle, organizational team, and date ranges, and receive paginated results sorted by score averages or evaluation counts.\n\nThe data source is the job_performance_eval_team_statistics table which contains average scores across performance categories and evaluation counts. This data supports management and HR in assessing team-level evaluation outcomes over time.\n\nSecurity requires role-based access control; typically, only HR, managers, or administrators can perform this search.\n\nThe request body supports complex query conditions, including pagination parameters to control result size and sorting options. The response includes team statistics summaries for each team matching the criteria."},{"specification":"This operation provides a paginated search and filter interface for retrieving aggregated team-level statistics of job performance evaluations. It interacts with the job_performance_eval_team_statistics table that stores average evaluation scores per evaluation cycle and organizational team unit. This endpoint supports complex queries including filtering by evaluation cycle, team, date ranges, and sorting, enabling HR and management to monitor team performance trends effectively.","path":"/jobPerformanceEval/manager/teamStatistics","method":"patch","summary":"Search and retrieve paginated job performance evaluation team statistics","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for team statistics filtering","typeName":"IJobPerformanceEvalTeamStatistic.IRequest"},"responseBody":{"description":"Paginated list of team statistics matching search criteria","typeName":"IPageIJobPerformanceEvalTeamStatistic.ISummary"},"authorizationType":null,"authorizationRole":"manager","name":"index","description":"Search and retrieve aggregated team statistics from job performance evaluations. Users can apply various filters such as evaluation cycle, organizational team, and date ranges, and receive paginated results sorted by score averages or evaluation counts.\n\nThe data source is the job_performance_eval_team_statistics table which contains average scores across performance categories and evaluation counts. This data supports management and HR in assessing team-level evaluation outcomes over time.\n\nSecurity requires role-based access control; typically, only HR, managers, or administrators can perform this search.\n\nThe request body supports complex query conditions, including pagination parameters to control result size and sorting options. The response includes team statistics summaries for each team matching the criteria."},{"specification":"This operation retrieves detailed information about a specific team statistics record by its unique ID, stored in the job_performance_eval_team_statistics table. It returns average evaluation scores for team performance metrics during a particular evaluation cycle, including counts of evaluations contributing to the statistics. It serves HR and management reporting and analysis needs.","path":"/jobPerformanceEval/employee/teamStatistics/{id}","method":"get","summary":"Retrieve a specific job performance evaluation team statistic by ID","parameters":[{"name":"id","description":"Unique identifier of the team statistic record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job performance evaluation team statistic information","typeName":"IJobPerformanceEvalTeamStatistic"},"authorizationType":null,"authorizationRole":"employee","name":"at","description":"Retrieve detailed job performance evaluation statistics for a specific team identified by its unique ID. This includes average scores in work performance, knowledge, problem-solving, and innovation metrics aggregated over the evaluation cycle.\n\nThe data is sourced from the job_performance_eval_team_statistics table representing summarized team-level evaluation data. The operation supports fetching immutable records including timestamps and handles soft deletion logic.\n\nSecurity considerations restrict access to authorized personnel only. Appropriate validation and error handling are expected to ensure data accuracy and secure access.\n\nThis GET operation requires the statistics record ID as a path parameter and returns the detailed record data without a request body."},{"specification":"This operation retrieves detailed information about a specific team statistics record by its unique ID, stored in the job_performance_eval_team_statistics table. It returns average evaluation scores for team performance metrics during a particular evaluation cycle, including counts of evaluations contributing to the statistics. It serves HR and management reporting and analysis needs.","path":"/jobPerformanceEval/manager/teamStatistics/{id}","method":"get","summary":"Retrieve a specific job performance evaluation team statistic by ID","parameters":[{"name":"id","description":"Unique identifier of the team statistic record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job performance evaluation team statistic information","typeName":"IJobPerformanceEvalTeamStatistic"},"authorizationType":null,"authorizationRole":"manager","name":"at","description":"Retrieve detailed job performance evaluation statistics for a specific team identified by its unique ID. This includes average scores in work performance, knowledge, problem-solving, and innovation metrics aggregated over the evaluation cycle.\n\nThe data is sourced from the job_performance_eval_team_statistics table representing summarized team-level evaluation data. The operation supports fetching immutable records including timestamps and handles soft deletion logic.\n\nSecurity considerations restrict access to authorized personnel only. Appropriate validation and error handling are expected to ensure data accuracy and secure access.\n\nThis GET operation requires the statistics record ID as a path parameter and returns the detailed record data without a request body."}],"components":{"authorization":[{"name":"employee","description":"Authenticated employee who can perform self-assessment and view own evaluation history.","kind":"member"},{"name":"manager","description":"Authenticated manager who can view and evaluate assigned employees, modify their assessments, and access evaluation reports.","kind":"admin"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIJobPerformanceEvalEvaluationCycle.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalEvaluationCycle.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalSystemSettings":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalSystemSettings"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalEmployees.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalEmployees.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalManager.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalManager.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalJobGroups.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalJobGroups.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalJobSeries.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalJobSeries.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalJobRole.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalJobRole.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalTaskGroup.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalTaskGroup.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalTask":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalTask"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalTaskActivity.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalTaskActivity.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalKnowledgeArea.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalKnowledgeArea.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalSelfEvaluation.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalSelfEvaluation.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalManagerEvaluation.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalManagerEvaluation.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalEvaluationScore":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalEvaluationScore"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalEmployeeComments.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalEmployeeComments.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalManagerComments.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalManagerComments.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalEvaluationSnapshots.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalEvaluationSnapshots.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIJobPerformanceEvalTeamStatistic.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalTeamStatistic.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IJobPerformanceEvalEmployee":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key.\n\nUnique identifier for the employee."},"email":{"type":"string","description":"Employee's unique email address used for login and notifications."},"password_hash":{"type":"string","description":"Hashed password for authentication.\n\nThis field is NOT included in response bodies for security."},"name":{"type":"string","description":"Employee's full name."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when record was soft deleted, NULL if active.\n\nThis field is optional."}},"required":["id","email","password_hash","name","created_at","updated_at"],"description":"Employee entity representing system users with authentication details including unique email and hashed password.\n\nIncludes personal identification, timestamps, and soft deletion support."},"IJobPerformanceEvalEmployee.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Employee's unique email address.\n\nMust be unique and used for login."},"password_hash":{"type":"string","description":"Hashed password for authentication.\n\nPassword must be hashed prior to sending."},"name":{"type":"string","description":"Employee's full name."}},"required":["email","password_hash","name"],"description":"Request body for creating a new employee.\n\nContains required fields excluding id and timestamps which are auto-generated.\nPassword hash must be provided, password hashing should be done before sending.\nDoes NOT accept user_id or other actor IDs."},"IJobPerformanceEvalEmployee.ILogin":{"type":"object","properties":{"email":{"type":"string","description":"Email address for employee login."},"password":{"type":"string","description":"Cleartext password for authentication."}},"required":["email","password"],"description":"Request payload for employee login authentication.\n\nIncludes email and password fields."},"IJobPerformanceEvalEmployee.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token issued on prior authentication."}},"required":["refresh_token"],"description":"Request payload for refreshing JWT authorization tokens.\n\nMust include valid refresh token string."},"IJobPerformanceEvalEmployee.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Employee unique UUID identifier."},"email":{"type":"string","description":"Email address of the employee."},"password_hash":{"type":"string","description":"Hashed password for authentication.\n\nThis field is NOT included in response bodies for security."},"name":{"type":"string","description":"Full name of the employee."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when record was soft deleted, NULL if active.\n\nThis field is optional."},"access_token":{"type":"string","description":"JWT access token string for API authorization."},"refresh_token":{"type":"string","description":"JWT refresh token string to renew access."},"expires_at":{"type":"string","format":"date-time","description":"Token expiration timestamp in ISO 8601 format."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","password_hash","name","created_at","updated_at","token"],"description":"Response containing employee authentication tokens and identity info.\n\nIncludes access and refresh JWT tokens along with expiration."},"IJobPerformanceEvalManager":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the manager.\n\nPrimary Key."},"email":{"type":"string","description":"Manager's unique email address used for login and notifications.\n\nMust be a valid email string."},"password_hash":{"type":"string","description":"Hashed password for authentication. Passwords are never stored in plaintext.\n\nThis field is excluded from response to protect sensitive information."},"name":{"type":"string","description":"Manager's full name."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 format date-time string."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nISO 8601 format date-time string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; if null, record is active.\n\nNullable ISO 8601 date-time string or null."}},"required":["id","email","password_hash","name","created_at","updated_at"],"description":"Manager identity and authentication information for the Job Performance\nEvaluation service. Includes email, password hash for login, full name,\nand temporal audit fields. Unique email ensures distinct manager\naccounts. Supports soft delete with deleted_at. This table is a primary\nbusiness entity for manager users who supervise employees.\n\n@namespace Actors\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IJobPerformanceEvalManager.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Manager's unique email address used for login and notifications.\n\nMust be a valid email string."},"password":{"type":"string","description":"Password in plain text for initial registration.\n\nThis will be hashed and stored as password_hash.\n\nShould meet password security requirements."},"name":{"type":"string","description":"Manager's full name.\n\nRequired for identification."}},"required":["email","password","name"],"description":"Request body for creating new manager user.\n\nThis includes email, password (plain text), and name fields necessary for\naccount creation and authentication.\n\nPassword will be securely hashed.\n\n@namespace Actors\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IJobPerformanceEvalManager.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated manager."},"email":{"type":"string","description":"Manager's unique email address used for login and notifications.\n\nMust be a valid email string."},"password_hash":{"type":"string","description":"Hashed password for authentication. Passwords are never stored in plaintext.\n\nThis field is excluded from response to protect sensitive information."},"name":{"type":"string","description":"Manager's full name."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 format date-time string."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nISO 8601 format date-time string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; if null, record is active.\n\nNullable ISO 8601 date-time string or null."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","password_hash","name","created_at","updated_at","token"],"description":"Authorization response containing JWT token for manager users.\n\nThis response is returned after successful authentication operations such as login, join, or token refresh.\n\n@namespace Actors\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IJobPerformanceEvalManager.ILogin":{"type":"object","properties":{"email":{"type":"string","description":"Manager's unique email address."},"password":{"type":"string","description":"Password in plain text for authentication."}},"required":["email","password"],"description":"Request body for manager login credentials.\n\nIncludes email and password fields for authentication purposes.\n\n@namespace Actors\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IJobPerformanceEvalManager.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Valid refresh token string to obtain new access tokens."}},"required":["refresh_token"],"description":"Request body for refreshing JWT tokens using a refresh token.\n\nIncludes refresh_token field.\n\n@namespace Actors\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IJobPerformanceEvalEvaluationCycle.IRequest":{"type":"object","properties":{"cycle_code":{"type":"string","description":"Optional cycle code filter (exact match)."},"cycle_name":{"type":"string","description":"Optional cycle name filter (partial match supported)."},"start_date_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional start date filter: records starting AFTER or ON this date."},"end_date_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end date filter: records ending BEFORE or ON this date."},"is_active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional active status filter."},"page":{"type":"integer","format":"int32","minimum":0,"description":"Pagination: page number (unsigned integer)."},"limit":{"type":"integer","format":"int32","minimum":0,"description":"Pagination: records per page (unsigned integer)."}},"description":"Request type for filtering and pagination in list operations.\n\nSupports filtering by cycle_code, cycle_name, date ranges, and active status.\nIncludes pagination parameters: page, limit.","required":[]},"IJobPerformanceEvalEvaluationCycle":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for each evaluation cycle."},"cycle_code":{"type":"string","description":"Unique code representing the evaluation cycle.\n\nBusiness rule: must be unique across all evaluation cycles."},"cycle_name":{"type":"string","description":"Descriptive name of the evaluation cycle."},"start_date":{"type":"string","format":"date-time","description":"Starting datetime of the evaluation cycle period in ISO 8601 format."},"end_date":{"type":"string","format":"date-time","description":"Ending datetime of the evaluation cycle period in ISO 8601 format."},"is_active":{"type":"boolean","description":"Flag indicating whether this evaluation cycle is currently active."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp in ISO 8601 format.\n\nSystem managed."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp in ISO 8601 format.\n\nSystem managed."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp, null if not deleted. ISO 8601 datetime optional."}},"required":["id","cycle_code","cycle_name","start_date","end_date","is_active","created_at","updated_at","deleted_at"],"description":"Evaluation cycle entity representing a distinct period when evaluations are conducted.\n\nReferenced by evaluations, comments, and statistics.\n\nIncludes comprehensive temporal tracking and soft deletion for audit and data lifecycle management."},"IJobPerformanceEvalEvaluationCycle.ICreate":{"type":"object","properties":{"cycle_code":{"type":"string","description":"Unique code representing the evaluation cycle.\n\nBusiness rule: must be unique across all evaluation cycles."},"cycle_name":{"type":"string","description":"Descriptive name of the evaluation cycle."},"start_date":{"type":"string","format":"date-time","description":"Starting datetime of the evaluation cycle period in ISO 8601 format."},"end_date":{"type":"string","format":"date-time","description":"Ending datetime of the evaluation cycle period in ISO 8601 format."},"is_active":{"type":"boolean","description":"Flag indicating whether this evaluation cycle is currently active."}},"required":["cycle_code","cycle_name","start_date","end_date","is_active"],"description":"Request body type for creating a new evaluation cycle.\n\nRequires all fields except system-managed timestamps and soft delete.\n\ncycle_code: unique string.\n\ncycle_name: descriptive string.\n\nstart_date, end_date: ISO 8601 datetimes.\n\nis_active: boolean."},"IJobPerformanceEvalEvaluationCycle.IUpdate":{"type":"object","properties":{"cycle_code":{"type":"string","description":"Unique code representing the evaluation cycle.\n\nBusiness rule: must be unique across all evaluation cycles."},"cycle_name":{"type":"string","description":"Descriptive name of the evaluation cycle."},"start_date":{"type":"string","format":"date-time","description":"Starting datetime of the evaluation cycle period in ISO 8601 format."},"end_date":{"type":"string","format":"date-time","description":"Ending datetime of the evaluation cycle period in ISO 8601 format."},"is_active":{"type":"boolean","description":"Flag indicating whether this evaluation cycle is currently active."}},"required":[],"description":"Request body type for updating an existing evaluation cycle.\n\nAllows updating fields except system-managed timestamps, id, and soft delete.\n\nAll fields optional to support partial updates."},"IJobPerformanceEvalSystemSettings.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Page number.\n\nPage index for pagination starting from 1."},"limit":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Limit of records per page.\n\nMaximum number of records returned per page."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search keyword.\n\nSearch term applied on setting_key or description."},"setting_key":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by setting key.\n\nAllows to filter system settings by exact setting key."},"order_by":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order.\n\nSort by setting_key ascending or descending."}},"required":[],"description":"Request parameters for searching and pagination of system settings.\n\nSupports filtering, pagination, and sorting criteria for the system settings."},"IJobPerformanceEvalSystemSettings":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key.\n\nUnique identifier for the system setting."},"setting_key":{"type":"string","description":"Unique key identifying the system setting.\n\nRepresents the configuration key for this system setting."},"setting_value":{"type":"string","description":"Value corresponding to the system setting key.\n\nContains the actual configuration value associated with the setting key."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description providing context or notes about the system setting.\n\nOptional detailed explanation or notes regarding the setting usage."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 date-time string indicating when the record was created."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nISO 8601 date-time string indicating when the record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp, null if not deleted.\n\nISO 8601 date-time string or null if the record is active."}},"required":["id","setting_key","setting_value","created_at","updated_at"],"description":"System setting entity representing configuration key-value pairs and auditing information.\n\nIncludes unique keys, values, optional description, creation and update timestamps, and soft deletion support."},"IJobPerformanceEvalEmployees.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Page number.\n\nThe current page number for paginated results."},"limit":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Limit of records per page.\n\nDefines max number of entries to fetch."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search text.\n\nKeyword to search employees by name or email."},"order_by_name":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order by name.\n\nCan be 'asc' or 'desc'."}},"required":[],"description":"Request parameters to query/filter employee list with pagination.\n\nIncludes filter criteria like search keyword on name or email."},"IJobPerformanceEvalEmployees":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key.\n\nUnique identifier for the employee."},"email":{"type":"string","description":"Employee's unique email address used for login and notifications."},"name":{"type":"string","description":"Employee's full name."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 date-time string when the record was created."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nISO 8601 date-time string for last update time."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when record was soft deleted, NULL if active.\n\nISO 8601 date-time string or null if the record is active."}},"required":["id","email","name","created_at","updated_at"],"description":"Employee entity representing basic employee information in the system.\n\nIncludes unique email, name, timestamps, and soft deletion support."},"IJobPerformanceEvalEmployee.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"Employee's unique email address used for login and notifications.\n\nMust follow the format of a valid email."},"password_hash":{"type":"string","description":"Hashed password for authentication. Never store plaintext passwords.\n\nMust be a secure hash value."},"name":{"type":"string","description":"Employee's full name.\n\nUsed for display and identification in the system."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when record was soft deleted, NULL if active.\n\nUsed for logical deletion and audit purposes."}},"required":[],"description":"Input type for updating existing Employee information.\n\nAllows partial updates of mutable fields like email, password hash, and name.\n\nThe 'deleted_at' field supports logical deletion and must be nullable."},"IJobPerformanceEvalManager.IRequest":{"type":"object","properties":{"search":{"oneOf":[{"type":"string","description":"Name or partial name to search managers.\n\nCan be null to indicate no filter."},{"type":"null"}],"description":"Name or partial name to search managers.\n\nCan be null to indicate no filter."},"page":{"oneOf":[{"type":"integer","format":"uint32"},{"type":"null"}],"description":"Page number for pagination.\n\nOptional; defaults to 1."},"limit":{"oneOf":[{"type":"integer","format":"uint32"},{"type":"null"}],"description":"Number of items per page.\n\nOptional; defaults to 20."},"sort":{"oneOf":[{"type":"string","description":"Sort criteria.\n\nCould be null or string representing field and order, e.g., \"name_asc\"."},{"type":"null"}],"description":"Sort criteria.\n\nCould be null or string representing field and order, e.g., \"name_asc\"."}},"required":[],"description":"Request body interface for manager list queries.\n\nSupports paging, searching by name, and sorting.\n\n@namespace Actors\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IJobPerformanceEvalManager.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"Manager's unique email address used for login and notifications.\n\nMust follow the format of a valid email."},"password_hash":{"type":"string","description":"Hashed password for authentication. Passwords are never stored in plaintext.\n\nMust be a secure hash value."},"name":{"type":"string","description":"Manager's full name.\n\nUsed for display and identification in the system."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; if null, record is active.\n\nUsed for logical deletion and audit purposes."}},"required":[],"description":"Input type for updating manager information.\n\nAllows partial updates to email, password hash, name, and logical deletion timestamp."},"IJobPerformanceEvalJobGroups.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Filter by unique job group code.\n\nThis property is expected to be a string uniquely identifying a job group.\nIt is a required property in the search request to narrow down the search."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by name pattern.\n\nOptional pattern or keyword filter to search job groups by name.\nIf not used, can be explicitly set to null."},"createdAfter":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Minimum creation date filter.\n\nOptional ISO 8601 formatted date-time string to filter job groups created after this date.\nUse explicit null if no value is provided."},"createdBefore":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Maximum creation date filter.\n\nOptional ISO 8601 formatted date-time string to filter job groups created before this date.\nUse explicit null if no value is provided."},"page":{"oneOf":[{"type":"integer","format":"uint32"},{"type":"null"}],"description":"Pagination page number.\n\nOptional unsigned integer indicating the page number for paginated results.\nUse explicit null if no value is provided."},"limit":{"oneOf":[{"type":"integer","format":"uint32"},{"type":"null"}],"description":"Number of records per page.\n\nOptional unsigned integer limiting the number of items per page.\nUse explicit null if no value is provided."},"sortKey":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort key for the paginated results.\n\nOptional string specifying the attribute name to sort by, such as 'name' or 'created_at'.\nUse explicit null if not sorting."},"sortOrder":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order direction.\n\nOptional string with allowed values 'asc' or 'desc' to define sort order.\nUse explicit null if no sorting order."}},"required":["code"],"description":"Search criteria and pagination parameters for job groups"},"IJobPerformanceEvalJobGroup":{"type":"object","properties":{"code":{"type":"string","description":"Unique code identifying the job group.\n\nThis property represents the unique identifier code for the job group, used\nthroughout the organizational hierarchy to categorize broad job families.\nIt is a required string value expected to uniquely represent each job group in the system."},"name":{"type":"string","description":"Name of the job group.\n\nThe display name of the job group used in user interfaces and reports.\nIt is a required string field that must accurately reflect the job family name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the job group.\n\nThis optional field provides additional context or explanations regarding the job group.\nIt may include organizational notes or relevant information to further describe the group.\nThis field can be null if no description is provided."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 formatted date-time string indicating when this record was created.\nThis is a read-only field managed by the system."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nISO 8601 formatted date-time string indicating the last time this record was updated.\nThis is a read-only timestamp maintained by the system."}},"required":["code","name","created_at","updated_at"],"description":"Job Group entity representing the highest-level job classification in the organizational hierarchy.\n\nIt includes identifying properties such as unique code and name, and may contain descriptive\ninformation for HR and administrative purposes.\n\nTimestamps for creation and update are recorded for audit and change tracking.\n\nThis entity is a fundamental part of the job hierarchy management in the Job Performance Evaluation service."},"IJobPerformanceEvalJobGroup.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code identifying the job group.\n\nRequired field for creating a new job group. Must be unique in the system."},"name":{"type":"string","description":"Name of the job group.\n\nRequired friendly name of the job group."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the job group.\n\nOptional descriptive text about this job group."}},"required":["code","name"],"description":"Request type to create a new job group."},"IJobPerformanceEvalJobGroup.IUpdate":{"type":"object","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifying the job group.\n\nOptional field. Updating code must maintain uniqueness."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Name of the job group.\n\nOptional field. Represents the display name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the job group.\n\nOptional descriptive text."}},"required":[],"description":"Request type to update an existing job group."},"IJobPerformanceEvalJobSeries.IRequest":{"type":"object","properties":{"code":{"type":"string","description":"Optional filter for job series code"},"name":{"type":"string","description":"Optional filter for job series name, supports partial matching"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter for job series description"},"page":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Optional page number for pagination"},"limit":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Optional limit of records per page"},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional sort field and direction"}},"description":"Request parameters for searching and paginating job series.","required":[]},"IJobPerformanceEvalJobSeries":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the job series.\n\nFormat: UUID string."},"job_group_id":{"type":"string","format":"uuid","description":"Identifier of the parent job group.\n\nFormat: UUID string."},"code":{"type":"string","description":"Unique code representing the job series."},"name":{"type":"string","description":"The name of the job series."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the job series."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional timestamp for soft deletion."}},"required":["id","job_group_id","code","name","created_at","updated_at"],"description":"Job Series represents the mid-level job classification under a job group.\n\nIt helps segment job roles into more specific clusters. This model\nreferences the parent job group and is essential for maintaining job\nhierarchy."},"IJobPerformanceEvalJobSeries.ICreate":{"type":"object","properties":{"job_group_id":{"type":"string","format":"uuid","description":"Parent job group's UUID"},"code":{"type":"string","description":"Unique code for the job series"},"name":{"type":"string","description":"Name of the job series"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description"}},"required":["job_group_id","code","name"],"description":"Request payload to create a new job series entity."},"IJobPerformanceEvalJobSeries.IUpdate":{"type":"object","properties":{"job_group_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional updated parent job group's UUID"},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated unique code"},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated name"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated description"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft delete timestamp"}},"required":[],"description":"Request payload to update an existing job series entity with optional partial fields."},"IJobPerformanceEvalJobRole":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the job role."},"job_series_id":{"type":"string","description":"Parent job series identifier."},"code":{"type":"string","description":"Unique code for the job role."},"name":{"type":"string","description":"Name of the job role."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional long description about the job role."},"growth_level":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional classification for growth level."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp."}},"required":["id","job_series_id","code","name","created_at","updated_at"],"description":"Job Role represents the specific job function within a job series. It\nencapsulates roles employees occupy and links to job series for\nhierarchical clarity. This model is the base for assignments and\nevaluations."},"IJobPerformanceEvalJobRole.IRequest":{"type":"object","properties":{"job_series_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter by Job Series ID."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter by unique job role code."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter by job role name."},"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination: page number."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination: limit per page."},"order_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort order, e.g., 'name_ASC' or 'created_at_DESC'."}},"required":[],"description":"Request parameters for querying job roles\n\nSupports filtering by job series, code, and name along with pagination and sorting options."},"IJobPerformanceEvalJobRole.ICreate":{"type":"object","properties":{"job_series_id":{"type":"string","format":"uuid","description":"Parent Job Series ID.\n\nRequired UUID string."},"code":{"type":"string","description":"Unique code identifying the job role."},"name":{"type":"string","description":"Name of the job role."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description of the job role.\n\nOptional."},"growth_level":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Growth Level classification.\n\nOptional."}},"required":["job_series_id","code","name"],"description":"Request body structure for creating a new job role\n\nIncludes fields identifying the parent job series, unique code, name, and optional descriptions and growth level."},"IJobPerformanceEvalJobRole.IUpdate":{"type":"object","properties":{"job_series_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Parent Job Series ID.\n\nOptional; only if update of parent link allowed.\nTypically omit or leave null."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifying job role."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Name of the job role."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description of the job role."},"growth_level":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Growth Level classification."}},"required":[],"description":"Request body structure for updating an existing job role\n\nAll fields are optional and may be omitted or set to null if no change is intended."},"IJobPerformanceEvalTaskGroup.IRequest":{"type":"object","properties":{"job_role_id":{"type":"string","format":"uuid","description":"Optional filter criteria to fetch task groups linked with specified job role IDs."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Partial code string to filter task groups."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Partial name string to filter task groups."},"page":{"oneOf":[{"type":"integer","format":"int32","minimum":0},{"type":"null"}],"description":"Optional zero or positive integer specifying the current page number."},"limit":{"oneOf":[{"type":"integer","format":"int32","minimum":0},{"type":"null"}],"description":"Optional zero or positive integer limiting the number of records per page."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional string describing the property and direction to sort results."}},"required":[],"description":"Task group request parameters supporting filtering and pagination."},"IJobPerformanceEvalTaskGroup":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the task group."},"job_role_id":{"type":"string","description":"Parent job role identifier."},"code":{"type":"string","description":"Unique code for the task group."},"name":{"type":"string","description":"Name of the task group."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional long description."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp."}},"required":["id","job_role_id","code","name","created_at","updated_at"],"description":"Task Group organizes related tasks under job roles for better management\nand categorization. It groups tasks logically and serves as a parent for\ntasks."},"IJobPerformanceEvalTaskGroup.ICreate":{"type":"object","properties":{"job_role_id":{"type":"string","format":"uuid","description":"The job role ID this task group belongs to."},"code":{"type":"string","description":"Unique code for the task group."},"name":{"type":"string","description":"Name of the task group."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description for additional details."}},"required":["job_role_id","code","name"],"description":"Data required to create a new task group."},"IJobPerformanceEvalTaskGroup.IUpdate":{"type":"object","properties":{"job_role_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"The job role ID this task group belongs to."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code for the task group."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated name of the task group."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description for additional details."}},"required":[],"description":"Data for updating an existing task group."},"IJobPerformanceEvalTask.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Page number for paginated results."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Maximum number of results per page. Typically 100 by default."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Keyword to search in task name or code."},"knowledge_area_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by knowledge area ID."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Field to sort by (e.g., name, created_at)."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction: ascending or descending."}},"required":[],"description":"Request parameters for searching and filtering tasks within a task group, supporting pagination, filtering, and sorting."},"IJobPerformanceEvalTask":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the task."},"task_group_id":{"type":"string","format":"uuid","description":"Reference to the parent task group ID."},"code":{"type":"string","description":"Unique code identifying the task."},"name":{"type":"string","description":"Name of the task."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the task, nullable if not provided."},"knowledge_area_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reference to knowledge area ID, if any."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp, null if active."}},"required":["id","task_group_id","code","name","created_at","updated_at"],"description":"Represents a task entity in the Job Performance Evaluation system, including identification and descriptive fields, relational links, and audit timestamps."},"IJobPerformanceEvalTask.ICreate":{"type":"object","properties":{"task_group_id":{"type":"string","format":"uuid","description":"Parent task group ID."},"code":{"type":"string","description":"Unique code for the task."},"name":{"type":"string","description":"Name of the task."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description."},"knowledge_area_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional knowledge area ID."}},"required":["task_group_id","code","name"],"description":"Request body for creating a new task within a task group, including necessary identifiers and descriptive properties."},"IJobPerformanceEvalTask.IUpdate":{"type":"object","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated unique code for the task."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated name of the task."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated optional detailed description."},"knowledge_area_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Updated optional knowledge area ID."}},"required":[],"description":"Request body for updating task properties; all fields are optional to allow partial modification."},"IJobPerformanceEvalTaskActivity":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the task activity."},"task_id":{"type":"string","description":"Parent task identifier."},"code":{"type":"string","description":"Unique code of the task activity."},"name":{"type":"string","description":"Name of the task activity."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp."}},"required":["id","task_id","code","name","created_at","updated_at"],"description":"Task Activity specifies detailed actionable activities within tasks. It\nbreaks down tasks into finer units for precise evaluation and tracking."},"IJobPerformanceEvalTaskActivity.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Limit of items per page."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search keyword for task activity name or code."},"task_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter by task's UUID."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sorting option, e.g., 'name_ASC' or 'created_at_DESC'."}},"required":[],"description":"Request body schema for paginated search of task activities."},"IJobPerformanceEvalTaskActivity.ICreate":{"type":"object","properties":{"task_id":{"type":"string","format":"uuid","description":"Parent task's UUID to which this Task Activity belongs."},"code":{"type":"string","description":"Unique code identifying the task activity."},"name":{"type":"string","description":"Name of the task activity."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description of the task activity."}},"required":["task_id","code","name"],"description":"Request body schema for creation of a task activity."},"IJobPerformanceEvalTaskActivity.IUpdate":{"type":"object","properties":{"task_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Parent task's UUID to which this Task Activity belongs."},"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifying the task activity."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Name of the task activity."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the task activity."}},"required":[],"description":"Request body schema for updating a task activity."},"IJobPerformanceEvalKnowledgeArea.IRequest":{"type":"object","description":"Request type for filtering and paginating knowledge areas in the system. Includes optional fields to filter by code and name, specify pagination, and define sorting. All properties are optional and nullable.","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional code filter for partial matching. Nullable."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional name filter for partial matching. Nullable."},"page":{"oneOf":[{"type":"integer","minimum":0,"format":"uint32"},{"type":"null"}],"description":"Optional page number for pagination. Nullable."},"limit":{"oneOf":[{"type":"integer","minimum":0,"format":"uint32"},{"type":"null"}],"description":"Optional limit of records per page for pagination. Nullable."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional field name for sorting. Nullable."},"orderDirection":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional sort direction, e.g. \"asc\" or \"desc\". Nullable."}},"required":[]},"IJobPerformanceEvalKnowledgeArea":{"type":"object","description":"Knowledge Area represents domains of expertise or knowledge relevant to job tasks. It categorizes knowledge areas to support task and skill mappings.\n\n@namespace Jobs\n@author AutoBE - https://github.com/wrtnlabs/autobe","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the knowledge area.\n\n@format uuid"},"code":{"type":"string","description":"Unique code identifying the knowledge area.\n\nCode must be unique across all knowledge areas."},"name":{"type":"string","description":"Name of the knowledge area.\n\nProvides a descriptive name representing the knowledge domain."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the knowledge area.\n\nOptional rich text detailing the knowledge area."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 date-time format."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nISO 8601 date-time format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp, if applicable.\n\nNullable ISO 8601 date-time."}},"required":["id","code","name","created_at","updated_at"]},"IJobPerformanceEvalKnowledgeArea.ICreate":{"type":"object","description":"Request type for creating a knowledge area.\n\nRequires code and name; description optional.","properties":{"code":{"type":"string","description":"Unique code identifying the knowledge area."},"name":{"type":"string","description":"Name of the knowledge area."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the knowledge area.\n\nOptional string or null."}},"required":["code","name"]},"IJobPerformanceEvalKnowledgeArea.IUpdate":{"type":"object","description":"Request type for updating a knowledge area.\n\nAll fields optional, allow partial updates.\n\nid and timestamps are not updateable.","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifying the knowledge area.\n\nOptional string or null when updating."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Name of the knowledge area.\n\nOptional string or null when updating."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the knowledge area.\n\nOptional string or null when updating."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Nullable soft deletion timestamp. Usually managed internally.\n\nOptional string or null."}},"required":[]},"IPageIJobPerformanceEvalKnowledgeArea":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IJobPerformanceEvalKnowledgeArea"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IJobPerformanceEvalSelfEvaluation.IRequest":{"type":"object","properties":{"employee_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Employee ID to filter self-evaluations.\n\n@format uuid"},"evaluation_cycle_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Evaluation cycle ID to filter self-evaluations.\n\n@format uuid"},"min_work_performance_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum work performance score to filter.\n\n@minimum 1\n@maximum 5"},"max_work_performance_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum work performance score to filter.\n\n@minimum 1\n@maximum 5"},"min_knowledge_skill_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum knowledge skill score to filter.\n\n@minimum 1\n@maximum 5"},"max_knowledge_skill_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum knowledge skill score to filter.\n\n@minimum 1\n@maximum 5"},"min_problem_solving_collab_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum problem solving and collaboration score to filter.\n\n@minimum 1\n@maximum 5"},"max_problem_solving_collab_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum problem solving and collaboration score to filter.\n\n@minimum 1\n@maximum 5"},"min_innovation_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Minimum innovation score to filter.\n\n@minimum 1\n@maximum 5"},"max_innovation_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum innovation score to filter.\n\n@minimum 1\n@maximum 5"},"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Pagination page number.\n\n@default 1\n@minimum 1"},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Pagination page size.\n\n@default 20\n@minimum 1\n@maximum 100"}},"description":"Request type for filtering and paginating self-evaluation records.","required":[]},"IJobPerformanceEvalSelfEvaluation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the self-evaluation record.\n\n@format uuid"},"employee_id":{"type":"string","format":"uuid","description":"The employee who submits the self-evaluation.\n\nReferences job_performance_eval_employees.id.\n\n@format uuid"},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"The evaluation cycle to which this self-evaluation belongs.\n\nReferences job_performance_eval_evaluation_cycles.id.\n\n@format uuid"},"evaluation_date":{"type":"string","format":"date-time","description":"The date when the self-evaluation is performed.\n\n@format date-time"},"work_performance_score":{"type":"integer","description":"Score for Work Performance Level evaluation, in scale 1-5."},"knowledge_skill_score":{"type":"integer","description":"Score for Knowledge/Skill evaluation, in scale 1-5."},"problem_solving_collab_score":{"type":"integer","description":"Score for Problem Solving and Collaboration evaluation, in scale 1-5."},"innovation_score":{"type":"integer","description":"Score for Innovation evaluation, in scale 1-5."},"overall_comment":{"type":"string","description":"Comprehensive comment by the employee on the evaluation.\n\nRequired for submission."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the record.\n\n@format date-time"},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp of the record.\n\n@format date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for the record. Null if active.\n\n@format date-time"}},"required":["id","employee_id","evaluation_cycle_id","evaluation_date","work_performance_score","knowledge_skill_score","problem_solving_collab_score","innovation_score","overall_comment","created_at","updated_at"],"description":"Represents an employee's self-evaluation record including scores and comments.\n\nThis entity tracks evaluation cycles and associates scores with employees for performance management."},"IJobPerformanceEvalSelfEvaluation.ICreate":{"type":"object","properties":{"evaluation_cycle_id":{"type":"string","format":"uuid","description":"The evaluation cycle ID this evaluation belongs to.\n\n@format uuid"},"evaluation_date":{"type":"string","format":"date-time","description":"The date when the self-evaluation is performed.\n\nISO 8601 format datetime string.\n\n@format date-time"},"work_performance_score":{"type":"integer","description":"Score for Work Performance Level evaluation, in scale 1-5."},"knowledge_skill_score":{"type":"integer","description":"Score for Knowledge/Skill evaluation, in scale 1-5."},"problem_solving_collab_score":{"type":"integer","description":"Score for Problem Solving and Collaboration evaluation, in scale 1-5."},"innovation_score":{"type":"integer","description":"Score for Innovation evaluation, in scale 1-5."},"overall_comment":{"type":"string","description":"Comprehensive comment by the employee on the evaluation.\n\nMandatory for submission."}},"required":["evaluation_cycle_id","evaluation_date","work_performance_score","knowledge_skill_score","problem_solving_collab_score","innovation_score","overall_comment"],"description":"Request body for creating a new self-evaluation record. All scores and comment are mandatory."},"IJobPerformanceEvalSelfEvaluation.IUpdate":{"type":"object","properties":{"evaluation_cycle_id":{"type":"string","format":"uuid","description":"The evaluation cycle ID this evaluation belongs to.\n\n@format uuid"},"evaluation_date":{"type":"string","format":"date-time","description":"The date when the self-evaluation is performed.\n\nISO 8601 format datetime string.\n\n@format date-time"},"work_performance_score":{"type":"integer","description":"Score for Work Performance Level evaluation, in scale 1-5."},"knowledge_skill_score":{"type":"integer","description":"Score for Knowledge/Skill evaluation, in scale 1-5."},"problem_solving_collab_score":{"type":"integer","description":"Score for Problem Solving and Collaboration evaluation, in scale 1-5."},"innovation_score":{"type":"integer","description":"Score for Innovation evaluation, in scale 1-5."},"overall_comment":{"type":"string","description":"Comprehensive comment by the employee on the evaluation."}},"required":[],"description":"Request body for updating a self-evaluation record. All fields are optional."},"IJobPerformanceEvalManagerEvaluation.IRequest":{"oneOf":[{"type":"object","properties":{"employee_id":{"type":"string","format":"uuid","description":"Filter by evaluated employee's unique identifier (UUID)."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"Filter by evaluation cycle unique identifier (UUID)."},"overall_comment":{"type":"string","description":"Filter by text matching in the manager's overall evaluation comment."},"evaluation_date_from":{"type":"string","format":"date-time","description":"Filter for evaluation date from this ISO 8601 date-time."},"evaluation_date_to":{"type":"string","format":"date-time","description":"Filter for evaluation date up to this ISO 8601 date-time."},"page":{"oneOf":[{"type":"integer","description":"Page number for paginated results, optional."},{"type":"null"}],"description":"Page number for paginated results, optional."},"limit":{"oneOf":[{"type":"integer","description":"Maximum number of items per page, optional."},{"type":"null"}],"description":"Maximum number of items per page, optional."},"order_by":{"oneOf":[{"type":"string","description":"Field to sort by, e.g., evaluation_date, created_at."},{"type":"null"}],"description":"Field to sort by, e.g., evaluation_date, created_at."},"sort_direction":{"oneOf":[{"const":"asc","description":"Sort direction, either ascending (asc) or descending (desc)."},{"const":"desc","description":"Sort direction, either ascending (asc) or descending (desc)."},{"type":"null"}],"description":"Sort direction, either ascending (asc) or descending (desc)."}},"required":[],"description":"Criteria to search and paginate manager evaluations. All filter properties are optional."},{"type":"null"}],"description":"Criteria to search and paginate manager evaluations. All filter properties are optional."},"IJobPerformanceEvalManagerEvaluation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key identifier of the manager evaluation record."},"manager_id":{"type":"string","format":"uuid","description":"Unique identifier of the manager who performed the evaluation."},"employee_id":{"type":"string","format":"uuid","description":"Unique identifier of the employee being evaluated."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"Unique identifier of the evaluation cycle."},"evaluation_date":{"type":"string","format":"date-time","description":"The date when the evaluation was performed, in ISO 8601 format."},"work_performance_score":{"type":"integer","description":"Manager's score for work performance level, on a scale from 1 to 5."},"knowledge_skill_score":{"type":"integer","description":"Manager's score for knowledge and skill evaluation, on a scale from 1 to 5."},"problem_solving_collab_score":{"type":"integer","description":"Manager's score for problem solving and collaboration, on a scale from 1 to 5."},"innovation_score":{"type":"integer","description":"Manager's score for innovation, on a scale from 1 to 5."},"overall_comment":{"type":"string","description":"A comprehensive comment by the manager on the evaluation."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last record update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft delete timestamp; null if not deleted."}},"required":["id","manager_id","employee_id","evaluation_cycle_id","evaluation_date","work_performance_score","knowledge_skill_score","problem_solving_collab_score","innovation_score","overall_comment","created_at","updated_at"],"description":"Represents detailed manager evaluation for an employee's job performance in a specific evaluation cycle, including scores and comprehensive comment."},"IJobPerformanceEvalManagerEvaluation.ICreate":{"type":"object","properties":{"manager_id":{"type":"string","format":"uuid","description":"Identifier of the manager performing the evaluation."},"employee_id":{"type":"string","format":"uuid","description":"Identifier of the employee being evaluated."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"Identifier of the relevant evaluation cycle."},"evaluation_date":{"type":"string","format":"date-time","description":"Date when the evaluation is performed."},"work_performance_score":{"type":"integer","description":"Work performance score given by the manager (1-5)."},"knowledge_skill_score":{"type":"integer","description":"Knowledge and skill score given by the manager (1-5)."},"problem_solving_collab_score":{"type":"integer","description":"Problem solving and collaboration score (1-5)."},"innovation_score":{"type":"integer","description":"Innovation score (1-5)."},"overall_comment":{"type":"string","description":"Comprehensive comment by the manager."}},"required":["manager_id","employee_id","evaluation_cycle_id","evaluation_date","work_performance_score","knowledge_skill_score","problem_solving_collab_score","innovation_score","overall_comment"],"description":"Payload to create a new manager evaluation record including all mandatory fields."},"IJobPerformanceEvalManagerEvaluation.IUpdate":{"type":"object","properties":{"manager_id":{"type":"string","format":"uuid","description":"(Optional) Identifier of the manager performing the evaluation."},"employee_id":{"type":"string","format":"uuid","description":"(Optional) Identifier of the employee being evaluated."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"(Optional) Identifier of the relevant evaluation cycle."},"evaluation_date":{"type":"string","format":"date-time","description":"(Optional) Date when the evaluation is performed."},"work_performance_score":{"type":"integer","description":"(Optional) Work performance score given by the manager (1-5)."},"knowledge_skill_score":{"type":"integer","description":"(Optional) Knowledge and skill score given by the manager (1-5)."},"problem_solving_collab_score":{"type":"integer","description":"(Optional) Problem solving and collaboration score (1-5)."},"innovation_score":{"type":"integer","description":"(Optional) Innovation score (1-5)."},"overall_comment":{"type":"string","description":"(Optional) Comprehensive comment by the manager."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft delete timestamp; null if not deleted."}},"required":[],"description":"Payload to update an existing manager evaluation record. All fields are optional to allow partial updates."},"IJobPerformanceEvalEvaluationScore.IRequest":{"type":"object","description":"Request parameters for querying and filtering evaluation scores with pagination.\n\nSupports filtering on evaluation_id, category, score range, and sorting directions.\n\nPaging parameters page and limit control the result set size and offset.","properties":{"evaluation_id":{"type":"string","format":"uuid","description":"Filter scores by associated evaluation ID"},"category":{"type":"string","description":"Evaluation category name to filter on. E.g., 'work_performance', 'knowledge_skill'"},"min_score":{"type":"integer","format":"int32","description":"Minimum score value filter. Inclusive. 1 to 5 scale."},"max_score":{"type":"integer","format":"int32","description":"Maximum score value filter. Inclusive. 1 to 5 scale."},"page":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Page number for paginated results. Nullable."},"limit":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Limit of records per page. Nullable."},"order_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Property name used to sort records."},"order_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sorting direction for the order_by property."}},"required":[]},"IJobPerformanceEvalEvaluationScore.ICreate":{"type":"object","description":"Request body schema to create a new evaluation score record.\n\nIncludes evaluation ID, category name, and score value in 1 to 5 scale.\n\nProperties created_at and updated_at are system managed and omitted in create requests.","properties":{"evaluation_id":{"type":"string","format":"uuid","description":"Reference ID of the parent evaluation (self or manager evaluation)"},"category":{"type":"string","description":"Category name of the evaluation score, e.g., 'work_performance', 'knowledge_skill'"},"score":{"type":"integer","format":"int32","description":"Score value assigned in the evaluation category, expected 1 to 5 inclusive."}},"required":["evaluation_id","category","score"]},"IJobPerformanceEvalEvaluationScore.IUpdate":{"type":"object","description":"Request body schema to update an evaluation score record partially.\n\nAllows modifying category name and score value. All fields are optional.\n\nProperties evaluation_id, created_at, and updated_at are system managed and not included for update.","properties":{"category":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Category name of the evaluation score, e.g., 'work_performance', 'knowledge_skill'"},"score":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Score value assigned in the evaluation category, expected 1 to 5 inclusive."}},"required":[]},"IJobPerformanceEvalEvaluationScore":{"type":"object","description":"Represents a job performance evaluation score record linked to a specific evaluation (self or manager evaluation).\n\nCaptures category and score details stored in the database along with audit timestamps.\n\nThis schema is used for both input and output of evaluation score data in various API endpoints.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key unique identifier of the evaluation score record"},"evaluation_id":{"type":"string","format":"uuid","description":"Reference to either self or manager evaluation this score belongs to"},"category":{"type":"string","description":"Category name of the evaluation score, e.g., 'work_performance', 'knowledge_skill'"},"score":{"type":"integer","format":"int32","description":"Integer score value from 1 to 5 representing the evaluation result"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the record was last updated"}},"required":["id","evaluation_id","category","score","created_at","updated_at"]},"IJobPerformanceEvalEmployeeComments.IRequest":{"type":"object","properties":{"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search keyword to filter employee comments by full text search or similar matching.\n\nOptional property to filter comments containing the keyword."},"employee_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by employee ID to retrieve comments made by a specific employee.\n\nOptional UUID filter for employee."},"evaluation_cycle_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by evaluation cycle ID to get comments associated with a specific evaluation period.\n\nOptional UUID filter for evaluation cycle."},"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Pagination parameter: page number to fetch.\n\nOptional. If not specified, may default to 1."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Pagination parameter: number of records per page.\n\nOptional. Defaults to a sensible limit like 100 if not set."}},"required":[],"description":"Request parameters for searching and paginating employee comments."},"IJobPerformanceEvalEmployeeComments":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key."},"employee_id":{"type":"string","description":"Belonged employee who authored the comment. {@link job_performance_eval_employees.id}.\n\nUUID of the employee who made the comment."},"evaluation_cycle_id":{"type":"string","description":"Related evaluation cycle of the comment. {@link job_performance_eval_evaluation_cycles.id}.\n\nUUID of the evaluation cycle linked to this comment."},"comment":{"type":"string","description":"Content of the employee's comment on their evaluation.\n\nThis property contains the actual qualitative feedback or remarks provided by the employee regarding their evaluation.\n\nIt is a free text comment that can include detailed descriptions, insights, or opinions about their performance.\n\nIt is expected to be a reasonably sized text field."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the comment was created.\n\nISO 8601 formatted date-time string indicating when this comment record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of when the comment was last updated.\n\nISO 8601 formatted date-time string indicating the last modification time of this record."}},"required":["id","employee_id","evaluation_cycle_id","comment","created_at","updated_at"],"description":"Employee comments on their own performance evaluations, capturing qualitative feedback distinct from numeric scores. Linked to the employee making the comment and to the evaluation cycle. Provides contextual insights into employee perceptions and subjective assessment. Includes timestamps for creation and update tracking. This table is a primary business entity for independent CRUD operations on employee comments."},"IJobPerformanceEvalEmployeeComments.ICreate":{"type":"object","properties":{"employee_id":{"type":"string","description":"UUID of the employee creating the comment.\n\nRequired to associate the comment with employee."},"evaluation_cycle_id":{"type":"string","description":"UUID of the evaluation cycle this comment is related to.\n\nRequired to reference evaluation timeframe."},"comment":{"type":"string","description":"The content of the employee's comment.\n\nRequired free text field."}},"required":["employee_id","evaluation_cycle_id","comment"],"description":"Request payload for creating a new employee comment."},"IJobPerformanceEvalEmployeeComments.IUpdate":{"type":"object","properties":{"comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"The content of the employee's comment.\n\nOptional property to modify the comment text."}},"required":[],"description":"Request payload for updating an employee comment. Only comment text can be changed."},"IJobPerformanceEvalManagerComments.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Page number.\n\nOptional pagination parameter to specify which page of results to fetch."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Limitation of records per a page.\n\nOptional pagination parameter to set the number of records returned per page.\n\n@default 100"},"manager_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter property: Manager ID.\n\nOptional UUID string used to filter comments by a specific manager."},"evaluation_cycle_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter property: Evaluation Cycle ID.\n\nOptional UUID string used to filter comments by evaluation cycle."},"comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search text filter.\n\nOptional full text search string to query comment content."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort order specification.\n\nOptional string indicating sorting field and direction.\n\nExample: 'created_at_DESC'"}},"description":"Request parameters for searching and paginating manager comments.\n\nIncludes page number, limit of records per page, filtering by manager ID,\nby evaluation cycle ID, full text search on comment content, and sort order.\n\nNullable fields allow for flexible querying.\n","required":[]},"IJobPerformanceEvalManagerComments":{"type":"object","properties":{"id":{"type":"string","description":"Primary Key.","format":"uuid"},"manager_id":{"type":"string","description":"Manager who authored the comment. {@link job_performance_eval_managers.id}.\n\nUnique identifier (UUID) of the manager who wrote this comment.","format":"uuid"},"evaluation_cycle_id":{"type":"string","description":"Linked evaluation cycle for the comment. {@link job_performance_eval_evaluation_cycles.id}.","format":"uuid"},"comment":{"type":"string","description":"Content of the manager's comment on the employee's evaluation.\n\nThis comment contains qualitative feedback from the manager regarding an employee's evaluation during a specific evaluation cycle.\nThe content should be descriptive yet concise, providing meaningful context."},"created_at":{"type":"string","format":"date-time","description":"Timestamp marking when the comment was created.\n\nISO 8601 formatted date-time string indicating when this record was initially created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp marking last update time of the comment.\n\nISO 8601 formatted date-time string indicating the last time this comment was modified."}},"required":["id","manager_id","evaluation_cycle_id","comment","created_at","updated_at"],"description":"Manager comments on employee performance evaluations, providing qualitative feedback separate from numeric evaluation scores. Linked to the manager who authored the comment and the specific evaluation cycle. Enables managerial insights and contextual remarks. Includes creation and update timestamps for audit and tracking. This table is a primary business entity allowing independent management of manager comments."},"IJobPerformanceEvalManagerComments.ICreate":{"type":"object","properties":{"manager_id":{"type":"string","description":"Manager who authored the comment. The UUID must correspond to an existing manager.\n\nThis field associates the comment with its author.","format":"uuid"},"evaluation_cycle_id":{"type":"string","description":"Linked evaluation cycle ID to which this comment pertains.\n\nThis connects the comment to a specific performance evaluation period.","format":"uuid"},"comment":{"type":"string","description":"Content of the manager's comment.\n\nThis is a required textual content field where the manager inputs qualitative feedback.\nShould respect size constraints and business rules for comments."}},"required":["manager_id","evaluation_cycle_id","comment"],"description":"Request format for creating a new manager comment."},"IJobPerformanceEvalManagerComments.IUpdate":{"type":"object","properties":{"manager_id":{"type":"string","description":"Manager who authored the comment. UUID of the manager.\n\nThis field may be optional or required depending on update policies but is defined here optional.","format":"uuid"},"evaluation_cycle_id":{"type":"string","description":"Evaluation cycle ID to which this comment belongs.\n\nOptional field to update linkage to evaluation cycle.","format":"uuid"},"comment":{"type":"string","description":"Content of the comment.\n\nEnables managers to revise their feedback."}},"required":[],"description":"Request format for updating an existing manager comment."},"IJobPerformanceEvalEvaluationSnapshots.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","minimum":0},{"type":"null"}],"description":"Page number to retrieve, used for paginated results."},"limit":{"oneOf":[{"type":"number","minimum":0},{"type":"null"}],"description":"Maximum number of records to return per page."},"filter":{"oneOf":[{"type":"object","properties":{"evaluation_cycle_id":{"description":"UUID of the evaluation cycle to filter results.","type":"string","format":"uuid"},"employee_id":{"description":"UUID of the employee to filter results.","type":"string","format":"uuid"},"created_after":{"description":"Return records created after this ISO 8601 date-time.","type":"string","format":"date-time"},"created_before":{"description":"Return records created before this ISO 8601 date-time.","type":"string","format":"date-time"}},"required":[]},{"type":"null"}],"description":"Filters object to narrow down result set based on criteria."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search keyword for matching records."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Field name to order the results by, e.g., created_at."},"orderDirection":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order direction, either 'asc' or 'desc'."}},"required":[],"description":"Request payload for paginated retrieval of evaluation snapshots."},"IJobPerformanceEvalEvaluationSnapshot":{"type":"object","properties":{"id":{"description":"Unique UUID identifier for the evaluation snapshot.","type":"string","format":"uuid"},"evaluation_cycle_id":{"description":"UUID of the evaluation cycle this snapshot belongs to.","type":"string","format":"uuid"},"employee_id":{"description":"UUID of the employee associated with this snapshot.","type":"string","format":"uuid"},"performance_score":{"description":"Employee's self-evaluated job performance score, 1 to 5.","type":"integer"},"knowledge_score":{"description":"Employee's self-evaluated knowledge and skills score, 1 to 5.","type":"integer"},"problem_solving_score":{"description":"Employee's self-evaluated problem solving and collaboration score, 1 to 5.","type":"integer"},"innovation_score":{"description":"Employee's self-evaluated innovation score, 1 to 5.","type":"integer"},"manager_performance_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of job performance score, 1 to 5, nullable if unavailable."},"manager_knowledge_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of knowledge and skills score, 1 to 5, nullable if unavailable."},"manager_problem_solving_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of problem solving and collaboration score, 1 to 5, nullable if unavailable."},"manager_innovation_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of innovation score, 1 to 5, nullable if unavailable."},"employee_comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Comprehensive comment provided by the employee, nullable."},"manager_comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Comprehensive comment provided by the manager, nullable."},"created_at":{"description":"ISO 8601 date-time of record creation.","type":"string","format":"date-time"},"updated_at":{"description":"ISO 8601 date-time of last update.","type":"string","format":"date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"ISO 8601 date-time marking soft deletion, nullable if active."}},"required":["id","evaluation_cycle_id","employee_id","performance_score","knowledge_score","problem_solving_score","innovation_score","created_at","updated_at"],"description":"Detailed snapshot of evaluation scores combining employee self-evaluation and manager evaluation."},"IJobPerformanceEvalTeamStatistic.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number","minimum":0},{"type":"null"}],"description":"Page number for paginated retrieval."},"limit":{"oneOf":[{"type":"number","minimum":0},{"type":"null"}],"description":"Maximum number of items per page."},"filter":{"oneOf":[{"type":"object","properties":{"evaluation_cycle_id":{"description":"UUID of evaluation cycle to filter by.","type":"string","format":"uuid"},"team_id":{"description":"Organizational team identifier to filter by.","type":"string"},"created_after":{"description":"Include records created after this ISO 8601 date-time.","type":"string","format":"date-time"},"created_before":{"description":"Include records created before this ISO 8601 date-time.","type":"string","format":"date-time"}},"required":[]},{"type":"null"}],"description":"Filter criteria to include only team statistics satisfying provided conditions."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Text search term to filter results."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Field name by which to order the data."},"orderDirection":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Direction in which to order the results: 'asc' or 'desc'."}},"required":[],"description":"Request parameters for searching and paginating team statistics."},"IJobPerformanceEvalTeamStatistic":{"type":"object","properties":{"id":{"description":"Unique identifier (UUID) for the team statistic record.","type":"string","format":"uuid"},"evaluation_cycle_id":{"description":"UUID of the evaluation cycle this statistic corresponds to.","type":"string","format":"uuid"},"team_id":{"description":"Identifier of the organizational team.","type":"string"},"average_performance_score":{"description":"Average job performance score for the team, on a 1-5 scale.","type":"number"},"average_knowledge_score":{"description":"Average knowledge and skills score for the team, on a 1-5 scale.","type":"number"},"average_problem_solving_score":{"description":"Average problem solving and collaboration score for the team, on a 1-5 scale.","type":"number"},"average_innovation_score":{"description":"Average innovation score for the team, on a 1-5 scale.","type":"number"},"evaluation_count":{"description":"Count of evaluations included in this team's statistics.","type":"integer"},"created_at":{"description":"Timestamp of record creation (ISO 8601 format).","type":"string","format":"date-time"},"updated_at":{"description":"Timestamp of last update (ISO 8601 format).","type":"string","format":"date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp (nullable, ISO 8601 format)."}},"required":["id","evaluation_cycle_id","team_id","average_performance_score","average_knowledge_score","average_problem_solving_score","average_innovation_score","evaluation_count","created_at","updated_at"],"description":"Aggregated statistics for job performance evaluations by team and evaluation cycle."},"IJobPerformanceEvalEvaluationCycle.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier."},"cycle_code":{"type":"string","description":"Unique code identifying the evaluation cycle."},"cycle_name":{"type":"string","description":"Descriptive name of the evaluation cycle."},"is_active":{"type":"boolean","description":"Flag indicating whether the evaluation cycle is currently active."}},"required":["id","cycle_code","cycle_name","is_active"],"description":"Evaluaton cycle summary providing minimal identifying information such as ID, code, name, and active status.\n\nUseful for listing evaluation cycles in UI lists or summary displays.\n\nDerived from job_performance_eval_evaluation_cycles table."},"IJobPerformanceEvalEmployees.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier."},"name":{"type":"string","description":"Employee's full name."}},"required":["id","name"],"description":"Summary information for an employee, including unique ID and full name.\n\nOptimized for listing employees in user interfaces.\n\nDerived from job_performance_eval_employees table."},"IJobPerformanceEvalManager.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the manager."},"name":{"type":"string","description":"Manager's full name."}},"required":["id","name"],"description":"Summary information of a manager entity including unique identifier and full name.\n\nThis is used for list views or selection inputs in management applications.\n\nDerived from the job_performance_eval_managers table."},"IJobPerformanceEvalJobGroups.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the job group."},"code":{"type":"string","description":"Unique code identifying the job group."},"name":{"type":"string","description":"Name of the job group."}},"required":["id","code","name"],"description":"Summary representation of job group entity.\n\nIncludes identifiers and displayable name/code properties only.\n\nUsed in lists and quick reference contexts.\n\nDerived from job_performance_eval_job_groups table."},"IJobPerformanceEvalJobSeries.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for the job series."},"name":{"type":"string","description":"The name of the job series."},"code":{"type":"string","description":"Unique code representing the job series."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional brief description of the job series."}},"required":["id","name","code"],"description":"Summary of Job Series with essential identification and descriptive fields."},"IJobPerformanceEvalJobRole.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Unique id for the job role summary."},"name":{"type":"string","description":"Name of the job role."},"code":{"type":"string","description":"Unique code for the job role."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional brief description for summary."},"growth_level":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional growth level classification."}},"required":["id","name","code"],"description":"Summary of a Job Role with essential properties."},"IJobPerformanceEvalTaskGroup.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the task group."},"name":{"type":"string","description":"Name of the task group."},"code":{"type":"string","description":"Unique code for the task group."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional brief description."}},"required":["id","name","code"],"description":"Summary of a Task Group including key identificaton and descriptive fields."},"IJobPerformanceEvalTaskActivity.ISummary":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the task activity."},"name":{"type":"string","description":"Name of the task activity."},"code":{"type":"string","description":"Unique code of the task activity."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional brief description."}},"required":["id","name","code"],"description":"Summary of a Task Activity with essential identification fields."},"IJobPerformanceEvalKnowledgeArea.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the knowledge area."},"code":{"type":"string","description":"Unique code identifying the knowledge area."},"name":{"type":"string","description":"Name of the knowledge area."}},"required":["id","code","name"],"description":"Summary information of a knowledge area used for categorizing domains of expertise relevant to job tasks. This includes essential fields for identification and display.\n\nProperties:\n- id: Unique UUID\n- code: Unique code string\n- name: Descriptive name\n\nThis summary type omits detailed description and timestamps for brevity and UI efficiency."},"IJobPerformanceEvalSelfEvaluation.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the self-evaluation record."},"employee_id":{"type":"string","format":"uuid","description":"UUID of the employee who submitted the self-evaluation."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"UUID of the evaluation cycle this evaluation belongs to."},"evaluation_date":{"type":"string","format":"date-time","description":"Date and time when the self-evaluation was performed."},"work_performance_score":{"type":"integer","description":"Score for Work Performance Level evaluation on a scale from 1 to 5."},"knowledge_skill_score":{"type":"integer","description":"Score for Knowledge and Skill evaluation on a scale from 1 to 5."},"problem_solving_collab_score":{"type":"integer","description":"Score for Problem Solving and Collaboration evaluation on a scale from 1 to 5."},"innovation_score":{"type":"integer","description":"Score for Innovation evaluation on a scale from 1 to 5."}},"required":["id","employee_id","evaluation_cycle_id","evaluation_date","work_performance_score","knowledge_skill_score","problem_solving_collab_score","innovation_score"],"description":"Summary of an employee's self-evaluation including all scored categories but excluding the overall comment and audit timestamps.\n\nProperties include:\n- id: Evaluation UUID\n- employee_id: UUID of employee\n- evaluation_cycle_id: UUID of the evaluation cycle\n- evaluation_date: Date of evaluation\n- Category scores for each evaluation criterion\n\nThis summary excludes extensive details to allow efficient list rendering."},"IJobPerformanceEvalManagerEvaluation.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for manager evaluation record."},"manager_id":{"type":"string","format":"uuid","description":"UUID of the manager who performed the evaluation."},"employee_id":{"type":"string","format":"uuid","description":"UUID of the employee being evaluated."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"UUID of the evaluation cycle."},"evaluation_date":{"type":"string","format":"date-time","description":"Date and time when the evaluation was recorded."},"work_performance_score":{"type":"integer","description":"Manager's score for Work Performance Level evaluation on a scale from 1 to 5."},"knowledge_skill_score":{"type":"integer","description":"Manager's score for Knowledge and Skill evaluation on a scale from 1 to 5."},"problem_solving_collab_score":{"type":"integer","description":"Manager's score for Problem Solving and Collaboration evaluation on a scale from 1 to 5."},"innovation_score":{"type":"integer","description":"Manager's score for Innovation evaluation on a scale from 1 to 5."}},"required":["id","manager_id","employee_id","evaluation_cycle_id","evaluation_date","work_performance_score","knowledge_skill_score","problem_solving_collab_score","innovation_score"],"description":"Summary of a manager's evaluation of an employee for a given evaluation cycle. Contains scores for all evaluation categories but excludes the overall comment and timestamps.\n\nProperties included:\n- id: Evaluation UUID\n- manager_id: UUID of the manager\n- employee_id: UUID of the employee\n- evaluation_cycle_id: UUID of the cycle\n- evaluation_date: Date of the evaluation\n- Category scores for evaluation criteria\n\nThis summary is used for display in administrative lists and reports."},"IJobPerformanceEvalEmployeeComments.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the employee comment record."},"employee_id":{"type":"string","format":"uuid","description":"UUID of the employee who authored the comment."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"UUID of the evaluation cycle related to the comment."},"comment":{"type":"string","description":"Content of the employee's comment regarding their evaluation."}},"required":["id","employee_id","evaluation_cycle_id","comment"],"description":"Summary of an employee's comment on their job performance evaluation.\n\nIncludes:\n- id: Unique UUID\n- employee_id: UUID of commenting employee\n- evaluation_cycle_id: UUID of related evaluation cycle\n- comment: Actual comment text\n\nThis summary streamlines comment information for list displays without timestamps."},"IJobPerformanceEvalManagerComments.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for the manager comment entry."},"comment":{"type":"string","description":"Content of the manager's comment on the employee's evaluation.\n\nThis property contains qualitative feedback provided by the manager as part of job performance evaluations."},"created_at":{"type":"string","format":"date-time","description":"Timestamp marking when the comment was created.\n\nUsed for audit and chronological record-keeping purposes."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp marking last update time of the comment.\n\nReflects the most recent modification to the comment content."}},"required":["id","comment","created_at","updated_at"],"description":"Summary information of manager comments for list displays.\n\nIncludes unique ID, comment text, and timestamps for creation and last update."},"IJobPerformanceEvalEvaluationSnapshots.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the evaluation snapshot record."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"Referenced evaluation cycle's unique ID.\n\nLinks this snapshot to a specific evaluation period."},"employee_id":{"type":"string","format":"uuid","description":"Referenced employee's unique ID.\n\nIndicates which employee this snapshot belongs to."},"performance_score":{"type":"integer","description":"Employee's self-evaluated job performance score.\n\nScale: 1 to 5, with 1 being the lowest and 5 the highest."},"knowledge_score":{"type":"integer","description":"Employee's self-evaluated knowledge and skills score.\n\nScale: 1 to 5."},"problem_solving_score":{"type":"integer","description":"Employee's self-evaluated problem solving and collaboration score.\n\nScale: 1 to 5."},"innovation_score":{"type":"integer","description":"Employee's self-evaluated innovation score.\n\nScale: 1 to 5."},"manager_performance_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of job performance score.\n\nScale: 1 to 5.\n\nOptional; null if manager has not yet evaluated this category."},"manager_knowledge_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of knowledge and skills score.\n\nScale: 1 to 5.\n\nOptional; null if manager has not yet evaluated this category."},"manager_problem_solving_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of problem solving and collaboration score.\n\nScale: 1 to 5.\n\nOptional; null if manager has not yet evaluated this category."},"manager_innovation_score":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Manager's evaluation of innovation score.\n\nScale: 1 to 5.\n\nOptional; null if manager has not yet evaluated this category."},"created_at":{"type":"string","format":"date-time","description":"Snapshot creation timestamp.\n\nRecords when this snapshot was first created."},"updated_at":{"type":"string","format":"date-time","description":"Snapshot last update timestamp.\n\nIndicates the latest modification time."}},"required":["id","evaluation_cycle_id","employee_id","performance_score","knowledge_score","problem_solving_score","innovation_score","created_at","updated_at"],"description":"Summary of job performance evaluation snapshots.\n\nIncludes key scores and references with timestamps for overview listing."},"IJobPerformanceEvalTeamStatistic.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for the team statistics record."},"evaluation_cycle_id":{"type":"string","format":"uuid","description":"Referenced evaluation cycle's unique ID.\n\nLinks the record to a defined evaluation period."},"team_id":{"type":"string","format":"uuid","description":"Organizational team identifier.\n\nUsed to distinguish team-level statistics."},"average_performance_score":{"type":"number","format":"double","description":"Average job performance score for the team during the evaluation cycle.\n\nComputed as the mean of individual employee scores."},"average_knowledge_score":{"type":"number","format":"double","description":"Average knowledge and skills score for the team during the evaluation cycle."},"average_problem_solving_score":{"type":"number","format":"double","description":"Average problem solving and collaboration score for the team during the evaluation cycle."},"average_innovation_score":{"type":"number","format":"double","description":"Average innovation score for the team during the evaluation cycle."},"evaluation_count":{"type":"integer","description":"Number of individual evaluations included in the team's statistics."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nIndicates when the statistics record was created."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp.\n\nIndicates the latest update time."}},"required":["id","evaluation_cycle_id","team_id","average_performance_score","average_knowledge_score","average_problem_solving_score","average_innovation_score","evaluation_count","created_at","updated_at"],"description":"Summary information of team statistics for job performance evaluations.\n\nIncludes average scores and evaluation count for quick reference."}}}}