import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";

import { IPageICommunityAiExternalService } from "../../../../api/structures/IPageICommunityAiExternalService";
import { ICommunityAiExternalService } from "../../../../api/structures/ICommunityAiExternalService";

@Controller("/communityAi/moderator/externalServices")
export class CommunityaiModeratorExternalservicesController {
  /**
   * Retrieve a paginated list of external system service configurations.
   *
   * Retrieve filtered and paginated list of configured external services
   * integrated with Community AI platform. Allows searching and sorting by
   * service name, status, and activation flags.
   *
   * Security considerations: Available to admin and moderator roles.
   *
   * Parameters: Supports input of filter criteria, pagination offset, and
   * sorting order.
   *
   * Response: Returns paginated external service summaries with key
   * information for management and operational oversight.
   *
   * @param connection
   * @param body Filtering and pagination parameters for external services
   *   search
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Patch()
  public async index(
    @TypedBody()
    body: ICommunityAiExternalService.IRequest,
  ): Promise<IPageICommunityAiExternalService.ISummary> {
    body;
    return typia.random<IPageICommunityAiExternalService.ISummary>();
  }
}
