import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";

import { ICommunityAiNotification } from "../../../../api/structures/ICommunityAiNotification";

@Controller("/communityAi/admin/notifications")
export class CommunityaiAdminNotificationsController {
  /**
   * Create a new user notification.
   *
   * This operation allows authorized users or system components to create new
   * notifications targeted at specific users within the community AI
   * platform. Notifications include details such as the recipient,
   * notification type (e.g., comment reply, factcheck alert), title, and
   * message body.
   *
   * Creation of notifications supports real-time messaging for user
   * interaction triggers including AI comment suggestions, moderation alerts,
   * and factcheck flags.
   *
   * Access control ensures only authorized roles can create notifications to
   * prevent abuse. The operation records timestamps and soft delete flags
   * according to schema standards.
   *
   * This corresponds to the community_ai_notifications table in the Prisma DB
   * schema under the Notifications namespace.
   *
   * @param connection
   * @param body Information necessary to create a notification record
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: ICommunityAiNotification.ICreate,
  ): Promise<ICommunityAiNotification> {
    body;
    return typia.random<ICommunityAiNotification>();
  }
}
