import { tags } from "typia";

/**
 * Flags raised by members regarding community content such as posts or
 * comments. Each flag indicates the member who raised it, the content targeted,
 * reason, status, and timestamps. Serves as primary data for moderation
 * workflows and triggers.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiContentFlag = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Member who raised the flag. {@link community_ai_members.id} */
  community_ai_member_id: string & tags.Format<"uuid">;

  /**
   * Targeted post flagged (nullable if the flag is for a comment).
   * {@link community_ai_posts.id}
   */
  community_ai_post_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Targeted comment flagged (nullable if the flag is for a post).
   * {@link community_ai_comments.id}
   */
  community_ai_comment_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Reason given by member for flagging the content. */
  reason: string;

  /** Current status of the flag such as 'pending', 'reviewed', or 'dismissed'. */
  status: string;

  /** Timestamp when the flag was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the flag was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Nullable soft delete timestamp to mark if the flag is deleted and hidden
   * from public.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiContentFlag {
  /** Search and filter parameters for content flags with pagination support. */
  export type IRequest = {
    /** Filter by content flag unique ID. */
    id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by member who raised the flag. */
    community_ai_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by flagged post. */
    community_ai_post_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by flagged comment. */
    community_ai_comment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by reason text content. */
    reason?: string | null | undefined;

    /** Filter by status of the flag. */
    status?: string | null | undefined;

    /** Filter by creation range start. */
    created_at_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by creation range end. */
    created_at_end?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by updated range start. */
    updated_at_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by updated range end. */
    updated_at_end?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for pagination (uint32). */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per page (uint32). */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort column name. */
    order_by?: string | null | undefined;

    /** Sort direction. */
    order_direction?: "asc" | "desc" | null | undefined;
  };

  /** Input data for creating a community content flag raised by a member. */
  export type ICreate = {
    /** Member who raised the flag. {@link community_ai_members.id} */
    community_ai_member_id: string & tags.Format<"uuid">;

    /**
     * Targeted post flagged (nullable if the flag is for a comment).
     * {@link community_ai_posts.id}
     */
    community_ai_post_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Targeted comment flagged (nullable if the flag is for a post).
     * {@link community_ai_comments.id}
     */
    community_ai_comment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Reason given by member for flagging the content. */
    reason: string;

    /**
     * Current status of the flag such as 'pending', 'reviewed', or
     * 'dismissed'.
     */
    status: string;
  };

  /**
   * Update payload for a community content flag, representing mutable
   * properties.
   */
  export type IUpdate = {
    /** Reason given by member for flagging the content. */
    reason: string;

    /**
     * Current status of the flag such as 'pending', 'reviewed', or
     * 'dismissed'.
     */
    status: "pending" | "reviewed" | "dismissed";

    /** Targeted post flagged (nullable if the flag is for a comment). */
    community_ai_post_id: (string & tags.Format<"uuid">) | null;

    /** Targeted comment flagged (nullable if the flag is for a post). */
    community_ai_comment_id: (string & tags.Format<"uuid">) | null;
  };

  /**
   * Summary view of a community content flag raised by a member.
   *
   * This summarized version includes only essential fields appropriate for
   * list views or lightweight processing.
   *
   * It references the community_ai_content_flags Prisma table's important
   * properties regarding flags and moderation status.
   */
  export type ISummary = {
    /** Unique identifier of the content flag */
    id: string & tags.Format<"uuid">;

    /** Reason given by member for flagging the content. */
    reason: string;

    /**
     * Current status of the flag such as 'pending', 'reviewed', or
     * 'dismissed'.
     */
    status: string;

    /** Timestamp when the flag was created. */
    created_at: string & tags.Format<"date-time">;
  };
}
