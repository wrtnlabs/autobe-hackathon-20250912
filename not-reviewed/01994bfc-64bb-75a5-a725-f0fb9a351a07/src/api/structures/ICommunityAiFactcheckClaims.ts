import { tags } from "typia";

/**
 * Factcheck Claims request with filters, pagination, and sorting.
 *
 * Allows clients to specify search criteria to filter factcheck claims.
 * Includes pagination details for result sets. Used for querying textual
 * factual claims extracted from posts or comments.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiFactcheckClaims = {
  /** Unique ID of the factcheck claim. */
  id: string & tags.Format<"uuid">;

  /** Optional post ID referenced by the claim. */
  post_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Optional comment ID referenced by the claim. */
  comment_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Text content of the factual claim. Must be non-empty. */
  claim_text: string;

  /** Creation timestamp in ISO 8601 format with time zone. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp in ISO 8601 format with time zone. */
  updated_at: string & tags.Format<"date-time">;

  /** Optional deletion timestamp indicating soft delete status. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiFactcheckClaims {
  /**
   * Request payload for searching factcheck claims.
   *
   * Includes pagination, filtering, and sorting options.
   *
   * Used for querying textual factual claims extracted from posts or
   * comments.
   */
  export type IRequest = {
    /** Optional search keyword to match claim text. */
    search?: string | null | undefined;

    /** Pagination: page number (must be uint32). */
    page?: number | null | undefined;

    /** Pagination: limit records per page (must be uint32). */
    limit?: number | null | undefined;

    /** Optional filter: post ID to limit claims to a specific post. */
    post_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional filter: comment ID to limit claims to a specific comment. */
    comment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional sorting field name, e.g., created_at. */
    orderBy?: string | null | undefined;

    /** Optional sort direction: asc or desc. Only "asc" or "desc" allowed. */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary view of a community AI fact-check claim.
   *
   * Contains the claim's unique ID, the claim text, and the creation
   * timestamp for overview and listing.
   */
  export type ISummary = {
    /** Unique identifier of the factcheck claim. */
    id: string & tags.Format<"uuid">;

    /** Extracted factual claim text to be verified. */
    claim_text: string;

    /** Timestamp when the claim was created. */
    created_at: string & tags.Format<"date-time">;
  };
}
