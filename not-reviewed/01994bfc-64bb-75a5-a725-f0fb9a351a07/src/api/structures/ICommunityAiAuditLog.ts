import { tags } from "typia";

/**
 * Audit log entry capturing detailed records of system actions including user,
 * admin, moderator, and system events for compliance and forensic analysis.
 *
 * Each log entry is immutable and includes metadata such as IP address and user
 * agent for traceability.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiAuditLog = {
  /** Unique identifier of the audit log entry. */
  id: string & tags.Format<"uuid">;

  /** Member user ID associated with the action, nullable if not applicable. */
  user_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Admin user ID associated with the action, nullable if not applicable. */
  admin_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Moderator user ID associated with the action, nullable if not applicable. */
  moderator_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** System setting ID related to action, nullable if not applicable. */
  system_setting_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Type of action, such as 'login', 'post_create'. */
  action_type: string;

  /** Detailed description of the action performed. */
  action_description?: string | null | undefined;

  /** IP address from which the action originated. */
  ip_address?: string | null | undefined;

  /** User agent string of the client performing the action. */
  user_agent?: string | null | undefined;

  /** Timestamp when the audit log entry was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace ICommunityAiAuditLog {
  /** Request object with optional filtering criteria for searching audit logs. */
  export type IRequest = {
    /** Primary Key UUID of the audit log entry, nullable. */
    id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Acting member user ID, nullable. */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Admin user ID, nullable. */
    admin_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Moderator user ID, nullable. */
    moderator_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Related system setting ID, nullable. */
    system_setting_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Type of action performed, e.g., 'login', 'post_create',
     * 'comment_delete', nullable.
     */
    action_type?: string | null | undefined;

    /** Detailed description of the action performed, nullable. */
    action_description?: string | null | undefined;

    /** IP address from which the action originated, nullable. */
    ip_address?: string | null | undefined;

    /** User agent string of the client, nullable. */
    user_agent?: string | null | undefined;

    /** Timestamp when the audit log entry was created, nullable. */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary view of audit log entry
   *
   * This type includes only basic identifying information and action type
   * along with creation timestamp for listing and brief representations.
   */
  export type ISummary = {
    /** Unique identifier of the audit log entry */
    id: string & tags.Format<"uuid">;

    /** Type of action performed, e.g., 'login', 'post_create' */
    action_type: string;

    /** Timestamp when the audit log entry was created */
    created_at: string & tags.Format<"date-time">;
  };
}
