import { tags } from "typia";

/**
 * Represents a moderator's review of content flags or user reports within the
 * community AI platform.
 *
 * This entity captures decisions, comments, and auditing timestamps for
 * moderation actions.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiModeratorReview = {
  /** Unique identifier (UUID) of the moderator review */
  id: string & tags.Format<"uuid">;

  /** Moderator ID who performed the review */
  community_ai_moderator_id: string & tags.Format<"uuid">;

  /** Linked content flag ID if any */
  community_ai_content_flag_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /** Linked user report ID if any */
  community_ai_user_report_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /** Review decision such as 'approved', 'rejected' */
  decision: string;

  /** Optional comments by the moderator */
  comments?: string | null | undefined;

  /** Timestamp when the review was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the review was last updated */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp if deleted */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiModeratorReview {
  /**
   * Request payload for querying paginated moderator reviews. Supports
   * filtering by decision and creation date range, with pagination
   * parameters.
   */
  export type IRequest = {
    /** Optional filter by decision */
    decision?: string | null | undefined;

    /** Filter by creation date range start (ISO 8601) */
    createdFrom?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by creation date range end (ISO 8601) */
    createdTo?: (string & tags.Format<"date-time">) | null | undefined;

    /** Pagination: page number */
    page?: number | null | undefined;

    /** Pagination: items per page */
    limit?: number | null | undefined;
  };

  /**
   * Create moderator review type requiring moderator ID and decision with
   * optional comments, linked to content flag or user report.
   */
  export type ICreate = {
    /** Moderator performing the review. community_ai_moderators.id */
    community_ai_moderator_id: string & tags.Format<"uuid">;

    /** Referenced content flag under review. community_ai_content_flags.id */
    community_ai_content_flag_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Referenced user report under review. community_ai_user_reports.id */
    community_ai_user_report_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Decision outcome such as 'approved', 'rejected', or 'needs more
     * info'.
     */
    decision: string;

    /** Additional comments or reasons by the moderator. */
    comments?: string | null | undefined;
  };

  /**
   * Update type for moderator review allowing partial updates to all fields
   * with timestamp and soft delete support.
   */
  export type IUpdate = {
    /** Moderator performing the review. community_ai_moderators.id */
    community_ai_moderator_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Referenced content flag under review. community_ai_content_flags.id */
    community_ai_content_flag_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Referenced user report under review. community_ai_user_reports.id */
    community_ai_user_report_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Decision outcome such as 'approved', 'rejected', or 'needs more
     * info'.
     */
    decision?: string | undefined;

    /** Additional comments or reasons by the moderator. */
    comments?: string | null | undefined;

    /** Timestamp when the review was created. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp when the review was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Nullable soft delete timestamp to mark if the review is deleted and
     * hidden.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
