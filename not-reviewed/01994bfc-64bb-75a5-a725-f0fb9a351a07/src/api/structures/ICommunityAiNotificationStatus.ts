import { tags } from "typia";

/**
 * Represents a historical status record for a user notification, capturing the
 * processing state, timestamps, and optional descriptions for audit and
 * lifecycle management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiNotificationStatus = {
  /** Unique identifier of the notification status record. */
  id: string & tags.Format<"uuid">;

  /** Notification ID this status belongs to. */
  notification_id: string & tags.Format<"uuid">;

  /**
   * Status code representing notification processing state such as 'pending',
   * 'delivered', or 'failed'.
   */
  status: string;

  /** Optional detailed description or reason for the status. */
  description?: string | null | undefined;

  /** Timestamp when this status entry was recorded. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when this status entry was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for this status entry. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiNotificationStatus {
  /** Request parameters to filter, sort, paginate notification status entries. */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort order specifying field name and direction. */
    orderBy?: string | null | undefined;

    /** Filter condition based on notification_id. */
    notification_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /** Request body schema for creating a new notification status entry. */
  export type ICreate = {
    /** ID of the notification this status is associated with. */
    notification_id: string & tags.Format<"uuid">;

    /**
     * Status code representing the notification state, e.g., 'pending',
     * 'delivered', 'failed'.
     */
    status: string;

    /** Optional detailed description or reason for the status. */
    description?: string | null | undefined;
  };

  /** Request body schema for updating an existing notification status entry. */
  export type IUpdate = {
    /** Status code representing the notification processing state. */
    status?: string | undefined;

    /** Optional description providing more details on status. */
    description?: string | null | undefined;

    /**
     * Soft delete timestamp indicating if the status entry is considered
     * deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
