import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Member user entity representing community participants who can create
 * content.
 *
 * This type corresponds exactly to the Prisma database model
 * community_ai_members, including all fields and relations pertinent to user
 * management and content.
 *
 * Sensitive data like password hashes are intentionally excluded from response
 * types to protect security.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiMember = {
  /** Unique identifier of the member user */
  id: string & tags.Format<"uuid">;

  /** Member user's unique email address for login and contact */
  email: string;

  /** Member user's display name or nickname */
  display_name: string;

  /** Timestamp when the member was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the member was last updated */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the member was soft deleted, if applicable */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiMember {
  /**
   * Data required to create a new member user with unique email, password
   * hash, and display name.
   */
  export type ICreate = {
    /** Unique email address of the member user for login and contact. */
    email: string;

    /** Hash of the member's password for authentication purposes. */
    password_hash: string;

    /** Member user's display name or nickname. */
    display_name: string;
  };

  /** Authorized response with JWT tokens and user info after authentication. */
  export type IAuthorized = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** Member user's unique email address for login and contact */
    email: string;

    /** Member user's display name or nickname */
    display_name: string;

    /** Timestamp when the member was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the member was last updated */
    updated_at: string & tags.Format<"date-time">;

    /** Timestamp when the member was soft deleted, if applicable */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Login data for member users requiring email and password hash. */
  export type ILogin = {
    /** Unique email address of the member user for login and contact. */
    email: string;

    /** Hash of the member's password for authentication purposes. */
    password_hash: string;
  };

  /**
   * Refresh token request data containing refresh token string for token
   * renewal.
   */
  export type IRefresh = {
    /** Valid refresh token string for renewal. */
    refresh_token: string;
  };

  /** Request parameters for filtering and paginating member list. */
  export type IRequest = {
    /** Page number to fetch (unsigned 32-bit integer) */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of entries per page (unsigned 32-bit integer) */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter by member email address. */
    email?: string | null | undefined;

    /** Filter by display name. */
    display_name?: string | null | undefined;

    /** Filter members created after this date/time (ISO 8601) */
    created_at_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter members created before this date/time (ISO 8601) */
    created_at_end?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Partial update type for ICommunityAiMember where all fields are optional
   * and nullable where appropriate.
   */
  export type IUpdate = {
    /** Optional updated email address */
    email?: string | undefined;

    /** Optional updated password hash */
    password_hash?: string | undefined;

    /** Optional updated display name */
    display_name?: string | undefined;

    /** Optional timestamp for soft deletion */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Holder method name for the system internal use
     *
     * @deprecated
     */
    holderMethodName?: string | undefined;
  };

  /**
   * Summary view representation of member user excluding sensitive details
   * such as password hash.
   *
   * This summary is optimized for listings and does not expose sensitive
   * authentication fields.
   */
  export type ISummary = {
    /** Unique identifier of the member user */
    id: string & tags.Format<"uuid">;

    /** Email address of the member user */
    email: string;

    /** Display name or nickname of the member user */
    display_name: string;

    /** Timestamp when the member was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the member was last updated */
    updated_at: string & tags.Format<"date-time">;
  };
}
