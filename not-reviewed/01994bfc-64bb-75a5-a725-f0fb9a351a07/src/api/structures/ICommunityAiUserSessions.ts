import { tags } from "typia";

/**
 * Authentication session data storing tokens, expiration info, client device
 * and connection info, supporting lifecycle and audit of user sessions.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiUserSessions = {
  /** Unique identifier */
  id: string & tags.Format<"uuid">;

  /** Associated community AI member's id */
  community_ai_member_id: string & tags.Format<"uuid">;

  /** Unique token for session authentication */
  session_token: string;

  /** Expiration timestamp of the session */
  expires_at: string & tags.Format<"date-time">;

  /** Optional token for session renewal */
  refresh_token?: string | null | undefined;

  /** Expiration timestamp of the refresh token */
  refresh_token_expires_at?:
    | (string & tags.Format<"date-time">)
    | null
    | undefined;

  /** IP address from which the session was initiated */
  ip_address?: string | null | undefined;

  /** User agent string of the client device */
  user_agent?: string | null | undefined;

  /** Timestamp of session creation */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the session was soft deleted or invalidated */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiUserSessions {
  /**
   * Page request data for community AI user sessions with optional filters
   * for member ID and deletion status.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional filter with user id to restrict search to specific member. */
    community_ai_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional filter with soft deletion status: true for deleted, false
     * for existing, null for all.
     */
    is_deleted?: boolean | null | undefined;
  };

  /**
   * Minimal summary of a community AI member's authentication session,
   * including essential identification and expiration timestamps.
   */
  export type ISummary = {
    /** Unique identifier of the user session */
    id: string & tags.Format<"uuid">;

    /** The associated member's unique identifier */
    community_ai_member_id: string & tags.Format<"uuid">;

    /** Unique token for authentication session */
    session_token: string;

    /** Timestamp when the session expires */
    expires_at: string & tags.Format<"date-time">;

    /** Session creation timestamp */
    created_at: string & tags.Format<"date-time">;

    /** Session update timestamp */
    updated_at: string & tags.Format<"date-time">;
  };
}
