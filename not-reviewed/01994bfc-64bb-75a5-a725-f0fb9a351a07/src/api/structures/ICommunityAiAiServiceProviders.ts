import { tags } from "typia";

/**
 * AI service provider entity representing configuration metadata to connect to
 * external AI services used in community AI platform for comment analysis and
 * fact-checking.
 *
 * Each record maintains critical connection details, authentication info, and
 * operational parameters.
 *
 * Timestamps track the life-cycle of the provider record.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiAiServiceProviders = {
  /** Unique identifier of the AI service provider. */
  id: string & tags.Format<"uuid">;

  /**
   * Unique official name of the AI service provider used for display and
   * identification.
   */
  provider_name: string;

  /**
   * The base URI for the provider's API endpoints, with a maximum length
   * supporting very long URLs (up to 80000 characters).
   */
  api_base_url: string;

  /** Authentication mechanism used by the provider such as OAuth2 or API Key. */
  auth_type: string;

  /**
   * API key or token used for accessing the AI service. This field is
   * optional and may be null.
   */
  api_key?: string | null | undefined;

  /**
   * JSON string storing dynamic configuration parameters for the AI provider.
   * This is an optional property used to customize behavior.
   */
  config_json?: string | null | undefined;

  /** Timestamp when the AI service provider record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the AI service provider record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp to indicate if the record is deleted. Nullable. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ICommunityAiAiServiceProviders {
  /**
   * Request object for filtering, sorting, and paginating AI service
   * providers list.
   */
  export type IRequest = {
    /** Current page number for paginated results. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records to return per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Optional search keyword to filter AI service providers by name or
     * related fields.
     */
    search?: string | null | undefined;

    /** Filter to include only active service providers when true. */
    is_active?: boolean | null | undefined;

    /** Sorting criteria, e.g., 'provider_name' or 'created_at'. */
    sort_by?: string | null | undefined;
  };
}
