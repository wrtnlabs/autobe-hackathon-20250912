import { tags } from "typia";

/**
 * Community AI external system service entity representing registered AI,
 * notification, or integration providers configured in the platform.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiExternalServices = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Unique name of the external service. */
  service_name: string;

  /** URI endpoint for API access to the external service. */
  api_endpoint: string;

  /**
   * Authentication token or key for service API calls, may be null if not
   * needed.
   */
  auth_token?: string | null | undefined;

  /** Flag indicating if the service is currently active and enabled. */
  is_active: boolean;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityAiExternalServices {
  /**
   * Request body schema for creating a new external system service record
   * with service name, API endpoint, optional authentication token, and
   * active status flag.
   */
  export type ICreate = {
    /** Unique name of the external service. */
    service_name: string;

    /** URI endpoint for API access to the external service. */
    api_endpoint: string;

    /**
     * Authentication token or key for service API calls, may be null if not
     * needed.
     */
    auth_token?: string | null | undefined;

    /** Flag indicating if the service is currently active and enabled. */
    is_active: boolean;
  };

  /**
   * Represents updateable properties of an external AI or system integration
   * service.
   *
   * Allows partial update of service configuration such as service name, API
   * endpoint, authentication token, and activity status. All fields are
   * optional and may be null to clear values.
   *
   * This schema enforces uniqueness and integrity by restricting updates to
   * valid service records.
   */
  export type IUpdate = {
    /** Unique name of the external service. */
    service_name?: string | null | undefined;

    /** URI endpoint for API access to the external service. */
    api_endpoint?: string | null | undefined;

    /**
     * Authentication token or key for service API calls, may be null if not
     * needed.
     */
    auth_token?: string | null | undefined;

    /** Flag indicating if the service is currently active and enabled. */
    is_active?: boolean | null | undefined;

    /** Primary Key. */
    id: string & tags.Format<"uuid">;
  };
}
