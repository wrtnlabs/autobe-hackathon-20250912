import { tags } from "typia";

/**
 * Community AI platform system configuration setting record.
 *
 * Stores key-value pairs defining operational parameters such as feature
 * toggles and system modes.
 *
 * Unique keys ensure unambiguous configurations.
 *
 * Each record tracks creation and modification timestamps for auditing.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiCommunityAiSystemSettings = {
  /**
   * Primary Key.
   *
   * Unique identifier for the system setting.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique key identifying the system setting.
   *
   * Represents the name of a configuration parameter controlling system
   * behaviour.
   */
  setting_key: string;

  /**
   * Value of the system setting as string.
   *
   * Represents the value associated with the 'setting_key', controlling
   * feature or platform parameters.
   */
  setting_value: string;

  /**
   * Optional human-readable description of the setting purpose and usage.
   *
   * Provides admins with context about this configuration parameter. Can be
   * null when no description is available.
   */
  description?: string | null | undefined;

  /**
   * Record creation timestamp.
   *
   * The time at which this setting record was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * The last time this setting was modified.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityAiCommunityAiSystemSettings {
  /**
   * Request parameters to filter and paginate community AI system settings.
   *
   * Includes paging controls, textual search filters, and date range
   * constraints for both creation and update timestamps.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * Determines which page of the paginated results is requested.
     *
     * @default 1
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * Defines the maximum number of records returned in a single paginated
     * response.
     *
     * @default 20
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<1000>)
      | null
      | undefined;

    /**
     * Search by setting key.
     *
     * Allows filtering settings by their unique keys.
     */
    searchKey?:
      | (string & tags.MinLength<1> & tags.MaxLength<255>)
      | null
      | undefined;

    /**
     * Search by setting value substring.
     *
     * Enables filtering by partial matching of the setting's value.
     */
    searchValue?: (string & tags.MaxLength<10000>) | null | undefined;

    /**
     * Date range start filter for creation date.
     *
     * Filters settings created on or after this date/time.
     */
    createdAfter?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Date range end filter for creation date.
     *
     * Filters settings created before or on this date/time.
     */
    createdBefore?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Date range start filter for last updated date.
     *
     * Filters settings updated on or after this date/time.
     */
    updatedAfter?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Date range end filter for last updated date.
     *
     * Filters settings updated before or on this date/time.
     */
    updatedBefore?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Data required to create a new community AI system setting.
   *
   * This represents a key-value pair configuration with an optional
   * description.
   */
  export type ICreate = {
    /**
     * Unique key identifying the system setting.
     *
     * Mandatory unique identifier for the system configuration.
     */
    setting_key: string;

    /**
     * Value of the system setting as string.
     *
     * Value to assign to the setting key.
     */
    setting_value: string;

    /**
     * Optional description for the setting.
     *
     * Provides additional contextual information for administrators.
     */
    description?: string | null | undefined;
  };

  /**
   * Data fields allowed to update in an existing system setting.
   *
   * This includes setting value and optional description.
   */
  export type IUpdate = {
    /**
     * Value of the system setting as string.
     *
     * Updated value for the configuration key.
     */
    setting_value?: (string & tags.MaxLength<10000>) | null | undefined;

    /**
     * Optional description for the setting.
     *
     * Allows changing or clearing the descriptive text.
     */
    description?: string | null | undefined;
  };
}
