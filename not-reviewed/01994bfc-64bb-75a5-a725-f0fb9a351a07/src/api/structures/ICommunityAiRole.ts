import { tags } from "typia";

/**
 * User role entity representing access control groups within the community AI
 * platform.
 *
 * Contains role names and descriptions associating permissions and
 * responsibilities. Used for assigning roles to users and enforcing
 * authorization policies.
 *
 * Reflects the community_ai_roles table from the Prisma schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiRole = {
  /** Unique identifier of the user role. */
  id: string & tags.Format<"uuid">;

  /**
   * Unique role name within the community AI system. Roles define user
   * permission groups such as admin or moderator.
   */
  role_name: string;

  /** Optional descriptive explanation of the role's purpose. */
  description?: string | null | undefined;

  /** Timestamp when the role was created. ISO 8601 date-time string. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the role was last updated. ISO 8601 date-time string. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ICommunityAiRole {
  /**
   * Data used to update existing user roles. Fields are optional and can be
   * null.
   */
  export type IUpdate = {
    /** Updated unique name of the user role. */
    role_name?: string | null | undefined;

    /** Updated description of the user role. */
    description?: string | null | undefined;
  };
}
