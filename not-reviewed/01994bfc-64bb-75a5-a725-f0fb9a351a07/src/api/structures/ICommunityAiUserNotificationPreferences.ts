import { tags } from "typia";

/**
 * User-specific notification preferences that store per-user settings for
 * notification delivery channels, opt-ins, and categories. Preferences are
 * linked to the associated user account and provide customization options for
 * notification management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ICommunityAiUserNotificationPreferences = {
  /**
   * Primary Key.
   *
   * Unique identifier for the user notification preference record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * User this preference belongs to, referencing community_ai_members.id.
   *
   * This identifies the member user who owns these notification preferences.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * Flag indicating whether the user has enabled email notifications.
   *
   * True if user opts to receive notifications via email.
   */
  email_notifications_enabled: boolean;

  /**
   * Flag indicating whether the user has enabled push notifications.
   *
   * True if push notifications are enabled for the user.
   */
  push_notifications_enabled: boolean;

  /**
   * Flag indicating whether the user has enabled SMS notifications.
   *
   * True if user opts to receive SMS notifications.
   */
  sms_notifications_enabled: boolean;

  /**
   * Timestamp when the preferences were created.
   *
   * ISO 8601 format date-time indicating creation time.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the preferences were last updated.
   *
   * ISO 8601 date-time string of last update.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp for the preferences record.
   *
   * Nullable timestamp indicating when this record was soft deleted.
   */
  deleted_at: (string & tags.Format<"date-time">) | null;
};
export namespace ICommunityAiUserNotificationPreferences {
  /**
   * User-specific notification preferences that store per-user settings for
   * notification delivery channels, opt-ins, and categories. Preferences are
   * linked to the associated user account and provide customization options
   * for notification management.
   */
  export type ICreate = {
    /** User this preference belongs to, referencing community_ai_members.id. */
    user_id: string & tags.Format<"uuid">;

    /** Flag indicating whether the user has enabled email notifications. */
    email_notifications_enabled: boolean;

    /** Flag indicating whether the user has enabled push notifications. */
    push_notifications_enabled: boolean;

    /** Flag indicating whether the user has enabled SMS notifications. */
    sms_notifications_enabled: boolean;
  };

  /**
   * User-specific notification preferences that store per-user settings for
   * notification delivery channels, opt-ins, and categories. Preferences are
   * linked to the associated user account and provide customization options
   * for notification management.
   */
  export type IUpdate = {
    /** Flag indicating whether the user has enabled email notifications. */
    email_notifications_enabled?: boolean | undefined;

    /** Flag indicating whether the user has enabled push notifications. */
    push_notifications_enabled?: boolean | undefined;

    /** Flag indicating whether the user has enabled SMS notifications. */
    sms_notifications_enabled?: boolean | undefined;

    /** Soft delete timestamp for the preferences record. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
