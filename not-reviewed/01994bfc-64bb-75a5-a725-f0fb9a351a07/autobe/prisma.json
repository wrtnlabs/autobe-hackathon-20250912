{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"community_ai_system_settings","description":"System-wide configuration settings for community AI platform. Stores key-value based settings for general platform behavior and feature toggles. This table holds critical system parameters that control site-wide operational modes. Uniqueness is enforced on setting keys.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"setting_key","type":"string","nullable":false,"description":"Unique key identifying the system setting."},{"name":"setting_value","type":"string","nullable":false,"description":"Value of the system setting as string."},{"name":"description","type":"string","nullable":true,"description":"Optional human-readable description of the setting purpose and usage."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["setting_key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[]},{"name":"community_ai_roles","description":"Defines user roles within the community AI platform. Represents role names and their descriptions for access control and permission assignment. Roles govern authorization scopes and are referenced throughout the system.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"role_name","type":"string","nullable":false,"description":"Unique name of the user role."},{"name":"description","type":"string","nullable":true,"description":"Detailed description of the role and its purpose in the system."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["role_name"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[]},{"name":"community_ai_permissions","description":"Permission definitions that govern access rights within the community AI platform. Permissions link to roles and specify authorization actions. This table contains discrete permission entries which can be assigned to roles.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"permission_name","type":"string","nullable":false,"description":"Unique identifier name for the permission."},{"name":"description","type":"string","nullable":true,"description":"Detailed explanation of what actions the permission allows."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["permission_name"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[]},{"name":"community_ai_external_services","description":"Configuration and metadata for external AI and system integration services used by Community AI platform. Includes service names, API endpoints, authentication credentials, and operational status. Supports multiple external service types for extensibility.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"service_name","type":"string","nullable":false,"description":"Unique name of the external service."},{"name":"api_endpoint","type":"uri","nullable":false,"description":"URI endpoint for API access to the external service."},{"name":"auth_token","type":"string","nullable":true,"description":"Authentication token or key for service API calls, may be null if not needed."},{"name":"is_active","type":"boolean","nullable":false,"description":"Flag indicating if the service is currently active and enabled."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["service_name"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active","created_at"]}],"ginIndexes":[]}]},{"filename":"schema-02-identity.prisma","namespace":"Identity","models":[{"name":"community_ai_admins","description":"Table representing admin users with full system control including user management, content moderation, and AI feature configuration. Each admin has unique identity attributes and audit timestamps. Part of the Identity component enabling role-specific user management and access control.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address of the admin user for login and contact."},{"name":"password_hash","type":"string","nullable":false,"description":"Hash of the admin's password for authentication purposes."},{"name":"display_name","type":"string","nullable":false,"description":"Admin user's display name or nickname."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the admin user was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the admin user was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the admin user was soft deleted, if applicable."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[]},{"name":"community_ai_moderators","description":"Table representing moderator users with permissions to review and flag content, manage user-generated posts and comments. Supports role-based access control distinct from admins and members with separate identity fields and audit trails.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address of the moderator user for login and contact."},{"name":"password_hash","type":"string","nullable":false,"description":"Hash of the moderator's password for authentication purposes."},{"name":"display_name","type":"string","nullable":false,"description":"Moderator user's display name or nickname."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the moderator user was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the moderator user was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the moderator user was soft deleted, if applicable."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[]},{"name":"community_ai_members","description":"Table representing member users, the main community participants who can create posts, comments, and use AI-assisted features. Holds identity data, credentials, and audit timestamps. Supports separation of normal users from admins and moderators.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address of the member user for login and contact."},{"name":"password_hash","type":"string","nullable":false,"description":"Hash of the member's password for authentication purposes."},{"name":"display_name","type":"string","nullable":false,"description":"Member user's display name or nickname."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the member user was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the member user was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the member user was soft deleted, if applicable."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-content.prisma","namespace":"Content","models":[{"name":"community_ai_posts","description":"Primary content entity representing posts created by community members. Houses main post data including title, content, status, author association, and timestamps. Supports content lifecycle with soft deletion and workflow status. Related snapshots capture historical states.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"author_id","type":"uuid","description":"Belonged author's community_ai_members.id.","relation":{"name":"author","targetModel":"community_ai_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Post title, up to 100 characters, non-empty.","nullable":false},{"name":"slug","type":"string","description":"Unique slug for post URL identification.","nullable":false},{"name":"body","type":"string","description":"Main content body of the post.","nullable":false},{"name":"status","type":"string","description":"Current workflow status of the post (e.g., draft, published, archived).","nullable":false},{"name":"business_status","type":"string","description":"Business specific state for the post workflow.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the post was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the post was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp; null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["slug"],"unique":true}],"plainIndexes":[{"fieldNames":["author_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"community_ai_post_snapshots","description":"Snapshot entity capturing historical states of posts for audit trails and version control. Stores denormalized data of the post at the moment of snapshot creation for historical reference.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_post_id","type":"uuid","description":"Belonged post's community_ai_posts.id.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Snapshot of post title.","nullable":false},{"name":"slug","type":"string","description":"Snapshot of post slug.","nullable":false},{"name":"body","type":"string","description":"Snapshot of post body content.","nullable":false},{"name":"status","type":"string","description":"Snapshot of current post status.","nullable":false},{"name":"business_status","type":"string","description":"Snapshot of business workflow status.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the snapshot was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_ai_post_id","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"body"}]},{"name":"community_ai_comments","description":"Primary entity representing comments made by community members on posts. Contains comment content, author association, linked post, timestamps, and soft deletion support. Comments support independent management and AI moderation features.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_post_id","type":"uuid","description":"Belonged post's community_ai_posts.id.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":false},{"name":"author_id","type":"uuid","description":"Belonged author's community_ai_members.id.","relation":{"name":"author","targetModel":"community_ai_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"body","type":"string","description":"Comment content, non-empty and up to 1000 characters.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the comment was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the comment was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp; null if not deleted.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_ai_post_id","author_id","created_at"]}],"ginIndexes":[{"fieldName":"body"}]},{"name":"community_ai_comment_snapshots","description":"Snapshot entity capturing historical states of comments for audit trails and version control. Stores comment data corresponding to a specific previous state for history analysis and moderation tracking.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_comment_id","type":"uuid","description":"Belonged comment's community_ai_comments.id.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":false}],"plainFields":[{"name":"body","type":"string","description":"Snapshot of comment content.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the snapshot was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_ai_comment_id","created_at"]}],"ginIndexes":[{"fieldName":"body"}]}]},{"filename":"schema-04-ai_commenting.prisma","namespace":"AICommenting","models":[{"name":"community_ai_ai_comment_suggestions","description":"Stores AI-generated suggestions for improving user comments. Each suggestion links to a specific comment and the user who made the comment. It captures the suggested text, confidence score, and timestamps for creation and updates. Supports user interaction with AI comment improvement features.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_comment_id","type":"uuid","description":"Referenced comment's {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":false},{"name":"member_id","type":"uuid","description":"Member who owns the original comment {@link community_ai_members.id}.","relation":{"name":"member","targetModel":"community_ai_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"suggestion_text","type":"string","description":"AI-generated comment improvement suggestion text.","nullable":false},{"name":"confidence_score","type":"double","description":"Confidence score for the AI suggestion ranging from 0.0 to 1.0.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the AI suggestion was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the AI suggestion was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion, if applicable.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_ai_comment_id","member_id","suggestion_text"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","member_id"]}],"ginIndexes":[{"fieldName":"suggestion_text"}]},{"name":"community_ai_comment_sentiment_analyses","description":"Historical sentiment analysis results for comments. Each record links to one comment and captures sentiment classification such as positive, neutral, or negative, along with AI confidence scores and timestamps for auditing purposes.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_comment_id","type":"uuid","description":"Referenced comment's {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":false}],"plainFields":[{"name":"sentiment","type":"string","description":"Sentiment classification: positive, neutral, or negative.","nullable":false},{"name":"confidence_score","type":"double","description":"Confidence score for sentiment analysis from AI, range 0.0 to 1.0.","nullable":false},{"name":"analyzed_at","type":"datetime","description":"Timestamp when the sentiment analysis was performed.","nullable":false}],"uniqueIndexes":[{"fieldNames":["community_ai_comment_id","analyzed_at"],"unique":true}],"plainIndexes":[{"fieldNames":["analyzed_at"]}],"ginIndexes":[]},{"name":"community_ai_ai_generated_replies","description":"AI-generated replies to user posts or comments. Each reply links to the original user comment or post and stores the generated reply text with confidence score and timestamps. Facilitates AI-assisted conversation enhancement.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_comment_id","type":"uuid","description":"Referenced comment's {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true},{"name":"community_ai_post_id","type":"uuid","description":"Referenced post's {@link community_ai_posts.id}.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true}],"plainFields":[{"name":"reply_text","type":"string","description":"Generated reply text provided by the AI model.","nullable":false},{"name":"confidence_score","type":"double","description":"Confidence score for the generated reply ranging from 0.0 to 1.0.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the reply was generated.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the reply was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion, if applicable.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"reply_text"}]}]},{"filename":"schema-05-ai_factcheck.prisma","namespace":"AIFactcheck","models":[{"name":"community_ai_factcheck_claims","description":"Factual claims extracted from posts or comments for AI fact-checking. Each claim is linked to its source content, supporting accurate verification workflows and auditability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"post_id","type":"uuid","description":"Source post's {@link community_ai_posts.id}.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Source comment's {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"claim_text","type":"string","nullable":false,"description":"Extracted factual claim text to be verified."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the claim was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the claim was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for claim."}],"uniqueIndexes":[{"fieldNames":["post_id","claim_text"],"unique":true},{"fieldNames":["comment_id","claim_text"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"community_ai_factcheck_results","description":"Verification results from AI fact-check services linked to extracted claims. Includes verification status, confidence score, source references, and audit timestamps.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"factcheck_claim_id","type":"uuid","description":"Linked factual claim's {@link community_ai_factcheck_claims.id}.","relation":{"name":"factcheckClaim","targetModel":"community_ai_factcheck_claims"},"unique":false,"nullable":false}],"plainFields":[{"name":"is_verified","type":"boolean","nullable":false,"description":"Indicates if the claim was verified as true or false."},{"name":"confidence_score","type":"double","nullable":false,"description":"Confidence level of the verification result provided by the AI."},{"name":"source_url","type":"string","nullable":true,"description":"Reference URL to source data backing the verification."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the verification result was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the verification result was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for verification result."}],"uniqueIndexes":[{"fieldNames":["factcheck_claim_id"],"unique":true}],"plainIndexes":[{"fieldNames":["is_verified"]}],"ginIndexes":[]},{"name":"community_ai_factcheck_flags","description":"Flags raised by AI fact-checking on content indicating potential misinformation or issues. Includes references to source claims, content IDs, flag type, status, and reporting member details for moderation and traceability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"factcheck_claim_id","type":"uuid","description":"Linked factual claim's {@link community_ai_factcheck_claims.id}.","relation":{"name":"factcheckClaim","targetModel":"community_ai_factcheck_claims"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Offending post's {@link community_ai_posts.id}.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Offending comment's {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true},{"name":"reported_by_member_id","type":"uuid","description":"Member who reported the flag's {@link community_ai_members.id}.","relation":{"name":"reportedByMember","targetModel":"community_ai_members"},"unique":false,"nullable":true}],"plainFields":[{"name":"flag_type","type":"string","nullable":false,"description":"Type of flag raised, e.g., misinformation, spam, inappropriate content."},{"name":"flag_status","type":"string","nullable":false,"description":"Current status of the flag, e.g., pending, reviewed, dismissed."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the flag was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of the last flag update."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for the flag record."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["flag_status"]}],"ginIndexes":[]}]},{"filename":"schema-06-moderation.prisma","namespace":"Moderation","models":[{"name":"community_ai_content_flags","description":"Flags raised by members regarding community content such as posts or comments. Each flag indicates the member who raised it, the content targeted, reason, status, and timestamps. Serves as primary data for moderation workflows and triggers.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_member_id","type":"uuid","description":"Member who raised the flag. {@link community_ai_members.id}","relation":{"name":"member","targetModel":"community_ai_members"},"unique":false,"nullable":false},{"name":"community_ai_post_id","type":"uuid","description":"Targeted post flagged (nullable if the flag is for a comment). {@link community_ai_posts.id}","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true},{"name":"community_ai_comment_id","type":"uuid","description":"Targeted comment flagged (nullable if the flag is for a post). {@link community_ai_comments.id}","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"reason","type":"string","description":"Reason given by member for flagging the content.","nullable":false},{"name":"status","type":"string","description":"Current status of the flag such as 'pending', 'reviewed', or 'dismissed'.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the flag was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the flag was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Nullable soft delete timestamp to mark if the flag is deleted and hidden from public.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_ai_member_id","community_ai_post_id","community_ai_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status","created_at"]}],"ginIndexes":[{"fieldName":"reason"}]},{"name":"community_ai_user_reports","description":"Reports submitted independently by members regarding inappropriate content or user behavior. Tracks the reporting member, referenced content, report reason, resolution status, and timestamps. Supports moderation escalation workflows.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_member_id","type":"uuid","description":"Member who submitted the report. {@link community_ai_members.id}","relation":{"name":"member","targetModel":"community_ai_members"},"unique":false,"nullable":false},{"name":"community_ai_post_id","type":"uuid","description":"Post reported (nullable if the report targets a comment). {@link community_ai_posts.id}","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true},{"name":"community_ai_comment_id","type":"uuid","description":"Comment reported (nullable if the report targets a post). {@link community_ai_comments.id}","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"report_reason","type":"string","description":"Reason for reporting the content or user behavior.","nullable":false},{"name":"resolution_status","type":"string","description":"Current resolution status such as 'open', 'investigating', or 'closed'.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the report was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the report was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Nullable soft delete timestamp to mark if the report is deleted and hidden from public.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_ai_member_id","community_ai_post_id","community_ai_comment_id"],"unique":true}],"plainIndexes":[{"fieldNames":["resolution_status","created_at"]}],"ginIndexes":[{"fieldName":"report_reason"}]},{"name":"community_ai_moderator_reviews","description":"Reviews and decisions made by moderators regarding flagged or reported content. Includes reference to the moderator, related flag or report, decision details, and audit timestamps. Facilitates moderation workflow tracking and accountability.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_moderator_id","type":"uuid","description":"Moderator performing the review. {@link community_ai_moderators.id}","relation":{"name":"moderator","targetModel":"community_ai_moderators"},"unique":false,"nullable":false},{"name":"community_ai_content_flag_id","type":"uuid","description":"Referenced content flag under review. {@link community_ai_content_flags.id}","relation":{"name":"contentFlag","targetModel":"community_ai_content_flags"},"unique":true,"nullable":true},{"name":"community_ai_user_report_id","type":"uuid","description":"Referenced user report under review. {@link community_ai_user_reports.id}","relation":{"name":"userReport","targetModel":"community_ai_user_reports"},"unique":true,"nullable":true}],"plainFields":[{"name":"decision","type":"string","description":"Decision outcome such as 'approved', 'rejected', or 'needs more info'.","nullable":false},{"name":"comments","type":"string","description":"Additional comments or reasons by the moderator.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the review was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the review was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Nullable soft delete timestamp to mark if the review is deleted and hidden.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_ai_content_flag_id"],"unique":true},{"fieldNames":["community_ai_user_report_id"],"unique":true}],"plainIndexes":[{"fieldNames":["decision","created_at"]}],"ginIndexes":[{"fieldName":"comments"}]},{"name":"community_ai_admin_actions","description":"Administrative actions performed by admins on moderation cases or user accounts. Captures the admin performing the action, targeted review or report, action details, and time tracking. Supports audit and governance of administration.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_admin_id","type":"uuid","description":"Admin performing the action. {@link community_ai_admins.id}","relation":{"name":"admin","targetModel":"community_ai_admins"},"unique":false,"nullable":false},{"name":"community_ai_moderator_review_id","type":"uuid","description":"Moderator review on which this action is based (nullable if action is based on a user report). {@link community_ai_moderator_reviews.id}","relation":{"name":"moderatorReview","targetModel":"community_ai_moderator_reviews"},"unique":true,"nullable":true},{"name":"community_ai_user_report_id","type":"uuid","description":"User report on which this action is based (nullable if action is based on a moderator review). {@link community_ai_user_reports.id}","relation":{"name":"userReport","targetModel":"community_ai_user_reports"},"unique":true,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","description":"Type of administrative action such as 'ban user', 'unban user', 'warn user', or 'delete content'.","nullable":false},{"name":"details","type":"string","description":"Additional details or reasons regarding the action by the admin.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp of when the action was performed.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the last update on the action.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Nullable soft delete timestamp to mark if the action is deleted and hidden.","nullable":true}],"uniqueIndexes":[{"fieldNames":["community_ai_moderator_review_id"],"unique":true},{"fieldNames":["community_ai_user_report_id"],"unique":true}],"plainIndexes":[{"fieldNames":["action_type","created_at"]}],"ginIndexes":[{"fieldName":"details"}]}]},{"filename":"schema-07-notifications.prisma","namespace":"Notifications","models":[{"name":"community_ai_notifications","description":"Table storing user notifications generated by the community AI system, representing the notification content, type, target user, delivery status, and processing lifecycle. This table holds the main user notification records and links to status history via community_ai_notification_statuses. Notifications reference the recipient user and possibly the source entity triggering the notification.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"recipient_user_id","type":"uuid","description":"Recipient user for the notification, referencing community_ai_members.id.","relation":{"name":"recipientUser","targetModel":"community_ai_members"},"unique":false,"nullable":false},{"name":"trigger_post_id","type":"uuid","description":"Optional post that triggered this notification, referencing community_ai_posts.id.","relation":{"name":"triggerPost","targetModel":"community_ai_posts"},"unique":false,"nullable":true}],"plainFields":[{"name":"notification_type","type":"string","description":"Type of notification such as 'comment_reply', 'factcheck_flagged', or 'moderator_alert'.","nullable":false},{"name":"title","type":"string","description":"Notification title to be displayed to the user.","nullable":false},{"name":"message","type":"string","description":"Detailed notification message content.","nullable":false},{"name":"read_at","type":"datetime","description":"Timestamp when the notification was read by the user.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the notification was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the notification was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp, if the notification was deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["recipient_user_id","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["notification_type","created_at"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"message"}]},{"name":"community_ai_notification_statuses","description":"Historical status records for user notifications, capturing changes in delivery or processing states. Each status record refers to a single notification and contains timestamps, status codes, and optional descriptive context. This table supports audit trails and lifecycle management for notifications.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"notification_id","type":"uuid","description":"Referenced notification's community_ai_notifications.id.","relation":{"name":"notification","targetModel":"community_ai_notifications"},"unique":false,"nullable":false}],"plainFields":[{"name":"status","type":"string","description":"Status code representing notification processing state such as 'pending', 'delivered', or 'failed'.","nullable":false},{"name":"description","type":"string","description":"Optional detailed description or reason for the status.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when this status entry was recorded.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when this status entry was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for this status entry.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["notification_id","status"]}],"ginIndexes":[]},{"name":"community_ai_user_notification_preferences","description":"User-specific notification preferences that store per-user settings for notification delivery channels, opt-ins, and categories. Preferences are linked to the associated user account and provide customization options for notification management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User this preference belongs to, referencing community_ai_members.id.","relation":{"name":"user","targetModel":"community_ai_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"email_notifications_enabled","type":"boolean","description":"Flag indicating whether the user has enabled email notifications.","nullable":false},{"name":"push_notifications_enabled","type":"boolean","description":"Flag indicating whether the user has enabled push notifications.","nullable":false},{"name":"sms_notifications_enabled","type":"boolean","description":"Flag indicating whether the user has enabled SMS notifications.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the preferences were created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the preferences were last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for the preferences record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-08-user_sessions.prisma","namespace":"UserSessions","models":[{"name":"community_ai_user_sessions","description":"Stores authentication sessions for community AI members, including session tokens, expiration info, IP address, and user agent data. This model facilitates session lifecycle management, revocation, and auditing. It references community AI members for user association.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_member_id","type":"uuid","description":"Associated community AI member's {@link community_ai_members.id}.","relation":{"name":"member","targetModel":"community_ai_members"},"unique":false,"nullable":false}],"plainFields":[{"name":"session_token","type":"string","nullable":false,"description":"Unique token used for session authentication."},{"name":"expires_at","type":"datetime","nullable":false,"description":"Timestamp when the session expires."},{"name":"refresh_token","type":"string","nullable":true,"description":"Optional token used to refresh the session."},{"name":"refresh_token_expires_at","type":"datetime","nullable":true,"description":"Expiration timestamp for the refresh token."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address from which the session was initiated."},{"name":"user_agent","type":"string","nullable":true,"description":"User agent string of the client device."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp of session creation."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last update to the session record."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the session was soft deleted or invalidated."}],"uniqueIndexes":[{"fieldNames":["session_token"],"unique":true}],"plainIndexes":[{"fieldNames":["community_ai_member_id","created_at"]}],"ginIndexes":[]},{"name":"community_ai_jwt_tokens","description":"JWT tokens issued in relation to community AI user sessions, recording token strings, their types (access or refresh), expiration timestamps, and revocation status. Supports token lifecycle management and security enforcement.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"community_ai_user_session_id","type":"uuid","description":"Associated community AI user session's {@link community_ai_user_sessions.id}.","relation":{"name":"userSession","targetModel":"community_ai_user_sessions"},"unique":false,"nullable":false}],"plainFields":[{"name":"token","type":"string","nullable":false,"description":"JWT token string used for authentication or refresh processes."},{"name":"token_type","type":"string","nullable":false,"description":"Type of JWT token, such as 'access' or 'refresh'."},{"name":"expires_at","type":"datetime","nullable":false,"description":"Expiration timestamp of the JWT token."},{"name":"revoked_at","type":"datetime","nullable":true,"description":"Timestamp at which the token was revoked, if applicable."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp of token creation."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last token update."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["community_ai_user_session_id","expires_at"]}],"ginIndexes":[]}]},{"filename":"schema-09-external_integrations.prisma","namespace":"ExternalIntegrations","models":[{"name":"community_ai_ai_service_providers","description":"Metadata for external AI service providers integrated into communityAi, including provider name, API endpoints, authentication methods, and configuration parameters. This table stores operational information required to connect and authenticate with AI services used for comment analysis, fact-checking, and content generation.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"provider_name","type":"string","nullable":false,"description":"The official name of the AI service provider."},{"name":"api_base_url","type":"uri","nullable":false,"description":"The base URI for the provider's API endpoints."},{"name":"auth_type","type":"string","nullable":false,"description":"Authentication mechanism used by the provider (e.g., OAuth2, API Key)."},{"name":"api_key","type":"string","nullable":true,"description":"API key or token for accessing the AI service, if applicable."},{"name":"config_json","type":"string","nullable":true,"description":"JSON string storing dynamic configuration parameters for the AI provider."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Logical deletion timestamp, if the provider entry is deactivated or removed."}],"uniqueIndexes":[{"fieldNames":["provider_name"],"unique":true}],"plainIndexes":[{"fieldNames":["auth_type","created_at"]}],"ginIndexes":[]},{"name":"community_ai_notification_providers","description":"Metadata for notification service providers integrated into communityAi. Includes provider name, configuration data, status, and API details for sending notifications via different channels like email or push notifications.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"provider_name","type":"string","nullable":false,"description":"Name of the notification service provider."},{"name":"config_json","type":"string","nullable":true,"description":"JSON string storing dynamic configuration for the notification provider."},{"name":"status","type":"string","nullable":false,"description":"Current operational status of the notification provider (e.g., active, inactive, error)."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Logical deletion timestamp for soft deletes."}],"uniqueIndexes":[{"fieldNames":["provider_name"],"unique":true}],"plainIndexes":[{"fieldNames":["status","created_at"]}],"ginIndexes":[]},{"name":"community_ai_api_usage_logs","description":"Operational log of API usage for tracking requests to external AI and notification services, including request timestamps, provider references, endpoints called, request duration, and error details if any. This table supports monitoring and quota management for external integrations.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"service_provider_id","type":"uuid","nullable":false,"description":"Referenced AI service provider. {@link community_ai_ai_service_providers.id}","relation":{"name":"serviceProvider","targetModel":"community_ai_ai_service_providers"},"unique":false}],"plainFields":[{"name":"api_endpoint","type":"string","nullable":false,"description":"The API endpoint path called on the external service."},{"name":"request_timestamp","type":"datetime","nullable":false,"description":"Timestamp when the API request was made."},{"name":"response_time_ms","type":"int","nullable":false,"description":"Duration of the API request response in milliseconds."},{"name":"status_code","type":"int","nullable":false,"description":"HTTP status code returned by the external service."},{"name":"error_message","type":"string","nullable":true,"description":"Error message returned by the server if any."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["service_provider_id","request_timestamp"]}],"ginIndexes":[]}]},{"filename":"schema-10-audit.prisma","namespace":"Audit","models":[{"name":"community_ai_audit_logs","description":"Audit logs capturing detailed records of system actions including user, admin, moderator, and system events for compliance and forensic analysis. Each log entry is immutable and includes metadata such as IP address and user agent for traceability.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Acting member user {@link community_ai_members.id}.","relation":{"name":"user","targetModel":"community_ai_members"},"unique":false,"nullable":true},{"name":"admin_id","type":"uuid","description":"Admin user {@link community_ai_admins.id}.","relation":{"name":"admin","targetModel":"community_ai_admins"},"unique":false,"nullable":true},{"name":"moderator_id","type":"uuid","description":"Moderator user {@link community_ai_moderators.id}.","relation":{"name":"moderator","targetModel":"community_ai_moderators"},"unique":false,"nullable":true},{"name":"system_setting_id","type":"uuid","description":"Related system setting {@link community_ai_system_settings.id}.","relation":{"name":"systemSetting","targetModel":"community_ai_system_settings"},"unique":false,"nullable":true}],"plainFields":[{"name":"action_type","type":"string","nullable":false,"description":"Type of action performed, e.g., 'login', 'post_create', 'comment_delete'."},{"name":"action_description","type":"string","nullable":true,"description":"Detailed description of the action performed."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address from which the action originated."},{"name":"user_agent","type":"string","nullable":true,"description":"User agent string of the client performing the action."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the audit log entry was created."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_id","created_at"]},{"fieldNames":["action_type","created_at"]}],"ginIndexes":[{"fieldName":"action_description"}]},{"name":"community_ai_content_access_logs","description":"Logs recording access events where members view or interact with posts and comments. Captures member identity, accessed content references, access type, device info, IP address, and access timestamp for compliance monitoring.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"member_id","type":"uuid","description":"Accessing member {@link community_ai_members.id}.","relation":{"name":"member","targetModel":"community_ai_members"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Accessed post {@link community_ai_posts.id}.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Accessed comment {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"access_type","type":"string","nullable":false,"description":"Type of access event, e.g., 'view', 'edit', 'share'."},{"name":"device_info","type":"string","nullable":true,"description":"Device information from which access was made."},{"name":"ip_address","type":"string","nullable":true,"description":"IP address from which access was made."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the access event occurred."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["member_id","created_at"]},{"fieldNames":["access_type","created_at"]}],"ginIndexes":[{"fieldName":"device_info"}]},{"name":"community_ai_edit_histories","description":"Records of edit history for posts and comments, capturing editor identity, referenced post or comment, edit type, before and after content snapshots, and timestamps for auditing changes and supporting content traceability.","material":false,"stance":"snapshot","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"edited_by_member_id","type":"uuid","description":"Member who performed the edit {@link community_ai_members.id}.","relation":{"name":"editedByMember","targetModel":"community_ai_members"},"unique":false,"nullable":false},{"name":"post_id","type":"uuid","description":"Edited post {@link community_ai_posts.id}.","relation":{"name":"post","targetModel":"community_ai_posts"},"unique":false,"nullable":true},{"name":"comment_id","type":"uuid","description":"Edited comment {@link community_ai_comments.id}.","relation":{"name":"comment","targetModel":"community_ai_comments"},"unique":false,"nullable":true}],"plainFields":[{"name":"edit_type","type":"string","nullable":false,"description":"Type of edit performed, e.g., 'content_update', 'title_change'."},{"name":"before_edit","type":"string","nullable":true,"description":"Content before the edit."},{"name":"after_edit","type":"string","nullable":true,"description":"Content after the edit."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the edit record was created."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["edited_by_member_id","created_at"]},{"fieldNames":["edit_type","created_at"]}],"ginIndexes":[{"fieldName":"before_edit"}]}]}]}