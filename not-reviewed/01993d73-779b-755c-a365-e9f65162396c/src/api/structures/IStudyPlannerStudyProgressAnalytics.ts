import { tags } from "typia";

/**
 * Aggregated study progress analytics per student and study phase.
 *
 * This entity provides metrics such as completed tasks count, total tasks
 * count, and completion rate.
 *
 * It relates to students and study phases for tracking learning progress across
 * phases.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStudyPlannerStudyProgressAnalytics = {
  /** Unique identifier of the study progress analytics record. */
  id: string & tags.Format<"uuid">;

  /** Unique identifier of the student. */
  student_id: string & tags.Format<"uuid">;

  /** Unique identifier of the study phase. */
  study_phase_id: string & tags.Format<"uuid">;

  /** Number of completed tasks for the student in the given study phase. */
  completed_tasks_count: number & tags.Type<"int32">;

  /** Total number of tasks assigned to the student in the study phase. */
  total_tasks_count: number & tags.Type<"int32">;

  /** Completion rate computed as completed tasks divided by total tasks. */
  completion_rate: number;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IStudyPlannerStudyProgressAnalytics {
  /** Request object for searching and filtering study progress analytics. */
  export type IRequest = {
    /** Filter by student unique identifier. Use null to ignore this filter. */
    student_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Filter by study phase unique identifier. Use null to ignore this
     * filter.
     */
    study_phase_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Current page number for pagination. */
    page?: number | null | undefined;

    /** Limit of records per page. */
    limit?: number | null | undefined;

    /** Sort records by created or updated timestamp. */
    sortBy?: "created_at" | "updated_at" | null | undefined;

    /** Sort order - ascending or descending. */
    order?: "asc" | "desc" | null | undefined;
  };
}
