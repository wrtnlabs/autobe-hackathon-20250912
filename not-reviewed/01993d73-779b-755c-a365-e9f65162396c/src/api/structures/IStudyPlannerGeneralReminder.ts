import { tags } from "typia";

/**
 * Entity representing a general reminder set by a student to receive
 * notifications.
 *
 * It includes scheduling, descriptive text, active state, and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStudyPlannerGeneralReminder = {
  /** Unique ID of the general reminder. */
  id: string & tags.Format<"uuid">;

  /** ID of the student who owns this reminder. */
  student_id: string & tags.Format<"uuid">;

  /**
   * Friendly name or title of the general reminder for identification.
   *
   * This is a brief label shown to the user to describe the reminder. It is
   * required to be non-empty.
   */
  title: string;

  /**
   * Scheduled due time of the reminder as an ISO 8601 datetime string.
   *
   * This indicates when the notification should be triggered. Must be a valid
   * date-time string.
   *
   * Example: "2023-12-31T10:00:00Z"
   */
  due_time: string & tags.Format<"date-time">;

  /**
   * Optional detailed description providing extra context for the reminder.
   *
   * This field can be null or a string.
   */
  description?: string | null | undefined;

  /**
   * Whether this reminder is active and will trigger notifications.
   *
   * This boolean controls if the reminder is currently enabled.
   */
  active: boolean;

  /** Timestamp of reminder creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to the reminder. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IStudyPlannerGeneralReminder {
  /**
   * Request schema for filtering and paginated retrieval of general
   * reminders.
   */
  export type IRequest = {
    /** Optional filter for the ID of the student to restrict reminders. */
    student_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional filter for reminder title matching.
     *
     * This enables search by reminder title.
     */
    title?: string | null | undefined;

    /** Optional minimum due time filter; reminders due after this time. */
    due_time_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional maximum due time filter; reminders due before this time. */
    due_time_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional filter for active status.
     *
     * True to filter only active reminders; false for only inactive; null
     * or undefined to not filter by active status.
     */
    active?: boolean | null | undefined;

    /**
     * Pagination: page number starting from 1.
     *
     * Optional; defaults to null if not specified.
     */
    page?: number | null | undefined;

    /**
     * Pagination: maximum number of records per page.
     *
     * Optional; defaults to null if not specified.
     */
    limit?: number | null | undefined;

    /** Optional sorting field, e.g., 'due_time', 'title'. */
    orderBy?: string | null | undefined;

    /** Optional ascending (true) or descending (false) order. */
    orderDirection?: boolean | null | undefined;

    /** Deprecated alias for 'title'. */
    search?: string | null | undefined;

    /** Deprecated alias for 'orderBy'. */
    sort?: string | null | undefined;

    /** Deprecated alias for 'orderDirection'. */
    dir?: boolean | null | undefined;

    /** Deprecated; use 'orderBy' instead. */
    column?: string | null | undefined;

    /** Deprecated; use 'orderBy' instead. */
    order_column?: string | null | undefined;

    /** Deprecated; use 'orderDirection' instead. */
    order_dir?: boolean | null | undefined;
  };

  /**
   * Schema for creating a new general reminder.
   *
   * Includes title, due time, optional description, and active flag.
   */
  export type ICreate = {
    /**
     * Friendly name or title of the new general reminder.
     *
     * This is required and serves as the label for the reminder.
     */
    title: string;

    /**
     * Scheduled due time for this reminder.
     *
     * ISO 8601 formatted date-time string.
     */
    due_time: string & tags.Format<"date-time">;

    /**
     * Optional description explaining the reminder in more detail.
     *
     * This field may be null.
     */
    description?: string | null | undefined;

    /**
     * Flag indicating whether the reminder is active and should trigger
     * notifications.
     */
    active: boolean;
  };

  /**
   * Schema for updating an existing general reminder.
   *
   * All fields are optional and may be null.
   */
  export type IUpdate = {
    /**
     * Optional updated title of the reminder.
     *
     * If included, overrides the existing title.
     */
    title?: string | null | undefined;

    /**
     * Optional updated due time.
     *
     * ISO 8601 date-time format if provided.
     */
    due_time?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional updated description.
     *
     * Nullable field to allow clearing or changing description.
     */
    description?: string | null | undefined;

    /** Optional updated active flag. */
    active?: boolean | null | undefined;
  };

  /**
   * Summary information of a general reminder created by a student.
   *
   * Includes unique ID, title, due time, and active status.
   *
   * Note: detailed properties like description, created_at, updated_at,
   * deleted_at, and student_id are normally excluded from summaries.
   */
  export type ISummary = {
    /** Primary key identifier of the general reminder */
    id: string & tags.Format<"uuid">;

    /** Title or label of the general reminder for user identification */
    title: string;

    /** Scheduled due time for the general reminder notification */
    due_time: string & tags.Format<"date-time">;

    /** Boolean flag indicating the reminder's active status */
    active: boolean;

    /**
     * Optional textual description providing additional context for the
     * reminder
     */
    description?: string | undefined;

    /** Timestamp of record creation for audit and history */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp of last update for audit and history */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft delete timestamp indicating logical removal (nullable) */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Belonged student's unique identifier */
    student_id?: (string & tags.Format<"uuid">) | undefined;
  };
}
