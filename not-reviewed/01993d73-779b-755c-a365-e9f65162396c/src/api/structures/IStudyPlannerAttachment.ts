import { tags } from "typia";

/**
 * An attachment file linked to a study task, representing image or PDF content.
 *
 * This entity stores metadata for the attachment including its file type and
 * URL.
 *
 * The created_at timestamp records when the attachment was added to the system.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IStudyPlannerAttachment = {
  /** Unique identifier of the attachment. */
  id: string & tags.Format<"uuid">;

  /** UUID of the related study task this attachment belongs to. */
  study_task_id: string & tags.Format<"uuid">;

  /**
   * MIME type of the attachment file, e.g., 'image/jpeg' or
   * 'application/pdf'.
   */
  file_type: string;

  /** URL or URI to access the attachment file. */
  file_url: string & tags.MaxLength<80000>;

  /** Timestamp when the attachment record was created. */
  created_at: string & tags.Format<"date-time">;
};
export namespace IStudyPlannerAttachment {
  /**
   * Data required to create a new attachment linked to a study task.
   *
   * Only the study_task_id, file_type, and file_url are provided by the
   * client.
   *
   * The id and created_at fields are generated by the system.
   */
  export type ICreate = {
    /** UUID of the study task to associate the attachment with. */
    study_task_id: string & tags.Format<"uuid">;

    /** MIME type of the attachment file to be created. */
    file_type: string;

    /** URL or URI where the attachment file is stored. */
    file_url: string;
  };

  /**
   * Data for updating a study task attachment.
   *
   * Only file_type and file_url can be updated.
   *
   * Other fields such as id and study_task_id cannot be changed.
   */
  export type IUpdate = {
    /** Updated MIME type of the attachment file. */
    file_type?: string | undefined;

    /** Updated URL or URI of the attachment file. */
    file_url?: string | undefined;
  };

  /**
   * Summary information of an attachment file linked to a study task.
   *
   * This summary includes the unique ID, file type, and the file URL for
   * access.
   */
  export type ISummary = {
    /** Primary key identifier of the attachment */
    id: string & tags.Format<"uuid">;

    /** Type of the attachment file, e.g., image/jpeg, application/pdf */
    file_type: string;

    /** URI of the stored attachment file for retrieval */
    file_url: string;
  };
}
