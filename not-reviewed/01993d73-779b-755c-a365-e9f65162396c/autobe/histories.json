[{"id":"01993d89-bd1a-7360-9289-e6501ebe215a","type":"userMessage","contents":[{"type":"text","text":"the goal is to study efficiently, i want to manage preview, main learning, and reivew in a structured way."}],"created_at":"2025-09-12T10:47:41.082Z"},{"id":"01993d73-7e40-74c2-97ce-a3b11986094d","type":"userMessage","contents":[{"type":"text","text":"you r a professional learning coach.\nIm planing to create a study planner backend for managing learning activities."}],"created_at":"2025-09-12T10:23:23.200Z"},{"id":"01993d73-80d8-72cb-926d-c42a81b3927d","type":"assistantMessage","text":"Great! Let's start by understanding your idea for the study planner backend. To create a backend that manages learning activities effectively, I need to know some key things:\n\n1. What is the main purpose or goal of this study planner? (For example, helping users schedule learning sessions, track progress, set goals, etc.)\n2. Who will be using this system? Will there be different roles like students, teachers, or admins?\n3. What specific activities or features do you want to include? (For example, adding study tasks, reminders, progress tracking, etc.)\n4. Do you want to have any categories or subjects for the learning activities?\n5. Will users need to set deadlines or priorities for their study tasks?\n6. Should the system send notifications or alerts to users?\n7. How do you envision users interacting with this planner? (For example, via a mobile app, web interface, or API integration)\n\nFeel free to answer any or all of these questions, and we can build from there!","created_at":"2025-09-12T10:23:23.864Z","completed_at":"2025-09-12T10:23:26.489Z"},{"id":"01993d89-1e55-756d-a515-f9dbc1314460","type":"userMessage","contents":[{"type":"text","text":"hello ?"}],"created_at":"2025-09-12T10:47:00.437Z"},{"id":"01993d89-2037-7175-ab18-29d2a50ccc14","type":"assistantMessage","text":"Hello! I'm here to help you create your study planner backend for managing learning activities. To get started, could you please tell me more about what features you'd like the planner to have? For example, do you want it to help users schedule study sessions, track progress, set goals, or something else? Also, who will be using this system â€” just learners, or will there be teachers or administrators too? The more details you provide, the better I can assist you in planning it out!","created_at":"2025-09-12T10:47:00.919Z","completed_at":"2025-09-12T10:47:02.135Z"},{"id":"01993d89-bfb8-770a-812b-5c6d02295a33","type":"assistantMessage","text":"Thanks for sharing the goal! You want the study planner backend to help users study efficiently by managing their learning activities in a structured way, specifically covering three study phases: preview, main learning, and review.\n\nTo make sure I fully understand your vision and we capture all necessary details, here are a few questions:\n\n1. For each learning phase (preview, main learning, review), what kind of information do you want to store? For example, study material, task descriptions, duration, progress status, or others?\n\n2. Do you want the system to support scheduling these phases with set times or deadlines?\n\n3. Should users be able to track their progress or mark phases as completed?\n\n4. Will users need to categorize learning activities by subject, topic, or other tags?\n\n5. Will there be different types of users (e.g., just learners or also coaches/admins)?\n\n6. How do you want users to interact with their study plan? For example, creating, updating, or deleting tasks?\n\n7. Any other features you envision, such as notifications, notes, or analytics?\n\nFeel free to answer as much as you can. This will help us define detailed requirements for the backend.","created_at":"2025-09-12T10:47:41.752Z","completed_at":"2025-09-12T10:47:44.334Z"},{"id":"01993d8f-5282-769c-956f-e6a0bf6889be","type":"userMessage","contents":[{"type":"text","text":"1. do it on your own.\n2. no.\n3. yes.\n4. yes.\n5. only student.\n6. yes.\n7. alarm and memo, study contents, PWA(progresive web app) notification, and charting the contents of insufficient learning."}],"created_at":"2025-09-12T10:53:47.010Z"},{"id":"01993d8f-5585-7653-bd83-627cb929f08a","type":"assistantMessage","text":"Thanks for the detailed input! Here's what I understand about your study planner backend requirements:\n\n- The goal is to help students study efficiently by managing three phases: preview, main learning, and review in a structured way.\n- The system will track progress, allowing users to mark phases as completed.\n- Users can categorize learning activities by subject or topic.\n- Only students will use the system.\n- Users can create, update, and delete study tasks.\n- Additional features include alarms (notifications), memos, storing study contents, Progressive Web App (PWA) notifications, and charts showing areas of insufficient learning.\n\nBefore proceeding to analyze and specify the system, I want to confirm a few more details:\n\n1. Regarding study contents and memos, do you want users to attach text content or files (like PDFs, images) to a study task?\n2. Should alarms and PWA notifications be linked to specific study tasks or be more general reminders?\n3. For charts about insufficient learning, do you want to track and visualize metrics like time spent per subject, success rate, or pending review sessions?\n4. Do you plan for user authentication (login/signup) or do you want it open access?\n\nOnce these points are clarified, I can proceed to create a structured specification for your study planner backend.","created_at":"2025-09-12T10:53:47.781Z","completed_at":"2025-09-12T10:53:51.761Z"},{"id":"01993d92-4249-7569-893d-24696c4409e7","type":"userMessage","contents":[{"type":"text","text":"1. image and pdf,\n2. both\n3. yes and english category ( grammer, voca, speaking other things)\n4. yes, sign in and sign up, find id, pw"}],"created_at":"2025-09-12T10:56:59.465Z"},{"type":"analyze","id":"01993d99-7643-71ab-9d2c-43f43623628a","reason":"Gathered detailed requirements for a study planner backend designed to help students study efficiently through managing preview, main learning, and review phases. The system should support progress tracking, categorization by subjects and topics (such as English grammar, vocabulary, speaking, etc.), and handle only student users. Users can create, update, and delete study tasks which include attachments like images and PDFs. Alarms and PWA notifications for specific tasks and general reminders are needed. The system should also provide charts to visualize insufficient learning areas. User authentication with sign-in, sign-up, and ID/password recovery is required.","prefix":"studyPlanner","roles":[{"name":"student","description":"Authenticated student user who can register, login, manage their learning activities including preview, main learning, review phases, create and update study tasks, set memos and alarms, and view learning progress analytics.","kind":"member"}],"files":[{"reason":"To provide an authoritative table of contents for the study planner documentation project outlining all major functional and business documents.","filename":"00-toc.md","documentType":"service-overview","outline":["Service Overview","User Roles and Authentication","Functional Requirements","Business Rules and Validation","Error Handling and Performance"],"audience":"backend developers","content":"# Study Planner Backend Functional and Business Requirements\n\n## 1. Introduction\nThe study planner backend enables authenticated student users to plan, manage, and track their learning activities efficiently using a structured approach encompassing three study phases: preview, main learning, and review. This document defines the business requirements to guide backend developers in building a robust system supporting all necessary workflows, validations, notifications, and analytics.\n\n## 2. Business Model\n### Why This Service Exists\nStudents lack structured support to organize their study sessions by phase and track progress effectively. Existing solutions do not address the need for detailed phase-based study management, personalized reminders, and analytics for improvement.\n\n### Core Value Proposition\nProvide a backend system offering precise management of learning phases with flexible task management, content support, reminders, and analytic insights which help students study more efficiently.\n\n## 3. User Roles and Authentication\n### 3.1 User Role: Student\n- THE system SHALL support a single role: authenticated student.\n- Students CAN create, update, delete their own study tasks.\n- Students CAN attach study contents (images, PDFs) and memos.\n- Students CAN set alarms and receive notifications.\n- Students CAN view progress and analytics data.\n\n### 3.2 Authentication Requirements\n- WHEN a user registers, THE system SHALL validate email uniqueness and store credentials securely.\n- WHEN a user logs in, THE system SHALL validate credentials and initiate a session with JWT tokens.\n- THE system SHALL support email verification.\n- THE system SHALL allow password reset via secure flows.\n- THE system SHALL allow users to find their ID.\n- THE system SHALL maintain session security, including logout and token expiration.\n\n## 4. Study Activity Management\n- THE system SHALL maintain three distinct, mandatory study phases per task: preview, main learning, and review.\n- WHEN creating or updating a study task, THE system SHALL require association with a valid phase.\n- THE system SHALL allow users to categorize tasks under predefined subjects and categories with detailed English categories: grammar, vocabulary, speaking, others.\n\n## 5. Task Lifecycle Operations\n- WHEN a student creates a task, THE system SHALL require a title, phase, category, optional description, attachments, memo, and optional alarm.\n- THE system SHALL allow updating or deleting tasks and associated data.\n- WHEN a student marks a phase completion, THE system SHALL record the timestamp and update progress.\n\n## 6. Content and Memo Management\n- THE system SHALL allow attachment of images (JPEG, PNG) and PDF files.\n- THE system SHALL validate file types and size limits (maximum 10 MB per file).\n- THE system SHALL store memos as text linked to study tasks.\n\n## 7. Notification and Alarm System\n- THE system SHALL allow alarms linked to specific study tasks.\n- THE system SHALL support general reminders not tied to any task.\n- THE system SHALL send Progressive Web App notifications at scheduled alarm times reliably.\n\n## 8. Progress Tracking and Analytics\n- THE system SHALL track completion status and timestamps per study phase and per task.\n- THE system SHALL aggregate progress data to identify insufficient learning areas.\n- THE system SHALL generate charts breaking down English categories for targeted improvement.\n\n## 9. Business Rules and Validation\n- THE system SHALL enforce category and phase validity on task creation or update.\n- THE system SHALL reject unsupported file types and oversized attachments.\n- THE system SHALL prevent unauthorized access or modification to other usersâ€™ data.\n- THE system SHALL require authentication for all study task operations.\n\n## 10. Error Handling\n- IF authentication fails, THEN THE system SHALL respond with clear error messages and status 401 Unauthorized.\n- IF invalid input is received, THEN THE system SHALL respond with status 400 Bad Request and detailed validation errors.\n- IF a resource is not found or unauthorized, THEN THE system SHALL respond with 403 or 404 accordingly.\n- IF notification delivery fails, THEN THE system SHALL retry up to three times and log failure.\n\n## 11. Performance Requirements\n- THE system SHALL respond to all user operations within 2 seconds under typical loads.\n- THE system SHALL deliver notifications within 1 minute of the scheduled alarm.\n\n## 12. Diagrams and Workflows\n```mermaid\ngraph LR\n  subgraph \"User Authentication\"\n    A[\"User Sign Up\"] --> B[\"Validate Email\"]\n    B --> C{\"Is Email Unique?\"}\n    C -->|\"Yes\"| D[\"Create Account\"]\n    C -->|\"No\"| E[\"Return Email Error\"]\n    D --> F[\"Send Verification Email\"]\n    F --> G[\"User Login\"]\n    G --> H{\"Are Credentials Valid?\"}\n    H -->|\"Yes\"| I[\"Create Session\"]\n    H -->|\"No\"| J[\"Return Auth Error\"]\n  end\n\n  subgraph \"Study Task Lifecycle\"\n    K[\"Create Task\"] --> L[\"Validate Task Data\"]\n    L --> M{\"Data Valid?\"}\n    M -->|\"Yes\"| N[\"Save Task\"]\n    M -->|\"No\"| O[\"Return Validation Error\"]\n    N --> P[\"Set Alarm If Present\"]\n    P --> Q[\"Mark Phase Completion\"]\n    Q --> R[\"Update Progress\"]\n  end\n\n  subgraph \"Notification Delivery\"\n    S[\"Alarm Triggered\"] --> T[\"Send PWA Notification\"]\n    T --> U{\"Delivered?\"}\n    U -->|\"No\"| V[\"Retry Up To 3 Times\"]\n    U -->|\"Yes\"| W[\"Log Success\"]\n  end\n\n  G --> K\n  R --> S\n```\n\nThis document provides business requirements only. All technical decisions on architecture, APIs, and database design are at the discretion of the development team. Developers have full autonomy to implement as needed based on these clear and complete requirements."},{"reason":"To define the high-level vision, business model, core value proposition, and service goals of the study planner backend.","filename":"01-service-overview.md","documentType":"service-overview","outline":["Introduction","Business Model","Service Goals","Core Features","Success Metrics"],"audience":"backend developers","content":"# Study Planner Backend Functional Requirements\n\n## 1. Introduction\nThe backend system supports a Study Planner service to enable students to efficiently manage their structured learning activities across three defined phases: preview, main learning, and review.\n\n## 2. Business Model\n### Why This Service Exists\nStudents often lack structured ways to organize studying, leading to inefficient learning outcomes. This service provides a backend that facilitates task structuring by learning phases, content management, notifications, and analytics.\n\n### Core Value Proposition\nTo offer a reliable, scalable backend that enables students to create, categorize, track, and analyze study tasks, receive timely reminders via notifications, and identify learning gaps.\n\n## 3. User Roles and Authentication\n### User Role: Student\n- Authenticated users with full control over their study tasks.\n\n### Authentication Flow\n- WHEN a user registers, THE system SHALL validate their email and password per security standards and create an account.\n- WHEN a user logs in, THE system SHALL authenticate credentials and establish a secure session.\n- WHEN password reset is requested, THE system SHALL send secure reset links.\n- WHEN a user requests to find their user ID, THE system SHALL provide secure retrieval.\n- WHEN a user logs out, THE system SHALL invalidate the session.\n\n### Permissions\n| Action                      | Student |\n|-----------------------------|---------|\n| Register                    | âœ…      |\n| Login                       | âœ…      |\n| Logout                      | âœ…      |\n| Manage Study Tasks          | âœ…      |\n| Attach Content (Images/PDF) | âœ…      |\n| Add Memos and Alarms        | âœ…      |\n| View Analytics              | âœ…      |\n| Password Reset and Recovery | âœ…      |\n\n## 4. Learning Phases Management\n- THE system SHALL manage preview, main learning, and review phases.\n- WHEN tasks are created, THE system SHALL require assignment to exactly one phase.\n- THE system SHALL track progress and completion timestamp per phase.\n\n## 5. Study Task Management\n- THE system SHALL support CRUD operations for study tasks.\n- THE system SHALL require tasks to have categories including English-specific subcategories for grammar, vocabulary, speaking, and others.\n- THE system SHALL validate all input promptly and reject invalid data.\n\n## 6. Content Attachment and Memo\n- THE system SHALL accept images (JPEG, PNG) and PDFs as attachments.\n- THE maximum file size shall be limited to 10 Megabytes per file.\n- THE system SHALL store and manage content reliably.\n- THE system SHALL allow memo creation and updates associated with tasks.\n\n## 7. Notifications and Alarms\n- THE system SHALL allow users to set alarms tied to specific study tasks.\n- THE system SHALL support general reminders not linked to tasks.\n- WHEN an alarm triggers, THE system SHALL send a PWA notification to the user's device.\n\n## 8. Progress Tracking and Analytics\n- THE system SHALL maintain detailed phase completion states.\n- THE system SHALL aggregate data to highlight insufficient learning.\n- THE system SHALL generate charts showing incomplete phases and study time by category.\n- THE system SHALL provide analytics for English categories to assist focused study.\n\n## 9. Business Rules and Validation\n- THE system SHALL enforce single-phase assignment per task.\n- THE system SHALL restrict attachments to allowed file types.\n- THE system SHALL ensure alarms are scheduled for valid future times.\n- THE system SHALL require authentication for all user actions.\n\n## 10. Error Handling\n- IF authentication fails, THEN THE system SHALL respond with a clear 401 Unauthorized status.\n- IF login credentials are invalid, THEN THE system SHALL notify the user.\n- IF invalid attachments are uploaded, THEN THE system SHALL reject and notify the user.\n- IF unauthorized access is attempted, THEN THE system SHALL return 403 Forbidden.\n- IF resources are missing, THEN THE system SHALL return 404 Not Found.\n\n## 11. Performance Requirements\n- User operations SHALL respond within 2 seconds.\n- Notifications SHALL be sent promptly at scheduled times.\n\n## 12. Diagrams and Workflows\n```mermaid\ngraph LR\n  subgraph \"Authentication flow\"\n  A[\"User Registration\"] --> B[\"Validate Inputs\"]\n  B --> C{\"Inputs Valid?\"}\n  C -->|\"Yes\"| D[\"Create User\"]\n  C -->|\"No\"| E[\"Return Errors\"]\n  F[\"User Login\"] --> G[\"Validate Credentials\"]\n  G --> H{\"Credentials Valid?\"}\n  H -->|\"Yes\"| I[\"Create Session\"]\n  H -->|\"No\"| J[\"Return Failure\"]\n  K[\"User Logout\"] --> L[\"Invalidate Session\"]\n  D --> M[\"Send Verification Email\"]\n  I --> N[\"Access Protected Resources\"]\n  end\n\n  subgraph \"Study Task Management\"\n  N --> O[\"Create Task\"]\n  O --> P[\"Validate Data\"]\n  P --> Q{\"Valid?\"}\n  Q -->|\"Yes\"| R[\"Save Task\"]\n  Q -->|\"No\"| S[\"Return Error\"]\n  R --> T[\"Update Progress\"]\n  T --> U[\"Trigger Notifications\"]\n  end\n\n  subgraph \"Notifications\"\n  U --> V[\"Send PWA Notification\"]\n  end\n\n  subgraph \"Analytics\"\n  V --> W[\"Aggregate Learning Data\"]\n  W --> X[\"Generate Charts\"]\n  end\n```\n\nThis document provides business requirements only. All technical implementation decisions belong to developers. Developers have full autonomy over architecture, APIs, and database design. The document describes WHAT the system should do, not HOW to build it."},{"reason":"To specify user roles with detailed authentication and permission structures, covering signup, login, password recovery, and role-based access control for the study planner backend.","filename":"02-user-roles.md","documentType":"requirement","outline":["User Role Definitions","Authentication Flow","Password Management","Permission Matrix"],"audience":"backend developers","content":"# StudyPlanner User Roles and Authentication Requirements\n\n## 1. Introduction\nThis document defines the business requirements for user roles, authentication, password management, and permissions in the StudyPlanner backend system. It provides clear and detailed requirements to enable backend developers to implement robust and secure user access control and account management, focusing on the single user role: student.\n\nThis document contains only business requirements. All technical implementationsâ€”including architecture, API design, and database modelingâ€”are at the discretion of the development team. The purpose is to specify WHAT the system must do.\n\n## 2. User Role Definitions\n\n### 2.1 Student Role\n- Description: The student is an authenticated user who can register, log in, log out, and manage their learning activities in the system.\n- Permissions:\n  - Can register for a new account.\n  - Can log in and out of the system securely.\n  - Can manage their study tasks including creating, updating, and deleting.\n  - Can attach study contents (images, PDFs) and memos to tasks.\n  - Can set alarms and receive notifications.\n  - Can view analytics related to their study progress.\n  - Can reset their password and recover account credentials.\n\n## 3. Authentication Flow\n\n### 3.1 User Registration\nWHEN a user submits a registration request with email and password, THE StudyPlanner system SHALL create a new student account after validating the data.\n- Email must be unique and follow valid email format.\n- Password must meet security criteria (minimum length, complexity).\n- System SHALL send a verification email or confirmation flow (implementation detail flexible).\n\n### 3.2 User Login\nWHEN a registered user submits login credentials (email and password), THE StudyPlanner system SHALL validate the credentials promptly and create a secure session.\n- Invalid credentials SHALL return an authentication failure response immediately.\n- System SHALL maintain session securely using JWT tokens with expiration.\n- Access tokens SHALL expire within 15 to 30 minutes.\n- Refresh tokens SHALL allow users to maintain logged-in state for 7 to 30 days.\n\n### 3.3 User Logout\nWHEN a logged-in user initiates logout, THE StudyPlanner system SHALL invalidate the session tokens immediately.\n\n### 3.4 Session Management\nWHILE a user session is active, THE StudyPlanner system SHALL validate token authenticity on each request.\n- Sessions SHALL expire after a configurable period of inactivity.\n\n## 4. Password Management\n\n### 4.1 Password Reset (Forgot Password)\nWHEN a user requests password reset with their registered email, THE StudyPlanner system SHALL send a password reset link or token to the email.\n- Password reset links SHALL expire after a specified short duration for security.\n\n### 4.2 Password Change\nWHEN a logged-in user submits a password change request, THE StudyPlanner system SHALL validate the current password and update to the new password.\n- Password policy for complexity applies.\n\n### 4.3 Account Recovery (Find ID)\nWHEN a user requests to find their account ID using identifying information (e.g., registered email), THE StudyPlanner system SHALL provide a secure way to retrieve or remind of their account ID.\n\n## 5. Permission Matrix\n\n| Action                  | Student  |\n|-------------------------|----------|\n| Register                | âœ…       |\n| Login                   | âœ…       |\n| Logout                  | âœ…       |\n| Manage Study Tasks      | âœ…       |\n| Attach Study Contents   | âœ…       |\n| Set Alarms and Memos    | âœ…       |\n| View Progress Analytics | âœ…       |\n| Password Reset          | âœ…       |\n| Account Recovery        | âœ…       |\n\n## 6. Security Considerations\n- THE system SHALL store user passwords using strong hashing algorithms.\n- THE system SHALL protect against common vulnerabilities such as SQL injection, XSS in inputs.\n- THE system SHALL ensure all authentication-related communications are encrypted.\n\n## 7. Error Handling and Validation\nIF user authentication or authorization fails, THEN THE system SHALL return appropriate error messages and status codes to the client.\n- Invalid login credentials SHALL produce a clear \"invalid credentials\" response.\n- Account lockout or throttling mechanisms SHALL be implemented to prevent brute force attempts.\n\n## 8. Performance Requirements\n- THE system SHALL respond to authentication requests within 2 seconds.\n- Session validation SHALL be instantaneous from the user's perspective.\n\n## Mermaid Diagram: Authentication Flow\n```mermaid\ngraph LR\n  A[\"User Registration\"] --> B[\"Validate Input\"]\n  B --> C{\"Is Data Valid?\"}\n  C -->|\"Yes\"| D[\"Create User Account\"]\n  C -->|\"No\"| E[\"Return Validation Errors\"]\n\n  F[\"User Login\"] --> G[\"Validate Credentials\"]\n  G --> H{\"Credentials Valid?\"}\n  H -->|\"Yes\"| I[\"Create Session Tokens\"]\n  H -->|\"No\"| J[\"Return Auth Failure\"]\n\n  K[\"User Logout\"] --> L[\"Invalidate Tokens\"]\n\n  M[\"Password Reset Request\"] --> N[\"Send Reset Link\"]\n\n  D --> O[\"Send Verification Email\"]\n\n  I --> P[\"Access Protected Resources\"]\n\n  style A fill:#b8e986,stroke:#333,stroke-width:1px\n  style F fill:#86b8e9,stroke:#333,stroke-width:1px\n  style K fill:#f98686,stroke:#333,stroke-width:1px\n  style M fill:#f9d986,stroke:#333,stroke-width:1px\n```\n\nThis document clearly defines all needed roles, authentication flows, permissions, and security requirements for the StudyPlanner backend to allow backend developers to build a secure and functional user management system."},{"reason":"To capture all functional requirements covering study phases management, task CRUD operations, content attachment, progress tracking, notifications, and analytics for the study planner backend.","filename":"03-functional-requirements.md","documentType":"requirement","outline":["Study Activity Management","Task Lifecycle Operations","Content and Memo Management","Notification and Alarm System","Progress Tracking and Analytics"],"audience":"backend developers","content":"# Study Planner Backend Functional Requirements\n\n## 1. Introduction\nThis document defines the comprehensive functional requirements for the study planner backend service. The primary purpose of this system is to enable authenticated student users to manage and structure their study activities effectively, focusing on three core learning phases: preview, main learning, and review. This document outlines all business logic, user interactions, and system behavior required for development.\n\n## 2. Study Activity Management\n### 2.1 Structure of Learning Phases\n- THE study planner system SHALL define three study phases: preview, main learning, and review.\n- WHEN a student creates a study task, THE system SHALL require association with at least one of these learning phases.\n- WHEN a student marks a specific learning phase as completed for a study task, THE system SHALL record the completion timestamp.\n\n### 2.2 Study Categories and Tagging\n- THE system SHALL allow students to categorize their study tasks under subjects or topics.\n- THE system SHALL provide predefined categories, including an English language hierarchy with subcategories: grammar, vocabulary, speaking, and others.\n\n## 3. Task Lifecycle Operations\n### 3.1 Creation of Study Tasks\n- WHEN a student creates a study task, THE system SHALL provide the ability to specify:\n  - The study phase(s) to which the task applies (preview, main learning, review).\n  - A category or subject tag.\n  - A textual title and optional description.\n  - Attachments including images and PDF files.\n  - A memo field for additional notes.\n  - Alarm settings for reminders.\n\n### 3.2 Updating and Deleting Tasks\n- WHEN a student updates a study task, THE system SHALL allow modification of any of the task attributes listed in 3.1.\n- WHEN a student deletes a study task, THE system SHALL remove the task and all associated data including attachments, memos, progress records, and notifications.\n\n### 3.3 Progress Marking and Completion\n- WHEN a student marks a phase of a study task as completed, THE system SHALL update and persist this state.\n- WHEN a student modifies the completion status, THE system SHALL update the stored data accordingly.\n\n## 4. Content and Memo Management\n### 4.1 Supported Content Types\n- THE system SHALL support attaching images (e.g., JPEG, PNG) and PDF documents to study tasks.\n- THE system SHALL ensure associated content is stored reliably and retrievable.\n\n### 4.2 Memo Usage\n- WHEN a student creates or edits a memo associated with a study task, THE system SHALL save and associate the memo text with the respective task.\n\n## 5. Notification and Alarm System\n### 5.1 Alarms Linked to Study Tasks\n- WHEN a student sets an alarm for a study task, THE system SHALL trigger a notification at the scheduled time.\n\n### 5.2 General Reminders\n- THE system SHALL support general (non-task-specific) reminders configurable by the student.\n\n### 5.3 PWA Notification Integration\n- THE system SHALL support sending Progressive Web App notifications triggered by alarms or reminders to the studentâ€™s device.\n\n## 6. Progress Tracking and Analytics\n### 6.1 Tracking Study Progress\n- THE system SHALL track and store the completion state of each study phase per task.\n\n### 6.2 Visual Analytics\n- THE system SHALL aggregate study data to identify insufficient learning areas.\n- THE system SHALL generate and provide charts visualizing:\n  - Number of incomplete study phases\n  - Time spent per subject category\n  - Success and progress metrics\n\n### 6.3 English Category Details\n- THE system SHALL specifically track and report detailed data within the English language category subtopics: grammar, vocabulary, speaking, and others.\n\n## 7. User Authentication and Access Control\n### 7.1 Sign Up and Sign In\n- THE system SHALL allow students to register (sign up) using a valid email and password.\n- THE system SHALL allow students to log in with their email and password.\n\n### 7.2 Password Recovery\n- WHEN a student requests account recovery, THE system SHALL provide:\n  - Mechanism to find their user ID.\n  - Mechanism to reset their password securely.\n\n## 8. Business Rules and Error Handling\n- IF a student attempts to attach an unsupported file type, THEN THE system SHALL reject the attachment and notify the user of the allowed file types.\n- IF required fields are missing during task creation or update, THEN THE system SHALL reject the operation and return descriptive validation error messages.\n- IF a student attempts an action without authorization, THEN THE system SHALL deny the operation with a clear error message.\n\n## 9. Performance Expectations\n- WHEN processing any user request, THE system SHALL respond within 2 seconds under normal operating conditions.\n\n---\n\n## Diagrams\n```mermaid\ngraph LR\n  A[\"Create study task\"] --> B{\"Valid input?\"}\n  B -->|\"Yes\"| C[\"Store task data\"]\n  B -->|\"No\"| D[\"Return error message\"]\n  C --> E[\"Notify alarms if set\"]\n  E --> F[\"Update progress tracking\"]\n  F --> G[\"Update analytics\"]\n\n  subgraph \"User Authentication\"\n    H[\"User sign up\"] --> I[\"Validate credentials\"]\n    I --> J{\"Valid?\"}\n    J -->|\"Yes\"| K[\"Create user account\"]\n    J -->|\"No\"| L[\"Return error\"]\n  end\n\n  subgraph \"Notification Flow\"\n    M[\"Trigger alarm\"] --> N[\"Send PWA notification\"]\n  end\n\n  D -.-> H\n  L -.-> A\n\n\n```\n\n---\n\nThis document provides business requirements only. All technical implementation decisions belong to developers. Developers have full autonomy over architecture, APIs, and database design. The document describes WHAT the system should do, not HOW to build it."},{"reason":"To document business rules, constraint validations, error handling scenarios, and user experience expectations to guide development of the study planner backend.","filename":"04-business-rules.md","documentType":"requirement","outline":["Business Rules and Validation","Error Handling Scenarios","Performance Expectations"],"audience":"backend developers","content":"# Business Rules and Error Handling for Study Planner Backend\n\n## 1. Introduction\nThis document defines the comprehensive business rules, validation requirements, error handling scenarios, and performance expectations for the study planner backend system. The backend supports authenticated student users who manage learning activities structured in three phases: preview, main learning, and review. Users can create, update, and delete study tasks, organize by category, attach study contents (images, PDFs), set memos and alarms, receive PWA notifications, and review progress analytics including charts on insufficient learning.\n\nThe goal of this document is to provide backend developers with clear, specific, and measurable requirements to ensure robust, secure, and user-friendly system behaviors.\n\n## 2. Business Rules and Validation\n\n### 2.1 Study Activity Phases Management\n- THE system SHALL enforce that every study activity task is assigned exactly one phase of the three: preview, main learning, or review.\n- THE system SHALL allow users to assign categories and subcategories to learning tasks, including English categories such as grammar, vocabulary, speaking, and others.\n- THE system SHALL maintain progress status per study task phase with these states: not started, in progress, completed.\n- WHEN a user marks a phase as completed, THE system SHALL record the completion timestamp and prevent the status from reverting to an earlier state.\n\n### 2.2 Task Lifecycle Rules\n- THE system SHALL allow only authenticated students to create, update, and delete their own study tasks.\n- THE system SHALL validate that study task titles are non-empty strings with a maximum length of 255 characters.\n- THE system SHALL validate that memos attached to tasks are strings with a maximum length of 2000 characters.\n- THE system SHALL prevent any unauthorized attempts to modify or delete tasks belonging to other users by returning an authorization error.\n\n### 2.3 Study Content and Attachments\n- THE system SHALL allow zero or more attachments per study task.\n- THE system SHALL only accept attachment files of type image or PDF.\n- WHEN attachments are uploaded, THE system SHALL validate file formats and enforce a size limit, such as a maximum of 10 megabytes per file.\n- THE system SHALL securely associate attachments with the corresponding userâ€™s study tasks.\n\n### 2.4 Memo and Alarm Handling\n- THE system SHALL allow users to create memos linked to their study tasks.\n- THE system SHALL allow users to set alarms/reminders related to specific study tasks or general study sessions.\n- THE system SHALL manage scheduling and delivery of push notifications (PWA notifications) triggered by alarms.\n- WHEN an alarm time is reached, THE system SHALL deliver a notification via the PWA to the userâ€™s device.\n\n### 2.5 User Authentication and Access Control\n- THE system SHALL require user authentication for all actions within the study planner.\n- THE system SHALL provide functionality for user registration (sign up), login, ID and password recovery, and secure session management including logout.\n- THE system SHALL ensure users can only access and modify their own data and resources.\n\n## 3. Error Handling Scenarios\n\n### 3.1 Authentication Errors\n- IF a user accesses any system function without valid authentication, THEN THE system SHALL respond with HTTP status 401 Unauthorized and an informative message.\n- IF a user submits invalid login credentials, THEN THE system SHALL respond with HTTP status 401 Unauthorized specifying the authentication failure.\n\n### 3.2 Input Validation Errors\n- IF the user submits a request with invalid data such as empty titles, unsupported attachment types, or oversized files, THEN THE system SHALL respond with HTTP status 400 Bad Request and detailed validation error information.\n\n### 3.3 Resource Not Found\n- IF a requested study task, memo, or attachment is not found or does not belong to the authenticated user, THEN THE system SHALL respond with HTTP status 404 Not Found.\n\n### 3.4 Permission Denied\n- IF a user attempts to perform an action they are not authorized for (e.g., modifying someone elseâ€™s data), THEN THE system SHALL respond with HTTP status 403 Forbidden.\n\n### 3.5 Notification Failures\n- IF the system fails to deliver a scheduled PWA notification, THEN THE system SHALL retry delivery up to three times.\n- IF all retries fail, THEN THE system SHALL log the failure and notify the user on their dashboard or by alternative communication where feasible.\n\n## 4. Performance Expectations\n- THE system SHALL respond to user operations such as creating, updating, deleting study tasks, and marking progress within 2 seconds under normal load.\n- THE system SHALL deliver scheduled alarms and PWA notifications within 1 minute of their scheduled time.\n- THE system SHALL scale to support at least 10,000 concurrent active student users with acceptable performance metrics.\n\n## 5. Appendices\n\n### 5.1 Process Flow Diagram\n```mermaid\ngraph LR\n  A[\"User Authentication\"] --> B{\"Authenticated?\"}\n  B -- \"No\" --> C[\"Return 401 Unauthorized\"]\n  B -- \"Yes\" --> D[\"Access Study Tasks\"]\n\n  subgraph \"Study Task Management\"\n    D --> E[\"Create/Update/Delete Task\"]\n    E --> F{\"Valid Input?\"}\n    F -- \"No\" --> G[\"Return 400 Bad Request\"]\n    F -- \"Yes\" --> H[\"Save Task\"]\n    H --> I[\"Return Success\"]\n  end\n\n  subgraph \"Notification System\"\n    J[\"Alarm Trigger\"] --> K[\"Send PWA Notification\"]\n    K --> L{\"Delivery Success?\"}\n    L -- \"No\" --> M[\"Retry up to 3 times\"]\n    M --> L\n    L -- \"Yes\" --> N[\"Log Delivery\"]\n  end\n\n  I --> J\n```\n\nThis document provides backend developers with detailed, unambiguous requirements for business rules, validation logic, error handling scenarios, and performance targets essential for developing a robust and user-centered study planner backend system supporting efficient learning management and interaction."}],"created_at":"2025-09-12T10:57:01.969Z","completed_at":"2025-09-12T11:04:51.523Z","step":0},{"id":"01993daa-7d71-7688-a0cb-467a4c4b26ff","type":"userMessage","contents":[{"type":"text","text":"hello"}],"created_at":"2025-09-12T11:23:27.473Z"},{"id":"01993daa-8083-7068-93f3-8e3e4b67bbc4","type":"assistantMessage","text":"Hello! We've gathered detailed requirements for your study planner backend aimed at helping students study efficiently by managing preview, main learning, and review phases. It will support progress tracking, categorization by subjects and topics (like English grammar, vocabulary, speaking, etc.), and handle study tasks with attachments such as images and PDFs. Users can receive alarms, PWA notifications, and see charts highlighting areas needing improvement. The system also includes user authentication with sign-in, sign-up, and account recovery features.\n\nThe analysis phase is complete. The next step is to design the database schema.\n\nShall I proceed to generate the database schema for your study planner backend?","created_at":"2025-09-12T11:23:28.259Z","completed_at":"2025-09-12T11:23:30.090Z"},{"id":"01993f12-87ca-73cc-91ca-8dacd9830ae7","type":"userMessage","contents":[{"type":"text","text":"go !"}],"created_at":"2025-09-12T17:56:43.082Z"},{"type":"prisma","id":"01993f17-32bc-7361-9e97-dd17d4b3d771","reason":"Generate complete database schema and ERD documentation for the study planner backend based on the analyzed requirements. The system supports managing preview, main learning, and review phases with progress tracking, task categorization by subjects and topics including English categories like grammar and vocabulary. Users are students who can create, update, and delete study tasks that may include images and PDFs. Alarms, PWA notifications, memos, and charts for insufficient learning analytics are also supported. User authentication with sign-in, sign-up, and account recovery features is required.","schemas":{"schema-01-actors.prisma":"/// Student user accounts for study planner system authentication and profile\n/// management. This table stores confidential authentication information\n/// including hashed passwords, email for login, and account status. It\n/// supports audit trail fields for creation, updates, and soft deletion to\n/// enable secure and maintainable user management. This model is primary as\n/// students require independent API operations for sign-up, login, profile\n/// updates, and password recovery.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_students {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Unique email address used for user login and identification.\n  email String\n  \n  /// Hashed password for secure authentication.\n  password_hash String\n  \n  /// Name of the student user for personalization and display.\n  name String\n  \n  /// Account status to indicate if the user is active, suspended, or disabled.\n  status String\n  \n  /// Timestamp when the student account was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the student account was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Timestamp for soft deletion to mark the account as deleted without\n  /// physical removal.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks study_planner_study_tasks[]\n  study_planner_alarms study_planner_alarms[]\n  study_planner_general_reminders study_planner_general_reminders[]\n  study_planner_pwa_notifications study_planner_pwa_notifications[]\n  \n  @@unique([email])\n  @@index([status])\n}","schema-02-study.prisma":"/// Defines the three core study phases (preview, main learning, review) that\n/// categorize study tasks. This classification enables structured progress\n/// management and analytics. It is a primary entity for organizing study\n/// activities. No soft delete required as phases are stable definitions.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_phases {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Unique code identifier for the study phase, e.g., 'preview',\n  /// 'main_learning', 'review'.\n  code String\n  \n  /// Human-readable name of the study phase.\n  name String\n  \n  /// Optional detailed description of the study phase.\n  description String?\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks study_planner_study_tasks[]\n  study_planner_study_task_progress study_planner_study_task_progress[]\n  \n  @@unique([code])\n  @@index([name])\n}\n\n/// Defines categories for study tasks, including specific English\n/// subcategories such as grammar, vocabulary, speaking, and others. Supports\n/// hierarchical categorization for tasks to allow detailed analytical\n/// breakdowns and filtering.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_categories {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Optional parent category for hierarchical categorization. References\n  /// parent category's {@link study_planner_study_categories.id}.\n  parent_category_id String? @db.Uuid\n  \n  /// Unique code identifier for the category, e.g., 'english_grammar',\n  /// 'english_vocabulary'.\n  code String\n  \n  /// Name of the category.\n  name String\n  \n  /// Optional detailed description of the study category.\n  description String?\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  parentCategory study_planner_study_categories? @relation(\"recursive\", fields: [parent_category_id], references: [id], onDelete: Cascade)\n  \n  recursive study_planner_study_categories[] @relation(\"recursive\")\n  study_planner_study_tasks study_planner_study_tasks[]\n  \n  @@index([parent_category_id])\n  \n  @@unique([code])\n  @@index([name])\n}\n\n/// Study tasks created by authenticated students, organized by study phase\n/// and category. Represents core learning activities including title,\n/// description, progress tracking, and attachments. Soft delete enabled for\n/// recovery.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_tasks {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Owning student's {@link study_planner_students.id}.\n  student_id String @db.Uuid\n  \n  /// Associated study phase {@link study_planner_study_phases.id}.\n  study_phase_id String @db.Uuid\n  \n  /// Associated category {@link study_planner_study_categories.id}.\n  study_category_id String @db.Uuid\n  \n  /// Title of the study task.\n  title String\n  \n  /// Detailed description of the study task.\n  description String?\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft deletion timestamp for recovery.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  studyCategory study_planner_study_categories @relation(fields: [study_category_id], references: [id], onDelete: Cascade)\n  \n  study_planner_study_task_attachments study_planner_study_task_attachments[]\n  study_planner_study_task_memos study_planner_study_task_memos[]\n  study_planner_study_task_progress study_planner_study_task_progress[]\n  \n  @@index([study_phase_id])\n  @@index([study_category_id])\n  \n  @@index([student_id, study_phase_id, study_category_id, title], map: \"study_planner_study_tasks_student_id_study_phase_id_st_88f081b0\")\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Attachments such as images or PDFs linked to study tasks. Supports\n/// storing attachment metadata and manages file associations. Subsidiary to\n/// study tasks with no independent API needed.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_attachments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Linked study task {@link study_planner_study_tasks.id}.\n  study_task_id String @db.Uuid\n  \n  /// Original file name of the attachment.\n  file_name String\n  \n  /// MIME type of the attachment file.\n  file_type String\n  \n  /// File size in bytes.\n  file_size Int @db.Integer\n  \n  /// URI path to the stored file.\n  file_uri String @db.VarChar(80000)\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_task_id, file_name], map: \"study_planner_study_task_attachments_study_task_id_fil_b197b9e6\")\n}\n\n/// Memos containing textual notes linked to study tasks. Supports students\n/// adding additional information or study hints. Subsidiary to study tasks\n/// and managed indirectly.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_memos {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Linked study task {@link study_planner_study_tasks.id}.\n  study_task_id String @db.Uuid\n  \n  /// Text content of the memo.\n  content String\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_task_id])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Tracks progress and completion timestamps of each study phase per study\n/// task. Enables detailed progress analysis and validation over study\n/// lifecycle. Subsidiary entity updated via study task operations.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_progress {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Associated study task {@link study_planner_study_tasks.id}.\n  study_task_id String @db.Uuid\n  \n  /// Associated study phase {@link study_planner_study_phases.id}.\n  study_phase_id String @db.Uuid\n  \n  /// Current progress status for the phase (e.g., 'not_started',\n  /// 'in_progress', 'completed').\n  status String\n  \n  /// Timestamp when the phase was completed.\n  completed_at DateTime? @db.Timestamptz\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_phase_id])\n  \n  @@unique([study_task_id, study_phase_id], map: \"study_planner_study_task_progress_study_task_id_study__55b670c4\")\n  @@index([status])\n}","schema-03-notifications.prisma":"/// Contains alarm records set by students for study reminders. Each alarm is\n/// linked to a specific student and includes scheduling and status details.\n/// This primary table allows users to manage individual alarms\n/// independently.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_alarms {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Linked student who owns the alarm. {@link study_planner_students.id}\n  student_id String @db.Uuid\n  \n  /// Title or label of the alarm for user identification.\n  title String\n  \n  /// Scheduled alarm time when notification should be sent.\n  alarm_time DateTime @db.Timestamptz\n  \n  /// Flag indicating if the alarm is active.\n  enabled Boolean\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of last modification.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp; null if not deleted.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  \n  study_planner_pwa_notifications study_planner_pwa_notifications[]\n  \n  @@unique([student_id, alarm_time])\n  @@index([alarm_time, enabled])\n}\n\n/// Stores general reminder entries set by students that are not tied to\n/// specific study tasks or alarms. These reminders are managed independently\n/// and provide flexible notification options.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_general_reminders {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Student owning the general reminder. {@link study_planner_students.id}\n  student_id String @db.Uuid\n  \n  /// Descriptive title for the reminder.\n  title String\n  \n  /// Timestamp when the reminder is scheduled to notify the user.\n  reminder_time DateTime @db.Timestamptz\n  \n  /// Indicates whether the reminder is active.\n  enabled Boolean\n  \n  /// Time when the reminder was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last updated timestamp for the reminder.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Timestamp indicating soft deletion; null if active.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  \n  study_planner_pwa_notifications study_planner_pwa_notifications[]\n  \n  @@unique([student_id, reminder_time])\n  @@index([reminder_time, enabled])\n}\n\n/// Tracks Progressive Web App notifications sent to students triggered by\n/// alarms or reminders. Each record logs delivery status, related entities,\n/// and timestamps for auditing and retry logic.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_pwa_notifications {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Target student receiving the PWA notification. {@link\n  /// study_planner_students.id}\n  student_id String @db.Uuid\n  \n  /// Associated alarm triggering this notification, if applicable. {@link\n  /// study_planner_alarms.id}\n  alarm_id String? @db.Uuid\n  \n  /// Associated general reminder triggering this notification, if applicable.\n  /// {@link study_planner_general_reminders.id}\n  general_reminder_id String? @db.Uuid\n  \n  /// Timestamp when the PWA notification was sent or attempted.\n  notification_time DateTime @db.Timestamptz\n  \n  /// Flag indicating if the notification was successfully delivered.\n  delivered Boolean\n  \n  /// Record creation timestamp for audit purposes.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of last update to the notification record.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp; null if the notification record is active.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  alarm study_planner_alarms? @relation(fields: [alarm_id], references: [id], onDelete: Cascade)\n  generalReminder study_planner_general_reminders? @relation(fields: [general_reminder_id], references: [id], onDelete: Cascade)\n  \n  @@index([student_id])\n  @@index([alarm_id])\n  @@index([general_reminder_id])\n  \n  @@index([notification_time, delivered])\n}","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}"},"result":{"success":true,"data":{"files":[{"filename":"schema-01-actors.prisma","namespace":"Actors","models":[{"name":"study_planner_students","description":"Student user accounts for study planner system authentication and profile management. This table stores confidential authentication information including hashed passwords, email for login, and account status. It supports audit trail fields for creation, updates, and soft deletion to enable secure and maintainable user management. This model is primary as students require independent API operations for sign-up, login, profile updates, and password recovery.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address used for user login and identification."},{"name":"password_hash","type":"string","nullable":false,"description":"Hashed password for secure authentication."},{"name":"name","type":"string","nullable":false,"description":"Name of the student user for personalization and display."},{"name":"status","type":"string","nullable":false,"description":"Account status to indicate if the user is active, suspended, or disabled."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the student account was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the student account was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp for soft deletion to mark the account as deleted without physical removal."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[]}]},{"filename":"schema-02-study.prisma","namespace":"Study","models":[{"name":"study_planner_study_phases","description":"Defines the three core study phases (preview, main learning, review) that categorize study tasks. This classification enables structured progress management and analytics. It is a primary entity for organizing study activities. No soft delete required as phases are stable definitions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","nullable":false,"description":"Unique code identifier for the study phase, e.g., 'preview', 'main_learning', 'review'."},{"name":"name","type":"string","nullable":false,"description":"Human-readable name of the study phase."},{"name":"description","type":"string","nullable":true,"description":"Optional detailed description of the study phase."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["name"]}],"ginIndexes":[]},{"name":"study_planner_study_categories","description":"Defines categories for study tasks, including specific English subcategories such as grammar, vocabulary, speaking, and others. Supports hierarchical categorization for tasks to allow detailed analytical breakdowns and filtering.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"parent_category_id","type":"uuid","nullable":true,"unique":false,"description":"Optional parent category for hierarchical categorization. References parent category's {@link study_planner_study_categories.id}.","relation":{"name":"parentCategory","targetModel":"study_planner_study_categories"}}],"plainFields":[{"name":"code","type":"string","nullable":false,"description":"Unique code identifier for the category, e.g., 'english_grammar', 'english_vocabulary'."},{"name":"name","type":"string","nullable":false,"description":"Name of the category."},{"name":"description","type":"string","nullable":true,"description":"Optional detailed description of the study category."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["name"]}],"ginIndexes":[]},{"name":"study_planner_study_tasks","description":"Study tasks created by authenticated students, organized by study phase and category. Represents core learning activities including title, description, progress tracking, and attachments. Soft delete enabled for recovery.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","nullable":false,"unique":false,"description":"Owning student's {@link study_planner_students.id}.","relation":{"name":"student","targetModel":"study_planner_students"}},{"name":"study_phase_id","type":"uuid","nullable":false,"unique":false,"description":"Associated study phase {@link study_planner_study_phases.id}.","relation":{"name":"studyPhase","targetModel":"study_planner_study_phases"}},{"name":"study_category_id","type":"uuid","nullable":false,"unique":false,"description":"Associated category {@link study_planner_study_categories.id}.","relation":{"name":"studyCategory","targetModel":"study_planner_study_categories"}}],"plainFields":[{"name":"title","type":"string","nullable":false,"description":"Title of the study task."},{"name":"description","type":"string","nullable":true,"description":"Detailed description of the study task."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft deletion timestamp for recovery."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["student_id","study_phase_id","study_category_id","title"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"study_planner_study_task_attachments","description":"Attachments such as images or PDFs linked to study tasks. Supports storing attachment metadata and manages file associations. Subsidiary to study tasks with no independent API needed.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"study_task_id","type":"uuid","nullable":false,"unique":false,"description":"Linked study task {@link study_planner_study_tasks.id}.","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"}}],"plainFields":[{"name":"file_name","type":"string","nullable":false,"description":"Original file name of the attachment."},{"name":"file_type","type":"string","nullable":false,"description":"MIME type of the attachment file."},{"name":"file_size","type":"int","nullable":false,"description":"File size in bytes."},{"name":"file_uri","type":"uri","nullable":false,"description":"URI path to the stored file."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["study_task_id","file_name"]}],"ginIndexes":[]},{"name":"study_planner_study_task_memos","description":"Memos containing textual notes linked to study tasks. Supports students adding additional information or study hints. Subsidiary to study tasks and managed indirectly.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"study_task_id","type":"uuid","nullable":false,"unique":false,"description":"Linked study task {@link study_planner_study_tasks.id}.","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"}}],"plainFields":[{"name":"content","type":"string","nullable":false,"description":"Text content of the memo."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["study_task_id"]}],"ginIndexes":[{"fieldName":"content"}]},{"name":"study_planner_study_task_progress","description":"Tracks progress and completion timestamps of each study phase per study task. Enables detailed progress analysis and validation over study lifecycle. Subsidiary entity updated via study task operations.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"study_task_id","type":"uuid","nullable":false,"unique":false,"description":"Associated study task {@link study_planner_study_tasks.id}.","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"}},{"name":"study_phase_id","type":"uuid","nullable":false,"unique":false,"description":"Associated study phase {@link study_planner_study_phases.id}.","relation":{"name":"studyPhase","targetModel":"study_planner_study_phases"}}],"plainFields":[{"name":"status","type":"string","nullable":false,"description":"Current progress status for the phase (e.g., 'not_started', 'in_progress', 'completed')."},{"name":"completed_at","type":"datetime","nullable":true,"description":"Timestamp when the phase was completed."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["study_task_id","study_phase_id"],"unique":true}],"plainIndexes":[{"fieldNames":["status"]}],"ginIndexes":[]}]},{"filename":"schema-03-notifications.prisma","namespace":"Notifications","models":[{"name":"study_planner_alarms","description":"Contains alarm records set by students for study reminders. Each alarm is linked to a specific student and includes scheduling and status details. This primary table allows users to manage individual alarms independently.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Linked student who owns the alarm. {@link study_planner_students.id}","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title or label of the alarm for user identification.","nullable":false},{"name":"alarm_time","type":"datetime","description":"Scheduled alarm time when notification should be sent.","nullable":false},{"name":"enabled","type":"boolean","description":"Flag indicating if the alarm is active.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last modification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp; null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["student_id","alarm_time"],"unique":true}],"plainIndexes":[{"fieldNames":["alarm_time","enabled"]}],"ginIndexes":[]},{"name":"study_planner_general_reminders","description":"Stores general reminder entries set by students that are not tied to specific study tasks or alarms. These reminders are managed independently and provide flexible notification options.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Student owning the general reminder. {@link study_planner_students.id}","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Descriptive title for the reminder.","nullable":false},{"name":"reminder_time","type":"datetime","description":"Timestamp when the reminder is scheduled to notify the user.","nullable":false},{"name":"enabled","type":"boolean","description":"Indicates whether the reminder is active.","nullable":false},{"name":"created_at","type":"datetime","description":"Time when the reminder was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last updated timestamp for the reminder.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp indicating soft deletion; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["student_id","reminder_time"],"unique":true}],"plainIndexes":[{"fieldNames":["reminder_time","enabled"]}],"ginIndexes":[]},{"name":"study_planner_pwa_notifications","description":"Tracks Progressive Web App notifications sent to students triggered by alarms or reminders. Each record logs delivery status, related entities, and timestamps for auditing and retry logic.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Target student receiving the PWA notification. {@link study_planner_students.id}","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false},{"name":"alarm_id","type":"uuid","description":"Associated alarm triggering this notification, if applicable. {@link study_planner_alarms.id}","relation":{"name":"alarm","targetModel":"study_planner_alarms"},"unique":false,"nullable":true},{"name":"general_reminder_id","type":"uuid","description":"Associated general reminder triggering this notification, if applicable. {@link study_planner_general_reminders.id}","relation":{"name":"generalReminder","targetModel":"study_planner_general_reminders"},"unique":false,"nullable":true}],"plainFields":[{"name":"notification_time","type":"datetime","description":"Timestamp when the PWA notification was sent or attempted.","nullable":false},{"name":"delivered","type":"boolean","description":"Flag indicating if the notification was successfully delivered.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp for audit purposes.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to the notification record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp; null if the notification record is active.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["notification_time","delivered"]}],"ginIndexes":[]}]}]}},"compiled":{"type":"success","schemas":{"schema-01-actors.prisma":"/// Student user accounts for study planner system authentication and profile\n/// management. This table stores confidential authentication information\n/// including hashed passwords, email for login, and account status. It\n/// supports audit trail fields for creation, updates, and soft deletion to\n/// enable secure and maintainable user management. This model is primary as\n/// students require independent API operations for sign-up, login, profile\n/// updates, and password recovery.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_students {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Unique email address used for user login and identification.\n  email String\n\n  /// Hashed password for secure authentication.\n  password_hash String\n\n  /// Name of the student user for personalization and display.\n  name String\n\n  /// Account status to indicate if the user is active, suspended, or disabled.\n  status String\n\n  /// Timestamp when the student account was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the student account was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// Timestamp for soft deletion to mark the account as deleted without\n  /// physical removal.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks       study_planner_study_tasks[]\n  study_planner_alarms            study_planner_alarms[]\n  study_planner_general_reminders study_planner_general_reminders[]\n  study_planner_pwa_notifications study_planner_pwa_notifications[]\n\n  @@unique([email])\n  @@index([status])\n}\n","schema-02-study.prisma":"/// Defines the three core study phases (preview, main learning, review) that\n/// categorize study tasks. This classification enables structured progress\n/// management and analytics. It is a primary entity for organizing study\n/// activities. No soft delete required as phases are stable definitions.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_phases {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Unique code identifier for the study phase, e.g., 'preview',\n  /// 'main_learning', 'review'.\n  code String\n\n  /// Human-readable name of the study phase.\n  name String\n\n  /// Optional detailed description of the study phase.\n  description String?\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks         study_planner_study_tasks[]\n  study_planner_study_task_progress study_planner_study_task_progress[]\n\n  @@unique([code])\n  @@index([name])\n}\n\n/// Defines categories for study tasks, including specific English\n/// subcategories such as grammar, vocabulary, speaking, and others. Supports\n/// hierarchical categorization for tasks to allow detailed analytical\n/// breakdowns and filtering.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_categories {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Optional parent category for hierarchical categorization. References\n  /// parent category's {@link study_planner_study_categories.id}.\n  parent_category_id String? @db.Uuid\n\n  /// Unique code identifier for the category, e.g., 'english_grammar',\n  /// 'english_vocabulary'.\n  code String\n\n  /// Name of the category.\n  name String\n\n  /// Optional detailed description of the study category.\n  description String?\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  parentCategory study_planner_study_categories? @relation(\"recursive\", fields: [parent_category_id], references: [id], onDelete: Cascade)\n\n  recursive                 study_planner_study_categories[] @relation(\"recursive\")\n  study_planner_study_tasks study_planner_study_tasks[]\n\n  @@unique([code])\n  @@index([parent_category_id])\n  @@index([name])\n}\n\n/// Study tasks created by authenticated students, organized by study phase\n/// and category. Represents core learning activities including title,\n/// description, progress tracking, and attachments. Soft delete enabled for\n/// recovery.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_tasks {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Owning student's {@link study_planner_students.id}.\n  student_id String @db.Uuid\n\n  /// Associated study phase {@link study_planner_study_phases.id}.\n  study_phase_id String @db.Uuid\n\n  /// Associated category {@link study_planner_study_categories.id}.\n  study_category_id String @db.Uuid\n\n  /// Title of the study task.\n  title String\n\n  /// Detailed description of the study task.\n  description String?\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft deletion timestamp for recovery.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student       study_planner_students         @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyPhase    study_planner_study_phases     @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  studyCategory study_planner_study_categories @relation(fields: [study_category_id], references: [id], onDelete: Cascade)\n\n  study_planner_study_task_attachments study_planner_study_task_attachments[]\n  study_planner_study_task_memos       study_planner_study_task_memos[]\n  study_planner_study_task_progress    study_planner_study_task_progress[]\n\n  @@index([study_phase_id])\n  @@index([study_category_id])\n  @@index([student_id, study_phase_id, study_category_id, title], map: \"study_planner_study_tasks_student_id_study_phase_id_st_88f081b0\")\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Attachments such as images or PDFs linked to study tasks. Supports\n/// storing attachment metadata and manages file associations. Subsidiary to\n/// study tasks with no independent API needed.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_attachments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Linked study task {@link study_planner_study_tasks.id}.\n  study_task_id String @db.Uuid\n\n  /// Original file name of the attachment.\n  file_name String\n\n  /// MIME type of the attachment file.\n  file_type String\n\n  /// File size in bytes.\n  file_size Int @db.Integer\n\n  /// URI path to the stored file.\n  file_uri String @db.VarChar(80000)\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n\n  @@index([study_task_id, file_name], map: \"study_planner_study_task_attachments_study_task_id_fil_b197b9e6\")\n}\n\n/// Memos containing textual notes linked to study tasks. Supports students\n/// adding additional information or study hints. Subsidiary to study tasks\n/// and managed indirectly.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_memos {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Linked study task {@link study_planner_study_tasks.id}.\n  study_task_id String @db.Uuid\n\n  /// Text content of the memo.\n  content String\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n\n  @@index([study_task_id])\n  @@index([content(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Tracks progress and completion timestamps of each study phase per study\n/// task. Enables detailed progress analysis and validation over study\n/// lifecycle. Subsidiary entity updated via study task operations.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_progress {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Associated study task {@link study_planner_study_tasks.id}.\n  study_task_id String @db.Uuid\n\n  /// Associated study phase {@link study_planner_study_phases.id}.\n  study_phase_id String @db.Uuid\n\n  /// Current progress status for the phase (e.g., 'not_started',\n  /// 'in_progress', 'completed').\n  status String\n\n  /// Timestamp when the phase was completed.\n  completed_at DateTime? @db.Timestamptz\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  studyTask  study_planner_study_tasks  @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n\n  @@unique([study_task_id, study_phase_id], map: \"study_planner_study_task_progress_study_task_id_study__55b670c4\")\n  @@index([study_phase_id])\n  @@index([status])\n}\n","schema-03-notifications.prisma":"/// Contains alarm records set by students for study reminders. Each alarm is\n/// linked to a specific student and includes scheduling and status details.\n/// This primary table allows users to manage individual alarms\n/// independently.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_alarms {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Linked student who owns the alarm. {@link study_planner_students.id}\n  student_id String @db.Uuid\n\n  /// Title or label of the alarm for user identification.\n  title String\n\n  /// Scheduled alarm time when notification should be sent.\n  alarm_time DateTime @db.Timestamptz\n\n  /// Flag indicating if the alarm is active.\n  enabled Boolean\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of last modification.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp; null if not deleted.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n\n  study_planner_pwa_notifications study_planner_pwa_notifications[]\n\n  @@unique([student_id, alarm_time])\n  @@index([alarm_time, enabled])\n}\n\n/// Stores general reminder entries set by students that are not tied to\n/// specific study tasks or alarms. These reminders are managed independently\n/// and provide flexible notification options.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_general_reminders {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Student owning the general reminder. {@link study_planner_students.id}\n  student_id String @db.Uuid\n\n  /// Descriptive title for the reminder.\n  title String\n\n  /// Timestamp when the reminder is scheduled to notify the user.\n  reminder_time DateTime @db.Timestamptz\n\n  /// Indicates whether the reminder is active.\n  enabled Boolean\n\n  /// Time when the reminder was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Last updated timestamp for the reminder.\n  updated_at DateTime @db.Timestamptz\n\n  /// Timestamp indicating soft deletion; null if active.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n\n  study_planner_pwa_notifications study_planner_pwa_notifications[]\n\n  @@unique([student_id, reminder_time])\n  @@index([reminder_time, enabled])\n}\n\n/// Tracks Progressive Web App notifications sent to students triggered by\n/// alarms or reminders. Each record logs delivery status, related entities,\n/// and timestamps for auditing and retry logic.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_pwa_notifications {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Target student receiving the PWA notification. {@link\n  /// study_planner_students.id}\n  student_id String @db.Uuid\n\n  /// Associated alarm triggering this notification, if applicable. {@link\n  /// study_planner_alarms.id}\n  alarm_id String? @db.Uuid\n\n  /// Associated general reminder triggering this notification, if applicable.\n  /// {@link study_planner_general_reminders.id}\n  general_reminder_id String? @db.Uuid\n\n  /// Timestamp when the PWA notification was sent or attempted.\n  notification_time DateTime @db.Timestamptz\n\n  /// Flag indicating if the notification was successfully delivered.\n  delivered Boolean\n\n  /// Record creation timestamp for audit purposes.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of last update to the notification record.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp; null if the notification record is active.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student         study_planner_students           @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  alarm           study_planner_alarms?            @relation(fields: [alarm_id], references: [id], onDelete: Cascade)\n  generalReminder study_planner_general_reminders? @relation(fields: [general_reminder_id], references: [id], onDelete: Cascade)\n\n  @@index([student_id])\n  @@index([alarm_id])\n  @@index([general_reminder_id])\n  @@index([notification_time, delivered])\n}\n","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}\n"},"nodeModules":{"node_modules/.prisma/client/client.d.ts":"export * from \"./index\"","node_modules/.prisma/client/default.d.ts":"export * from \"./index\"","node_modules/.prisma/client/edge.d.ts":"export * from \"./default\"","node_modules/.prisma/client/index.d.ts":"\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/library.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model study_planner_students\n * Student user accounts for study planner system authentication and profile\n * management. This table stores confidential authentication information\n * including hashed passwords, email for login, and account status. It\n * supports audit trail fields for creation, updates, and soft deletion to\n * enable secure and maintainable user management. This model is primary as\n * students require independent API operations for sign-up, login, profile\n * updates, and password recovery.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_students = $Result.DefaultSelection<Prisma.$study_planner_studentsPayload>\n/**\n * Model study_planner_study_phases\n * Defines the three core study phases (preview, main learning, review) that\n * categorize study tasks. This classification enables structured progress\n * management and analytics. It is a primary entity for organizing study\n * activities. No soft delete required as phases are stable definitions.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_phases = $Result.DefaultSelection<Prisma.$study_planner_study_phasesPayload>\n/**\n * Model study_planner_study_categories\n * Defines categories for study tasks, including specific English\n * subcategories such as grammar, vocabulary, speaking, and others. Supports\n * hierarchical categorization for tasks to allow detailed analytical\n * breakdowns and filtering.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_categories = $Result.DefaultSelection<Prisma.$study_planner_study_categoriesPayload>\n/**\n * Model study_planner_study_tasks\n * Study tasks created by authenticated students, organized by study phase\n * and category. Represents core learning activities including title,\n * description, progress tracking, and attachments. Soft delete enabled for\n * recovery.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_tasks = $Result.DefaultSelection<Prisma.$study_planner_study_tasksPayload>\n/**\n * Model study_planner_study_task_attachments\n * Attachments such as images or PDFs linked to study tasks. Supports\n * storing attachment metadata and manages file associations. Subsidiary to\n * study tasks with no independent API needed.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_task_attachments = $Result.DefaultSelection<Prisma.$study_planner_study_task_attachmentsPayload>\n/**\n * Model study_planner_study_task_memos\n * Memos containing textual notes linked to study tasks. Supports students\n * adding additional information or study hints. Subsidiary to study tasks\n * and managed indirectly.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_task_memos = $Result.DefaultSelection<Prisma.$study_planner_study_task_memosPayload>\n/**\n * Model study_planner_study_task_progress\n * Tracks progress and completion timestamps of each study phase per study\n * task. Enables detailed progress analysis and validation over study\n * lifecycle. Subsidiary entity updated via study task operations.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_task_progress = $Result.DefaultSelection<Prisma.$study_planner_study_task_progressPayload>\n/**\n * Model study_planner_alarms\n * Contains alarm records set by students for study reminders. Each alarm is\n * linked to a specific student and includes scheduling and status details.\n * This primary table allows users to manage individual alarms\n * independently.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_alarms = $Result.DefaultSelection<Prisma.$study_planner_alarmsPayload>\n/**\n * Model study_planner_general_reminders\n * Stores general reminder entries set by students that are not tied to\n * specific study tasks or alarms. These reminders are managed independently\n * and provide flexible notification options.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_general_reminders = $Result.DefaultSelection<Prisma.$study_planner_general_remindersPayload>\n/**\n * Model study_planner_pwa_notifications\n * Tracks Progressive Web App notifications sent to students triggered by\n * alarms or reminders. Each record logs delivery status, related entities,\n * and timestamps for auditing and retry logic.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_pwa_notifications = $Result.DefaultSelection<Prisma.$study_planner_pwa_notificationsPayload>\n\n/**\n * ##  Prisma Client Ê²Ë¢\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Study_planner_students\n * const study_planner_students = await prisma.study_planner_students.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client Ê²Ë¢\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Study_planner_students\n   * const study_planner_students = await prisma.study_planner_students.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.study_planner_students`: Exposes CRUD operations for the **study_planner_students** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_students\n    * const study_planner_students = await prisma.study_planner_students.findMany()\n    * ```\n    */\n  get study_planner_students(): Prisma.study_planner_studentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_phases`: Exposes CRUD operations for the **study_planner_study_phases** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_phases\n    * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany()\n    * ```\n    */\n  get study_planner_study_phases(): Prisma.study_planner_study_phasesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_categories`: Exposes CRUD operations for the **study_planner_study_categories** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_categories\n    * const study_planner_study_categories = await prisma.study_planner_study_categories.findMany()\n    * ```\n    */\n  get study_planner_study_categories(): Prisma.study_planner_study_categoriesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_tasks`: Exposes CRUD operations for the **study_planner_study_tasks** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_tasks\n    * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findMany()\n    * ```\n    */\n  get study_planner_study_tasks(): Prisma.study_planner_study_tasksDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_task_attachments`: Exposes CRUD operations for the **study_planner_study_task_attachments** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_task_attachments\n    * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findMany()\n    * ```\n    */\n  get study_planner_study_task_attachments(): Prisma.study_planner_study_task_attachmentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_task_memos`: Exposes CRUD operations for the **study_planner_study_task_memos** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_task_memos\n    * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findMany()\n    * ```\n    */\n  get study_planner_study_task_memos(): Prisma.study_planner_study_task_memosDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_task_progress`: Exposes CRUD operations for the **study_planner_study_task_progress** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_task_progresses\n    * const study_planner_study_task_progresses = await prisma.study_planner_study_task_progress.findMany()\n    * ```\n    */\n  get study_planner_study_task_progress(): Prisma.study_planner_study_task_progressDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_alarms`: Exposes CRUD operations for the **study_planner_alarms** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_alarms\n    * const study_planner_alarms = await prisma.study_planner_alarms.findMany()\n    * ```\n    */\n  get study_planner_alarms(): Prisma.study_planner_alarmsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_general_reminders`: Exposes CRUD operations for the **study_planner_general_reminders** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_general_reminders\n    * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findMany()\n    * ```\n    */\n  get study_planner_general_reminders(): Prisma.study_planner_general_remindersDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_pwa_notifications`: Exposes CRUD operations for the **study_planner_pwa_notifications** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_pwa_notifications\n    * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findMany()\n    * ```\n    */\n  get study_planner_pwa_notifications(): Prisma.study_planner_pwa_notificationsDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    study_planner_students: 'study_planner_students',\n    study_planner_study_phases: 'study_planner_study_phases',\n    study_planner_study_categories: 'study_planner_study_categories',\n    study_planner_study_tasks: 'study_planner_study_tasks',\n    study_planner_study_task_attachments: 'study_planner_study_task_attachments',\n    study_planner_study_task_memos: 'study_planner_study_task_memos',\n    study_planner_study_task_progress: 'study_planner_study_task_progress',\n    study_planner_alarms: 'study_planner_alarms',\n    study_planner_general_reminders: 'study_planner_general_reminders',\n    study_planner_pwa_notifications: 'study_planner_pwa_notifications'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"study_planner_students\" | \"study_planner_study_phases\" | \"study_planner_study_categories\" | \"study_planner_study_tasks\" | \"study_planner_study_task_attachments\" | \"study_planner_study_task_memos\" | \"study_planner_study_task_progress\" | \"study_planner_alarms\" | \"study_planner_general_reminders\" | \"study_planner_pwa_notifications\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      study_planner_students: {\n        payload: Prisma.$study_planner_studentsPayload<ExtArgs>\n        fields: Prisma.study_planner_studentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_studentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_studentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_studentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_studentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_studentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_studentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_studentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_studentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_studentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_studentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_studentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_studentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_studentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_studentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_studentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_students>\n          }\n          groupBy: {\n            args: Prisma.study_planner_studentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_studentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_studentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_studentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_phases: {\n        payload: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n        fields: Prisma.study_planner_study_phasesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_phasesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_phasesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_phasesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_phasesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_phasesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_phasesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_phasesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_phasesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_phasesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_phasesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_phasesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_phasesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_phasesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_phasesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_phasesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_phases>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_phasesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_phasesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_phasesCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_phasesCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_categories: {\n        payload: Prisma.$study_planner_study_categoriesPayload<ExtArgs>\n        fields: Prisma.study_planner_study_categoriesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_categoriesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_categoriesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_categoriesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_categoriesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_categoriesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_categoriesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_categoriesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_categoriesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_categoriesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_categoriesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_categoriesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_categoriesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_categoriesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_categoriesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_categoriesPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_categoriesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_categories>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_categoriesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_categoriesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_categoriesCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_categoriesCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_tasks: {\n        payload: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n        fields: Prisma.study_planner_study_tasksFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_tasksFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_tasksFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_tasksFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_tasksFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_tasksFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_tasksCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_tasksCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_tasksCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_tasksDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_tasksUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_tasksDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_tasksUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_tasksUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_tasksUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_tasksAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_tasks>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_tasksGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_tasksGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_tasksCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_tasksCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_task_attachments: {\n        payload: Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>\n        fields: Prisma.study_planner_study_task_attachmentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_task_attachmentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_task_attachmentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_task_attachmentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_task_attachmentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_task_attachmentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_task_attachmentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_task_attachmentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_task_attachmentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_task_attachmentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_task_attachmentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_task_attachmentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_task_attachmentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_task_attachmentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_task_attachmentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_attachmentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_task_attachmentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_task_attachments>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_task_attachmentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_attachmentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_task_attachmentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_attachmentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_task_memos: {\n        payload: Prisma.$study_planner_study_task_memosPayload<ExtArgs>\n        fields: Prisma.study_planner_study_task_memosFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_task_memosFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_task_memosFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_task_memosFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_task_memosFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_task_memosFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_task_memosCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_task_memosCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_task_memosCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_task_memosDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_task_memosUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_task_memosDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_task_memosUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_task_memosUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_task_memosUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_memosPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_task_memosAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_task_memos>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_task_memosGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_memosGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_task_memosCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_memosCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_task_progress: {\n        payload: Prisma.$study_planner_study_task_progressPayload<ExtArgs>\n        fields: Prisma.study_planner_study_task_progressFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_task_progressFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_task_progressFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_task_progressFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_task_progressFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_task_progressFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_task_progressCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_task_progressCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_task_progressCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_task_progressDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_task_progressUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_task_progressDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_task_progressUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_task_progressUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_task_progressUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_task_progressAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_task_progress>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_task_progressGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_progressGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_task_progressCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_progressCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_alarms: {\n        payload: Prisma.$study_planner_alarmsPayload<ExtArgs>\n        fields: Prisma.study_planner_alarmsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_alarmsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_alarmsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_alarmsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_alarmsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_alarmsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_alarmsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_alarmsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_alarmsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_alarmsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_alarmsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_alarmsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_alarmsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_alarmsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_alarmsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_alarmsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_alarmsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_alarms>\n          }\n          groupBy: {\n            args: Prisma.study_planner_alarmsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_alarmsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_alarmsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_alarmsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_general_reminders: {\n        payload: Prisma.$study_planner_general_remindersPayload<ExtArgs>\n        fields: Prisma.study_planner_general_remindersFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_general_remindersFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_general_remindersFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_general_remindersFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_general_remindersFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_general_remindersFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_general_remindersCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_general_remindersCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_general_remindersCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_general_remindersDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          update: {\n            args: Prisma.study_planner_general_remindersUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_general_remindersDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_general_remindersUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_general_remindersUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_general_remindersUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_general_remindersAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_general_reminders>\n          }\n          groupBy: {\n            args: Prisma.study_planner_general_remindersGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_general_remindersGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_general_remindersCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_general_remindersCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_pwa_notifications: {\n        payload: Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>\n        fields: Prisma.study_planner_pwa_notificationsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_pwa_notificationsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_pwa_notificationsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_pwa_notificationsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_pwa_notificationsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_pwa_notificationsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_pwa_notificationsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_pwa_notificationsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_pwa_notificationsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_pwa_notificationsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_pwa_notificationsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_pwa_notificationsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_pwa_notificationsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_pwa_notificationsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_pwa_notificationsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_pwa_notificationsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_pwa_notificationsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_pwa_notifications>\n          }\n          groupBy: {\n            args: Prisma.study_planner_pwa_notificationsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_pwa_notificationsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_pwa_notificationsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_pwa_notificationsCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Shorthand for `emit: 'stdout'`\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events only\n     * log: [\n     *   { emit: 'event', level: 'query' },\n     *   { emit: 'event', level: 'info' },\n     *   { emit: 'event', level: 'warn' }\n     *   { emit: 'event', level: 'error' }\n     * ]\n     * \n     * / Emit as events and log to stdout\n     * og: [\n     *  { emit: 'stdout', level: 'query' },\n     *  { emit: 'stdout', level: 'info' },\n     *  { emit: 'stdout', level: 'warn' }\n     *  { emit: 'stdout', level: 'error' }\n     * \n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    study_planner_students?: study_planner_studentsOmit\n    study_planner_study_phases?: study_planner_study_phasesOmit\n    study_planner_study_categories?: study_planner_study_categoriesOmit\n    study_planner_study_tasks?: study_planner_study_tasksOmit\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsOmit\n    study_planner_study_task_memos?: study_planner_study_task_memosOmit\n    study_planner_study_task_progress?: study_planner_study_task_progressOmit\n    study_planner_alarms?: study_planner_alarmsOmit\n    study_planner_general_reminders?: study_planner_general_remindersOmit\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;\n\n  export type GetLogType<T> = CheckIsLogLevel<\n    T extends LogDefinition ? T['level'] : T\n  >;\n\n  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>\n    ? GetLogType<T[number]>\n    : never;\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Study_planner_studentsCountOutputType\n   */\n\n  export type Study_planner_studentsCountOutputType = {\n    study_planner_study_tasks: number\n    study_planner_alarms: number\n    study_planner_general_reminders: number\n    study_planner_pwa_notifications: number\n  }\n\n  export type Study_planner_studentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_study_tasksArgs\n    study_planner_alarms?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_alarmsArgs\n    study_planner_general_reminders?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_general_remindersArgs\n    study_planner_pwa_notifications?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_pwa_notificationsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_studentsCountOutputType\n     */\n    select?: Study_planner_studentsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_alarmsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_alarmsWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_general_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_general_remindersWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_pwa_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_pwa_notificationsWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_study_phasesCountOutputType\n   */\n\n  export type Study_planner_study_phasesCountOutputType = {\n    study_planner_study_tasks: number\n    study_planner_study_task_progress: number\n  }\n\n  export type Study_planner_study_phasesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_tasksArgs\n    study_planner_study_task_progress?: boolean | Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_task_progressArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_study_phasesCountOutputType\n     */\n    select?: Study_planner_study_phasesCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_progressWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_study_categoriesCountOutputType\n   */\n\n  export type Study_planner_study_categoriesCountOutputType = {\n    recursive: number\n    study_planner_study_tasks: number\n  }\n\n  export type Study_planner_study_categoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    recursive?: boolean | Study_planner_study_categoriesCountOutputTypeCountRecursiveArgs\n    study_planner_study_tasks?: boolean | Study_planner_study_categoriesCountOutputTypeCountStudy_planner_study_tasksArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_study_categoriesCountOutputType without action\n   */\n  export type Study_planner_study_categoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_study_categoriesCountOutputType\n     */\n    select?: Study_planner_study_categoriesCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_study_categoriesCountOutputType without action\n   */\n  export type Study_planner_study_categoriesCountOutputTypeCountRecursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_categoriesWhereInput\n  }\n\n  /**\n   * Study_planner_study_categoriesCountOutputType without action\n   */\n  export type Study_planner_study_categoriesCountOutputTypeCountStudy_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_study_tasksCountOutputType\n   */\n\n  export type Study_planner_study_tasksCountOutputType = {\n    study_planner_study_task_attachments: number\n    study_planner_study_task_memos: number\n    study_planner_study_task_progress: number\n  }\n\n  export type Study_planner_study_tasksCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_task_attachments?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_attachmentsArgs\n    study_planner_study_task_memos?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_memosArgs\n    study_planner_study_task_progress?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_progressArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_study_tasksCountOutputType\n     */\n    select?: Study_planner_study_tasksCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_attachmentsWhereInput\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_memosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_memosWhereInput\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_progressWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_alarmsCountOutputType\n   */\n\n  export type Study_planner_alarmsCountOutputType = {\n    study_planner_pwa_notifications: number\n  }\n\n  export type Study_planner_alarmsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_pwa_notifications?: boolean | Study_planner_alarmsCountOutputTypeCountStudy_planner_pwa_notificationsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_alarmsCountOutputType without action\n   */\n  export type Study_planner_alarmsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_alarmsCountOutputType\n     */\n    select?: Study_planner_alarmsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_alarmsCountOutputType without action\n   */\n  export type Study_planner_alarmsCountOutputTypeCountStudy_planner_pwa_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_pwa_notificationsWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_general_remindersCountOutputType\n   */\n\n  export type Study_planner_general_remindersCountOutputType = {\n    study_planner_pwa_notifications: number\n  }\n\n  export type Study_planner_general_remindersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_pwa_notifications?: boolean | Study_planner_general_remindersCountOutputTypeCountStudy_planner_pwa_notificationsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_general_remindersCountOutputType without action\n   */\n  export type Study_planner_general_remindersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_general_remindersCountOutputType\n     */\n    select?: Study_planner_general_remindersCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_general_remindersCountOutputType without action\n   */\n  export type Study_planner_general_remindersCountOutputTypeCountStudy_planner_pwa_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_pwa_notificationsWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model study_planner_students\n   */\n\n  export type AggregateStudy_planner_students = {\n    _count: Study_planner_studentsCountAggregateOutputType | null\n    _min: Study_planner_studentsMinAggregateOutputType | null\n    _max: Study_planner_studentsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_studentsMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    name: string | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_studentsMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    name: string | null\n    status: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_studentsCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    name: number\n    status: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_studentsMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    name?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_studentsMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    name?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_studentsCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    name?: true\n    status?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_studentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_students to aggregate.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_students\n    **/\n    _count?: true | Study_planner_studentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_studentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_studentsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_studentsAggregateType<T extends Study_planner_studentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_students]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_students[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_students[P]>\n  }\n\n\n\n\n  export type study_planner_studentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_studentsWhereInput\n    orderBy?: study_planner_studentsOrderByWithAggregationInput | study_planner_studentsOrderByWithAggregationInput[]\n    by: Study_planner_studentsScalarFieldEnum[] | Study_planner_studentsScalarFieldEnum\n    having?: study_planner_studentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_studentsCountAggregateInputType | true\n    _min?: Study_planner_studentsMinAggregateInputType\n    _max?: Study_planner_studentsMaxAggregateInputType\n  }\n\n  export type Study_planner_studentsGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_studentsCountAggregateOutputType | null\n    _min: Study_planner_studentsMinAggregateOutputType | null\n    _max: Study_planner_studentsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_studentsGroupByPayload<T extends study_planner_studentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_studentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_studentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_studentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_studentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_studentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    name?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    study_planner_study_tasks?: boolean | study_planner_students$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_alarms?: boolean | study_planner_students$study_planner_alarmsArgs<ExtArgs>\n    study_planner_general_reminders?: boolean | study_planner_students$study_planner_general_remindersArgs<ExtArgs>\n    study_planner_pwa_notifications?: boolean | study_planner_students$study_planner_pwa_notificationsArgs<ExtArgs>\n    _count?: boolean | Study_planner_studentsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_students\"]>\n\n  export type study_planner_studentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    name?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_students\"]>\n\n  export type study_planner_studentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    name?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_students\"]>\n\n  export type study_planner_studentsSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    name?: boolean\n    status?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_studentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"name\" | \"status\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_students\"]>\n  export type study_planner_studentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | study_planner_students$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_alarms?: boolean | study_planner_students$study_planner_alarmsArgs<ExtArgs>\n    study_planner_general_reminders?: boolean | study_planner_students$study_planner_general_remindersArgs<ExtArgs>\n    study_planner_pwa_notifications?: boolean | study_planner_students$study_planner_pwa_notificationsArgs<ExtArgs>\n    _count?: boolean | Study_planner_studentsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_studentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type study_planner_studentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $study_planner_studentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_students\"\n    objects: {\n      study_planner_study_tasks: Prisma.$study_planner_study_tasksPayload<ExtArgs>[]\n      study_planner_alarms: Prisma.$study_planner_alarmsPayload<ExtArgs>[]\n      study_planner_general_reminders: Prisma.$study_planner_general_remindersPayload<ExtArgs>[]\n      study_planner_pwa_notifications: Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Unique email address used for user login and identification.\n       */\n      email: string\n      /**\n       * Hashed password for secure authentication.\n       */\n      password_hash: string\n      /**\n       * Name of the student user for personalization and display.\n       */\n      name: string\n      /**\n       * Account status to indicate if the user is active, suspended, or disabled.\n       */\n      status: string\n      /**\n       * Timestamp when the student account was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the student account was last updated.\n       */\n      updated_at: Date\n      /**\n       * Timestamp for soft deletion to mark the account as deleted without\n       * physical removal.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_students\"]>\n    composites: {}\n  }\n\n  type study_planner_studentsGetPayload<S extends boolean | null | undefined | study_planner_studentsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_studentsPayload, S>\n\n  type study_planner_studentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_studentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_studentsCountAggregateInputType | true\n    }\n\n  export interface study_planner_studentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_students'], meta: { name: 'study_planner_students' } }\n    /**\n     * Find zero or one Study_planner_students that matches the filter.\n     * @param {study_planner_studentsFindUniqueArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_studentsFindUniqueArgs>(args: SelectSubset<T, study_planner_studentsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_students that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_studentsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_studentsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_studentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_students that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsFindFirstArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_studentsFindFirstArgs>(args?: SelectSubset<T, study_planner_studentsFindFirstArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_students that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_studentsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_studentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_students that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findMany()\n     * \n     * // Get first 10 Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_studentsWithIdOnly = await prisma.study_planner_students.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_studentsFindManyArgs>(args?: SelectSubset<T, study_planner_studentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_students.\n     * @param {study_planner_studentsCreateArgs} args - Arguments to create a Study_planner_students.\n     * @example\n     * // Create one Study_planner_students\n     * const Study_planner_students = await prisma.study_planner_students.create({\n     *   data: {\n     *     // ... data to create a Study_planner_students\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_studentsCreateArgs>(args: SelectSubset<T, study_planner_studentsCreateArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_students.\n     * @param {study_planner_studentsCreateManyArgs} args - Arguments to create many Study_planner_students.\n     * @example\n     * // Create many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_studentsCreateManyArgs>(args?: SelectSubset<T, study_planner_studentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_students and returns the data saved in the database.\n     * @param {study_planner_studentsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_students.\n     * @example\n     * // Create many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_students and only return the `id`\n     * const study_planner_studentsWithIdOnly = await prisma.study_planner_students.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_studentsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_studentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_students.\n     * @param {study_planner_studentsDeleteArgs} args - Arguments to delete one Study_planner_students.\n     * @example\n     * // Delete one Study_planner_students\n     * const Study_planner_students = await prisma.study_planner_students.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_students\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_studentsDeleteArgs>(args: SelectSubset<T, study_planner_studentsDeleteArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_students.\n     * @param {study_planner_studentsUpdateArgs} args - Arguments to update one Study_planner_students.\n     * @example\n     * // Update one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_studentsUpdateArgs>(args: SelectSubset<T, study_planner_studentsUpdateArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_students.\n     * @param {study_planner_studentsDeleteManyArgs} args - Arguments to filter Study_planner_students to delete.\n     * @example\n     * // Delete a few Study_planner_students\n     * const { count } = await prisma.study_planner_students.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_studentsDeleteManyArgs>(args?: SelectSubset<T, study_planner_studentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_studentsUpdateManyArgs>(args: SelectSubset<T, study_planner_studentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_students and returns the data updated in the database.\n     * @param {study_planner_studentsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_students.\n     * @example\n     * // Update many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_students and only return the `id`\n     * const study_planner_studentsWithIdOnly = await prisma.study_planner_students.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_studentsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_studentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_students.\n     * @param {study_planner_studentsUpsertArgs} args - Arguments to update or create a Study_planner_students.\n     * @example\n     * // Update or create a Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_students\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_students we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_studentsUpsertArgs>(args: SelectSubset<T, study_planner_studentsUpsertArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsCountArgs} args - Arguments to filter Study_planner_students to count.\n     * @example\n     * // Count the number of Study_planner_students\n     * const count = await prisma.study_planner_students.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_students we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_studentsCountArgs>(\n      args?: Subset<T, study_planner_studentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_studentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_studentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_studentsAggregateArgs>(args: Subset<T, Study_planner_studentsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_studentsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_studentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_studentsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_studentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_studentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_studentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_students model\n   */\n  readonly fields: study_planner_studentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_students.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_studentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    study_planner_study_tasks<T extends study_planner_students$study_planner_study_tasksArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_study_tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_alarms<T extends study_planner_students$study_planner_alarmsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_alarmsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_general_reminders<T extends study_planner_students$study_planner_general_remindersArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_general_remindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_pwa_notifications<T extends study_planner_students$study_planner_pwa_notificationsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_pwa_notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_students model\n   */\n  interface study_planner_studentsFieldRefs {\n    readonly id: FieldRef<\"study_planner_students\", 'String'>\n    readonly email: FieldRef<\"study_planner_students\", 'String'>\n    readonly password_hash: FieldRef<\"study_planner_students\", 'String'>\n    readonly name: FieldRef<\"study_planner_students\", 'String'>\n    readonly status: FieldRef<\"study_planner_students\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_students\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_students\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_students\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_students findUnique\n   */\n  export type study_planner_studentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students findUniqueOrThrow\n   */\n  export type study_planner_studentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students findFirst\n   */\n  export type study_planner_studentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_students.\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_students.\n     */\n    distinct?: Study_planner_studentsScalarFieldEnum | Study_planner_studentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students findFirstOrThrow\n   */\n  export type study_planner_studentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_students.\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_students.\n     */\n    distinct?: Study_planner_studentsScalarFieldEnum | Study_planner_studentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students findMany\n   */\n  export type study_planner_studentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_students.\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    distinct?: Study_planner_studentsScalarFieldEnum | Study_planner_studentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students create\n   */\n  export type study_planner_studentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_students.\n     */\n    data: XOR<study_planner_studentsCreateInput, study_planner_studentsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_students createMany\n   */\n  export type study_planner_studentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_students.\n     */\n    data: study_planner_studentsCreateManyInput | study_planner_studentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_students createManyAndReturn\n   */\n  export type study_planner_studentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_students.\n     */\n    data: study_planner_studentsCreateManyInput | study_planner_studentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_students update\n   */\n  export type study_planner_studentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_students.\n     */\n    data: XOR<study_planner_studentsUpdateInput, study_planner_studentsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_students to update.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students updateMany\n   */\n  export type study_planner_studentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_students.\n     */\n    data: XOR<study_planner_studentsUpdateManyMutationInput, study_planner_studentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_students to update\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * Limit how many study_planner_students to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_students updateManyAndReturn\n   */\n  export type study_planner_studentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_students.\n     */\n    data: XOR<study_planner_studentsUpdateManyMutationInput, study_planner_studentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_students to update\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * Limit how many study_planner_students to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_students upsert\n   */\n  export type study_planner_studentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_students to update in case it exists.\n     */\n    where: study_planner_studentsWhereUniqueInput\n    /**\n     * In case the study_planner_students found by the `where` argument doesn't exist, create a new study_planner_students with this data.\n     */\n    create: XOR<study_planner_studentsCreateInput, study_planner_studentsUncheckedCreateInput>\n    /**\n     * In case the study_planner_students was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_studentsUpdateInput, study_planner_studentsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_students delete\n   */\n  export type study_planner_studentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_students to delete.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students deleteMany\n   */\n  export type study_planner_studentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_students to delete\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * Limit how many study_planner_students to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_students.study_planner_study_tasks\n   */\n  export type study_planner_students$study_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_alarms\n   */\n  export type study_planner_students$study_planner_alarmsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    where?: study_planner_alarmsWhereInput\n    orderBy?: study_planner_alarmsOrderByWithRelationInput | study_planner_alarmsOrderByWithRelationInput[]\n    cursor?: study_planner_alarmsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_alarmsScalarFieldEnum | Study_planner_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_general_reminders\n   */\n  export type study_planner_students$study_planner_general_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    where?: study_planner_general_remindersWhereInput\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_pwa_notifications\n   */\n  export type study_planner_students$study_planner_pwa_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    where?: study_planner_pwa_notificationsWhereInput\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_pwa_notificationsScalarFieldEnum | Study_planner_pwa_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students without action\n   */\n  export type study_planner_studentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_phases\n   */\n\n  export type AggregateStudy_planner_study_phases = {\n    _count: Study_planner_study_phasesCountAggregateOutputType | null\n    _min: Study_planner_study_phasesMinAggregateOutputType | null\n    _max: Study_planner_study_phasesMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_phasesMinAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_phasesMaxAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_phasesCountAggregateOutputType = {\n    id: number\n    code: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_phasesMinAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_phasesMaxAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_phasesCountAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_phasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_phases to aggregate.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_phases\n    **/\n    _count?: true | Study_planner_study_phasesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_phasesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_phasesMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_phasesAggregateType<T extends Study_planner_study_phasesAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_phases]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_phases[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_phases[P]>\n  }\n\n\n\n\n  export type study_planner_study_phasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_phasesWhereInput\n    orderBy?: study_planner_study_phasesOrderByWithAggregationInput | study_planner_study_phasesOrderByWithAggregationInput[]\n    by: Study_planner_study_phasesScalarFieldEnum[] | Study_planner_study_phasesScalarFieldEnum\n    having?: study_planner_study_phasesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_phasesCountAggregateInputType | true\n    _min?: Study_planner_study_phasesMinAggregateInputType\n    _max?: Study_planner_study_phasesMaxAggregateInputType\n  }\n\n  export type Study_planner_study_phasesGroupByOutputType = {\n    id: string\n    code: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_phasesCountAggregateOutputType | null\n    _min: Study_planner_study_phasesMinAggregateOutputType | null\n    _max: Study_planner_study_phasesMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_phasesGroupByPayload<T extends study_planner_study_phasesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_phasesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_phasesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_phasesGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_phasesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_phasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    study_planner_study_tasks?: boolean | study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_phasesCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n\n  export type study_planner_study_phasesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n\n  export type study_planner_study_phasesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n\n  export type study_planner_study_phasesSelectScalar = {\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_phasesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"code\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n  export type study_planner_study_phasesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_phasesCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_phasesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type study_planner_study_phasesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $study_planner_study_phasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_phases\"\n    objects: {\n      study_planner_study_tasks: Prisma.$study_planner_study_tasksPayload<ExtArgs>[]\n      study_planner_study_task_progress: Prisma.$study_planner_study_task_progressPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Unique code identifier for the study phase, e.g., 'preview',\n       * 'main_learning', 'review'.\n       */\n      code: string\n      /**\n       * Human-readable name of the study phase.\n       */\n      name: string\n      /**\n       * Optional detailed description of the study phase.\n       */\n      description: string | null\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n    composites: {}\n  }\n\n  type study_planner_study_phasesGetPayload<S extends boolean | null | undefined | study_planner_study_phasesDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_phasesPayload, S>\n\n  type study_planner_study_phasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_phasesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_phasesCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_phasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_phases'], meta: { name: 'study_planner_study_phases' } }\n    /**\n     * Find zero or one Study_planner_study_phases that matches the filter.\n     * @param {study_planner_study_phasesFindUniqueArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_phasesFindUniqueArgs>(args: SelectSubset<T, study_planner_study_phasesFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_phases that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_phasesFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_phasesFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_phasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_phases that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesFindFirstArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_phasesFindFirstArgs>(args?: SelectSubset<T, study_planner_study_phasesFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_phases that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_phasesFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_phasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_phases that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany()\n     * \n     * // Get first 10 Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_phasesWithIdOnly = await prisma.study_planner_study_phases.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_phasesFindManyArgs>(args?: SelectSubset<T, study_planner_study_phasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_phases.\n     * @param {study_planner_study_phasesCreateArgs} args - Arguments to create a Study_planner_study_phases.\n     * @example\n     * // Create one Study_planner_study_phases\n     * const Study_planner_study_phases = await prisma.study_planner_study_phases.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_phases\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_phasesCreateArgs>(args: SelectSubset<T, study_planner_study_phasesCreateArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_phases.\n     * @param {study_planner_study_phasesCreateManyArgs} args - Arguments to create many Study_planner_study_phases.\n     * @example\n     * // Create many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_phasesCreateManyArgs>(args?: SelectSubset<T, study_planner_study_phasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_phases and returns the data saved in the database.\n     * @param {study_planner_study_phasesCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_phases.\n     * @example\n     * // Create many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_phases and only return the `id`\n     * const study_planner_study_phasesWithIdOnly = await prisma.study_planner_study_phases.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_phasesCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_phasesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_phases.\n     * @param {study_planner_study_phasesDeleteArgs} args - Arguments to delete one Study_planner_study_phases.\n     * @example\n     * // Delete one Study_planner_study_phases\n     * const Study_planner_study_phases = await prisma.study_planner_study_phases.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_phases\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_phasesDeleteArgs>(args: SelectSubset<T, study_planner_study_phasesDeleteArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_phases.\n     * @param {study_planner_study_phasesUpdateArgs} args - Arguments to update one Study_planner_study_phases.\n     * @example\n     * // Update one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_phasesUpdateArgs>(args: SelectSubset<T, study_planner_study_phasesUpdateArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_phases.\n     * @param {study_planner_study_phasesDeleteManyArgs} args - Arguments to filter Study_planner_study_phases to delete.\n     * @example\n     * // Delete a few Study_planner_study_phases\n     * const { count } = await prisma.study_planner_study_phases.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_phasesDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_phasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_phasesUpdateManyArgs>(args: SelectSubset<T, study_planner_study_phasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_phases and returns the data updated in the database.\n     * @param {study_planner_study_phasesUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_phases.\n     * @example\n     * // Update many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_phases and only return the `id`\n     * const study_planner_study_phasesWithIdOnly = await prisma.study_planner_study_phases.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_phasesUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_phasesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_phases.\n     * @param {study_planner_study_phasesUpsertArgs} args - Arguments to update or create a Study_planner_study_phases.\n     * @example\n     * // Update or create a Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_phases\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_phases we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_phasesUpsertArgs>(args: SelectSubset<T, study_planner_study_phasesUpsertArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesCountArgs} args - Arguments to filter Study_planner_study_phases to count.\n     * @example\n     * // Count the number of Study_planner_study_phases\n     * const count = await prisma.study_planner_study_phases.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_phases we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_phasesCountArgs>(\n      args?: Subset<T, study_planner_study_phasesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_phasesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_phasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_phasesAggregateArgs>(args: Subset<T, Study_planner_study_phasesAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_phasesAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_phasesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_phasesGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_phasesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_phasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_phasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_phases model\n   */\n  readonly fields: study_planner_study_phasesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_phases.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_phasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    study_planner_study_tasks<T extends study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_task_progress<T extends study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_phases model\n   */\n  interface study_planner_study_phasesFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly code: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly name: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly description: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_phases\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_phases\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_phases findUnique\n   */\n  export type study_planner_study_phasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases findUniqueOrThrow\n   */\n  export type study_planner_study_phasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases findFirst\n   */\n  export type study_planner_study_phasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_phases.\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_phases.\n     */\n    distinct?: Study_planner_study_phasesScalarFieldEnum | Study_planner_study_phasesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases findFirstOrThrow\n   */\n  export type study_planner_study_phasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_phases.\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_phases.\n     */\n    distinct?: Study_planner_study_phasesScalarFieldEnum | Study_planner_study_phasesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases findMany\n   */\n  export type study_planner_study_phasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_phases.\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    distinct?: Study_planner_study_phasesScalarFieldEnum | Study_planner_study_phasesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases create\n   */\n  export type study_planner_study_phasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesCreateInput, study_planner_study_phasesUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_phases createMany\n   */\n  export type study_planner_study_phasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_phases.\n     */\n    data: study_planner_study_phasesCreateManyInput | study_planner_study_phasesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_phases createManyAndReturn\n   */\n  export type study_planner_study_phasesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_phases.\n     */\n    data: study_planner_study_phasesCreateManyInput | study_planner_study_phasesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_phases update\n   */\n  export type study_planner_study_phasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesUpdateInput, study_planner_study_phasesUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_phases to update.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases updateMany\n   */\n  export type study_planner_study_phasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesUpdateManyMutationInput, study_planner_study_phasesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_phases to update\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * Limit how many study_planner_study_phases to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_phases updateManyAndReturn\n   */\n  export type study_planner_study_phasesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesUpdateManyMutationInput, study_planner_study_phasesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_phases to update\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * Limit how many study_planner_study_phases to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_phases upsert\n   */\n  export type study_planner_study_phasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_phases to update in case it exists.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n    /**\n     * In case the study_planner_study_phases found by the `where` argument doesn't exist, create a new study_planner_study_phases with this data.\n     */\n    create: XOR<study_planner_study_phasesCreateInput, study_planner_study_phasesUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_phases was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_phasesUpdateInput, study_planner_study_phasesUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_phases delete\n   */\n  export type study_planner_study_phasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_phases to delete.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases deleteMany\n   */\n  export type study_planner_study_phasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_phases to delete\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * Limit how many study_planner_study_phases to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_phases.study_planner_study_tasks\n   */\n  export type study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases.study_planner_study_task_progress\n   */\n  export type study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    where?: study_planner_study_task_progressWhereInput\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases without action\n   */\n  export type study_planner_study_phasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_categories\n   */\n\n  export type AggregateStudy_planner_study_categories = {\n    _count: Study_planner_study_categoriesCountAggregateOutputType | null\n    _min: Study_planner_study_categoriesMinAggregateOutputType | null\n    _max: Study_planner_study_categoriesMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_categoriesMinAggregateOutputType = {\n    id: string | null\n    parent_category_id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_categoriesMaxAggregateOutputType = {\n    id: string | null\n    parent_category_id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_categoriesCountAggregateOutputType = {\n    id: number\n    parent_category_id: number\n    code: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_categoriesMinAggregateInputType = {\n    id?: true\n    parent_category_id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_categoriesMaxAggregateInputType = {\n    id?: true\n    parent_category_id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_categoriesCountAggregateInputType = {\n    id?: true\n    parent_category_id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_categories to aggregate.\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_categories to fetch.\n     */\n    orderBy?: study_planner_study_categoriesOrderByWithRelationInput | study_planner_study_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_categories\n    **/\n    _count?: true | Study_planner_study_categoriesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_categoriesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_categoriesMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_categoriesAggregateType<T extends Study_planner_study_categoriesAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_categories]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_categories[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_categories[P]>\n  }\n\n\n\n\n  export type study_planner_study_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_categoriesWhereInput\n    orderBy?: study_planner_study_categoriesOrderByWithAggregationInput | study_planner_study_categoriesOrderByWithAggregationInput[]\n    by: Study_planner_study_categoriesScalarFieldEnum[] | Study_planner_study_categoriesScalarFieldEnum\n    having?: study_planner_study_categoriesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_categoriesCountAggregateInputType | true\n    _min?: Study_planner_study_categoriesMinAggregateInputType\n    _max?: Study_planner_study_categoriesMaxAggregateInputType\n  }\n\n  export type Study_planner_study_categoriesGroupByOutputType = {\n    id: string\n    parent_category_id: string | null\n    code: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_categoriesCountAggregateOutputType | null\n    _min: Study_planner_study_categoriesMinAggregateOutputType | null\n    _max: Study_planner_study_categoriesMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_categoriesGroupByPayload<T extends study_planner_study_categoriesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_categoriesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_categoriesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_categoriesGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_categoriesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    parent_category_id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    parentCategory?: boolean | study_planner_study_categories$parentCategoryArgs<ExtArgs>\n    recursive?: boolean | study_planner_study_categories$recursiveArgs<ExtArgs>\n    study_planner_study_tasks?: boolean | study_planner_study_categories$study_planner_study_tasksArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_categoriesCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_categories\"]>\n\n  export type study_planner_study_categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    parent_category_id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    parentCategory?: boolean | study_planner_study_categories$parentCategoryArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_categories\"]>\n\n  export type study_planner_study_categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    parent_category_id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    parentCategory?: boolean | study_planner_study_categories$parentCategoryArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_categories\"]>\n\n  export type study_planner_study_categoriesSelectScalar = {\n    id?: boolean\n    parent_category_id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"parent_category_id\" | \"code\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_categories\"]>\n  export type study_planner_study_categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    parentCategory?: boolean | study_planner_study_categories$parentCategoryArgs<ExtArgs>\n    recursive?: boolean | study_planner_study_categories$recursiveArgs<ExtArgs>\n    study_planner_study_tasks?: boolean | study_planner_study_categories$study_planner_study_tasksArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_categoriesCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    parentCategory?: boolean | study_planner_study_categories$parentCategoryArgs<ExtArgs>\n  }\n  export type study_planner_study_categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    parentCategory?: boolean | study_planner_study_categories$parentCategoryArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_categories\"\n    objects: {\n      parentCategory: Prisma.$study_planner_study_categoriesPayload<ExtArgs> | null\n      recursive: Prisma.$study_planner_study_categoriesPayload<ExtArgs>[]\n      study_planner_study_tasks: Prisma.$study_planner_study_tasksPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Optional parent category for hierarchical categorization. References\n       * parent category's {@link study_planner_study_categories.id}.\n       */\n      parent_category_id: string | null\n      /**\n       * Unique code identifier for the category, e.g., 'english_grammar',\n       * 'english_vocabulary'.\n       */\n      code: string\n      /**\n       * Name of the category.\n       */\n      name: string\n      /**\n       * Optional detailed description of the study category.\n       */\n      description: string | null\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_categories\"]>\n    composites: {}\n  }\n\n  type study_planner_study_categoriesGetPayload<S extends boolean | null | undefined | study_planner_study_categoriesDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_categoriesPayload, S>\n\n  type study_planner_study_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_categoriesCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_categories'], meta: { name: 'study_planner_study_categories' } }\n    /**\n     * Find zero or one Study_planner_study_categories that matches the filter.\n     * @param {study_planner_study_categoriesFindUniqueArgs} args - Arguments to find a Study_planner_study_categories\n     * @example\n     * // Get one Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_categoriesFindUniqueArgs>(args: SelectSubset<T, study_planner_study_categoriesFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_categories that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_categories\n     * @example\n     * // Get one Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_categoriesFindFirstArgs} args - Arguments to find a Study_planner_study_categories\n     * @example\n     * // Get one Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_categoriesFindFirstArgs>(args?: SelectSubset<T, study_planner_study_categoriesFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_categories that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_categoriesFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_categories\n     * @example\n     * // Get one Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.findMany()\n     * \n     * // Get first 10 Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_categoriesWithIdOnly = await prisma.study_planner_study_categories.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_categoriesFindManyArgs>(args?: SelectSubset<T, study_planner_study_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_categories.\n     * @param {study_planner_study_categoriesCreateArgs} args - Arguments to create a Study_planner_study_categories.\n     * @example\n     * // Create one Study_planner_study_categories\n     * const Study_planner_study_categories = await prisma.study_planner_study_categories.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_categories\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_categoriesCreateArgs>(args: SelectSubset<T, study_planner_study_categoriesCreateArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_categories.\n     * @param {study_planner_study_categoriesCreateManyArgs} args - Arguments to create many Study_planner_study_categories.\n     * @example\n     * // Create many Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_categoriesCreateManyArgs>(args?: SelectSubset<T, study_planner_study_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_categories and returns the data saved in the database.\n     * @param {study_planner_study_categoriesCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_categories.\n     * @example\n     * // Create many Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_categories and only return the `id`\n     * const study_planner_study_categoriesWithIdOnly = await prisma.study_planner_study_categories.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_categories.\n     * @param {study_planner_study_categoriesDeleteArgs} args - Arguments to delete one Study_planner_study_categories.\n     * @example\n     * // Delete one Study_planner_study_categories\n     * const Study_planner_study_categories = await prisma.study_planner_study_categories.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_categories\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_categoriesDeleteArgs>(args: SelectSubset<T, study_planner_study_categoriesDeleteArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_categories.\n     * @param {study_planner_study_categoriesUpdateArgs} args - Arguments to update one Study_planner_study_categories.\n     * @example\n     * // Update one Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_categoriesUpdateArgs>(args: SelectSubset<T, study_planner_study_categoriesUpdateArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_categories.\n     * @param {study_planner_study_categoriesDeleteManyArgs} args - Arguments to filter Study_planner_study_categories to delete.\n     * @example\n     * // Delete a few Study_planner_study_categories\n     * const { count } = await prisma.study_planner_study_categories.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_categoriesDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_categoriesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_categoriesUpdateManyArgs>(args: SelectSubset<T, study_planner_study_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_categories and returns the data updated in the database.\n     * @param {study_planner_study_categoriesUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_categories.\n     * @example\n     * // Update many Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_categories and only return the `id`\n     * const study_planner_study_categoriesWithIdOnly = await prisma.study_planner_study_categories.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_categories.\n     * @param {study_planner_study_categoriesUpsertArgs} args - Arguments to update or create a Study_planner_study_categories.\n     * @example\n     * // Update or create a Study_planner_study_categories\n     * const study_planner_study_categories = await prisma.study_planner_study_categories.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_categories\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_categories we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_categoriesUpsertArgs>(args: SelectSubset<T, study_planner_study_categoriesUpsertArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_categoriesCountArgs} args - Arguments to filter Study_planner_study_categories to count.\n     * @example\n     * // Count the number of Study_planner_study_categories\n     * const count = await prisma.study_planner_study_categories.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_categories we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_categoriesCountArgs>(\n      args?: Subset<T, study_planner_study_categoriesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_categoriesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_categoriesAggregateArgs>(args: Subset<T, Study_planner_study_categoriesAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_categoriesAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_categoriesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_categoriesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_categoriesGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_categoriesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_categories model\n   */\n  readonly fields: study_planner_study_categoriesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_categories.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    parentCategory<T extends study_planner_study_categories$parentCategoryArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_categories$parentCategoryArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    recursive<T extends study_planner_study_categories$recursiveArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_categories$recursiveArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_tasks<T extends study_planner_study_categories$study_planner_study_tasksArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_categories$study_planner_study_tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_categories model\n   */\n  interface study_planner_study_categoriesFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_categories\", 'String'>\n    readonly parent_category_id: FieldRef<\"study_planner_study_categories\", 'String'>\n    readonly code: FieldRef<\"study_planner_study_categories\", 'String'>\n    readonly name: FieldRef<\"study_planner_study_categories\", 'String'>\n    readonly description: FieldRef<\"study_planner_study_categories\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_categories\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_categories\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_categories findUnique\n   */\n  export type study_planner_study_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_categories to fetch.\n     */\n    where: study_planner_study_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_categories findUniqueOrThrow\n   */\n  export type study_planner_study_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_categories to fetch.\n     */\n    where: study_planner_study_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_categories findFirst\n   */\n  export type study_planner_study_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_categories to fetch.\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_categories to fetch.\n     */\n    orderBy?: study_planner_study_categoriesOrderByWithRelationInput | study_planner_study_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_categories.\n     */\n    cursor?: study_planner_study_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_categories.\n     */\n    distinct?: Study_planner_study_categoriesScalarFieldEnum | Study_planner_study_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_categories findFirstOrThrow\n   */\n  export type study_planner_study_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_categories to fetch.\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_categories to fetch.\n     */\n    orderBy?: study_planner_study_categoriesOrderByWithRelationInput | study_planner_study_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_categories.\n     */\n    cursor?: study_planner_study_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_categories.\n     */\n    distinct?: Study_planner_study_categoriesScalarFieldEnum | Study_planner_study_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_categories findMany\n   */\n  export type study_planner_study_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_categories to fetch.\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_categories to fetch.\n     */\n    orderBy?: study_planner_study_categoriesOrderByWithRelationInput | study_planner_study_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_categories.\n     */\n    cursor?: study_planner_study_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_categories.\n     */\n    skip?: number\n    distinct?: Study_planner_study_categoriesScalarFieldEnum | Study_planner_study_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_categories create\n   */\n  export type study_planner_study_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_categories.\n     */\n    data: XOR<study_planner_study_categoriesCreateInput, study_planner_study_categoriesUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_categories createMany\n   */\n  export type study_planner_study_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_categories.\n     */\n    data: study_planner_study_categoriesCreateManyInput | study_planner_study_categoriesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_categories createManyAndReturn\n   */\n  export type study_planner_study_categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_categories.\n     */\n    data: study_planner_study_categoriesCreateManyInput | study_planner_study_categoriesCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_categories update\n   */\n  export type study_planner_study_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_categories.\n     */\n    data: XOR<study_planner_study_categoriesUpdateInput, study_planner_study_categoriesUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_categories to update.\n     */\n    where: study_planner_study_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_categories updateMany\n   */\n  export type study_planner_study_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_categories.\n     */\n    data: XOR<study_planner_study_categoriesUpdateManyMutationInput, study_planner_study_categoriesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_categories to update\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * Limit how many study_planner_study_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_categories updateManyAndReturn\n   */\n  export type study_planner_study_categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_categories.\n     */\n    data: XOR<study_planner_study_categoriesUpdateManyMutationInput, study_planner_study_categoriesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_categories to update\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * Limit how many study_planner_study_categories to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_categories upsert\n   */\n  export type study_planner_study_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_categories to update in case it exists.\n     */\n    where: study_planner_study_categoriesWhereUniqueInput\n    /**\n     * In case the study_planner_study_categories found by the `where` argument doesn't exist, create a new study_planner_study_categories with this data.\n     */\n    create: XOR<study_planner_study_categoriesCreateInput, study_planner_study_categoriesUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_categories was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_categoriesUpdateInput, study_planner_study_categoriesUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_categories delete\n   */\n  export type study_planner_study_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_categories to delete.\n     */\n    where: study_planner_study_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_categories deleteMany\n   */\n  export type study_planner_study_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_categories to delete\n     */\n    where?: study_planner_study_categoriesWhereInput\n    /**\n     * Limit how many study_planner_study_categories to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_categories.parentCategory\n   */\n  export type study_planner_study_categories$parentCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    where?: study_planner_study_categoriesWhereInput\n  }\n\n  /**\n   * study_planner_study_categories.recursive\n   */\n  export type study_planner_study_categories$recursiveArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n    where?: study_planner_study_categoriesWhereInput\n    orderBy?: study_planner_study_categoriesOrderByWithRelationInput | study_planner_study_categoriesOrderByWithRelationInput[]\n    cursor?: study_planner_study_categoriesWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_categoriesScalarFieldEnum | Study_planner_study_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_categories.study_planner_study_tasks\n   */\n  export type study_planner_study_categories$study_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_categories without action\n   */\n  export type study_planner_study_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_categories\n     */\n    select?: study_planner_study_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_categories\n     */\n    omit?: study_planner_study_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_categoriesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_tasks\n   */\n\n  export type AggregateStudy_planner_study_tasks = {\n    _count: Study_planner_study_tasksCountAggregateOutputType | null\n    _min: Study_planner_study_tasksMinAggregateOutputType | null\n    _max: Study_planner_study_tasksMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_tasksMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_phase_id: string | null\n    study_category_id: string | null\n    title: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_study_tasksMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_phase_id: string | null\n    study_category_id: string | null\n    title: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_study_tasksCountAggregateOutputType = {\n    id: number\n    student_id: number\n    study_phase_id: number\n    study_category_id: number\n    title: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_tasksMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    study_category_id?: true\n    title?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_study_tasksMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    study_category_id?: true\n    title?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_study_tasksCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    study_category_id?: true\n    title?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_tasksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_tasks to aggregate.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_tasks\n    **/\n    _count?: true | Study_planner_study_tasksCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_tasksMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_tasksMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_tasksAggregateType<T extends Study_planner_study_tasksAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_tasks]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_tasks[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_tasks[P]>\n  }\n\n\n\n\n  export type study_planner_study_tasksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithAggregationInput | study_planner_study_tasksOrderByWithAggregationInput[]\n    by: Study_planner_study_tasksScalarFieldEnum[] | Study_planner_study_tasksScalarFieldEnum\n    having?: study_planner_study_tasksScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_tasksCountAggregateInputType | true\n    _min?: Study_planner_study_tasksMinAggregateInputType\n    _max?: Study_planner_study_tasksMaxAggregateInputType\n  }\n\n  export type Study_planner_study_tasksGroupByOutputType = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_study_tasksCountAggregateOutputType | null\n    _min: Study_planner_study_tasksMinAggregateOutputType | null\n    _max: Study_planner_study_tasksMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_tasksGroupByPayload<T extends study_planner_study_tasksGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_tasksGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_tasksGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_tasksGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_tasksGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_tasksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    study_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    studyCategory?: boolean | study_planner_study_categoriesDefaultArgs<ExtArgs>\n    study_planner_study_task_attachments?: boolean | study_planner_study_tasks$study_planner_study_task_attachmentsArgs<ExtArgs>\n    study_planner_study_task_memos?: boolean | study_planner_study_tasks$study_planner_study_task_memosArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_tasksCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n\n  export type study_planner_study_tasksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    study_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    studyCategory?: boolean | study_planner_study_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n\n  export type study_planner_study_tasksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    study_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    studyCategory?: boolean | study_planner_study_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n\n  export type study_planner_study_tasksSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    study_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_study_tasksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"study_phase_id\" | \"study_category_id\" | \"title\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n  export type study_planner_study_tasksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    studyCategory?: boolean | study_planner_study_categoriesDefaultArgs<ExtArgs>\n    study_planner_study_task_attachments?: boolean | study_planner_study_tasks$study_planner_study_task_attachmentsArgs<ExtArgs>\n    study_planner_study_task_memos?: boolean | study_planner_study_tasks$study_planner_study_task_memosArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_tasksCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_tasksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    studyCategory?: boolean | study_planner_study_categoriesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_tasksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    studyCategory?: boolean | study_planner_study_categoriesDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_tasksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_tasks\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      studyPhase: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n      studyCategory: Prisma.$study_planner_study_categoriesPayload<ExtArgs>\n      study_planner_study_task_attachments: Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>[]\n      study_planner_study_task_memos: Prisma.$study_planner_study_task_memosPayload<ExtArgs>[]\n      study_planner_study_task_progress: Prisma.$study_planner_study_task_progressPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Owning student's {@link study_planner_students.id}.\n       */\n      student_id: string\n      /**\n       * Associated study phase {@link study_planner_study_phases.id}.\n       */\n      study_phase_id: string\n      /**\n       * Associated category {@link study_planner_study_categories.id}.\n       */\n      study_category_id: string\n      /**\n       * Title of the study task.\n       */\n      title: string\n      /**\n       * Detailed description of the study task.\n       */\n      description: string | null\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n      /**\n       * Soft deletion timestamp for recovery.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n    composites: {}\n  }\n\n  type study_planner_study_tasksGetPayload<S extends boolean | null | undefined | study_planner_study_tasksDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_tasksPayload, S>\n\n  type study_planner_study_tasksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_tasksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_tasksCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_tasksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_tasks'], meta: { name: 'study_planner_study_tasks' } }\n    /**\n     * Find zero or one Study_planner_study_tasks that matches the filter.\n     * @param {study_planner_study_tasksFindUniqueArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_tasksFindUniqueArgs>(args: SelectSubset<T, study_planner_study_tasksFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_tasks that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_tasksFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_tasksFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_tasksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_tasks that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksFindFirstArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_tasksFindFirstArgs>(args?: SelectSubset<T, study_planner_study_tasksFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_tasks that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_tasksFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_tasksFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_tasks that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findMany()\n     * \n     * // Get first 10 Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_tasksWithIdOnly = await prisma.study_planner_study_tasks.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_tasksFindManyArgs>(args?: SelectSubset<T, study_planner_study_tasksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_tasks.\n     * @param {study_planner_study_tasksCreateArgs} args - Arguments to create a Study_planner_study_tasks.\n     * @example\n     * // Create one Study_planner_study_tasks\n     * const Study_planner_study_tasks = await prisma.study_planner_study_tasks.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_tasks\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_tasksCreateArgs>(args: SelectSubset<T, study_planner_study_tasksCreateArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_tasks.\n     * @param {study_planner_study_tasksCreateManyArgs} args - Arguments to create many Study_planner_study_tasks.\n     * @example\n     * // Create many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_tasksCreateManyArgs>(args?: SelectSubset<T, study_planner_study_tasksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_tasks and returns the data saved in the database.\n     * @param {study_planner_study_tasksCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_tasks.\n     * @example\n     * // Create many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_tasks and only return the `id`\n     * const study_planner_study_tasksWithIdOnly = await prisma.study_planner_study_tasks.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_tasksCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_tasksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_tasks.\n     * @param {study_planner_study_tasksDeleteArgs} args - Arguments to delete one Study_planner_study_tasks.\n     * @example\n     * // Delete one Study_planner_study_tasks\n     * const Study_planner_study_tasks = await prisma.study_planner_study_tasks.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_tasks\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_tasksDeleteArgs>(args: SelectSubset<T, study_planner_study_tasksDeleteArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_tasks.\n     * @param {study_planner_study_tasksUpdateArgs} args - Arguments to update one Study_planner_study_tasks.\n     * @example\n     * // Update one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_tasksUpdateArgs>(args: SelectSubset<T, study_planner_study_tasksUpdateArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_tasks.\n     * @param {study_planner_study_tasksDeleteManyArgs} args - Arguments to filter Study_planner_study_tasks to delete.\n     * @example\n     * // Delete a few Study_planner_study_tasks\n     * const { count } = await prisma.study_planner_study_tasks.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_tasksDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_tasksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_tasksUpdateManyArgs>(args: SelectSubset<T, study_planner_study_tasksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_tasks and returns the data updated in the database.\n     * @param {study_planner_study_tasksUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_tasks.\n     * @example\n     * // Update many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_tasks and only return the `id`\n     * const study_planner_study_tasksWithIdOnly = await prisma.study_planner_study_tasks.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_tasksUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_tasksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_tasks.\n     * @param {study_planner_study_tasksUpsertArgs} args - Arguments to update or create a Study_planner_study_tasks.\n     * @example\n     * // Update or create a Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_tasks\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_tasks we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_tasksUpsertArgs>(args: SelectSubset<T, study_planner_study_tasksUpsertArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksCountArgs} args - Arguments to filter Study_planner_study_tasks to count.\n     * @example\n     * // Count the number of Study_planner_study_tasks\n     * const count = await prisma.study_planner_study_tasks.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_tasks we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_tasksCountArgs>(\n      args?: Subset<T, study_planner_study_tasksCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_tasksCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_tasksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_tasksAggregateArgs>(args: Subset<T, Study_planner_study_tasksAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_tasksAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_tasksGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_tasksGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_tasksGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_tasksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_tasksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_tasks model\n   */\n  readonly fields: study_planner_study_tasksFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_tasks.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_tasksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyPhase<T extends study_planner_study_phasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phasesDefaultArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyCategory<T extends study_planner_study_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_categoriesDefaultArgs<ExtArgs>>): Prisma__study_planner_study_categoriesClient<$Result.GetResult<Prisma.$study_planner_study_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    study_planner_study_task_attachments<T extends study_planner_study_tasks$study_planner_study_task_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_study_task_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_task_memos<T extends study_planner_study_tasks$study_planner_study_task_memosArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_study_task_memosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_task_progress<T extends study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_tasks model\n   */\n  interface study_planner_study_tasksFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly study_phase_id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly study_category_id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly title: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly description: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_tasks\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_tasks\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_study_tasks\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_tasks findUnique\n   */\n  export type study_planner_study_tasksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks findUniqueOrThrow\n   */\n  export type study_planner_study_tasksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks findFirst\n   */\n  export type study_planner_study_tasksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_tasks.\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_tasks.\n     */\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks findFirstOrThrow\n   */\n  export type study_planner_study_tasksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_tasks.\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_tasks.\n     */\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks findMany\n   */\n  export type study_planner_study_tasksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_tasks.\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks create\n   */\n  export type study_planner_study_tasksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksCreateInput, study_planner_study_tasksUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_tasks createMany\n   */\n  export type study_planner_study_tasksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_tasks.\n     */\n    data: study_planner_study_tasksCreateManyInput | study_planner_study_tasksCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_tasks createManyAndReturn\n   */\n  export type study_planner_study_tasksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_tasks.\n     */\n    data: study_planner_study_tasksCreateManyInput | study_planner_study_tasksCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_tasks update\n   */\n  export type study_planner_study_tasksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksUpdateInput, study_planner_study_tasksUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_tasks to update.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks updateMany\n   */\n  export type study_planner_study_tasksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_tasks to update\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * Limit how many study_planner_study_tasks to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_tasks updateManyAndReturn\n   */\n  export type study_planner_study_tasksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_tasks to update\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * Limit how many study_planner_study_tasks to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_tasks upsert\n   */\n  export type study_planner_study_tasksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_tasks to update in case it exists.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n    /**\n     * In case the study_planner_study_tasks found by the `where` argument doesn't exist, create a new study_planner_study_tasks with this data.\n     */\n    create: XOR<study_planner_study_tasksCreateInput, study_planner_study_tasksUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_tasks was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_tasksUpdateInput, study_planner_study_tasksUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_tasks delete\n   */\n  export type study_planner_study_tasksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_tasks to delete.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks deleteMany\n   */\n  export type study_planner_study_tasksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_tasks to delete\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * Limit how many study_planner_study_tasks to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_study_task_attachments\n   */\n  export type study_planner_study_tasks$study_planner_study_task_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    where?: study_planner_study_task_attachmentsWhereInput\n    orderBy?: study_planner_study_task_attachmentsOrderByWithRelationInput | study_planner_study_task_attachmentsOrderByWithRelationInput[]\n    cursor?: study_planner_study_task_attachmentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_task_attachmentsScalarFieldEnum | Study_planner_study_task_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_study_task_memos\n   */\n  export type study_planner_study_tasks$study_planner_study_task_memosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    where?: study_planner_study_task_memosWhereInput\n    orderBy?: study_planner_study_task_memosOrderByWithRelationInput | study_planner_study_task_memosOrderByWithRelationInput[]\n    cursor?: study_planner_study_task_memosWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_task_memosScalarFieldEnum | Study_planner_study_task_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_study_task_progress\n   */\n  export type study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    where?: study_planner_study_task_progressWhereInput\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks without action\n   */\n  export type study_planner_study_tasksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_task_attachments\n   */\n\n  export type AggregateStudy_planner_study_task_attachments = {\n    _count: Study_planner_study_task_attachmentsCountAggregateOutputType | null\n    _avg: Study_planner_study_task_attachmentsAvgAggregateOutputType | null\n    _sum: Study_planner_study_task_attachmentsSumAggregateOutputType | null\n    _min: Study_planner_study_task_attachmentsMinAggregateOutputType | null\n    _max: Study_planner_study_task_attachmentsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_task_attachmentsAvgAggregateOutputType = {\n    file_size: number | null\n  }\n\n  export type Study_planner_study_task_attachmentsSumAggregateOutputType = {\n    file_size: number | null\n  }\n\n  export type Study_planner_study_task_attachmentsMinAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    file_name: string | null\n    file_type: string | null\n    file_size: number | null\n    file_uri: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_attachmentsMaxAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    file_name: string | null\n    file_type: string | null\n    file_size: number | null\n    file_uri: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_attachmentsCountAggregateOutputType = {\n    id: number\n    study_task_id: number\n    file_name: number\n    file_type: number\n    file_size: number\n    file_uri: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_task_attachmentsAvgAggregateInputType = {\n    file_size?: true\n  }\n\n  export type Study_planner_study_task_attachmentsSumAggregateInputType = {\n    file_size?: true\n  }\n\n  export type Study_planner_study_task_attachmentsMinAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    file_name?: true\n    file_type?: true\n    file_size?: true\n    file_uri?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_attachmentsMaxAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    file_name?: true\n    file_type?: true\n    file_size?: true\n    file_uri?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_attachmentsCountAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    file_name?: true\n    file_type?: true\n    file_size?: true\n    file_uri?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_task_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_attachments to aggregate.\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_attachments to fetch.\n     */\n    orderBy?: study_planner_study_task_attachmentsOrderByWithRelationInput | study_planner_study_task_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_task_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_task_attachments\n    **/\n    _count?: true | Study_planner_study_task_attachmentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Study_planner_study_task_attachmentsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Study_planner_study_task_attachmentsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_task_attachmentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_task_attachmentsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_task_attachmentsAggregateType<T extends Study_planner_study_task_attachmentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_task_attachments]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_task_attachments[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_task_attachments[P]>\n  }\n\n\n\n\n  export type study_planner_study_task_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_attachmentsWhereInput\n    orderBy?: study_planner_study_task_attachmentsOrderByWithAggregationInput | study_planner_study_task_attachmentsOrderByWithAggregationInput[]\n    by: Study_planner_study_task_attachmentsScalarFieldEnum[] | Study_planner_study_task_attachmentsScalarFieldEnum\n    having?: study_planner_study_task_attachmentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_task_attachmentsCountAggregateInputType | true\n    _avg?: Study_planner_study_task_attachmentsAvgAggregateInputType\n    _sum?: Study_planner_study_task_attachmentsSumAggregateInputType\n    _min?: Study_planner_study_task_attachmentsMinAggregateInputType\n    _max?: Study_planner_study_task_attachmentsMaxAggregateInputType\n  }\n\n  export type Study_planner_study_task_attachmentsGroupByOutputType = {\n    id: string\n    study_task_id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_task_attachmentsCountAggregateOutputType | null\n    _avg: Study_planner_study_task_attachmentsAvgAggregateOutputType | null\n    _sum: Study_planner_study_task_attachmentsSumAggregateOutputType | null\n    _min: Study_planner_study_task_attachmentsMinAggregateOutputType | null\n    _max: Study_planner_study_task_attachmentsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_task_attachmentsGroupByPayload<T extends study_planner_study_task_attachmentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_task_attachmentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_task_attachmentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_task_attachmentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_task_attachmentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_task_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    file_name?: boolean\n    file_type?: boolean\n    file_size?: boolean\n    file_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_attachments\"]>\n\n  export type study_planner_study_task_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    file_name?: boolean\n    file_type?: boolean\n    file_size?: boolean\n    file_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_attachments\"]>\n\n  export type study_planner_study_task_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    file_name?: boolean\n    file_type?: boolean\n    file_size?: boolean\n    file_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_attachments\"]>\n\n  export type study_planner_study_task_attachmentsSelectScalar = {\n    id?: boolean\n    study_task_id?: boolean\n    file_name?: boolean\n    file_type?: boolean\n    file_size?: boolean\n    file_uri?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_task_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"study_task_id\" | \"file_name\" | \"file_type\" | \"file_size\" | \"file_uri\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_task_attachments\"]>\n  export type study_planner_study_task_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_task_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_task_attachments\"\n    objects: {\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Linked study task {@link study_planner_study_tasks.id}.\n       */\n      study_task_id: string\n      /**\n       * Original file name of the attachment.\n       */\n      file_name: string\n      /**\n       * MIME type of the attachment file.\n       */\n      file_type: string\n      /**\n       * File size in bytes.\n       */\n      file_size: number\n      /**\n       * URI path to the stored file.\n       */\n      file_uri: string\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_task_attachments\"]>\n    composites: {}\n  }\n\n  type study_planner_study_task_attachmentsGetPayload<S extends boolean | null | undefined | study_planner_study_task_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload, S>\n\n  type study_planner_study_task_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_task_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_task_attachmentsCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_task_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_task_attachments'], meta: { name: 'study_planner_study_task_attachments' } }\n    /**\n     * Find zero or one Study_planner_study_task_attachments that matches the filter.\n     * @param {study_planner_study_task_attachmentsFindUniqueArgs} args - Arguments to find a Study_planner_study_task_attachments\n     * @example\n     * // Get one Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_task_attachmentsFindUniqueArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_task_attachments that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_task_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_task_attachments\n     * @example\n     * // Get one Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_task_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_attachments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_attachmentsFindFirstArgs} args - Arguments to find a Study_planner_study_task_attachments\n     * @example\n     * // Get one Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_task_attachmentsFindFirstArgs>(args?: SelectSubset<T, study_planner_study_task_attachmentsFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_attachments that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_task_attachments\n     * @example\n     * // Get one Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_task_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_task_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_task_attachments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findMany()\n     * \n     * // Get first 10 Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_task_attachmentsWithIdOnly = await prisma.study_planner_study_task_attachments.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_task_attachmentsFindManyArgs>(args?: SelectSubset<T, study_planner_study_task_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_task_attachments.\n     * @param {study_planner_study_task_attachmentsCreateArgs} args - Arguments to create a Study_planner_study_task_attachments.\n     * @example\n     * // Create one Study_planner_study_task_attachments\n     * const Study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_task_attachments\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_task_attachmentsCreateArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsCreateArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_task_attachments.\n     * @param {study_planner_study_task_attachmentsCreateManyArgs} args - Arguments to create many Study_planner_study_task_attachments.\n     * @example\n     * // Create many Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_task_attachmentsCreateManyArgs>(args?: SelectSubset<T, study_planner_study_task_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_task_attachments and returns the data saved in the database.\n     * @param {study_planner_study_task_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_task_attachments.\n     * @example\n     * // Create many Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_task_attachments and only return the `id`\n     * const study_planner_study_task_attachmentsWithIdOnly = await prisma.study_planner_study_task_attachments.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_task_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_task_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_task_attachments.\n     * @param {study_planner_study_task_attachmentsDeleteArgs} args - Arguments to delete one Study_planner_study_task_attachments.\n     * @example\n     * // Delete one Study_planner_study_task_attachments\n     * const Study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_task_attachments\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_task_attachmentsDeleteArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsDeleteArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_task_attachments.\n     * @param {study_planner_study_task_attachmentsUpdateArgs} args - Arguments to update one Study_planner_study_task_attachments.\n     * @example\n     * // Update one Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_task_attachmentsUpdateArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsUpdateArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_task_attachments.\n     * @param {study_planner_study_task_attachmentsDeleteManyArgs} args - Arguments to filter Study_planner_study_task_attachments to delete.\n     * @example\n     * // Delete a few Study_planner_study_task_attachments\n     * const { count } = await prisma.study_planner_study_task_attachments.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_task_attachmentsDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_task_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_task_attachmentsUpdateManyArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_attachments and returns the data updated in the database.\n     * @param {study_planner_study_task_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_task_attachments.\n     * @example\n     * // Update many Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_task_attachments and only return the `id`\n     * const study_planner_study_task_attachmentsWithIdOnly = await prisma.study_planner_study_task_attachments.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_task_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_task_attachments.\n     * @param {study_planner_study_task_attachmentsUpsertArgs} args - Arguments to update or create a Study_planner_study_task_attachments.\n     * @example\n     * // Update or create a Study_planner_study_task_attachments\n     * const study_planner_study_task_attachments = await prisma.study_planner_study_task_attachments.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_task_attachments\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_attachments we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_task_attachmentsUpsertArgs>(args: SelectSubset<T, study_planner_study_task_attachmentsUpsertArgs<ExtArgs>>): Prisma__study_planner_study_task_attachmentsClient<$Result.GetResult<Prisma.$study_planner_study_task_attachmentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_task_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_attachmentsCountArgs} args - Arguments to filter Study_planner_study_task_attachments to count.\n     * @example\n     * // Count the number of Study_planner_study_task_attachments\n     * const count = await prisma.study_planner_study_task_attachments.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_attachments we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_task_attachmentsCountArgs>(\n      args?: Subset<T, study_planner_study_task_attachmentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_task_attachmentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_task_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_task_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_task_attachmentsAggregateArgs>(args: Subset<T, Study_planner_study_task_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_task_attachmentsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_task_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_attachmentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_task_attachmentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_task_attachmentsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_task_attachmentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_task_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_task_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_task_attachments model\n   */\n  readonly fields: study_planner_study_task_attachmentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_task_attachments.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_task_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_task_attachments model\n   */\n  interface study_planner_study_task_attachmentsFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_task_attachments\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_study_task_attachments\", 'String'>\n    readonly file_name: FieldRef<\"study_planner_study_task_attachments\", 'String'>\n    readonly file_type: FieldRef<\"study_planner_study_task_attachments\", 'String'>\n    readonly file_size: FieldRef<\"study_planner_study_task_attachments\", 'Int'>\n    readonly file_uri: FieldRef<\"study_planner_study_task_attachments\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_task_attachments\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_task_attachments\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_task_attachments findUnique\n   */\n  export type study_planner_study_task_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_attachments to fetch.\n     */\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_attachments findUniqueOrThrow\n   */\n  export type study_planner_study_task_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_attachments to fetch.\n     */\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_attachments findFirst\n   */\n  export type study_planner_study_task_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_attachments to fetch.\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_attachments to fetch.\n     */\n    orderBy?: study_planner_study_task_attachmentsOrderByWithRelationInput | study_planner_study_task_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_attachments.\n     */\n    cursor?: study_planner_study_task_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_attachments.\n     */\n    distinct?: Study_planner_study_task_attachmentsScalarFieldEnum | Study_planner_study_task_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_attachments findFirstOrThrow\n   */\n  export type study_planner_study_task_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_attachments to fetch.\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_attachments to fetch.\n     */\n    orderBy?: study_planner_study_task_attachmentsOrderByWithRelationInput | study_planner_study_task_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_attachments.\n     */\n    cursor?: study_planner_study_task_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_attachments.\n     */\n    distinct?: Study_planner_study_task_attachmentsScalarFieldEnum | Study_planner_study_task_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_attachments findMany\n   */\n  export type study_planner_study_task_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_attachments to fetch.\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_attachments to fetch.\n     */\n    orderBy?: study_planner_study_task_attachmentsOrderByWithRelationInput | study_planner_study_task_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_task_attachments.\n     */\n    cursor?: study_planner_study_task_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_attachments.\n     */\n    skip?: number\n    distinct?: Study_planner_study_task_attachmentsScalarFieldEnum | Study_planner_study_task_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_attachments create\n   */\n  export type study_planner_study_task_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_task_attachments.\n     */\n    data: XOR<study_planner_study_task_attachmentsCreateInput, study_planner_study_task_attachmentsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_task_attachments createMany\n   */\n  export type study_planner_study_task_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_task_attachments.\n     */\n    data: study_planner_study_task_attachmentsCreateManyInput | study_planner_study_task_attachmentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_task_attachments createManyAndReturn\n   */\n  export type study_planner_study_task_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_task_attachments.\n     */\n    data: study_planner_study_task_attachmentsCreateManyInput | study_planner_study_task_attachmentsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_attachments update\n   */\n  export type study_planner_study_task_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_task_attachments.\n     */\n    data: XOR<study_planner_study_task_attachmentsUpdateInput, study_planner_study_task_attachmentsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_task_attachments to update.\n     */\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_attachments updateMany\n   */\n  export type study_planner_study_task_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_task_attachments.\n     */\n    data: XOR<study_planner_study_task_attachmentsUpdateManyMutationInput, study_planner_study_task_attachmentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_attachments to update\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * Limit how many study_planner_study_task_attachments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_attachments updateManyAndReturn\n   */\n  export type study_planner_study_task_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_task_attachments.\n     */\n    data: XOR<study_planner_study_task_attachmentsUpdateManyMutationInput, study_planner_study_task_attachmentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_attachments to update\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * Limit how many study_planner_study_task_attachments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_attachments upsert\n   */\n  export type study_planner_study_task_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_task_attachments to update in case it exists.\n     */\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n    /**\n     * In case the study_planner_study_task_attachments found by the `where` argument doesn't exist, create a new study_planner_study_task_attachments with this data.\n     */\n    create: XOR<study_planner_study_task_attachmentsCreateInput, study_planner_study_task_attachmentsUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_task_attachments was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_task_attachmentsUpdateInput, study_planner_study_task_attachmentsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_task_attachments delete\n   */\n  export type study_planner_study_task_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_task_attachments to delete.\n     */\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_attachments deleteMany\n   */\n  export type study_planner_study_task_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_attachments to delete\n     */\n    where?: study_planner_study_task_attachmentsWhereInput\n    /**\n     * Limit how many study_planner_study_task_attachments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_attachments without action\n   */\n  export type study_planner_study_task_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_attachments\n     */\n    select?: study_planner_study_task_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_attachments\n     */\n    omit?: study_planner_study_task_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_attachmentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_task_memos\n   */\n\n  export type AggregateStudy_planner_study_task_memos = {\n    _count: Study_planner_study_task_memosCountAggregateOutputType | null\n    _min: Study_planner_study_task_memosMinAggregateOutputType | null\n    _max: Study_planner_study_task_memosMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_task_memosMinAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    content: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_memosMaxAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    content: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_memosCountAggregateOutputType = {\n    id: number\n    study_task_id: number\n    content: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_task_memosMinAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_memosMaxAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_memosCountAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    content?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_task_memosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_memos to aggregate.\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_memos to fetch.\n     */\n    orderBy?: study_planner_study_task_memosOrderByWithRelationInput | study_planner_study_task_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_task_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_memos.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_task_memos\n    **/\n    _count?: true | Study_planner_study_task_memosCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_task_memosMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_task_memosMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_task_memosAggregateType<T extends Study_planner_study_task_memosAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_task_memos]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_task_memos[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_task_memos[P]>\n  }\n\n\n\n\n  export type study_planner_study_task_memosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_memosWhereInput\n    orderBy?: study_planner_study_task_memosOrderByWithAggregationInput | study_planner_study_task_memosOrderByWithAggregationInput[]\n    by: Study_planner_study_task_memosScalarFieldEnum[] | Study_planner_study_task_memosScalarFieldEnum\n    having?: study_planner_study_task_memosScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_task_memosCountAggregateInputType | true\n    _min?: Study_planner_study_task_memosMinAggregateInputType\n    _max?: Study_planner_study_task_memosMaxAggregateInputType\n  }\n\n  export type Study_planner_study_task_memosGroupByOutputType = {\n    id: string\n    study_task_id: string\n    content: string\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_task_memosCountAggregateOutputType | null\n    _min: Study_planner_study_task_memosMinAggregateOutputType | null\n    _max: Study_planner_study_task_memosMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_task_memosGroupByPayload<T extends study_planner_study_task_memosGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_task_memosGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_task_memosGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_task_memosGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_task_memosGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_task_memosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_memos\"]>\n\n  export type study_planner_study_task_memosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_memos\"]>\n\n  export type study_planner_study_task_memosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_memos\"]>\n\n  export type study_planner_study_task_memosSelectScalar = {\n    id?: boolean\n    study_task_id?: boolean\n    content?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_task_memosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"study_task_id\" | \"content\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_task_memos\"]>\n  export type study_planner_study_task_memosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_memosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_memosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_task_memosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_task_memos\"\n    objects: {\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Linked study task {@link study_planner_study_tasks.id}.\n       */\n      study_task_id: string\n      /**\n       * Text content of the memo.\n       */\n      content: string\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_task_memos\"]>\n    composites: {}\n  }\n\n  type study_planner_study_task_memosGetPayload<S extends boolean | null | undefined | study_planner_study_task_memosDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_task_memosPayload, S>\n\n  type study_planner_study_task_memosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_task_memosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_task_memosCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_task_memosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_task_memos'], meta: { name: 'study_planner_study_task_memos' } }\n    /**\n     * Find zero or one Study_planner_study_task_memos that matches the filter.\n     * @param {study_planner_study_task_memosFindUniqueArgs} args - Arguments to find a Study_planner_study_task_memos\n     * @example\n     * // Get one Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_task_memosFindUniqueArgs>(args: SelectSubset<T, study_planner_study_task_memosFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_task_memos that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_task_memosFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_task_memos\n     * @example\n     * // Get one Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_task_memosFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_task_memosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_memos that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_memosFindFirstArgs} args - Arguments to find a Study_planner_study_task_memos\n     * @example\n     * // Get one Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_task_memosFindFirstArgs>(args?: SelectSubset<T, study_planner_study_task_memosFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_memos that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_memosFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_task_memos\n     * @example\n     * // Get one Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_task_memosFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_task_memosFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_task_memos that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_memosFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findMany()\n     * \n     * // Get first 10 Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_task_memosWithIdOnly = await prisma.study_planner_study_task_memos.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_task_memosFindManyArgs>(args?: SelectSubset<T, study_planner_study_task_memosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_task_memos.\n     * @param {study_planner_study_task_memosCreateArgs} args - Arguments to create a Study_planner_study_task_memos.\n     * @example\n     * // Create one Study_planner_study_task_memos\n     * const Study_planner_study_task_memos = await prisma.study_planner_study_task_memos.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_task_memos\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_task_memosCreateArgs>(args: SelectSubset<T, study_planner_study_task_memosCreateArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_task_memos.\n     * @param {study_planner_study_task_memosCreateManyArgs} args - Arguments to create many Study_planner_study_task_memos.\n     * @example\n     * // Create many Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_task_memosCreateManyArgs>(args?: SelectSubset<T, study_planner_study_task_memosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_task_memos and returns the data saved in the database.\n     * @param {study_planner_study_task_memosCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_task_memos.\n     * @example\n     * // Create many Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_task_memos and only return the `id`\n     * const study_planner_study_task_memosWithIdOnly = await prisma.study_planner_study_task_memos.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_task_memosCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_task_memosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_task_memos.\n     * @param {study_planner_study_task_memosDeleteArgs} args - Arguments to delete one Study_planner_study_task_memos.\n     * @example\n     * // Delete one Study_planner_study_task_memos\n     * const Study_planner_study_task_memos = await prisma.study_planner_study_task_memos.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_task_memos\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_task_memosDeleteArgs>(args: SelectSubset<T, study_planner_study_task_memosDeleteArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_task_memos.\n     * @param {study_planner_study_task_memosUpdateArgs} args - Arguments to update one Study_planner_study_task_memos.\n     * @example\n     * // Update one Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_task_memosUpdateArgs>(args: SelectSubset<T, study_planner_study_task_memosUpdateArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_task_memos.\n     * @param {study_planner_study_task_memosDeleteManyArgs} args - Arguments to filter Study_planner_study_task_memos to delete.\n     * @example\n     * // Delete a few Study_planner_study_task_memos\n     * const { count } = await prisma.study_planner_study_task_memos.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_task_memosDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_task_memosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_memosUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_task_memosUpdateManyArgs>(args: SelectSubset<T, study_planner_study_task_memosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_memos and returns the data updated in the database.\n     * @param {study_planner_study_task_memosUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_task_memos.\n     * @example\n     * // Update many Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_task_memos and only return the `id`\n     * const study_planner_study_task_memosWithIdOnly = await prisma.study_planner_study_task_memos.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_task_memosUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_task_memosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_task_memos.\n     * @param {study_planner_study_task_memosUpsertArgs} args - Arguments to update or create a Study_planner_study_task_memos.\n     * @example\n     * // Update or create a Study_planner_study_task_memos\n     * const study_planner_study_task_memos = await prisma.study_planner_study_task_memos.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_task_memos\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_memos we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_task_memosUpsertArgs>(args: SelectSubset<T, study_planner_study_task_memosUpsertArgs<ExtArgs>>): Prisma__study_planner_study_task_memosClient<$Result.GetResult<Prisma.$study_planner_study_task_memosPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_task_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_memosCountArgs} args - Arguments to filter Study_planner_study_task_memos to count.\n     * @example\n     * // Count the number of Study_planner_study_task_memos\n     * const count = await prisma.study_planner_study_task_memos.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_memos we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_task_memosCountArgs>(\n      args?: Subset<T, study_planner_study_task_memosCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_task_memosCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_task_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_task_memosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_task_memosAggregateArgs>(args: Subset<T, Study_planner_study_task_memosAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_task_memosAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_task_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_memosGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_task_memosGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_task_memosGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_task_memosGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_task_memosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_task_memosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_task_memos model\n   */\n  readonly fields: study_planner_study_task_memosFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_task_memos.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_task_memosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_task_memos model\n   */\n  interface study_planner_study_task_memosFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_task_memos\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_study_task_memos\", 'String'>\n    readonly content: FieldRef<\"study_planner_study_task_memos\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_task_memos\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_task_memos\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_task_memos findUnique\n   */\n  export type study_planner_study_task_memosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_memos to fetch.\n     */\n    where: study_planner_study_task_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_memos findUniqueOrThrow\n   */\n  export type study_planner_study_task_memosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_memos to fetch.\n     */\n    where: study_planner_study_task_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_memos findFirst\n   */\n  export type study_planner_study_task_memosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_memos to fetch.\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_memos to fetch.\n     */\n    orderBy?: study_planner_study_task_memosOrderByWithRelationInput | study_planner_study_task_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_memos.\n     */\n    cursor?: study_planner_study_task_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_memos.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_memos.\n     */\n    distinct?: Study_planner_study_task_memosScalarFieldEnum | Study_planner_study_task_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_memos findFirstOrThrow\n   */\n  export type study_planner_study_task_memosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_memos to fetch.\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_memos to fetch.\n     */\n    orderBy?: study_planner_study_task_memosOrderByWithRelationInput | study_planner_study_task_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_memos.\n     */\n    cursor?: study_planner_study_task_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_memos.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_memos.\n     */\n    distinct?: Study_planner_study_task_memosScalarFieldEnum | Study_planner_study_task_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_memos findMany\n   */\n  export type study_planner_study_task_memosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_memos to fetch.\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_memos to fetch.\n     */\n    orderBy?: study_planner_study_task_memosOrderByWithRelationInput | study_planner_study_task_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_task_memos.\n     */\n    cursor?: study_planner_study_task_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_memos.\n     */\n    skip?: number\n    distinct?: Study_planner_study_task_memosScalarFieldEnum | Study_planner_study_task_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_memos create\n   */\n  export type study_planner_study_task_memosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_task_memos.\n     */\n    data: XOR<study_planner_study_task_memosCreateInput, study_planner_study_task_memosUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_task_memos createMany\n   */\n  export type study_planner_study_task_memosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_task_memos.\n     */\n    data: study_planner_study_task_memosCreateManyInput | study_planner_study_task_memosCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_task_memos createManyAndReturn\n   */\n  export type study_planner_study_task_memosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_task_memos.\n     */\n    data: study_planner_study_task_memosCreateManyInput | study_planner_study_task_memosCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_memos update\n   */\n  export type study_planner_study_task_memosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_task_memos.\n     */\n    data: XOR<study_planner_study_task_memosUpdateInput, study_planner_study_task_memosUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_task_memos to update.\n     */\n    where: study_planner_study_task_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_memos updateMany\n   */\n  export type study_planner_study_task_memosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_task_memos.\n     */\n    data: XOR<study_planner_study_task_memosUpdateManyMutationInput, study_planner_study_task_memosUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_memos to update\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * Limit how many study_planner_study_task_memos to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_memos updateManyAndReturn\n   */\n  export type study_planner_study_task_memosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_task_memos.\n     */\n    data: XOR<study_planner_study_task_memosUpdateManyMutationInput, study_planner_study_task_memosUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_memos to update\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * Limit how many study_planner_study_task_memos to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_memos upsert\n   */\n  export type study_planner_study_task_memosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_task_memos to update in case it exists.\n     */\n    where: study_planner_study_task_memosWhereUniqueInput\n    /**\n     * In case the study_planner_study_task_memos found by the `where` argument doesn't exist, create a new study_planner_study_task_memos with this data.\n     */\n    create: XOR<study_planner_study_task_memosCreateInput, study_planner_study_task_memosUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_task_memos was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_task_memosUpdateInput, study_planner_study_task_memosUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_task_memos delete\n   */\n  export type study_planner_study_task_memosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_task_memos to delete.\n     */\n    where: study_planner_study_task_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_memos deleteMany\n   */\n  export type study_planner_study_task_memosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_memos to delete\n     */\n    where?: study_planner_study_task_memosWhereInput\n    /**\n     * Limit how many study_planner_study_task_memos to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_memos without action\n   */\n  export type study_planner_study_task_memosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_memos\n     */\n    select?: study_planner_study_task_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_memos\n     */\n    omit?: study_planner_study_task_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_memosInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_task_progress\n   */\n\n  export type AggregateStudy_planner_study_task_progress = {\n    _count: Study_planner_study_task_progressCountAggregateOutputType | null\n    _min: Study_planner_study_task_progressMinAggregateOutputType | null\n    _max: Study_planner_study_task_progressMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_task_progressMinAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    study_phase_id: string | null\n    status: string | null\n    completed_at: Date | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_progressMaxAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    study_phase_id: string | null\n    status: string | null\n    completed_at: Date | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_progressCountAggregateOutputType = {\n    id: number\n    study_task_id: number\n    study_phase_id: number\n    status: number\n    completed_at: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_task_progressMinAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    study_phase_id?: true\n    status?: true\n    completed_at?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_progressMaxAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    study_phase_id?: true\n    status?: true\n    completed_at?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_progressCountAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    study_phase_id?: true\n    status?: true\n    completed_at?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_task_progressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_progress to aggregate.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_task_progresses\n    **/\n    _count?: true | Study_planner_study_task_progressCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_task_progressMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_task_progressMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_task_progressAggregateType<T extends Study_planner_study_task_progressAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_task_progress]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_task_progress[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_task_progress[P]>\n  }\n\n\n\n\n  export type study_planner_study_task_progressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_progressWhereInput\n    orderBy?: study_planner_study_task_progressOrderByWithAggregationInput | study_planner_study_task_progressOrderByWithAggregationInput[]\n    by: Study_planner_study_task_progressScalarFieldEnum[] | Study_planner_study_task_progressScalarFieldEnum\n    having?: study_planner_study_task_progressScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_task_progressCountAggregateInputType | true\n    _min?: Study_planner_study_task_progressMinAggregateInputType\n    _max?: Study_planner_study_task_progressMaxAggregateInputType\n  }\n\n  export type Study_planner_study_task_progressGroupByOutputType = {\n    id: string\n    study_task_id: string\n    study_phase_id: string\n    status: string\n    completed_at: Date | null\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_task_progressCountAggregateOutputType | null\n    _min: Study_planner_study_task_progressMinAggregateOutputType | null\n    _max: Study_planner_study_task_progressMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_task_progressGroupByPayload<T extends study_planner_study_task_progressGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_task_progressGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_task_progressGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_task_progressGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_task_progressGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_task_progressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    status?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n\n  export type study_planner_study_task_progressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    status?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n\n  export type study_planner_study_task_progressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    status?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n\n  export type study_planner_study_task_progressSelectScalar = {\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    status?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_task_progressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"study_task_id\" | \"study_phase_id\" | \"status\" | \"completed_at\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n  export type study_planner_study_task_progressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_progressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_progressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_task_progressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_task_progress\"\n    objects: {\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n      studyPhase: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Associated study task {@link study_planner_study_tasks.id}.\n       */\n      study_task_id: string\n      /**\n       * Associated study phase {@link study_planner_study_phases.id}.\n       */\n      study_phase_id: string\n      /**\n       * Current progress status for the phase (e.g., 'not_started',\n       * 'in_progress', 'completed').\n       */\n      status: string\n      /**\n       * Timestamp when the phase was completed.\n       */\n      completed_at: Date | null\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n    composites: {}\n  }\n\n  type study_planner_study_task_progressGetPayload<S extends boolean | null | undefined | study_planner_study_task_progressDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_task_progressPayload, S>\n\n  type study_planner_study_task_progressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_task_progressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_task_progressCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_task_progressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_task_progress'], meta: { name: 'study_planner_study_task_progress' } }\n    /**\n     * Find zero or one Study_planner_study_task_progress that matches the filter.\n     * @param {study_planner_study_task_progressFindUniqueArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_task_progressFindUniqueArgs>(args: SelectSubset<T, study_planner_study_task_progressFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_task_progress that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_task_progressFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_task_progressFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_task_progressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_progress that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressFindFirstArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_task_progressFindFirstArgs>(args?: SelectSubset<T, study_planner_study_task_progressFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_progress that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_task_progressFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_task_progressFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_task_progresses that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_task_progresses\n     * const study_planner_study_task_progresses = await prisma.study_planner_study_task_progress.findMany()\n     * \n     * // Get first 10 Study_planner_study_task_progresses\n     * const study_planner_study_task_progresses = await prisma.study_planner_study_task_progress.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_task_progressWithIdOnly = await prisma.study_planner_study_task_progress.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_task_progressFindManyArgs>(args?: SelectSubset<T, study_planner_study_task_progressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressCreateArgs} args - Arguments to create a Study_planner_study_task_progress.\n     * @example\n     * // Create one Study_planner_study_task_progress\n     * const Study_planner_study_task_progress = await prisma.study_planner_study_task_progress.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_task_progress\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_task_progressCreateArgs>(args: SelectSubset<T, study_planner_study_task_progressCreateArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_task_progresses.\n     * @param {study_planner_study_task_progressCreateManyArgs} args - Arguments to create many Study_planner_study_task_progresses.\n     * @example\n     * // Create many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_task_progressCreateManyArgs>(args?: SelectSubset<T, study_planner_study_task_progressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_task_progresses and returns the data saved in the database.\n     * @param {study_planner_study_task_progressCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_task_progresses.\n     * @example\n     * // Create many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_task_progresses and only return the `id`\n     * const study_planner_study_task_progressWithIdOnly = await prisma.study_planner_study_task_progress.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_task_progressCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_task_progressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressDeleteArgs} args - Arguments to delete one Study_planner_study_task_progress.\n     * @example\n     * // Delete one Study_planner_study_task_progress\n     * const Study_planner_study_task_progress = await prisma.study_planner_study_task_progress.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_task_progress\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_task_progressDeleteArgs>(args: SelectSubset<T, study_planner_study_task_progressDeleteArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressUpdateArgs} args - Arguments to update one Study_planner_study_task_progress.\n     * @example\n     * // Update one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_task_progressUpdateArgs>(args: SelectSubset<T, study_planner_study_task_progressUpdateArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_task_progresses.\n     * @param {study_planner_study_task_progressDeleteManyArgs} args - Arguments to filter Study_planner_study_task_progresses to delete.\n     * @example\n     * // Delete a few Study_planner_study_task_progresses\n     * const { count } = await prisma.study_planner_study_task_progress.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_task_progressDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_task_progressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_progresses.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_task_progressUpdateManyArgs>(args: SelectSubset<T, study_planner_study_task_progressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_progresses and returns the data updated in the database.\n     * @param {study_planner_study_task_progressUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_task_progresses.\n     * @example\n     * // Update many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_task_progresses and only return the `id`\n     * const study_planner_study_task_progressWithIdOnly = await prisma.study_planner_study_task_progress.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_task_progressUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_task_progressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressUpsertArgs} args - Arguments to update or create a Study_planner_study_task_progress.\n     * @example\n     * // Update or create a Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_task_progress\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_progress we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_task_progressUpsertArgs>(args: SelectSubset<T, study_planner_study_task_progressUpsertArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_task_progresses.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressCountArgs} args - Arguments to filter Study_planner_study_task_progresses to count.\n     * @example\n     * // Count the number of Study_planner_study_task_progresses\n     * const count = await prisma.study_planner_study_task_progress.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_progresses we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_task_progressCountArgs>(\n      args?: Subset<T, study_planner_study_task_progressCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_task_progressCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_task_progress.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_task_progressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_task_progressAggregateArgs>(args: Subset<T, Study_planner_study_task_progressAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_task_progressAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_task_progress.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_task_progressGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_task_progressGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_task_progressGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_task_progressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_task_progressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_task_progress model\n   */\n  readonly fields: study_planner_study_task_progressFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_task_progress.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_task_progressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyPhase<T extends study_planner_study_phasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phasesDefaultArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_task_progress model\n   */\n  interface study_planner_study_task_progressFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly study_phase_id: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly status: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly completed_at: FieldRef<\"study_planner_study_task_progress\", 'DateTime'>\n    readonly created_at: FieldRef<\"study_planner_study_task_progress\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_task_progress\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_task_progress findUnique\n   */\n  export type study_planner_study_task_progressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress findUniqueOrThrow\n   */\n  export type study_planner_study_task_progressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress findFirst\n   */\n  export type study_planner_study_task_progressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_progresses.\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_progresses.\n     */\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_progress findFirstOrThrow\n   */\n  export type study_planner_study_task_progressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_progresses.\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_progresses.\n     */\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_progress findMany\n   */\n  export type study_planner_study_task_progressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progresses to fetch.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_task_progresses.\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_progress create\n   */\n  export type study_planner_study_task_progressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_task_progress.\n     */\n    data: XOR<study_planner_study_task_progressCreateInput, study_planner_study_task_progressUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_task_progress createMany\n   */\n  export type study_planner_study_task_progressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_task_progresses.\n     */\n    data: study_planner_study_task_progressCreateManyInput | study_planner_study_task_progressCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_task_progress createManyAndReturn\n   */\n  export type study_planner_study_task_progressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_task_progresses.\n     */\n    data: study_planner_study_task_progressCreateManyInput | study_planner_study_task_progressCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_progress update\n   */\n  export type study_planner_study_task_progressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_task_progress.\n     */\n    data: XOR<study_planner_study_task_progressUpdateInput, study_planner_study_task_progressUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_task_progress to update.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress updateMany\n   */\n  export type study_planner_study_task_progressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_task_progresses.\n     */\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_progresses to update\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * Limit how many study_planner_study_task_progresses to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_progress updateManyAndReturn\n   */\n  export type study_planner_study_task_progressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_task_progresses.\n     */\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_progresses to update\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * Limit how many study_planner_study_task_progresses to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_progress upsert\n   */\n  export type study_planner_study_task_progressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_task_progress to update in case it exists.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * In case the study_planner_study_task_progress found by the `where` argument doesn't exist, create a new study_planner_study_task_progress with this data.\n     */\n    create: XOR<study_planner_study_task_progressCreateInput, study_planner_study_task_progressUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_task_progress was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_task_progressUpdateInput, study_planner_study_task_progressUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_task_progress delete\n   */\n  export type study_planner_study_task_progressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_task_progress to delete.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress deleteMany\n   */\n  export type study_planner_study_task_progressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_progresses to delete\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * Limit how many study_planner_study_task_progresses to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_progress without action\n   */\n  export type study_planner_study_task_progressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_alarms\n   */\n\n  export type AggregateStudy_planner_alarms = {\n    _count: Study_planner_alarmsCountAggregateOutputType | null\n    _min: Study_planner_alarmsMinAggregateOutputType | null\n    _max: Study_planner_alarmsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_alarmsMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    title: string | null\n    alarm_time: Date | null\n    enabled: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_alarmsMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    title: string | null\n    alarm_time: Date | null\n    enabled: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_alarmsCountAggregateOutputType = {\n    id: number\n    student_id: number\n    title: number\n    alarm_time: number\n    enabled: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_alarmsMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    alarm_time?: true\n    enabled?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_alarmsMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    alarm_time?: true\n    enabled?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_alarmsCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    alarm_time?: true\n    enabled?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_alarmsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_alarms to aggregate.\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_alarms to fetch.\n     */\n    orderBy?: study_planner_alarmsOrderByWithRelationInput | study_planner_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_alarms.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_alarms\n    **/\n    _count?: true | Study_planner_alarmsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_alarmsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_alarmsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_alarmsAggregateType<T extends Study_planner_alarmsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_alarms]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_alarms[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_alarms[P]>\n  }\n\n\n\n\n  export type study_planner_alarmsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_alarmsWhereInput\n    orderBy?: study_planner_alarmsOrderByWithAggregationInput | study_planner_alarmsOrderByWithAggregationInput[]\n    by: Study_planner_alarmsScalarFieldEnum[] | Study_planner_alarmsScalarFieldEnum\n    having?: study_planner_alarmsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_alarmsCountAggregateInputType | true\n    _min?: Study_planner_alarmsMinAggregateInputType\n    _max?: Study_planner_alarmsMaxAggregateInputType\n  }\n\n  export type Study_planner_alarmsGroupByOutputType = {\n    id: string\n    student_id: string\n    title: string\n    alarm_time: Date\n    enabled: boolean\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_alarmsCountAggregateOutputType | null\n    _min: Study_planner_alarmsMinAggregateOutputType | null\n    _max: Study_planner_alarmsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_alarmsGroupByPayload<T extends study_planner_alarmsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_alarmsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_alarmsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_alarmsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_alarmsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_alarmsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    study_planner_pwa_notifications?: boolean | study_planner_alarms$study_planner_pwa_notificationsArgs<ExtArgs>\n    _count?: boolean | Study_planner_alarmsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_alarms\"]>\n\n  export type study_planner_alarmsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_alarms\"]>\n\n  export type study_planner_alarmsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_alarms\"]>\n\n  export type study_planner_alarmsSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_alarmsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"title\" | \"alarm_time\" | \"enabled\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_alarms\"]>\n  export type study_planner_alarmsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    study_planner_pwa_notifications?: boolean | study_planner_alarms$study_planner_pwa_notificationsArgs<ExtArgs>\n    _count?: boolean | Study_planner_alarmsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_alarmsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n  export type study_planner_alarmsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_alarmsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_alarms\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      study_planner_pwa_notifications: Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Linked student who owns the alarm. {@link study_planner_students.id}\n       */\n      student_id: string\n      /**\n       * Title or label of the alarm for user identification.\n       */\n      title: string\n      /**\n       * Scheduled alarm time when notification should be sent.\n       */\n      alarm_time: Date\n      /**\n       * Flag indicating if the alarm is active.\n       */\n      enabled: boolean\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Timestamp of last modification.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp; null if not deleted.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_alarms\"]>\n    composites: {}\n  }\n\n  type study_planner_alarmsGetPayload<S extends boolean | null | undefined | study_planner_alarmsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_alarmsPayload, S>\n\n  type study_planner_alarmsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_alarmsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_alarmsCountAggregateInputType | true\n    }\n\n  export interface study_planner_alarmsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_alarms'], meta: { name: 'study_planner_alarms' } }\n    /**\n     * Find zero or one Study_planner_alarms that matches the filter.\n     * @param {study_planner_alarmsFindUniqueArgs} args - Arguments to find a Study_planner_alarms\n     * @example\n     * // Get one Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_alarmsFindUniqueArgs>(args: SelectSubset<T, study_planner_alarmsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_alarms that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_alarmsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_alarms\n     * @example\n     * // Get one Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_alarmsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_alarmsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_alarms that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_alarmsFindFirstArgs} args - Arguments to find a Study_planner_alarms\n     * @example\n     * // Get one Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_alarmsFindFirstArgs>(args?: SelectSubset<T, study_planner_alarmsFindFirstArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_alarms that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_alarmsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_alarms\n     * @example\n     * // Get one Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_alarmsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_alarmsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_alarms that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_alarmsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.findMany()\n     * \n     * // Get first 10 Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_alarmsWithIdOnly = await prisma.study_planner_alarms.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_alarmsFindManyArgs>(args?: SelectSubset<T, study_planner_alarmsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_alarms.\n     * @param {study_planner_alarmsCreateArgs} args - Arguments to create a Study_planner_alarms.\n     * @example\n     * // Create one Study_planner_alarms\n     * const Study_planner_alarms = await prisma.study_planner_alarms.create({\n     *   data: {\n     *     // ... data to create a Study_planner_alarms\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_alarmsCreateArgs>(args: SelectSubset<T, study_planner_alarmsCreateArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_alarms.\n     * @param {study_planner_alarmsCreateManyArgs} args - Arguments to create many Study_planner_alarms.\n     * @example\n     * // Create many Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_alarmsCreateManyArgs>(args?: SelectSubset<T, study_planner_alarmsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_alarms and returns the data saved in the database.\n     * @param {study_planner_alarmsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_alarms.\n     * @example\n     * // Create many Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_alarms and only return the `id`\n     * const study_planner_alarmsWithIdOnly = await prisma.study_planner_alarms.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_alarmsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_alarmsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_alarms.\n     * @param {study_planner_alarmsDeleteArgs} args - Arguments to delete one Study_planner_alarms.\n     * @example\n     * // Delete one Study_planner_alarms\n     * const Study_planner_alarms = await prisma.study_planner_alarms.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_alarms\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_alarmsDeleteArgs>(args: SelectSubset<T, study_planner_alarmsDeleteArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_alarms.\n     * @param {study_planner_alarmsUpdateArgs} args - Arguments to update one Study_planner_alarms.\n     * @example\n     * // Update one Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_alarmsUpdateArgs>(args: SelectSubset<T, study_planner_alarmsUpdateArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_alarms.\n     * @param {study_planner_alarmsDeleteManyArgs} args - Arguments to filter Study_planner_alarms to delete.\n     * @example\n     * // Delete a few Study_planner_alarms\n     * const { count } = await prisma.study_planner_alarms.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_alarmsDeleteManyArgs>(args?: SelectSubset<T, study_planner_alarmsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_alarmsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_alarmsUpdateManyArgs>(args: SelectSubset<T, study_planner_alarmsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_alarms and returns the data updated in the database.\n     * @param {study_planner_alarmsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_alarms.\n     * @example\n     * // Update many Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_alarms and only return the `id`\n     * const study_planner_alarmsWithIdOnly = await prisma.study_planner_alarms.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_alarmsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_alarmsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_alarms.\n     * @param {study_planner_alarmsUpsertArgs} args - Arguments to update or create a Study_planner_alarms.\n     * @example\n     * // Update or create a Study_planner_alarms\n     * const study_planner_alarms = await prisma.study_planner_alarms.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_alarms\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_alarms we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_alarmsUpsertArgs>(args: SelectSubset<T, study_planner_alarmsUpsertArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_alarmsCountArgs} args - Arguments to filter Study_planner_alarms to count.\n     * @example\n     * // Count the number of Study_planner_alarms\n     * const count = await prisma.study_planner_alarms.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_alarms we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_alarmsCountArgs>(\n      args?: Subset<T, study_planner_alarmsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_alarmsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_alarmsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_alarmsAggregateArgs>(args: Subset<T, Study_planner_alarmsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_alarmsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_alarmsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_alarmsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_alarmsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_alarmsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_alarmsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_alarmsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_alarms model\n   */\n  readonly fields: study_planner_alarmsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_alarms.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_alarmsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    study_planner_pwa_notifications<T extends study_planner_alarms$study_planner_pwa_notificationsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_alarms$study_planner_pwa_notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_alarms model\n   */\n  interface study_planner_alarmsFieldRefs {\n    readonly id: FieldRef<\"study_planner_alarms\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_alarms\", 'String'>\n    readonly title: FieldRef<\"study_planner_alarms\", 'String'>\n    readonly alarm_time: FieldRef<\"study_planner_alarms\", 'DateTime'>\n    readonly enabled: FieldRef<\"study_planner_alarms\", 'Boolean'>\n    readonly created_at: FieldRef<\"study_planner_alarms\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_alarms\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_alarms\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_alarms findUnique\n   */\n  export type study_planner_alarmsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_alarms to fetch.\n     */\n    where: study_planner_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_alarms findUniqueOrThrow\n   */\n  export type study_planner_alarmsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_alarms to fetch.\n     */\n    where: study_planner_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_alarms findFirst\n   */\n  export type study_planner_alarmsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_alarms to fetch.\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_alarms to fetch.\n     */\n    orderBy?: study_planner_alarmsOrderByWithRelationInput | study_planner_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_alarms.\n     */\n    cursor?: study_planner_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_alarms.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_alarms.\n     */\n    distinct?: Study_planner_alarmsScalarFieldEnum | Study_planner_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_alarms findFirstOrThrow\n   */\n  export type study_planner_alarmsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_alarms to fetch.\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_alarms to fetch.\n     */\n    orderBy?: study_planner_alarmsOrderByWithRelationInput | study_planner_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_alarms.\n     */\n    cursor?: study_planner_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_alarms.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_alarms.\n     */\n    distinct?: Study_planner_alarmsScalarFieldEnum | Study_planner_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_alarms findMany\n   */\n  export type study_planner_alarmsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_alarms to fetch.\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_alarms to fetch.\n     */\n    orderBy?: study_planner_alarmsOrderByWithRelationInput | study_planner_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_alarms.\n     */\n    cursor?: study_planner_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_alarms.\n     */\n    skip?: number\n    distinct?: Study_planner_alarmsScalarFieldEnum | Study_planner_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_alarms create\n   */\n  export type study_planner_alarmsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_alarms.\n     */\n    data: XOR<study_planner_alarmsCreateInput, study_planner_alarmsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_alarms createMany\n   */\n  export type study_planner_alarmsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_alarms.\n     */\n    data: study_planner_alarmsCreateManyInput | study_planner_alarmsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_alarms createManyAndReturn\n   */\n  export type study_planner_alarmsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_alarms.\n     */\n    data: study_planner_alarmsCreateManyInput | study_planner_alarmsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_alarms update\n   */\n  export type study_planner_alarmsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_alarms.\n     */\n    data: XOR<study_planner_alarmsUpdateInput, study_planner_alarmsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_alarms to update.\n     */\n    where: study_planner_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_alarms updateMany\n   */\n  export type study_planner_alarmsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_alarms.\n     */\n    data: XOR<study_planner_alarmsUpdateManyMutationInput, study_planner_alarmsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_alarms to update\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * Limit how many study_planner_alarms to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_alarms updateManyAndReturn\n   */\n  export type study_planner_alarmsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_alarms.\n     */\n    data: XOR<study_planner_alarmsUpdateManyMutationInput, study_planner_alarmsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_alarms to update\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * Limit how many study_planner_alarms to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_alarms upsert\n   */\n  export type study_planner_alarmsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_alarms to update in case it exists.\n     */\n    where: study_planner_alarmsWhereUniqueInput\n    /**\n     * In case the study_planner_alarms found by the `where` argument doesn't exist, create a new study_planner_alarms with this data.\n     */\n    create: XOR<study_planner_alarmsCreateInput, study_planner_alarmsUncheckedCreateInput>\n    /**\n     * In case the study_planner_alarms was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_alarmsUpdateInput, study_planner_alarmsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_alarms delete\n   */\n  export type study_planner_alarmsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_alarms to delete.\n     */\n    where: study_planner_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_alarms deleteMany\n   */\n  export type study_planner_alarmsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_alarms to delete\n     */\n    where?: study_planner_alarmsWhereInput\n    /**\n     * Limit how many study_planner_alarms to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_alarms.study_planner_pwa_notifications\n   */\n  export type study_planner_alarms$study_planner_pwa_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    where?: study_planner_pwa_notificationsWhereInput\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_pwa_notificationsScalarFieldEnum | Study_planner_pwa_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_alarms without action\n   */\n  export type study_planner_alarmsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_general_reminders\n   */\n\n  export type AggregateStudy_planner_general_reminders = {\n    _count: Study_planner_general_remindersCountAggregateOutputType | null\n    _min: Study_planner_general_remindersMinAggregateOutputType | null\n    _max: Study_planner_general_remindersMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_general_remindersMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    title: string | null\n    reminder_time: Date | null\n    enabled: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_general_remindersMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    title: string | null\n    reminder_time: Date | null\n    enabled: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_general_remindersCountAggregateOutputType = {\n    id: number\n    student_id: number\n    title: number\n    reminder_time: number\n    enabled: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_general_remindersMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    reminder_time?: true\n    enabled?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_general_remindersMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    reminder_time?: true\n    enabled?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_general_remindersCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    reminder_time?: true\n    enabled?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_general_remindersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_general_reminders to aggregate.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_general_reminders\n    **/\n    _count?: true | Study_planner_general_remindersCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_general_remindersMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_general_remindersMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_general_remindersAggregateType<T extends Study_planner_general_remindersAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_general_reminders]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_general_reminders[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_general_reminders[P]>\n  }\n\n\n\n\n  export type study_planner_general_remindersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_general_remindersWhereInput\n    orderBy?: study_planner_general_remindersOrderByWithAggregationInput | study_planner_general_remindersOrderByWithAggregationInput[]\n    by: Study_planner_general_remindersScalarFieldEnum[] | Study_planner_general_remindersScalarFieldEnum\n    having?: study_planner_general_remindersScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_general_remindersCountAggregateInputType | true\n    _min?: Study_planner_general_remindersMinAggregateInputType\n    _max?: Study_planner_general_remindersMaxAggregateInputType\n  }\n\n  export type Study_planner_general_remindersGroupByOutputType = {\n    id: string\n    student_id: string\n    title: string\n    reminder_time: Date\n    enabled: boolean\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_general_remindersCountAggregateOutputType | null\n    _min: Study_planner_general_remindersMinAggregateOutputType | null\n    _max: Study_planner_general_remindersMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_general_remindersGroupByPayload<T extends study_planner_general_remindersGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_general_remindersGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_general_remindersGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_general_remindersGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_general_remindersGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_general_remindersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    reminder_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    study_planner_pwa_notifications?: boolean | study_planner_general_reminders$study_planner_pwa_notificationsArgs<ExtArgs>\n    _count?: boolean | Study_planner_general_remindersCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n\n  export type study_planner_general_remindersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    reminder_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n\n  export type study_planner_general_remindersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    reminder_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n\n  export type study_planner_general_remindersSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    reminder_time?: boolean\n    enabled?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_general_remindersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"title\" | \"reminder_time\" | \"enabled\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n  export type study_planner_general_remindersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    study_planner_pwa_notifications?: boolean | study_planner_general_reminders$study_planner_pwa_notificationsArgs<ExtArgs>\n    _count?: boolean | Study_planner_general_remindersCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_general_remindersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n  export type study_planner_general_remindersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_general_remindersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_general_reminders\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      study_planner_pwa_notifications: Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Student owning the general reminder. {@link study_planner_students.id}\n       */\n      student_id: string\n      /**\n       * Descriptive title for the reminder.\n       */\n      title: string\n      /**\n       * Timestamp when the reminder is scheduled to notify the user.\n       */\n      reminder_time: Date\n      /**\n       * Indicates whether the reminder is active.\n       */\n      enabled: boolean\n      /**\n       * Time when the reminder was created.\n       */\n      created_at: Date\n      /**\n       * Last updated timestamp for the reminder.\n       */\n      updated_at: Date\n      /**\n       * Timestamp indicating soft deletion; null if active.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n    composites: {}\n  }\n\n  type study_planner_general_remindersGetPayload<S extends boolean | null | undefined | study_planner_general_remindersDefaultArgs> = $Result.GetResult<Prisma.$study_planner_general_remindersPayload, S>\n\n  type study_planner_general_remindersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_general_remindersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_general_remindersCountAggregateInputType | true\n    }\n\n  export interface study_planner_general_remindersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_general_reminders'], meta: { name: 'study_planner_general_reminders' } }\n    /**\n     * Find zero or one Study_planner_general_reminders that matches the filter.\n     * @param {study_planner_general_remindersFindUniqueArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_general_remindersFindUniqueArgs>(args: SelectSubset<T, study_planner_general_remindersFindUniqueArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_general_reminders that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_general_remindersFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_general_remindersFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_general_remindersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_general_reminders that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersFindFirstArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_general_remindersFindFirstArgs>(args?: SelectSubset<T, study_planner_general_remindersFindFirstArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_general_reminders that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersFindFirstOrThrowArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_general_remindersFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_general_remindersFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_general_reminders that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findMany()\n     * \n     * // Get first 10 Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_general_remindersWithIdOnly = await prisma.study_planner_general_reminders.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_general_remindersFindManyArgs>(args?: SelectSubset<T, study_planner_general_remindersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_general_reminders.\n     * @param {study_planner_general_remindersCreateArgs} args - Arguments to create a Study_planner_general_reminders.\n     * @example\n     * // Create one Study_planner_general_reminders\n     * const Study_planner_general_reminders = await prisma.study_planner_general_reminders.create({\n     *   data: {\n     *     // ... data to create a Study_planner_general_reminders\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_general_remindersCreateArgs>(args: SelectSubset<T, study_planner_general_remindersCreateArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_general_reminders.\n     * @param {study_planner_general_remindersCreateManyArgs} args - Arguments to create many Study_planner_general_reminders.\n     * @example\n     * // Create many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_general_remindersCreateManyArgs>(args?: SelectSubset<T, study_planner_general_remindersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_general_reminders and returns the data saved in the database.\n     * @param {study_planner_general_remindersCreateManyAndReturnArgs} args - Arguments to create many Study_planner_general_reminders.\n     * @example\n     * // Create many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_general_reminders and only return the `id`\n     * const study_planner_general_remindersWithIdOnly = await prisma.study_planner_general_reminders.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_general_remindersCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_general_remindersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_general_reminders.\n     * @param {study_planner_general_remindersDeleteArgs} args - Arguments to delete one Study_planner_general_reminders.\n     * @example\n     * // Delete one Study_planner_general_reminders\n     * const Study_planner_general_reminders = await prisma.study_planner_general_reminders.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_general_reminders\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_general_remindersDeleteArgs>(args: SelectSubset<T, study_planner_general_remindersDeleteArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_general_reminders.\n     * @param {study_planner_general_remindersUpdateArgs} args - Arguments to update one Study_planner_general_reminders.\n     * @example\n     * // Update one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_general_remindersUpdateArgs>(args: SelectSubset<T, study_planner_general_remindersUpdateArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_general_reminders.\n     * @param {study_planner_general_remindersDeleteManyArgs} args - Arguments to filter Study_planner_general_reminders to delete.\n     * @example\n     * // Delete a few Study_planner_general_reminders\n     * const { count } = await prisma.study_planner_general_reminders.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_general_remindersDeleteManyArgs>(args?: SelectSubset<T, study_planner_general_remindersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_general_remindersUpdateManyArgs>(args: SelectSubset<T, study_planner_general_remindersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_general_reminders and returns the data updated in the database.\n     * @param {study_planner_general_remindersUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_general_reminders.\n     * @example\n     * // Update many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_general_reminders and only return the `id`\n     * const study_planner_general_remindersWithIdOnly = await prisma.study_planner_general_reminders.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_general_remindersUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_general_remindersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_general_reminders.\n     * @param {study_planner_general_remindersUpsertArgs} args - Arguments to update or create a Study_planner_general_reminders.\n     * @example\n     * // Update or create a Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_general_reminders\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_general_reminders we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_general_remindersUpsertArgs>(args: SelectSubset<T, study_planner_general_remindersUpsertArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersCountArgs} args - Arguments to filter Study_planner_general_reminders to count.\n     * @example\n     * // Count the number of Study_planner_general_reminders\n     * const count = await prisma.study_planner_general_reminders.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_general_reminders we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_general_remindersCountArgs>(\n      args?: Subset<T, study_planner_general_remindersCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_general_remindersCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_general_remindersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_general_remindersAggregateArgs>(args: Subset<T, Study_planner_general_remindersAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_general_remindersAggregateType<T>>\n\n    /**\n     * Group by Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_general_remindersGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_general_remindersGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_general_remindersGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_general_remindersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_general_remindersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_general_reminders model\n   */\n  readonly fields: study_planner_general_remindersFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_general_reminders.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_general_remindersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    study_planner_pwa_notifications<T extends study_planner_general_reminders$study_planner_pwa_notificationsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_general_reminders$study_planner_pwa_notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_general_reminders model\n   */\n  interface study_planner_general_remindersFieldRefs {\n    readonly id: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly title: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly reminder_time: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n    readonly enabled: FieldRef<\"study_planner_general_reminders\", 'Boolean'>\n    readonly created_at: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_general_reminders findUnique\n   */\n  export type study_planner_general_remindersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders findUniqueOrThrow\n   */\n  export type study_planner_general_remindersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders findFirst\n   */\n  export type study_planner_general_remindersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_general_reminders.\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_general_reminders.\n     */\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders findFirstOrThrow\n   */\n  export type study_planner_general_remindersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_general_reminders.\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_general_reminders.\n     */\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders findMany\n   */\n  export type study_planner_general_remindersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_general_reminders.\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders create\n   */\n  export type study_planner_general_remindersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersCreateInput, study_planner_general_remindersUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_general_reminders createMany\n   */\n  export type study_planner_general_remindersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_general_reminders.\n     */\n    data: study_planner_general_remindersCreateManyInput | study_planner_general_remindersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_general_reminders createManyAndReturn\n   */\n  export type study_planner_general_remindersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_general_reminders.\n     */\n    data: study_planner_general_remindersCreateManyInput | study_planner_general_remindersCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_general_reminders update\n   */\n  export type study_planner_general_remindersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersUpdateInput, study_planner_general_remindersUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_general_reminders to update.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders updateMany\n   */\n  export type study_planner_general_remindersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersUpdateManyMutationInput, study_planner_general_remindersUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_general_reminders to update\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * Limit how many study_planner_general_reminders to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_general_reminders updateManyAndReturn\n   */\n  export type study_planner_general_remindersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersUpdateManyMutationInput, study_planner_general_remindersUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_general_reminders to update\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * Limit how many study_planner_general_reminders to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_general_reminders upsert\n   */\n  export type study_planner_general_remindersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_general_reminders to update in case it exists.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n    /**\n     * In case the study_planner_general_reminders found by the `where` argument doesn't exist, create a new study_planner_general_reminders with this data.\n     */\n    create: XOR<study_planner_general_remindersCreateInput, study_planner_general_remindersUncheckedCreateInput>\n    /**\n     * In case the study_planner_general_reminders was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_general_remindersUpdateInput, study_planner_general_remindersUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_general_reminders delete\n   */\n  export type study_planner_general_remindersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_general_reminders to delete.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders deleteMany\n   */\n  export type study_planner_general_remindersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_general_reminders to delete\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * Limit how many study_planner_general_reminders to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_general_reminders.study_planner_pwa_notifications\n   */\n  export type study_planner_general_reminders$study_planner_pwa_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    where?: study_planner_pwa_notificationsWhereInput\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_pwa_notificationsScalarFieldEnum | Study_planner_pwa_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders without action\n   */\n  export type study_planner_general_remindersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_pwa_notifications\n   */\n\n  export type AggregateStudy_planner_pwa_notifications = {\n    _count: Study_planner_pwa_notificationsCountAggregateOutputType | null\n    _min: Study_planner_pwa_notificationsMinAggregateOutputType | null\n    _max: Study_planner_pwa_notificationsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_pwa_notificationsMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    alarm_id: string | null\n    general_reminder_id: string | null\n    notification_time: Date | null\n    delivered: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_pwa_notificationsMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    alarm_id: string | null\n    general_reminder_id: string | null\n    notification_time: Date | null\n    delivered: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_pwa_notificationsCountAggregateOutputType = {\n    id: number\n    student_id: number\n    alarm_id: number\n    general_reminder_id: number\n    notification_time: number\n    delivered: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_pwa_notificationsMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    alarm_id?: true\n    general_reminder_id?: true\n    notification_time?: true\n    delivered?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_pwa_notificationsMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    alarm_id?: true\n    general_reminder_id?: true\n    notification_time?: true\n    delivered?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_pwa_notificationsCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    alarm_id?: true\n    general_reminder_id?: true\n    notification_time?: true\n    delivered?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_pwa_notificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_pwa_notifications to aggregate.\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_pwa_notifications to fetch.\n     */\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_pwa_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_pwa_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_pwa_notifications\n    **/\n    _count?: true | Study_planner_pwa_notificationsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_pwa_notificationsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_pwa_notificationsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_pwa_notificationsAggregateType<T extends Study_planner_pwa_notificationsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_pwa_notifications]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_pwa_notifications[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_pwa_notifications[P]>\n  }\n\n\n\n\n  export type study_planner_pwa_notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_pwa_notificationsWhereInput\n    orderBy?: study_planner_pwa_notificationsOrderByWithAggregationInput | study_planner_pwa_notificationsOrderByWithAggregationInput[]\n    by: Study_planner_pwa_notificationsScalarFieldEnum[] | Study_planner_pwa_notificationsScalarFieldEnum\n    having?: study_planner_pwa_notificationsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_pwa_notificationsCountAggregateInputType | true\n    _min?: Study_planner_pwa_notificationsMinAggregateInputType\n    _max?: Study_planner_pwa_notificationsMaxAggregateInputType\n  }\n\n  export type Study_planner_pwa_notificationsGroupByOutputType = {\n    id: string\n    student_id: string\n    alarm_id: string | null\n    general_reminder_id: string | null\n    notification_time: Date\n    delivered: boolean\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_pwa_notificationsCountAggregateOutputType | null\n    _min: Study_planner_pwa_notificationsMinAggregateOutputType | null\n    _max: Study_planner_pwa_notificationsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_pwa_notificationsGroupByPayload<T extends study_planner_pwa_notificationsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_pwa_notificationsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_pwa_notificationsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_pwa_notificationsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_pwa_notificationsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_pwa_notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    alarm_id?: boolean\n    general_reminder_id?: boolean\n    notification_time?: boolean\n    delivered?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    alarm?: boolean | study_planner_pwa_notifications$alarmArgs<ExtArgs>\n    generalReminder?: boolean | study_planner_pwa_notifications$generalReminderArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_pwa_notifications\"]>\n\n  export type study_planner_pwa_notificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    alarm_id?: boolean\n    general_reminder_id?: boolean\n    notification_time?: boolean\n    delivered?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    alarm?: boolean | study_planner_pwa_notifications$alarmArgs<ExtArgs>\n    generalReminder?: boolean | study_planner_pwa_notifications$generalReminderArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_pwa_notifications\"]>\n\n  export type study_planner_pwa_notificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    alarm_id?: boolean\n    general_reminder_id?: boolean\n    notification_time?: boolean\n    delivered?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    alarm?: boolean | study_planner_pwa_notifications$alarmArgs<ExtArgs>\n    generalReminder?: boolean | study_planner_pwa_notifications$generalReminderArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_pwa_notifications\"]>\n\n  export type study_planner_pwa_notificationsSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    alarm_id?: boolean\n    general_reminder_id?: boolean\n    notification_time?: boolean\n    delivered?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_pwa_notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"alarm_id\" | \"general_reminder_id\" | \"notification_time\" | \"delivered\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_pwa_notifications\"]>\n  export type study_planner_pwa_notificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    alarm?: boolean | study_planner_pwa_notifications$alarmArgs<ExtArgs>\n    generalReminder?: boolean | study_planner_pwa_notifications$generalReminderArgs<ExtArgs>\n  }\n  export type study_planner_pwa_notificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    alarm?: boolean | study_planner_pwa_notifications$alarmArgs<ExtArgs>\n    generalReminder?: boolean | study_planner_pwa_notifications$generalReminderArgs<ExtArgs>\n  }\n  export type study_planner_pwa_notificationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    alarm?: boolean | study_planner_pwa_notifications$alarmArgs<ExtArgs>\n    generalReminder?: boolean | study_planner_pwa_notifications$generalReminderArgs<ExtArgs>\n  }\n\n  export type $study_planner_pwa_notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_pwa_notifications\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      alarm: Prisma.$study_planner_alarmsPayload<ExtArgs> | null\n      generalReminder: Prisma.$study_planner_general_remindersPayload<ExtArgs> | null\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Target student receiving the PWA notification. {@link\n       * study_planner_students.id}\n       */\n      student_id: string\n      /**\n       * Associated alarm triggering this notification, if applicable. {@link\n       * study_planner_alarms.id}\n       */\n      alarm_id: string | null\n      /**\n       * Associated general reminder triggering this notification, if applicable.\n       * {@link study_planner_general_reminders.id}\n       */\n      general_reminder_id: string | null\n      /**\n       * Timestamp when the PWA notification was sent or attempted.\n       */\n      notification_time: Date\n      /**\n       * Flag indicating if the notification was successfully delivered.\n       */\n      delivered: boolean\n      /**\n       * Record creation timestamp for audit purposes.\n       */\n      created_at: Date\n      /**\n       * Timestamp of last update to the notification record.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp; null if the notification record is active.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_pwa_notifications\"]>\n    composites: {}\n  }\n\n  type study_planner_pwa_notificationsGetPayload<S extends boolean | null | undefined | study_planner_pwa_notificationsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload, S>\n\n  type study_planner_pwa_notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_pwa_notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_pwa_notificationsCountAggregateInputType | true\n    }\n\n  export interface study_planner_pwa_notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_pwa_notifications'], meta: { name: 'study_planner_pwa_notifications' } }\n    /**\n     * Find zero or one Study_planner_pwa_notifications that matches the filter.\n     * @param {study_planner_pwa_notificationsFindUniqueArgs} args - Arguments to find a Study_planner_pwa_notifications\n     * @example\n     * // Get one Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_pwa_notificationsFindUniqueArgs>(args: SelectSubset<T, study_planner_pwa_notificationsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_pwa_notifications that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_pwa_notificationsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_pwa_notifications\n     * @example\n     * // Get one Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_pwa_notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_pwa_notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_pwa_notifications that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_pwa_notificationsFindFirstArgs} args - Arguments to find a Study_planner_pwa_notifications\n     * @example\n     * // Get one Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_pwa_notificationsFindFirstArgs>(args?: SelectSubset<T, study_planner_pwa_notificationsFindFirstArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_pwa_notifications that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_pwa_notificationsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_pwa_notifications\n     * @example\n     * // Get one Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_pwa_notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_pwa_notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_pwa_notifications that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_pwa_notificationsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findMany()\n     * \n     * // Get first 10 Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_pwa_notificationsWithIdOnly = await prisma.study_planner_pwa_notifications.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_pwa_notificationsFindManyArgs>(args?: SelectSubset<T, study_planner_pwa_notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_pwa_notifications.\n     * @param {study_planner_pwa_notificationsCreateArgs} args - Arguments to create a Study_planner_pwa_notifications.\n     * @example\n     * // Create one Study_planner_pwa_notifications\n     * const Study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.create({\n     *   data: {\n     *     // ... data to create a Study_planner_pwa_notifications\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_pwa_notificationsCreateArgs>(args: SelectSubset<T, study_planner_pwa_notificationsCreateArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_pwa_notifications.\n     * @param {study_planner_pwa_notificationsCreateManyArgs} args - Arguments to create many Study_planner_pwa_notifications.\n     * @example\n     * // Create many Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_pwa_notificationsCreateManyArgs>(args?: SelectSubset<T, study_planner_pwa_notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_pwa_notifications and returns the data saved in the database.\n     * @param {study_planner_pwa_notificationsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_pwa_notifications.\n     * @example\n     * // Create many Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_pwa_notifications and only return the `id`\n     * const study_planner_pwa_notificationsWithIdOnly = await prisma.study_planner_pwa_notifications.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_pwa_notificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_pwa_notificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_pwa_notifications.\n     * @param {study_planner_pwa_notificationsDeleteArgs} args - Arguments to delete one Study_planner_pwa_notifications.\n     * @example\n     * // Delete one Study_planner_pwa_notifications\n     * const Study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_pwa_notifications\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_pwa_notificationsDeleteArgs>(args: SelectSubset<T, study_planner_pwa_notificationsDeleteArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_pwa_notifications.\n     * @param {study_planner_pwa_notificationsUpdateArgs} args - Arguments to update one Study_planner_pwa_notifications.\n     * @example\n     * // Update one Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_pwa_notificationsUpdateArgs>(args: SelectSubset<T, study_planner_pwa_notificationsUpdateArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_pwa_notifications.\n     * @param {study_planner_pwa_notificationsDeleteManyArgs} args - Arguments to filter Study_planner_pwa_notifications to delete.\n     * @example\n     * // Delete a few Study_planner_pwa_notifications\n     * const { count } = await prisma.study_planner_pwa_notifications.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_pwa_notificationsDeleteManyArgs>(args?: SelectSubset<T, study_planner_pwa_notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_pwa_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_pwa_notificationsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_pwa_notificationsUpdateManyArgs>(args: SelectSubset<T, study_planner_pwa_notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_pwa_notifications and returns the data updated in the database.\n     * @param {study_planner_pwa_notificationsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_pwa_notifications.\n     * @example\n     * // Update many Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_pwa_notifications and only return the `id`\n     * const study_planner_pwa_notificationsWithIdOnly = await prisma.study_planner_pwa_notifications.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_pwa_notificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_pwa_notificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_pwa_notifications.\n     * @param {study_planner_pwa_notificationsUpsertArgs} args - Arguments to update or create a Study_planner_pwa_notifications.\n     * @example\n     * // Update or create a Study_planner_pwa_notifications\n     * const study_planner_pwa_notifications = await prisma.study_planner_pwa_notifications.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_pwa_notifications\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_pwa_notifications we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_pwa_notificationsUpsertArgs>(args: SelectSubset<T, study_planner_pwa_notificationsUpsertArgs<ExtArgs>>): Prisma__study_planner_pwa_notificationsClient<$Result.GetResult<Prisma.$study_planner_pwa_notificationsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_pwa_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_pwa_notificationsCountArgs} args - Arguments to filter Study_planner_pwa_notifications to count.\n     * @example\n     * // Count the number of Study_planner_pwa_notifications\n     * const count = await prisma.study_planner_pwa_notifications.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_pwa_notifications we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_pwa_notificationsCountArgs>(\n      args?: Subset<T, study_planner_pwa_notificationsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_pwa_notificationsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_pwa_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_pwa_notificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_pwa_notificationsAggregateArgs>(args: Subset<T, Study_planner_pwa_notificationsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_pwa_notificationsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_pwa_notifications.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_pwa_notificationsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_pwa_notificationsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_pwa_notificationsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_pwa_notificationsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_pwa_notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_pwa_notificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_pwa_notifications model\n   */\n  readonly fields: study_planner_pwa_notificationsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_pwa_notifications.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_pwa_notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    alarm<T extends study_planner_pwa_notifications$alarmArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_pwa_notifications$alarmArgs<ExtArgs>>): Prisma__study_planner_alarmsClient<$Result.GetResult<Prisma.$study_planner_alarmsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    generalReminder<T extends study_planner_pwa_notifications$generalReminderArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_pwa_notifications$generalReminderArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_pwa_notifications model\n   */\n  interface study_planner_pwa_notificationsFieldRefs {\n    readonly id: FieldRef<\"study_planner_pwa_notifications\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_pwa_notifications\", 'String'>\n    readonly alarm_id: FieldRef<\"study_planner_pwa_notifications\", 'String'>\n    readonly general_reminder_id: FieldRef<\"study_planner_pwa_notifications\", 'String'>\n    readonly notification_time: FieldRef<\"study_planner_pwa_notifications\", 'DateTime'>\n    readonly delivered: FieldRef<\"study_planner_pwa_notifications\", 'Boolean'>\n    readonly created_at: FieldRef<\"study_planner_pwa_notifications\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_pwa_notifications\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_pwa_notifications\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_pwa_notifications findUnique\n   */\n  export type study_planner_pwa_notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_pwa_notifications to fetch.\n     */\n    where: study_planner_pwa_notificationsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_pwa_notifications findUniqueOrThrow\n   */\n  export type study_planner_pwa_notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_pwa_notifications to fetch.\n     */\n    where: study_planner_pwa_notificationsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_pwa_notifications findFirst\n   */\n  export type study_planner_pwa_notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_pwa_notifications to fetch.\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_pwa_notifications to fetch.\n     */\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_pwa_notifications.\n     */\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_pwa_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_pwa_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_pwa_notifications.\n     */\n    distinct?: Study_planner_pwa_notificationsScalarFieldEnum | Study_planner_pwa_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_pwa_notifications findFirstOrThrow\n   */\n  export type study_planner_pwa_notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_pwa_notifications to fetch.\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_pwa_notifications to fetch.\n     */\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_pwa_notifications.\n     */\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_pwa_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_pwa_notifications.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_pwa_notifications.\n     */\n    distinct?: Study_planner_pwa_notificationsScalarFieldEnum | Study_planner_pwa_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_pwa_notifications findMany\n   */\n  export type study_planner_pwa_notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_pwa_notifications to fetch.\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_pwa_notifications to fetch.\n     */\n    orderBy?: study_planner_pwa_notificationsOrderByWithRelationInput | study_planner_pwa_notificationsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_pwa_notifications.\n     */\n    cursor?: study_planner_pwa_notificationsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_pwa_notifications from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_pwa_notifications.\n     */\n    skip?: number\n    distinct?: Study_planner_pwa_notificationsScalarFieldEnum | Study_planner_pwa_notificationsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_pwa_notifications create\n   */\n  export type study_planner_pwa_notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_pwa_notifications.\n     */\n    data: XOR<study_planner_pwa_notificationsCreateInput, study_planner_pwa_notificationsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_pwa_notifications createMany\n   */\n  export type study_planner_pwa_notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_pwa_notifications.\n     */\n    data: study_planner_pwa_notificationsCreateManyInput | study_planner_pwa_notificationsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_pwa_notifications createManyAndReturn\n   */\n  export type study_planner_pwa_notificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_pwa_notifications.\n     */\n    data: study_planner_pwa_notificationsCreateManyInput | study_planner_pwa_notificationsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_pwa_notifications update\n   */\n  export type study_planner_pwa_notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_pwa_notifications.\n     */\n    data: XOR<study_planner_pwa_notificationsUpdateInput, study_planner_pwa_notificationsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_pwa_notifications to update.\n     */\n    where: study_planner_pwa_notificationsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_pwa_notifications updateMany\n   */\n  export type study_planner_pwa_notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_pwa_notifications.\n     */\n    data: XOR<study_planner_pwa_notificationsUpdateManyMutationInput, study_planner_pwa_notificationsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_pwa_notifications to update\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * Limit how many study_planner_pwa_notifications to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_pwa_notifications updateManyAndReturn\n   */\n  export type study_planner_pwa_notificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_pwa_notifications.\n     */\n    data: XOR<study_planner_pwa_notificationsUpdateManyMutationInput, study_planner_pwa_notificationsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_pwa_notifications to update\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * Limit how many study_planner_pwa_notifications to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_pwa_notifications upsert\n   */\n  export type study_planner_pwa_notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_pwa_notifications to update in case it exists.\n     */\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    /**\n     * In case the study_planner_pwa_notifications found by the `where` argument doesn't exist, create a new study_planner_pwa_notifications with this data.\n     */\n    create: XOR<study_planner_pwa_notificationsCreateInput, study_planner_pwa_notificationsUncheckedCreateInput>\n    /**\n     * In case the study_planner_pwa_notifications was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_pwa_notificationsUpdateInput, study_planner_pwa_notificationsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_pwa_notifications delete\n   */\n  export type study_planner_pwa_notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_pwa_notifications to delete.\n     */\n    where: study_planner_pwa_notificationsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_pwa_notifications deleteMany\n   */\n  export type study_planner_pwa_notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_pwa_notifications to delete\n     */\n    where?: study_planner_pwa_notificationsWhereInput\n    /**\n     * Limit how many study_planner_pwa_notifications to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_pwa_notifications.alarm\n   */\n  export type study_planner_pwa_notifications$alarmArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_alarms\n     */\n    select?: study_planner_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_alarms\n     */\n    omit?: study_planner_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_alarmsInclude<ExtArgs> | null\n    where?: study_planner_alarmsWhereInput\n  }\n\n  /**\n   * study_planner_pwa_notifications.generalReminder\n   */\n  export type study_planner_pwa_notifications$generalReminderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    where?: study_planner_general_remindersWhereInput\n  }\n\n  /**\n   * study_planner_pwa_notifications without action\n   */\n  export type study_planner_pwa_notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_pwa_notifications\n     */\n    select?: study_planner_pwa_notificationsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_pwa_notifications\n     */\n    omit?: study_planner_pwa_notificationsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_pwa_notificationsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Study_planner_studentsScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    name: 'name',\n    status: 'status',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_studentsScalarFieldEnum = (typeof Study_planner_studentsScalarFieldEnum)[keyof typeof Study_planner_studentsScalarFieldEnum]\n\n\n  export const Study_planner_study_phasesScalarFieldEnum: {\n    id: 'id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_phasesScalarFieldEnum = (typeof Study_planner_study_phasesScalarFieldEnum)[keyof typeof Study_planner_study_phasesScalarFieldEnum]\n\n\n  export const Study_planner_study_categoriesScalarFieldEnum: {\n    id: 'id',\n    parent_category_id: 'parent_category_id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_categoriesScalarFieldEnum = (typeof Study_planner_study_categoriesScalarFieldEnum)[keyof typeof Study_planner_study_categoriesScalarFieldEnum]\n\n\n  export const Study_planner_study_tasksScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    study_phase_id: 'study_phase_id',\n    study_category_id: 'study_category_id',\n    title: 'title',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_study_tasksScalarFieldEnum = (typeof Study_planner_study_tasksScalarFieldEnum)[keyof typeof Study_planner_study_tasksScalarFieldEnum]\n\n\n  export const Study_planner_study_task_attachmentsScalarFieldEnum: {\n    id: 'id',\n    study_task_id: 'study_task_id',\n    file_name: 'file_name',\n    file_type: 'file_type',\n    file_size: 'file_size',\n    file_uri: 'file_uri',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_task_attachmentsScalarFieldEnum = (typeof Study_planner_study_task_attachmentsScalarFieldEnum)[keyof typeof Study_planner_study_task_attachmentsScalarFieldEnum]\n\n\n  export const Study_planner_study_task_memosScalarFieldEnum: {\n    id: 'id',\n    study_task_id: 'study_task_id',\n    content: 'content',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_task_memosScalarFieldEnum = (typeof Study_planner_study_task_memosScalarFieldEnum)[keyof typeof Study_planner_study_task_memosScalarFieldEnum]\n\n\n  export const Study_planner_study_task_progressScalarFieldEnum: {\n    id: 'id',\n    study_task_id: 'study_task_id',\n    study_phase_id: 'study_phase_id',\n    status: 'status',\n    completed_at: 'completed_at',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_task_progressScalarFieldEnum = (typeof Study_planner_study_task_progressScalarFieldEnum)[keyof typeof Study_planner_study_task_progressScalarFieldEnum]\n\n\n  export const Study_planner_alarmsScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    title: 'title',\n    alarm_time: 'alarm_time',\n    enabled: 'enabled',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_alarmsScalarFieldEnum = (typeof Study_planner_alarmsScalarFieldEnum)[keyof typeof Study_planner_alarmsScalarFieldEnum]\n\n\n  export const Study_planner_general_remindersScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    title: 'title',\n    reminder_time: 'reminder_time',\n    enabled: 'enabled',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_general_remindersScalarFieldEnum = (typeof Study_planner_general_remindersScalarFieldEnum)[keyof typeof Study_planner_general_remindersScalarFieldEnum]\n\n\n  export const Study_planner_pwa_notificationsScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    alarm_id: 'alarm_id',\n    general_reminder_id: 'general_reminder_id',\n    notification_time: 'notification_time',\n    delivered: 'delivered',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_pwa_notificationsScalarFieldEnum = (typeof Study_planner_pwa_notificationsScalarFieldEnum)[keyof typeof Study_planner_pwa_notificationsScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Boolean'\n   */\n  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float'\n   */\n  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float[]'\n   */\n  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type study_planner_studentsWhereInput = {\n    AND?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    OR?: study_planner_studentsWhereInput[]\n    NOT?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    id?: UuidFilter<\"study_planner_students\"> | string\n    email?: StringFilter<\"study_planner_students\"> | string\n    password_hash?: StringFilter<\"study_planner_students\"> | string\n    name?: StringFilter<\"study_planner_students\"> | string\n    status?: StringFilter<\"study_planner_students\"> | string\n    created_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_students\"> | Date | string | null\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_alarms?: Study_planner_alarmsListRelationFilter\n    study_planner_general_reminders?: Study_planner_general_remindersListRelationFilter\n    study_planner_pwa_notifications?: Study_planner_pwa_notificationsListRelationFilter\n  }\n\n  export type study_planner_studentsOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    name?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    study_planner_study_tasks?: study_planner_study_tasksOrderByRelationAggregateInput\n    study_planner_alarms?: study_planner_alarmsOrderByRelationAggregateInput\n    study_planner_general_reminders?: study_planner_general_remindersOrderByRelationAggregateInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_studentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    AND?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    OR?: study_planner_studentsWhereInput[]\n    NOT?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    password_hash?: StringFilter<\"study_planner_students\"> | string\n    name?: StringFilter<\"study_planner_students\"> | string\n    status?: StringFilter<\"study_planner_students\"> | string\n    created_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_students\"> | Date | string | null\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_alarms?: Study_planner_alarmsListRelationFilter\n    study_planner_general_reminders?: Study_planner_general_remindersListRelationFilter\n    study_planner_pwa_notifications?: Study_planner_pwa_notificationsListRelationFilter\n  }, \"id\" | \"email\">\n\n  export type study_planner_studentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    name?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_studentsCountOrderByAggregateInput\n    _max?: study_planner_studentsMaxOrderByAggregateInput\n    _min?: study_planner_studentsMinOrderByAggregateInput\n  }\n\n  export type study_planner_studentsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_studentsScalarWhereWithAggregatesInput | study_planner_studentsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_studentsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_studentsScalarWhereWithAggregatesInput | study_planner_studentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_students\"> | string\n    email?: StringWithAggregatesFilter<\"study_planner_students\"> | string\n    password_hash?: StringWithAggregatesFilter<\"study_planner_students\"> | string\n    name?: StringWithAggregatesFilter<\"study_planner_students\"> | string\n    status?: StringWithAggregatesFilter<\"study_planner_students\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_students\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_students\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_students\"> | Date | string | null\n  }\n\n  export type study_planner_study_phasesWhereInput = {\n    AND?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    OR?: study_planner_study_phasesWhereInput[]\n    NOT?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    id?: UuidFilter<\"study_planner_study_phases\"> | string\n    code?: StringFilter<\"study_planner_study_phases\"> | string\n    name?: StringFilter<\"study_planner_study_phases\"> | string\n    description?: StringNullableFilter<\"study_planner_study_phases\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n  }\n\n  export type study_planner_study_phasesOrderByWithRelationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    study_planner_study_tasks?: study_planner_study_tasksOrderByRelationAggregateInput\n    study_planner_study_task_progress?: study_planner_study_task_progressOrderByRelationAggregateInput\n  }\n\n  export type study_planner_study_phasesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    AND?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    OR?: study_planner_study_phasesWhereInput[]\n    NOT?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    name?: StringFilter<\"study_planner_study_phases\"> | string\n    description?: StringNullableFilter<\"study_planner_study_phases\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n  }, \"id\" | \"code\">\n\n  export type study_planner_study_phasesOrderByWithAggregationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_phasesCountOrderByAggregateInput\n    _max?: study_planner_study_phasesMaxOrderByAggregateInput\n    _min?: study_planner_study_phasesMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_phasesScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_phasesScalarWhereWithAggregatesInput | study_planner_study_phasesScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_phasesScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_phasesScalarWhereWithAggregatesInput | study_planner_study_phasesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_phases\"> | string\n    code?: StringWithAggregatesFilter<\"study_planner_study_phases\"> | string\n    name?: StringWithAggregatesFilter<\"study_planner_study_phases\"> | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_study_phases\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_phases\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_phases\"> | Date | string\n  }\n\n  export type study_planner_study_categoriesWhereInput = {\n    AND?: study_planner_study_categoriesWhereInput | study_planner_study_categoriesWhereInput[]\n    OR?: study_planner_study_categoriesWhereInput[]\n    NOT?: study_planner_study_categoriesWhereInput | study_planner_study_categoriesWhereInput[]\n    id?: UuidFilter<\"study_planner_study_categories\"> | string\n    parent_category_id?: UuidNullableFilter<\"study_planner_study_categories\"> | string | null\n    code?: StringFilter<\"study_planner_study_categories\"> | string\n    name?: StringFilter<\"study_planner_study_categories\"> | string\n    description?: StringNullableFilter<\"study_planner_study_categories\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_categories\"> | Date | string\n    parentCategory?: XOR<Study_planner_study_categoriesNullableScalarRelationFilter, study_planner_study_categoriesWhereInput> | null\n    recursive?: Study_planner_study_categoriesListRelationFilter\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n  }\n\n  export type study_planner_study_categoriesOrderByWithRelationInput = {\n    id?: SortOrder\n    parent_category_id?: SortOrderInput | SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    parentCategory?: study_planner_study_categoriesOrderByWithRelationInput\n    recursive?: study_planner_study_categoriesOrderByRelationAggregateInput\n    study_planner_study_tasks?: study_planner_study_tasksOrderByRelationAggregateInput\n  }\n\n  export type study_planner_study_categoriesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    AND?: study_planner_study_categoriesWhereInput | study_planner_study_categoriesWhereInput[]\n    OR?: study_planner_study_categoriesWhereInput[]\n    NOT?: study_planner_study_categoriesWhereInput | study_planner_study_categoriesWhereInput[]\n    parent_category_id?: UuidNullableFilter<\"study_planner_study_categories\"> | string | null\n    name?: StringFilter<\"study_planner_study_categories\"> | string\n    description?: StringNullableFilter<\"study_planner_study_categories\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_categories\"> | Date | string\n    parentCategory?: XOR<Study_planner_study_categoriesNullableScalarRelationFilter, study_planner_study_categoriesWhereInput> | null\n    recursive?: Study_planner_study_categoriesListRelationFilter\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n  }, \"id\" | \"code\">\n\n  export type study_planner_study_categoriesOrderByWithAggregationInput = {\n    id?: SortOrder\n    parent_category_id?: SortOrderInput | SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_categoriesCountOrderByAggregateInput\n    _max?: study_planner_study_categoriesMaxOrderByAggregateInput\n    _min?: study_planner_study_categoriesMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_categoriesScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_categoriesScalarWhereWithAggregatesInput | study_planner_study_categoriesScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_categoriesScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_categoriesScalarWhereWithAggregatesInput | study_planner_study_categoriesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_categories\"> | string\n    parent_category_id?: UuidNullableWithAggregatesFilter<\"study_planner_study_categories\"> | string | null\n    code?: StringWithAggregatesFilter<\"study_planner_study_categories\"> | string\n    name?: StringWithAggregatesFilter<\"study_planner_study_categories\"> | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_study_categories\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_categories\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_categories\"> | Date | string\n  }\n\n  export type study_planner_study_tasksWhereInput = {\n    AND?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    OR?: study_planner_study_tasksWhereInput[]\n    NOT?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    student_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_category_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    title?: StringFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_study_tasks\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n    studyCategory?: XOR<Study_planner_study_categoriesScalarRelationFilter, study_planner_study_categoriesWhereInput>\n    study_planner_study_task_attachments?: Study_planner_study_task_attachmentsListRelationFilter\n    study_planner_study_task_memos?: Study_planner_study_task_memosListRelationFilter\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n  }\n\n  export type study_planner_study_tasksOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    study_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    studyPhase?: study_planner_study_phasesOrderByWithRelationInput\n    studyCategory?: study_planner_study_categoriesOrderByWithRelationInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsOrderByRelationAggregateInput\n    study_planner_study_task_memos?: study_planner_study_task_memosOrderByRelationAggregateInput\n    study_planner_study_task_progress?: study_planner_study_task_progressOrderByRelationAggregateInput\n  }\n\n  export type study_planner_study_tasksWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    OR?: study_planner_study_tasksWhereInput[]\n    NOT?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    student_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_category_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    title?: StringFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_study_tasks\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n    studyCategory?: XOR<Study_planner_study_categoriesScalarRelationFilter, study_planner_study_categoriesWhereInput>\n    study_planner_study_task_attachments?: Study_planner_study_task_attachmentsListRelationFilter\n    study_planner_study_task_memos?: Study_planner_study_task_memosListRelationFilter\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n  }, \"id\">\n\n  export type study_planner_study_tasksOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    study_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_study_tasksCountOrderByAggregateInput\n    _max?: study_planner_study_tasksMaxOrderByAggregateInput\n    _min?: study_planner_study_tasksMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_tasksScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_tasksScalarWhereWithAggregatesInput | study_planner_study_tasksScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_tasksScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_tasksScalarWhereWithAggregatesInput | study_planner_study_tasksScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    study_category_id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    title?: StringWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_study_tasks\"> | Date | string | null\n  }\n\n  export type study_planner_study_task_attachmentsWhereInput = {\n    AND?: study_planner_study_task_attachmentsWhereInput | study_planner_study_task_attachmentsWhereInput[]\n    OR?: study_planner_study_task_attachmentsWhereInput[]\n    NOT?: study_planner_study_task_attachmentsWhereInput | study_planner_study_task_attachmentsWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_attachments\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_attachments\"> | string\n    file_name?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    file_type?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    file_size?: IntFilter<\"study_planner_study_task_attachments\"> | number\n    file_uri?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    created_at?: DateTimeFilter<\"study_planner_study_task_attachments\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_attachments\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }\n\n  export type study_planner_study_task_attachmentsOrderByWithRelationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_name?: SortOrder\n    file_type?: SortOrder\n    file_size?: SortOrder\n    file_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n  }\n\n  export type study_planner_study_task_attachmentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: study_planner_study_task_attachmentsWhereInput | study_planner_study_task_attachmentsWhereInput[]\n    OR?: study_planner_study_task_attachmentsWhereInput[]\n    NOT?: study_planner_study_task_attachmentsWhereInput | study_planner_study_task_attachmentsWhereInput[]\n    study_task_id?: UuidFilter<\"study_planner_study_task_attachments\"> | string\n    file_name?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    file_type?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    file_size?: IntFilter<\"study_planner_study_task_attachments\"> | number\n    file_uri?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    created_at?: DateTimeFilter<\"study_planner_study_task_attachments\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_attachments\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }, \"id\">\n\n  export type study_planner_study_task_attachmentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_name?: SortOrder\n    file_type?: SortOrder\n    file_size?: SortOrder\n    file_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_task_attachmentsCountOrderByAggregateInput\n    _avg?: study_planner_study_task_attachmentsAvgOrderByAggregateInput\n    _max?: study_planner_study_task_attachmentsMaxOrderByAggregateInput\n    _min?: study_planner_study_task_attachmentsMinOrderByAggregateInput\n    _sum?: study_planner_study_task_attachmentsSumOrderByAggregateInput\n  }\n\n  export type study_planner_study_task_attachmentsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_task_attachmentsScalarWhereWithAggregatesInput | study_planner_study_task_attachmentsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_task_attachmentsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_task_attachmentsScalarWhereWithAggregatesInput | study_planner_study_task_attachmentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_task_attachments\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_study_task_attachments\"> | string\n    file_name?: StringWithAggregatesFilter<\"study_planner_study_task_attachments\"> | string\n    file_type?: StringWithAggregatesFilter<\"study_planner_study_task_attachments\"> | string\n    file_size?: IntWithAggregatesFilter<\"study_planner_study_task_attachments\"> | number\n    file_uri?: StringWithAggregatesFilter<\"study_planner_study_task_attachments\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_attachments\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_attachments\"> | Date | string\n  }\n\n  export type study_planner_study_task_memosWhereInput = {\n    AND?: study_planner_study_task_memosWhereInput | study_planner_study_task_memosWhereInput[]\n    OR?: study_planner_study_task_memosWhereInput[]\n    NOT?: study_planner_study_task_memosWhereInput | study_planner_study_task_memosWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_memos\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_memos\"> | string\n    content?: StringFilter<\"study_planner_study_task_memos\"> | string\n    created_at?: DateTimeFilter<\"study_planner_study_task_memos\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_memos\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }\n\n  export type study_planner_study_task_memosOrderByWithRelationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n  }\n\n  export type study_planner_study_task_memosWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: study_planner_study_task_memosWhereInput | study_planner_study_task_memosWhereInput[]\n    OR?: study_planner_study_task_memosWhereInput[]\n    NOT?: study_planner_study_task_memosWhereInput | study_planner_study_task_memosWhereInput[]\n    study_task_id?: UuidFilter<\"study_planner_study_task_memos\"> | string\n    content?: StringFilter<\"study_planner_study_task_memos\"> | string\n    created_at?: DateTimeFilter<\"study_planner_study_task_memos\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_memos\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }, \"id\">\n\n  export type study_planner_study_task_memosOrderByWithAggregationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_task_memosCountOrderByAggregateInput\n    _max?: study_planner_study_task_memosMaxOrderByAggregateInput\n    _min?: study_planner_study_task_memosMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_task_memosScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_task_memosScalarWhereWithAggregatesInput | study_planner_study_task_memosScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_task_memosScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_task_memosScalarWhereWithAggregatesInput | study_planner_study_task_memosScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_task_memos\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_study_task_memos\"> | string\n    content?: StringWithAggregatesFilter<\"study_planner_study_task_memos\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_memos\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_memos\"> | Date | string\n  }\n\n  export type study_planner_study_task_progressWhereInput = {\n    AND?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    OR?: study_planner_study_task_progressWhereInput[]\n    NOT?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    status?: StringFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n  }\n\n  export type study_planner_study_task_progressOrderByWithRelationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    status?: SortOrder\n    completed_at?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n    studyPhase?: study_planner_study_phasesOrderByWithRelationInput\n  }\n\n  export type study_planner_study_task_progressWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    study_task_id_study_phase_id?: study_planner_study_task_progressStudy_task_idStudy_phase_idCompoundUniqueInput\n    AND?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    OR?: study_planner_study_task_progressWhereInput[]\n    NOT?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    study_task_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    status?: StringFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n  }, \"id\" | \"study_task_id_study_phase_id\">\n\n  export type study_planner_study_task_progressOrderByWithAggregationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    status?: SortOrder\n    completed_at?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_task_progressCountOrderByAggregateInput\n    _max?: study_planner_study_task_progressMaxOrderByAggregateInput\n    _min?: study_planner_study_task_progressMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_task_progressScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_task_progressScalarWhereWithAggregatesInput | study_planner_study_task_progressScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_task_progressScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_task_progressScalarWhereWithAggregatesInput | study_planner_study_task_progressScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    status?: StringWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_progress\"> | Date | string\n  }\n\n  export type study_planner_alarmsWhereInput = {\n    AND?: study_planner_alarmsWhereInput | study_planner_alarmsWhereInput[]\n    OR?: study_planner_alarmsWhereInput[]\n    NOT?: study_planner_alarmsWhereInput | study_planner_alarmsWhereInput[]\n    id?: UuidFilter<\"study_planner_alarms\"> | string\n    student_id?: UuidFilter<\"study_planner_alarms\"> | string\n    title?: StringFilter<\"study_planner_alarms\"> | string\n    alarm_time?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    enabled?: BoolFilter<\"study_planner_alarms\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_alarms\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    study_planner_pwa_notifications?: Study_planner_pwa_notificationsListRelationFilter\n  }\n\n  export type study_planner_alarmsOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_alarmsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_alarm_time?: study_planner_alarmsStudent_idAlarm_timeCompoundUniqueInput\n    AND?: study_planner_alarmsWhereInput | study_planner_alarmsWhereInput[]\n    OR?: study_planner_alarmsWhereInput[]\n    NOT?: study_planner_alarmsWhereInput | study_planner_alarmsWhereInput[]\n    student_id?: UuidFilter<\"study_planner_alarms\"> | string\n    title?: StringFilter<\"study_planner_alarms\"> | string\n    alarm_time?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    enabled?: BoolFilter<\"study_planner_alarms\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_alarms\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    study_planner_pwa_notifications?: Study_planner_pwa_notificationsListRelationFilter\n  }, \"id\" | \"student_id_alarm_time\">\n\n  export type study_planner_alarmsOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_alarmsCountOrderByAggregateInput\n    _max?: study_planner_alarmsMaxOrderByAggregateInput\n    _min?: study_planner_alarmsMinOrderByAggregateInput\n  }\n\n  export type study_planner_alarmsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_alarmsScalarWhereWithAggregatesInput | study_planner_alarmsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_alarmsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_alarmsScalarWhereWithAggregatesInput | study_planner_alarmsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_alarms\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_alarms\"> | string\n    title?: StringWithAggregatesFilter<\"study_planner_alarms\"> | string\n    alarm_time?: DateTimeWithAggregatesFilter<\"study_planner_alarms\"> | Date | string\n    enabled?: BoolWithAggregatesFilter<\"study_planner_alarms\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_alarms\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_alarms\"> | Date | string | null\n  }\n\n  export type study_planner_general_remindersWhereInput = {\n    AND?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    OR?: study_planner_general_remindersWhereInput[]\n    NOT?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    student_id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    title?: StringFilter<\"study_planner_general_reminders\"> | string\n    reminder_time?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    enabled?: BoolFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_general_reminders\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    study_planner_pwa_notifications?: Study_planner_pwa_notificationsListRelationFilter\n  }\n\n  export type study_planner_general_remindersOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    reminder_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_general_remindersWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_reminder_time?: study_planner_general_remindersStudent_idReminder_timeCompoundUniqueInput\n    AND?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    OR?: study_planner_general_remindersWhereInput[]\n    NOT?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    student_id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    title?: StringFilter<\"study_planner_general_reminders\"> | string\n    reminder_time?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    enabled?: BoolFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_general_reminders\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    study_planner_pwa_notifications?: Study_planner_pwa_notificationsListRelationFilter\n  }, \"id\" | \"student_id_reminder_time\">\n\n  export type study_planner_general_remindersOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    reminder_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_general_remindersCountOrderByAggregateInput\n    _max?: study_planner_general_remindersMaxOrderByAggregateInput\n    _min?: study_planner_general_remindersMinOrderByAggregateInput\n  }\n\n  export type study_planner_general_remindersScalarWhereWithAggregatesInput = {\n    AND?: study_planner_general_remindersScalarWhereWithAggregatesInput | study_planner_general_remindersScalarWhereWithAggregatesInput[]\n    OR?: study_planner_general_remindersScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_general_remindersScalarWhereWithAggregatesInput | study_planner_general_remindersScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_general_reminders\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_general_reminders\"> | string\n    title?: StringWithAggregatesFilter<\"study_planner_general_reminders\"> | string\n    reminder_time?: DateTimeWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string\n    enabled?: BoolWithAggregatesFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsWhereInput = {\n    AND?: study_planner_pwa_notificationsWhereInput | study_planner_pwa_notificationsWhereInput[]\n    OR?: study_planner_pwa_notificationsWhereInput[]\n    NOT?: study_planner_pwa_notificationsWhereInput | study_planner_pwa_notificationsWhereInput[]\n    id?: UuidFilter<\"study_planner_pwa_notifications\"> | string\n    student_id?: UuidFilter<\"study_planner_pwa_notifications\"> | string\n    alarm_id?: UuidNullableFilter<\"study_planner_pwa_notifications\"> | string | null\n    general_reminder_id?: UuidNullableFilter<\"study_planner_pwa_notifications\"> | string | null\n    notification_time?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    delivered?: BoolFilter<\"study_planner_pwa_notifications\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_pwa_notifications\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    alarm?: XOR<Study_planner_alarmsNullableScalarRelationFilter, study_planner_alarmsWhereInput> | null\n    generalReminder?: XOR<Study_planner_general_remindersNullableScalarRelationFilter, study_planner_general_remindersWhereInput> | null\n  }\n\n  export type study_planner_pwa_notificationsOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    alarm_id?: SortOrderInput | SortOrder\n    general_reminder_id?: SortOrderInput | SortOrder\n    notification_time?: SortOrder\n    delivered?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    alarm?: study_planner_alarmsOrderByWithRelationInput\n    generalReminder?: study_planner_general_remindersOrderByWithRelationInput\n  }\n\n  export type study_planner_pwa_notificationsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: study_planner_pwa_notificationsWhereInput | study_planner_pwa_notificationsWhereInput[]\n    OR?: study_planner_pwa_notificationsWhereInput[]\n    NOT?: study_planner_pwa_notificationsWhereInput | study_planner_pwa_notificationsWhereInput[]\n    student_id?: UuidFilter<\"study_planner_pwa_notifications\"> | string\n    alarm_id?: UuidNullableFilter<\"study_planner_pwa_notifications\"> | string | null\n    general_reminder_id?: UuidNullableFilter<\"study_planner_pwa_notifications\"> | string | null\n    notification_time?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    delivered?: BoolFilter<\"study_planner_pwa_notifications\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_pwa_notifications\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    alarm?: XOR<Study_planner_alarmsNullableScalarRelationFilter, study_planner_alarmsWhereInput> | null\n    generalReminder?: XOR<Study_planner_general_remindersNullableScalarRelationFilter, study_planner_general_remindersWhereInput> | null\n  }, \"id\">\n\n  export type study_planner_pwa_notificationsOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    alarm_id?: SortOrderInput | SortOrder\n    general_reminder_id?: SortOrderInput | SortOrder\n    notification_time?: SortOrder\n    delivered?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_pwa_notificationsCountOrderByAggregateInput\n    _max?: study_planner_pwa_notificationsMaxOrderByAggregateInput\n    _min?: study_planner_pwa_notificationsMinOrderByAggregateInput\n  }\n\n  export type study_planner_pwa_notificationsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_pwa_notificationsScalarWhereWithAggregatesInput | study_planner_pwa_notificationsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_pwa_notificationsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_pwa_notificationsScalarWhereWithAggregatesInput | study_planner_pwa_notificationsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_pwa_notifications\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_pwa_notifications\"> | string\n    alarm_id?: UuidNullableWithAggregatesFilter<\"study_planner_pwa_notifications\"> | string | null\n    general_reminder_id?: UuidNullableWithAggregatesFilter<\"study_planner_pwa_notifications\"> | string | null\n    notification_time?: DateTimeWithAggregatesFilter<\"study_planner_pwa_notifications\"> | Date | string\n    delivered?: BoolWithAggregatesFilter<\"study_planner_pwa_notifications\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_pwa_notifications\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_pwa_notifications\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_pwa_notifications\"> | Date | string | null\n  }\n\n  export type study_planner_studentsCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_alarms?: study_planner_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_alarms?: study_planner_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_alarms?: study_planner_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_alarms?: study_planner_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_studentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_studentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_phasesCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesCreateManyInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_phasesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_categoriesCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    parentCategory?: study_planner_study_categoriesCreateNestedOneWithoutRecursiveInput\n    recursive?: study_planner_study_categoriesCreateNestedManyWithoutParentCategoryInput\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyCategoryInput\n  }\n\n  export type study_planner_study_categoriesUncheckedCreateInput = {\n    id: string\n    parent_category_id?: string | null\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: study_planner_study_categoriesUncheckedCreateNestedManyWithoutParentCategoryInput\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyCategoryInput\n  }\n\n  export type study_planner_study_categoriesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    parentCategory?: study_planner_study_categoriesUpdateOneWithoutRecursiveNestedInput\n    recursive?: study_planner_study_categoriesUpdateManyWithoutParentCategoryNestedInput\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    parent_category_id?: NullableStringFieldUpdateOperationsInput | string | null\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: study_planner_study_categoriesUncheckedUpdateManyWithoutParentCategoryNestedInput\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesCreateManyInput = {\n    id: string\n    parent_category_id?: string | null\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_categoriesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    parent_category_id?: NullableStringFieldUpdateOperationsInput | string | null\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_tasksCreateInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyCategory: study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyCategory?: study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksCreateManyInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_tasksUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_task_attachmentsCreateInput = {\n    id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_attachmentsInput\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedCreateInput = {\n    id: string\n    study_task_id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_attachmentsNestedInput\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_attachmentsCreateManyInput = {\n    id: string\n    study_task_id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_memosCreateInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_memosInput\n  }\n\n  export type study_planner_study_task_memosUncheckedCreateInput = {\n    id: string\n    study_task_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_memosUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_memosNestedInput\n  }\n\n  export type study_planner_study_task_memosUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_memosCreateManyInput = {\n    id: string\n    study_task_id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_memosUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_memosUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressCreateInput = {\n    id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_progressInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_task_progressInput\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateInput = {\n    id: string\n    study_task_id: string\n    study_phase_id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressCreateManyInput = {\n    id: string\n    study_task_id: string\n    study_phase_id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_alarmsCreateInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_alarmsInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutAlarmInput\n  }\n\n  export type study_planner_alarmsUncheckedCreateInput = {\n    id: string\n    student_id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutAlarmInput\n  }\n\n  export type study_planner_alarmsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_alarmsNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutAlarmNestedInput\n  }\n\n  export type study_planner_alarmsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutAlarmNestedInput\n  }\n\n  export type study_planner_alarmsCreateManyInput = {\n    id: string\n    student_id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_alarmsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_alarmsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateInput = {\n    id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_general_remindersInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutGeneralReminderInput\n  }\n\n  export type study_planner_general_remindersUncheckedCreateInput = {\n    id: string\n    student_id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutGeneralReminderInput\n  }\n\n  export type study_planner_general_remindersUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_general_remindersNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutGeneralReminderNestedInput\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutGeneralReminderNestedInput\n  }\n\n  export type study_planner_general_remindersCreateManyInput = {\n    id: string\n    student_id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateInput = {\n    id: string\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n    alarm?: study_planner_alarmsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n    generalReminder?: study_planner_general_remindersCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateInput = {\n    id: string\n    student_id: string\n    alarm_id?: string | null\n    general_reminder_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_pwa_notificationsNestedInput\n    alarm?: study_planner_alarmsUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput\n    generalReminder?: study_planner_general_remindersUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    alarm_id?: NullableStringFieldUpdateOperationsInput | string | null\n    general_reminder_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateManyInput = {\n    id: string\n    student_id: string\n    alarm_id?: string | null\n    general_reminder_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    alarm_id?: NullableStringFieldUpdateOperationsInput | string | null\n    general_reminder_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Study_planner_study_tasksListRelationFilter = {\n    every?: study_planner_study_tasksWhereInput\n    some?: study_planner_study_tasksWhereInput\n    none?: study_planner_study_tasksWhereInput\n  }\n\n  export type Study_planner_alarmsListRelationFilter = {\n    every?: study_planner_alarmsWhereInput\n    some?: study_planner_alarmsWhereInput\n    none?: study_planner_alarmsWhereInput\n  }\n\n  export type Study_planner_general_remindersListRelationFilter = {\n    every?: study_planner_general_remindersWhereInput\n    some?: study_planner_general_remindersWhereInput\n    none?: study_planner_general_remindersWhereInput\n  }\n\n  export type Study_planner_pwa_notificationsListRelationFilter = {\n    every?: study_planner_pwa_notificationsWhereInput\n    some?: study_planner_pwa_notificationsWhereInput\n    none?: study_planner_pwa_notificationsWhereInput\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type study_planner_study_tasksOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_alarmsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_general_remindersOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_pwa_notificationsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_studentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    name?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_studentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    name?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_studentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    name?: SortOrder\n    status?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Study_planner_study_task_progressListRelationFilter = {\n    every?: study_planner_study_task_progressWhereInput\n    some?: study_planner_study_task_progressWhereInput\n    none?: study_planner_study_task_progressWhereInput\n  }\n\n  export type study_planner_study_task_progressOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_phasesCountOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_phasesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_phasesMinOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type UuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type Study_planner_study_categoriesNullableScalarRelationFilter = {\n    is?: study_planner_study_categoriesWhereInput | null\n    isNot?: study_planner_study_categoriesWhereInput | null\n  }\n\n  export type Study_planner_study_categoriesListRelationFilter = {\n    every?: study_planner_study_categoriesWhereInput\n    some?: study_planner_study_categoriesWhereInput\n    none?: study_planner_study_categoriesWhereInput\n  }\n\n  export type study_planner_study_categoriesOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_categoriesCountOrderByAggregateInput = {\n    id?: SortOrder\n    parent_category_id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_categoriesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    parent_category_id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_categoriesMinOrderByAggregateInput = {\n    id?: SortOrder\n    parent_category_id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type Study_planner_studentsScalarRelationFilter = {\n    is?: study_planner_studentsWhereInput\n    isNot?: study_planner_studentsWhereInput\n  }\n\n  export type Study_planner_study_phasesScalarRelationFilter = {\n    is?: study_planner_study_phasesWhereInput\n    isNot?: study_planner_study_phasesWhereInput\n  }\n\n  export type Study_planner_study_categoriesScalarRelationFilter = {\n    is?: study_planner_study_categoriesWhereInput\n    isNot?: study_planner_study_categoriesWhereInput\n  }\n\n  export type Study_planner_study_task_attachmentsListRelationFilter = {\n    every?: study_planner_study_task_attachmentsWhereInput\n    some?: study_planner_study_task_attachmentsWhereInput\n    none?: study_planner_study_task_attachmentsWhereInput\n  }\n\n  export type Study_planner_study_task_memosListRelationFilter = {\n    every?: study_planner_study_task_memosWhereInput\n    some?: study_planner_study_task_memosWhereInput\n    none?: study_planner_study_task_memosWhereInput\n  }\n\n  export type study_planner_study_task_attachmentsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_task_memosOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_tasksCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    study_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_study_tasksMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    study_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_study_tasksMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    study_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type IntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type Study_planner_study_tasksScalarRelationFilter = {\n    is?: study_planner_study_tasksWhereInput\n    isNot?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_task_attachmentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_name?: SortOrder\n    file_type?: SortOrder\n    file_size?: SortOrder\n    file_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_attachmentsAvgOrderByAggregateInput = {\n    file_size?: SortOrder\n  }\n\n  export type study_planner_study_task_attachmentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_name?: SortOrder\n    file_type?: SortOrder\n    file_size?: SortOrder\n    file_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_attachmentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_name?: SortOrder\n    file_type?: SortOrder\n    file_size?: SortOrder\n    file_uri?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_attachmentsSumOrderByAggregateInput = {\n    file_size?: SortOrder\n  }\n\n  export type IntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type study_planner_study_task_memosCountOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_memosMaxOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_memosMinOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    content?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_progressStudy_task_idStudy_phase_idCompoundUniqueInput = {\n    study_task_id: string\n    study_phase_id: string\n  }\n\n  export type study_planner_study_task_progressCountOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    status?: SortOrder\n    completed_at?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_progressMaxOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    status?: SortOrder\n    completed_at?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_progressMinOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    status?: SortOrder\n    completed_at?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type BoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type study_planner_alarmsStudent_idAlarm_timeCompoundUniqueInput = {\n    student_id: string\n    alarm_time: Date | string\n  }\n\n  export type study_planner_alarmsCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_alarmsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_alarmsMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type BoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type study_planner_general_remindersStudent_idReminder_timeCompoundUniqueInput = {\n    student_id: string\n    reminder_time: Date | string\n  }\n\n  export type study_planner_general_remindersCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    reminder_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_general_remindersMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    reminder_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_general_remindersMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    reminder_time?: SortOrder\n    enabled?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Study_planner_alarmsNullableScalarRelationFilter = {\n    is?: study_planner_alarmsWhereInput | null\n    isNot?: study_planner_alarmsWhereInput | null\n  }\n\n  export type Study_planner_general_remindersNullableScalarRelationFilter = {\n    is?: study_planner_general_remindersWhereInput | null\n    isNot?: study_planner_general_remindersWhereInput | null\n  }\n\n  export type study_planner_pwa_notificationsCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    alarm_id?: SortOrder\n    general_reminder_id?: SortOrder\n    notification_time?: SortOrder\n    delivered?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_pwa_notificationsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    alarm_id?: SortOrder\n    general_reminder_id?: SortOrder\n    notification_time?: SortOrder\n    delivered?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_pwa_notificationsMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    alarm_id?: SortOrder\n    general_reminder_id?: SortOrder\n    notification_time?: SortOrder\n    delivered?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_study_tasksCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_alarmsCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_alarmsCreateWithoutStudentInput, study_planner_alarmsUncheckedCreateWithoutStudentInput> | study_planner_alarmsCreateWithoutStudentInput[] | study_planner_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_alarmsCreateOrConnectWithoutStudentInput | study_planner_alarmsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_alarmsCreateManyStudentInputEnvelope\n    connect?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n  }\n\n  export type study_planner_general_remindersCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n  }\n\n  export type study_planner_pwa_notificationsCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutStudentInput, study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput> | study_planner_pwa_notificationsCreateWithoutStudentInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput | study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyStudentInputEnvelope\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_alarmsUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_alarmsCreateWithoutStudentInput, study_planner_alarmsUncheckedCreateWithoutStudentInput> | study_planner_alarmsCreateWithoutStudentInput[] | study_planner_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_alarmsCreateOrConnectWithoutStudentInput | study_planner_alarmsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_alarmsCreateManyStudentInputEnvelope\n    connect?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n  }\n\n  export type study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutStudentInput, study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput> | study_planner_pwa_notificationsCreateWithoutStudentInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput | study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyStudentInputEnvelope\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type study_planner_study_tasksUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_alarmsUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_alarmsCreateWithoutStudentInput, study_planner_alarmsUncheckedCreateWithoutStudentInput> | study_planner_alarmsCreateWithoutStudentInput[] | study_planner_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_alarmsCreateOrConnectWithoutStudentInput | study_planner_alarmsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_alarmsUpsertWithWhereUniqueWithoutStudentInput | study_planner_alarmsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_alarmsCreateManyStudentInputEnvelope\n    set?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    disconnect?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    delete?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    connect?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    update?: study_planner_alarmsUpdateWithWhereUniqueWithoutStudentInput | study_planner_alarmsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_alarmsUpdateManyWithWhereWithoutStudentInput | study_planner_alarmsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_alarmsScalarWhereInput | study_planner_alarmsScalarWhereInput[]\n  }\n\n  export type study_planner_general_remindersUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    set?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    disconnect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    delete?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    update?: study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput | study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutStudentInput, study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput> | study_planner_pwa_notificationsCreateWithoutStudentInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput | study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutStudentInput | study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyStudentInputEnvelope\n    set?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    disconnect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    delete?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    update?: study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutStudentInput | study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_pwa_notificationsUpdateManyWithWhereWithoutStudentInput | study_planner_pwa_notificationsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_alarmsUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_alarmsCreateWithoutStudentInput, study_planner_alarmsUncheckedCreateWithoutStudentInput> | study_planner_alarmsCreateWithoutStudentInput[] | study_planner_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_alarmsCreateOrConnectWithoutStudentInput | study_planner_alarmsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_alarmsUpsertWithWhereUniqueWithoutStudentInput | study_planner_alarmsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_alarmsCreateManyStudentInputEnvelope\n    set?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    disconnect?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    delete?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    connect?: study_planner_alarmsWhereUniqueInput | study_planner_alarmsWhereUniqueInput[]\n    update?: study_planner_alarmsUpdateWithWhereUniqueWithoutStudentInput | study_planner_alarmsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_alarmsUpdateManyWithWhereWithoutStudentInput | study_planner_alarmsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_alarmsScalarWhereInput | study_planner_alarmsScalarWhereInput[]\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    set?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    disconnect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    delete?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    update?: study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput | study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutStudentInput, study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput> | study_planner_pwa_notificationsCreateWithoutStudentInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput | study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutStudentInput | study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyStudentInputEnvelope\n    set?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    disconnect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    delete?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    update?: study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutStudentInput | study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_pwa_notificationsUpdateManyWithWhereWithoutStudentInput | study_planner_pwa_notificationsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_study_categoriesCreateNestedOneWithoutRecursiveInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutRecursiveInput, study_planner_study_categoriesUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutRecursiveInput\n    connect?: study_planner_study_categoriesWhereUniqueInput\n  }\n\n  export type study_planner_study_categoriesCreateNestedManyWithoutParentCategoryInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput> | study_planner_study_categoriesCreateWithoutParentCategoryInput[] | study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput[]\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput | study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput[]\n    createMany?: study_planner_study_categoriesCreateManyParentCategoryInputEnvelope\n    connect?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksCreateNestedManyWithoutStudyCategoryInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput> | study_planner_study_tasksCreateWithoutStudyCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput | study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyCategoryInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_study_categoriesUncheckedCreateNestedManyWithoutParentCategoryInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput> | study_planner_study_categoriesCreateWithoutParentCategoryInput[] | study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput[]\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput | study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput[]\n    createMany?: study_planner_study_categoriesCreateManyParentCategoryInputEnvelope\n    connect?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyCategoryInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput> | study_planner_study_tasksCreateWithoutStudyCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput | study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyCategoryInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_study_categoriesUpdateOneWithoutRecursiveNestedInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutRecursiveInput, study_planner_study_categoriesUncheckedCreateWithoutRecursiveInput>\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutRecursiveInput\n    upsert?: study_planner_study_categoriesUpsertWithoutRecursiveInput\n    disconnect?: study_planner_study_categoriesWhereInput | boolean\n    delete?: study_planner_study_categoriesWhereInput | boolean\n    connect?: study_planner_study_categoriesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_categoriesUpdateToOneWithWhereWithoutRecursiveInput, study_planner_study_categoriesUpdateWithoutRecursiveInput>, study_planner_study_categoriesUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type study_planner_study_categoriesUpdateManyWithoutParentCategoryNestedInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput> | study_planner_study_categoriesCreateWithoutParentCategoryInput[] | study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput[]\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput | study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput[]\n    upsert?: study_planner_study_categoriesUpsertWithWhereUniqueWithoutParentCategoryInput | study_planner_study_categoriesUpsertWithWhereUniqueWithoutParentCategoryInput[]\n    createMany?: study_planner_study_categoriesCreateManyParentCategoryInputEnvelope\n    set?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    disconnect?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    delete?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    connect?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    update?: study_planner_study_categoriesUpdateWithWhereUniqueWithoutParentCategoryInput | study_planner_study_categoriesUpdateWithWhereUniqueWithoutParentCategoryInput[]\n    updateMany?: study_planner_study_categoriesUpdateManyWithWhereWithoutParentCategoryInput | study_planner_study_categoriesUpdateManyWithWhereWithoutParentCategoryInput[]\n    deleteMany?: study_planner_study_categoriesScalarWhereInput | study_planner_study_categoriesScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUpdateManyWithoutStudyCategoryNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput> | study_planner_study_tasksCreateWithoutStudyCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput | study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyCategoryInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyCategoryInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyCategoryInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyCategoryInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudyCategoryInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudyCategoryInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateManyWithoutParentCategoryNestedInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput> | study_planner_study_categoriesCreateWithoutParentCategoryInput[] | study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput[]\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput | study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput[]\n    upsert?: study_planner_study_categoriesUpsertWithWhereUniqueWithoutParentCategoryInput | study_planner_study_categoriesUpsertWithWhereUniqueWithoutParentCategoryInput[]\n    createMany?: study_planner_study_categoriesCreateManyParentCategoryInputEnvelope\n    set?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    disconnect?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    delete?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    connect?: study_planner_study_categoriesWhereUniqueInput | study_planner_study_categoriesWhereUniqueInput[]\n    update?: study_planner_study_categoriesUpdateWithWhereUniqueWithoutParentCategoryInput | study_planner_study_categoriesUpdateWithWhereUniqueWithoutParentCategoryInput[]\n    updateMany?: study_planner_study_categoriesUpdateManyWithWhereWithoutParentCategoryInput | study_planner_study_categoriesUpdateManyWithWhereWithoutParentCategoryInput[]\n    deleteMany?: study_planner_study_categoriesScalarWhereInput | study_planner_study_categoriesScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudyCategoryNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput> | study_planner_study_tasksCreateWithoutStudyCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput | study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyCategoryInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyCategoryInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyCategoryInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyCategoryInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudyCategoryInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudyCategoryInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n  }\n\n  export type study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_study_categoriesWhereUniqueInput\n  }\n\n  export type study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_attachmentsCreateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_attachmentsCreateWithoutStudyTaskInput[] | study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_attachmentsCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_memosCreateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_memosCreateWithoutStudyTaskInput[] | study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_memosCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_attachmentsCreateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_attachmentsCreateWithoutStudyTaskInput[] | study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_attachmentsCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_memosCreateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_memosCreateWithoutStudyTaskInput[] | study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_memosCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_study_tasksInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput, study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    upsert?: study_planner_study_phasesUpsertWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput>, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput = {\n    create?: XOR<study_planner_study_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_study_categoriesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    upsert?: study_planner_study_categoriesUpsertWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_study_categoriesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_categoriesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUpdateWithoutStudy_planner_study_tasksInput>, study_planner_study_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_attachmentsCreateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_attachmentsCreateWithoutStudyTaskInput[] | study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_attachmentsCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    disconnect?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    delete?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    connect?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    update?: study_planner_study_task_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_attachmentsUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_attachmentsUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_attachmentsScalarWhereInput | study_planner_study_task_attachmentsScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_memosCreateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_memosCreateWithoutStudyTaskInput[] | study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_memosUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_memosUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_memosCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    disconnect?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    delete?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    connect?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    update?: study_planner_study_task_memosUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_memosUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_memosUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_memosUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_memosScalarWhereInput | study_planner_study_task_memosScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_attachmentsCreateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_attachmentsCreateWithoutStudyTaskInput[] | study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_attachmentsCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    disconnect?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    delete?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    connect?: study_planner_study_task_attachmentsWhereUniqueInput | study_planner_study_task_attachmentsWhereUniqueInput[]\n    update?: study_planner_study_task_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_attachmentsUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_attachmentsUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_attachmentsScalarWhereInput | study_planner_study_task_attachmentsScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_memosCreateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_memosCreateWithoutStudyTaskInput[] | study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_memosUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_memosUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_memosCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    disconnect?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    delete?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    connect?: study_planner_study_task_memosWhereUniqueInput | study_planner_study_task_memosWhereUniqueInput[]\n    update?: study_planner_study_task_memosUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_memosUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_memosUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_memosUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_memosScalarWhereInput | study_planner_study_task_memosScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_attachmentsInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_attachmentsInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_attachmentsInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type IntFieldUpdateOperationsInput = {\n    set?: number\n    increment?: number\n    decrement?: number\n    multiply?: number\n    divide?: number\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_attachmentsNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_attachmentsInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_attachmentsInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_study_task_attachmentsInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUpdateWithoutStudy_planner_study_task_attachmentsInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_attachmentsInput>\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_memosInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_memosInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_memosInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_memosNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_memosInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_memosInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_study_task_memosInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUpdateWithoutStudy_planner_study_task_memosInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_memosInput>\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_progressInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_task_progressInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    upsert?: study_planner_study_phasesUpsertWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput>, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_alarmsInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_alarmsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_alarmsInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_pwa_notificationsCreateNestedManyWithoutAlarmInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput> | study_planner_pwa_notificationsCreateWithoutAlarmInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput | study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyAlarmInputEnvelope\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutAlarmInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput> | study_planner_pwa_notificationsCreateWithoutAlarmInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput | study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyAlarmInputEnvelope\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n  }\n\n  export type BoolFieldUpdateOperationsInput = {\n    set?: boolean\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_alarmsNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_alarmsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_alarmsInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_alarmsInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_alarmsInput, study_planner_studentsUpdateWithoutStudy_planner_alarmsInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_alarmsInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyWithoutAlarmNestedInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput> | study_planner_pwa_notificationsCreateWithoutAlarmInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput | study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput[]\n    upsert?: study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutAlarmInput | study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutAlarmInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyAlarmInputEnvelope\n    set?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    disconnect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    delete?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    update?: study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutAlarmInput | study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutAlarmInput[]\n    updateMany?: study_planner_pwa_notificationsUpdateManyWithWhereWithoutAlarmInput | study_planner_pwa_notificationsUpdateManyWithWhereWithoutAlarmInput[]\n    deleteMany?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyWithoutAlarmNestedInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput> | study_planner_pwa_notificationsCreateWithoutAlarmInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput | study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput[]\n    upsert?: study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutAlarmInput | study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutAlarmInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyAlarmInputEnvelope\n    set?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    disconnect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    delete?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    update?: study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutAlarmInput | study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutAlarmInput[]\n    updateMany?: study_planner_pwa_notificationsUpdateManyWithWhereWithoutAlarmInput | study_planner_pwa_notificationsUpdateManyWithWhereWithoutAlarmInput[]\n    deleteMany?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_general_remindersInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_general_remindersInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_pwa_notificationsCreateNestedManyWithoutGeneralReminderInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput> | study_planner_pwa_notificationsCreateWithoutGeneralReminderInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput | study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyGeneralReminderInputEnvelope\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutGeneralReminderInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput> | study_planner_pwa_notificationsCreateWithoutGeneralReminderInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput | study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyGeneralReminderInputEnvelope\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_general_remindersNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_general_remindersInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_general_remindersInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_general_remindersInput, study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyWithoutGeneralReminderNestedInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput> | study_planner_pwa_notificationsCreateWithoutGeneralReminderInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput | study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput[]\n    upsert?: study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutGeneralReminderInput | study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutGeneralReminderInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyGeneralReminderInputEnvelope\n    set?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    disconnect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    delete?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    update?: study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutGeneralReminderInput | study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutGeneralReminderInput[]\n    updateMany?: study_planner_pwa_notificationsUpdateManyWithWhereWithoutGeneralReminderInput | study_planner_pwa_notificationsUpdateManyWithWhereWithoutGeneralReminderInput[]\n    deleteMany?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyWithoutGeneralReminderNestedInput = {\n    create?: XOR<study_planner_pwa_notificationsCreateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput> | study_planner_pwa_notificationsCreateWithoutGeneralReminderInput[] | study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput[]\n    connectOrCreate?: study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput | study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput[]\n    upsert?: study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutGeneralReminderInput | study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutGeneralReminderInput[]\n    createMany?: study_planner_pwa_notificationsCreateManyGeneralReminderInputEnvelope\n    set?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    disconnect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    delete?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    connect?: study_planner_pwa_notificationsWhereUniqueInput | study_planner_pwa_notificationsWhereUniqueInput[]\n    update?: study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutGeneralReminderInput | study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutGeneralReminderInput[]\n    updateMany?: study_planner_pwa_notificationsUpdateManyWithWhereWithoutGeneralReminderInput | study_planner_pwa_notificationsUpdateManyWithWhereWithoutGeneralReminderInput[]\n    deleteMany?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_pwa_notificationsInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_alarmsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput = {\n    create?: XOR<study_planner_alarmsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    connectOrCreate?: study_planner_alarmsCreateOrConnectWithoutStudy_planner_pwa_notificationsInput\n    connect?: study_planner_alarmsWhereUniqueInput\n  }\n\n  export type study_planner_general_remindersCreateNestedOneWithoutStudy_planner_pwa_notificationsInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudy_planner_pwa_notificationsInput\n    connect?: study_planner_general_remindersWhereUniqueInput\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_pwa_notificationsNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_pwa_notificationsInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_pwa_notificationsInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUpdateWithoutStudy_planner_pwa_notificationsInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_alarmsUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput = {\n    create?: XOR<study_planner_alarmsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    connectOrCreate?: study_planner_alarmsCreateOrConnectWithoutStudy_planner_pwa_notificationsInput\n    upsert?: study_planner_alarmsUpsertWithoutStudy_planner_pwa_notificationsInput\n    disconnect?: study_planner_alarmsWhereInput | boolean\n    delete?: study_planner_alarmsWhereInput | boolean\n    connect?: study_planner_alarmsWhereUniqueInput\n    update?: XOR<XOR<study_planner_alarmsUpdateToOneWithWhereWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUpdateWithoutStudy_planner_pwa_notificationsInput>, study_planner_alarmsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_general_remindersUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudy_planner_pwa_notificationsInput\n    upsert?: study_planner_general_remindersUpsertWithoutStudy_planner_pwa_notificationsInput\n    disconnect?: study_planner_general_remindersWhereInput | boolean\n    delete?: study_planner_general_remindersWhereInput | boolean\n    connect?: study_planner_general_remindersWhereUniqueInput\n    update?: XOR<XOR<study_planner_general_remindersUpdateToOneWithWhereWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUpdateWithoutStudy_planner_pwa_notificationsInput>, study_planner_general_remindersUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedUuidNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type NestedFloatFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatFilter<$PrismaModel> | number\n  }\n\n  export type NestedBoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudentInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyCategory: study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudentInput = {\n    id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudentInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksCreateManyStudentInputEnvelope = {\n    data: study_planner_study_tasksCreateManyStudentInput | study_planner_study_tasksCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_alarmsCreateWithoutStudentInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutAlarmInput\n  }\n\n  export type study_planner_alarmsUncheckedCreateWithoutStudentInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutAlarmInput\n  }\n\n  export type study_planner_alarmsCreateOrConnectWithoutStudentInput = {\n    where: study_planner_alarmsWhereUniqueInput\n    create: XOR<study_planner_alarmsCreateWithoutStudentInput, study_planner_alarmsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_alarmsCreateManyStudentInputEnvelope = {\n    data: study_planner_alarmsCreateManyStudentInput | study_planner_alarmsCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_general_remindersCreateWithoutStudentInput = {\n    id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutGeneralReminderInput\n  }\n\n  export type study_planner_general_remindersUncheckedCreateWithoutStudentInput = {\n    id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutGeneralReminderInput\n  }\n\n  export type study_planner_general_remindersCreateOrConnectWithoutStudentInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    create: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersCreateManyStudentInputEnvelope = {\n    data: study_planner_general_remindersCreateManyStudentInput | study_planner_general_remindersCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_pwa_notificationsCreateWithoutStudentInput = {\n    id: string\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    alarm?: study_planner_alarmsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n    generalReminder?: study_planner_general_remindersCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput = {\n    id: string\n    alarm_id?: string | null\n    general_reminder_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateOrConnectWithoutStudentInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    create: XOR<study_planner_pwa_notificationsCreateWithoutStudentInput, study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_pwa_notificationsCreateManyStudentInputEnvelope = {\n    data: study_planner_pwa_notificationsCreateManyStudentInput | study_planner_pwa_notificationsCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    update: XOR<study_planner_study_tasksUpdateWithoutStudentInput, study_planner_study_tasksUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudentInput, study_planner_study_tasksUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_study_tasksScalarWhereInput\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksScalarWhereInput = {\n    AND?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n    OR?: study_planner_study_tasksScalarWhereInput[]\n    NOT?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    student_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_category_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    title?: StringFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_study_tasks\"> | Date | string | null\n  }\n\n  export type study_planner_alarmsUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_alarmsWhereUniqueInput\n    update: XOR<study_planner_alarmsUpdateWithoutStudentInput, study_planner_alarmsUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_alarmsCreateWithoutStudentInput, study_planner_alarmsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_alarmsUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_alarmsWhereUniqueInput\n    data: XOR<study_planner_alarmsUpdateWithoutStudentInput, study_planner_alarmsUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_alarmsUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_alarmsScalarWhereInput\n    data: XOR<study_planner_alarmsUpdateManyMutationInput, study_planner_alarmsUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_alarmsScalarWhereInput = {\n    AND?: study_planner_alarmsScalarWhereInput | study_planner_alarmsScalarWhereInput[]\n    OR?: study_planner_alarmsScalarWhereInput[]\n    NOT?: study_planner_alarmsScalarWhereInput | study_planner_alarmsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_alarms\"> | string\n    student_id?: UuidFilter<\"study_planner_alarms\"> | string\n    title?: StringFilter<\"study_planner_alarms\"> | string\n    alarm_time?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    enabled?: BoolFilter<\"study_planner_alarms\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_alarms\"> | Date | string | null\n  }\n\n  export type study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    update: XOR<study_planner_general_remindersUpdateWithoutStudentInput, study_planner_general_remindersUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    data: XOR<study_planner_general_remindersUpdateWithoutStudentInput, study_planner_general_remindersUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_general_remindersScalarWhereInput\n    data: XOR<study_planner_general_remindersUpdateManyMutationInput, study_planner_general_remindersUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersScalarWhereInput = {\n    AND?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n    OR?: study_planner_general_remindersScalarWhereInput[]\n    NOT?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    student_id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    title?: StringFilter<\"study_planner_general_reminders\"> | string\n    reminder_time?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    enabled?: BoolFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_general_reminders\"> | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    update: XOR<study_planner_pwa_notificationsUpdateWithoutStudentInput, study_planner_pwa_notificationsUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_pwa_notificationsCreateWithoutStudentInput, study_planner_pwa_notificationsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    data: XOR<study_planner_pwa_notificationsUpdateWithoutStudentInput, study_planner_pwa_notificationsUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_pwa_notificationsScalarWhereInput\n    data: XOR<study_planner_pwa_notificationsUpdateManyMutationInput, study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_pwa_notificationsScalarWhereInput = {\n    AND?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n    OR?: study_planner_pwa_notificationsScalarWhereInput[]\n    NOT?: study_planner_pwa_notificationsScalarWhereInput | study_planner_pwa_notificationsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_pwa_notifications\"> | string\n    student_id?: UuidFilter<\"study_planner_pwa_notifications\"> | string\n    alarm_id?: UuidNullableFilter<\"study_planner_pwa_notifications\"> | string | null\n    general_reminder_id?: UuidNullableFilter<\"study_planner_pwa_notifications\"> | string | null\n    notification_time?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    delivered?: BoolFilter<\"study_planner_pwa_notifications\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_pwa_notifications\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_pwa_notifications\"> | Date | string | null\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudyPhaseInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyCategory: study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput = {\n    id: string\n    student_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksCreateManyStudyPhaseInputEnvelope = {\n    data: study_planner_study_tasksCreateManyStudyPhaseInput | study_planner_study_tasksCreateManyStudyPhaseInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_task_progressCreateWithoutStudyPhaseInput = {\n    id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_progressInput\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput = {\n    id: string\n    study_task_id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope = {\n    data: study_planner_study_task_progressCreateManyStudyPhaseInput | study_planner_study_task_progressCreateManyStudyPhaseInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    update: XOR<study_planner_study_tasksUpdateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedUpdateWithoutStudyPhaseInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedUpdateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksScalarWhereInput\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    update: XOR<study_planner_study_task_progressUpdateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyPhaseInput>\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    data: XOR<study_planner_study_task_progressUpdateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressScalarWhereInput\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressScalarWhereInput = {\n    AND?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n    OR?: study_planner_study_task_progressScalarWhereInput[]\n    NOT?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    status?: StringFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n  }\n\n  export type study_planner_study_categoriesCreateWithoutRecursiveInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    parentCategory?: study_planner_study_categoriesCreateNestedOneWithoutRecursiveInput\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyCategoryInput\n  }\n\n  export type study_planner_study_categoriesUncheckedCreateWithoutRecursiveInput = {\n    id: string\n    parent_category_id?: string | null\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyCategoryInput\n  }\n\n  export type study_planner_study_categoriesCreateOrConnectWithoutRecursiveInput = {\n    where: study_planner_study_categoriesWhereUniqueInput\n    create: XOR<study_planner_study_categoriesCreateWithoutRecursiveInput, study_planner_study_categoriesUncheckedCreateWithoutRecursiveInput>\n  }\n\n  export type study_planner_study_categoriesCreateWithoutParentCategoryInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: study_planner_study_categoriesCreateNestedManyWithoutParentCategoryInput\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyCategoryInput\n  }\n\n  export type study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: study_planner_study_categoriesUncheckedCreateNestedManyWithoutParentCategoryInput\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyCategoryInput\n  }\n\n  export type study_planner_study_categoriesCreateOrConnectWithoutParentCategoryInput = {\n    where: study_planner_study_categoriesWhereUniqueInput\n    create: XOR<study_planner_study_categoriesCreateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput>\n  }\n\n  export type study_planner_study_categoriesCreateManyParentCategoryInputEnvelope = {\n    data: study_planner_study_categoriesCreateManyParentCategoryInput | study_planner_study_categoriesCreateManyParentCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudyCategoryInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudyCategoryInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput>\n  }\n\n  export type study_planner_study_tasksCreateManyStudyCategoryInputEnvelope = {\n    data: study_planner_study_tasksCreateManyStudyCategoryInput | study_planner_study_tasksCreateManyStudyCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_categoriesUpsertWithoutRecursiveInput = {\n    update: XOR<study_planner_study_categoriesUpdateWithoutRecursiveInput, study_planner_study_categoriesUncheckedUpdateWithoutRecursiveInput>\n    create: XOR<study_planner_study_categoriesCreateWithoutRecursiveInput, study_planner_study_categoriesUncheckedCreateWithoutRecursiveInput>\n    where?: study_planner_study_categoriesWhereInput\n  }\n\n  export type study_planner_study_categoriesUpdateToOneWithWhereWithoutRecursiveInput = {\n    where?: study_planner_study_categoriesWhereInput\n    data: XOR<study_planner_study_categoriesUpdateWithoutRecursiveInput, study_planner_study_categoriesUncheckedUpdateWithoutRecursiveInput>\n  }\n\n  export type study_planner_study_categoriesUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    parentCategory?: study_planner_study_categoriesUpdateOneWithoutRecursiveNestedInput\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateWithoutRecursiveInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    parent_category_id?: NullableStringFieldUpdateOperationsInput | string | null\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesUpsertWithWhereUniqueWithoutParentCategoryInput = {\n    where: study_planner_study_categoriesWhereUniqueInput\n    update: XOR<study_planner_study_categoriesUpdateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedUpdateWithoutParentCategoryInput>\n    create: XOR<study_planner_study_categoriesCreateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedCreateWithoutParentCategoryInput>\n  }\n\n  export type study_planner_study_categoriesUpdateWithWhereUniqueWithoutParentCategoryInput = {\n    where: study_planner_study_categoriesWhereUniqueInput\n    data: XOR<study_planner_study_categoriesUpdateWithoutParentCategoryInput, study_planner_study_categoriesUncheckedUpdateWithoutParentCategoryInput>\n  }\n\n  export type study_planner_study_categoriesUpdateManyWithWhereWithoutParentCategoryInput = {\n    where: study_planner_study_categoriesScalarWhereInput\n    data: XOR<study_planner_study_categoriesUpdateManyMutationInput, study_planner_study_categoriesUncheckedUpdateManyWithoutParentCategoryInput>\n  }\n\n  export type study_planner_study_categoriesScalarWhereInput = {\n    AND?: study_planner_study_categoriesScalarWhereInput | study_planner_study_categoriesScalarWhereInput[]\n    OR?: study_planner_study_categoriesScalarWhereInput[]\n    NOT?: study_planner_study_categoriesScalarWhereInput | study_planner_study_categoriesScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_categories\"> | string\n    parent_category_id?: UuidNullableFilter<\"study_planner_study_categories\"> | string | null\n    code?: StringFilter<\"study_planner_study_categories\"> | string\n    name?: StringFilter<\"study_planner_study_categories\"> | string\n    description?: StringNullableFilter<\"study_planner_study_categories\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_categories\"> | Date | string\n  }\n\n  export type study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyCategoryInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    update: XOR<study_planner_study_tasksUpdateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedUpdateWithoutStudyCategoryInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedCreateWithoutStudyCategoryInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyCategoryInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudyCategoryInput, study_planner_study_tasksUncheckedUpdateWithoutStudyCategoryInput>\n  }\n\n  export type study_planner_study_tasksUpdateManyWithWhereWithoutStudyCategoryInput = {\n    where: study_planner_study_tasksScalarWhereInput\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyWithoutStudyCategoryInput>\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_alarms?: study_planner_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_alarms?: study_planner_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_study_tasksInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_tasksInput = {\n    where: study_planner_study_phasesWhereUniqueInput\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_categoriesCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    parentCategory?: study_planner_study_categoriesCreateNestedOneWithoutRecursiveInput\n    recursive?: study_planner_study_categoriesCreateNestedManyWithoutParentCategoryInput\n  }\n\n  export type study_planner_study_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    parent_category_id?: string | null\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    recursive?: study_planner_study_categoriesUncheckedCreateNestedManyWithoutParentCategoryInput\n  }\n\n  export type study_planner_study_categoriesCreateOrConnectWithoutStudy_planner_study_tasksInput = {\n    where: study_planner_study_categoriesWhereUniqueInput\n    create: XOR<study_planner_study_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_task_attachmentsCreateWithoutStudyTaskInput = {\n    id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_attachmentsCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n    create: XOR<study_planner_study_task_attachmentsCreateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_attachmentsCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_study_task_attachmentsCreateManyStudyTaskInput | study_planner_study_task_attachmentsCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_task_memosCreateWithoutStudyTaskInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_memosCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_study_task_memosWhereUniqueInput\n    create: XOR<study_planner_study_task_memosCreateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_memosCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_study_task_memosCreateManyStudyTaskInput | study_planner_study_task_memosCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_task_progressCreateWithoutStudyTaskInput = {\n    id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_task_progressInput\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    study_phase_id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_study_task_progressCreateManyStudyTaskInput | study_planner_study_task_progressCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_study_tasksInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_alarms?: study_planner_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_alarms?: study_planner_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_study_phasesUpsertWithoutStudy_planner_study_tasksInput = {\n    update: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    where?: study_planner_study_phasesWhereInput\n  }\n\n  export type study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput = {\n    where?: study_planner_study_phasesWhereInput\n    data: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_categoriesUpsertWithoutStudy_planner_study_tasksInput = {\n    update: XOR<study_planner_study_categoriesUpdateWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n    create: XOR<study_planner_study_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    where?: study_planner_study_categoriesWhereInput\n  }\n\n  export type study_planner_study_categoriesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput = {\n    where?: study_planner_study_categoriesWhereInput\n    data: XOR<study_planner_study_categoriesUpdateWithoutStudy_planner_study_tasksInput, study_planner_study_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_categoriesUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    parentCategory?: study_planner_study_categoriesUpdateOneWithoutRecursiveNestedInput\n    recursive?: study_planner_study_categoriesUpdateManyWithoutParentCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    parent_category_id?: NullableStringFieldUpdateOperationsInput | string | null\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: study_planner_study_categoriesUncheckedUpdateManyWithoutParentCategoryNestedInput\n  }\n\n  export type study_planner_study_task_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n    update: XOR<study_planner_study_task_attachmentsUpdateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_study_task_attachmentsCreateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_attachmentsWhereUniqueInput\n    data: XOR<study_planner_study_task_attachmentsUpdateWithoutStudyTaskInput, study_planner_study_task_attachmentsUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_attachmentsUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_study_task_attachmentsScalarWhereInput\n    data: XOR<study_planner_study_task_attachmentsUpdateManyMutationInput, study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_attachmentsScalarWhereInput = {\n    AND?: study_planner_study_task_attachmentsScalarWhereInput | study_planner_study_task_attachmentsScalarWhereInput[]\n    OR?: study_planner_study_task_attachmentsScalarWhereInput[]\n    NOT?: study_planner_study_task_attachmentsScalarWhereInput | study_planner_study_task_attachmentsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_attachments\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_attachments\"> | string\n    file_name?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    file_type?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    file_size?: IntFilter<\"study_planner_study_task_attachments\"> | number\n    file_uri?: StringFilter<\"study_planner_study_task_attachments\"> | string\n    created_at?: DateTimeFilter<\"study_planner_study_task_attachments\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_attachments\"> | Date | string\n  }\n\n  export type study_planner_study_task_memosUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_memosWhereUniqueInput\n    update: XOR<study_planner_study_task_memosUpdateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_study_task_memosCreateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_memosUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_memosWhereUniqueInput\n    data: XOR<study_planner_study_task_memosUpdateWithoutStudyTaskInput, study_planner_study_task_memosUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_memosUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_study_task_memosScalarWhereInput\n    data: XOR<study_planner_study_task_memosUpdateManyMutationInput, study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_memosScalarWhereInput = {\n    AND?: study_planner_study_task_memosScalarWhereInput | study_planner_study_task_memosScalarWhereInput[]\n    OR?: study_planner_study_task_memosScalarWhereInput[]\n    NOT?: study_planner_study_task_memosScalarWhereInput | study_planner_study_task_memosScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_memos\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_memos\"> | string\n    content?: StringFilter<\"study_planner_study_task_memos\"> | string\n    created_at?: DateTimeFilter<\"study_planner_study_task_memos\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_memos\"> | Date | string\n  }\n\n  export type study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    update: XOR<study_planner_study_task_progressUpdateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    data: XOR<study_planner_study_task_progressUpdateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressScalarWhereInput\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_study_task_attachmentsInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyCategory: study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_memos?: study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_attachmentsInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_attachmentsInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_attachmentsInput>\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_study_task_attachmentsInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_attachmentsInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_attachmentsInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_attachmentsInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_attachmentsInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_attachmentsInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_study_task_attachmentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyCategory?: study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_attachmentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_study_task_memosInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyCategory: study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_memosInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_memosInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_memosInput>\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_study_task_memosInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_memosInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_memosInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_memosInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_memosInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_memosInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_study_task_memosInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyCategory?: study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_memosInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyCategory: study_planner_study_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_progressInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_task_progressInput = {\n    where: study_planner_study_phasesWhereUniqueInput\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_study_task_progressInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyCategory?: study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_phasesUpsertWithoutStudy_planner_study_task_progressInput = {\n    update: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    where?: study_planner_study_phasesWhereInput\n  }\n\n  export type study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput = {\n    where?: study_planner_study_phasesWhereInput\n    data: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_alarmsInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_alarmsInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_alarmsInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_alarmsInput>\n  }\n\n  export type study_planner_pwa_notificationsCreateWithoutAlarmInput = {\n    id: string\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n    generalReminder?: study_planner_general_remindersCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput = {\n    id: string\n    student_id: string\n    general_reminder_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateOrConnectWithoutAlarmInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    create: XOR<study_planner_pwa_notificationsCreateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput>\n  }\n\n  export type study_planner_pwa_notificationsCreateManyAlarmInputEnvelope = {\n    data: study_planner_pwa_notificationsCreateManyAlarmInput | study_planner_pwa_notificationsCreateManyAlarmInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_alarmsInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_alarmsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_alarmsInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_alarmsInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_alarmsInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_alarmsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_alarmsInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_alarmsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_alarmsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutAlarmInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    update: XOR<study_planner_pwa_notificationsUpdateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedUpdateWithoutAlarmInput>\n    create: XOR<study_planner_pwa_notificationsCreateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedCreateWithoutAlarmInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutAlarmInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    data: XOR<study_planner_pwa_notificationsUpdateWithoutAlarmInput, study_planner_pwa_notificationsUncheckedUpdateWithoutAlarmInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyWithWhereWithoutAlarmInput = {\n    where: study_planner_pwa_notificationsScalarWhereInput\n    data: XOR<study_planner_pwa_notificationsUpdateManyMutationInput, study_planner_pwa_notificationsUncheckedUpdateManyWithoutAlarmInput>\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_general_remindersInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_alarms?: study_planner_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_alarms?: study_planner_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_general_remindersInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n  }\n\n  export type study_planner_pwa_notificationsCreateWithoutGeneralReminderInput = {\n    id: string\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n    alarm?: study_planner_alarmsCreateNestedOneWithoutStudy_planner_pwa_notificationsInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput = {\n    id: string\n    student_id: string\n    alarm_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateOrConnectWithoutGeneralReminderInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    create: XOR<study_planner_pwa_notificationsCreateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput>\n  }\n\n  export type study_planner_pwa_notificationsCreateManyGeneralReminderInputEnvelope = {\n    data: study_planner_pwa_notificationsCreateManyGeneralReminderInput | study_planner_pwa_notificationsCreateManyGeneralReminderInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_general_remindersInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_general_remindersInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_alarms?: study_planner_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_alarms?: study_planner_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_pwa_notificationsUpsertWithWhereUniqueWithoutGeneralReminderInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    update: XOR<study_planner_pwa_notificationsUpdateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedUpdateWithoutGeneralReminderInput>\n    create: XOR<study_planner_pwa_notificationsCreateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedCreateWithoutGeneralReminderInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateWithWhereUniqueWithoutGeneralReminderInput = {\n    where: study_planner_pwa_notificationsWhereUniqueInput\n    data: XOR<study_planner_pwa_notificationsUpdateWithoutGeneralReminderInput, study_planner_pwa_notificationsUncheckedUpdateWithoutGeneralReminderInput>\n  }\n\n  export type study_planner_pwa_notificationsUpdateManyWithWhereWithoutGeneralReminderInput = {\n    where: study_planner_pwa_notificationsScalarWhereInput\n    data: XOR<study_planner_pwa_notificationsUpdateManyMutationInput, study_planner_pwa_notificationsUncheckedUpdateManyWithoutGeneralReminderInput>\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_pwa_notificationsInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_alarms?: study_planner_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput = {\n    id: string\n    email: string\n    password_hash: string\n    name: string\n    status: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_alarms?: study_planner_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_pwa_notificationsInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_alarmsCreateWithoutStudy_planner_pwa_notificationsInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_alarmsInput\n  }\n\n  export type study_planner_alarmsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput = {\n    id: string\n    student_id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_alarmsCreateOrConnectWithoutStudy_planner_pwa_notificationsInput = {\n    where: study_planner_alarmsWhereUniqueInput\n    create: XOR<study_planner_alarmsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_general_remindersCreateWithoutStudy_planner_pwa_notificationsInput = {\n    id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_general_remindersInput\n  }\n\n  export type study_planner_general_remindersUncheckedCreateWithoutStudy_planner_pwa_notificationsInput = {\n    id: string\n    student_id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateOrConnectWithoutStudy_planner_pwa_notificationsInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    create: XOR<study_planner_general_remindersCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_pwa_notificationsInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_pwa_notificationsInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_pwa_notificationsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_pwa_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_alarms?: study_planner_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_alarms?: study_planner_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_alarmsUpsertWithoutStudy_planner_pwa_notificationsInput = {\n    update: XOR<study_planner_alarmsUpdateWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n    create: XOR<study_planner_alarmsCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    where?: study_planner_alarmsWhereInput\n  }\n\n  export type study_planner_alarmsUpdateToOneWithWhereWithoutStudy_planner_pwa_notificationsInput = {\n    where?: study_planner_alarmsWhereInput\n    data: XOR<study_planner_alarmsUpdateWithoutStudy_planner_pwa_notificationsInput, study_planner_alarmsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_alarmsUpdateWithoutStudy_planner_pwa_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_alarmsNestedInput\n  }\n\n  export type study_planner_alarmsUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUpsertWithoutStudy_planner_pwa_notificationsInput = {\n    update: XOR<study_planner_general_remindersUpdateWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n    create: XOR<study_planner_general_remindersCreateWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUncheckedCreateWithoutStudy_planner_pwa_notificationsInput>\n    where?: study_planner_general_remindersWhereInput\n  }\n\n  export type study_planner_general_remindersUpdateToOneWithWhereWithoutStudy_planner_pwa_notificationsInput = {\n    where?: study_planner_general_remindersWhereInput\n    data: XOR<study_planner_general_remindersUpdateWithoutStudy_planner_pwa_notificationsInput, study_planner_general_remindersUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput>\n  }\n\n  export type study_planner_general_remindersUpdateWithoutStudy_planner_pwa_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_general_remindersNestedInput\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateWithoutStudy_planner_pwa_notificationsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_tasksCreateManyStudentInput = {\n    id: string\n    study_phase_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_alarmsCreateManyStudentInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateManyStudentInput = {\n    id: string\n    title: string\n    reminder_time: Date | string\n    enabled: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateManyStudentInput = {\n    id: string\n    alarm_id?: string | null\n    general_reminder_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyCategory?: study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_alarmsUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutAlarmNestedInput\n  }\n\n  export type study_planner_alarmsUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutAlarmNestedInput\n  }\n\n  export type study_planner_alarmsUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUpdateManyWithoutGeneralReminderNestedInput\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_pwa_notifications?: study_planner_pwa_notificationsUncheckedUpdateManyWithoutGeneralReminderNestedInput\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    reminder_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    enabled?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    alarm?: study_planner_alarmsUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput\n    generalReminder?: study_planner_general_remindersUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    alarm_id?: NullableStringFieldUpdateOperationsInput | string | null\n    general_reminder_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    alarm_id?: NullableStringFieldUpdateOperationsInput | string | null\n    general_reminder_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_tasksCreateManyStudyPhaseInput = {\n    id: string\n    student_id: string\n    study_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyPhaseInput = {\n    id: string\n    study_task_id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyCategory?: study_planner_study_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_task_progressUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_categoriesCreateManyParentCategoryInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_tasksCreateManyStudyCategoryInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_categoriesUpdateWithoutParentCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: study_planner_study_categoriesUpdateManyWithoutParentCategoryNestedInput\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateWithoutParentCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    recursive?: study_planner_study_categoriesUncheckedUpdateManyWithoutParentCategoryNestedInput\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyCategoryNestedInput\n  }\n\n  export type study_planner_study_categoriesUncheckedUpdateManyWithoutParentCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudyCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudyCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_attachments?: study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_memos?: study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudyCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_task_attachmentsCreateManyStudyTaskInput = {\n    id: string\n    file_name: string\n    file_type: string\n    file_size: number\n    file_uri: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_memosCreateManyStudyTaskInput = {\n    id: string\n    content: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyTaskInput = {\n    id: string\n    study_phase_id: string\n    status: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_attachmentsUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_name?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_size?: IntFieldUpdateOperationsInput | number\n    file_uri?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_memosUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_memosUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_memosUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    content?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    status?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_pwa_notificationsCreateManyAlarmInput = {\n    id: string\n    student_id: string\n    general_reminder_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUpdateWithoutAlarmInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_pwa_notificationsNestedInput\n    generalReminder?: study_planner_general_remindersUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateWithoutAlarmInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    general_reminder_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyWithoutAlarmInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    general_reminder_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsCreateManyGeneralReminderInput = {\n    id: string\n    student_id: string\n    alarm_id?: string | null\n    notification_time: Date | string\n    delivered: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUpdateWithoutGeneralReminderInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_pwa_notificationsNestedInput\n    alarm?: study_planner_alarmsUpdateOneWithoutStudy_planner_pwa_notificationsNestedInput\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateWithoutGeneralReminderInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    alarm_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_pwa_notificationsUncheckedUpdateManyWithoutGeneralReminderInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    alarm_id?: NullableStringFieldUpdateOperationsInput | string | null\n    notification_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    delivered?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}","node_modules/.prisma/client/runtime/index-browser.d.ts":"declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/library.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\n/**\r\n * A stripped down interface of `fetch` that `@prisma/extension-accelerate`\r\n * relies on. It must be in sync with the corresponding definition in the\r\n * Accelerate extension.\r\n *\r\n * This is the actual interface exposed by the extension. We can't use the\r\n * custom fetch function provided by it as normal fetch because the API is\r\n * different. Notably, `headers` must be an object and not a `Headers`\r\n * instance, and `url` must be a `string` and not a `URL`.\r\n *\r\n * The return type is `Response` but we can't specify this in an exported type\r\n * because it would end up referencing external types from `@types/node` or DOM\r\n * which can fail typechecking depending on TypeScript configuration in a user's\r\n * project.\r\n */\r\ndeclare type AccelerateExtensionFetch = (url: string, options: {\r\n    body?: string;\r\n    method?: string;\r\n    headers: Record<string, string>;\r\n}) => Promise<unknown>;\r\n\r\ndeclare type AccelerateExtensionFetchDecorator = (fetch: AccelerateExtensionFetch) => AccelerateExtensionFetch;\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\ndeclare type ArgScalarType = 'string' | 'int' | 'bigint' | 'float' | 'decimal' | 'boolean' | 'enum' | 'uuid' | 'json' | 'datetime' | 'bytes' | 'unknown';\r\n\r\ndeclare type ArgType = {\r\n    scalarType: ArgScalarType;\r\n    dbType?: string;\r\n    arity: Arity;\r\n};\r\n\r\ndeclare type Arity = 'scalar' | 'list';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: Transaction_2.IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: QueryPlanNode;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n    supportsRelationJoins: boolean;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type DataRule = {\r\n    type: 'rowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'rowCountNeq';\r\n    args: number;\r\n} | {\r\n    type: 'affectedRowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'never';\r\n};\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\ndeclare type DynamicArgType = ArgType | {\r\n    arity: 'tuple';\r\n    elements: ArgType[];\r\n};\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = MappedError & {\r\n    originalCode?: string;\r\n    originalMessage?: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldInitializer = {\r\n    type: 'value';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'lastInsertId';\r\n};\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\ndeclare type FieldOperation = {\r\n    type: 'set';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'add';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'subtract';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'multiply';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'divide';\r\n    value: PrismaValue;\r\n};\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FieldScalarType = {\r\n    type: 'string' | 'int' | 'bigint' | 'float' | 'boolean' | 'json' | 'object' | 'datetime' | 'decimal' | 'unsupported';\r\n} | {\r\n    type: 'enum';\r\n    name: string;\r\n} | {\r\n    type: 'bytes';\r\n    encoding: 'array' | 'base64' | 'hex';\r\n};\r\n\r\ndeclare type FieldType = {\r\n    arity: Arity;\r\n} & FieldScalarType;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare type Fragment = {\r\n    type: 'stringChunk';\r\n    chunk: string;\r\n} | {\r\n    type: 'parameter';\r\n} | {\r\n    type: 'parameterTuple';\r\n} | {\r\n    type: 'parameterTupleList';\r\n    itemPrefix: string;\r\n    itemSeparator: string;\r\n    itemSuffix: string;\r\n    groupSeparator: string;\r\n};\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_2<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: Options;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\ndeclare type InMemoryOps = {\r\n    pagination: Pagination | null;\r\n    distinct: string[] | null;\r\n    reverse: boolean;\r\n    linkingFields: string[] | null;\r\n    nested: Record<string, InMemoryOps>;\r\n};\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare type IsolationLevel_2 = 'ReadUncommitted' | 'ReadCommitted' | 'RepeatableRead' | 'Snapshot' | 'Serializable';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\ndeclare type JoinExpression = {\r\n    child: QueryPlanNode;\r\n    on: [left: string, right: string][];\r\n    parentField: string;\r\n    isRelationUnique: boolean;\r\n};\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type MappedError = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseNotReachable';\r\n    host?: string;\r\n    port?: number;\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'ConnectionClosed';\r\n} | {\r\n    kind: 'TlsConnectionError';\r\n    reason: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'ValueOutOfRange';\r\n    cause: string;\r\n} | {\r\n    kind: 'MissingFullTextSearchIndex';\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'InconsistentColumnData';\r\n    cause: string;\r\n} | {\r\n    kind: 'TransactionAlreadyClosed';\r\n    cause: string;\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n} | {\r\n    kind: 'mssql';\r\n    code: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: QueryPlanNode[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-better-sqlite3\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-mssql\", \"@prisma/adapter-mariadb\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    /** Timeout for starting the transaction */\r\n    maxWait?: number;\r\n    /** Timeout for the transaction body */\r\n    timeout?: number;\r\n    /** Transaction isolation level */\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type Options_2 = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\ndeclare type Pagination = {\r\n    cursor: Record<string, PrismaValue> | null;\r\n    take: number | null;\r\n    skip: number | null;\r\n};\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare interface PlaceholderFormat {\r\n    prefix: string;\r\n    hasNumbering: boolean;\r\n}\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options_2);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel_2;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\ndeclare type PrismaValue = string | boolean | number | PrismaValue[] | null | Record<string, unknown> | PrismaValuePlaceholder | PrismaValueGenerator;\r\n\r\ndeclare type PrismaValueGenerator = {\r\n    prisma__type: 'generatorCall';\r\n    prisma__value: {\r\n        name: string;\r\n        args: PrismaValue[];\r\n    };\r\n};\r\n\r\ndeclare type PrismaValuePlaceholder = {\r\n    prisma__type: 'param';\r\n    prisma__value: {\r\n        name: string;\r\n        type: string;\r\n    };\r\n};\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite' | 'sqlserver';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): {};\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n    free(): void;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * Frees any resources allocated by the engine's WASM instance. This method is automatically created by WASM bindgen.\r\n     * Noop for other engines.\r\n     */\r\n    free?(): void;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\ndeclare type QueryPlanBinding = {\r\n    name: string;\r\n    expr: QueryPlanNode;\r\n};\r\n\r\ndeclare type QueryPlanDbQuery = {\r\n    type: 'rawSql';\r\n    sql: string;\r\n    args: PrismaValue[];\r\n    argTypes: ArgType[];\r\n} | {\r\n    type: 'templateSql';\r\n    fragments: Fragment[];\r\n    placeholderFormat: PlaceholderFormat;\r\n    args: PrismaValue[];\r\n    argTypes: DynamicArgType[];\r\n    chunkable: boolean;\r\n};\r\n\r\ndeclare type QueryPlanNode = {\r\n    type: 'value';\r\n    args: PrismaValue;\r\n} | {\r\n    type: 'seq';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'get';\r\n    args: {\r\n        name: string;\r\n    };\r\n} | {\r\n    type: 'let';\r\n    args: {\r\n        bindings: QueryPlanBinding[];\r\n        expr: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'getFirstNonEmpty';\r\n    args: {\r\n        names: string[];\r\n    };\r\n} | {\r\n    type: 'query';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'execute';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'reverse';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'sum';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'concat';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'unique';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'required';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'join';\r\n    args: {\r\n        parent: QueryPlanNode;\r\n        children: JoinExpression[];\r\n    };\r\n} | {\r\n    type: 'mapField';\r\n    args: {\r\n        field: string;\r\n        records: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'transaction';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'dataMap';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        structure: ResultNode;\r\n        enums: Record<string, Record<string, string>>;\r\n    };\r\n} | {\r\n    type: 'validate';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        rules: DataRule[];\r\n    } & ValidationError;\r\n} | {\r\n    type: 'if';\r\n    args: {\r\n        value: QueryPlanNode;\r\n        rule: DataRule;\r\n        then: QueryPlanNode;\r\n        else: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'unit';\r\n} | {\r\n    type: 'diff';\r\n    args: {\r\n        from: QueryPlanNode;\r\n        to: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'initializeRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldInitializer>;\r\n    };\r\n} | {\r\n    type: 'mapRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldOperation>;\r\n    };\r\n} | {\r\n    type: 'process';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        operations: InMemoryOps;\r\n    };\r\n};\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_2<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ResultNode = {\r\n    type: 'affectedRows';\r\n} | {\r\n    type: 'object';\r\n    fields: Record<string, ResultNode>;\r\n    serializedName: string | null;\r\n    skipNulls: boolean;\r\n} | {\r\n    type: 'field';\r\n    dbName: string;\r\n    fieldType: FieldType;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma?: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    requiresOtherFields?: string[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        Options,\r\n        IsolationLevel_2 as IsolationLevel,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare type ValidationError = {\r\n    error_identifier: 'RELATION_VIOLATION';\r\n    context: {\r\n        relation: string;\r\n        modelA: string;\r\n        modelB: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RELATED_RECORD';\r\n    context: {\r\n        model: string;\r\n        relation: string;\r\n        relationType: string;\r\n        operation: string;\r\n        neededFor?: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RECORD';\r\n    context: {\r\n        operation: string;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_INPUT';\r\n    context: {\r\n        expectedRows: number;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_OUTPUT';\r\n    context: {\r\n        expectedRows: number;\r\n        relation: string;\r\n        relationType: string;\r\n    };\r\n} | {\r\n    error_identifier: 'RECORDS_NOT_CONNECTED';\r\n    context: {\r\n        relation: string;\r\n        parent: string;\r\n        child: string;\r\n    };\r\n};\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/wasm.d.ts":"export * from \"./index\"","node_modules/@prisma/client/index.d.ts":"export * from '.prisma/client/default'"},"document":"# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Actors](#actors)\n- [Study](#study)\n- [Notifications](#notifications)\n\n## Actors\n\n```mermaid\nerDiagram\n\"study_planner_students\" {\n  String id PK\n  String email UK\n  String password_hash\n  String name\n  String status\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `study_planner_students`\n\nStudent user accounts for study planner system authentication and profile\nmanagement. This table stores confidential authentication information\nincluding hashed passwords, email for login, and account status. It\nsupports audit trail fields for creation, updates, and soft deletion to\nenable secure and maintainable user management. This model is primary as\nstudents require independent API operations for sign-up, login, profile\nupdates, and password recovery.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `email`: Unique email address used for user login and identification.\n- `password_hash`: Hashed password for secure authentication.\n- `name`: Name of the student user for personalization and display.\n- `status`: Account status to indicate if the user is active, suspended, or disabled.\n- `created_at`: Timestamp when the student account was created.\n- `updated_at`: Timestamp when the student account was last updated.\n- `deleted_at`\n  > Timestamp for soft deletion to mark the account as deleted without\n  > physical removal.\n\n## Study\n\n```mermaid\nerDiagram\n\"study_planner_study_phases\" {\n  String id PK\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_categories\" {\n  String id PK\n  String parent_category_id FK \"nullable\"\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_tasks\" {\n  String id PK\n  String student_id FK\n  String study_phase_id FK\n  String study_category_id FK\n  String title\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_study_task_attachments\" {\n  String id PK\n  String study_task_id FK\n  String file_name\n  String file_type\n  Int file_size\n  String(80000) file_uri\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_task_memos\" {\n  String id PK\n  String study_task_id FK\n  String content\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_task_progress\" {\n  String id PK\n  String study_task_id FK\n  String study_phase_id FK\n  String status\n  DateTime completed_at \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_categories\" }o--o| \"study_planner_study_categories\" : parentCategory\n\"study_planner_study_tasks\" }o--|| \"study_planner_study_phases\" : studyPhase\n\"study_planner_study_tasks\" }o--|| \"study_planner_study_categories\" : studyCategory\n\"study_planner_study_task_attachments\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_study_task_memos\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_study_task_progress\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_study_task_progress\" }o--|| \"study_planner_study_phases\" : studyPhase\n```\n\n### `study_planner_study_phases`\n\nDefines the three core study phases (preview, main learning, review) that\ncategorize study tasks. This classification enables structured progress\nmanagement and analytics. It is a primary entity for organizing study\nactivities. No soft delete required as phases are stable definitions.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `code`\n  > Unique code identifier for the study phase, e.g., 'preview',\n  > 'main_learning', 'review'.\n- `name`: Human-readable name of the study phase.\n- `description`: Optional detailed description of the study phase.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n### `study_planner_study_categories`\n\nDefines categories for study tasks, including specific English\nsubcategories such as grammar, vocabulary, speaking, and others. Supports\nhierarchical categorization for tasks to allow detailed analytical\nbreakdowns and filtering.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `parent_category_id`\n  > Optional parent category for hierarchical categorization. References\n  > parent category's [study_planner_study_categories.id](#study_planner_study_categories).\n- `code`\n  > Unique code identifier for the category, e.g., 'english_grammar',\n  > 'english_vocabulary'.\n- `name`: Name of the category.\n- `description`: Optional detailed description of the study category.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n### `study_planner_study_tasks`\n\nStudy tasks created by authenticated students, organized by study phase\nand category. Represents core learning activities including title,\ndescription, progress tracking, and attachments. Soft delete enabled for\nrecovery.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Owning student's [study_planner_students.id](#study_planner_students).\n- `study_phase_id`: Associated study phase [study_planner_study_phases.id](#study_planner_study_phases).\n- `study_category_id`: Associated category [study_planner_study_categories.id](#study_planner_study_categories).\n- `title`: Title of the study task.\n- `description`: Detailed description of the study task.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n- `deleted_at`: Soft deletion timestamp for recovery.\n\n### `study_planner_study_task_attachments`\n\nAttachments such as images or PDFs linked to study tasks. Supports\nstoring attachment metadata and manages file associations. Subsidiary to\nstudy tasks with no independent API needed.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `study_task_id`: Linked study task [study_planner_study_tasks.id](#study_planner_study_tasks).\n- `file_name`: Original file name of the attachment.\n- `file_type`: MIME type of the attachment file.\n- `file_size`: File size in bytes.\n- `file_uri`: URI path to the stored file.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n### `study_planner_study_task_memos`\n\nMemos containing textual notes linked to study tasks. Supports students\nadding additional information or study hints. Subsidiary to study tasks\nand managed indirectly.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `study_task_id`: Linked study task [study_planner_study_tasks.id](#study_planner_study_tasks).\n- `content`: Text content of the memo.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n### `study_planner_study_task_progress`\n\nTracks progress and completion timestamps of each study phase per study\ntask. Enables detailed progress analysis and validation over study\nlifecycle. Subsidiary entity updated via study task operations.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `study_task_id`: Associated study task [study_planner_study_tasks.id](#study_planner_study_tasks).\n- `study_phase_id`: Associated study phase [study_planner_study_phases.id](#study_planner_study_phases).\n- `status`\n  > Current progress status for the phase (e.g., 'not_started',\n  > 'in_progress', 'completed').\n- `completed_at`: Timestamp when the phase was completed.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n## Notifications\n\n```mermaid\nerDiagram\n\"study_planner_alarms\" {\n  String id PK\n  String student_id FK\n  String title\n  DateTime alarm_time\n  Boolean enabled\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_general_reminders\" {\n  String id PK\n  String student_id FK\n  String title\n  DateTime reminder_time\n  Boolean enabled\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_pwa_notifications\" {\n  String id PK\n  String student_id FK\n  String alarm_id FK \"nullable\"\n  String general_reminder_id FK \"nullable\"\n  DateTime notification_time\n  Boolean delivered\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_pwa_notifications\" }o--o| \"study_planner_alarms\" : alarm\n\"study_planner_pwa_notifications\" }o--o| \"study_planner_general_reminders\" : generalReminder\n```\n\n### `study_planner_alarms`\n\nContains alarm records set by students for study reminders. Each alarm is\nlinked to a specific student and includes scheduling and status details.\nThis primary table allows users to manage individual alarms\nindependently.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Linked student who owns the alarm. [study_planner_students.id](#study_planner_students)\n- `title`: Title or label of the alarm for user identification.\n- `alarm_time`: Scheduled alarm time when notification should be sent.\n- `enabled`: Flag indicating if the alarm is active.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Timestamp of last modification.\n- `deleted_at`: Soft delete timestamp; null if not deleted.\n\n### `study_planner_general_reminders`\n\nStores general reminder entries set by students that are not tied to\nspecific study tasks or alarms. These reminders are managed independently\nand provide flexible notification options.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Student owning the general reminder. [study_planner_students.id](#study_planner_students)\n- `title`: Descriptive title for the reminder.\n- `reminder_time`: Timestamp when the reminder is scheduled to notify the user.\n- `enabled`: Indicates whether the reminder is active.\n- `created_at`: Time when the reminder was created.\n- `updated_at`: Last updated timestamp for the reminder.\n- `deleted_at`: Timestamp indicating soft deletion; null if active.\n\n### `study_planner_pwa_notifications`\n\nTracks Progressive Web App notifications sent to students triggered by\nalarms or reminders. Each record logs delivery status, related entities,\nand timestamps for auditing and retry logic.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`\n  > Target student receiving the PWA notification. {@link\n  > study_planner_students.id}\n- `alarm_id`\n  > Associated alarm triggering this notification, if applicable. {@link\n  > study_planner_alarms.id}\n- `general_reminder_id`\n  > Associated general reminder triggering this notification, if applicable.\n  > [study_planner_general_reminders.id](#study_planner_general_reminders)\n- `notification_time`: Timestamp when the PWA notification was sent or attempted.\n- `delivered`: Flag indicating if the notification was successfully delivered.\n- `created_at`: Record creation timestamp for audit purposes.\n- `updated_at`: Timestamp of last update to the notification record.\n- `deleted_at`: Soft delete timestamp; null if the notification record is active.\n","diagrams":{"Actors":"```mermaid\nerDiagram\n\"study_planner_students\" {\n  String id PK\n  String email UK\n  String password_hash\n  String name\n  String status\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```","Study":"```mermaid\nerDiagram\n\"study_planner_study_phases\" {\n  String id PK\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_categories\" {\n  String id PK\n  String parent_category_id FK \"nullable\"\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_tasks\" {\n  String id PK\n  String student_id FK\n  String study_phase_id FK\n  String study_category_id FK\n  String title\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_study_task_attachments\" {\n  String id PK\n  String study_task_id FK\n  String file_name\n  String file_type\n  Int file_size\n  String(80000) file_uri\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_task_memos\" {\n  String id PK\n  String study_task_id FK\n  String content\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_task_progress\" {\n  String id PK\n  String study_task_id FK\n  String study_phase_id FK\n  String status\n  DateTime completed_at \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_categories\" }o--o| \"study_planner_study_categories\" : parentCategory\n\"study_planner_study_tasks\" }o--|| \"study_planner_study_phases\" : studyPhase\n\"study_planner_study_tasks\" }o--|| \"study_planner_study_categories\" : studyCategory\n\"study_planner_study_task_attachments\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_study_task_memos\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_study_task_progress\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_study_task_progress\" }o--|| \"study_planner_study_phases\" : studyPhase\n```","Notifications":"```mermaid\nerDiagram\n\"study_planner_alarms\" {\n  String id PK\n  String student_id FK\n  String title\n  DateTime alarm_time\n  Boolean enabled\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_general_reminders\" {\n  String id PK\n  String student_id FK\n  String title\n  DateTime reminder_time\n  Boolean enabled\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_pwa_notifications\" {\n  String id PK\n  String student_id FK\n  String alarm_id FK \"nullable\"\n  String general_reminder_id FK \"nullable\"\n  DateTime notification_time\n  Boolean delivered\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_pwa_notifications\" }o--o| \"study_planner_alarms\" : alarm\n\"study_planner_pwa_notifications\" }o--o| \"study_planner_general_reminders\" : generalReminder\n```"}},"created_at":"2025-09-12T17:56:45.066Z","completed_at":"2025-09-12T18:01:48.988Z","step":0},{"id":"01993f1c-189f-74ca-8fcc-b729ee4d22d2","type":"userMessage","contents":[{"type":"text","text":"and ?"}],"created_at":"2025-09-12T18:07:09.983Z"},{"id":"01993f1c-1e63-73d4-a259-331fbb380f18","type":"assistantMessage","text":"The analysis of your study planner backend requirements is complete. The next step is to generate the database schema and ERD documentation based on these requirements. This schema will define the data models, their attributes, and relationships needed to implement your study planner with features like managing preview, main learning, review phases, content attachments, progress tracking, notifications, user authentication, and charts.\n\nShall I proceed now to create the detailed database schema for your study planner backend?","created_at":"2025-09-12T18:07:11.459Z","completed_at":"2025-09-12T18:07:14.916Z"},{"id":"01993f1d-08a7-744f-bf5f-60a8a42aa59e","type":"userMessage","contents":[{"type":"text","text":"go !"}],"created_at":"2025-09-12T18:08:11.431Z"},{"type":"prisma","id":"01993f1e-913f-7719-8ad6-b0a844dad110","reason":"Generate database schema and ERD documentation based on the study planner requirements analysis that includes managing preview, main learning, and review phases, progress tracking, categorization by subjects and topics (e.g. English grammar, vocabulary, speaking), support for image and PDF attachments, alarms and PWA notifications, charting insufficient learning, and user authentication with sign-in, sign-up, and recovery features.","schemas":{"schema-01-systematic.prisma":"/// Defines the three distinct study phases available in the study planner\n/// system (preview, main learning, review). These phases categorize study\n/// activities and enable progress tracking by phase.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_phases {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Unique code identifier of the study phase, e.g., 'preview',\n  /// 'main_learning', 'review'.\n  code String\n  \n  /// Human-readable name of the study phase, e.g., 'Preview'.\n  name String\n  \n  /// Optional detailed description of the study phase.\n  description String?\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks study_planner_study_tasks[]\n  study_planner_study_task_progress study_planner_study_task_progress[]\n  study_planner_study_progress_analytics study_planner_study_progress_analytics[]\n  \n  @@unique([code])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Stores subject categories used for classifying study tasks, including\n/// hierarchical English language subcategories for grammar, vocabulary,\n/// speaking, and others.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_subject_categories {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Unique code identifier of the subject category, e.g., 'english_grammar'.\n  code String\n  \n  /// Human-readable name of the subject category, e.g., 'English Grammar'.\n  name String\n  \n  /// Optional detailed description of the subject category.\n  description String?\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks study_planner_study_tasks[]\n  study_planner_learning_gap_charts study_planner_learning_gap_charts[]\n  \n  @@unique([code])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-02-actors.prisma":"/// This table stores authenticated student user information including login\n/// credentials and audit timestamps. It supports user authentication by\n/// maintaining unique emails and hashed passwords. It includes temporal\n/// fields for creation, update, and potential soft deletion timestamps. As a\n/// primary entity, it allows independent user management and secure\n/// authentication workflows.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_students {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Unique email address used for student login and communication.\n  email String\n  \n  /// Secure hashed password for authentication purposes. Plain passwords are\n  /// never stored.\n  password_hash String\n  \n  /// Timestamp when the student record was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the student record was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Timestamp indicating when the student record was soft deleted, if\n  /// applicable.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks study_planner_study_tasks[]\n  study_planner_task_alarms study_planner_task_alarms[]\n  study_planner_general_reminders study_planner_general_reminders[]\n  study_planner_study_progress_analytics study_planner_study_progress_analytics[]\n  study_planner_learning_gap_charts study_planner_learning_gap_charts[]\n  \n  @@unique([email])\n  @@index([created_at])\n  @@index([updated_at])\n}","schema-03-study.prisma":"/// Core entity representing a student study task managed independently,\n/// linked to a student, study phase, and subject category. Tracks title,\n/// optional description, and soft deletion. Supports creation and update\n/// timestamps for audit trail.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_tasks {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged student's {@link study_planner_students.id}\n  student_id String @db.Uuid\n  \n  /// Associated study phase {@link study_planner_study_phases.id}\n  study_phase_id String @db.Uuid\n  \n  /// Linked subject category {@link study_planner_subject_categories.id}\n  subject_category_id String @db.Uuid\n  \n  /// Title of the study task capturing the user's learning goal.\n  title String\n  \n  /// Detailed description or notes about the study task.\n  description String?\n  \n  /// Timestamp when the study task was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the study task was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the study task was soft deleted; null if not deleted.\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  subjectCategory study_planner_subject_categories @relation(fields: [subject_category_id], references: [id], onDelete: Cascade)\n  \n  study_planner_study_task_progress study_planner_study_task_progress[]\n  study_planner_attachments study_planner_attachments[]\n  study_planner_memos study_planner_memos[]\n  study_planner_task_alarms study_planner_task_alarms[]\n  \n  @@index([study_phase_id])\n  @@index([subject_category_id])\n  \n  @@unique([student_id, title])\n  @@index([student_id, study_phase_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Stores progress information per study phase for each study task. Includes\n/// completion timestamps for tracking phase completion states to support\n/// study lifecycle management and analytics. References the main study task\n/// and the study phase.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_progress {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Associated study task {@link study_planner_study_tasks.id}\n  study_task_id String @db.Uuid\n  \n  /// Tracked study phase {@link study_planner_study_phases.id}\n  study_phase_id String @db.Uuid\n  \n  /// Timestamp when the study phase was completed for this task; null if\n  /// incomplete.\n  completed_at DateTime? @db.Timestamptz\n  \n  /// Record creation timestamp for progress entry.\n  created_at DateTime @db.Timestamptz\n  \n  /// Last update timestamp for progress entry.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_phase_id])\n  \n  @@unique([study_task_id, study_phase_id], map: \"study_planner_study_task_progress_study_task_id_study__55b670c4\")\n  @@index([study_task_id, completed_at], map: \"study_planner_study_task_progress_study_task_id_comple_051b15d0\")\n}\n\n/// Represents attachment files such as images or PDFs linked to study tasks.\n/// Supports multiple files per task with file metadata including type, URL,\n/// and creation timestamp for content management.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_attachments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged study task {@link study_planner_study_tasks.id}\n  study_task_id String @db.Uuid\n  \n  /// Type of the attachment file, e.g., image/jpeg, application/pdf.\n  file_type String\n  \n  /// URI of the stored attachment file for retrieval.\n  file_url String @db.VarChar(80000)\n  \n  /// Timestamp when the attachment was created.\n  created_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_task_id, file_type])\n  @@index([file_type(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Stores memo texts attached to study tasks as notes to support users in\n/// capturing additional information related to their learning activities.\n/// Each memo is associated with a single study task with timestamps for\n/// creation and updates.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_memos {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged study task {@link study_planner_study_tasks.id}\n  study_task_id String @db.Uuid\n  \n  /// Text content of the memo providing additional details or notes.\n  memo_text String\n  \n  /// Timestamp when the memo was created.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp when the memo was last updated.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_task_id])\n  @@index([memo_text(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-04-notifications.prisma":"/// This table stores alarms set by authenticated student users for specific\n/// study tasks to trigger PWA notifications at scheduled times. Each alarm\n/// references a study task and the student user who owns it. It supports\n/// auditing via creation and update timestamps and allows soft deletion.\n/// This is a primary table managed independently by users for notification\n/// management.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_task_alarms {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged student's {@link study_planner_students.id} who owns this alarm.\n  student_id String @db.Uuid\n  \n  /// Referenced study task's {@link study_planner_study_tasks.id} for which\n  /// the alarm is set.\n  study_task_id String @db.Uuid\n  \n  /// Title or label of the alarm for user identification.\n  title String\n  \n  /// Scheduled time for the alarm to trigger the notification.\n  alarm_time DateTime @db.Timestamptz\n  \n  /// Timestamp of record creation for audit trail.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of last update for audit trail.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp indicating logical removal (nullable).\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  \n  @@index([study_task_id])\n  \n  @@unique([student_id, study_task_id, alarm_time], map: \"study_planner_task_alarms_student_id_study_task_id_ala_08a74f27\")\n  @@index([alarm_time, student_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// This table contains general reminders created by authenticated student\n/// users which are not tied to specific study tasks. These reminders trigger\n/// PWA notifications to users at scheduled times. It includes fields for\n/// reminder title, scheduled due time, optional description, audit\n/// timestamps, soft deletion, and an active flag to manage reminder status.\n/// This is a primary table managed independently by users.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_general_reminders {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Belonged student's {@link study_planner_students.id} who owns this\n  /// reminder.\n  student_id String @db.Uuid\n  \n  /// Title or label of the general reminder for user identification.\n  title String\n  \n  /// Scheduled due time for the reminder notification.\n  due_time DateTime @db.Timestamptz\n  \n  /// Optional textual description providing additional context for the\n  /// reminder.\n  description String?\n  \n  /// Flag indicating whether the reminder is currently active and should\n  /// trigger notifications.\n  active Boolean\n  \n  /// Timestamp of record creation for audit and history.\n  created_at DateTime @db.Timestamptz\n  \n  /// Timestamp of last update for audit and history.\n  updated_at DateTime @db.Timestamptz\n  \n  /// Soft delete timestamp indicating logical removal (nullable).\n  deleted_at DateTime? @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  \n  @@unique([student_id, title, due_time])\n  @@index([due_time, student_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}","schema-05-analytics.prisma":"/// Aggregated study progress analytics per student and study phase,\n/// providing metrics such as completed tasks count, total tasks count, and\n/// completion rate. Related to students and study phases for tracking\n/// learning progress across phases.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_progress_analytics {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Associated student {@link study_planner_students.id}.\n  student_id String @db.Uuid\n  \n  /// Associated study phase {@link study_planner_study_phases.id}.\n  study_phase_id String @db.Uuid\n  \n  /// Number of completed tasks for the student in the given study phase.\n  completed_tasks_count Int @db.Integer\n  \n  /// Total number of tasks assigned to the student in the study phase.\n  total_tasks_count Int @db.Integer\n  \n  /// Completion rate computed as completed tasks divided by total tasks.\n  completion_rate Float @db.DoublePrecision\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  \n  @@unique([student_id, study_phase_id], map: \"study_planner_study_progress_analytics_student_id_stud_6e01aaeb\")\n  @@index([study_phase_id, updated_at], map: \"study_planner_study_progress_analytics_study_phase_id__63516c0c\")\n}\n\n/// Analytics data showing learning gap statistics per student and subject\n/// category, highlighting underperformed areas in study tasks. Links to\n/// students and subject categories to assist targeted improvements and\n/// visualization.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_learning_gap_charts {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n  \n  /// Associated student {@link study_planner_students.id}.\n  student_id String @db.Uuid\n  \n  /// Subject category {@link study_planner_subject_categories.id} representing\n  /// study topic.\n  subject_category_id String @db.Uuid\n  \n  /// Quantified measure of the learning gap for the subject category.\n  gap_metric Float @db.DoublePrecision\n  \n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n  \n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n  \n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  subjectCategory study_planner_subject_categories @relation(fields: [subject_category_id], references: [id], onDelete: Cascade)\n  \n  @@unique([student_id, subject_category_id], map: \"study_planner_learning_gap_charts_student_id_subject_c_5fb2f886\")\n  @@index([subject_category_id, updated_at], map: \"study_planner_learning_gap_charts_subject_category_id__a94b45bc\")\n}","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}"},"result":{"success":true,"data":{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"study_planner_study_phases","description":"Defines the three distinct study phases available in the study planner system (preview, main learning, review). These phases categorize study activities and enable progress tracking by phase.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","nullable":false,"description":"Unique code identifier of the study phase, e.g., 'preview', 'main_learning', 'review'."},{"name":"name","type":"string","nullable":false,"description":"Human-readable name of the study phase, e.g., 'Preview'."},{"name":"description","type":"string","nullable":true,"description":"Optional detailed description of the study phase."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"name"}]},{"name":"study_planner_subject_categories","description":"Stores subject categories used for classifying study tasks, including hierarchical English language subcategories for grammar, vocabulary, speaking, and others.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","nullable":false,"description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},{"name":"name","type":"string","nullable":false,"description":"Human-readable name of the subject category, e.g., 'English Grammar'."},{"name":"description","type":"string","nullable":true,"description":"Optional detailed description of the subject category."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[{"fieldName":"name"}]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"study_planner_students","description":"This table stores authenticated student user information including login credentials and audit timestamps. It supports user authentication by maintaining unique emails and hashed passwords. It includes temporal fields for creation, update, and potential soft deletion timestamps. As a primary entity, it allows independent user management and secure authentication workflows.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Unique email address used for student login and communication."},{"name":"password_hash","type":"string","nullable":false,"description":"Secure hashed password for authentication purposes. Plain passwords are never stored."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the student record was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the student record was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp indicating when the student record was soft deleted, if applicable."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]},{"fieldNames":["updated_at"]}],"ginIndexes":[]}]},{"filename":"schema-03-study.prisma","namespace":"Study","models":[{"name":"study_planner_study_tasks","description":"Core entity representing a student study task managed independently, linked to a student, study phase, and subject category. Tracks title, optional description, and soft deletion. Supports creation and update timestamps for audit trail.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Belonged student's {@link study_planner_students.id}","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false},{"name":"study_phase_id","type":"uuid","description":"Associated study phase {@link study_planner_study_phases.id}","relation":{"name":"studyPhase","targetModel":"study_planner_study_phases"},"unique":false,"nullable":false},{"name":"subject_category_id","type":"uuid","description":"Linked subject category {@link study_planner_subject_categories.id}","relation":{"name":"subjectCategory","targetModel":"study_planner_subject_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the study task capturing the user's learning goal.","nullable":false},{"name":"description","type":"string","description":"Detailed description or notes about the study task.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the study task was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the study task was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the study task was soft deleted; null if not deleted.","nullable":true}],"uniqueIndexes":[{"fieldNames":["student_id","title"],"unique":true}],"plainIndexes":[{"fieldNames":["student_id","study_phase_id"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"study_planner_study_task_progress","description":"Stores progress information per study phase for each study task. Includes completion timestamps for tracking phase completion states to support study lifecycle management and analytics. References the main study task and the study phase.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"study_task_id","type":"uuid","description":"Associated study task {@link study_planner_study_tasks.id}","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"},"unique":false,"nullable":false},{"name":"study_phase_id","type":"uuid","description":"Tracked study phase {@link study_planner_study_phases.id}","relation":{"name":"studyPhase","targetModel":"study_planner_study_phases"},"unique":false,"nullable":false}],"plainFields":[{"name":"completed_at","type":"datetime","description":"Timestamp when the study phase was completed for this task; null if incomplete.","nullable":true},{"name":"created_at","type":"datetime","description":"Record creation timestamp for progress entry.","nullable":false},{"name":"updated_at","type":"datetime","description":"Last update timestamp for progress entry.","nullable":false}],"uniqueIndexes":[{"fieldNames":["study_task_id","study_phase_id"],"unique":true}],"plainIndexes":[{"fieldNames":["study_task_id","completed_at"]}],"ginIndexes":[]},{"name":"study_planner_attachments","description":"Represents attachment files such as images or PDFs linked to study tasks. Supports multiple files per task with file metadata including type, URL, and creation timestamp for content management.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"study_task_id","type":"uuid","description":"Belonged study task {@link study_planner_study_tasks.id}","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"},"unique":false,"nullable":false}],"plainFields":[{"name":"file_type","type":"string","description":"Type of the attachment file, e.g., image/jpeg, application/pdf.","nullable":false},{"name":"file_url","type":"uri","description":"URI of the stored attachment file for retrieval.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the attachment was created.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["study_task_id","file_type"]}],"ginIndexes":[{"fieldName":"file_type"}]},{"name":"study_planner_memos","description":"Stores memo texts attached to study tasks as notes to support users in capturing additional information related to their learning activities. Each memo is associated with a single study task with timestamps for creation and updates.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"study_task_id","type":"uuid","description":"Belonged study task {@link study_planner_study_tasks.id}","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"},"unique":false,"nullable":false}],"plainFields":[{"name":"memo_text","type":"string","description":"Text content of the memo providing additional details or notes.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the memo was created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when the memo was last updated.","nullable":false}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["study_task_id"]}],"ginIndexes":[{"fieldName":"memo_text"}]}]},{"filename":"schema-04-notifications.prisma","namespace":"Notifications","models":[{"name":"study_planner_task_alarms","description":"This table stores alarms set by authenticated student users for specific study tasks to trigger PWA notifications at scheduled times. Each alarm references a study task and the student user who owns it. It supports auditing via creation and update timestamps and allows soft deletion. This is a primary table managed independently by users for notification management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Belonged student's {@link study_planner_students.id} who owns this alarm.","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false},{"name":"study_task_id","type":"uuid","description":"Referenced study task's {@link study_planner_study_tasks.id} for which the alarm is set.","relation":{"name":"studyTask","targetModel":"study_planner_study_tasks"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title or label of the alarm for user identification.","nullable":false},{"name":"alarm_time","type":"datetime","description":"Scheduled time for the alarm to trigger the notification.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of record creation for audit trail.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update for audit trail.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp indicating logical removal (nullable).","nullable":true}],"uniqueIndexes":[{"fieldNames":["student_id","study_task_id","alarm_time"],"unique":true}],"plainIndexes":[{"fieldNames":["alarm_time","student_id"]}],"ginIndexes":[{"fieldName":"title"}]},{"name":"study_planner_general_reminders","description":"This table contains general reminders created by authenticated student users which are not tied to specific study tasks. These reminders trigger PWA notifications to users at scheduled times. It includes fields for reminder title, scheduled due time, optional description, audit timestamps, soft deletion, and an active flag to manage reminder status. This is a primary table managed independently by users.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Belonged student's {@link study_planner_students.id} who owns this reminder.","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title or label of the general reminder for user identification.","nullable":false},{"name":"due_time","type":"datetime","description":"Scheduled due time for the reminder notification.","nullable":false},{"name":"description","type":"string","description":"Optional textual description providing additional context for the reminder.","nullable":true},{"name":"active","type":"boolean","description":"Flag indicating whether the reminder is currently active and should trigger notifications.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp of record creation for audit and history.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update for audit and history.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp indicating logical removal (nullable).","nullable":true}],"uniqueIndexes":[{"fieldNames":["student_id","title","due_time"],"unique":true}],"plainIndexes":[{"fieldNames":["due_time","student_id"]}],"ginIndexes":[{"fieldName":"title"}]}]},{"filename":"schema-05-analytics.prisma","namespace":"Analytics","models":[{"name":"study_planner_study_progress_analytics","description":"Aggregated study progress analytics per student and study phase, providing metrics such as completed tasks count, total tasks count, and completion rate. Related to students and study phases for tracking learning progress across phases.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Associated student {@link study_planner_students.id}.","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false},{"name":"study_phase_id","type":"uuid","description":"Associated study phase {@link study_planner_study_phases.id}.","relation":{"name":"studyPhase","targetModel":"study_planner_study_phases"},"unique":false,"nullable":false}],"plainFields":[{"name":"completed_tasks_count","type":"int","description":"Number of completed tasks for the student in the given study phase.","nullable":false},{"name":"total_tasks_count","type":"int","description":"Total number of tasks assigned to the student in the study phase.","nullable":false},{"name":"completion_rate","type":"double","description":"Completion rate computed as completed tasks divided by total tasks.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["student_id","study_phase_id"],"unique":true}],"plainIndexes":[{"fieldNames":["study_phase_id","updated_at"]}],"ginIndexes":[]},{"name":"study_planner_learning_gap_charts","description":"Analytics data showing learning gap statistics per student and subject category, highlighting underperformed areas in study tasks. Links to students and subject categories to assist targeted improvements and visualization.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"student_id","type":"uuid","description":"Associated student {@link study_planner_students.id}.","relation":{"name":"student","targetModel":"study_planner_students"},"unique":false,"nullable":false},{"name":"subject_category_id","type":"uuid","description":"Subject category {@link study_planner_subject_categories.id} representing study topic.","relation":{"name":"subjectCategory","targetModel":"study_planner_subject_categories"},"unique":false,"nullable":false}],"plainFields":[{"name":"gap_metric","type":"double","description":"Quantified measure of the learning gap for the subject category.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last update timestamp.","nullable":false}],"uniqueIndexes":[{"fieldNames":["student_id","subject_category_id"],"unique":true}],"plainIndexes":[{"fieldNames":["subject_category_id","updated_at"]}],"ginIndexes":[]}]}]}},"compiled":{"type":"success","schemas":{"schema-01-systematic.prisma":"/// Defines the three distinct study phases available in the study planner\n/// system (preview, main learning, review). These phases categorize study\n/// activities and enable progress tracking by phase.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_phases {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Unique code identifier of the study phase, e.g., 'preview',\n  /// 'main_learning', 'review'.\n  code String\n\n  /// Human-readable name of the study phase, e.g., 'Preview'.\n  name String\n\n  /// Optional detailed description of the study phase.\n  description String?\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks              study_planner_study_tasks[]\n  study_planner_study_task_progress      study_planner_study_task_progress[]\n  study_planner_study_progress_analytics study_planner_study_progress_analytics[]\n\n  @@unique([code])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Stores subject categories used for classifying study tasks, including\n/// hierarchical English language subcategories for grammar, vocabulary,\n/// speaking, and others.\n///\n/// @namespace Systematic\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_subject_categories {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Unique code identifier of the subject category, e.g., 'english_grammar'.\n  code String\n\n  /// Human-readable name of the subject category, e.g., 'English Grammar'.\n  name String\n\n  /// Optional detailed description of the subject category.\n  description String?\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks         study_planner_study_tasks[]\n  study_planner_learning_gap_charts study_planner_learning_gap_charts[]\n\n  @@unique([code])\n  @@index([created_at])\n  @@index([name(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-02-actors.prisma":"/// This table stores authenticated student user information including login\n/// credentials and audit timestamps. It supports user authentication by\n/// maintaining unique emails and hashed passwords. It includes temporal\n/// fields for creation, update, and potential soft deletion timestamps. As a\n/// primary entity, it allows independent user management and secure\n/// authentication workflows.\n///\n/// @namespace Actors\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_students {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Unique email address used for student login and communication.\n  email String\n\n  /// Secure hashed password for authentication purposes. Plain passwords are\n  /// never stored.\n  password_hash String\n\n  /// Timestamp when the student record was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the student record was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// Timestamp indicating when the student record was soft deleted, if\n  /// applicable.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  study_planner_study_tasks              study_planner_study_tasks[]\n  study_planner_task_alarms              study_planner_task_alarms[]\n  study_planner_general_reminders        study_planner_general_reminders[]\n  study_planner_study_progress_analytics study_planner_study_progress_analytics[]\n  study_planner_learning_gap_charts      study_planner_learning_gap_charts[]\n\n  @@unique([email])\n  @@index([created_at])\n  @@index([updated_at])\n}\n","schema-03-study.prisma":"/// Core entity representing a student study task managed independently,\n/// linked to a student, study phase, and subject category. Tracks title,\n/// optional description, and soft deletion. Supports creation and update\n/// timestamps for audit trail.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_tasks {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged student's {@link study_planner_students.id}\n  student_id String @db.Uuid\n\n  /// Associated study phase {@link study_planner_study_phases.id}\n  study_phase_id String @db.Uuid\n\n  /// Linked subject category {@link study_planner_subject_categories.id}\n  subject_category_id String @db.Uuid\n\n  /// Title of the study task capturing the user's learning goal.\n  title String\n\n  /// Detailed description or notes about the study task.\n  description String?\n\n  /// Timestamp when the study task was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the study task was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  /// Timestamp when the study task was soft deleted; null if not deleted.\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student         study_planner_students           @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyPhase      study_planner_study_phases       @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n  subjectCategory study_planner_subject_categories @relation(fields: [subject_category_id], references: [id], onDelete: Cascade)\n\n  study_planner_study_task_progress study_planner_study_task_progress[]\n  study_planner_attachments         study_planner_attachments[]\n  study_planner_memos               study_planner_memos[]\n  study_planner_task_alarms         study_planner_task_alarms[]\n\n  @@unique([student_id, title])\n  @@index([study_phase_id])\n  @@index([subject_category_id])\n  @@index([student_id, study_phase_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Stores progress information per study phase for each study task. Includes\n/// completion timestamps for tracking phase completion states to support\n/// study lifecycle management and analytics. References the main study task\n/// and the study phase.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_task_progress {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Associated study task {@link study_planner_study_tasks.id}\n  study_task_id String @db.Uuid\n\n  /// Tracked study phase {@link study_planner_study_phases.id}\n  study_phase_id String @db.Uuid\n\n  /// Timestamp when the study phase was completed for this task; null if\n  /// incomplete.\n  completed_at DateTime? @db.Timestamptz\n\n  /// Record creation timestamp for progress entry.\n  created_at DateTime @db.Timestamptz\n\n  /// Last update timestamp for progress entry.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  studyTask  study_planner_study_tasks  @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n\n  @@unique([study_task_id, study_phase_id], map: \"study_planner_study_task_progress_study_task_id_study__55b670c4\")\n  @@index([study_phase_id])\n  @@index([study_task_id, completed_at], map: \"study_planner_study_task_progress_study_task_id_comple_051b15d0\")\n}\n\n/// Represents attachment files such as images or PDFs linked to study tasks.\n/// Supports multiple files per task with file metadata including type, URL,\n/// and creation timestamp for content management.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_attachments {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged study task {@link study_planner_study_tasks.id}\n  study_task_id String @db.Uuid\n\n  /// Type of the attachment file, e.g., image/jpeg, application/pdf.\n  file_type String\n\n  /// URI of the stored attachment file for retrieval.\n  file_url String @db.VarChar(80000)\n\n  /// Timestamp when the attachment was created.\n  created_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n\n  @@index([study_task_id, file_type])\n  @@index([file_type(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// Stores memo texts attached to study tasks as notes to support users in\n/// capturing additional information related to their learning activities.\n/// Each memo is associated with a single study task with timestamps for\n/// creation and updates.\n///\n/// @namespace Study\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_memos {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged study task {@link study_planner_study_tasks.id}\n  study_task_id String @db.Uuid\n\n  /// Text content of the memo providing additional details or notes.\n  memo_text String\n\n  /// Timestamp when the memo was created.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp when the memo was last updated.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n\n  @@index([study_task_id])\n  @@index([memo_text(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-04-notifications.prisma":"/// This table stores alarms set by authenticated student users for specific\n/// study tasks to trigger PWA notifications at scheduled times. Each alarm\n/// references a study task and the student user who owns it. It supports\n/// auditing via creation and update timestamps and allows soft deletion.\n/// This is a primary table managed independently by users for notification\n/// management.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_task_alarms {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged student's {@link study_planner_students.id} who owns this alarm.\n  student_id String @db.Uuid\n\n  /// Referenced study task's {@link study_planner_study_tasks.id} for which\n  /// the alarm is set.\n  study_task_id String @db.Uuid\n\n  /// Title or label of the alarm for user identification.\n  title String\n\n  /// Scheduled time for the alarm to trigger the notification.\n  alarm_time DateTime @db.Timestamptz\n\n  /// Timestamp of record creation for audit trail.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of last update for audit trail.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp indicating logical removal (nullable).\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student   study_planner_students    @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyTask study_planner_study_tasks @relation(fields: [study_task_id], references: [id], onDelete: Cascade)\n\n  @@unique([student_id, study_task_id, alarm_time], map: \"study_planner_task_alarms_student_id_study_task_id_ala_08a74f27\")\n  @@index([study_task_id])\n  @@index([alarm_time, student_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n\n/// This table contains general reminders created by authenticated student\n/// users which are not tied to specific study tasks. These reminders trigger\n/// PWA notifications to users at scheduled times. It includes fields for\n/// reminder title, scheduled due time, optional description, audit\n/// timestamps, soft deletion, and an active flag to manage reminder status.\n/// This is a primary table managed independently by users.\n///\n/// @namespace Notifications\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_general_reminders {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Belonged student's {@link study_planner_students.id} who owns this\n  /// reminder.\n  student_id String @db.Uuid\n\n  /// Title or label of the general reminder for user identification.\n  title String\n\n  /// Scheduled due time for the reminder notification.\n  due_time DateTime @db.Timestamptz\n\n  /// Optional textual description providing additional context for the\n  /// reminder.\n  description String?\n\n  /// Flag indicating whether the reminder is currently active and should\n  /// trigger notifications.\n  active Boolean\n\n  /// Timestamp of record creation for audit and history.\n  created_at DateTime @db.Timestamptz\n\n  /// Timestamp of last update for audit and history.\n  updated_at DateTime @db.Timestamptz\n\n  /// Soft delete timestamp indicating logical removal (nullable).\n  deleted_at DateTime? @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student study_planner_students @relation(fields: [student_id], references: [id], onDelete: Cascade)\n\n  @@unique([student_id, title, due_time])\n  @@index([due_time, student_id])\n  @@index([title(ops: raw(\"gin_trgm_ops\"))], type: Gin)\n}\n","schema-05-analytics.prisma":"/// Aggregated study progress analytics per student and study phase,\n/// providing metrics such as completed tasks count, total tasks count, and\n/// completion rate. Related to students and study phases for tracking\n/// learning progress across phases.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_study_progress_analytics {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Associated student {@link study_planner_students.id}.\n  student_id String @db.Uuid\n\n  /// Associated study phase {@link study_planner_study_phases.id}.\n  study_phase_id String @db.Uuid\n\n  /// Number of completed tasks for the student in the given study phase.\n  completed_tasks_count Int @db.Integer\n\n  /// Total number of tasks assigned to the student in the study phase.\n  total_tasks_count Int @db.Integer\n\n  /// Completion rate computed as completed tasks divided by total tasks.\n  completion_rate Float @db.DoublePrecision\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student    study_planner_students     @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  studyPhase study_planner_study_phases @relation(fields: [study_phase_id], references: [id], onDelete: Cascade)\n\n  @@unique([student_id, study_phase_id], map: \"study_planner_study_progress_analytics_student_id_stud_6e01aaeb\")\n  @@index([study_phase_id, updated_at], map: \"study_planner_study_progress_analytics_study_phase_id__63516c0c\")\n}\n\n/// Analytics data showing learning gap statistics per student and subject\n/// category, highlighting underperformed areas in study tasks. Links to\n/// students and subject categories to assist targeted improvements and\n/// visualization.\n///\n/// @namespace Analytics\n/// @author AutoBE - https://github.com/wrtnlabs/autobe\nmodel study_planner_learning_gap_charts {\n  //----\n  // COLUMNS\n  //----\n  /// Primary Key.\n  id String @id @db.Uuid\n\n  /// Associated student {@link study_planner_students.id}.\n  student_id String @db.Uuid\n\n  /// Subject category {@link study_planner_subject_categories.id} representing\n  /// study topic.\n  subject_category_id String @db.Uuid\n\n  /// Quantified measure of the learning gap for the subject category.\n  gap_metric Float @db.DoublePrecision\n\n  /// Record creation timestamp.\n  created_at DateTime @db.Timestamptz\n\n  /// Record last update timestamp.\n  updated_at DateTime @db.Timestamptz\n\n  //----\n  // RELATIONS\n  //----\n  student         study_planner_students           @relation(fields: [student_id], references: [id], onDelete: Cascade)\n  subjectCategory study_planner_subject_categories @relation(fields: [subject_category_id], references: [id], onDelete: Cascade)\n\n  @@unique([student_id, subject_category_id], map: \"study_planner_learning_gap_charts_student_id_subject_c_5fb2f886\")\n  @@index([subject_category_id, updated_at], map: \"study_planner_learning_gap_charts_subject_category_id__a94b45bc\")\n}\n","main.prisma":"generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"postgresqlExtensions\", \"views\"]\n  binaryTargets   = [\"native\"]\n}\n\ndatasource db {\n  provider   = \"postgresql\"\n  url        = env(\"DATABASE_URL\")\n  extensions = [pg_trgm]\n}\n\ngenerator markdown {\n  provider = \"prisma-markdown\"\n  output   = \"../../docs/ERD.md\"\n}\n"},"nodeModules":{"node_modules/.prisma/client/client.d.ts":"export * from \"./index\"","node_modules/.prisma/client/default.d.ts":"export * from \"./index\"","node_modules/.prisma/client/edge.d.ts":"export * from \"./default\"","node_modules/.prisma/client/index.d.ts":"\n/**\n * Client\n**/\n\nimport * as runtime from './runtime/library.js';\nimport $Types = runtime.Types // general types\nimport $Public = runtime.Types.Public\nimport $Utils = runtime.Types.Utils\nimport $Extensions = runtime.Types.Extensions\nimport $Result = runtime.Types.Result\n\nexport type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n\n/**\n * Model study_planner_study_phases\n * Defines the three distinct study phases available in the study planner\n * system (preview, main learning, review). These phases categorize study\n * activities and enable progress tracking by phase.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_phases = $Result.DefaultSelection<Prisma.$study_planner_study_phasesPayload>\n/**\n * Model study_planner_subject_categories\n * Stores subject categories used for classifying study tasks, including\n * hierarchical English language subcategories for grammar, vocabulary,\n * speaking, and others.\n * \n * @namespace Systematic\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_subject_categories = $Result.DefaultSelection<Prisma.$study_planner_subject_categoriesPayload>\n/**\n * Model study_planner_students\n * This table stores authenticated student user information including login\n * credentials and audit timestamps. It supports user authentication by\n * maintaining unique emails and hashed passwords. It includes temporal\n * fields for creation, update, and potential soft deletion timestamps. As a\n * primary entity, it allows independent user management and secure\n * authentication workflows.\n * \n * @namespace Actors\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_students = $Result.DefaultSelection<Prisma.$study_planner_studentsPayload>\n/**\n * Model study_planner_study_tasks\n * Core entity representing a student study task managed independently,\n * linked to a student, study phase, and subject category. Tracks title,\n * optional description, and soft deletion. Supports creation and update\n * timestamps for audit trail.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_tasks = $Result.DefaultSelection<Prisma.$study_planner_study_tasksPayload>\n/**\n * Model study_planner_study_task_progress\n * Stores progress information per study phase for each study task. Includes\n * completion timestamps for tracking phase completion states to support\n * study lifecycle management and analytics. References the main study task\n * and the study phase.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_task_progress = $Result.DefaultSelection<Prisma.$study_planner_study_task_progressPayload>\n/**\n * Model study_planner_attachments\n * Represents attachment files such as images or PDFs linked to study tasks.\n * Supports multiple files per task with file metadata including type, URL,\n * and creation timestamp for content management.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_attachments = $Result.DefaultSelection<Prisma.$study_planner_attachmentsPayload>\n/**\n * Model study_planner_memos\n * Stores memo texts attached to study tasks as notes to support users in\n * capturing additional information related to their learning activities.\n * Each memo is associated with a single study task with timestamps for\n * creation and updates.\n * \n * @namespace Study\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_memos = $Result.DefaultSelection<Prisma.$study_planner_memosPayload>\n/**\n * Model study_planner_task_alarms\n * This table stores alarms set by authenticated student users for specific\n * study tasks to trigger PWA notifications at scheduled times. Each alarm\n * references a study task and the student user who owns it. It supports\n * auditing via creation and update timestamps and allows soft deletion.\n * This is a primary table managed independently by users for notification\n * management.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_task_alarms = $Result.DefaultSelection<Prisma.$study_planner_task_alarmsPayload>\n/**\n * Model study_planner_general_reminders\n * This table contains general reminders created by authenticated student\n * users which are not tied to specific study tasks. These reminders trigger\n * PWA notifications to users at scheduled times. It includes fields for\n * reminder title, scheduled due time, optional description, audit\n * timestamps, soft deletion, and an active flag to manage reminder status.\n * This is a primary table managed independently by users.\n * \n * @namespace Notifications\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_general_reminders = $Result.DefaultSelection<Prisma.$study_planner_general_remindersPayload>\n/**\n * Model study_planner_study_progress_analytics\n * Aggregated study progress analytics per student and study phase,\n * providing metrics such as completed tasks count, total tasks count, and\n * completion rate. Related to students and study phases for tracking\n * learning progress across phases.\n * \n * @namespace Analytics\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_study_progress_analytics = $Result.DefaultSelection<Prisma.$study_planner_study_progress_analyticsPayload>\n/**\n * Model study_planner_learning_gap_charts\n * Analytics data showing learning gap statistics per student and subject\n * category, highlighting underperformed areas in study tasks. Links to\n * students and subject categories to assist targeted improvements and\n * visualization.\n * \n * @namespace Analytics\n * @author AutoBE - https://github.com/wrtnlabs/autobe\n */\nexport type study_planner_learning_gap_charts = $Result.DefaultSelection<Prisma.$study_planner_learning_gap_chartsPayload>\n\n/**\n * ##  Prisma Client Ê²Ë¢\n *\n * Type-safe database client for TypeScript & Node.js\n * @example\n * ```\n * const prisma = new PrismaClient()\n * // Fetch zero or more Study_planner_study_phases\n * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany()\n * ```\n *\n *\n * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n */\nexport class PrismaClient<\n  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,\n  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,\n  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs\n> {\n  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }\n\n    /**\n   * ##  Prisma Client Ê²Ë¢\n   *\n   * Type-safe database client for TypeScript & Node.js\n   * @example\n   * ```\n   * const prisma = new PrismaClient()\n   * // Fetch zero or more Study_planner_study_phases\n   * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany()\n   * ```\n   *\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).\n   */\n\n  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);\n  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;\n\n  /**\n   * Connect with the database\n   */\n  $connect(): $Utils.JsPromise<void>;\n\n  /**\n   * Disconnect from the database\n   */\n  $disconnect(): $Utils.JsPromise<void>;\n\n/**\n   * Executes a prepared raw query and returns the number of affected rows.\n   * @example\n   * ```\n   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Executes a raw query and returns the number of affected rows.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;\n\n  /**\n   * Performs a prepared raw query and returns the `SELECT` data.\n   * @example\n   * ```\n   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;\n\n  /**\n   * Performs a raw query and returns the `SELECT` data.\n   * Susceptible to SQL injections, see documentation.\n   * @example\n   * ```\n   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')\n   * ```\n   *\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).\n   */\n  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;\n\n\n  /**\n   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.\n   * @example\n   * ```\n   * const [george, bob, alice] = await prisma.$transaction([\n   *   prisma.user.create({ data: { name: 'George' } }),\n   *   prisma.user.create({ data: { name: 'Bob' } }),\n   *   prisma.user.create({ data: { name: 'Alice' } }),\n   * ])\n   * ```\n   * \n   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).\n   */\n  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>\n\n  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>\n\n\n  $extends: $Extensions.ExtendsHook<\"extends\", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {\n    extArgs: ExtArgs\n  }>>\n\n      /**\n   * `prisma.study_planner_study_phases`: Exposes CRUD operations for the **study_planner_study_phases** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_phases\n    * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany()\n    * ```\n    */\n  get study_planner_study_phases(): Prisma.study_planner_study_phasesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_subject_categories`: Exposes CRUD operations for the **study_planner_subject_categories** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_subject_categories\n    * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findMany()\n    * ```\n    */\n  get study_planner_subject_categories(): Prisma.study_planner_subject_categoriesDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_students`: Exposes CRUD operations for the **study_planner_students** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_students\n    * const study_planner_students = await prisma.study_planner_students.findMany()\n    * ```\n    */\n  get study_planner_students(): Prisma.study_planner_studentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_tasks`: Exposes CRUD operations for the **study_planner_study_tasks** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_tasks\n    * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findMany()\n    * ```\n    */\n  get study_planner_study_tasks(): Prisma.study_planner_study_tasksDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_task_progress`: Exposes CRUD operations for the **study_planner_study_task_progress** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_task_progresses\n    * const study_planner_study_task_progresses = await prisma.study_planner_study_task_progress.findMany()\n    * ```\n    */\n  get study_planner_study_task_progress(): Prisma.study_planner_study_task_progressDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_attachments`: Exposes CRUD operations for the **study_planner_attachments** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_attachments\n    * const study_planner_attachments = await prisma.study_planner_attachments.findMany()\n    * ```\n    */\n  get study_planner_attachments(): Prisma.study_planner_attachmentsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_memos`: Exposes CRUD operations for the **study_planner_memos** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_memos\n    * const study_planner_memos = await prisma.study_planner_memos.findMany()\n    * ```\n    */\n  get study_planner_memos(): Prisma.study_planner_memosDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_task_alarms`: Exposes CRUD operations for the **study_planner_task_alarms** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_task_alarms\n    * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findMany()\n    * ```\n    */\n  get study_planner_task_alarms(): Prisma.study_planner_task_alarmsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_general_reminders`: Exposes CRUD operations for the **study_planner_general_reminders** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_general_reminders\n    * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findMany()\n    * ```\n    */\n  get study_planner_general_reminders(): Prisma.study_planner_general_remindersDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_study_progress_analytics`: Exposes CRUD operations for the **study_planner_study_progress_analytics** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_study_progress_analytics\n    * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findMany()\n    * ```\n    */\n  get study_planner_study_progress_analytics(): Prisma.study_planner_study_progress_analyticsDelegate<ExtArgs, ClientOptions>;\n\n  /**\n   * `prisma.study_planner_learning_gap_charts`: Exposes CRUD operations for the **study_planner_learning_gap_charts** model.\n    * Example usage:\n    * ```ts\n    * // Fetch zero or more Study_planner_learning_gap_charts\n    * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findMany()\n    * ```\n    */\n  get study_planner_learning_gap_charts(): Prisma.study_planner_learning_gap_chartsDelegate<ExtArgs, ClientOptions>;\n}\n\nexport namespace Prisma {\n  export import DMMF = runtime.DMMF\n\n  export type PrismaPromise<T> = $Public.PrismaPromise<T>\n\n  /**\n   * Validator\n   */\n  export import validator = runtime.Public.validator\n\n  /**\n   * Prisma Errors\n   */\n  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError\n  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError\n  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError\n  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError\n  export import PrismaClientValidationError = runtime.PrismaClientValidationError\n\n  /**\n   * Re-export of sql-template-tag\n   */\n  export import sql = runtime.sqltag\n  export import empty = runtime.empty\n  export import join = runtime.join\n  export import raw = runtime.raw\n  export import Sql = runtime.Sql\n\n\n\n  /**\n   * Decimal.js\n   */\n  export import Decimal = runtime.Decimal\n\n  export type DecimalJsLike = runtime.DecimalJsLike\n\n  /**\n   * Metrics\n   */\n  export type Metrics = runtime.Metrics\n  export type Metric<T> = runtime.Metric<T>\n  export type MetricHistogram = runtime.MetricHistogram\n  export type MetricHistogramBucket = runtime.MetricHistogramBucket\n\n  /**\n  * Extensions\n  */\n  export import Extension = $Extensions.UserArgs\n  export import getExtensionContext = runtime.Extensions.getExtensionContext\n  export import Args = $Public.Args\n  export import Payload = $Public.Payload\n  export import Result = $Public.Result\n  export import Exact = $Public.Exact\n\n  /**\n   * Prisma Client JS version: local\n   * Query Engine version: local\n   */\n  export type PrismaVersion = {\n    client: string\n  }\n\n  export const prismaVersion: PrismaVersion\n\n  /**\n   * Utility Types\n   */\n\n\n  export import JsonObject = runtime.JsonObject\n  export import JsonArray = runtime.JsonArray\n  export import JsonValue = runtime.JsonValue\n  export import InputJsonObject = runtime.InputJsonObject\n  export import InputJsonArray = runtime.InputJsonArray\n  export import InputJsonValue = runtime.InputJsonValue\n\n  /**\n   * Types of the values used to represent different kinds of `null` values when working with JSON fields.\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  namespace NullTypes {\n    /**\n    * Type of `Prisma.DbNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class DbNull {\n      private DbNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.JsonNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class JsonNull {\n      private JsonNull: never\n      private constructor()\n    }\n\n    /**\n    * Type of `Prisma.AnyNull`.\n    *\n    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.\n    *\n    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n    */\n    class AnyNull {\n      private AnyNull: never\n      private constructor()\n    }\n  }\n\n  /**\n   * Helper for filtering JSON entries that have `null` on the database (empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const DbNull: NullTypes.DbNull\n\n  /**\n   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const JsonNull: NullTypes.JsonNull\n\n  /**\n   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`\n   *\n   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field\n   */\n  export const AnyNull: NullTypes.AnyNull\n\n  type SelectAndInclude = {\n    select: any\n    include: any\n  }\n\n  type SelectAndOmit = {\n    select: any\n    omit: any\n  }\n\n  /**\n   * Get the type of the value, that the Promise holds.\n   */\n  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;\n\n  /**\n   * Get the return type of a function which returns a Promise.\n   */\n  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>\n\n  /**\n   * From T, pick a set of properties whose keys are in the union K\n   */\n  type Prisma__Pick<T, K extends keyof T> = {\n      [P in K]: T[P];\n  };\n\n\n  export type Enumerable<T> = T | Array<T>;\n\n  export type RequiredKeys<T> = {\n    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K\n  }[keyof T]\n\n  export type TruthyKeys<T> = keyof {\n    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K\n  }\n\n  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>\n\n  /**\n   * Subset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection\n   */\n  export type Subset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never;\n  };\n\n  /**\n   * SelectSubset\n   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.\n   * Additionally, it validates, if both select and include are present. If the case, it errors.\n   */\n  export type SelectSubset<T, U> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    (T extends SelectAndInclude\n      ? 'Please either choose `select` or `include`.'\n      : T extends SelectAndOmit\n        ? 'Please either choose `select` or `omit`.'\n        : {})\n\n  /**\n   * Subset + Intersection\n   * @desc From `T` pick properties that exist in `U` and intersect `K`\n   */\n  export type SubsetIntersection<T, U, K> = {\n    [key in keyof T]: key extends keyof U ? T[key] : never\n  } &\n    K\n\n  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };\n\n  /**\n   * XOR is needed to have a real mutually exclusive union type\n   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types\n   */\n  type XOR<T, U> =\n    T extends object ?\n    U extends object ?\n      (Without<T, U> & U) | (Without<U, T> & T)\n    : U : T\n\n\n  /**\n   * Is T a Record?\n   */\n  type IsObject<T extends any> = T extends Array<any>\n  ? False\n  : T extends Date\n  ? False\n  : T extends Uint8Array\n  ? False\n  : T extends BigInt\n  ? False\n  : T extends object\n  ? True\n  : False\n\n\n  /**\n   * If it's T[], return T\n   */\n  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T\n\n  /**\n   * From ts-toolbelt\n   */\n\n  type __Either<O extends object, K extends Key> = Omit<O, K> &\n    {\n      // Merge all but K\n      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities\n    }[K]\n\n  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>\n\n  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>\n\n  type _Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean\n  > = {\n    1: EitherStrict<O, K>\n    0: EitherLoose<O, K>\n  }[strict]\n\n  type Either<\n    O extends object,\n    K extends Key,\n    strict extends Boolean = 1\n  > = O extends unknown ? _Either<O, K, strict> : never\n\n  export type Union = any\n\n  type PatchUndefined<O extends object, O1 extends object> = {\n    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]\n  } & {}\n\n  /** Helper Types for \"Merge\" **/\n  export type IntersectOf<U extends Union> = (\n    U extends unknown ? (k: U) => void : never\n  ) extends (k: infer I) => void\n    ? I\n    : never\n\n  export type Overwrite<O extends object, O1 extends object> = {\n      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];\n  } & {};\n\n  type _Merge<U extends object> = IntersectOf<Overwrite<U, {\n      [K in keyof U]-?: At<U, K>;\n  }>>;\n\n  type Key = string | number | symbol;\n  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;\n  type AtStrict<O extends object, K extends Key> = O[K & keyof O];\n  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;\n  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {\n      1: AtStrict<O, K>;\n      0: AtLoose<O, K>;\n  }[strict];\n\n  export type ComputeRaw<A extends any> = A extends Function ? A : {\n    [K in keyof A]: A[K];\n  } & {};\n\n  export type OptionalFlat<O> = {\n    [K in keyof O]?: O[K];\n  } & {};\n\n  type _Record<K extends keyof any, T> = {\n    [P in K]: T;\n  };\n\n  // cause typescript not to expand types and preserve names\n  type NoExpand<T> = T extends unknown ? T : never;\n\n  // this type assumes the passed object is entirely optional\n  type AtLeast<O extends object, K extends string> = NoExpand<\n    O extends unknown\n    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)\n      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O\n    : never>;\n\n  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;\n\n  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;\n  /** End Helper Types for \"Merge\" **/\n\n  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;\n\n  /**\n  A [[Boolean]]\n  */\n  export type Boolean = True | False\n\n  // /**\n  // 1\n  // */\n  export type True = 1\n\n  /**\n  0\n  */\n  export type False = 0\n\n  export type Not<B extends Boolean> = {\n    0: 1\n    1: 0\n  }[B]\n\n  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]\n    ? 0 // anything `never` is false\n    : A1 extends A2\n    ? 1\n    : 0\n\n  export type Has<U extends Union, U1 extends Union> = Not<\n    Extends<Exclude<U1, U>, U1>\n  >\n\n  export type Or<B1 extends Boolean, B2 extends Boolean> = {\n    0: {\n      0: 0\n      1: 1\n    }\n    1: {\n      0: 1\n      1: 1\n    }\n  }[B1][B2]\n\n  export type Keys<U extends Union> = U extends unknown ? keyof U : never\n\n  type Cast<A, B> = A extends B ? A : B;\n\n  export const type: unique symbol;\n\n\n\n  /**\n   * Used by group by\n   */\n\n  export type GetScalarType<T, O> = O extends object ? {\n    [P in keyof T]: P extends keyof O\n      ? O[P]\n      : never\n  } : never\n\n  type FieldPaths<\n    T,\n    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>\n  > = IsObject<T> extends True ? U : T\n\n  type GetHavingFields<T> = {\n    [K in keyof T]: Or<\n      Or<Extends<'OR', K>, Extends<'AND', K>>,\n      Extends<'NOT', K>\n    > extends True\n      ? // infer is only needed to not hit TS limit\n        // based on the brilliant idea of Pierre-Antoine Mills\n        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437\n        T[K] extends infer TK\n        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>\n        : never\n      : {} extends FieldPaths<T[K]>\n      ? never\n      : K\n  }[keyof T]\n\n  /**\n   * Convert tuple to union\n   */\n  type _TupleToUnion<T> = T extends (infer E)[] ? E : never\n  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>\n  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T\n\n  /**\n   * Like `Pick`, but additionally can also accept an array of keys\n   */\n  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>\n\n  /**\n   * Exclude all keys with underscores\n   */\n  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T\n\n\n  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>\n\n  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>\n\n\n  export const ModelName: {\n    study_planner_study_phases: 'study_planner_study_phases',\n    study_planner_subject_categories: 'study_planner_subject_categories',\n    study_planner_students: 'study_planner_students',\n    study_planner_study_tasks: 'study_planner_study_tasks',\n    study_planner_study_task_progress: 'study_planner_study_task_progress',\n    study_planner_attachments: 'study_planner_attachments',\n    study_planner_memos: 'study_planner_memos',\n    study_planner_task_alarms: 'study_planner_task_alarms',\n    study_planner_general_reminders: 'study_planner_general_reminders',\n    study_planner_study_progress_analytics: 'study_planner_study_progress_analytics',\n    study_planner_learning_gap_charts: 'study_planner_learning_gap_charts'\n  };\n\n  export type ModelName = (typeof ModelName)[keyof typeof ModelName]\n\n\n  export type Datasources = {\n    db?: Datasource\n  }\n\n  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {\n    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>\n  }\n\n  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {\n    globalOmitOptions: {\n      omit: GlobalOmitOptions\n    }\n    meta: {\n      modelProps: \"study_planner_study_phases\" | \"study_planner_subject_categories\" | \"study_planner_students\" | \"study_planner_study_tasks\" | \"study_planner_study_task_progress\" | \"study_planner_attachments\" | \"study_planner_memos\" | \"study_planner_task_alarms\" | \"study_planner_general_reminders\" | \"study_planner_study_progress_analytics\" | \"study_planner_learning_gap_charts\"\n      txIsolationLevel: Prisma.TransactionIsolationLevel\n    }\n    model: {\n      study_planner_study_phases: {\n        payload: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n        fields: Prisma.study_planner_study_phasesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_phasesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_phasesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_phasesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_phasesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_phasesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_phasesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_phasesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_phasesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_phasesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_phasesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_phasesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_phasesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_phasesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_phasesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_phasesPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_phasesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_phases>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_phasesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_phasesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_phasesCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_phasesCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_subject_categories: {\n        payload: Prisma.$study_planner_subject_categoriesPayload<ExtArgs>\n        fields: Prisma.study_planner_subject_categoriesFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_subject_categoriesFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_subject_categoriesFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_subject_categoriesFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_subject_categoriesFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_subject_categoriesFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_subject_categoriesCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_subject_categoriesCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_subject_categoriesCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_subject_categoriesDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>\n          }\n          update: {\n            args: Prisma.study_planner_subject_categoriesUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_subject_categoriesDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_subject_categoriesUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_subject_categoriesUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_subject_categoriesUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_subject_categoriesPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_subject_categoriesAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_subject_categories>\n          }\n          groupBy: {\n            args: Prisma.study_planner_subject_categoriesGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_subject_categoriesGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_subject_categoriesCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_subject_categoriesCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_students: {\n        payload: Prisma.$study_planner_studentsPayload<ExtArgs>\n        fields: Prisma.study_planner_studentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_studentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_studentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_studentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_studentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_studentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_studentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_studentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_studentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_studentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_studentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_studentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_studentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_studentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_studentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_studentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_studentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_students>\n          }\n          groupBy: {\n            args: Prisma.study_planner_studentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_studentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_studentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_studentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_tasks: {\n        payload: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n        fields: Prisma.study_planner_study_tasksFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_tasksFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_tasksFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_tasksFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_tasksFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_tasksFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_tasksCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_tasksCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_tasksCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_tasksDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_tasksUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_tasksDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_tasksUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_tasksUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_tasksUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_tasksPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_tasksAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_tasks>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_tasksGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_tasksGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_tasksCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_tasksCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_task_progress: {\n        payload: Prisma.$study_planner_study_task_progressPayload<ExtArgs>\n        fields: Prisma.study_planner_study_task_progressFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_task_progressFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_task_progressFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_task_progressFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_task_progressFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_task_progressFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_task_progressCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_task_progressCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_task_progressCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_task_progressDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_task_progressUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_task_progressDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_task_progressUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_task_progressUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_task_progressUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_task_progressPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_task_progressAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_task_progress>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_task_progressGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_progressGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_task_progressCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_task_progressCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_attachments: {\n        payload: Prisma.$study_planner_attachmentsPayload<ExtArgs>\n        fields: Prisma.study_planner_attachmentsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_attachmentsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_attachmentsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_attachmentsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_attachmentsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_attachmentsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_attachmentsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_attachmentsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_attachmentsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_attachmentsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_attachmentsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_attachmentsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_attachmentsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_attachmentsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_attachmentsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_attachmentsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_attachmentsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_attachments>\n          }\n          groupBy: {\n            args: Prisma.study_planner_attachmentsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_attachmentsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_attachmentsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_attachmentsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_memos: {\n        payload: Prisma.$study_planner_memosPayload<ExtArgs>\n        fields: Prisma.study_planner_memosFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_memosFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_memosFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_memosFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_memosFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_memosFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_memosCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_memosCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_memosCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_memosDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>\n          }\n          update: {\n            args: Prisma.study_planner_memosUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_memosDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_memosUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_memosUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_memosUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_memosPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_memosAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_memos>\n          }\n          groupBy: {\n            args: Prisma.study_planner_memosGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_memosGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_memosCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_memosCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_task_alarms: {\n        payload: Prisma.$study_planner_task_alarmsPayload<ExtArgs>\n        fields: Prisma.study_planner_task_alarmsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_task_alarmsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_task_alarmsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_task_alarmsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_task_alarmsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_task_alarmsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_task_alarmsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_task_alarmsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_task_alarmsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_task_alarmsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_task_alarmsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_task_alarmsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_task_alarmsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_task_alarmsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_task_alarmsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_task_alarmsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_task_alarmsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_task_alarms>\n          }\n          groupBy: {\n            args: Prisma.study_planner_task_alarmsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_task_alarmsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_task_alarmsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_task_alarmsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_general_reminders: {\n        payload: Prisma.$study_planner_general_remindersPayload<ExtArgs>\n        fields: Prisma.study_planner_general_remindersFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_general_remindersFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_general_remindersFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_general_remindersFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_general_remindersFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_general_remindersFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_general_remindersCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_general_remindersCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_general_remindersCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_general_remindersDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          update: {\n            args: Prisma.study_planner_general_remindersUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_general_remindersDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_general_remindersUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_general_remindersUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_general_remindersUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_general_remindersPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_general_remindersAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_general_reminders>\n          }\n          groupBy: {\n            args: Prisma.study_planner_general_remindersGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_general_remindersGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_general_remindersCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_general_remindersCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_study_progress_analytics: {\n        payload: Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>\n        fields: Prisma.study_planner_study_progress_analyticsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_study_progress_analyticsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_study_progress_analyticsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_study_progress_analyticsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_study_progress_analyticsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_study_progress_analyticsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_study_progress_analyticsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_study_progress_analyticsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_study_progress_analyticsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_study_progress_analyticsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_study_progress_analyticsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_study_progress_analyticsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_study_progress_analyticsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_study_progress_analyticsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_study_progress_analyticsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_study_progress_analyticsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_study_progress_analyticsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_study_progress_analytics>\n          }\n          groupBy: {\n            args: Prisma.study_planner_study_progress_analyticsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_progress_analyticsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_study_progress_analyticsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_study_progress_analyticsCountAggregateOutputType> | number\n          }\n        }\n      }\n      study_planner_learning_gap_charts: {\n        payload: Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>\n        fields: Prisma.study_planner_learning_gap_chartsFieldRefs\n        operations: {\n          findUnique: {\n            args: Prisma.study_planner_learning_gap_chartsFindUniqueArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload> | null\n          }\n          findUniqueOrThrow: {\n            args: Prisma.study_planner_learning_gap_chartsFindUniqueOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>\n          }\n          findFirst: {\n            args: Prisma.study_planner_learning_gap_chartsFindFirstArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload> | null\n          }\n          findFirstOrThrow: {\n            args: Prisma.study_planner_learning_gap_chartsFindFirstOrThrowArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>\n          }\n          findMany: {\n            args: Prisma.study_planner_learning_gap_chartsFindManyArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>[]\n          }\n          create: {\n            args: Prisma.study_planner_learning_gap_chartsCreateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>\n          }\n          createMany: {\n            args: Prisma.study_planner_learning_gap_chartsCreateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          createManyAndReturn: {\n            args: Prisma.study_planner_learning_gap_chartsCreateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>[]\n          }\n          delete: {\n            args: Prisma.study_planner_learning_gap_chartsDeleteArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>\n          }\n          update: {\n            args: Prisma.study_planner_learning_gap_chartsUpdateArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>\n          }\n          deleteMany: {\n            args: Prisma.study_planner_learning_gap_chartsDeleteManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateMany: {\n            args: Prisma.study_planner_learning_gap_chartsUpdateManyArgs<ExtArgs>\n            result: BatchPayload\n          }\n          updateManyAndReturn: {\n            args: Prisma.study_planner_learning_gap_chartsUpdateManyAndReturnArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>[]\n          }\n          upsert: {\n            args: Prisma.study_planner_learning_gap_chartsUpsertArgs<ExtArgs>\n            result: $Utils.PayloadToResult<Prisma.$study_planner_learning_gap_chartsPayload>\n          }\n          aggregate: {\n            args: Prisma.Study_planner_learning_gap_chartsAggregateArgs<ExtArgs>\n            result: $Utils.Optional<AggregateStudy_planner_learning_gap_charts>\n          }\n          groupBy: {\n            args: Prisma.study_planner_learning_gap_chartsGroupByArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_learning_gap_chartsGroupByOutputType>[]\n          }\n          count: {\n            args: Prisma.study_planner_learning_gap_chartsCountArgs<ExtArgs>\n            result: $Utils.Optional<Study_planner_learning_gap_chartsCountAggregateOutputType> | number\n          }\n        }\n      }\n    }\n  } & {\n    other: {\n      payload: any\n      operations: {\n        $executeRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $executeRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n        $queryRaw: {\n          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],\n          result: any\n        }\n        $queryRawUnsafe: {\n          args: [query: string, ...values: any[]],\n          result: any\n        }\n      }\n    }\n  }\n  export const defineExtension: $Extensions.ExtendsHook<\"define\", Prisma.TypeMapCb, $Extensions.DefaultArgs>\n  export type DefaultPrismaClient = PrismaClient\n  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n  export interface PrismaClientOptions {\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasources?: Datasources\n    /**\n     * Overwrites the datasource url from your schema.prisma file\n     */\n    datasourceUrl?: string\n    /**\n     * @default \"colorless\"\n     */\n    errorFormat?: ErrorFormat\n    /**\n     * @example\n     * ```\n     * // Shorthand for `emit: 'stdout'`\n     * log: ['query', 'info', 'warn', 'error']\n     * \n     * // Emit as events only\n     * log: [\n     *   { emit: 'event', level: 'query' },\n     *   { emit: 'event', level: 'info' },\n     *   { emit: 'event', level: 'warn' }\n     *   { emit: 'event', level: 'error' }\n     * ]\n     * \n     * / Emit as events and log to stdout\n     * og: [\n     *  { emit: 'stdout', level: 'query' },\n     *  { emit: 'stdout', level: 'info' },\n     *  { emit: 'stdout', level: 'warn' }\n     *  { emit: 'stdout', level: 'error' }\n     * \n     * ```\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n     */\n    log?: (LogLevel | LogDefinition)[]\n    /**\n     * The default values for transactionOptions\n     * maxWait ?= 2000\n     * timeout ?= 5000\n     */\n    transactionOptions?: {\n      maxWait?: number\n      timeout?: number\n      isolationLevel?: Prisma.TransactionIsolationLevel\n    }\n    /**\n     * Global configuration for omitting model fields by default.\n     * \n     * @example\n     * ```\n     * const prisma = new PrismaClient({\n     *   omit: {\n     *     user: {\n     *       password: true\n     *     }\n     *   }\n     * })\n     * ```\n     */\n    omit?: Prisma.GlobalOmitConfig\n  }\n  export type GlobalOmitConfig = {\n    study_planner_study_phases?: study_planner_study_phasesOmit\n    study_planner_subject_categories?: study_planner_subject_categoriesOmit\n    study_planner_students?: study_planner_studentsOmit\n    study_planner_study_tasks?: study_planner_study_tasksOmit\n    study_planner_study_task_progress?: study_planner_study_task_progressOmit\n    study_planner_attachments?: study_planner_attachmentsOmit\n    study_planner_memos?: study_planner_memosOmit\n    study_planner_task_alarms?: study_planner_task_alarmsOmit\n    study_planner_general_reminders?: study_planner_general_remindersOmit\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsOmit\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsOmit\n  }\n\n  /* Types for Logging */\n  export type LogLevel = 'info' | 'query' | 'warn' | 'error'\n  export type LogDefinition = {\n    level: LogLevel\n    emit: 'stdout' | 'event'\n  }\n\n  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;\n\n  export type GetLogType<T> = CheckIsLogLevel<\n    T extends LogDefinition ? T['level'] : T\n  >;\n\n  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>\n    ? GetLogType<T[number]>\n    : never;\n\n  export type QueryEvent = {\n    timestamp: Date\n    query: string\n    params: string\n    duration: number\n    target: string\n  }\n\n  export type LogEvent = {\n    timestamp: Date\n    message: string\n    target: string\n  }\n  /* End Types for Logging */\n\n\n  export type PrismaAction =\n    | 'findUnique'\n    | 'findUniqueOrThrow'\n    | 'findMany'\n    | 'findFirst'\n    | 'findFirstOrThrow'\n    | 'create'\n    | 'createMany'\n    | 'createManyAndReturn'\n    | 'update'\n    | 'updateMany'\n    | 'updateManyAndReturn'\n    | 'upsert'\n    | 'delete'\n    | 'deleteMany'\n    | 'executeRaw'\n    | 'queryRaw'\n    | 'aggregate'\n    | 'count'\n    | 'runCommandRaw'\n    | 'findRaw'\n    | 'groupBy'\n\n  // tested in getLogLevel.test.ts\n  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;\n\n  /**\n   * `PrismaClient` proxy available in interactive transactions.\n   */\n  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>\n\n  export type Datasource = {\n    url?: string\n  }\n\n  /**\n   * Count Types\n   */\n\n\n  /**\n   * Count Type Study_planner_study_phasesCountOutputType\n   */\n\n  export type Study_planner_study_phasesCountOutputType = {\n    study_planner_study_tasks: number\n    study_planner_study_task_progress: number\n    study_planner_study_progress_analytics: number\n  }\n\n  export type Study_planner_study_phasesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_tasksArgs\n    study_planner_study_task_progress?: boolean | Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_task_progressArgs\n    study_planner_study_progress_analytics?: boolean | Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_progress_analyticsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_study_phasesCountOutputType\n     */\n    select?: Study_planner_study_phasesCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_progressWhereInput\n  }\n\n  /**\n   * Study_planner_study_phasesCountOutputType without action\n   */\n  export type Study_planner_study_phasesCountOutputTypeCountStudy_planner_study_progress_analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_progress_analyticsWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_subject_categoriesCountOutputType\n   */\n\n  export type Study_planner_subject_categoriesCountOutputType = {\n    study_planner_study_tasks: number\n    study_planner_learning_gap_charts: number\n  }\n\n  export type Study_planner_subject_categoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | Study_planner_subject_categoriesCountOutputTypeCountStudy_planner_study_tasksArgs\n    study_planner_learning_gap_charts?: boolean | Study_planner_subject_categoriesCountOutputTypeCountStudy_planner_learning_gap_chartsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_subject_categoriesCountOutputType without action\n   */\n  export type Study_planner_subject_categoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_subject_categoriesCountOutputType\n     */\n    select?: Study_planner_subject_categoriesCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_subject_categoriesCountOutputType without action\n   */\n  export type Study_planner_subject_categoriesCountOutputTypeCountStudy_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  /**\n   * Study_planner_subject_categoriesCountOutputType without action\n   */\n  export type Study_planner_subject_categoriesCountOutputTypeCountStudy_planner_learning_gap_chartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_learning_gap_chartsWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_studentsCountOutputType\n   */\n\n  export type Study_planner_studentsCountOutputType = {\n    study_planner_study_tasks: number\n    study_planner_task_alarms: number\n    study_planner_general_reminders: number\n    study_planner_study_progress_analytics: number\n    study_planner_learning_gap_charts: number\n  }\n\n  export type Study_planner_studentsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_study_tasksArgs\n    study_planner_task_alarms?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_task_alarmsArgs\n    study_planner_general_reminders?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_general_remindersArgs\n    study_planner_study_progress_analytics?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_study_progress_analyticsArgs\n    study_planner_learning_gap_charts?: boolean | Study_planner_studentsCountOutputTypeCountStudy_planner_learning_gap_chartsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_studentsCountOutputType\n     */\n    select?: Study_planner_studentsCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_task_alarmsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_task_alarmsWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_general_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_general_remindersWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_study_progress_analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_progress_analyticsWhereInput\n  }\n\n  /**\n   * Study_planner_studentsCountOutputType without action\n   */\n  export type Study_planner_studentsCountOutputTypeCountStudy_planner_learning_gap_chartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_learning_gap_chartsWhereInput\n  }\n\n\n  /**\n   * Count Type Study_planner_study_tasksCountOutputType\n   */\n\n  export type Study_planner_study_tasksCountOutputType = {\n    study_planner_study_task_progress: number\n    study_planner_attachments: number\n    study_planner_memos: number\n    study_planner_task_alarms: number\n  }\n\n  export type Study_planner_study_tasksCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_task_progress?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_progressArgs\n    study_planner_attachments?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_attachmentsArgs\n    study_planner_memos?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_memosArgs\n    study_planner_task_alarms?: boolean | Study_planner_study_tasksCountOutputTypeCountStudy_planner_task_alarmsArgs\n  }\n\n  // Custom InputTypes\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the Study_planner_study_tasksCountOutputType\n     */\n    select?: Study_planner_study_tasksCountOutputTypeSelect<ExtArgs> | null\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_progressWhereInput\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_attachmentsWhereInput\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_memosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_memosWhereInput\n  }\n\n  /**\n   * Study_planner_study_tasksCountOutputType without action\n   */\n  export type Study_planner_study_tasksCountOutputTypeCountStudy_planner_task_alarmsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_task_alarmsWhereInput\n  }\n\n\n  /**\n   * Models\n   */\n\n  /**\n   * Model study_planner_study_phases\n   */\n\n  export type AggregateStudy_planner_study_phases = {\n    _count: Study_planner_study_phasesCountAggregateOutputType | null\n    _min: Study_planner_study_phasesMinAggregateOutputType | null\n    _max: Study_planner_study_phasesMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_phasesMinAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_phasesMaxAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_phasesCountAggregateOutputType = {\n    id: number\n    code: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_phasesMinAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_phasesMaxAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_phasesCountAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_phasesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_phases to aggregate.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_phases\n    **/\n    _count?: true | Study_planner_study_phasesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_phasesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_phasesMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_phasesAggregateType<T extends Study_planner_study_phasesAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_phases]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_phases[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_phases[P]>\n  }\n\n\n\n\n  export type study_planner_study_phasesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_phasesWhereInput\n    orderBy?: study_planner_study_phasesOrderByWithAggregationInput | study_planner_study_phasesOrderByWithAggregationInput[]\n    by: Study_planner_study_phasesScalarFieldEnum[] | Study_planner_study_phasesScalarFieldEnum\n    having?: study_planner_study_phasesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_phasesCountAggregateInputType | true\n    _min?: Study_planner_study_phasesMinAggregateInputType\n    _max?: Study_planner_study_phasesMaxAggregateInputType\n  }\n\n  export type Study_planner_study_phasesGroupByOutputType = {\n    id: string\n    code: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_phasesCountAggregateOutputType | null\n    _min: Study_planner_study_phasesMinAggregateOutputType | null\n    _max: Study_planner_study_phasesMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_phasesGroupByPayload<T extends study_planner_study_phasesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_phasesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_phasesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_phasesGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_phasesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_phasesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    study_planner_study_tasks?: boolean | study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs>\n    study_planner_study_progress_analytics?: boolean | study_planner_study_phases$study_planner_study_progress_analyticsArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_phasesCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n\n  export type study_planner_study_phasesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n\n  export type study_planner_study_phasesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n\n  export type study_planner_study_phasesSelectScalar = {\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_phasesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"code\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n  export type study_planner_study_phasesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs>\n    study_planner_study_progress_analytics?: boolean | study_planner_study_phases$study_planner_study_progress_analyticsArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_phasesCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_phasesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type study_planner_study_phasesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $study_planner_study_phasesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_phases\"\n    objects: {\n      study_planner_study_tasks: Prisma.$study_planner_study_tasksPayload<ExtArgs>[]\n      study_planner_study_task_progress: Prisma.$study_planner_study_task_progressPayload<ExtArgs>[]\n      study_planner_study_progress_analytics: Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Unique code identifier of the study phase, e.g., 'preview',\n       * 'main_learning', 'review'.\n       */\n      code: string\n      /**\n       * Human-readable name of the study phase, e.g., 'Preview'.\n       */\n      name: string\n      /**\n       * Optional detailed description of the study phase.\n       */\n      description: string | null\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_phases\"]>\n    composites: {}\n  }\n\n  type study_planner_study_phasesGetPayload<S extends boolean | null | undefined | study_planner_study_phasesDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_phasesPayload, S>\n\n  type study_planner_study_phasesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_phasesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_phasesCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_phasesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_phases'], meta: { name: 'study_planner_study_phases' } }\n    /**\n     * Find zero or one Study_planner_study_phases that matches the filter.\n     * @param {study_planner_study_phasesFindUniqueArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_phasesFindUniqueArgs>(args: SelectSubset<T, study_planner_study_phasesFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_phases that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_phasesFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_phasesFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_phasesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_phases that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesFindFirstArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_phasesFindFirstArgs>(args?: SelectSubset<T, study_planner_study_phasesFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_phases that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_phases\n     * @example\n     * // Get one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_phasesFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_phasesFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_phases that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany()\n     * \n     * // Get first 10 Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_phasesWithIdOnly = await prisma.study_planner_study_phases.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_phasesFindManyArgs>(args?: SelectSubset<T, study_planner_study_phasesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_phases.\n     * @param {study_planner_study_phasesCreateArgs} args - Arguments to create a Study_planner_study_phases.\n     * @example\n     * // Create one Study_planner_study_phases\n     * const Study_planner_study_phases = await prisma.study_planner_study_phases.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_phases\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_phasesCreateArgs>(args: SelectSubset<T, study_planner_study_phasesCreateArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_phases.\n     * @param {study_planner_study_phasesCreateManyArgs} args - Arguments to create many Study_planner_study_phases.\n     * @example\n     * // Create many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_phasesCreateManyArgs>(args?: SelectSubset<T, study_planner_study_phasesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_phases and returns the data saved in the database.\n     * @param {study_planner_study_phasesCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_phases.\n     * @example\n     * // Create many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_phases and only return the `id`\n     * const study_planner_study_phasesWithIdOnly = await prisma.study_planner_study_phases.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_phasesCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_phasesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_phases.\n     * @param {study_planner_study_phasesDeleteArgs} args - Arguments to delete one Study_planner_study_phases.\n     * @example\n     * // Delete one Study_planner_study_phases\n     * const Study_planner_study_phases = await prisma.study_planner_study_phases.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_phases\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_phasesDeleteArgs>(args: SelectSubset<T, study_planner_study_phasesDeleteArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_phases.\n     * @param {study_planner_study_phasesUpdateArgs} args - Arguments to update one Study_planner_study_phases.\n     * @example\n     * // Update one Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_phasesUpdateArgs>(args: SelectSubset<T, study_planner_study_phasesUpdateArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_phases.\n     * @param {study_planner_study_phasesDeleteManyArgs} args - Arguments to filter Study_planner_study_phases to delete.\n     * @example\n     * // Delete a few Study_planner_study_phases\n     * const { count } = await prisma.study_planner_study_phases.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_phasesDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_phasesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_phasesUpdateManyArgs>(args: SelectSubset<T, study_planner_study_phasesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_phases and returns the data updated in the database.\n     * @param {study_planner_study_phasesUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_phases.\n     * @example\n     * // Update many Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_phases and only return the `id`\n     * const study_planner_study_phasesWithIdOnly = await prisma.study_planner_study_phases.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_phasesUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_phasesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_phases.\n     * @param {study_planner_study_phasesUpsertArgs} args - Arguments to update or create a Study_planner_study_phases.\n     * @example\n     * // Update or create a Study_planner_study_phases\n     * const study_planner_study_phases = await prisma.study_planner_study_phases.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_phases\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_phases we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_phasesUpsertArgs>(args: SelectSubset<T, study_planner_study_phasesUpsertArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesCountArgs} args - Arguments to filter Study_planner_study_phases to count.\n     * @example\n     * // Count the number of Study_planner_study_phases\n     * const count = await prisma.study_planner_study_phases.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_phases we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_phasesCountArgs>(\n      args?: Subset<T, study_planner_study_phasesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_phasesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_phasesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_phasesAggregateArgs>(args: Subset<T, Study_planner_study_phasesAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_phasesAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_phases.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_phasesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_phasesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_phasesGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_phasesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_phasesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_phasesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_phases model\n   */\n  readonly fields: study_planner_study_phasesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_phases.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_phasesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    study_planner_study_tasks<T extends study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_task_progress<T extends study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_progress_analytics<T extends study_planner_study_phases$study_planner_study_progress_analyticsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phases$study_planner_study_progress_analyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_phases model\n   */\n  interface study_planner_study_phasesFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly code: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly name: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly description: FieldRef<\"study_planner_study_phases\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_phases\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_phases\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_phases findUnique\n   */\n  export type study_planner_study_phasesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases findUniqueOrThrow\n   */\n  export type study_planner_study_phasesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases findFirst\n   */\n  export type study_planner_study_phasesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_phases.\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_phases.\n     */\n    distinct?: Study_planner_study_phasesScalarFieldEnum | Study_planner_study_phasesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases findFirstOrThrow\n   */\n  export type study_planner_study_phasesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_phases.\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_phases.\n     */\n    distinct?: Study_planner_study_phasesScalarFieldEnum | Study_planner_study_phasesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases findMany\n   */\n  export type study_planner_study_phasesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_phases to fetch.\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_phases to fetch.\n     */\n    orderBy?: study_planner_study_phasesOrderByWithRelationInput | study_planner_study_phasesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_phases.\n     */\n    cursor?: study_planner_study_phasesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_phases from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_phases.\n     */\n    skip?: number\n    distinct?: Study_planner_study_phasesScalarFieldEnum | Study_planner_study_phasesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases create\n   */\n  export type study_planner_study_phasesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesCreateInput, study_planner_study_phasesUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_phases createMany\n   */\n  export type study_planner_study_phasesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_phases.\n     */\n    data: study_planner_study_phasesCreateManyInput | study_planner_study_phasesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_phases createManyAndReturn\n   */\n  export type study_planner_study_phasesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_phases.\n     */\n    data: study_planner_study_phasesCreateManyInput | study_planner_study_phasesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_phases update\n   */\n  export type study_planner_study_phasesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesUpdateInput, study_planner_study_phasesUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_phases to update.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases updateMany\n   */\n  export type study_planner_study_phasesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesUpdateManyMutationInput, study_planner_study_phasesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_phases to update\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * Limit how many study_planner_study_phases to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_phases updateManyAndReturn\n   */\n  export type study_planner_study_phasesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_phases.\n     */\n    data: XOR<study_planner_study_phasesUpdateManyMutationInput, study_planner_study_phasesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_phases to update\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * Limit how many study_planner_study_phases to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_phases upsert\n   */\n  export type study_planner_study_phasesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_phases to update in case it exists.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n    /**\n     * In case the study_planner_study_phases found by the `where` argument doesn't exist, create a new study_planner_study_phases with this data.\n     */\n    create: XOR<study_planner_study_phasesCreateInput, study_planner_study_phasesUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_phases was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_phasesUpdateInput, study_planner_study_phasesUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_phases delete\n   */\n  export type study_planner_study_phasesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_phases to delete.\n     */\n    where: study_planner_study_phasesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_phases deleteMany\n   */\n  export type study_planner_study_phasesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_phases to delete\n     */\n    where?: study_planner_study_phasesWhereInput\n    /**\n     * Limit how many study_planner_study_phases to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_phases.study_planner_study_tasks\n   */\n  export type study_planner_study_phases$study_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases.study_planner_study_task_progress\n   */\n  export type study_planner_study_phases$study_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    where?: study_planner_study_task_progressWhereInput\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases.study_planner_study_progress_analytics\n   */\n  export type study_planner_study_phases$study_planner_study_progress_analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    where?: study_planner_study_progress_analyticsWhereInput\n    orderBy?: study_planner_study_progress_analyticsOrderByWithRelationInput | study_planner_study_progress_analyticsOrderByWithRelationInput[]\n    cursor?: study_planner_study_progress_analyticsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_progress_analyticsScalarFieldEnum | Study_planner_study_progress_analyticsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_phases without action\n   */\n  export type study_planner_study_phasesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_phases\n     */\n    select?: study_planner_study_phasesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_phases\n     */\n    omit?: study_planner_study_phasesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_phasesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_subject_categories\n   */\n\n  export type AggregateStudy_planner_subject_categories = {\n    _count: Study_planner_subject_categoriesCountAggregateOutputType | null\n    _min: Study_planner_subject_categoriesMinAggregateOutputType | null\n    _max: Study_planner_subject_categoriesMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_subject_categoriesMinAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_subject_categoriesMaxAggregateOutputType = {\n    id: string | null\n    code: string | null\n    name: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_subject_categoriesCountAggregateOutputType = {\n    id: number\n    code: number\n    name: number\n    description: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_subject_categoriesMinAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_subject_categoriesMaxAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_subject_categoriesCountAggregateInputType = {\n    id?: true\n    code?: true\n    name?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_subject_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_subject_categories to aggregate.\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_subject_categories to fetch.\n     */\n    orderBy?: study_planner_subject_categoriesOrderByWithRelationInput | study_planner_subject_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_subject_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_subject_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_subject_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_subject_categories\n    **/\n    _count?: true | Study_planner_subject_categoriesCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_subject_categoriesMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_subject_categoriesMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_subject_categoriesAggregateType<T extends Study_planner_subject_categoriesAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_subject_categories]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_subject_categories[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_subject_categories[P]>\n  }\n\n\n\n\n  export type study_planner_subject_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_subject_categoriesWhereInput\n    orderBy?: study_planner_subject_categoriesOrderByWithAggregationInput | study_planner_subject_categoriesOrderByWithAggregationInput[]\n    by: Study_planner_subject_categoriesScalarFieldEnum[] | Study_planner_subject_categoriesScalarFieldEnum\n    having?: study_planner_subject_categoriesScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_subject_categoriesCountAggregateInputType | true\n    _min?: Study_planner_subject_categoriesMinAggregateInputType\n    _max?: Study_planner_subject_categoriesMaxAggregateInputType\n  }\n\n  export type Study_planner_subject_categoriesGroupByOutputType = {\n    id: string\n    code: string\n    name: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_subject_categoriesCountAggregateOutputType | null\n    _min: Study_planner_subject_categoriesMinAggregateOutputType | null\n    _max: Study_planner_subject_categoriesMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_subject_categoriesGroupByPayload<T extends study_planner_subject_categoriesGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_subject_categoriesGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_subject_categoriesGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_subject_categoriesGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_subject_categoriesGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_subject_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    study_planner_study_tasks?: boolean | study_planner_subject_categories$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_learning_gap_charts?: boolean | study_planner_subject_categories$study_planner_learning_gap_chartsArgs<ExtArgs>\n    _count?: boolean | Study_planner_subject_categoriesCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_subject_categories\"]>\n\n  export type study_planner_subject_categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_subject_categories\"]>\n\n  export type study_planner_subject_categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_subject_categories\"]>\n\n  export type study_planner_subject_categoriesSelectScalar = {\n    id?: boolean\n    code?: boolean\n    name?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_subject_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"code\" | \"name\" | \"description\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_subject_categories\"]>\n  export type study_planner_subject_categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | study_planner_subject_categories$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_learning_gap_charts?: boolean | study_planner_subject_categories$study_planner_learning_gap_chartsArgs<ExtArgs>\n    _count?: boolean | Study_planner_subject_categoriesCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_subject_categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type study_planner_subject_categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $study_planner_subject_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_subject_categories\"\n    objects: {\n      study_planner_study_tasks: Prisma.$study_planner_study_tasksPayload<ExtArgs>[]\n      study_planner_learning_gap_charts: Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Unique code identifier of the subject category, e.g., 'english_grammar'.\n       */\n      code: string\n      /**\n       * Human-readable name of the subject category, e.g., 'English Grammar'.\n       */\n      name: string\n      /**\n       * Optional detailed description of the subject category.\n       */\n      description: string | null\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_subject_categories\"]>\n    composites: {}\n  }\n\n  type study_planner_subject_categoriesGetPayload<S extends boolean | null | undefined | study_planner_subject_categoriesDefaultArgs> = $Result.GetResult<Prisma.$study_planner_subject_categoriesPayload, S>\n\n  type study_planner_subject_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_subject_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_subject_categoriesCountAggregateInputType | true\n    }\n\n  export interface study_planner_subject_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_subject_categories'], meta: { name: 'study_planner_subject_categories' } }\n    /**\n     * Find zero or one Study_planner_subject_categories that matches the filter.\n     * @param {study_planner_subject_categoriesFindUniqueArgs} args - Arguments to find a Study_planner_subject_categories\n     * @example\n     * // Get one Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_subject_categoriesFindUniqueArgs>(args: SelectSubset<T, study_planner_subject_categoriesFindUniqueArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_subject_categories that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_subject_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_subject_categories\n     * @example\n     * // Get one Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_subject_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_subject_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_subject_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_subject_categoriesFindFirstArgs} args - Arguments to find a Study_planner_subject_categories\n     * @example\n     * // Get one Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_subject_categoriesFindFirstArgs>(args?: SelectSubset<T, study_planner_subject_categoriesFindFirstArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_subject_categories that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_subject_categoriesFindFirstOrThrowArgs} args - Arguments to find a Study_planner_subject_categories\n     * @example\n     * // Get one Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_subject_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_subject_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_subject_categories that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_subject_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findMany()\n     * \n     * // Get first 10 Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_subject_categoriesWithIdOnly = await prisma.study_planner_subject_categories.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_subject_categoriesFindManyArgs>(args?: SelectSubset<T, study_planner_subject_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_subject_categories.\n     * @param {study_planner_subject_categoriesCreateArgs} args - Arguments to create a Study_planner_subject_categories.\n     * @example\n     * // Create one Study_planner_subject_categories\n     * const Study_planner_subject_categories = await prisma.study_planner_subject_categories.create({\n     *   data: {\n     *     // ... data to create a Study_planner_subject_categories\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_subject_categoriesCreateArgs>(args: SelectSubset<T, study_planner_subject_categoriesCreateArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_subject_categories.\n     * @param {study_planner_subject_categoriesCreateManyArgs} args - Arguments to create many Study_planner_subject_categories.\n     * @example\n     * // Create many Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_subject_categoriesCreateManyArgs>(args?: SelectSubset<T, study_planner_subject_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_subject_categories and returns the data saved in the database.\n     * @param {study_planner_subject_categoriesCreateManyAndReturnArgs} args - Arguments to create many Study_planner_subject_categories.\n     * @example\n     * // Create many Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_subject_categories and only return the `id`\n     * const study_planner_subject_categoriesWithIdOnly = await prisma.study_planner_subject_categories.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_subject_categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_subject_categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_subject_categories.\n     * @param {study_planner_subject_categoriesDeleteArgs} args - Arguments to delete one Study_planner_subject_categories.\n     * @example\n     * // Delete one Study_planner_subject_categories\n     * const Study_planner_subject_categories = await prisma.study_planner_subject_categories.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_subject_categories\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_subject_categoriesDeleteArgs>(args: SelectSubset<T, study_planner_subject_categoriesDeleteArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_subject_categories.\n     * @param {study_planner_subject_categoriesUpdateArgs} args - Arguments to update one Study_planner_subject_categories.\n     * @example\n     * // Update one Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_subject_categoriesUpdateArgs>(args: SelectSubset<T, study_planner_subject_categoriesUpdateArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_subject_categories.\n     * @param {study_planner_subject_categoriesDeleteManyArgs} args - Arguments to filter Study_planner_subject_categories to delete.\n     * @example\n     * // Delete a few Study_planner_subject_categories\n     * const { count } = await prisma.study_planner_subject_categories.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_subject_categoriesDeleteManyArgs>(args?: SelectSubset<T, study_planner_subject_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_subject_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_subject_categoriesUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_subject_categoriesUpdateManyArgs>(args: SelectSubset<T, study_planner_subject_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_subject_categories and returns the data updated in the database.\n     * @param {study_planner_subject_categoriesUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_subject_categories.\n     * @example\n     * // Update many Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_subject_categories and only return the `id`\n     * const study_planner_subject_categoriesWithIdOnly = await prisma.study_planner_subject_categories.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_subject_categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_subject_categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_subject_categories.\n     * @param {study_planner_subject_categoriesUpsertArgs} args - Arguments to update or create a Study_planner_subject_categories.\n     * @example\n     * // Update or create a Study_planner_subject_categories\n     * const study_planner_subject_categories = await prisma.study_planner_subject_categories.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_subject_categories\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_subject_categories we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_subject_categoriesUpsertArgs>(args: SelectSubset<T, study_planner_subject_categoriesUpsertArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_subject_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_subject_categoriesCountArgs} args - Arguments to filter Study_planner_subject_categories to count.\n     * @example\n     * // Count the number of Study_planner_subject_categories\n     * const count = await prisma.study_planner_subject_categories.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_subject_categories we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_subject_categoriesCountArgs>(\n      args?: Subset<T, study_planner_subject_categoriesCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_subject_categoriesCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_subject_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_subject_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_subject_categoriesAggregateArgs>(args: Subset<T, Study_planner_subject_categoriesAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_subject_categoriesAggregateType<T>>\n\n    /**\n     * Group by Study_planner_subject_categories.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_subject_categoriesGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_subject_categoriesGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_subject_categoriesGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_subject_categoriesGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_subject_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_subject_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_subject_categories model\n   */\n  readonly fields: study_planner_subject_categoriesFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_subject_categories.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_subject_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    study_planner_study_tasks<T extends study_planner_subject_categories$study_planner_study_tasksArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_subject_categories$study_planner_study_tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_learning_gap_charts<T extends study_planner_subject_categories$study_planner_learning_gap_chartsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_subject_categories$study_planner_learning_gap_chartsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_subject_categories model\n   */\n  interface study_planner_subject_categoriesFieldRefs {\n    readonly id: FieldRef<\"study_planner_subject_categories\", 'String'>\n    readonly code: FieldRef<\"study_planner_subject_categories\", 'String'>\n    readonly name: FieldRef<\"study_planner_subject_categories\", 'String'>\n    readonly description: FieldRef<\"study_planner_subject_categories\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_subject_categories\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_subject_categories\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_subject_categories findUnique\n   */\n  export type study_planner_subject_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_subject_categories to fetch.\n     */\n    where: study_planner_subject_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_subject_categories findUniqueOrThrow\n   */\n  export type study_planner_subject_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_subject_categories to fetch.\n     */\n    where: study_planner_subject_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_subject_categories findFirst\n   */\n  export type study_planner_subject_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_subject_categories to fetch.\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_subject_categories to fetch.\n     */\n    orderBy?: study_planner_subject_categoriesOrderByWithRelationInput | study_planner_subject_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_subject_categories.\n     */\n    cursor?: study_planner_subject_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_subject_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_subject_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_subject_categories.\n     */\n    distinct?: Study_planner_subject_categoriesScalarFieldEnum | Study_planner_subject_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_subject_categories findFirstOrThrow\n   */\n  export type study_planner_subject_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_subject_categories to fetch.\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_subject_categories to fetch.\n     */\n    orderBy?: study_planner_subject_categoriesOrderByWithRelationInput | study_planner_subject_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_subject_categories.\n     */\n    cursor?: study_planner_subject_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_subject_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_subject_categories.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_subject_categories.\n     */\n    distinct?: Study_planner_subject_categoriesScalarFieldEnum | Study_planner_subject_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_subject_categories findMany\n   */\n  export type study_planner_subject_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_subject_categories to fetch.\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_subject_categories to fetch.\n     */\n    orderBy?: study_planner_subject_categoriesOrderByWithRelationInput | study_planner_subject_categoriesOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_subject_categories.\n     */\n    cursor?: study_planner_subject_categoriesWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_subject_categories from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_subject_categories.\n     */\n    skip?: number\n    distinct?: Study_planner_subject_categoriesScalarFieldEnum | Study_planner_subject_categoriesScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_subject_categories create\n   */\n  export type study_planner_subject_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_subject_categories.\n     */\n    data: XOR<study_planner_subject_categoriesCreateInput, study_planner_subject_categoriesUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_subject_categories createMany\n   */\n  export type study_planner_subject_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_subject_categories.\n     */\n    data: study_planner_subject_categoriesCreateManyInput | study_planner_subject_categoriesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_subject_categories createManyAndReturn\n   */\n  export type study_planner_subject_categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_subject_categories.\n     */\n    data: study_planner_subject_categoriesCreateManyInput | study_planner_subject_categoriesCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_subject_categories update\n   */\n  export type study_planner_subject_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_subject_categories.\n     */\n    data: XOR<study_planner_subject_categoriesUpdateInput, study_planner_subject_categoriesUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_subject_categories to update.\n     */\n    where: study_planner_subject_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_subject_categories updateMany\n   */\n  export type study_planner_subject_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_subject_categories.\n     */\n    data: XOR<study_planner_subject_categoriesUpdateManyMutationInput, study_planner_subject_categoriesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_subject_categories to update\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * Limit how many study_planner_subject_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_subject_categories updateManyAndReturn\n   */\n  export type study_planner_subject_categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_subject_categories.\n     */\n    data: XOR<study_planner_subject_categoriesUpdateManyMutationInput, study_planner_subject_categoriesUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_subject_categories to update\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * Limit how many study_planner_subject_categories to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_subject_categories upsert\n   */\n  export type study_planner_subject_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_subject_categories to update in case it exists.\n     */\n    where: study_planner_subject_categoriesWhereUniqueInput\n    /**\n     * In case the study_planner_subject_categories found by the `where` argument doesn't exist, create a new study_planner_subject_categories with this data.\n     */\n    create: XOR<study_planner_subject_categoriesCreateInput, study_planner_subject_categoriesUncheckedCreateInput>\n    /**\n     * In case the study_planner_subject_categories was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_subject_categoriesUpdateInput, study_planner_subject_categoriesUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_subject_categories delete\n   */\n  export type study_planner_subject_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_subject_categories to delete.\n     */\n    where: study_planner_subject_categoriesWhereUniqueInput\n  }\n\n  /**\n   * study_planner_subject_categories deleteMany\n   */\n  export type study_planner_subject_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_subject_categories to delete\n     */\n    where?: study_planner_subject_categoriesWhereInput\n    /**\n     * Limit how many study_planner_subject_categories to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_subject_categories.study_planner_study_tasks\n   */\n  export type study_planner_subject_categories$study_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_subject_categories.study_planner_learning_gap_charts\n   */\n  export type study_planner_subject_categories$study_planner_learning_gap_chartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    where?: study_planner_learning_gap_chartsWhereInput\n    orderBy?: study_planner_learning_gap_chartsOrderByWithRelationInput | study_planner_learning_gap_chartsOrderByWithRelationInput[]\n    cursor?: study_planner_learning_gap_chartsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_learning_gap_chartsScalarFieldEnum | Study_planner_learning_gap_chartsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_subject_categories without action\n   */\n  export type study_planner_subject_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_subject_categories\n     */\n    select?: study_planner_subject_categoriesSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_subject_categories\n     */\n    omit?: study_planner_subject_categoriesOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_subject_categoriesInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_students\n   */\n\n  export type AggregateStudy_planner_students = {\n    _count: Study_planner_studentsCountAggregateOutputType | null\n    _min: Study_planner_studentsMinAggregateOutputType | null\n    _max: Study_planner_studentsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_studentsMinAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_studentsMaxAggregateOutputType = {\n    id: string | null\n    email: string | null\n    password_hash: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_studentsCountAggregateOutputType = {\n    id: number\n    email: number\n    password_hash: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_studentsMinAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_studentsMaxAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_studentsCountAggregateInputType = {\n    id?: true\n    email?: true\n    password_hash?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_studentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_students to aggregate.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_students\n    **/\n    _count?: true | Study_planner_studentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_studentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_studentsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_studentsAggregateType<T extends Study_planner_studentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_students]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_students[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_students[P]>\n  }\n\n\n\n\n  export type study_planner_studentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_studentsWhereInput\n    orderBy?: study_planner_studentsOrderByWithAggregationInput | study_planner_studentsOrderByWithAggregationInput[]\n    by: Study_planner_studentsScalarFieldEnum[] | Study_planner_studentsScalarFieldEnum\n    having?: study_planner_studentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_studentsCountAggregateInputType | true\n    _min?: Study_planner_studentsMinAggregateInputType\n    _max?: Study_planner_studentsMaxAggregateInputType\n  }\n\n  export type Study_planner_studentsGroupByOutputType = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_studentsCountAggregateOutputType | null\n    _min: Study_planner_studentsMinAggregateOutputType | null\n    _max: Study_planner_studentsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_studentsGroupByPayload<T extends study_planner_studentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_studentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_studentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_studentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_studentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_studentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    study_planner_study_tasks?: boolean | study_planner_students$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_task_alarms?: boolean | study_planner_students$study_planner_task_alarmsArgs<ExtArgs>\n    study_planner_general_reminders?: boolean | study_planner_students$study_planner_general_remindersArgs<ExtArgs>\n    study_planner_study_progress_analytics?: boolean | study_planner_students$study_planner_study_progress_analyticsArgs<ExtArgs>\n    study_planner_learning_gap_charts?: boolean | study_planner_students$study_planner_learning_gap_chartsArgs<ExtArgs>\n    _count?: boolean | Study_planner_studentsCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_students\"]>\n\n  export type study_planner_studentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_students\"]>\n\n  export type study_planner_studentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }, ExtArgs[\"result\"][\"study_planner_students\"]>\n\n  export type study_planner_studentsSelectScalar = {\n    id?: boolean\n    email?: boolean\n    password_hash?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_studentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"email\" | \"password_hash\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_students\"]>\n  export type study_planner_studentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    study_planner_study_tasks?: boolean | study_planner_students$study_planner_study_tasksArgs<ExtArgs>\n    study_planner_task_alarms?: boolean | study_planner_students$study_planner_task_alarmsArgs<ExtArgs>\n    study_planner_general_reminders?: boolean | study_planner_students$study_planner_general_remindersArgs<ExtArgs>\n    study_planner_study_progress_analytics?: boolean | study_planner_students$study_planner_study_progress_analyticsArgs<ExtArgs>\n    study_planner_learning_gap_charts?: boolean | study_planner_students$study_planner_learning_gap_chartsArgs<ExtArgs>\n    _count?: boolean | Study_planner_studentsCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_studentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n  export type study_planner_studentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}\n\n  export type $study_planner_studentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_students\"\n    objects: {\n      study_planner_study_tasks: Prisma.$study_planner_study_tasksPayload<ExtArgs>[]\n      study_planner_task_alarms: Prisma.$study_planner_task_alarmsPayload<ExtArgs>[]\n      study_planner_general_reminders: Prisma.$study_planner_general_remindersPayload<ExtArgs>[]\n      study_planner_study_progress_analytics: Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>[]\n      study_planner_learning_gap_charts: Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Unique email address used for student login and communication.\n       */\n      email: string\n      /**\n       * Secure hashed password for authentication purposes. Plain passwords are\n       * never stored.\n       */\n      password_hash: string\n      /**\n       * Timestamp when the student record was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the student record was last updated.\n       */\n      updated_at: Date\n      /**\n       * Timestamp indicating when the student record was soft deleted, if\n       * applicable.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_students\"]>\n    composites: {}\n  }\n\n  type study_planner_studentsGetPayload<S extends boolean | null | undefined | study_planner_studentsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_studentsPayload, S>\n\n  type study_planner_studentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_studentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_studentsCountAggregateInputType | true\n    }\n\n  export interface study_planner_studentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_students'], meta: { name: 'study_planner_students' } }\n    /**\n     * Find zero or one Study_planner_students that matches the filter.\n     * @param {study_planner_studentsFindUniqueArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_studentsFindUniqueArgs>(args: SelectSubset<T, study_planner_studentsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_students that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_studentsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_studentsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_studentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_students that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsFindFirstArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_studentsFindFirstArgs>(args?: SelectSubset<T, study_planner_studentsFindFirstArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_students that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_students\n     * @example\n     * // Get one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_studentsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_studentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_students that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findMany()\n     * \n     * // Get first 10 Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_studentsWithIdOnly = await prisma.study_planner_students.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_studentsFindManyArgs>(args?: SelectSubset<T, study_planner_studentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_students.\n     * @param {study_planner_studentsCreateArgs} args - Arguments to create a Study_planner_students.\n     * @example\n     * // Create one Study_planner_students\n     * const Study_planner_students = await prisma.study_planner_students.create({\n     *   data: {\n     *     // ... data to create a Study_planner_students\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_studentsCreateArgs>(args: SelectSubset<T, study_planner_studentsCreateArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_students.\n     * @param {study_planner_studentsCreateManyArgs} args - Arguments to create many Study_planner_students.\n     * @example\n     * // Create many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_studentsCreateManyArgs>(args?: SelectSubset<T, study_planner_studentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_students and returns the data saved in the database.\n     * @param {study_planner_studentsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_students.\n     * @example\n     * // Create many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_students and only return the `id`\n     * const study_planner_studentsWithIdOnly = await prisma.study_planner_students.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_studentsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_studentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_students.\n     * @param {study_planner_studentsDeleteArgs} args - Arguments to delete one Study_planner_students.\n     * @example\n     * // Delete one Study_planner_students\n     * const Study_planner_students = await prisma.study_planner_students.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_students\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_studentsDeleteArgs>(args: SelectSubset<T, study_planner_studentsDeleteArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_students.\n     * @param {study_planner_studentsUpdateArgs} args - Arguments to update one Study_planner_students.\n     * @example\n     * // Update one Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_studentsUpdateArgs>(args: SelectSubset<T, study_planner_studentsUpdateArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_students.\n     * @param {study_planner_studentsDeleteManyArgs} args - Arguments to filter Study_planner_students to delete.\n     * @example\n     * // Delete a few Study_planner_students\n     * const { count } = await prisma.study_planner_students.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_studentsDeleteManyArgs>(args?: SelectSubset<T, study_planner_studentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_studentsUpdateManyArgs>(args: SelectSubset<T, study_planner_studentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_students and returns the data updated in the database.\n     * @param {study_planner_studentsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_students.\n     * @example\n     * // Update many Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_students and only return the `id`\n     * const study_planner_studentsWithIdOnly = await prisma.study_planner_students.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_studentsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_studentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_students.\n     * @param {study_planner_studentsUpsertArgs} args - Arguments to update or create a Study_planner_students.\n     * @example\n     * // Update or create a Study_planner_students\n     * const study_planner_students = await prisma.study_planner_students.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_students\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_students we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_studentsUpsertArgs>(args: SelectSubset<T, study_planner_studentsUpsertArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsCountArgs} args - Arguments to filter Study_planner_students to count.\n     * @example\n     * // Count the number of Study_planner_students\n     * const count = await prisma.study_planner_students.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_students we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_studentsCountArgs>(\n      args?: Subset<T, study_planner_studentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_studentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_studentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_studentsAggregateArgs>(args: Subset<T, Study_planner_studentsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_studentsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_students.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_studentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_studentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_studentsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_studentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_studentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_studentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_students model\n   */\n  readonly fields: study_planner_studentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_students.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_studentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    study_planner_study_tasks<T extends study_planner_students$study_planner_study_tasksArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_study_tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_task_alarms<T extends study_planner_students$study_planner_task_alarmsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_task_alarmsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_general_reminders<T extends study_planner_students$study_planner_general_remindersArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_general_remindersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_study_progress_analytics<T extends study_planner_students$study_planner_study_progress_analyticsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_study_progress_analyticsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_learning_gap_charts<T extends study_planner_students$study_planner_learning_gap_chartsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_students$study_planner_learning_gap_chartsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_students model\n   */\n  interface study_planner_studentsFieldRefs {\n    readonly id: FieldRef<\"study_planner_students\", 'String'>\n    readonly email: FieldRef<\"study_planner_students\", 'String'>\n    readonly password_hash: FieldRef<\"study_planner_students\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_students\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_students\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_students\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_students findUnique\n   */\n  export type study_planner_studentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students findUniqueOrThrow\n   */\n  export type study_planner_studentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students findFirst\n   */\n  export type study_planner_studentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_students.\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_students.\n     */\n    distinct?: Study_planner_studentsScalarFieldEnum | Study_planner_studentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students findFirstOrThrow\n   */\n  export type study_planner_studentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_students.\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_students.\n     */\n    distinct?: Study_planner_studentsScalarFieldEnum | Study_planner_studentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students findMany\n   */\n  export type study_planner_studentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_students to fetch.\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_students to fetch.\n     */\n    orderBy?: study_planner_studentsOrderByWithRelationInput | study_planner_studentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_students.\n     */\n    cursor?: study_planner_studentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_students from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_students.\n     */\n    skip?: number\n    distinct?: Study_planner_studentsScalarFieldEnum | Study_planner_studentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students create\n   */\n  export type study_planner_studentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_students.\n     */\n    data: XOR<study_planner_studentsCreateInput, study_planner_studentsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_students createMany\n   */\n  export type study_planner_studentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_students.\n     */\n    data: study_planner_studentsCreateManyInput | study_planner_studentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_students createManyAndReturn\n   */\n  export type study_planner_studentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_students.\n     */\n    data: study_planner_studentsCreateManyInput | study_planner_studentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_students update\n   */\n  export type study_planner_studentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_students.\n     */\n    data: XOR<study_planner_studentsUpdateInput, study_planner_studentsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_students to update.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students updateMany\n   */\n  export type study_planner_studentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_students.\n     */\n    data: XOR<study_planner_studentsUpdateManyMutationInput, study_planner_studentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_students to update\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * Limit how many study_planner_students to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_students updateManyAndReturn\n   */\n  export type study_planner_studentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_students.\n     */\n    data: XOR<study_planner_studentsUpdateManyMutationInput, study_planner_studentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_students to update\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * Limit how many study_planner_students to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_students upsert\n   */\n  export type study_planner_studentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_students to update in case it exists.\n     */\n    where: study_planner_studentsWhereUniqueInput\n    /**\n     * In case the study_planner_students found by the `where` argument doesn't exist, create a new study_planner_students with this data.\n     */\n    create: XOR<study_planner_studentsCreateInput, study_planner_studentsUncheckedCreateInput>\n    /**\n     * In case the study_planner_students was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_studentsUpdateInput, study_planner_studentsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_students delete\n   */\n  export type study_planner_studentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_students to delete.\n     */\n    where: study_planner_studentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_students deleteMany\n   */\n  export type study_planner_studentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_students to delete\n     */\n    where?: study_planner_studentsWhereInput\n    /**\n     * Limit how many study_planner_students to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_students.study_planner_study_tasks\n   */\n  export type study_planner_students$study_planner_study_tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_task_alarms\n   */\n  export type study_planner_students$study_planner_task_alarmsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    where?: study_planner_task_alarmsWhereInput\n    orderBy?: study_planner_task_alarmsOrderByWithRelationInput | study_planner_task_alarmsOrderByWithRelationInput[]\n    cursor?: study_planner_task_alarmsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_task_alarmsScalarFieldEnum | Study_planner_task_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_general_reminders\n   */\n  export type study_planner_students$study_planner_general_remindersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    where?: study_planner_general_remindersWhereInput\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_study_progress_analytics\n   */\n  export type study_planner_students$study_planner_study_progress_analyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    where?: study_planner_study_progress_analyticsWhereInput\n    orderBy?: study_planner_study_progress_analyticsOrderByWithRelationInput | study_planner_study_progress_analyticsOrderByWithRelationInput[]\n    cursor?: study_planner_study_progress_analyticsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_progress_analyticsScalarFieldEnum | Study_planner_study_progress_analyticsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students.study_planner_learning_gap_charts\n   */\n  export type study_planner_students$study_planner_learning_gap_chartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    where?: study_planner_learning_gap_chartsWhereInput\n    orderBy?: study_planner_learning_gap_chartsOrderByWithRelationInput | study_planner_learning_gap_chartsOrderByWithRelationInput[]\n    cursor?: study_planner_learning_gap_chartsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_learning_gap_chartsScalarFieldEnum | Study_planner_learning_gap_chartsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_students without action\n   */\n  export type study_planner_studentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_students\n     */\n    select?: study_planner_studentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_students\n     */\n    omit?: study_planner_studentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_studentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_tasks\n   */\n\n  export type AggregateStudy_planner_study_tasks = {\n    _count: Study_planner_study_tasksCountAggregateOutputType | null\n    _min: Study_planner_study_tasksMinAggregateOutputType | null\n    _max: Study_planner_study_tasksMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_tasksMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_phase_id: string | null\n    subject_category_id: string | null\n    title: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_study_tasksMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_phase_id: string | null\n    subject_category_id: string | null\n    title: string | null\n    description: string | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_study_tasksCountAggregateOutputType = {\n    id: number\n    student_id: number\n    study_phase_id: number\n    subject_category_id: number\n    title: number\n    description: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_tasksMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    subject_category_id?: true\n    title?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_study_tasksMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    subject_category_id?: true\n    title?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_study_tasksCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    subject_category_id?: true\n    title?: true\n    description?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_tasksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_tasks to aggregate.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_tasks\n    **/\n    _count?: true | Study_planner_study_tasksCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_tasksMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_tasksMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_tasksAggregateType<T extends Study_planner_study_tasksAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_tasks]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_tasks[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_tasks[P]>\n  }\n\n\n\n\n  export type study_planner_study_tasksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_tasksWhereInput\n    orderBy?: study_planner_study_tasksOrderByWithAggregationInput | study_planner_study_tasksOrderByWithAggregationInput[]\n    by: Study_planner_study_tasksScalarFieldEnum[] | Study_planner_study_tasksScalarFieldEnum\n    having?: study_planner_study_tasksScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_tasksCountAggregateInputType | true\n    _min?: Study_planner_study_tasksMinAggregateInputType\n    _max?: Study_planner_study_tasksMaxAggregateInputType\n  }\n\n  export type Study_planner_study_tasksGroupByOutputType = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description: string | null\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_study_tasksCountAggregateOutputType | null\n    _min: Study_planner_study_tasksMinAggregateOutputType | null\n    _max: Study_planner_study_tasksMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_tasksGroupByPayload<T extends study_planner_study_tasksGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_tasksGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_tasksGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_tasksGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_tasksGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_tasksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    subject_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs>\n    study_planner_attachments?: boolean | study_planner_study_tasks$study_planner_attachmentsArgs<ExtArgs>\n    study_planner_memos?: boolean | study_planner_study_tasks$study_planner_memosArgs<ExtArgs>\n    study_planner_task_alarms?: boolean | study_planner_study_tasks$study_planner_task_alarmsArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_tasksCountOutputTypeDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n\n  export type study_planner_study_tasksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    subject_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n\n  export type study_planner_study_tasksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    subject_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n\n  export type study_planner_study_tasksSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    subject_category_id?: boolean\n    title?: boolean\n    description?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_study_tasksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"study_phase_id\" | \"subject_category_id\" | \"title\" | \"description\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n  export type study_planner_study_tasksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n    study_planner_study_task_progress?: boolean | study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs>\n    study_planner_attachments?: boolean | study_planner_study_tasks$study_planner_attachmentsArgs<ExtArgs>\n    study_planner_memos?: boolean | study_planner_study_tasks$study_planner_memosArgs<ExtArgs>\n    study_planner_task_alarms?: boolean | study_planner_study_tasks$study_planner_task_alarmsArgs<ExtArgs>\n    _count?: boolean | Study_planner_study_tasksCountOutputTypeDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_tasksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_tasksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_tasksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_tasks\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      studyPhase: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n      subjectCategory: Prisma.$study_planner_subject_categoriesPayload<ExtArgs>\n      study_planner_study_task_progress: Prisma.$study_planner_study_task_progressPayload<ExtArgs>[]\n      study_planner_attachments: Prisma.$study_planner_attachmentsPayload<ExtArgs>[]\n      study_planner_memos: Prisma.$study_planner_memosPayload<ExtArgs>[]\n      study_planner_task_alarms: Prisma.$study_planner_task_alarmsPayload<ExtArgs>[]\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged student's {@link study_planner_students.id}\n       */\n      student_id: string\n      /**\n       * Associated study phase {@link study_planner_study_phases.id}\n       */\n      study_phase_id: string\n      /**\n       * Linked subject category {@link study_planner_subject_categories.id}\n       */\n      subject_category_id: string\n      /**\n       * Title of the study task capturing the user's learning goal.\n       */\n      title: string\n      /**\n       * Detailed description or notes about the study task.\n       */\n      description: string | null\n      /**\n       * Timestamp when the study task was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the study task was last updated.\n       */\n      updated_at: Date\n      /**\n       * Timestamp when the study task was soft deleted; null if not deleted.\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_study_tasks\"]>\n    composites: {}\n  }\n\n  type study_planner_study_tasksGetPayload<S extends boolean | null | undefined | study_planner_study_tasksDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_tasksPayload, S>\n\n  type study_planner_study_tasksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_tasksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_tasksCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_tasksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_tasks'], meta: { name: 'study_planner_study_tasks' } }\n    /**\n     * Find zero or one Study_planner_study_tasks that matches the filter.\n     * @param {study_planner_study_tasksFindUniqueArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_tasksFindUniqueArgs>(args: SelectSubset<T, study_planner_study_tasksFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_tasks that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_tasksFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_tasksFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_tasksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_tasks that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksFindFirstArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_tasksFindFirstArgs>(args?: SelectSubset<T, study_planner_study_tasksFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_tasks that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_tasks\n     * @example\n     * // Get one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_tasksFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_tasksFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_tasks that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findMany()\n     * \n     * // Get first 10 Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_tasksWithIdOnly = await prisma.study_planner_study_tasks.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_tasksFindManyArgs>(args?: SelectSubset<T, study_planner_study_tasksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_tasks.\n     * @param {study_planner_study_tasksCreateArgs} args - Arguments to create a Study_planner_study_tasks.\n     * @example\n     * // Create one Study_planner_study_tasks\n     * const Study_planner_study_tasks = await prisma.study_planner_study_tasks.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_tasks\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_tasksCreateArgs>(args: SelectSubset<T, study_planner_study_tasksCreateArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_tasks.\n     * @param {study_planner_study_tasksCreateManyArgs} args - Arguments to create many Study_planner_study_tasks.\n     * @example\n     * // Create many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_tasksCreateManyArgs>(args?: SelectSubset<T, study_planner_study_tasksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_tasks and returns the data saved in the database.\n     * @param {study_planner_study_tasksCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_tasks.\n     * @example\n     * // Create many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_tasks and only return the `id`\n     * const study_planner_study_tasksWithIdOnly = await prisma.study_planner_study_tasks.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_tasksCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_tasksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_tasks.\n     * @param {study_planner_study_tasksDeleteArgs} args - Arguments to delete one Study_planner_study_tasks.\n     * @example\n     * // Delete one Study_planner_study_tasks\n     * const Study_planner_study_tasks = await prisma.study_planner_study_tasks.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_tasks\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_tasksDeleteArgs>(args: SelectSubset<T, study_planner_study_tasksDeleteArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_tasks.\n     * @param {study_planner_study_tasksUpdateArgs} args - Arguments to update one Study_planner_study_tasks.\n     * @example\n     * // Update one Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_tasksUpdateArgs>(args: SelectSubset<T, study_planner_study_tasksUpdateArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_tasks.\n     * @param {study_planner_study_tasksDeleteManyArgs} args - Arguments to filter Study_planner_study_tasks to delete.\n     * @example\n     * // Delete a few Study_planner_study_tasks\n     * const { count } = await prisma.study_planner_study_tasks.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_tasksDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_tasksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_tasksUpdateManyArgs>(args: SelectSubset<T, study_planner_study_tasksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_tasks and returns the data updated in the database.\n     * @param {study_planner_study_tasksUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_tasks.\n     * @example\n     * // Update many Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_tasks and only return the `id`\n     * const study_planner_study_tasksWithIdOnly = await prisma.study_planner_study_tasks.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_tasksUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_tasksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_tasks.\n     * @param {study_planner_study_tasksUpsertArgs} args - Arguments to update or create a Study_planner_study_tasks.\n     * @example\n     * // Update or create a Study_planner_study_tasks\n     * const study_planner_study_tasks = await prisma.study_planner_study_tasks.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_tasks\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_tasks we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_tasksUpsertArgs>(args: SelectSubset<T, study_planner_study_tasksUpsertArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksCountArgs} args - Arguments to filter Study_planner_study_tasks to count.\n     * @example\n     * // Count the number of Study_planner_study_tasks\n     * const count = await prisma.study_planner_study_tasks.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_tasks we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_tasksCountArgs>(\n      args?: Subset<T, study_planner_study_tasksCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_tasksCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_tasksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_tasksAggregateArgs>(args: Subset<T, Study_planner_study_tasksAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_tasksAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_tasks.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_tasksGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_tasksGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_tasksGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_tasksGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_tasksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_tasksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_tasks model\n   */\n  readonly fields: study_planner_study_tasksFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_tasks.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_tasksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyPhase<T extends study_planner_study_phasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phasesDefaultArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    subjectCategory<T extends study_planner_subject_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_subject_categoriesDefaultArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    study_planner_study_task_progress<T extends study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_attachments<T extends study_planner_study_tasks$study_planner_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_memos<T extends study_planner_study_tasks$study_planner_memosArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_memosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    study_planner_task_alarms<T extends study_planner_study_tasks$study_planner_task_alarmsArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasks$study_planner_task_alarmsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions> | Null>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_tasks model\n   */\n  interface study_planner_study_tasksFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly study_phase_id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly subject_category_id: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly title: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly description: FieldRef<\"study_planner_study_tasks\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_study_tasks\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_tasks\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_study_tasks\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_tasks findUnique\n   */\n  export type study_planner_study_tasksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks findUniqueOrThrow\n   */\n  export type study_planner_study_tasksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks findFirst\n   */\n  export type study_planner_study_tasksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_tasks.\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_tasks.\n     */\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks findFirstOrThrow\n   */\n  export type study_planner_study_tasksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_tasks.\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_tasks.\n     */\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks findMany\n   */\n  export type study_planner_study_tasksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_tasks to fetch.\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_tasks to fetch.\n     */\n    orderBy?: study_planner_study_tasksOrderByWithRelationInput | study_planner_study_tasksOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_tasks.\n     */\n    cursor?: study_planner_study_tasksWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_tasks from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_tasks.\n     */\n    skip?: number\n    distinct?: Study_planner_study_tasksScalarFieldEnum | Study_planner_study_tasksScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks create\n   */\n  export type study_planner_study_tasksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksCreateInput, study_planner_study_tasksUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_tasks createMany\n   */\n  export type study_planner_study_tasksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_tasks.\n     */\n    data: study_planner_study_tasksCreateManyInput | study_planner_study_tasksCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_tasks createManyAndReturn\n   */\n  export type study_planner_study_tasksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_tasks.\n     */\n    data: study_planner_study_tasksCreateManyInput | study_planner_study_tasksCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_tasks update\n   */\n  export type study_planner_study_tasksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksUpdateInput, study_planner_study_tasksUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_tasks to update.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks updateMany\n   */\n  export type study_planner_study_tasksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_tasks to update\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * Limit how many study_planner_study_tasks to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_tasks updateManyAndReturn\n   */\n  export type study_planner_study_tasksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_tasks.\n     */\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_tasks to update\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * Limit how many study_planner_study_tasks to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_tasks upsert\n   */\n  export type study_planner_study_tasksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_tasks to update in case it exists.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n    /**\n     * In case the study_planner_study_tasks found by the `where` argument doesn't exist, create a new study_planner_study_tasks with this data.\n     */\n    create: XOR<study_planner_study_tasksCreateInput, study_planner_study_tasksUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_tasks was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_tasksUpdateInput, study_planner_study_tasksUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_tasks delete\n   */\n  export type study_planner_study_tasksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_tasks to delete.\n     */\n    where: study_planner_study_tasksWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_tasks deleteMany\n   */\n  export type study_planner_study_tasksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_tasks to delete\n     */\n    where?: study_planner_study_tasksWhereInput\n    /**\n     * Limit how many study_planner_study_tasks to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_study_task_progress\n   */\n  export type study_planner_study_tasks$study_planner_study_task_progressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    where?: study_planner_study_task_progressWhereInput\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_attachments\n   */\n  export type study_planner_study_tasks$study_planner_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    where?: study_planner_attachmentsWhereInput\n    orderBy?: study_planner_attachmentsOrderByWithRelationInput | study_planner_attachmentsOrderByWithRelationInput[]\n    cursor?: study_planner_attachmentsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_attachmentsScalarFieldEnum | Study_planner_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_memos\n   */\n  export type study_planner_study_tasks$study_planner_memosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    where?: study_planner_memosWhereInput\n    orderBy?: study_planner_memosOrderByWithRelationInput | study_planner_memosOrderByWithRelationInput[]\n    cursor?: study_planner_memosWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_memosScalarFieldEnum | Study_planner_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks.study_planner_task_alarms\n   */\n  export type study_planner_study_tasks$study_planner_task_alarmsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    where?: study_planner_task_alarmsWhereInput\n    orderBy?: study_planner_task_alarmsOrderByWithRelationInput | study_planner_task_alarmsOrderByWithRelationInput[]\n    cursor?: study_planner_task_alarmsWhereUniqueInput\n    take?: number\n    skip?: number\n    distinct?: Study_planner_task_alarmsScalarFieldEnum | Study_planner_task_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_tasks without action\n   */\n  export type study_planner_study_tasksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_tasks\n     */\n    select?: study_planner_study_tasksSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_tasks\n     */\n    omit?: study_planner_study_tasksOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_tasksInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_task_progress\n   */\n\n  export type AggregateStudy_planner_study_task_progress = {\n    _count: Study_planner_study_task_progressCountAggregateOutputType | null\n    _min: Study_planner_study_task_progressMinAggregateOutputType | null\n    _max: Study_planner_study_task_progressMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_task_progressMinAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    study_phase_id: string | null\n    completed_at: Date | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_progressMaxAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    study_phase_id: string | null\n    completed_at: Date | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_task_progressCountAggregateOutputType = {\n    id: number\n    study_task_id: number\n    study_phase_id: number\n    completed_at: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_task_progressMinAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    study_phase_id?: true\n    completed_at?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_progressMaxAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    study_phase_id?: true\n    completed_at?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_task_progressCountAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    study_phase_id?: true\n    completed_at?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_task_progressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_progress to aggregate.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_task_progresses\n    **/\n    _count?: true | Study_planner_study_task_progressCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_task_progressMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_task_progressMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_task_progressAggregateType<T extends Study_planner_study_task_progressAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_task_progress]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_task_progress[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_task_progress[P]>\n  }\n\n\n\n\n  export type study_planner_study_task_progressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_task_progressWhereInput\n    orderBy?: study_planner_study_task_progressOrderByWithAggregationInput | study_planner_study_task_progressOrderByWithAggregationInput[]\n    by: Study_planner_study_task_progressScalarFieldEnum[] | Study_planner_study_task_progressScalarFieldEnum\n    having?: study_planner_study_task_progressScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_task_progressCountAggregateInputType | true\n    _min?: Study_planner_study_task_progressMinAggregateInputType\n    _max?: Study_planner_study_task_progressMaxAggregateInputType\n  }\n\n  export type Study_planner_study_task_progressGroupByOutputType = {\n    id: string\n    study_task_id: string\n    study_phase_id: string\n    completed_at: Date | null\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_task_progressCountAggregateOutputType | null\n    _min: Study_planner_study_task_progressMinAggregateOutputType | null\n    _max: Study_planner_study_task_progressMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_task_progressGroupByPayload<T extends study_planner_study_task_progressGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_task_progressGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_task_progressGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_task_progressGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_task_progressGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_task_progressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n\n  export type study_planner_study_task_progressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n\n  export type study_planner_study_task_progressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n\n  export type study_planner_study_task_progressSelectScalar = {\n    id?: boolean\n    study_task_id?: boolean\n    study_phase_id?: boolean\n    completed_at?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_task_progressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"study_task_id\" | \"study_phase_id\" | \"completed_at\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n  export type study_planner_study_task_progressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_progressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_task_progressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_task_progressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_task_progress\"\n    objects: {\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n      studyPhase: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Associated study task {@link study_planner_study_tasks.id}\n       */\n      study_task_id: string\n      /**\n       * Tracked study phase {@link study_planner_study_phases.id}\n       */\n      study_phase_id: string\n      /**\n       * Timestamp when the study phase was completed for this task; null if\n       * incomplete.\n       */\n      completed_at: Date | null\n      /**\n       * Record creation timestamp for progress entry.\n       */\n      created_at: Date\n      /**\n       * Last update timestamp for progress entry.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_task_progress\"]>\n    composites: {}\n  }\n\n  type study_planner_study_task_progressGetPayload<S extends boolean | null | undefined | study_planner_study_task_progressDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_task_progressPayload, S>\n\n  type study_planner_study_task_progressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_task_progressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_task_progressCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_task_progressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_task_progress'], meta: { name: 'study_planner_study_task_progress' } }\n    /**\n     * Find zero or one Study_planner_study_task_progress that matches the filter.\n     * @param {study_planner_study_task_progressFindUniqueArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_task_progressFindUniqueArgs>(args: SelectSubset<T, study_planner_study_task_progressFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_task_progress that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_task_progressFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_task_progressFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_task_progressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_progress that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressFindFirstArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_task_progressFindFirstArgs>(args?: SelectSubset<T, study_planner_study_task_progressFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_task_progress that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_task_progress\n     * @example\n     * // Get one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_task_progressFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_task_progressFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_task_progresses that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_task_progresses\n     * const study_planner_study_task_progresses = await prisma.study_planner_study_task_progress.findMany()\n     * \n     * // Get first 10 Study_planner_study_task_progresses\n     * const study_planner_study_task_progresses = await prisma.study_planner_study_task_progress.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_task_progressWithIdOnly = await prisma.study_planner_study_task_progress.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_task_progressFindManyArgs>(args?: SelectSubset<T, study_planner_study_task_progressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressCreateArgs} args - Arguments to create a Study_planner_study_task_progress.\n     * @example\n     * // Create one Study_planner_study_task_progress\n     * const Study_planner_study_task_progress = await prisma.study_planner_study_task_progress.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_task_progress\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_task_progressCreateArgs>(args: SelectSubset<T, study_planner_study_task_progressCreateArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_task_progresses.\n     * @param {study_planner_study_task_progressCreateManyArgs} args - Arguments to create many Study_planner_study_task_progresses.\n     * @example\n     * // Create many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_task_progressCreateManyArgs>(args?: SelectSubset<T, study_planner_study_task_progressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_task_progresses and returns the data saved in the database.\n     * @param {study_planner_study_task_progressCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_task_progresses.\n     * @example\n     * // Create many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_task_progresses and only return the `id`\n     * const study_planner_study_task_progressWithIdOnly = await prisma.study_planner_study_task_progress.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_task_progressCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_task_progressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressDeleteArgs} args - Arguments to delete one Study_planner_study_task_progress.\n     * @example\n     * // Delete one Study_planner_study_task_progress\n     * const Study_planner_study_task_progress = await prisma.study_planner_study_task_progress.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_task_progress\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_task_progressDeleteArgs>(args: SelectSubset<T, study_planner_study_task_progressDeleteArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressUpdateArgs} args - Arguments to update one Study_planner_study_task_progress.\n     * @example\n     * // Update one Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_task_progressUpdateArgs>(args: SelectSubset<T, study_planner_study_task_progressUpdateArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_task_progresses.\n     * @param {study_planner_study_task_progressDeleteManyArgs} args - Arguments to filter Study_planner_study_task_progresses to delete.\n     * @example\n     * // Delete a few Study_planner_study_task_progresses\n     * const { count } = await prisma.study_planner_study_task_progress.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_task_progressDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_task_progressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_progresses.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_task_progressUpdateManyArgs>(args: SelectSubset<T, study_planner_study_task_progressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_task_progresses and returns the data updated in the database.\n     * @param {study_planner_study_task_progressUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_task_progresses.\n     * @example\n     * // Update many Study_planner_study_task_progresses\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_task_progresses and only return the `id`\n     * const study_planner_study_task_progressWithIdOnly = await prisma.study_planner_study_task_progress.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_task_progressUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_task_progressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_task_progress.\n     * @param {study_planner_study_task_progressUpsertArgs} args - Arguments to update or create a Study_planner_study_task_progress.\n     * @example\n     * // Update or create a Study_planner_study_task_progress\n     * const study_planner_study_task_progress = await prisma.study_planner_study_task_progress.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_task_progress\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_progress we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_task_progressUpsertArgs>(args: SelectSubset<T, study_planner_study_task_progressUpsertArgs<ExtArgs>>): Prisma__study_planner_study_task_progressClient<$Result.GetResult<Prisma.$study_planner_study_task_progressPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_task_progresses.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressCountArgs} args - Arguments to filter Study_planner_study_task_progresses to count.\n     * @example\n     * // Count the number of Study_planner_study_task_progresses\n     * const count = await prisma.study_planner_study_task_progress.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_task_progresses we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_task_progressCountArgs>(\n      args?: Subset<T, study_planner_study_task_progressCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_task_progressCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_task_progress.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_task_progressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_task_progressAggregateArgs>(args: Subset<T, Study_planner_study_task_progressAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_task_progressAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_task_progress.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_task_progressGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_task_progressGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_task_progressGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_task_progressGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_task_progressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_task_progressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_task_progress model\n   */\n  readonly fields: study_planner_study_task_progressFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_task_progress.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_task_progressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyPhase<T extends study_planner_study_phasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phasesDefaultArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_task_progress model\n   */\n  interface study_planner_study_task_progressFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly study_phase_id: FieldRef<\"study_planner_study_task_progress\", 'String'>\n    readonly completed_at: FieldRef<\"study_planner_study_task_progress\", 'DateTime'>\n    readonly created_at: FieldRef<\"study_planner_study_task_progress\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_task_progress\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_task_progress findUnique\n   */\n  export type study_planner_study_task_progressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress findUniqueOrThrow\n   */\n  export type study_planner_study_task_progressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress findFirst\n   */\n  export type study_planner_study_task_progressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_progresses.\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_progresses.\n     */\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_progress findFirstOrThrow\n   */\n  export type study_planner_study_task_progressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progress to fetch.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_task_progresses.\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_task_progresses.\n     */\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_progress findMany\n   */\n  export type study_planner_study_task_progressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_task_progresses to fetch.\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_task_progresses to fetch.\n     */\n    orderBy?: study_planner_study_task_progressOrderByWithRelationInput | study_planner_study_task_progressOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_task_progresses.\n     */\n    cursor?: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_task_progresses from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_task_progresses.\n     */\n    skip?: number\n    distinct?: Study_planner_study_task_progressScalarFieldEnum | Study_planner_study_task_progressScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_task_progress create\n   */\n  export type study_planner_study_task_progressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_task_progress.\n     */\n    data: XOR<study_planner_study_task_progressCreateInput, study_planner_study_task_progressUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_task_progress createMany\n   */\n  export type study_planner_study_task_progressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_task_progresses.\n     */\n    data: study_planner_study_task_progressCreateManyInput | study_planner_study_task_progressCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_task_progress createManyAndReturn\n   */\n  export type study_planner_study_task_progressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_task_progresses.\n     */\n    data: study_planner_study_task_progressCreateManyInput | study_planner_study_task_progressCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_progress update\n   */\n  export type study_planner_study_task_progressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_task_progress.\n     */\n    data: XOR<study_planner_study_task_progressUpdateInput, study_planner_study_task_progressUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_task_progress to update.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress updateMany\n   */\n  export type study_planner_study_task_progressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_task_progresses.\n     */\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_progresses to update\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * Limit how many study_planner_study_task_progresses to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_progress updateManyAndReturn\n   */\n  export type study_planner_study_task_progressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_task_progresses.\n     */\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_task_progresses to update\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * Limit how many study_planner_study_task_progresses to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_task_progress upsert\n   */\n  export type study_planner_study_task_progressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_task_progress to update in case it exists.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n    /**\n     * In case the study_planner_study_task_progress found by the `where` argument doesn't exist, create a new study_planner_study_task_progress with this data.\n     */\n    create: XOR<study_planner_study_task_progressCreateInput, study_planner_study_task_progressUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_task_progress was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_task_progressUpdateInput, study_planner_study_task_progressUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_task_progress delete\n   */\n  export type study_planner_study_task_progressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_task_progress to delete.\n     */\n    where: study_planner_study_task_progressWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_task_progress deleteMany\n   */\n  export type study_planner_study_task_progressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_task_progresses to delete\n     */\n    where?: study_planner_study_task_progressWhereInput\n    /**\n     * Limit how many study_planner_study_task_progresses to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_task_progress without action\n   */\n  export type study_planner_study_task_progressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_task_progress\n     */\n    select?: study_planner_study_task_progressSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_task_progress\n     */\n    omit?: study_planner_study_task_progressOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_task_progressInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_attachments\n   */\n\n  export type AggregateStudy_planner_attachments = {\n    _count: Study_planner_attachmentsCountAggregateOutputType | null\n    _min: Study_planner_attachmentsMinAggregateOutputType | null\n    _max: Study_planner_attachmentsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_attachmentsMinAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    file_type: string | null\n    file_url: string | null\n    created_at: Date | null\n  }\n\n  export type Study_planner_attachmentsMaxAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    file_type: string | null\n    file_url: string | null\n    created_at: Date | null\n  }\n\n  export type Study_planner_attachmentsCountAggregateOutputType = {\n    id: number\n    study_task_id: number\n    file_type: number\n    file_url: number\n    created_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_attachmentsMinAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    file_type?: true\n    file_url?: true\n    created_at?: true\n  }\n\n  export type Study_planner_attachmentsMaxAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    file_type?: true\n    file_url?: true\n    created_at?: true\n  }\n\n  export type Study_planner_attachmentsCountAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    file_type?: true\n    file_url?: true\n    created_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_attachments to aggregate.\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_attachments to fetch.\n     */\n    orderBy?: study_planner_attachmentsOrderByWithRelationInput | study_planner_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_attachments\n    **/\n    _count?: true | Study_planner_attachmentsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_attachmentsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_attachmentsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_attachmentsAggregateType<T extends Study_planner_attachmentsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_attachments]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_attachments[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_attachments[P]>\n  }\n\n\n\n\n  export type study_planner_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_attachmentsWhereInput\n    orderBy?: study_planner_attachmentsOrderByWithAggregationInput | study_planner_attachmentsOrderByWithAggregationInput[]\n    by: Study_planner_attachmentsScalarFieldEnum[] | Study_planner_attachmentsScalarFieldEnum\n    having?: study_planner_attachmentsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_attachmentsCountAggregateInputType | true\n    _min?: Study_planner_attachmentsMinAggregateInputType\n    _max?: Study_planner_attachmentsMaxAggregateInputType\n  }\n\n  export type Study_planner_attachmentsGroupByOutputType = {\n    id: string\n    study_task_id: string\n    file_type: string\n    file_url: string\n    created_at: Date\n    _count: Study_planner_attachmentsCountAggregateOutputType | null\n    _min: Study_planner_attachmentsMinAggregateOutputType | null\n    _max: Study_planner_attachmentsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_attachmentsGroupByPayload<T extends study_planner_attachmentsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_attachmentsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_attachmentsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_attachmentsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_attachmentsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    file_type?: boolean\n    file_url?: boolean\n    created_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_attachments\"]>\n\n  export type study_planner_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    file_type?: boolean\n    file_url?: boolean\n    created_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_attachments\"]>\n\n  export type study_planner_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    file_type?: boolean\n    file_url?: boolean\n    created_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_attachments\"]>\n\n  export type study_planner_attachmentsSelectScalar = {\n    id?: boolean\n    study_task_id?: boolean\n    file_type?: boolean\n    file_url?: boolean\n    created_at?: boolean\n  }\n\n  export type study_planner_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"study_task_id\" | \"file_type\" | \"file_url\" | \"created_at\", ExtArgs[\"result\"][\"study_planner_attachments\"]>\n  export type study_planner_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_attachments\"\n    objects: {\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged study task {@link study_planner_study_tasks.id}\n       */\n      study_task_id: string\n      /**\n       * Type of the attachment file, e.g., image/jpeg, application/pdf.\n       */\n      file_type: string\n      /**\n       * URI of the stored attachment file for retrieval.\n       */\n      file_url: string\n      /**\n       * Timestamp when the attachment was created.\n       */\n      created_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_attachments\"]>\n    composites: {}\n  }\n\n  type study_planner_attachmentsGetPayload<S extends boolean | null | undefined | study_planner_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_attachmentsPayload, S>\n\n  type study_planner_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_attachmentsCountAggregateInputType | true\n    }\n\n  export interface study_planner_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_attachments'], meta: { name: 'study_planner_attachments' } }\n    /**\n     * Find zero or one Study_planner_attachments that matches the filter.\n     * @param {study_planner_attachmentsFindUniqueArgs} args - Arguments to find a Study_planner_attachments\n     * @example\n     * // Get one Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_attachmentsFindUniqueArgs>(args: SelectSubset<T, study_planner_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_attachments that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_attachments\n     * @example\n     * // Get one Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_attachments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_attachmentsFindFirstArgs} args - Arguments to find a Study_planner_attachments\n     * @example\n     * // Get one Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_attachmentsFindFirstArgs>(args?: SelectSubset<T, study_planner_attachmentsFindFirstArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_attachments that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_attachments\n     * @example\n     * // Get one Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_attachments that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.findMany()\n     * \n     * // Get first 10 Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_attachmentsWithIdOnly = await prisma.study_planner_attachments.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_attachmentsFindManyArgs>(args?: SelectSubset<T, study_planner_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_attachments.\n     * @param {study_planner_attachmentsCreateArgs} args - Arguments to create a Study_planner_attachments.\n     * @example\n     * // Create one Study_planner_attachments\n     * const Study_planner_attachments = await prisma.study_planner_attachments.create({\n     *   data: {\n     *     // ... data to create a Study_planner_attachments\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_attachmentsCreateArgs>(args: SelectSubset<T, study_planner_attachmentsCreateArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_attachments.\n     * @param {study_planner_attachmentsCreateManyArgs} args - Arguments to create many Study_planner_attachments.\n     * @example\n     * // Create many Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_attachmentsCreateManyArgs>(args?: SelectSubset<T, study_planner_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_attachments and returns the data saved in the database.\n     * @param {study_planner_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_attachments.\n     * @example\n     * // Create many Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_attachments and only return the `id`\n     * const study_planner_attachmentsWithIdOnly = await prisma.study_planner_attachments.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_attachments.\n     * @param {study_planner_attachmentsDeleteArgs} args - Arguments to delete one Study_planner_attachments.\n     * @example\n     * // Delete one Study_planner_attachments\n     * const Study_planner_attachments = await prisma.study_planner_attachments.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_attachments\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_attachmentsDeleteArgs>(args: SelectSubset<T, study_planner_attachmentsDeleteArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_attachments.\n     * @param {study_planner_attachmentsUpdateArgs} args - Arguments to update one Study_planner_attachments.\n     * @example\n     * // Update one Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_attachmentsUpdateArgs>(args: SelectSubset<T, study_planner_attachmentsUpdateArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_attachments.\n     * @param {study_planner_attachmentsDeleteManyArgs} args - Arguments to filter Study_planner_attachments to delete.\n     * @example\n     * // Delete a few Study_planner_attachments\n     * const { count } = await prisma.study_planner_attachments.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_attachmentsDeleteManyArgs>(args?: SelectSubset<T, study_planner_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_attachmentsUpdateManyArgs>(args: SelectSubset<T, study_planner_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_attachments and returns the data updated in the database.\n     * @param {study_planner_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_attachments.\n     * @example\n     * // Update many Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_attachments and only return the `id`\n     * const study_planner_attachmentsWithIdOnly = await prisma.study_planner_attachments.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_attachments.\n     * @param {study_planner_attachmentsUpsertArgs} args - Arguments to update or create a Study_planner_attachments.\n     * @example\n     * // Update or create a Study_planner_attachments\n     * const study_planner_attachments = await prisma.study_planner_attachments.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_attachments\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_attachments we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_attachmentsUpsertArgs>(args: SelectSubset<T, study_planner_attachmentsUpsertArgs<ExtArgs>>): Prisma__study_planner_attachmentsClient<$Result.GetResult<Prisma.$study_planner_attachmentsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_attachmentsCountArgs} args - Arguments to filter Study_planner_attachments to count.\n     * @example\n     * // Count the number of Study_planner_attachments\n     * const count = await prisma.study_planner_attachments.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_attachments we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_attachmentsCountArgs>(\n      args?: Subset<T, study_planner_attachmentsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_attachmentsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_attachmentsAggregateArgs>(args: Subset<T, Study_planner_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_attachmentsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_attachments.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_attachmentsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_attachmentsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_attachmentsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_attachmentsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_attachments model\n   */\n  readonly fields: study_planner_attachmentsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_attachments.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_attachments model\n   */\n  interface study_planner_attachmentsFieldRefs {\n    readonly id: FieldRef<\"study_planner_attachments\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_attachments\", 'String'>\n    readonly file_type: FieldRef<\"study_planner_attachments\", 'String'>\n    readonly file_url: FieldRef<\"study_planner_attachments\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_attachments\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_attachments findUnique\n   */\n  export type study_planner_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_attachments to fetch.\n     */\n    where: study_planner_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_attachments findUniqueOrThrow\n   */\n  export type study_planner_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_attachments to fetch.\n     */\n    where: study_planner_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_attachments findFirst\n   */\n  export type study_planner_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_attachments to fetch.\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_attachments to fetch.\n     */\n    orderBy?: study_planner_attachmentsOrderByWithRelationInput | study_planner_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_attachments.\n     */\n    cursor?: study_planner_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_attachments.\n     */\n    distinct?: Study_planner_attachmentsScalarFieldEnum | Study_planner_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_attachments findFirstOrThrow\n   */\n  export type study_planner_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_attachments to fetch.\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_attachments to fetch.\n     */\n    orderBy?: study_planner_attachmentsOrderByWithRelationInput | study_planner_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_attachments.\n     */\n    cursor?: study_planner_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_attachments.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_attachments.\n     */\n    distinct?: Study_planner_attachmentsScalarFieldEnum | Study_planner_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_attachments findMany\n   */\n  export type study_planner_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_attachments to fetch.\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_attachments to fetch.\n     */\n    orderBy?: study_planner_attachmentsOrderByWithRelationInput | study_planner_attachmentsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_attachments.\n     */\n    cursor?: study_planner_attachmentsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_attachments from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_attachments.\n     */\n    skip?: number\n    distinct?: Study_planner_attachmentsScalarFieldEnum | Study_planner_attachmentsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_attachments create\n   */\n  export type study_planner_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_attachments.\n     */\n    data: XOR<study_planner_attachmentsCreateInput, study_planner_attachmentsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_attachments createMany\n   */\n  export type study_planner_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_attachments.\n     */\n    data: study_planner_attachmentsCreateManyInput | study_planner_attachmentsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_attachments createManyAndReturn\n   */\n  export type study_planner_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_attachments.\n     */\n    data: study_planner_attachmentsCreateManyInput | study_planner_attachmentsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_attachments update\n   */\n  export type study_planner_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_attachments.\n     */\n    data: XOR<study_planner_attachmentsUpdateInput, study_planner_attachmentsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_attachments to update.\n     */\n    where: study_planner_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_attachments updateMany\n   */\n  export type study_planner_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_attachments.\n     */\n    data: XOR<study_planner_attachmentsUpdateManyMutationInput, study_planner_attachmentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_attachments to update\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * Limit how many study_planner_attachments to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_attachments updateManyAndReturn\n   */\n  export type study_planner_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_attachments.\n     */\n    data: XOR<study_planner_attachmentsUpdateManyMutationInput, study_planner_attachmentsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_attachments to update\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * Limit how many study_planner_attachments to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_attachments upsert\n   */\n  export type study_planner_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_attachments to update in case it exists.\n     */\n    where: study_planner_attachmentsWhereUniqueInput\n    /**\n     * In case the study_planner_attachments found by the `where` argument doesn't exist, create a new study_planner_attachments with this data.\n     */\n    create: XOR<study_planner_attachmentsCreateInput, study_planner_attachmentsUncheckedCreateInput>\n    /**\n     * In case the study_planner_attachments was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_attachmentsUpdateInput, study_planner_attachmentsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_attachments delete\n   */\n  export type study_planner_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_attachments to delete.\n     */\n    where: study_planner_attachmentsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_attachments deleteMany\n   */\n  export type study_planner_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_attachments to delete\n     */\n    where?: study_planner_attachmentsWhereInput\n    /**\n     * Limit how many study_planner_attachments to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_attachments without action\n   */\n  export type study_planner_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_attachments\n     */\n    select?: study_planner_attachmentsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_attachments\n     */\n    omit?: study_planner_attachmentsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_attachmentsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_memos\n   */\n\n  export type AggregateStudy_planner_memos = {\n    _count: Study_planner_memosCountAggregateOutputType | null\n    _min: Study_planner_memosMinAggregateOutputType | null\n    _max: Study_planner_memosMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_memosMinAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    memo_text: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_memosMaxAggregateOutputType = {\n    id: string | null\n    study_task_id: string | null\n    memo_text: string | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_memosCountAggregateOutputType = {\n    id: number\n    study_task_id: number\n    memo_text: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_memosMinAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    memo_text?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_memosMaxAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    memo_text?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_memosCountAggregateInputType = {\n    id?: true\n    study_task_id?: true\n    memo_text?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_memosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_memos to aggregate.\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_memos to fetch.\n     */\n    orderBy?: study_planner_memosOrderByWithRelationInput | study_planner_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_memos.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_memos\n    **/\n    _count?: true | Study_planner_memosCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_memosMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_memosMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_memosAggregateType<T extends Study_planner_memosAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_memos]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_memos[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_memos[P]>\n  }\n\n\n\n\n  export type study_planner_memosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_memosWhereInput\n    orderBy?: study_planner_memosOrderByWithAggregationInput | study_planner_memosOrderByWithAggregationInput[]\n    by: Study_planner_memosScalarFieldEnum[] | Study_planner_memosScalarFieldEnum\n    having?: study_planner_memosScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_memosCountAggregateInputType | true\n    _min?: Study_planner_memosMinAggregateInputType\n    _max?: Study_planner_memosMaxAggregateInputType\n  }\n\n  export type Study_planner_memosGroupByOutputType = {\n    id: string\n    study_task_id: string\n    memo_text: string\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_memosCountAggregateOutputType | null\n    _min: Study_planner_memosMinAggregateOutputType | null\n    _max: Study_planner_memosMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_memosGroupByPayload<T extends study_planner_memosGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_memosGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_memosGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_memosGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_memosGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_memosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    memo_text?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_memos\"]>\n\n  export type study_planner_memosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    memo_text?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_memos\"]>\n\n  export type study_planner_memosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    study_task_id?: boolean\n    memo_text?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_memos\"]>\n\n  export type study_planner_memosSelectScalar = {\n    id?: boolean\n    study_task_id?: boolean\n    memo_text?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_memosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"study_task_id\" | \"memo_text\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_memos\"]>\n  export type study_planner_memosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_memosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_memosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_memosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_memos\"\n    objects: {\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged study task {@link study_planner_study_tasks.id}\n       */\n      study_task_id: string\n      /**\n       * Text content of the memo providing additional details or notes.\n       */\n      memo_text: string\n      /**\n       * Timestamp when the memo was created.\n       */\n      created_at: Date\n      /**\n       * Timestamp when the memo was last updated.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_memos\"]>\n    composites: {}\n  }\n\n  type study_planner_memosGetPayload<S extends boolean | null | undefined | study_planner_memosDefaultArgs> = $Result.GetResult<Prisma.$study_planner_memosPayload, S>\n\n  type study_planner_memosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_memosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_memosCountAggregateInputType | true\n    }\n\n  export interface study_planner_memosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_memos'], meta: { name: 'study_planner_memos' } }\n    /**\n     * Find zero or one Study_planner_memos that matches the filter.\n     * @param {study_planner_memosFindUniqueArgs} args - Arguments to find a Study_planner_memos\n     * @example\n     * // Get one Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_memosFindUniqueArgs>(args: SelectSubset<T, study_planner_memosFindUniqueArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_memos that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_memosFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_memos\n     * @example\n     * // Get one Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_memosFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_memosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_memos that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_memosFindFirstArgs} args - Arguments to find a Study_planner_memos\n     * @example\n     * // Get one Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_memosFindFirstArgs>(args?: SelectSubset<T, study_planner_memosFindFirstArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_memos that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_memosFindFirstOrThrowArgs} args - Arguments to find a Study_planner_memos\n     * @example\n     * // Get one Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_memosFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_memosFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_memos that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_memosFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.findMany()\n     * \n     * // Get first 10 Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_memosWithIdOnly = await prisma.study_planner_memos.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_memosFindManyArgs>(args?: SelectSubset<T, study_planner_memosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_memos.\n     * @param {study_planner_memosCreateArgs} args - Arguments to create a Study_planner_memos.\n     * @example\n     * // Create one Study_planner_memos\n     * const Study_planner_memos = await prisma.study_planner_memos.create({\n     *   data: {\n     *     // ... data to create a Study_planner_memos\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_memosCreateArgs>(args: SelectSubset<T, study_planner_memosCreateArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_memos.\n     * @param {study_planner_memosCreateManyArgs} args - Arguments to create many Study_planner_memos.\n     * @example\n     * // Create many Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_memosCreateManyArgs>(args?: SelectSubset<T, study_planner_memosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_memos and returns the data saved in the database.\n     * @param {study_planner_memosCreateManyAndReturnArgs} args - Arguments to create many Study_planner_memos.\n     * @example\n     * // Create many Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_memos and only return the `id`\n     * const study_planner_memosWithIdOnly = await prisma.study_planner_memos.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_memosCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_memosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_memos.\n     * @param {study_planner_memosDeleteArgs} args - Arguments to delete one Study_planner_memos.\n     * @example\n     * // Delete one Study_planner_memos\n     * const Study_planner_memos = await prisma.study_planner_memos.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_memos\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_memosDeleteArgs>(args: SelectSubset<T, study_planner_memosDeleteArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_memos.\n     * @param {study_planner_memosUpdateArgs} args - Arguments to update one Study_planner_memos.\n     * @example\n     * // Update one Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_memosUpdateArgs>(args: SelectSubset<T, study_planner_memosUpdateArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_memos.\n     * @param {study_planner_memosDeleteManyArgs} args - Arguments to filter Study_planner_memos to delete.\n     * @example\n     * // Delete a few Study_planner_memos\n     * const { count } = await prisma.study_planner_memos.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_memosDeleteManyArgs>(args?: SelectSubset<T, study_planner_memosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_memosUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_memosUpdateManyArgs>(args: SelectSubset<T, study_planner_memosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_memos and returns the data updated in the database.\n     * @param {study_planner_memosUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_memos.\n     * @example\n     * // Update many Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_memos and only return the `id`\n     * const study_planner_memosWithIdOnly = await prisma.study_planner_memos.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_memosUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_memosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_memos.\n     * @param {study_planner_memosUpsertArgs} args - Arguments to update or create a Study_planner_memos.\n     * @example\n     * // Update or create a Study_planner_memos\n     * const study_planner_memos = await prisma.study_planner_memos.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_memos\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_memos we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_memosUpsertArgs>(args: SelectSubset<T, study_planner_memosUpsertArgs<ExtArgs>>): Prisma__study_planner_memosClient<$Result.GetResult<Prisma.$study_planner_memosPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_memosCountArgs} args - Arguments to filter Study_planner_memos to count.\n     * @example\n     * // Count the number of Study_planner_memos\n     * const count = await prisma.study_planner_memos.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_memos we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_memosCountArgs>(\n      args?: Subset<T, study_planner_memosCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_memosCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_memosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_memosAggregateArgs>(args: Subset<T, Study_planner_memosAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_memosAggregateType<T>>\n\n    /**\n     * Group by Study_planner_memos.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_memosGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_memosGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_memosGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_memosGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_memosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_memosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_memos model\n   */\n  readonly fields: study_planner_memosFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_memos.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_memosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_memos model\n   */\n  interface study_planner_memosFieldRefs {\n    readonly id: FieldRef<\"study_planner_memos\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_memos\", 'String'>\n    readonly memo_text: FieldRef<\"study_planner_memos\", 'String'>\n    readonly created_at: FieldRef<\"study_planner_memos\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_memos\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_memos findUnique\n   */\n  export type study_planner_memosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_memos to fetch.\n     */\n    where: study_planner_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_memos findUniqueOrThrow\n   */\n  export type study_planner_memosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_memos to fetch.\n     */\n    where: study_planner_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_memos findFirst\n   */\n  export type study_planner_memosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_memos to fetch.\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_memos to fetch.\n     */\n    orderBy?: study_planner_memosOrderByWithRelationInput | study_planner_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_memos.\n     */\n    cursor?: study_planner_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_memos.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_memos.\n     */\n    distinct?: Study_planner_memosScalarFieldEnum | Study_planner_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_memos findFirstOrThrow\n   */\n  export type study_planner_memosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_memos to fetch.\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_memos to fetch.\n     */\n    orderBy?: study_planner_memosOrderByWithRelationInput | study_planner_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_memos.\n     */\n    cursor?: study_planner_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_memos.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_memos.\n     */\n    distinct?: Study_planner_memosScalarFieldEnum | Study_planner_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_memos findMany\n   */\n  export type study_planner_memosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_memos to fetch.\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_memos to fetch.\n     */\n    orderBy?: study_planner_memosOrderByWithRelationInput | study_planner_memosOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_memos.\n     */\n    cursor?: study_planner_memosWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_memos from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_memos.\n     */\n    skip?: number\n    distinct?: Study_planner_memosScalarFieldEnum | Study_planner_memosScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_memos create\n   */\n  export type study_planner_memosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_memos.\n     */\n    data: XOR<study_planner_memosCreateInput, study_planner_memosUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_memos createMany\n   */\n  export type study_planner_memosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_memos.\n     */\n    data: study_planner_memosCreateManyInput | study_planner_memosCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_memos createManyAndReturn\n   */\n  export type study_planner_memosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_memos.\n     */\n    data: study_planner_memosCreateManyInput | study_planner_memosCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_memos update\n   */\n  export type study_planner_memosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_memos.\n     */\n    data: XOR<study_planner_memosUpdateInput, study_planner_memosUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_memos to update.\n     */\n    where: study_planner_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_memos updateMany\n   */\n  export type study_planner_memosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_memos.\n     */\n    data: XOR<study_planner_memosUpdateManyMutationInput, study_planner_memosUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_memos to update\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * Limit how many study_planner_memos to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_memos updateManyAndReturn\n   */\n  export type study_planner_memosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_memos.\n     */\n    data: XOR<study_planner_memosUpdateManyMutationInput, study_planner_memosUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_memos to update\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * Limit how many study_planner_memos to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_memos upsert\n   */\n  export type study_planner_memosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_memos to update in case it exists.\n     */\n    where: study_planner_memosWhereUniqueInput\n    /**\n     * In case the study_planner_memos found by the `where` argument doesn't exist, create a new study_planner_memos with this data.\n     */\n    create: XOR<study_planner_memosCreateInput, study_planner_memosUncheckedCreateInput>\n    /**\n     * In case the study_planner_memos was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_memosUpdateInput, study_planner_memosUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_memos delete\n   */\n  export type study_planner_memosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_memos to delete.\n     */\n    where: study_planner_memosWhereUniqueInput\n  }\n\n  /**\n   * study_planner_memos deleteMany\n   */\n  export type study_planner_memosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_memos to delete\n     */\n    where?: study_planner_memosWhereInput\n    /**\n     * Limit how many study_planner_memos to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_memos without action\n   */\n  export type study_planner_memosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_memos\n     */\n    select?: study_planner_memosSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_memos\n     */\n    omit?: study_planner_memosOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_memosInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_task_alarms\n   */\n\n  export type AggregateStudy_planner_task_alarms = {\n    _count: Study_planner_task_alarmsCountAggregateOutputType | null\n    _min: Study_planner_task_alarmsMinAggregateOutputType | null\n    _max: Study_planner_task_alarmsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_task_alarmsMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_task_id: string | null\n    title: string | null\n    alarm_time: Date | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_task_alarmsMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_task_id: string | null\n    title: string | null\n    alarm_time: Date | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_task_alarmsCountAggregateOutputType = {\n    id: number\n    student_id: number\n    study_task_id: number\n    title: number\n    alarm_time: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_task_alarmsMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_task_id?: true\n    title?: true\n    alarm_time?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_task_alarmsMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_task_id?: true\n    title?: true\n    alarm_time?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_task_alarmsCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_task_id?: true\n    title?: true\n    alarm_time?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_task_alarmsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_task_alarms to aggregate.\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_task_alarms to fetch.\n     */\n    orderBy?: study_planner_task_alarmsOrderByWithRelationInput | study_planner_task_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_task_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_task_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_task_alarms.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_task_alarms\n    **/\n    _count?: true | Study_planner_task_alarmsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_task_alarmsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_task_alarmsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_task_alarmsAggregateType<T extends Study_planner_task_alarmsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_task_alarms]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_task_alarms[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_task_alarms[P]>\n  }\n\n\n\n\n  export type study_planner_task_alarmsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_task_alarmsWhereInput\n    orderBy?: study_planner_task_alarmsOrderByWithAggregationInput | study_planner_task_alarmsOrderByWithAggregationInput[]\n    by: Study_planner_task_alarmsScalarFieldEnum[] | Study_planner_task_alarmsScalarFieldEnum\n    having?: study_planner_task_alarmsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_task_alarmsCountAggregateInputType | true\n    _min?: Study_planner_task_alarmsMinAggregateInputType\n    _max?: Study_planner_task_alarmsMaxAggregateInputType\n  }\n\n  export type Study_planner_task_alarmsGroupByOutputType = {\n    id: string\n    student_id: string\n    study_task_id: string\n    title: string\n    alarm_time: Date\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_task_alarmsCountAggregateOutputType | null\n    _min: Study_planner_task_alarmsMinAggregateOutputType | null\n    _max: Study_planner_task_alarmsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_task_alarmsGroupByPayload<T extends study_planner_task_alarmsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_task_alarmsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_task_alarmsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_task_alarmsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_task_alarmsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_task_alarmsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_task_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_task_alarms\"]>\n\n  export type study_planner_task_alarmsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_task_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_task_alarms\"]>\n\n  export type study_planner_task_alarmsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_task_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_task_alarms\"]>\n\n  export type study_planner_task_alarmsSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    study_task_id?: boolean\n    title?: boolean\n    alarm_time?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_task_alarmsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"study_task_id\" | \"title\" | \"alarm_time\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_task_alarms\"]>\n  export type study_planner_task_alarmsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_task_alarmsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n  export type study_planner_task_alarmsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyTask?: boolean | study_planner_study_tasksDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_task_alarmsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_task_alarms\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      studyTask: Prisma.$study_planner_study_tasksPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged student's {@link study_planner_students.id} who owns this alarm.\n       */\n      student_id: string\n      /**\n       * Referenced study task's {@link study_planner_study_tasks.id} for which\n       * the alarm is set.\n       */\n      study_task_id: string\n      /**\n       * Title or label of the alarm for user identification.\n       */\n      title: string\n      /**\n       * Scheduled time for the alarm to trigger the notification.\n       */\n      alarm_time: Date\n      /**\n       * Timestamp of record creation for audit trail.\n       */\n      created_at: Date\n      /**\n       * Timestamp of last update for audit trail.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp indicating logical removal (nullable).\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_task_alarms\"]>\n    composites: {}\n  }\n\n  type study_planner_task_alarmsGetPayload<S extends boolean | null | undefined | study_planner_task_alarmsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_task_alarmsPayload, S>\n\n  type study_planner_task_alarmsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_task_alarmsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_task_alarmsCountAggregateInputType | true\n    }\n\n  export interface study_planner_task_alarmsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_task_alarms'], meta: { name: 'study_planner_task_alarms' } }\n    /**\n     * Find zero or one Study_planner_task_alarms that matches the filter.\n     * @param {study_planner_task_alarmsFindUniqueArgs} args - Arguments to find a Study_planner_task_alarms\n     * @example\n     * // Get one Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_task_alarmsFindUniqueArgs>(args: SelectSubset<T, study_planner_task_alarmsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_task_alarms that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_task_alarmsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_task_alarms\n     * @example\n     * // Get one Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_task_alarmsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_task_alarmsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_task_alarms that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_task_alarmsFindFirstArgs} args - Arguments to find a Study_planner_task_alarms\n     * @example\n     * // Get one Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_task_alarmsFindFirstArgs>(args?: SelectSubset<T, study_planner_task_alarmsFindFirstArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_task_alarms that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_task_alarmsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_task_alarms\n     * @example\n     * // Get one Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_task_alarmsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_task_alarmsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_task_alarms that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_task_alarmsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findMany()\n     * \n     * // Get first 10 Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_task_alarmsWithIdOnly = await prisma.study_planner_task_alarms.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_task_alarmsFindManyArgs>(args?: SelectSubset<T, study_planner_task_alarmsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_task_alarms.\n     * @param {study_planner_task_alarmsCreateArgs} args - Arguments to create a Study_planner_task_alarms.\n     * @example\n     * // Create one Study_planner_task_alarms\n     * const Study_planner_task_alarms = await prisma.study_planner_task_alarms.create({\n     *   data: {\n     *     // ... data to create a Study_planner_task_alarms\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_task_alarmsCreateArgs>(args: SelectSubset<T, study_planner_task_alarmsCreateArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_task_alarms.\n     * @param {study_planner_task_alarmsCreateManyArgs} args - Arguments to create many Study_planner_task_alarms.\n     * @example\n     * // Create many Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_task_alarmsCreateManyArgs>(args?: SelectSubset<T, study_planner_task_alarmsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_task_alarms and returns the data saved in the database.\n     * @param {study_planner_task_alarmsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_task_alarms.\n     * @example\n     * // Create many Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_task_alarms and only return the `id`\n     * const study_planner_task_alarmsWithIdOnly = await prisma.study_planner_task_alarms.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_task_alarmsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_task_alarmsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_task_alarms.\n     * @param {study_planner_task_alarmsDeleteArgs} args - Arguments to delete one Study_planner_task_alarms.\n     * @example\n     * // Delete one Study_planner_task_alarms\n     * const Study_planner_task_alarms = await prisma.study_planner_task_alarms.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_task_alarms\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_task_alarmsDeleteArgs>(args: SelectSubset<T, study_planner_task_alarmsDeleteArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_task_alarms.\n     * @param {study_planner_task_alarmsUpdateArgs} args - Arguments to update one Study_planner_task_alarms.\n     * @example\n     * // Update one Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_task_alarmsUpdateArgs>(args: SelectSubset<T, study_planner_task_alarmsUpdateArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_task_alarms.\n     * @param {study_planner_task_alarmsDeleteManyArgs} args - Arguments to filter Study_planner_task_alarms to delete.\n     * @example\n     * // Delete a few Study_planner_task_alarms\n     * const { count } = await prisma.study_planner_task_alarms.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_task_alarmsDeleteManyArgs>(args?: SelectSubset<T, study_planner_task_alarmsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_task_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_task_alarmsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_task_alarmsUpdateManyArgs>(args: SelectSubset<T, study_planner_task_alarmsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_task_alarms and returns the data updated in the database.\n     * @param {study_planner_task_alarmsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_task_alarms.\n     * @example\n     * // Update many Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_task_alarms and only return the `id`\n     * const study_planner_task_alarmsWithIdOnly = await prisma.study_planner_task_alarms.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_task_alarmsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_task_alarmsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_task_alarms.\n     * @param {study_planner_task_alarmsUpsertArgs} args - Arguments to update or create a Study_planner_task_alarms.\n     * @example\n     * // Update or create a Study_planner_task_alarms\n     * const study_planner_task_alarms = await prisma.study_planner_task_alarms.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_task_alarms\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_task_alarms we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_task_alarmsUpsertArgs>(args: SelectSubset<T, study_planner_task_alarmsUpsertArgs<ExtArgs>>): Prisma__study_planner_task_alarmsClient<$Result.GetResult<Prisma.$study_planner_task_alarmsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_task_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_task_alarmsCountArgs} args - Arguments to filter Study_planner_task_alarms to count.\n     * @example\n     * // Count the number of Study_planner_task_alarms\n     * const count = await prisma.study_planner_task_alarms.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_task_alarms we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_task_alarmsCountArgs>(\n      args?: Subset<T, study_planner_task_alarmsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_task_alarmsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_task_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_task_alarmsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_task_alarmsAggregateArgs>(args: Subset<T, Study_planner_task_alarmsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_task_alarmsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_task_alarms.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_task_alarmsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_task_alarmsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_task_alarmsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_task_alarmsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_task_alarmsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_task_alarmsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_task_alarms model\n   */\n  readonly fields: study_planner_task_alarmsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_task_alarms.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_task_alarmsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyTask<T extends study_planner_study_tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_tasksDefaultArgs<ExtArgs>>): Prisma__study_planner_study_tasksClient<$Result.GetResult<Prisma.$study_planner_study_tasksPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_task_alarms model\n   */\n  interface study_planner_task_alarmsFieldRefs {\n    readonly id: FieldRef<\"study_planner_task_alarms\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_task_alarms\", 'String'>\n    readonly study_task_id: FieldRef<\"study_planner_task_alarms\", 'String'>\n    readonly title: FieldRef<\"study_planner_task_alarms\", 'String'>\n    readonly alarm_time: FieldRef<\"study_planner_task_alarms\", 'DateTime'>\n    readonly created_at: FieldRef<\"study_planner_task_alarms\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_task_alarms\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_task_alarms\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_task_alarms findUnique\n   */\n  export type study_planner_task_alarmsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_task_alarms to fetch.\n     */\n    where: study_planner_task_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_task_alarms findUniqueOrThrow\n   */\n  export type study_planner_task_alarmsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_task_alarms to fetch.\n     */\n    where: study_planner_task_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_task_alarms findFirst\n   */\n  export type study_planner_task_alarmsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_task_alarms to fetch.\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_task_alarms to fetch.\n     */\n    orderBy?: study_planner_task_alarmsOrderByWithRelationInput | study_planner_task_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_task_alarms.\n     */\n    cursor?: study_planner_task_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_task_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_task_alarms.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_task_alarms.\n     */\n    distinct?: Study_planner_task_alarmsScalarFieldEnum | Study_planner_task_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_task_alarms findFirstOrThrow\n   */\n  export type study_planner_task_alarmsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_task_alarms to fetch.\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_task_alarms to fetch.\n     */\n    orderBy?: study_planner_task_alarmsOrderByWithRelationInput | study_planner_task_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_task_alarms.\n     */\n    cursor?: study_planner_task_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_task_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_task_alarms.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_task_alarms.\n     */\n    distinct?: Study_planner_task_alarmsScalarFieldEnum | Study_planner_task_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_task_alarms findMany\n   */\n  export type study_planner_task_alarmsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_task_alarms to fetch.\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_task_alarms to fetch.\n     */\n    orderBy?: study_planner_task_alarmsOrderByWithRelationInput | study_planner_task_alarmsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_task_alarms.\n     */\n    cursor?: study_planner_task_alarmsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_task_alarms from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_task_alarms.\n     */\n    skip?: number\n    distinct?: Study_planner_task_alarmsScalarFieldEnum | Study_planner_task_alarmsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_task_alarms create\n   */\n  export type study_planner_task_alarmsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_task_alarms.\n     */\n    data: XOR<study_planner_task_alarmsCreateInput, study_planner_task_alarmsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_task_alarms createMany\n   */\n  export type study_planner_task_alarmsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_task_alarms.\n     */\n    data: study_planner_task_alarmsCreateManyInput | study_planner_task_alarmsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_task_alarms createManyAndReturn\n   */\n  export type study_planner_task_alarmsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_task_alarms.\n     */\n    data: study_planner_task_alarmsCreateManyInput | study_planner_task_alarmsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_task_alarms update\n   */\n  export type study_planner_task_alarmsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_task_alarms.\n     */\n    data: XOR<study_planner_task_alarmsUpdateInput, study_planner_task_alarmsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_task_alarms to update.\n     */\n    where: study_planner_task_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_task_alarms updateMany\n   */\n  export type study_planner_task_alarmsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_task_alarms.\n     */\n    data: XOR<study_planner_task_alarmsUpdateManyMutationInput, study_planner_task_alarmsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_task_alarms to update\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * Limit how many study_planner_task_alarms to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_task_alarms updateManyAndReturn\n   */\n  export type study_planner_task_alarmsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_task_alarms.\n     */\n    data: XOR<study_planner_task_alarmsUpdateManyMutationInput, study_planner_task_alarmsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_task_alarms to update\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * Limit how many study_planner_task_alarms to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_task_alarms upsert\n   */\n  export type study_planner_task_alarmsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_task_alarms to update in case it exists.\n     */\n    where: study_planner_task_alarmsWhereUniqueInput\n    /**\n     * In case the study_planner_task_alarms found by the `where` argument doesn't exist, create a new study_planner_task_alarms with this data.\n     */\n    create: XOR<study_planner_task_alarmsCreateInput, study_planner_task_alarmsUncheckedCreateInput>\n    /**\n     * In case the study_planner_task_alarms was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_task_alarmsUpdateInput, study_planner_task_alarmsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_task_alarms delete\n   */\n  export type study_planner_task_alarmsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_task_alarms to delete.\n     */\n    where: study_planner_task_alarmsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_task_alarms deleteMany\n   */\n  export type study_planner_task_alarmsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_task_alarms to delete\n     */\n    where?: study_planner_task_alarmsWhereInput\n    /**\n     * Limit how many study_planner_task_alarms to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_task_alarms without action\n   */\n  export type study_planner_task_alarmsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_task_alarms\n     */\n    select?: study_planner_task_alarmsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_task_alarms\n     */\n    omit?: study_planner_task_alarmsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_task_alarmsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_general_reminders\n   */\n\n  export type AggregateStudy_planner_general_reminders = {\n    _count: Study_planner_general_remindersCountAggregateOutputType | null\n    _min: Study_planner_general_remindersMinAggregateOutputType | null\n    _max: Study_planner_general_remindersMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_general_remindersMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    title: string | null\n    due_time: Date | null\n    description: string | null\n    active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_general_remindersMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    title: string | null\n    due_time: Date | null\n    description: string | null\n    active: boolean | null\n    created_at: Date | null\n    updated_at: Date | null\n    deleted_at: Date | null\n  }\n\n  export type Study_planner_general_remindersCountAggregateOutputType = {\n    id: number\n    student_id: number\n    title: number\n    due_time: number\n    description: number\n    active: number\n    created_at: number\n    updated_at: number\n    deleted_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_general_remindersMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    due_time?: true\n    description?: true\n    active?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_general_remindersMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    due_time?: true\n    description?: true\n    active?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n  }\n\n  export type Study_planner_general_remindersCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    title?: true\n    due_time?: true\n    description?: true\n    active?: true\n    created_at?: true\n    updated_at?: true\n    deleted_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_general_remindersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_general_reminders to aggregate.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_general_reminders\n    **/\n    _count?: true | Study_planner_general_remindersCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_general_remindersMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_general_remindersMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_general_remindersAggregateType<T extends Study_planner_general_remindersAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_general_reminders]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_general_reminders[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_general_reminders[P]>\n  }\n\n\n\n\n  export type study_planner_general_remindersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_general_remindersWhereInput\n    orderBy?: study_planner_general_remindersOrderByWithAggregationInput | study_planner_general_remindersOrderByWithAggregationInput[]\n    by: Study_planner_general_remindersScalarFieldEnum[] | Study_planner_general_remindersScalarFieldEnum\n    having?: study_planner_general_remindersScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_general_remindersCountAggregateInputType | true\n    _min?: Study_planner_general_remindersMinAggregateInputType\n    _max?: Study_planner_general_remindersMaxAggregateInputType\n  }\n\n  export type Study_planner_general_remindersGroupByOutputType = {\n    id: string\n    student_id: string\n    title: string\n    due_time: Date\n    description: string | null\n    active: boolean\n    created_at: Date\n    updated_at: Date\n    deleted_at: Date | null\n    _count: Study_planner_general_remindersCountAggregateOutputType | null\n    _min: Study_planner_general_remindersMinAggregateOutputType | null\n    _max: Study_planner_general_remindersMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_general_remindersGroupByPayload<T extends study_planner_general_remindersGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_general_remindersGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_general_remindersGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_general_remindersGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_general_remindersGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_general_remindersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    due_time?: boolean\n    description?: boolean\n    active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n\n  export type study_planner_general_remindersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    due_time?: boolean\n    description?: boolean\n    active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n\n  export type study_planner_general_remindersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    due_time?: boolean\n    description?: boolean\n    active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n\n  export type study_planner_general_remindersSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    title?: boolean\n    due_time?: boolean\n    description?: boolean\n    active?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    deleted_at?: boolean\n  }\n\n  export type study_planner_general_remindersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"title\" | \"due_time\" | \"description\" | \"active\" | \"created_at\" | \"updated_at\" | \"deleted_at\", ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n  export type study_planner_general_remindersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n  export type study_planner_general_remindersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n  export type study_planner_general_remindersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_general_remindersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_general_reminders\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Belonged student's {@link study_planner_students.id} who owns this\n       * reminder.\n       */\n      student_id: string\n      /**\n       * Title or label of the general reminder for user identification.\n       */\n      title: string\n      /**\n       * Scheduled due time for the reminder notification.\n       */\n      due_time: Date\n      /**\n       * Optional textual description providing additional context for the\n       * reminder.\n       */\n      description: string | null\n      /**\n       * Flag indicating whether the reminder is currently active and should\n       * trigger notifications.\n       */\n      active: boolean\n      /**\n       * Timestamp of record creation for audit and history.\n       */\n      created_at: Date\n      /**\n       * Timestamp of last update for audit and history.\n       */\n      updated_at: Date\n      /**\n       * Soft delete timestamp indicating logical removal (nullable).\n       */\n      deleted_at: Date | null\n    }, ExtArgs[\"result\"][\"study_planner_general_reminders\"]>\n    composites: {}\n  }\n\n  type study_planner_general_remindersGetPayload<S extends boolean | null | undefined | study_planner_general_remindersDefaultArgs> = $Result.GetResult<Prisma.$study_planner_general_remindersPayload, S>\n\n  type study_planner_general_remindersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_general_remindersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_general_remindersCountAggregateInputType | true\n    }\n\n  export interface study_planner_general_remindersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_general_reminders'], meta: { name: 'study_planner_general_reminders' } }\n    /**\n     * Find zero or one Study_planner_general_reminders that matches the filter.\n     * @param {study_planner_general_remindersFindUniqueArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_general_remindersFindUniqueArgs>(args: SelectSubset<T, study_planner_general_remindersFindUniqueArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_general_reminders that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_general_remindersFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_general_remindersFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_general_remindersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_general_reminders that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersFindFirstArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_general_remindersFindFirstArgs>(args?: SelectSubset<T, study_planner_general_remindersFindFirstArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_general_reminders that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersFindFirstOrThrowArgs} args - Arguments to find a Study_planner_general_reminders\n     * @example\n     * // Get one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_general_remindersFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_general_remindersFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_general_reminders that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findMany()\n     * \n     * // Get first 10 Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_general_remindersWithIdOnly = await prisma.study_planner_general_reminders.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_general_remindersFindManyArgs>(args?: SelectSubset<T, study_planner_general_remindersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_general_reminders.\n     * @param {study_planner_general_remindersCreateArgs} args - Arguments to create a Study_planner_general_reminders.\n     * @example\n     * // Create one Study_planner_general_reminders\n     * const Study_planner_general_reminders = await prisma.study_planner_general_reminders.create({\n     *   data: {\n     *     // ... data to create a Study_planner_general_reminders\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_general_remindersCreateArgs>(args: SelectSubset<T, study_planner_general_remindersCreateArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_general_reminders.\n     * @param {study_planner_general_remindersCreateManyArgs} args - Arguments to create many Study_planner_general_reminders.\n     * @example\n     * // Create many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_general_remindersCreateManyArgs>(args?: SelectSubset<T, study_planner_general_remindersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_general_reminders and returns the data saved in the database.\n     * @param {study_planner_general_remindersCreateManyAndReturnArgs} args - Arguments to create many Study_planner_general_reminders.\n     * @example\n     * // Create many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_general_reminders and only return the `id`\n     * const study_planner_general_remindersWithIdOnly = await prisma.study_planner_general_reminders.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_general_remindersCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_general_remindersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_general_reminders.\n     * @param {study_planner_general_remindersDeleteArgs} args - Arguments to delete one Study_planner_general_reminders.\n     * @example\n     * // Delete one Study_planner_general_reminders\n     * const Study_planner_general_reminders = await prisma.study_planner_general_reminders.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_general_reminders\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_general_remindersDeleteArgs>(args: SelectSubset<T, study_planner_general_remindersDeleteArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_general_reminders.\n     * @param {study_planner_general_remindersUpdateArgs} args - Arguments to update one Study_planner_general_reminders.\n     * @example\n     * // Update one Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_general_remindersUpdateArgs>(args: SelectSubset<T, study_planner_general_remindersUpdateArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_general_reminders.\n     * @param {study_planner_general_remindersDeleteManyArgs} args - Arguments to filter Study_planner_general_reminders to delete.\n     * @example\n     * // Delete a few Study_planner_general_reminders\n     * const { count } = await prisma.study_planner_general_reminders.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_general_remindersDeleteManyArgs>(args?: SelectSubset<T, study_planner_general_remindersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_general_remindersUpdateManyArgs>(args: SelectSubset<T, study_planner_general_remindersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_general_reminders and returns the data updated in the database.\n     * @param {study_planner_general_remindersUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_general_reminders.\n     * @example\n     * // Update many Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_general_reminders and only return the `id`\n     * const study_planner_general_remindersWithIdOnly = await prisma.study_planner_general_reminders.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_general_remindersUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_general_remindersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_general_reminders.\n     * @param {study_planner_general_remindersUpsertArgs} args - Arguments to update or create a Study_planner_general_reminders.\n     * @example\n     * // Update or create a Study_planner_general_reminders\n     * const study_planner_general_reminders = await prisma.study_planner_general_reminders.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_general_reminders\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_general_reminders we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_general_remindersUpsertArgs>(args: SelectSubset<T, study_planner_general_remindersUpsertArgs<ExtArgs>>): Prisma__study_planner_general_remindersClient<$Result.GetResult<Prisma.$study_planner_general_remindersPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersCountArgs} args - Arguments to filter Study_planner_general_reminders to count.\n     * @example\n     * // Count the number of Study_planner_general_reminders\n     * const count = await prisma.study_planner_general_reminders.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_general_reminders we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_general_remindersCountArgs>(\n      args?: Subset<T, study_planner_general_remindersCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_general_remindersCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_general_remindersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_general_remindersAggregateArgs>(args: Subset<T, Study_planner_general_remindersAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_general_remindersAggregateType<T>>\n\n    /**\n     * Group by Study_planner_general_reminders.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_general_remindersGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_general_remindersGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_general_remindersGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_general_remindersGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_general_remindersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_general_remindersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_general_reminders model\n   */\n  readonly fields: study_planner_general_remindersFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_general_reminders.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_general_remindersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_general_reminders model\n   */\n  interface study_planner_general_remindersFieldRefs {\n    readonly id: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly title: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly due_time: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n    readonly description: FieldRef<\"study_planner_general_reminders\", 'String'>\n    readonly active: FieldRef<\"study_planner_general_reminders\", 'Boolean'>\n    readonly created_at: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n    readonly deleted_at: FieldRef<\"study_planner_general_reminders\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_general_reminders findUnique\n   */\n  export type study_planner_general_remindersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders findUniqueOrThrow\n   */\n  export type study_planner_general_remindersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders findFirst\n   */\n  export type study_planner_general_remindersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_general_reminders.\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_general_reminders.\n     */\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders findFirstOrThrow\n   */\n  export type study_planner_general_remindersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_general_reminders.\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_general_reminders.\n     */\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders findMany\n   */\n  export type study_planner_general_remindersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_general_reminders to fetch.\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_general_reminders to fetch.\n     */\n    orderBy?: study_planner_general_remindersOrderByWithRelationInput | study_planner_general_remindersOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_general_reminders.\n     */\n    cursor?: study_planner_general_remindersWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_general_reminders from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_general_reminders.\n     */\n    skip?: number\n    distinct?: Study_planner_general_remindersScalarFieldEnum | Study_planner_general_remindersScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_general_reminders create\n   */\n  export type study_planner_general_remindersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersCreateInput, study_planner_general_remindersUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_general_reminders createMany\n   */\n  export type study_planner_general_remindersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_general_reminders.\n     */\n    data: study_planner_general_remindersCreateManyInput | study_planner_general_remindersCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_general_reminders createManyAndReturn\n   */\n  export type study_planner_general_remindersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_general_reminders.\n     */\n    data: study_planner_general_remindersCreateManyInput | study_planner_general_remindersCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_general_reminders update\n   */\n  export type study_planner_general_remindersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersUpdateInput, study_planner_general_remindersUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_general_reminders to update.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders updateMany\n   */\n  export type study_planner_general_remindersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersUpdateManyMutationInput, study_planner_general_remindersUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_general_reminders to update\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * Limit how many study_planner_general_reminders to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_general_reminders updateManyAndReturn\n   */\n  export type study_planner_general_remindersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_general_reminders.\n     */\n    data: XOR<study_planner_general_remindersUpdateManyMutationInput, study_planner_general_remindersUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_general_reminders to update\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * Limit how many study_planner_general_reminders to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_general_reminders upsert\n   */\n  export type study_planner_general_remindersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_general_reminders to update in case it exists.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n    /**\n     * In case the study_planner_general_reminders found by the `where` argument doesn't exist, create a new study_planner_general_reminders with this data.\n     */\n    create: XOR<study_planner_general_remindersCreateInput, study_planner_general_remindersUncheckedCreateInput>\n    /**\n     * In case the study_planner_general_reminders was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_general_remindersUpdateInput, study_planner_general_remindersUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_general_reminders delete\n   */\n  export type study_planner_general_remindersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_general_reminders to delete.\n     */\n    where: study_planner_general_remindersWhereUniqueInput\n  }\n\n  /**\n   * study_planner_general_reminders deleteMany\n   */\n  export type study_planner_general_remindersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_general_reminders to delete\n     */\n    where?: study_planner_general_remindersWhereInput\n    /**\n     * Limit how many study_planner_general_reminders to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_general_reminders without action\n   */\n  export type study_planner_general_remindersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_general_reminders\n     */\n    select?: study_planner_general_remindersSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_general_reminders\n     */\n    omit?: study_planner_general_remindersOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_general_remindersInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_study_progress_analytics\n   */\n\n  export type AggregateStudy_planner_study_progress_analytics = {\n    _count: Study_planner_study_progress_analyticsCountAggregateOutputType | null\n    _avg: Study_planner_study_progress_analyticsAvgAggregateOutputType | null\n    _sum: Study_planner_study_progress_analyticsSumAggregateOutputType | null\n    _min: Study_planner_study_progress_analyticsMinAggregateOutputType | null\n    _max: Study_planner_study_progress_analyticsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_study_progress_analyticsAvgAggregateOutputType = {\n    completed_tasks_count: number | null\n    total_tasks_count: number | null\n    completion_rate: number | null\n  }\n\n  export type Study_planner_study_progress_analyticsSumAggregateOutputType = {\n    completed_tasks_count: number | null\n    total_tasks_count: number | null\n    completion_rate: number | null\n  }\n\n  export type Study_planner_study_progress_analyticsMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_phase_id: string | null\n    completed_tasks_count: number | null\n    total_tasks_count: number | null\n    completion_rate: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_progress_analyticsMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    study_phase_id: string | null\n    completed_tasks_count: number | null\n    total_tasks_count: number | null\n    completion_rate: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_study_progress_analyticsCountAggregateOutputType = {\n    id: number\n    student_id: number\n    study_phase_id: number\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_study_progress_analyticsAvgAggregateInputType = {\n    completed_tasks_count?: true\n    total_tasks_count?: true\n    completion_rate?: true\n  }\n\n  export type Study_planner_study_progress_analyticsSumAggregateInputType = {\n    completed_tasks_count?: true\n    total_tasks_count?: true\n    completion_rate?: true\n  }\n\n  export type Study_planner_study_progress_analyticsMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    completed_tasks_count?: true\n    total_tasks_count?: true\n    completion_rate?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_progress_analyticsMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    completed_tasks_count?: true\n    total_tasks_count?: true\n    completion_rate?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_study_progress_analyticsCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    study_phase_id?: true\n    completed_tasks_count?: true\n    total_tasks_count?: true\n    completion_rate?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_study_progress_analyticsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_progress_analytics to aggregate.\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_progress_analytics to fetch.\n     */\n    orderBy?: study_planner_study_progress_analyticsOrderByWithRelationInput | study_planner_study_progress_analyticsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_study_progress_analyticsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_progress_analytics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_progress_analytics.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_study_progress_analytics\n    **/\n    _count?: true | Study_planner_study_progress_analyticsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Study_planner_study_progress_analyticsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Study_planner_study_progress_analyticsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_study_progress_analyticsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_study_progress_analyticsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_study_progress_analyticsAggregateType<T extends Study_planner_study_progress_analyticsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_study_progress_analytics]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_study_progress_analytics[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_study_progress_analytics[P]>\n  }\n\n\n\n\n  export type study_planner_study_progress_analyticsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_study_progress_analyticsWhereInput\n    orderBy?: study_planner_study_progress_analyticsOrderByWithAggregationInput | study_planner_study_progress_analyticsOrderByWithAggregationInput[]\n    by: Study_planner_study_progress_analyticsScalarFieldEnum[] | Study_planner_study_progress_analyticsScalarFieldEnum\n    having?: study_planner_study_progress_analyticsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_study_progress_analyticsCountAggregateInputType | true\n    _avg?: Study_planner_study_progress_analyticsAvgAggregateInputType\n    _sum?: Study_planner_study_progress_analyticsSumAggregateInputType\n    _min?: Study_planner_study_progress_analyticsMinAggregateInputType\n    _max?: Study_planner_study_progress_analyticsMaxAggregateInputType\n  }\n\n  export type Study_planner_study_progress_analyticsGroupByOutputType = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_study_progress_analyticsCountAggregateOutputType | null\n    _avg: Study_planner_study_progress_analyticsAvgAggregateOutputType | null\n    _sum: Study_planner_study_progress_analyticsSumAggregateOutputType | null\n    _min: Study_planner_study_progress_analyticsMinAggregateOutputType | null\n    _max: Study_planner_study_progress_analyticsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_study_progress_analyticsGroupByPayload<T extends study_planner_study_progress_analyticsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_study_progress_analyticsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_study_progress_analyticsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_study_progress_analyticsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_study_progress_analyticsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_study_progress_analyticsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    completed_tasks_count?: boolean\n    total_tasks_count?: boolean\n    completion_rate?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_progress_analytics\"]>\n\n  export type study_planner_study_progress_analyticsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    completed_tasks_count?: boolean\n    total_tasks_count?: boolean\n    completion_rate?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_progress_analytics\"]>\n\n  export type study_planner_study_progress_analyticsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    completed_tasks_count?: boolean\n    total_tasks_count?: boolean\n    completion_rate?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_study_progress_analytics\"]>\n\n  export type study_planner_study_progress_analyticsSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    study_phase_id?: boolean\n    completed_tasks_count?: boolean\n    total_tasks_count?: boolean\n    completion_rate?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_study_progress_analyticsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"study_phase_id\" | \"completed_tasks_count\" | \"total_tasks_count\" | \"completion_rate\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_study_progress_analytics\"]>\n  export type study_planner_study_progress_analyticsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_progress_analyticsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_study_progress_analyticsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    studyPhase?: boolean | study_planner_study_phasesDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_study_progress_analyticsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_study_progress_analytics\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      studyPhase: Prisma.$study_planner_study_phasesPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Associated student {@link study_planner_students.id}.\n       */\n      student_id: string\n      /**\n       * Associated study phase {@link study_planner_study_phases.id}.\n       */\n      study_phase_id: string\n      /**\n       * Number of completed tasks for the student in the given study phase.\n       */\n      completed_tasks_count: number\n      /**\n       * Total number of tasks assigned to the student in the study phase.\n       */\n      total_tasks_count: number\n      /**\n       * Completion rate computed as completed tasks divided by total tasks.\n       */\n      completion_rate: number\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_study_progress_analytics\"]>\n    composites: {}\n  }\n\n  type study_planner_study_progress_analyticsGetPayload<S extends boolean | null | undefined | study_planner_study_progress_analyticsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload, S>\n\n  type study_planner_study_progress_analyticsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_study_progress_analyticsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_study_progress_analyticsCountAggregateInputType | true\n    }\n\n  export interface study_planner_study_progress_analyticsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_study_progress_analytics'], meta: { name: 'study_planner_study_progress_analytics' } }\n    /**\n     * Find zero or one Study_planner_study_progress_analytics that matches the filter.\n     * @param {study_planner_study_progress_analyticsFindUniqueArgs} args - Arguments to find a Study_planner_study_progress_analytics\n     * @example\n     * // Get one Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_study_progress_analyticsFindUniqueArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_study_progress_analytics that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_study_progress_analyticsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_study_progress_analytics\n     * @example\n     * // Get one Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_study_progress_analyticsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_progress_analytics that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_progress_analyticsFindFirstArgs} args - Arguments to find a Study_planner_study_progress_analytics\n     * @example\n     * // Get one Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_study_progress_analyticsFindFirstArgs>(args?: SelectSubset<T, study_planner_study_progress_analyticsFindFirstArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_study_progress_analytics that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_progress_analyticsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_study_progress_analytics\n     * @example\n     * // Get one Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_study_progress_analyticsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_study_progress_analyticsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_study_progress_analytics that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_progress_analyticsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findMany()\n     * \n     * // Get first 10 Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_study_progress_analyticsWithIdOnly = await prisma.study_planner_study_progress_analytics.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_study_progress_analyticsFindManyArgs>(args?: SelectSubset<T, study_planner_study_progress_analyticsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_study_progress_analytics.\n     * @param {study_planner_study_progress_analyticsCreateArgs} args - Arguments to create a Study_planner_study_progress_analytics.\n     * @example\n     * // Create one Study_planner_study_progress_analytics\n     * const Study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.create({\n     *   data: {\n     *     // ... data to create a Study_planner_study_progress_analytics\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_study_progress_analyticsCreateArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsCreateArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_study_progress_analytics.\n     * @param {study_planner_study_progress_analyticsCreateManyArgs} args - Arguments to create many Study_planner_study_progress_analytics.\n     * @example\n     * // Create many Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_study_progress_analyticsCreateManyArgs>(args?: SelectSubset<T, study_planner_study_progress_analyticsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_study_progress_analytics and returns the data saved in the database.\n     * @param {study_planner_study_progress_analyticsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_study_progress_analytics.\n     * @example\n     * // Create many Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_study_progress_analytics and only return the `id`\n     * const study_planner_study_progress_analyticsWithIdOnly = await prisma.study_planner_study_progress_analytics.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_study_progress_analyticsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_study_progress_analyticsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_study_progress_analytics.\n     * @param {study_planner_study_progress_analyticsDeleteArgs} args - Arguments to delete one Study_planner_study_progress_analytics.\n     * @example\n     * // Delete one Study_planner_study_progress_analytics\n     * const Study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_study_progress_analytics\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_study_progress_analyticsDeleteArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsDeleteArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_study_progress_analytics.\n     * @param {study_planner_study_progress_analyticsUpdateArgs} args - Arguments to update one Study_planner_study_progress_analytics.\n     * @example\n     * // Update one Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_study_progress_analyticsUpdateArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsUpdateArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_study_progress_analytics.\n     * @param {study_planner_study_progress_analyticsDeleteManyArgs} args - Arguments to filter Study_planner_study_progress_analytics to delete.\n     * @example\n     * // Delete a few Study_planner_study_progress_analytics\n     * const { count } = await prisma.study_planner_study_progress_analytics.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_study_progress_analyticsDeleteManyArgs>(args?: SelectSubset<T, study_planner_study_progress_analyticsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_progress_analytics.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_progress_analyticsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_study_progress_analyticsUpdateManyArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_study_progress_analytics and returns the data updated in the database.\n     * @param {study_planner_study_progress_analyticsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_study_progress_analytics.\n     * @example\n     * // Update many Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_study_progress_analytics and only return the `id`\n     * const study_planner_study_progress_analyticsWithIdOnly = await prisma.study_planner_study_progress_analytics.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_study_progress_analyticsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_study_progress_analytics.\n     * @param {study_planner_study_progress_analyticsUpsertArgs} args - Arguments to update or create a Study_planner_study_progress_analytics.\n     * @example\n     * // Update or create a Study_planner_study_progress_analytics\n     * const study_planner_study_progress_analytics = await prisma.study_planner_study_progress_analytics.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_study_progress_analytics\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_study_progress_analytics we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_study_progress_analyticsUpsertArgs>(args: SelectSubset<T, study_planner_study_progress_analyticsUpsertArgs<ExtArgs>>): Prisma__study_planner_study_progress_analyticsClient<$Result.GetResult<Prisma.$study_planner_study_progress_analyticsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_study_progress_analytics.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_progress_analyticsCountArgs} args - Arguments to filter Study_planner_study_progress_analytics to count.\n     * @example\n     * // Count the number of Study_planner_study_progress_analytics\n     * const count = await prisma.study_planner_study_progress_analytics.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_study_progress_analytics we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_study_progress_analyticsCountArgs>(\n      args?: Subset<T, study_planner_study_progress_analyticsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_study_progress_analyticsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_study_progress_analytics.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_study_progress_analyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_study_progress_analyticsAggregateArgs>(args: Subset<T, Study_planner_study_progress_analyticsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_study_progress_analyticsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_study_progress_analytics.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_study_progress_analyticsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_study_progress_analyticsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_study_progress_analyticsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_study_progress_analyticsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_study_progress_analyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_study_progress_analyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_study_progress_analytics model\n   */\n  readonly fields: study_planner_study_progress_analyticsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_study_progress_analytics.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_study_progress_analyticsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    studyPhase<T extends study_planner_study_phasesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_study_phasesDefaultArgs<ExtArgs>>): Prisma__study_planner_study_phasesClient<$Result.GetResult<Prisma.$study_planner_study_phasesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_study_progress_analytics model\n   */\n  interface study_planner_study_progress_analyticsFieldRefs {\n    readonly id: FieldRef<\"study_planner_study_progress_analytics\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_study_progress_analytics\", 'String'>\n    readonly study_phase_id: FieldRef<\"study_planner_study_progress_analytics\", 'String'>\n    readonly completed_tasks_count: FieldRef<\"study_planner_study_progress_analytics\", 'Int'>\n    readonly total_tasks_count: FieldRef<\"study_planner_study_progress_analytics\", 'Int'>\n    readonly completion_rate: FieldRef<\"study_planner_study_progress_analytics\", 'Float'>\n    readonly created_at: FieldRef<\"study_planner_study_progress_analytics\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_study_progress_analytics\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_study_progress_analytics findUnique\n   */\n  export type study_planner_study_progress_analyticsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_progress_analytics to fetch.\n     */\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_progress_analytics findUniqueOrThrow\n   */\n  export type study_planner_study_progress_analyticsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_progress_analytics to fetch.\n     */\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_progress_analytics findFirst\n   */\n  export type study_planner_study_progress_analyticsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_progress_analytics to fetch.\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_progress_analytics to fetch.\n     */\n    orderBy?: study_planner_study_progress_analyticsOrderByWithRelationInput | study_planner_study_progress_analyticsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_progress_analytics.\n     */\n    cursor?: study_planner_study_progress_analyticsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_progress_analytics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_progress_analytics.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_progress_analytics.\n     */\n    distinct?: Study_planner_study_progress_analyticsScalarFieldEnum | Study_planner_study_progress_analyticsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_progress_analytics findFirstOrThrow\n   */\n  export type study_planner_study_progress_analyticsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_progress_analytics to fetch.\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_progress_analytics to fetch.\n     */\n    orderBy?: study_planner_study_progress_analyticsOrderByWithRelationInput | study_planner_study_progress_analyticsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_study_progress_analytics.\n     */\n    cursor?: study_planner_study_progress_analyticsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_progress_analytics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_progress_analytics.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_study_progress_analytics.\n     */\n    distinct?: Study_planner_study_progress_analyticsScalarFieldEnum | Study_planner_study_progress_analyticsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_progress_analytics findMany\n   */\n  export type study_planner_study_progress_analyticsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_study_progress_analytics to fetch.\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_study_progress_analytics to fetch.\n     */\n    orderBy?: study_planner_study_progress_analyticsOrderByWithRelationInput | study_planner_study_progress_analyticsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_study_progress_analytics.\n     */\n    cursor?: study_planner_study_progress_analyticsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_study_progress_analytics from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_study_progress_analytics.\n     */\n    skip?: number\n    distinct?: Study_planner_study_progress_analyticsScalarFieldEnum | Study_planner_study_progress_analyticsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_study_progress_analytics create\n   */\n  export type study_planner_study_progress_analyticsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_study_progress_analytics.\n     */\n    data: XOR<study_planner_study_progress_analyticsCreateInput, study_planner_study_progress_analyticsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_study_progress_analytics createMany\n   */\n  export type study_planner_study_progress_analyticsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_study_progress_analytics.\n     */\n    data: study_planner_study_progress_analyticsCreateManyInput | study_planner_study_progress_analyticsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_study_progress_analytics createManyAndReturn\n   */\n  export type study_planner_study_progress_analyticsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_study_progress_analytics.\n     */\n    data: study_planner_study_progress_analyticsCreateManyInput | study_planner_study_progress_analyticsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_progress_analytics update\n   */\n  export type study_planner_study_progress_analyticsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_study_progress_analytics.\n     */\n    data: XOR<study_planner_study_progress_analyticsUpdateInput, study_planner_study_progress_analyticsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_study_progress_analytics to update.\n     */\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_progress_analytics updateMany\n   */\n  export type study_planner_study_progress_analyticsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_study_progress_analytics.\n     */\n    data: XOR<study_planner_study_progress_analyticsUpdateManyMutationInput, study_planner_study_progress_analyticsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_progress_analytics to update\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * Limit how many study_planner_study_progress_analytics to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_progress_analytics updateManyAndReturn\n   */\n  export type study_planner_study_progress_analyticsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_study_progress_analytics.\n     */\n    data: XOR<study_planner_study_progress_analyticsUpdateManyMutationInput, study_planner_study_progress_analyticsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_study_progress_analytics to update\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * Limit how many study_planner_study_progress_analytics to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_study_progress_analytics upsert\n   */\n  export type study_planner_study_progress_analyticsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_study_progress_analytics to update in case it exists.\n     */\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    /**\n     * In case the study_planner_study_progress_analytics found by the `where` argument doesn't exist, create a new study_planner_study_progress_analytics with this data.\n     */\n    create: XOR<study_planner_study_progress_analyticsCreateInput, study_planner_study_progress_analyticsUncheckedCreateInput>\n    /**\n     * In case the study_planner_study_progress_analytics was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_study_progress_analyticsUpdateInput, study_planner_study_progress_analyticsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_study_progress_analytics delete\n   */\n  export type study_planner_study_progress_analyticsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_study_progress_analytics to delete.\n     */\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_study_progress_analytics deleteMany\n   */\n  export type study_planner_study_progress_analyticsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_study_progress_analytics to delete\n     */\n    where?: study_planner_study_progress_analyticsWhereInput\n    /**\n     * Limit how many study_planner_study_progress_analytics to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_study_progress_analytics without action\n   */\n  export type study_planner_study_progress_analyticsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_study_progress_analytics\n     */\n    select?: study_planner_study_progress_analyticsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_study_progress_analytics\n     */\n    omit?: study_planner_study_progress_analyticsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_study_progress_analyticsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Model study_planner_learning_gap_charts\n   */\n\n  export type AggregateStudy_planner_learning_gap_charts = {\n    _count: Study_planner_learning_gap_chartsCountAggregateOutputType | null\n    _avg: Study_planner_learning_gap_chartsAvgAggregateOutputType | null\n    _sum: Study_planner_learning_gap_chartsSumAggregateOutputType | null\n    _min: Study_planner_learning_gap_chartsMinAggregateOutputType | null\n    _max: Study_planner_learning_gap_chartsMaxAggregateOutputType | null\n  }\n\n  export type Study_planner_learning_gap_chartsAvgAggregateOutputType = {\n    gap_metric: number | null\n  }\n\n  export type Study_planner_learning_gap_chartsSumAggregateOutputType = {\n    gap_metric: number | null\n  }\n\n  export type Study_planner_learning_gap_chartsMinAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    subject_category_id: string | null\n    gap_metric: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_learning_gap_chartsMaxAggregateOutputType = {\n    id: string | null\n    student_id: string | null\n    subject_category_id: string | null\n    gap_metric: number | null\n    created_at: Date | null\n    updated_at: Date | null\n  }\n\n  export type Study_planner_learning_gap_chartsCountAggregateOutputType = {\n    id: number\n    student_id: number\n    subject_category_id: number\n    gap_metric: number\n    created_at: number\n    updated_at: number\n    _all: number\n  }\n\n\n  export type Study_planner_learning_gap_chartsAvgAggregateInputType = {\n    gap_metric?: true\n  }\n\n  export type Study_planner_learning_gap_chartsSumAggregateInputType = {\n    gap_metric?: true\n  }\n\n  export type Study_planner_learning_gap_chartsMinAggregateInputType = {\n    id?: true\n    student_id?: true\n    subject_category_id?: true\n    gap_metric?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_learning_gap_chartsMaxAggregateInputType = {\n    id?: true\n    student_id?: true\n    subject_category_id?: true\n    gap_metric?: true\n    created_at?: true\n    updated_at?: true\n  }\n\n  export type Study_planner_learning_gap_chartsCountAggregateInputType = {\n    id?: true\n    student_id?: true\n    subject_category_id?: true\n    gap_metric?: true\n    created_at?: true\n    updated_at?: true\n    _all?: true\n  }\n\n  export type Study_planner_learning_gap_chartsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_learning_gap_charts to aggregate.\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_learning_gap_charts to fetch.\n     */\n    orderBy?: study_planner_learning_gap_chartsOrderByWithRelationInput | study_planner_learning_gap_chartsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the start position\n     */\n    cursor?: study_planner_learning_gap_chartsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_learning_gap_charts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_learning_gap_charts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Count returned study_planner_learning_gap_charts\n    **/\n    _count?: true | Study_planner_learning_gap_chartsCountAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to average\n    **/\n    _avg?: Study_planner_learning_gap_chartsAvgAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to sum\n    **/\n    _sum?: Study_planner_learning_gap_chartsSumAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the minimum value\n    **/\n    _min?: Study_planner_learning_gap_chartsMinAggregateInputType\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}\n     * \n     * Select which fields to find the maximum value\n    **/\n    _max?: Study_planner_learning_gap_chartsMaxAggregateInputType\n  }\n\n  export type GetStudy_planner_learning_gap_chartsAggregateType<T extends Study_planner_learning_gap_chartsAggregateArgs> = {\n        [P in keyof T & keyof AggregateStudy_planner_learning_gap_charts]: P extends '_count' | 'count'\n      ? T[P] extends true\n        ? number\n        : GetScalarType<T[P], AggregateStudy_planner_learning_gap_charts[P]>\n      : GetScalarType<T[P], AggregateStudy_planner_learning_gap_charts[P]>\n  }\n\n\n\n\n  export type study_planner_learning_gap_chartsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    where?: study_planner_learning_gap_chartsWhereInput\n    orderBy?: study_planner_learning_gap_chartsOrderByWithAggregationInput | study_planner_learning_gap_chartsOrderByWithAggregationInput[]\n    by: Study_planner_learning_gap_chartsScalarFieldEnum[] | Study_planner_learning_gap_chartsScalarFieldEnum\n    having?: study_planner_learning_gap_chartsScalarWhereWithAggregatesInput\n    take?: number\n    skip?: number\n    _count?: Study_planner_learning_gap_chartsCountAggregateInputType | true\n    _avg?: Study_planner_learning_gap_chartsAvgAggregateInputType\n    _sum?: Study_planner_learning_gap_chartsSumAggregateInputType\n    _min?: Study_planner_learning_gap_chartsMinAggregateInputType\n    _max?: Study_planner_learning_gap_chartsMaxAggregateInputType\n  }\n\n  export type Study_planner_learning_gap_chartsGroupByOutputType = {\n    id: string\n    student_id: string\n    subject_category_id: string\n    gap_metric: number\n    created_at: Date\n    updated_at: Date\n    _count: Study_planner_learning_gap_chartsCountAggregateOutputType | null\n    _avg: Study_planner_learning_gap_chartsAvgAggregateOutputType | null\n    _sum: Study_planner_learning_gap_chartsSumAggregateOutputType | null\n    _min: Study_planner_learning_gap_chartsMinAggregateOutputType | null\n    _max: Study_planner_learning_gap_chartsMaxAggregateOutputType | null\n  }\n\n  type GetStudy_planner_learning_gap_chartsGroupByPayload<T extends study_planner_learning_gap_chartsGroupByArgs> = Prisma.PrismaPromise<\n    Array<\n      PickEnumerable<Study_planner_learning_gap_chartsGroupByOutputType, T['by']> &\n        {\n          [P in ((keyof T) & (keyof Study_planner_learning_gap_chartsGroupByOutputType))]: P extends '_count'\n            ? T[P] extends boolean\n              ? number\n              : GetScalarType<T[P], Study_planner_learning_gap_chartsGroupByOutputType[P]>\n            : GetScalarType<T[P], Study_planner_learning_gap_chartsGroupByOutputType[P]>\n        }\n      >\n    >\n\n\n  export type study_planner_learning_gap_chartsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    subject_category_id?: boolean\n    gap_metric?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_learning_gap_charts\"]>\n\n  export type study_planner_learning_gap_chartsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    subject_category_id?: boolean\n    gap_metric?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_learning_gap_charts\"]>\n\n  export type study_planner_learning_gap_chartsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{\n    id?: boolean\n    student_id?: boolean\n    subject_category_id?: boolean\n    gap_metric?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }, ExtArgs[\"result\"][\"study_planner_learning_gap_charts\"]>\n\n  export type study_planner_learning_gap_chartsSelectScalar = {\n    id?: boolean\n    student_id?: boolean\n    subject_category_id?: boolean\n    gap_metric?: boolean\n    created_at?: boolean\n    updated_at?: boolean\n  }\n\n  export type study_planner_learning_gap_chartsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<\"id\" | \"student_id\" | \"subject_category_id\" | \"gap_metric\" | \"created_at\" | \"updated_at\", ExtArgs[\"result\"][\"study_planner_learning_gap_charts\"]>\n  export type study_planner_learning_gap_chartsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_learning_gap_chartsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }\n  export type study_planner_learning_gap_chartsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    student?: boolean | study_planner_studentsDefaultArgs<ExtArgs>\n    subjectCategory?: boolean | study_planner_subject_categoriesDefaultArgs<ExtArgs>\n  }\n\n  export type $study_planner_learning_gap_chartsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    name: \"study_planner_learning_gap_charts\"\n    objects: {\n      student: Prisma.$study_planner_studentsPayload<ExtArgs>\n      subjectCategory: Prisma.$study_planner_subject_categoriesPayload<ExtArgs>\n    }\n    scalars: $Extensions.GetPayloadResult<{\n      /**\n       * Primary Key.\n       */\n      id: string\n      /**\n       * Associated student {@link study_planner_students.id}.\n       */\n      student_id: string\n      /**\n       * Subject category {@link study_planner_subject_categories.id} representing\n       * study topic.\n       */\n      subject_category_id: string\n      /**\n       * Quantified measure of the learning gap for the subject category.\n       */\n      gap_metric: number\n      /**\n       * Record creation timestamp.\n       */\n      created_at: Date\n      /**\n       * Record last update timestamp.\n       */\n      updated_at: Date\n    }, ExtArgs[\"result\"][\"study_planner_learning_gap_charts\"]>\n    composites: {}\n  }\n\n  type study_planner_learning_gap_chartsGetPayload<S extends boolean | null | undefined | study_planner_learning_gap_chartsDefaultArgs> = $Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload, S>\n\n  type study_planner_learning_gap_chartsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =\n    Omit<study_planner_learning_gap_chartsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {\n      select?: Study_planner_learning_gap_chartsCountAggregateInputType | true\n    }\n\n  export interface study_planner_learning_gap_chartsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {\n    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['study_planner_learning_gap_charts'], meta: { name: 'study_planner_learning_gap_charts' } }\n    /**\n     * Find zero or one Study_planner_learning_gap_charts that matches the filter.\n     * @param {study_planner_learning_gap_chartsFindUniqueArgs} args - Arguments to find a Study_planner_learning_gap_charts\n     * @example\n     * // Get one Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findUnique({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUnique<T extends study_planner_learning_gap_chartsFindUniqueArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsFindUniqueArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findUnique\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find one Study_planner_learning_gap_charts that matches the filter or throw an error with `error.code='P2025'`\n     * if no matches were found.\n     * @param {study_planner_learning_gap_chartsFindUniqueOrThrowArgs} args - Arguments to find a Study_planner_learning_gap_charts\n     * @example\n     * // Get one Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findUniqueOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findUniqueOrThrow<T extends study_planner_learning_gap_chartsFindUniqueOrThrowArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_learning_gap_charts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_learning_gap_chartsFindFirstArgs} args - Arguments to find a Study_planner_learning_gap_charts\n     * @example\n     * // Get one Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findFirst({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirst<T extends study_planner_learning_gap_chartsFindFirstArgs>(args?: SelectSubset<T, study_planner_learning_gap_chartsFindFirstArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findFirst\", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find the first Study_planner_learning_gap_charts that matches the filter or\n     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_learning_gap_chartsFindFirstOrThrowArgs} args - Arguments to find a Study_planner_learning_gap_charts\n     * @example\n     * // Get one Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findFirstOrThrow({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     */\n    findFirstOrThrow<T extends study_planner_learning_gap_chartsFindFirstOrThrowArgs>(args?: SelectSubset<T, study_planner_learning_gap_chartsFindFirstOrThrowArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findFirstOrThrow\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Find zero or more Study_planner_learning_gap_charts that matches the filter.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_learning_gap_chartsFindManyArgs} args - Arguments to filter and select certain fields only.\n     * @example\n     * // Get all Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findMany()\n     * \n     * // Get first 10 Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.findMany({ take: 10 })\n     * \n     * // Only select the `id`\n     * const study_planner_learning_gap_chartsWithIdOnly = await prisma.study_planner_learning_gap_charts.findMany({ select: { id: true } })\n     * \n     */\n    findMany<T extends study_planner_learning_gap_chartsFindManyArgs>(args?: SelectSubset<T, study_planner_learning_gap_chartsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"findMany\", GlobalOmitOptions>>\n\n    /**\n     * Create a Study_planner_learning_gap_charts.\n     * @param {study_planner_learning_gap_chartsCreateArgs} args - Arguments to create a Study_planner_learning_gap_charts.\n     * @example\n     * // Create one Study_planner_learning_gap_charts\n     * const Study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.create({\n     *   data: {\n     *     // ... data to create a Study_planner_learning_gap_charts\n     *   }\n     * })\n     * \n     */\n    create<T extends study_planner_learning_gap_chartsCreateArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsCreateArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"create\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Create many Study_planner_learning_gap_charts.\n     * @param {study_planner_learning_gap_chartsCreateManyArgs} args - Arguments to create many Study_planner_learning_gap_charts.\n     * @example\n     * // Create many Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.createMany({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     *     \n     */\n    createMany<T extends study_planner_learning_gap_chartsCreateManyArgs>(args?: SelectSubset<T, study_planner_learning_gap_chartsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Create many Study_planner_learning_gap_charts and returns the data saved in the database.\n     * @param {study_planner_learning_gap_chartsCreateManyAndReturnArgs} args - Arguments to create many Study_planner_learning_gap_charts.\n     * @example\n     * // Create many Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.createManyAndReturn({\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Create many Study_planner_learning_gap_charts and only return the `id`\n     * const study_planner_learning_gap_chartsWithIdOnly = await prisma.study_planner_learning_gap_charts.createManyAndReturn({\n     *   select: { id: true },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    createManyAndReturn<T extends study_planner_learning_gap_chartsCreateManyAndReturnArgs>(args?: SelectSubset<T, study_planner_learning_gap_chartsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"createManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Delete a Study_planner_learning_gap_charts.\n     * @param {study_planner_learning_gap_chartsDeleteArgs} args - Arguments to delete one Study_planner_learning_gap_charts.\n     * @example\n     * // Delete one Study_planner_learning_gap_charts\n     * const Study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.delete({\n     *   where: {\n     *     // ... filter to delete one Study_planner_learning_gap_charts\n     *   }\n     * })\n     * \n     */\n    delete<T extends study_planner_learning_gap_chartsDeleteArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsDeleteArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"delete\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Update one Study_planner_learning_gap_charts.\n     * @param {study_planner_learning_gap_chartsUpdateArgs} args - Arguments to update one Study_planner_learning_gap_charts.\n     * @example\n     * // Update one Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.update({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    update<T extends study_planner_learning_gap_chartsUpdateArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsUpdateArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"update\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n    /**\n     * Delete zero or more Study_planner_learning_gap_charts.\n     * @param {study_planner_learning_gap_chartsDeleteManyArgs} args - Arguments to filter Study_planner_learning_gap_charts to delete.\n     * @example\n     * // Delete a few Study_planner_learning_gap_charts\n     * const { count } = await prisma.study_planner_learning_gap_charts.deleteMany({\n     *   where: {\n     *     // ... provide filter here\n     *   }\n     * })\n     * \n     */\n    deleteMany<T extends study_planner_learning_gap_chartsDeleteManyArgs>(args?: SelectSubset<T, study_planner_learning_gap_chartsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_learning_gap_charts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_learning_gap_chartsUpdateManyArgs} args - Arguments to update one or more rows.\n     * @example\n     * // Update many Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.updateMany({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: {\n     *     // ... provide data here\n     *   }\n     * })\n     * \n     */\n    updateMany<T extends study_planner_learning_gap_chartsUpdateManyArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>\n\n    /**\n     * Update zero or more Study_planner_learning_gap_charts and returns the data updated in the database.\n     * @param {study_planner_learning_gap_chartsUpdateManyAndReturnArgs} args - Arguments to update many Study_planner_learning_gap_charts.\n     * @example\n     * // Update many Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.updateManyAndReturn({\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * \n     * // Update zero or more Study_planner_learning_gap_charts and only return the `id`\n     * const study_planner_learning_gap_chartsWithIdOnly = await prisma.study_planner_learning_gap_charts.updateManyAndReturn({\n     *   select: { id: true },\n     *   where: {\n     *     // ... provide filter here\n     *   },\n     *   data: [\n     *     // ... provide data here\n     *   ]\n     * })\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * \n     */\n    updateManyAndReturn<T extends study_planner_learning_gap_chartsUpdateManyAndReturnArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"updateManyAndReturn\", GlobalOmitOptions>>\n\n    /**\n     * Create or update one Study_planner_learning_gap_charts.\n     * @param {study_planner_learning_gap_chartsUpsertArgs} args - Arguments to update or create a Study_planner_learning_gap_charts.\n     * @example\n     * // Update or create a Study_planner_learning_gap_charts\n     * const study_planner_learning_gap_charts = await prisma.study_planner_learning_gap_charts.upsert({\n     *   create: {\n     *     // ... data to create a Study_planner_learning_gap_charts\n     *   },\n     *   update: {\n     *     // ... in case it already exists, update\n     *   },\n     *   where: {\n     *     // ... the filter for the Study_planner_learning_gap_charts we want to update\n     *   }\n     * })\n     */\n    upsert<T extends study_planner_learning_gap_chartsUpsertArgs>(args: SelectSubset<T, study_planner_learning_gap_chartsUpsertArgs<ExtArgs>>): Prisma__study_planner_learning_gap_chartsClient<$Result.GetResult<Prisma.$study_planner_learning_gap_chartsPayload<ExtArgs>, T, \"upsert\", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>\n\n\n    /**\n     * Count the number of Study_planner_learning_gap_charts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_learning_gap_chartsCountArgs} args - Arguments to filter Study_planner_learning_gap_charts to count.\n     * @example\n     * // Count the number of Study_planner_learning_gap_charts\n     * const count = await prisma.study_planner_learning_gap_charts.count({\n     *   where: {\n     *     // ... the filter for the Study_planner_learning_gap_charts we want to count\n     *   }\n     * })\n    **/\n    count<T extends study_planner_learning_gap_chartsCountArgs>(\n      args?: Subset<T, study_planner_learning_gap_chartsCountArgs>,\n    ): Prisma.PrismaPromise<\n      T extends $Utils.Record<'select', any>\n        ? T['select'] extends true\n          ? number\n          : GetScalarType<T['select'], Study_planner_learning_gap_chartsCountAggregateOutputType>\n        : number\n    >\n\n    /**\n     * Allows you to perform aggregations operations on a Study_planner_learning_gap_charts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {Study_planner_learning_gap_chartsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.\n     * @example\n     * // Ordered by age ascending\n     * // Where email contains prisma.io\n     * // Limited to the 10 users\n     * const aggregations = await prisma.user.aggregate({\n     *   _avg: {\n     *     age: true,\n     *   },\n     *   where: {\n     *     email: {\n     *       contains: \"prisma.io\",\n     *     },\n     *   },\n     *   orderBy: {\n     *     age: \"asc\",\n     *   },\n     *   take: 10,\n     * })\n    **/\n    aggregate<T extends Study_planner_learning_gap_chartsAggregateArgs>(args: Subset<T, Study_planner_learning_gap_chartsAggregateArgs>): Prisma.PrismaPromise<GetStudy_planner_learning_gap_chartsAggregateType<T>>\n\n    /**\n     * Group by Study_planner_learning_gap_charts.\n     * Note, that providing `undefined` is treated as the value not being there.\n     * Read more here: https://pris.ly/d/null-undefined\n     * @param {study_planner_learning_gap_chartsGroupByArgs} args - Group by arguments.\n     * @example\n     * // Group by city, order by createdAt, get count\n     * const result = await prisma.user.groupBy({\n     *   by: ['city', 'createdAt'],\n     *   orderBy: {\n     *     createdAt: true\n     *   },\n     *   _count: {\n     *     _all: true\n     *   },\n     * })\n     * \n    **/\n    groupBy<\n      T extends study_planner_learning_gap_chartsGroupByArgs,\n      HasSelectOrTake extends Or<\n        Extends<'skip', Keys<T>>,\n        Extends<'take', Keys<T>>\n      >,\n      OrderByArg extends True extends HasSelectOrTake\n        ? { orderBy: study_planner_learning_gap_chartsGroupByArgs['orderBy'] }\n        : { orderBy?: study_planner_learning_gap_chartsGroupByArgs['orderBy'] },\n      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,\n      ByFields extends MaybeTupleToUnion<T['by']>,\n      ByValid extends Has<ByFields, OrderFields>,\n      HavingFields extends GetHavingFields<T['having']>,\n      HavingValid extends Has<ByFields, HavingFields>,\n      ByEmpty extends T['by'] extends never[] ? True : False,\n      InputErrors extends ByEmpty extends True\n      ? `Error: \"by\" must not be empty.`\n      : HavingValid extends False\n      ? {\n          [P in HavingFields]: P extends ByFields\n            ? never\n            : P extends string\n            ? `Error: Field \"${P}\" used in \"having\" needs to be provided in \"by\".`\n            : [\n                Error,\n                'Field ',\n                P,\n                ` in \"having\" needs to be provided in \"by\"`,\n              ]\n        }[HavingFields]\n      : 'take' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"take\", you also need to provide \"orderBy\"'\n      : 'skip' extends Keys<T>\n      ? 'orderBy' extends Keys<T>\n        ? ByValid extends True\n          ? {}\n          : {\n              [P in OrderFields]: P extends ByFields\n                ? never\n                : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n            }[OrderFields]\n        : 'Error: If you provide \"skip\", you also need to provide \"orderBy\"'\n      : ByValid extends True\n      ? {}\n      : {\n          [P in OrderFields]: P extends ByFields\n            ? never\n            : `Error: Field \"${P}\" in \"orderBy\" needs to be provided in \"by\"`\n        }[OrderFields]\n    >(args: SubsetIntersection<T, study_planner_learning_gap_chartsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStudy_planner_learning_gap_chartsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>\n  /**\n   * Fields of the study_planner_learning_gap_charts model\n   */\n  readonly fields: study_planner_learning_gap_chartsFieldRefs;\n  }\n\n  /**\n   * The delegate class that acts as a \"Promise-like\" for study_planner_learning_gap_charts.\n   * Why is this prefixed with `Prisma__`?\n   * Because we want to prevent naming conflicts as mentioned in\n   * https://github.com/prisma/prisma-client-js/issues/707\n   */\n  export interface Prisma__study_planner_learning_gap_chartsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {\n    readonly [Symbol.toStringTag]: \"PrismaPromise\"\n    student<T extends study_planner_studentsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_studentsDefaultArgs<ExtArgs>>): Prisma__study_planner_studentsClient<$Result.GetResult<Prisma.$study_planner_studentsPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    subjectCategory<T extends study_planner_subject_categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, study_planner_subject_categoriesDefaultArgs<ExtArgs>>): Prisma__study_planner_subject_categoriesClient<$Result.GetResult<Prisma.$study_planner_subject_categoriesPayload<ExtArgs>, T, \"findUniqueOrThrow\", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>\n    /**\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\n     * @param onfulfilled The callback to execute when the Promise is resolved.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of which ever callback is executed.\n     */\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected The callback to execute when the Promise is rejected.\n     * @returns A Promise for the completion of the callback.\n     */\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>\n    /**\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\n     * resolved value cannot be modified from the callback.\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\n     * @returns A Promise for the completion of the callback.\n     */\n    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>\n  }\n\n\n\n\n  /**\n   * Fields of the study_planner_learning_gap_charts model\n   */\n  interface study_planner_learning_gap_chartsFieldRefs {\n    readonly id: FieldRef<\"study_planner_learning_gap_charts\", 'String'>\n    readonly student_id: FieldRef<\"study_planner_learning_gap_charts\", 'String'>\n    readonly subject_category_id: FieldRef<\"study_planner_learning_gap_charts\", 'String'>\n    readonly gap_metric: FieldRef<\"study_planner_learning_gap_charts\", 'Float'>\n    readonly created_at: FieldRef<\"study_planner_learning_gap_charts\", 'DateTime'>\n    readonly updated_at: FieldRef<\"study_planner_learning_gap_charts\", 'DateTime'>\n  }\n    \n\n  // Custom InputTypes\n  /**\n   * study_planner_learning_gap_charts findUnique\n   */\n  export type study_planner_learning_gap_chartsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_learning_gap_charts to fetch.\n     */\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_learning_gap_charts findUniqueOrThrow\n   */\n  export type study_planner_learning_gap_chartsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_learning_gap_charts to fetch.\n     */\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_learning_gap_charts findFirst\n   */\n  export type study_planner_learning_gap_chartsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_learning_gap_charts to fetch.\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_learning_gap_charts to fetch.\n     */\n    orderBy?: study_planner_learning_gap_chartsOrderByWithRelationInput | study_planner_learning_gap_chartsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_learning_gap_charts.\n     */\n    cursor?: study_planner_learning_gap_chartsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_learning_gap_charts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_learning_gap_charts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_learning_gap_charts.\n     */\n    distinct?: Study_planner_learning_gap_chartsScalarFieldEnum | Study_planner_learning_gap_chartsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_learning_gap_charts findFirstOrThrow\n   */\n  export type study_planner_learning_gap_chartsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_learning_gap_charts to fetch.\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_learning_gap_charts to fetch.\n     */\n    orderBy?: study_planner_learning_gap_chartsOrderByWithRelationInput | study_planner_learning_gap_chartsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for searching for study_planner_learning_gap_charts.\n     */\n    cursor?: study_planner_learning_gap_chartsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_learning_gap_charts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_learning_gap_charts.\n     */\n    skip?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}\n     * \n     * Filter by unique combinations of study_planner_learning_gap_charts.\n     */\n    distinct?: Study_planner_learning_gap_chartsScalarFieldEnum | Study_planner_learning_gap_chartsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_learning_gap_charts findMany\n   */\n  export type study_planner_learning_gap_chartsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * Filter, which study_planner_learning_gap_charts to fetch.\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}\n     * \n     * Determine the order of study_planner_learning_gap_charts to fetch.\n     */\n    orderBy?: study_planner_learning_gap_chartsOrderByWithRelationInput | study_planner_learning_gap_chartsOrderByWithRelationInput[]\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}\n     * \n     * Sets the position for listing study_planner_learning_gap_charts.\n     */\n    cursor?: study_planner_learning_gap_chartsWhereUniqueInput\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Take `Â±n` study_planner_learning_gap_charts from the position of the cursor.\n     */\n    take?: number\n    /**\n     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}\n     * \n     * Skip the first `n` study_planner_learning_gap_charts.\n     */\n    skip?: number\n    distinct?: Study_planner_learning_gap_chartsScalarFieldEnum | Study_planner_learning_gap_chartsScalarFieldEnum[]\n  }\n\n  /**\n   * study_planner_learning_gap_charts create\n   */\n  export type study_planner_learning_gap_chartsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * The data needed to create a study_planner_learning_gap_charts.\n     */\n    data: XOR<study_planner_learning_gap_chartsCreateInput, study_planner_learning_gap_chartsUncheckedCreateInput>\n  }\n\n  /**\n   * study_planner_learning_gap_charts createMany\n   */\n  export type study_planner_learning_gap_chartsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to create many study_planner_learning_gap_charts.\n     */\n    data: study_planner_learning_gap_chartsCreateManyInput | study_planner_learning_gap_chartsCreateManyInput[]\n    skipDuplicates?: boolean\n  }\n\n  /**\n   * study_planner_learning_gap_charts createManyAndReturn\n   */\n  export type study_planner_learning_gap_chartsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelectCreateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * The data used to create many study_planner_learning_gap_charts.\n     */\n    data: study_planner_learning_gap_chartsCreateManyInput | study_planner_learning_gap_chartsCreateManyInput[]\n    skipDuplicates?: boolean\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsIncludeCreateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_learning_gap_charts update\n   */\n  export type study_planner_learning_gap_chartsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * The data needed to update a study_planner_learning_gap_charts.\n     */\n    data: XOR<study_planner_learning_gap_chartsUpdateInput, study_planner_learning_gap_chartsUncheckedUpdateInput>\n    /**\n     * Choose, which study_planner_learning_gap_charts to update.\n     */\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_learning_gap_charts updateMany\n   */\n  export type study_planner_learning_gap_chartsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * The data used to update study_planner_learning_gap_charts.\n     */\n    data: XOR<study_planner_learning_gap_chartsUpdateManyMutationInput, study_planner_learning_gap_chartsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_learning_gap_charts to update\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * Limit how many study_planner_learning_gap_charts to update.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_learning_gap_charts updateManyAndReturn\n   */\n  export type study_planner_learning_gap_chartsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelectUpdateManyAndReturn<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * The data used to update study_planner_learning_gap_charts.\n     */\n    data: XOR<study_planner_learning_gap_chartsUpdateManyMutationInput, study_planner_learning_gap_chartsUncheckedUpdateManyInput>\n    /**\n     * Filter which study_planner_learning_gap_charts to update\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * Limit how many study_planner_learning_gap_charts to update.\n     */\n    limit?: number\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsIncludeUpdateManyAndReturn<ExtArgs> | null\n  }\n\n  /**\n   * study_planner_learning_gap_charts upsert\n   */\n  export type study_planner_learning_gap_chartsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * The filter to search for the study_planner_learning_gap_charts to update in case it exists.\n     */\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    /**\n     * In case the study_planner_learning_gap_charts found by the `where` argument doesn't exist, create a new study_planner_learning_gap_charts with this data.\n     */\n    create: XOR<study_planner_learning_gap_chartsCreateInput, study_planner_learning_gap_chartsUncheckedCreateInput>\n    /**\n     * In case the study_planner_learning_gap_charts was found with the provided `where` argument, update it with this data.\n     */\n    update: XOR<study_planner_learning_gap_chartsUpdateInput, study_planner_learning_gap_chartsUncheckedUpdateInput>\n  }\n\n  /**\n   * study_planner_learning_gap_charts delete\n   */\n  export type study_planner_learning_gap_chartsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n    /**\n     * Filter which study_planner_learning_gap_charts to delete.\n     */\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n  }\n\n  /**\n   * study_planner_learning_gap_charts deleteMany\n   */\n  export type study_planner_learning_gap_chartsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Filter which study_planner_learning_gap_charts to delete\n     */\n    where?: study_planner_learning_gap_chartsWhereInput\n    /**\n     * Limit how many study_planner_learning_gap_charts to delete.\n     */\n    limit?: number\n  }\n\n  /**\n   * study_planner_learning_gap_charts without action\n   */\n  export type study_planner_learning_gap_chartsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {\n    /**\n     * Select specific fields to fetch from the study_planner_learning_gap_charts\n     */\n    select?: study_planner_learning_gap_chartsSelect<ExtArgs> | null\n    /**\n     * Omit specific fields from the study_planner_learning_gap_charts\n     */\n    omit?: study_planner_learning_gap_chartsOmit<ExtArgs> | null\n    /**\n     * Choose, which related nodes to fetch as well\n     */\n    include?: study_planner_learning_gap_chartsInclude<ExtArgs> | null\n  }\n\n\n  /**\n   * Enums\n   */\n\n  export const TransactionIsolationLevel: {\n    ReadUncommitted: 'ReadUncommitted',\n    ReadCommitted: 'ReadCommitted',\n    RepeatableRead: 'RepeatableRead',\n    Serializable: 'Serializable'\n  };\n\n  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]\n\n\n  export const Study_planner_study_phasesScalarFieldEnum: {\n    id: 'id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_phasesScalarFieldEnum = (typeof Study_planner_study_phasesScalarFieldEnum)[keyof typeof Study_planner_study_phasesScalarFieldEnum]\n\n\n  export const Study_planner_subject_categoriesScalarFieldEnum: {\n    id: 'id',\n    code: 'code',\n    name: 'name',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_subject_categoriesScalarFieldEnum = (typeof Study_planner_subject_categoriesScalarFieldEnum)[keyof typeof Study_planner_subject_categoriesScalarFieldEnum]\n\n\n  export const Study_planner_studentsScalarFieldEnum: {\n    id: 'id',\n    email: 'email',\n    password_hash: 'password_hash',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_studentsScalarFieldEnum = (typeof Study_planner_studentsScalarFieldEnum)[keyof typeof Study_planner_studentsScalarFieldEnum]\n\n\n  export const Study_planner_study_tasksScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    study_phase_id: 'study_phase_id',\n    subject_category_id: 'subject_category_id',\n    title: 'title',\n    description: 'description',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_study_tasksScalarFieldEnum = (typeof Study_planner_study_tasksScalarFieldEnum)[keyof typeof Study_planner_study_tasksScalarFieldEnum]\n\n\n  export const Study_planner_study_task_progressScalarFieldEnum: {\n    id: 'id',\n    study_task_id: 'study_task_id',\n    study_phase_id: 'study_phase_id',\n    completed_at: 'completed_at',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_task_progressScalarFieldEnum = (typeof Study_planner_study_task_progressScalarFieldEnum)[keyof typeof Study_planner_study_task_progressScalarFieldEnum]\n\n\n  export const Study_planner_attachmentsScalarFieldEnum: {\n    id: 'id',\n    study_task_id: 'study_task_id',\n    file_type: 'file_type',\n    file_url: 'file_url',\n    created_at: 'created_at'\n  };\n\n  export type Study_planner_attachmentsScalarFieldEnum = (typeof Study_planner_attachmentsScalarFieldEnum)[keyof typeof Study_planner_attachmentsScalarFieldEnum]\n\n\n  export const Study_planner_memosScalarFieldEnum: {\n    id: 'id',\n    study_task_id: 'study_task_id',\n    memo_text: 'memo_text',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_memosScalarFieldEnum = (typeof Study_planner_memosScalarFieldEnum)[keyof typeof Study_planner_memosScalarFieldEnum]\n\n\n  export const Study_planner_task_alarmsScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    study_task_id: 'study_task_id',\n    title: 'title',\n    alarm_time: 'alarm_time',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_task_alarmsScalarFieldEnum = (typeof Study_planner_task_alarmsScalarFieldEnum)[keyof typeof Study_planner_task_alarmsScalarFieldEnum]\n\n\n  export const Study_planner_general_remindersScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    title: 'title',\n    due_time: 'due_time',\n    description: 'description',\n    active: 'active',\n    created_at: 'created_at',\n    updated_at: 'updated_at',\n    deleted_at: 'deleted_at'\n  };\n\n  export type Study_planner_general_remindersScalarFieldEnum = (typeof Study_planner_general_remindersScalarFieldEnum)[keyof typeof Study_planner_general_remindersScalarFieldEnum]\n\n\n  export const Study_planner_study_progress_analyticsScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    study_phase_id: 'study_phase_id',\n    completed_tasks_count: 'completed_tasks_count',\n    total_tasks_count: 'total_tasks_count',\n    completion_rate: 'completion_rate',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_study_progress_analyticsScalarFieldEnum = (typeof Study_planner_study_progress_analyticsScalarFieldEnum)[keyof typeof Study_planner_study_progress_analyticsScalarFieldEnum]\n\n\n  export const Study_planner_learning_gap_chartsScalarFieldEnum: {\n    id: 'id',\n    student_id: 'student_id',\n    subject_category_id: 'subject_category_id',\n    gap_metric: 'gap_metric',\n    created_at: 'created_at',\n    updated_at: 'updated_at'\n  };\n\n  export type Study_planner_learning_gap_chartsScalarFieldEnum = (typeof Study_planner_learning_gap_chartsScalarFieldEnum)[keyof typeof Study_planner_learning_gap_chartsScalarFieldEnum]\n\n\n  export const SortOrder: {\n    asc: 'asc',\n    desc: 'desc'\n  };\n\n  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]\n\n\n  export const QueryMode: {\n    default: 'default',\n    insensitive: 'insensitive'\n  };\n\n  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]\n\n\n  export const NullsOrder: {\n    first: 'first',\n    last: 'last'\n  };\n\n  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]\n\n\n  /**\n   * Field references\n   */\n\n\n  /**\n   * Reference to a field of type 'String'\n   */\n  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>\n    \n\n\n  /**\n   * Reference to a field of type 'String[]'\n   */\n  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime'\n   */\n  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>\n    \n\n\n  /**\n   * Reference to a field of type 'DateTime[]'\n   */\n  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Boolean'\n   */\n  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int'\n   */\n  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>\n    \n\n\n  /**\n   * Reference to a field of type 'Int[]'\n   */\n  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float'\n   */\n  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>\n    \n\n\n  /**\n   * Reference to a field of type 'Float[]'\n   */\n  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>\n    \n  /**\n   * Deep Input Types\n   */\n\n\n  export type study_planner_study_phasesWhereInput = {\n    AND?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    OR?: study_planner_study_phasesWhereInput[]\n    NOT?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    id?: UuidFilter<\"study_planner_study_phases\"> | string\n    code?: StringFilter<\"study_planner_study_phases\"> | string\n    name?: StringFilter<\"study_planner_study_phases\"> | string\n    description?: StringNullableFilter<\"study_planner_study_phases\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n    study_planner_study_progress_analytics?: Study_planner_study_progress_analyticsListRelationFilter\n  }\n\n  export type study_planner_study_phasesOrderByWithRelationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    study_planner_study_tasks?: study_planner_study_tasksOrderByRelationAggregateInput\n    study_planner_study_task_progress?: study_planner_study_task_progressOrderByRelationAggregateInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_study_phasesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    AND?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    OR?: study_planner_study_phasesWhereInput[]\n    NOT?: study_planner_study_phasesWhereInput | study_planner_study_phasesWhereInput[]\n    name?: StringFilter<\"study_planner_study_phases\"> | string\n    description?: StringNullableFilter<\"study_planner_study_phases\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_phases\"> | Date | string\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n    study_planner_study_progress_analytics?: Study_planner_study_progress_analyticsListRelationFilter\n  }, \"id\" | \"code\">\n\n  export type study_planner_study_phasesOrderByWithAggregationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_phasesCountOrderByAggregateInput\n    _max?: study_planner_study_phasesMaxOrderByAggregateInput\n    _min?: study_planner_study_phasesMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_phasesScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_phasesScalarWhereWithAggregatesInput | study_planner_study_phasesScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_phasesScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_phasesScalarWhereWithAggregatesInput | study_planner_study_phasesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_phases\"> | string\n    code?: StringWithAggregatesFilter<\"study_planner_study_phases\"> | string\n    name?: StringWithAggregatesFilter<\"study_planner_study_phases\"> | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_study_phases\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_phases\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_phases\"> | Date | string\n  }\n\n  export type study_planner_subject_categoriesWhereInput = {\n    AND?: study_planner_subject_categoriesWhereInput | study_planner_subject_categoriesWhereInput[]\n    OR?: study_planner_subject_categoriesWhereInput[]\n    NOT?: study_planner_subject_categoriesWhereInput | study_planner_subject_categoriesWhereInput[]\n    id?: UuidFilter<\"study_planner_subject_categories\"> | string\n    code?: StringFilter<\"study_planner_subject_categories\"> | string\n    name?: StringFilter<\"study_planner_subject_categories\"> | string\n    description?: StringNullableFilter<\"study_planner_subject_categories\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_subject_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_subject_categories\"> | Date | string\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_learning_gap_charts?: Study_planner_learning_gap_chartsListRelationFilter\n  }\n\n  export type study_planner_subject_categoriesOrderByWithRelationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    study_planner_study_tasks?: study_planner_study_tasksOrderByRelationAggregateInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_subject_categoriesWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    code?: string\n    AND?: study_planner_subject_categoriesWhereInput | study_planner_subject_categoriesWhereInput[]\n    OR?: study_planner_subject_categoriesWhereInput[]\n    NOT?: study_planner_subject_categoriesWhereInput | study_planner_subject_categoriesWhereInput[]\n    name?: StringFilter<\"study_planner_subject_categories\"> | string\n    description?: StringNullableFilter<\"study_planner_subject_categories\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_subject_categories\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_subject_categories\"> | Date | string\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_learning_gap_charts?: Study_planner_learning_gap_chartsListRelationFilter\n  }, \"id\" | \"code\">\n\n  export type study_planner_subject_categoriesOrderByWithAggregationInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_subject_categoriesCountOrderByAggregateInput\n    _max?: study_planner_subject_categoriesMaxOrderByAggregateInput\n    _min?: study_planner_subject_categoriesMinOrderByAggregateInput\n  }\n\n  export type study_planner_subject_categoriesScalarWhereWithAggregatesInput = {\n    AND?: study_planner_subject_categoriesScalarWhereWithAggregatesInput | study_planner_subject_categoriesScalarWhereWithAggregatesInput[]\n    OR?: study_planner_subject_categoriesScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_subject_categoriesScalarWhereWithAggregatesInput | study_planner_subject_categoriesScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_subject_categories\"> | string\n    code?: StringWithAggregatesFilter<\"study_planner_subject_categories\"> | string\n    name?: StringWithAggregatesFilter<\"study_planner_subject_categories\"> | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_subject_categories\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_subject_categories\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_subject_categories\"> | Date | string\n  }\n\n  export type study_planner_studentsWhereInput = {\n    AND?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    OR?: study_planner_studentsWhereInput[]\n    NOT?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    id?: UuidFilter<\"study_planner_students\"> | string\n    email?: StringFilter<\"study_planner_students\"> | string\n    password_hash?: StringFilter<\"study_planner_students\"> | string\n    created_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_students\"> | Date | string | null\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_task_alarms?: Study_planner_task_alarmsListRelationFilter\n    study_planner_general_reminders?: Study_planner_general_remindersListRelationFilter\n    study_planner_study_progress_analytics?: Study_planner_study_progress_analyticsListRelationFilter\n    study_planner_learning_gap_charts?: Study_planner_learning_gap_chartsListRelationFilter\n  }\n\n  export type study_planner_studentsOrderByWithRelationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    study_planner_study_tasks?: study_planner_study_tasksOrderByRelationAggregateInput\n    study_planner_task_alarms?: study_planner_task_alarmsOrderByRelationAggregateInput\n    study_planner_general_reminders?: study_planner_general_remindersOrderByRelationAggregateInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsOrderByRelationAggregateInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_studentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    email?: string\n    AND?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    OR?: study_planner_studentsWhereInput[]\n    NOT?: study_planner_studentsWhereInput | study_planner_studentsWhereInput[]\n    password_hash?: StringFilter<\"study_planner_students\"> | string\n    created_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_students\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_students\"> | Date | string | null\n    study_planner_study_tasks?: Study_planner_study_tasksListRelationFilter\n    study_planner_task_alarms?: Study_planner_task_alarmsListRelationFilter\n    study_planner_general_reminders?: Study_planner_general_remindersListRelationFilter\n    study_planner_study_progress_analytics?: Study_planner_study_progress_analyticsListRelationFilter\n    study_planner_learning_gap_charts?: Study_planner_learning_gap_chartsListRelationFilter\n  }, \"id\" | \"email\">\n\n  export type study_planner_studentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_studentsCountOrderByAggregateInput\n    _max?: study_planner_studentsMaxOrderByAggregateInput\n    _min?: study_planner_studentsMinOrderByAggregateInput\n  }\n\n  export type study_planner_studentsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_studentsScalarWhereWithAggregatesInput | study_planner_studentsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_studentsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_studentsScalarWhereWithAggregatesInput | study_planner_studentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_students\"> | string\n    email?: StringWithAggregatesFilter<\"study_planner_students\"> | string\n    password_hash?: StringWithAggregatesFilter<\"study_planner_students\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_students\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_students\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_students\"> | Date | string | null\n  }\n\n  export type study_planner_study_tasksWhereInput = {\n    AND?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    OR?: study_planner_study_tasksWhereInput[]\n    NOT?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    student_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    subject_category_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    title?: StringFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_study_tasks\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n    subjectCategory?: XOR<Study_planner_subject_categoriesScalarRelationFilter, study_planner_subject_categoriesWhereInput>\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n    study_planner_attachments?: Study_planner_attachmentsListRelationFilter\n    study_planner_memos?: Study_planner_memosListRelationFilter\n    study_planner_task_alarms?: Study_planner_task_alarmsListRelationFilter\n  }\n\n  export type study_planner_study_tasksOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    subject_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    studyPhase?: study_planner_study_phasesOrderByWithRelationInput\n    subjectCategory?: study_planner_subject_categoriesOrderByWithRelationInput\n    study_planner_study_task_progress?: study_planner_study_task_progressOrderByRelationAggregateInput\n    study_planner_attachments?: study_planner_attachmentsOrderByRelationAggregateInput\n    study_planner_memos?: study_planner_memosOrderByRelationAggregateInput\n    study_planner_task_alarms?: study_planner_task_alarmsOrderByRelationAggregateInput\n  }\n\n  export type study_planner_study_tasksWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_title?: study_planner_study_tasksStudent_idTitleCompoundUniqueInput\n    AND?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    OR?: study_planner_study_tasksWhereInput[]\n    NOT?: study_planner_study_tasksWhereInput | study_planner_study_tasksWhereInput[]\n    student_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    subject_category_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    title?: StringFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_study_tasks\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n    subjectCategory?: XOR<Study_planner_subject_categoriesScalarRelationFilter, study_planner_subject_categoriesWhereInput>\n    study_planner_study_task_progress?: Study_planner_study_task_progressListRelationFilter\n    study_planner_attachments?: Study_planner_attachmentsListRelationFilter\n    study_planner_memos?: Study_planner_memosListRelationFilter\n    study_planner_task_alarms?: Study_planner_task_alarmsListRelationFilter\n  }, \"id\" | \"student_id_title\">\n\n  export type study_planner_study_tasksOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    subject_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_study_tasksCountOrderByAggregateInput\n    _max?: study_planner_study_tasksMaxOrderByAggregateInput\n    _min?: study_planner_study_tasksMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_tasksScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_tasksScalarWhereWithAggregatesInput | study_planner_study_tasksScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_tasksScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_tasksScalarWhereWithAggregatesInput | study_planner_study_tasksScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    subject_category_id?: UuidWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    title?: StringWithAggregatesFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_study_tasks\"> | Date | string | null\n  }\n\n  export type study_planner_study_task_progressWhereInput = {\n    AND?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    OR?: study_planner_study_task_progressWhereInput[]\n    NOT?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n  }\n\n  export type study_planner_study_task_progressOrderByWithRelationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_at?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n    studyPhase?: study_planner_study_phasesOrderByWithRelationInput\n  }\n\n  export type study_planner_study_task_progressWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    study_task_id_study_phase_id?: study_planner_study_task_progressStudy_task_idStudy_phase_idCompoundUniqueInput\n    AND?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    OR?: study_planner_study_task_progressWhereInput[]\n    NOT?: study_planner_study_task_progressWhereInput | study_planner_study_task_progressWhereInput[]\n    study_task_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n  }, \"id\" | \"study_task_id_study_phase_id\">\n\n  export type study_planner_study_task_progressOrderByWithAggregationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_at?: SortOrderInput | SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_task_progressCountOrderByAggregateInput\n    _max?: study_planner_study_task_progressMaxOrderByAggregateInput\n    _min?: study_planner_study_task_progressMinOrderByAggregateInput\n  }\n\n  export type study_planner_study_task_progressScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_task_progressScalarWhereWithAggregatesInput | study_planner_study_task_progressScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_task_progressScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_task_progressScalarWhereWithAggregatesInput | study_planner_study_task_progressScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidWithAggregatesFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_task_progress\"> | Date | string\n  }\n\n  export type study_planner_attachmentsWhereInput = {\n    AND?: study_planner_attachmentsWhereInput | study_planner_attachmentsWhereInput[]\n    OR?: study_planner_attachmentsWhereInput[]\n    NOT?: study_planner_attachmentsWhereInput | study_planner_attachmentsWhereInput[]\n    id?: UuidFilter<\"study_planner_attachments\"> | string\n    study_task_id?: UuidFilter<\"study_planner_attachments\"> | string\n    file_type?: StringFilter<\"study_planner_attachments\"> | string\n    file_url?: StringFilter<\"study_planner_attachments\"> | string\n    created_at?: DateTimeFilter<\"study_planner_attachments\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }\n\n  export type study_planner_attachmentsOrderByWithRelationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_type?: SortOrder\n    file_url?: SortOrder\n    created_at?: SortOrder\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n  }\n\n  export type study_planner_attachmentsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: study_planner_attachmentsWhereInput | study_planner_attachmentsWhereInput[]\n    OR?: study_planner_attachmentsWhereInput[]\n    NOT?: study_planner_attachmentsWhereInput | study_planner_attachmentsWhereInput[]\n    study_task_id?: UuidFilter<\"study_planner_attachments\"> | string\n    file_type?: StringFilter<\"study_planner_attachments\"> | string\n    file_url?: StringFilter<\"study_planner_attachments\"> | string\n    created_at?: DateTimeFilter<\"study_planner_attachments\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }, \"id\">\n\n  export type study_planner_attachmentsOrderByWithAggregationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_type?: SortOrder\n    file_url?: SortOrder\n    created_at?: SortOrder\n    _count?: study_planner_attachmentsCountOrderByAggregateInput\n    _max?: study_planner_attachmentsMaxOrderByAggregateInput\n    _min?: study_planner_attachmentsMinOrderByAggregateInput\n  }\n\n  export type study_planner_attachmentsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_attachmentsScalarWhereWithAggregatesInput | study_planner_attachmentsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_attachmentsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_attachmentsScalarWhereWithAggregatesInput | study_planner_attachmentsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_attachments\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_attachments\"> | string\n    file_type?: StringWithAggregatesFilter<\"study_planner_attachments\"> | string\n    file_url?: StringWithAggregatesFilter<\"study_planner_attachments\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_attachments\"> | Date | string\n  }\n\n  export type study_planner_memosWhereInput = {\n    AND?: study_planner_memosWhereInput | study_planner_memosWhereInput[]\n    OR?: study_planner_memosWhereInput[]\n    NOT?: study_planner_memosWhereInput | study_planner_memosWhereInput[]\n    id?: UuidFilter<\"study_planner_memos\"> | string\n    study_task_id?: UuidFilter<\"study_planner_memos\"> | string\n    memo_text?: StringFilter<\"study_planner_memos\"> | string\n    created_at?: DateTimeFilter<\"study_planner_memos\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_memos\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }\n\n  export type study_planner_memosOrderByWithRelationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    memo_text?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n  }\n\n  export type study_planner_memosWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    AND?: study_planner_memosWhereInput | study_planner_memosWhereInput[]\n    OR?: study_planner_memosWhereInput[]\n    NOT?: study_planner_memosWhereInput | study_planner_memosWhereInput[]\n    study_task_id?: UuidFilter<\"study_planner_memos\"> | string\n    memo_text?: StringFilter<\"study_planner_memos\"> | string\n    created_at?: DateTimeFilter<\"study_planner_memos\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_memos\"> | Date | string\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }, \"id\">\n\n  export type study_planner_memosOrderByWithAggregationInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    memo_text?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_memosCountOrderByAggregateInput\n    _max?: study_planner_memosMaxOrderByAggregateInput\n    _min?: study_planner_memosMinOrderByAggregateInput\n  }\n\n  export type study_planner_memosScalarWhereWithAggregatesInput = {\n    AND?: study_planner_memosScalarWhereWithAggregatesInput | study_planner_memosScalarWhereWithAggregatesInput[]\n    OR?: study_planner_memosScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_memosScalarWhereWithAggregatesInput | study_planner_memosScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_memos\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_memos\"> | string\n    memo_text?: StringWithAggregatesFilter<\"study_planner_memos\"> | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_memos\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_memos\"> | Date | string\n  }\n\n  export type study_planner_task_alarmsWhereInput = {\n    AND?: study_planner_task_alarmsWhereInput | study_planner_task_alarmsWhereInput[]\n    OR?: study_planner_task_alarmsWhereInput[]\n    NOT?: study_planner_task_alarmsWhereInput | study_planner_task_alarmsWhereInput[]\n    id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    student_id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    study_task_id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    title?: StringFilter<\"study_planner_task_alarms\"> | string\n    alarm_time?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    created_at?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_task_alarms\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }\n\n  export type study_planner_task_alarmsOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_task_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    studyTask?: study_planner_study_tasksOrderByWithRelationInput\n  }\n\n  export type study_planner_task_alarmsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_study_task_id_alarm_time?: study_planner_task_alarmsStudent_idStudy_task_idAlarm_timeCompoundUniqueInput\n    AND?: study_planner_task_alarmsWhereInput | study_planner_task_alarmsWhereInput[]\n    OR?: study_planner_task_alarmsWhereInput[]\n    NOT?: study_planner_task_alarmsWhereInput | study_planner_task_alarmsWhereInput[]\n    student_id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    study_task_id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    title?: StringFilter<\"study_planner_task_alarms\"> | string\n    alarm_time?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    created_at?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_task_alarms\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyTask?: XOR<Study_planner_study_tasksScalarRelationFilter, study_planner_study_tasksWhereInput>\n  }, \"id\" | \"student_id_study_task_id_alarm_time\">\n\n  export type study_planner_task_alarmsOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_task_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_task_alarmsCountOrderByAggregateInput\n    _max?: study_planner_task_alarmsMaxOrderByAggregateInput\n    _min?: study_planner_task_alarmsMinOrderByAggregateInput\n  }\n\n  export type study_planner_task_alarmsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_task_alarmsScalarWhereWithAggregatesInput | study_planner_task_alarmsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_task_alarmsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_task_alarmsScalarWhereWithAggregatesInput | study_planner_task_alarmsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_task_alarms\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_task_alarms\"> | string\n    study_task_id?: UuidWithAggregatesFilter<\"study_planner_task_alarms\"> | string\n    title?: StringWithAggregatesFilter<\"study_planner_task_alarms\"> | string\n    alarm_time?: DateTimeWithAggregatesFilter<\"study_planner_task_alarms\"> | Date | string\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_task_alarms\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_task_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_task_alarms\"> | Date | string | null\n  }\n\n  export type study_planner_general_remindersWhereInput = {\n    AND?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    OR?: study_planner_general_remindersWhereInput[]\n    NOT?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    student_id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    title?: StringFilter<\"study_planner_general_reminders\"> | string\n    due_time?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    description?: StringNullableFilter<\"study_planner_general_reminders\"> | string | null\n    active?: BoolFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_general_reminders\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n  }\n\n  export type study_planner_general_remindersOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    due_time?: SortOrder\n    description?: SortOrderInput | SortOrder\n    active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n  }\n\n  export type study_planner_general_remindersWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_title_due_time?: study_planner_general_remindersStudent_idTitleDue_timeCompoundUniqueInput\n    AND?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    OR?: study_planner_general_remindersWhereInput[]\n    NOT?: study_planner_general_remindersWhereInput | study_planner_general_remindersWhereInput[]\n    student_id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    title?: StringFilter<\"study_planner_general_reminders\"> | string\n    due_time?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    description?: StringNullableFilter<\"study_planner_general_reminders\"> | string | null\n    active?: BoolFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_general_reminders\"> | Date | string | null\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n  }, \"id\" | \"student_id_title_due_time\">\n\n  export type study_planner_general_remindersOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    due_time?: SortOrder\n    description?: SortOrderInput | SortOrder\n    active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrderInput | SortOrder\n    _count?: study_planner_general_remindersCountOrderByAggregateInput\n    _max?: study_planner_general_remindersMaxOrderByAggregateInput\n    _min?: study_planner_general_remindersMinOrderByAggregateInput\n  }\n\n  export type study_planner_general_remindersScalarWhereWithAggregatesInput = {\n    AND?: study_planner_general_remindersScalarWhereWithAggregatesInput | study_planner_general_remindersScalarWhereWithAggregatesInput[]\n    OR?: study_planner_general_remindersScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_general_remindersScalarWhereWithAggregatesInput | study_planner_general_remindersScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_general_reminders\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_general_reminders\"> | string\n    title?: StringWithAggregatesFilter<\"study_planner_general_reminders\"> | string\n    due_time?: DateTimeWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string\n    description?: StringNullableWithAggregatesFilter<\"study_planner_general_reminders\"> | string | null\n    active?: BoolWithAggregatesFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableWithAggregatesFilter<\"study_planner_general_reminders\"> | Date | string | null\n  }\n\n  export type study_planner_study_progress_analyticsWhereInput = {\n    AND?: study_planner_study_progress_analyticsWhereInput | study_planner_study_progress_analyticsWhereInput[]\n    OR?: study_planner_study_progress_analyticsWhereInput[]\n    NOT?: study_planner_study_progress_analyticsWhereInput | study_planner_study_progress_analyticsWhereInput[]\n    id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    student_id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    completed_tasks_count?: IntFilter<\"study_planner_study_progress_analytics\"> | number\n    total_tasks_count?: IntFilter<\"study_planner_study_progress_analytics\"> | number\n    completion_rate?: FloatFilter<\"study_planner_study_progress_analytics\"> | number\n    created_at?: DateTimeFilter<\"study_planner_study_progress_analytics\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_progress_analytics\"> | Date | string\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n  }\n\n  export type study_planner_study_progress_analyticsOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    studyPhase?: study_planner_study_phasesOrderByWithRelationInput\n  }\n\n  export type study_planner_study_progress_analyticsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_study_phase_id?: study_planner_study_progress_analyticsStudent_idStudy_phase_idCompoundUniqueInput\n    AND?: study_planner_study_progress_analyticsWhereInput | study_planner_study_progress_analyticsWhereInput[]\n    OR?: study_planner_study_progress_analyticsWhereInput[]\n    NOT?: study_planner_study_progress_analyticsWhereInput | study_planner_study_progress_analyticsWhereInput[]\n    student_id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    completed_tasks_count?: IntFilter<\"study_planner_study_progress_analytics\"> | number\n    total_tasks_count?: IntFilter<\"study_planner_study_progress_analytics\"> | number\n    completion_rate?: FloatFilter<\"study_planner_study_progress_analytics\"> | number\n    created_at?: DateTimeFilter<\"study_planner_study_progress_analytics\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_progress_analytics\"> | Date | string\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    studyPhase?: XOR<Study_planner_study_phasesScalarRelationFilter, study_planner_study_phasesWhereInput>\n  }, \"id\" | \"student_id_study_phase_id\">\n\n  export type study_planner_study_progress_analyticsOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_study_progress_analyticsCountOrderByAggregateInput\n    _avg?: study_planner_study_progress_analyticsAvgOrderByAggregateInput\n    _max?: study_planner_study_progress_analyticsMaxOrderByAggregateInput\n    _min?: study_planner_study_progress_analyticsMinOrderByAggregateInput\n    _sum?: study_planner_study_progress_analyticsSumOrderByAggregateInput\n  }\n\n  export type study_planner_study_progress_analyticsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_study_progress_analyticsScalarWhereWithAggregatesInput | study_planner_study_progress_analyticsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_study_progress_analyticsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_study_progress_analyticsScalarWhereWithAggregatesInput | study_planner_study_progress_analyticsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | string\n    study_phase_id?: UuidWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | string\n    completed_tasks_count?: IntWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | number\n    total_tasks_count?: IntWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | number\n    completion_rate?: FloatWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_study_progress_analytics\"> | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsWhereInput = {\n    AND?: study_planner_learning_gap_chartsWhereInput | study_planner_learning_gap_chartsWhereInput[]\n    OR?: study_planner_learning_gap_chartsWhereInput[]\n    NOT?: study_planner_learning_gap_chartsWhereInput | study_planner_learning_gap_chartsWhereInput[]\n    id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    student_id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    subject_category_id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    gap_metric?: FloatFilter<\"study_planner_learning_gap_charts\"> | number\n    created_at?: DateTimeFilter<\"study_planner_learning_gap_charts\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_learning_gap_charts\"> | Date | string\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    subjectCategory?: XOR<Study_planner_subject_categoriesScalarRelationFilter, study_planner_subject_categoriesWhereInput>\n  }\n\n  export type study_planner_learning_gap_chartsOrderByWithRelationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    subject_category_id?: SortOrder\n    gap_metric?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    student?: study_planner_studentsOrderByWithRelationInput\n    subjectCategory?: study_planner_subject_categoriesOrderByWithRelationInput\n  }\n\n  export type study_planner_learning_gap_chartsWhereUniqueInput = Prisma.AtLeast<{\n    id?: string\n    student_id_subject_category_id?: study_planner_learning_gap_chartsStudent_idSubject_category_idCompoundUniqueInput\n    AND?: study_planner_learning_gap_chartsWhereInput | study_planner_learning_gap_chartsWhereInput[]\n    OR?: study_planner_learning_gap_chartsWhereInput[]\n    NOT?: study_planner_learning_gap_chartsWhereInput | study_planner_learning_gap_chartsWhereInput[]\n    student_id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    subject_category_id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    gap_metric?: FloatFilter<\"study_planner_learning_gap_charts\"> | number\n    created_at?: DateTimeFilter<\"study_planner_learning_gap_charts\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_learning_gap_charts\"> | Date | string\n    student?: XOR<Study_planner_studentsScalarRelationFilter, study_planner_studentsWhereInput>\n    subjectCategory?: XOR<Study_planner_subject_categoriesScalarRelationFilter, study_planner_subject_categoriesWhereInput>\n  }, \"id\" | \"student_id_subject_category_id\">\n\n  export type study_planner_learning_gap_chartsOrderByWithAggregationInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    subject_category_id?: SortOrder\n    gap_metric?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    _count?: study_planner_learning_gap_chartsCountOrderByAggregateInput\n    _avg?: study_planner_learning_gap_chartsAvgOrderByAggregateInput\n    _max?: study_planner_learning_gap_chartsMaxOrderByAggregateInput\n    _min?: study_planner_learning_gap_chartsMinOrderByAggregateInput\n    _sum?: study_planner_learning_gap_chartsSumOrderByAggregateInput\n  }\n\n  export type study_planner_learning_gap_chartsScalarWhereWithAggregatesInput = {\n    AND?: study_planner_learning_gap_chartsScalarWhereWithAggregatesInput | study_planner_learning_gap_chartsScalarWhereWithAggregatesInput[]\n    OR?: study_planner_learning_gap_chartsScalarWhereWithAggregatesInput[]\n    NOT?: study_planner_learning_gap_chartsScalarWhereWithAggregatesInput | study_planner_learning_gap_chartsScalarWhereWithAggregatesInput[]\n    id?: UuidWithAggregatesFilter<\"study_planner_learning_gap_charts\"> | string\n    student_id?: UuidWithAggregatesFilter<\"study_planner_learning_gap_charts\"> | string\n    subject_category_id?: UuidWithAggregatesFilter<\"study_planner_learning_gap_charts\"> | string\n    gap_metric?: FloatWithAggregatesFilter<\"study_planner_learning_gap_charts\"> | number\n    created_at?: DateTimeWithAggregatesFilter<\"study_planner_learning_gap_charts\"> | Date | string\n    updated_at?: DateTimeWithAggregatesFilter<\"study_planner_learning_gap_charts\"> | Date | string\n  }\n\n  export type study_planner_study_phasesCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesCreateManyInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_phasesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_subject_categoriesCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutSubjectCategoryInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutSubjectCategoryInput\n  }\n\n  export type study_planner_subject_categoriesUncheckedCreateInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutSubjectCategoryInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutSubjectCategoryInput\n  }\n\n  export type study_planner_subject_categoriesUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutSubjectCategoryNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutSubjectCategoryNestedInput\n  }\n\n  export type study_planner_subject_categoriesUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutSubjectCategoryNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutSubjectCategoryNestedInput\n  }\n\n  export type study_planner_subject_categoriesCreateManyInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_subject_categoriesUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_subject_categoriesUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_studentsCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsCreateManyInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_studentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_studentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_tasksCreateInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksCreateManyInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_tasksUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_task_progressCreateInput = {\n    id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_progressInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_task_progressInput\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateInput = {\n    id: string\n    study_task_id: string\n    study_phase_id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressCreateManyInput = {\n    id: string\n    study_task_id: string\n    study_phase_id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_attachmentsCreateInput = {\n    id: string\n    file_type: string\n    file_url: string\n    created_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_attachmentsInput\n  }\n\n  export type study_planner_attachmentsUncheckedCreateInput = {\n    id: string\n    study_task_id: string\n    file_type: string\n    file_url: string\n    created_at: Date | string\n  }\n\n  export type study_planner_attachmentsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_attachmentsNestedInput\n  }\n\n  export type study_planner_attachmentsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_attachmentsCreateManyInput = {\n    id: string\n    study_task_id: string\n    file_type: string\n    file_url: string\n    created_at: Date | string\n  }\n\n  export type study_planner_attachmentsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_attachmentsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_memosCreateInput = {\n    id: string\n    memo_text: string\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_memosInput\n  }\n\n  export type study_planner_memosUncheckedCreateInput = {\n    id: string\n    study_task_id: string\n    memo_text: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_memosUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_memosNestedInput\n  }\n\n  export type study_planner_memosUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_memosCreateManyInput = {\n    id: string\n    study_task_id: string\n    memo_text: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_memosUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_memosUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_task_alarmsCreateInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_task_alarmsInput\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_task_alarmsInput\n  }\n\n  export type study_planner_task_alarmsUncheckedCreateInput = {\n    id: string\n    student_id: string\n    study_task_id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_task_alarmsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_task_alarmsNestedInput\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_task_alarmsNestedInput\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_task_alarmsCreateManyInput = {\n    id: string\n    student_id: string\n    study_task_id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_task_alarmsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateInput = {\n    id: string\n    title: string\n    due_time: Date | string\n    description?: string | null\n    active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_general_remindersInput\n  }\n\n  export type study_planner_general_remindersUncheckedCreateInput = {\n    id: string\n    student_id: string\n    title: string\n    due_time: Date | string\n    description?: string | null\n    active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_general_remindersNestedInput\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateManyInput = {\n    id: string\n    student_id: string\n    title: string\n    due_time: Date | string\n    description?: string | null\n    active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_progress_analyticsCreateInput = {\n    id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_progress_analyticsInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_progress_analyticsInput\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedCreateInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_progress_analyticsNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_progress_analyticsNestedInput\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_progress_analyticsCreateManyInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsCreateInput = {\n    id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_learning_gap_chartsInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_learning_gap_chartsInput\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedCreateInput = {\n    id: string\n    student_id: string\n    subject_category_id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_learning_gap_chartsUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_learning_gap_chartsNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_learning_gap_chartsNestedInput\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsCreateManyInput = {\n    id: string\n    student_id: string\n    subject_category_id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_learning_gap_chartsUpdateManyMutationInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateManyInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type UuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type StringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type StringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type DateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type Study_planner_study_tasksListRelationFilter = {\n    every?: study_planner_study_tasksWhereInput\n    some?: study_planner_study_tasksWhereInput\n    none?: study_planner_study_tasksWhereInput\n  }\n\n  export type Study_planner_study_task_progressListRelationFilter = {\n    every?: study_planner_study_task_progressWhereInput\n    some?: study_planner_study_task_progressWhereInput\n    none?: study_planner_study_task_progressWhereInput\n  }\n\n  export type Study_planner_study_progress_analyticsListRelationFilter = {\n    every?: study_planner_study_progress_analyticsWhereInput\n    some?: study_planner_study_progress_analyticsWhereInput\n    none?: study_planner_study_progress_analyticsWhereInput\n  }\n\n  export type SortOrderInput = {\n    sort: SortOrder\n    nulls?: NullsOrder\n  }\n\n  export type study_planner_study_tasksOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_task_progressOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_progress_analyticsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_phasesCountOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_phasesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_phasesMinOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type UuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    mode?: QueryMode\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type Study_planner_learning_gap_chartsListRelationFilter = {\n    every?: study_planner_learning_gap_chartsWhereInput\n    some?: study_planner_learning_gap_chartsWhereInput\n    none?: study_planner_learning_gap_chartsWhereInput\n  }\n\n  export type study_planner_learning_gap_chartsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_subject_categoriesCountOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_subject_categoriesMaxOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_subject_categoriesMinOrderByAggregateInput = {\n    id?: SortOrder\n    code?: SortOrder\n    name?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type DateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type Study_planner_task_alarmsListRelationFilter = {\n    every?: study_planner_task_alarmsWhereInput\n    some?: study_planner_task_alarmsWhereInput\n    none?: study_planner_task_alarmsWhereInput\n  }\n\n  export type Study_planner_general_remindersListRelationFilter = {\n    every?: study_planner_general_remindersWhereInput\n    some?: study_planner_general_remindersWhereInput\n    none?: study_planner_general_remindersWhereInput\n  }\n\n  export type study_planner_task_alarmsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_general_remindersOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_studentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_studentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_studentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    email?: SortOrder\n    password_hash?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type Study_planner_studentsScalarRelationFilter = {\n    is?: study_planner_studentsWhereInput\n    isNot?: study_planner_studentsWhereInput\n  }\n\n  export type Study_planner_study_phasesScalarRelationFilter = {\n    is?: study_planner_study_phasesWhereInput\n    isNot?: study_planner_study_phasesWhereInput\n  }\n\n  export type Study_planner_subject_categoriesScalarRelationFilter = {\n    is?: study_planner_subject_categoriesWhereInput\n    isNot?: study_planner_subject_categoriesWhereInput\n  }\n\n  export type Study_planner_attachmentsListRelationFilter = {\n    every?: study_planner_attachmentsWhereInput\n    some?: study_planner_attachmentsWhereInput\n    none?: study_planner_attachmentsWhereInput\n  }\n\n  export type Study_planner_memosListRelationFilter = {\n    every?: study_planner_memosWhereInput\n    some?: study_planner_memosWhereInput\n    none?: study_planner_memosWhereInput\n  }\n\n  export type study_planner_attachmentsOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_memosOrderByRelationAggregateInput = {\n    _count?: SortOrder\n  }\n\n  export type study_planner_study_tasksStudent_idTitleCompoundUniqueInput = {\n    student_id: string\n    title: string\n  }\n\n  export type study_planner_study_tasksCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    subject_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_study_tasksMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    subject_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_study_tasksMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    subject_category_id?: SortOrder\n    title?: SortOrder\n    description?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type Study_planner_study_tasksScalarRelationFilter = {\n    is?: study_planner_study_tasksWhereInput\n    isNot?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_task_progressStudy_task_idStudy_phase_idCompoundUniqueInput = {\n    study_task_id: string\n    study_phase_id: string\n  }\n\n  export type study_planner_study_task_progressCountOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_at?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_progressMaxOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_at?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_task_progressMinOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_at?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_attachmentsCountOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_type?: SortOrder\n    file_url?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type study_planner_attachmentsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_type?: SortOrder\n    file_url?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type study_planner_attachmentsMinOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    file_type?: SortOrder\n    file_url?: SortOrder\n    created_at?: SortOrder\n  }\n\n  export type study_planner_memosCountOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    memo_text?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_memosMaxOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    memo_text?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_memosMinOrderByAggregateInput = {\n    id?: SortOrder\n    study_task_id?: SortOrder\n    memo_text?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_task_alarmsStudent_idStudy_task_idAlarm_timeCompoundUniqueInput = {\n    student_id: string\n    study_task_id: string\n    alarm_time: Date | string\n  }\n\n  export type study_planner_task_alarmsCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_task_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_task_alarmsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_task_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_task_alarmsMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_task_id?: SortOrder\n    title?: SortOrder\n    alarm_time?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type BoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type study_planner_general_remindersStudent_idTitleDue_timeCompoundUniqueInput = {\n    student_id: string\n    title: string\n    due_time: Date | string\n  }\n\n  export type study_planner_general_remindersCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    due_time?: SortOrder\n    description?: SortOrder\n    active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_general_remindersMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    due_time?: SortOrder\n    description?: SortOrder\n    active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type study_planner_general_remindersMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    title?: SortOrder\n    due_time?: SortOrder\n    description?: SortOrder\n    active?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n    deleted_at?: SortOrder\n  }\n\n  export type BoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type IntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type FloatFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatFilter<$PrismaModel> | number\n  }\n\n  export type study_planner_study_progress_analyticsStudent_idStudy_phase_idCompoundUniqueInput = {\n    student_id: string\n    study_phase_id: string\n  }\n\n  export type study_planner_study_progress_analyticsCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_progress_analyticsAvgOrderByAggregateInput = {\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n  }\n\n  export type study_planner_study_progress_analyticsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_progress_analyticsMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    study_phase_id?: SortOrder\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_study_progress_analyticsSumOrderByAggregateInput = {\n    completed_tasks_count?: SortOrder\n    total_tasks_count?: SortOrder\n    completion_rate?: SortOrder\n  }\n\n  export type IntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type FloatWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedFloatFilter<$PrismaModel>\n    _min?: NestedFloatFilter<$PrismaModel>\n    _max?: NestedFloatFilter<$PrismaModel>\n  }\n\n  export type study_planner_learning_gap_chartsStudent_idSubject_category_idCompoundUniqueInput = {\n    student_id: string\n    subject_category_id: string\n  }\n\n  export type study_planner_learning_gap_chartsCountOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    subject_category_id?: SortOrder\n    gap_metric?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_learning_gap_chartsAvgOrderByAggregateInput = {\n    gap_metric?: SortOrder\n  }\n\n  export type study_planner_learning_gap_chartsMaxOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    subject_category_id?: SortOrder\n    gap_metric?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_learning_gap_chartsMinOrderByAggregateInput = {\n    id?: SortOrder\n    student_id?: SortOrder\n    subject_category_id?: SortOrder\n    gap_metric?: SortOrder\n    created_at?: SortOrder\n    updated_at?: SortOrder\n  }\n\n  export type study_planner_learning_gap_chartsSumOrderByAggregateInput = {\n    gap_metric?: SortOrder\n  }\n\n  export type study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_study_progress_analyticsCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudyPhaseInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudyPhaseInputEnvelope\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n  }\n\n  export type StringFieldUpdateOperationsInput = {\n    set?: string\n  }\n\n  export type NullableStringFieldUpdateOperationsInput = {\n    set?: string | null\n  }\n\n  export type DateTimeFieldUpdateOperationsInput = {\n    set?: Date | string\n  }\n\n  export type study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_study_progress_analyticsUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    disconnect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    delete?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    update?: study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_progress_analyticsScalarWhereInput | study_planner_study_progress_analyticsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_tasksCreateWithoutStudyPhaseInput[] | study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput | study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_tasksCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_task_progressCreateWithoutStudyPhaseInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput | study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudyPhaseNestedInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput> | study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput[]\n    upsert?: study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudyPhaseInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudyPhaseInputEnvelope\n    set?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    disconnect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    delete?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    update?: study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudyPhaseInput | study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudyPhaseInput[]\n    updateMany?: study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudyPhaseInput | study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudyPhaseInput[]\n    deleteMany?: study_planner_study_progress_analyticsScalarWhereInput | study_planner_study_progress_analyticsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksCreateNestedManyWithoutSubjectCategoryInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput> | study_planner_study_tasksCreateWithoutSubjectCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput | study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManySubjectCategoryInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_learning_gap_chartsCreateNestedManyWithoutSubjectCategoryInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput> | study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput | study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManySubjectCategoryInputEnvelope\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedCreateNestedManyWithoutSubjectCategoryInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput> | study_planner_study_tasksCreateWithoutSubjectCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput | study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManySubjectCategoryInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutSubjectCategoryInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput> | study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput | study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManySubjectCategoryInputEnvelope\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUpdateManyWithoutSubjectCategoryNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput> | study_planner_study_tasksCreateWithoutSubjectCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput | study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutSubjectCategoryInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutSubjectCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManySubjectCategoryInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutSubjectCategoryInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutSubjectCategoryInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutSubjectCategoryInput | study_planner_study_tasksUpdateManyWithWhereWithoutSubjectCategoryInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_learning_gap_chartsUpdateManyWithoutSubjectCategoryNestedInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput> | study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput | study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput[]\n    upsert?: study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutSubjectCategoryInput | study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutSubjectCategoryInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManySubjectCategoryInputEnvelope\n    set?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    disconnect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    delete?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    update?: study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutSubjectCategoryInput | study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutSubjectCategoryInput[]\n    updateMany?: study_planner_learning_gap_chartsUpdateManyWithWhereWithoutSubjectCategoryInput | study_planner_learning_gap_chartsUpdateManyWithWhereWithoutSubjectCategoryInput[]\n    deleteMany?: study_planner_learning_gap_chartsScalarWhereInput | study_planner_learning_gap_chartsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutSubjectCategoryNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput> | study_planner_study_tasksCreateWithoutSubjectCategoryInput[] | study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput | study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutSubjectCategoryInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutSubjectCategoryInput[]\n    createMany?: study_planner_study_tasksCreateManySubjectCategoryInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutSubjectCategoryInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutSubjectCategoryInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutSubjectCategoryInput | study_planner_study_tasksUpdateManyWithWhereWithoutSubjectCategoryInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateManyWithoutSubjectCategoryNestedInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput> | study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput | study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput[]\n    upsert?: study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutSubjectCategoryInput | study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutSubjectCategoryInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManySubjectCategoryInputEnvelope\n    set?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    disconnect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    delete?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    update?: study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutSubjectCategoryInput | study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutSubjectCategoryInput[]\n    updateMany?: study_planner_learning_gap_chartsUpdateManyWithWhereWithoutSubjectCategoryInput | study_planner_learning_gap_chartsUpdateManyWithWhereWithoutSubjectCategoryInput[]\n    deleteMany?: study_planner_learning_gap_chartsScalarWhereInput | study_planner_learning_gap_chartsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_task_alarmsCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudentInput, study_planner_task_alarmsUncheckedCreateWithoutStudentInput> | study_planner_task_alarmsCreateWithoutStudentInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudentInput | study_planner_task_alarmsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudentInputEnvelope\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n  }\n\n  export type study_planner_general_remindersCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n  }\n\n  export type study_planner_study_progress_analyticsCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput> | study_planner_study_progress_analyticsCreateWithoutStudentInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudentInputEnvelope\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n  }\n\n  export type study_planner_learning_gap_chartsCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput> | study_planner_learning_gap_chartsCreateWithoutStudentInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput | study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManyStudentInputEnvelope\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n  }\n\n  export type study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudentInput, study_planner_task_alarmsUncheckedCreateWithoutStudentInput> | study_planner_task_alarmsCreateWithoutStudentInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudentInput | study_planner_task_alarmsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudentInputEnvelope\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n  }\n\n  export type study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput> | study_planner_study_progress_analyticsCreateWithoutStudentInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudentInputEnvelope\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutStudentInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput> | study_planner_learning_gap_chartsCreateWithoutStudentInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput | study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManyStudentInputEnvelope\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n  }\n\n  export type NullableDateTimeFieldUpdateOperationsInput = {\n    set?: Date | string | null\n  }\n\n  export type study_planner_study_tasksUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_task_alarmsUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudentInput, study_planner_task_alarmsUncheckedCreateWithoutStudentInput> | study_planner_task_alarmsCreateWithoutStudentInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudentInput | study_planner_task_alarmsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudentInput | study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudentInputEnvelope\n    set?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    disconnect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    delete?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    update?: study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudentInput | study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_task_alarmsUpdateManyWithWhereWithoutStudentInput | study_planner_task_alarmsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_task_alarmsScalarWhereInput | study_planner_task_alarmsScalarWhereInput[]\n  }\n\n  export type study_planner_general_remindersUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    set?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    disconnect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    delete?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    update?: study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput | study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n  }\n\n  export type study_planner_study_progress_analyticsUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput> | study_planner_study_progress_analyticsCreateWithoutStudentInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudentInput | study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudentInputEnvelope\n    set?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    disconnect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    delete?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    update?: study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudentInput | study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudentInput | study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_study_progress_analyticsScalarWhereInput | study_planner_study_progress_analyticsScalarWhereInput[]\n  }\n\n  export type study_planner_learning_gap_chartsUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput> | study_planner_learning_gap_chartsCreateWithoutStudentInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput | study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutStudentInput | study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManyStudentInputEnvelope\n    set?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    disconnect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    delete?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    update?: study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutStudentInput | study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_learning_gap_chartsUpdateManyWithWhereWithoutStudentInput | study_planner_learning_gap_chartsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_learning_gap_chartsScalarWhereInput | study_planner_learning_gap_chartsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput> | study_planner_study_tasksCreateWithoutStudentInput[] | study_planner_study_tasksUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudentInput | study_planner_study_tasksCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_study_tasksCreateManyStudentInputEnvelope\n    set?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    disconnect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    delete?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    connect?: study_planner_study_tasksWhereUniqueInput | study_planner_study_tasksWhereUniqueInput[]\n    update?: study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput | study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput | study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudentInput, study_planner_task_alarmsUncheckedCreateWithoutStudentInput> | study_planner_task_alarmsCreateWithoutStudentInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudentInput | study_planner_task_alarmsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudentInput | study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudentInputEnvelope\n    set?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    disconnect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    delete?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    update?: study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudentInput | study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_task_alarmsUpdateManyWithWhereWithoutStudentInput | study_planner_task_alarmsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_task_alarmsScalarWhereInput | study_planner_task_alarmsScalarWhereInput[]\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput> | study_planner_general_remindersCreateWithoutStudentInput[] | study_planner_general_remindersUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_general_remindersCreateOrConnectWithoutStudentInput | study_planner_general_remindersCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_general_remindersCreateManyStudentInputEnvelope\n    set?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    disconnect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    delete?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    connect?: study_planner_general_remindersWhereUniqueInput | study_planner_general_remindersWhereUniqueInput[]\n    update?: study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput | study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput | study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_study_progress_analyticsCreateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput> | study_planner_study_progress_analyticsCreateWithoutStudentInput[] | study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput | study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudentInput | study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_study_progress_analyticsCreateManyStudentInputEnvelope\n    set?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    disconnect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    delete?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    connect?: study_planner_study_progress_analyticsWhereUniqueInput | study_planner_study_progress_analyticsWhereUniqueInput[]\n    update?: study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudentInput | study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudentInput | study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_study_progress_analyticsScalarWhereInput | study_planner_study_progress_analyticsScalarWhereInput[]\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentNestedInput = {\n    create?: XOR<study_planner_learning_gap_chartsCreateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput> | study_planner_learning_gap_chartsCreateWithoutStudentInput[] | study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput[]\n    connectOrCreate?: study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput | study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput[]\n    upsert?: study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutStudentInput | study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutStudentInput[]\n    createMany?: study_planner_learning_gap_chartsCreateManyStudentInputEnvelope\n    set?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    disconnect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    delete?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    connect?: study_planner_learning_gap_chartsWhereUniqueInput | study_planner_learning_gap_chartsWhereUniqueInput[]\n    update?: study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutStudentInput | study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutStudentInput[]\n    updateMany?: study_planner_learning_gap_chartsUpdateManyWithWhereWithoutStudentInput | study_planner_learning_gap_chartsUpdateManyWithWhereWithoutStudentInput[]\n    deleteMany?: study_planner_learning_gap_chartsScalarWhereInput | study_planner_learning_gap_chartsScalarWhereInput[]\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n  }\n\n  export type study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput = {\n    create?: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_subject_categoriesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_subject_categoriesWhereUniqueInput\n  }\n\n  export type study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_attachmentsCreateWithoutStudyTaskInput, study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_attachmentsCreateWithoutStudyTaskInput[] | study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_attachmentsCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n  }\n\n  export type study_planner_memosCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_memosCreateWithoutStudyTaskInput, study_planner_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_memosCreateWithoutStudyTaskInput[] | study_planner_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_memosCreateOrConnectWithoutStudyTaskInput | study_planner_memosCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_memosCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n  }\n\n  export type study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput> | study_planner_task_alarmsCreateWithoutStudyTaskInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput | study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n  }\n\n  export type study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_attachmentsCreateWithoutStudyTaskInput, study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_attachmentsCreateWithoutStudyTaskInput[] | study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_attachmentsCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n  }\n\n  export type study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_memosCreateWithoutStudyTaskInput, study_planner_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_memosCreateWithoutStudyTaskInput[] | study_planner_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_memosCreateOrConnectWithoutStudyTaskInput | study_planner_memosCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_memosCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n  }\n\n  export type study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput> | study_planner_task_alarmsCreateWithoutStudyTaskInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput | study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudyTaskInputEnvelope\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_study_tasksInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput, study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    upsert?: study_planner_study_phasesUpsertWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput>, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput = {\n    create?: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    connectOrCreate?: study_planner_subject_categoriesCreateOrConnectWithoutStudy_planner_study_tasksInput\n    upsert?: study_planner_subject_categoriesUpsertWithoutStudy_planner_study_tasksInput\n    connect?: study_planner_subject_categoriesWhereUniqueInput\n    update?: XOR<XOR<study_planner_subject_categoriesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUpdateWithoutStudy_planner_study_tasksInput>, study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_attachmentsCreateWithoutStudyTaskInput, study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_attachmentsCreateWithoutStudyTaskInput[] | study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_attachmentsCreateManyStudyTaskInputEnvelope\n    set?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    disconnect?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    delete?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    connect?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    update?: study_planner_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_attachmentsUpdateManyWithWhereWithoutStudyTaskInput | study_planner_attachmentsUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_attachmentsScalarWhereInput | study_planner_attachmentsScalarWhereInput[]\n  }\n\n  export type study_planner_memosUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_memosCreateWithoutStudyTaskInput, study_planner_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_memosCreateWithoutStudyTaskInput[] | study_planner_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_memosCreateOrConnectWithoutStudyTaskInput | study_planner_memosCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_memosUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_memosUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_memosCreateManyStudyTaskInputEnvelope\n    set?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    disconnect?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    delete?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    connect?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    update?: study_planner_memosUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_memosUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_memosUpdateManyWithWhereWithoutStudyTaskInput | study_planner_memosUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_memosScalarWhereInput | study_planner_memosScalarWhereInput[]\n  }\n\n  export type study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput> | study_planner_task_alarmsCreateWithoutStudyTaskInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput | study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudyTaskInputEnvelope\n    set?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    disconnect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    delete?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    update?: study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_task_alarmsUpdateManyWithWhereWithoutStudyTaskInput | study_planner_task_alarmsUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_task_alarmsScalarWhereInput | study_planner_task_alarmsScalarWhereInput[]\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput> | study_planner_study_task_progressCreateWithoutStudyTaskInput[] | study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput | study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_study_task_progressCreateManyStudyTaskInputEnvelope\n    set?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    disconnect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    delete?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    connect?: study_planner_study_task_progressWhereUniqueInput | study_planner_study_task_progressWhereUniqueInput[]\n    update?: study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput | study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n  }\n\n  export type study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_attachmentsCreateWithoutStudyTaskInput, study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput> | study_planner_attachmentsCreateWithoutStudyTaskInput[] | study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput | study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_attachmentsCreateManyStudyTaskInputEnvelope\n    set?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    disconnect?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    delete?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    connect?: study_planner_attachmentsWhereUniqueInput | study_planner_attachmentsWhereUniqueInput[]\n    update?: study_planner_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_attachmentsUpdateManyWithWhereWithoutStudyTaskInput | study_planner_attachmentsUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_attachmentsScalarWhereInput | study_planner_attachmentsScalarWhereInput[]\n  }\n\n  export type study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_memosCreateWithoutStudyTaskInput, study_planner_memosUncheckedCreateWithoutStudyTaskInput> | study_planner_memosCreateWithoutStudyTaskInput[] | study_planner_memosUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_memosCreateOrConnectWithoutStudyTaskInput | study_planner_memosCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_memosUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_memosUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_memosCreateManyStudyTaskInputEnvelope\n    set?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    disconnect?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    delete?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    connect?: study_planner_memosWhereUniqueInput | study_planner_memosWhereUniqueInput[]\n    update?: study_planner_memosUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_memosUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_memosUpdateManyWithWhereWithoutStudyTaskInput | study_planner_memosUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_memosScalarWhereInput | study_planner_memosScalarWhereInput[]\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput = {\n    create?: XOR<study_planner_task_alarmsCreateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput> | study_planner_task_alarmsCreateWithoutStudyTaskInput[] | study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput[]\n    connectOrCreate?: study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput | study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput[]\n    upsert?: study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudyTaskInput | study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudyTaskInput[]\n    createMany?: study_planner_task_alarmsCreateManyStudyTaskInputEnvelope\n    set?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    disconnect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    delete?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    connect?: study_planner_task_alarmsWhereUniqueInput | study_planner_task_alarmsWhereUniqueInput[]\n    update?: study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudyTaskInput | study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudyTaskInput[]\n    updateMany?: study_planner_task_alarmsUpdateManyWithWhereWithoutStudyTaskInput | study_planner_task_alarmsUpdateManyWithWhereWithoutStudyTaskInput[]\n    deleteMany?: study_planner_task_alarmsScalarWhereInput | study_planner_task_alarmsScalarWhereInput[]\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_progressInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_task_progressInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_task_progressInput\n    upsert?: study_planner_study_phasesUpsertWithoutStudy_planner_study_task_progressInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput>, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_attachmentsInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_attachmentsInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_attachmentsInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_attachmentsNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_attachmentsInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_attachmentsInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_attachmentsInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUpdateWithoutStudy_planner_attachmentsInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_attachmentsInput>\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_memosInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_memosInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_memosInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_memosNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_memosInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_memosInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_memosInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_memosInput, study_planner_study_tasksUpdateWithoutStudy_planner_memosInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_memosInput>\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_task_alarmsInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_task_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_task_alarmsInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_study_tasksCreateNestedOneWithoutStudy_planner_task_alarmsInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_task_alarmsInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_task_alarmsNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_task_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_task_alarmsInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_task_alarmsInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_task_alarmsInput, study_planner_studentsUpdateWithoutStudy_planner_task_alarmsInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_task_alarmsInput>\n  }\n\n  export type study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_task_alarmsNestedInput = {\n    create?: XOR<study_planner_study_tasksCreateWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n    connectOrCreate?: study_planner_study_tasksCreateOrConnectWithoutStudy_planner_task_alarmsInput\n    upsert?: study_planner_study_tasksUpsertWithoutStudy_planner_task_alarmsInput\n    connect?: study_planner_study_tasksWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUpdateWithoutStudy_planner_task_alarmsInput>, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_task_alarmsInput>\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_general_remindersInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_general_remindersInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type BoolFieldUpdateOperationsInput = {\n    set?: boolean\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_general_remindersNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_general_remindersInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_general_remindersInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_general_remindersInput, study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput>\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_study_progress_analyticsInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_study_progress_analyticsInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_progress_analyticsInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_progress_analyticsInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n  }\n\n  export type IntFieldUpdateOperationsInput = {\n    set?: number\n    increment?: number\n    decrement?: number\n    multiply?: number\n    divide?: number\n  }\n\n  export type FloatFieldUpdateOperationsInput = {\n    set?: number\n    increment?: number\n    decrement?: number\n    multiply?: number\n    divide?: number\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_progress_analyticsNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_study_progress_analyticsInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_study_progress_analyticsInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUpdateWithoutStudy_planner_study_progress_analyticsInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput>\n  }\n\n  export type study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_progress_analyticsNestedInput = {\n    create?: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n    connectOrCreate?: study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_progress_analyticsInput\n    upsert?: study_planner_study_phasesUpsertWithoutStudy_planner_study_progress_analyticsInput\n    connect?: study_planner_study_phasesWhereUniqueInput\n    update?: XOR<XOR<study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUpdateWithoutStudy_planner_study_progress_analyticsInput>, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput>\n  }\n\n  export type study_planner_studentsCreateNestedOneWithoutStudy_planner_learning_gap_chartsInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_learning_gap_chartsInput\n    connect?: study_planner_studentsWhereUniqueInput\n  }\n\n  export type study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_learning_gap_chartsInput = {\n    create?: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n    connectOrCreate?: study_planner_subject_categoriesCreateOrConnectWithoutStudy_planner_learning_gap_chartsInput\n    connect?: study_planner_subject_categoriesWhereUniqueInput\n  }\n\n  export type study_planner_studentsUpdateOneRequiredWithoutStudy_planner_learning_gap_chartsNestedInput = {\n    create?: XOR<study_planner_studentsCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n    connectOrCreate?: study_planner_studentsCreateOrConnectWithoutStudy_planner_learning_gap_chartsInput\n    upsert?: study_planner_studentsUpsertWithoutStudy_planner_learning_gap_chartsInput\n    connect?: study_planner_studentsWhereUniqueInput\n    update?: XOR<XOR<study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUpdateWithoutStudy_planner_learning_gap_chartsInput>, study_planner_studentsUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput>\n  }\n\n  export type study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_learning_gap_chartsNestedInput = {\n    create?: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n    connectOrCreate?: study_planner_subject_categoriesCreateOrConnectWithoutStudy_planner_learning_gap_chartsInput\n    upsert?: study_planner_subject_categoriesUpsertWithoutStudy_planner_learning_gap_chartsInput\n    connect?: study_planner_subject_categoriesWhereUniqueInput\n    update?: XOR<XOR<study_planner_subject_categoriesUpdateToOneWithWhereWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUpdateWithoutStudy_planner_learning_gap_chartsInput>, study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput>\n  }\n\n  export type NestedUuidFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringFilter<$PrismaModel> | string\n  }\n\n  export type NestedStringNullableFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableFilter<$PrismaModel> | string | null\n  }\n\n  export type NestedDateTimeFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeFilter<$PrismaModel> | Date | string\n  }\n\n  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedIntFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntFilter<$PrismaModel> | number\n  }\n\n  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel>\n    in?: string[] | ListStringFieldRefInput<$PrismaModel>\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedStringFilter<$PrismaModel>\n    _max?: NestedStringFilter<$PrismaModel>\n  }\n\n  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: string | StringFieldRefInput<$PrismaModel> | null\n    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null\n    lt?: string | StringFieldRefInput<$PrismaModel>\n    lte?: string | StringFieldRefInput<$PrismaModel>\n    gt?: string | StringFieldRefInput<$PrismaModel>\n    gte?: string | StringFieldRefInput<$PrismaModel>\n    contains?: string | StringFieldRefInput<$PrismaModel>\n    startsWith?: string | StringFieldRefInput<$PrismaModel>\n    endsWith?: string | StringFieldRefInput<$PrismaModel>\n    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedStringNullableFilter<$PrismaModel>\n    _max?: NestedStringNullableFilter<$PrismaModel>\n  }\n\n  export type NestedIntNullableFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel> | null\n    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntNullableFilter<$PrismaModel> | number | null\n  }\n\n  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedDateTimeFilter<$PrismaModel>\n    _max?: NestedDateTimeFilter<$PrismaModel>\n  }\n\n  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null\n  }\n\n  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null\n    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null\n    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>\n    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null\n    _count?: NestedIntNullableFilter<$PrismaModel>\n    _min?: NestedDateTimeNullableFilter<$PrismaModel>\n    _max?: NestedDateTimeNullableFilter<$PrismaModel>\n  }\n\n  export type NestedBoolFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolFilter<$PrismaModel> | boolean\n  }\n\n  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: boolean | BooleanFieldRefInput<$PrismaModel>\n    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean\n    _count?: NestedIntFilter<$PrismaModel>\n    _min?: NestedBoolFilter<$PrismaModel>\n    _max?: NestedBoolFilter<$PrismaModel>\n  }\n\n  export type NestedFloatFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatFilter<$PrismaModel> | number\n  }\n\n  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | IntFieldRefInput<$PrismaModel>\n    in?: number[] | ListIntFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>\n    lt?: number | IntFieldRefInput<$PrismaModel>\n    lte?: number | IntFieldRefInput<$PrismaModel>\n    gt?: number | IntFieldRefInput<$PrismaModel>\n    gte?: number | IntFieldRefInput<$PrismaModel>\n    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedIntFilter<$PrismaModel>\n    _min?: NestedIntFilter<$PrismaModel>\n    _max?: NestedIntFilter<$PrismaModel>\n  }\n\n  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {\n    equals?: number | FloatFieldRefInput<$PrismaModel>\n    in?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>\n    lt?: number | FloatFieldRefInput<$PrismaModel>\n    lte?: number | FloatFieldRefInput<$PrismaModel>\n    gt?: number | FloatFieldRefInput<$PrismaModel>\n    gte?: number | FloatFieldRefInput<$PrismaModel>\n    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number\n    _count?: NestedIntFilter<$PrismaModel>\n    _avg?: NestedFloatFilter<$PrismaModel>\n    _sum?: NestedFloatFilter<$PrismaModel>\n    _min?: NestedFloatFilter<$PrismaModel>\n    _max?: NestedFloatFilter<$PrismaModel>\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudyPhaseInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput = {\n    id: string\n    student_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksCreateManyStudyPhaseInputEnvelope = {\n    data: study_planner_study_tasksCreateManyStudyPhaseInput | study_planner_study_tasksCreateManyStudyPhaseInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_task_progressCreateWithoutStudyPhaseInput = {\n    id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_study_task_progressInput\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput = {\n    id: string\n    study_task_id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressCreateOrConnectWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyPhaseInputEnvelope = {\n    data: study_planner_study_task_progressCreateManyStudyPhaseInput | study_planner_study_task_progressCreateManyStudyPhaseInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput = {\n    id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_progress_analyticsInput\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput = {\n    id: string\n    student_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_progress_analyticsCreateOrConnectWithoutStudyPhaseInput = {\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    create: XOR<study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_progress_analyticsCreateManyStudyPhaseInputEnvelope = {\n    data: study_planner_study_progress_analyticsCreateManyStudyPhaseInput | study_planner_study_progress_analyticsCreateManyStudyPhaseInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_tasksUpsertWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    update: XOR<study_planner_study_tasksUpdateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedUpdateWithoutStudyPhaseInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudyPhaseInput, study_planner_study_tasksUncheckedUpdateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksUpdateManyWithWhereWithoutStudyPhaseInput = {\n    where: study_planner_study_tasksScalarWhereInput\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_tasksScalarWhereInput = {\n    AND?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n    OR?: study_planner_study_tasksScalarWhereInput[]\n    NOT?: study_planner_study_tasksScalarWhereInput | study_planner_study_tasksScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    student_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    subject_category_id?: UuidFilter<\"study_planner_study_tasks\"> | string\n    title?: StringFilter<\"study_planner_study_tasks\"> | string\n    description?: StringNullableFilter<\"study_planner_study_tasks\"> | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_tasks\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_study_tasks\"> | Date | string | null\n  }\n\n  export type study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    update: XOR<study_planner_study_task_progressUpdateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyPhaseInput>\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    data: XOR<study_planner_study_task_progressUpdateWithoutStudyPhaseInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithWhereWithoutStudyPhaseInput = {\n    where: study_planner_study_task_progressScalarWhereInput\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_task_progressScalarWhereInput = {\n    AND?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n    OR?: study_planner_study_task_progressScalarWhereInput[]\n    NOT?: study_planner_study_task_progressScalarWhereInput | study_planner_study_task_progressScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_task_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_task_progress\"> | string\n    completed_at?: DateTimeNullableFilter<\"study_planner_study_task_progress\"> | Date | string | null\n    created_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_task_progress\"> | Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    update: XOR<study_planner_study_progress_analyticsUpdateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedUpdateWithoutStudyPhaseInput>\n    create: XOR<study_planner_study_progress_analyticsCreateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudyPhaseInput = {\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    data: XOR<study_planner_study_progress_analyticsUpdateWithoutStudyPhaseInput, study_planner_study_progress_analyticsUncheckedUpdateWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudyPhaseInput = {\n    where: study_planner_study_progress_analyticsScalarWhereInput\n    data: XOR<study_planner_study_progress_analyticsUpdateManyMutationInput, study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudyPhaseInput>\n  }\n\n  export type study_planner_study_progress_analyticsScalarWhereInput = {\n    AND?: study_planner_study_progress_analyticsScalarWhereInput | study_planner_study_progress_analyticsScalarWhereInput[]\n    OR?: study_planner_study_progress_analyticsScalarWhereInput[]\n    NOT?: study_planner_study_progress_analyticsScalarWhereInput | study_planner_study_progress_analyticsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    student_id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    study_phase_id?: UuidFilter<\"study_planner_study_progress_analytics\"> | string\n    completed_tasks_count?: IntFilter<\"study_planner_study_progress_analytics\"> | number\n    total_tasks_count?: IntFilter<\"study_planner_study_progress_analytics\"> | number\n    completion_rate?: FloatFilter<\"study_planner_study_progress_analytics\"> | number\n    created_at?: DateTimeFilter<\"study_planner_study_progress_analytics\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_study_progress_analytics\"> | Date | string\n  }\n\n  export type study_planner_study_tasksCreateWithoutSubjectCategoryInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutSubjectCategoryInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_study_tasksCreateManySubjectCategoryInputEnvelope = {\n    data: study_planner_study_tasksCreateManySubjectCategoryInput | study_planner_study_tasksCreateManySubjectCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput = {\n    id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_learning_gap_chartsInput\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput = {\n    id: string\n    student_id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_learning_gap_chartsCreateOrConnectWithoutSubjectCategoryInput = {\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    create: XOR<study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_learning_gap_chartsCreateManySubjectCategoryInputEnvelope = {\n    data: study_planner_learning_gap_chartsCreateManySubjectCategoryInput | study_planner_learning_gap_chartsCreateManySubjectCategoryInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_tasksUpsertWithWhereUniqueWithoutSubjectCategoryInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    update: XOR<study_planner_study_tasksUpdateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedUpdateWithoutSubjectCategoryInput>\n    create: XOR<study_planner_study_tasksCreateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedCreateWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithWhereUniqueWithoutSubjectCategoryInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    data: XOR<study_planner_study_tasksUpdateWithoutSubjectCategoryInput, study_planner_study_tasksUncheckedUpdateWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_study_tasksUpdateManyWithWhereWithoutSubjectCategoryInput = {\n    where: study_planner_study_tasksScalarWhereInput\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutSubjectCategoryInput = {\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    update: XOR<study_planner_learning_gap_chartsUpdateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedUpdateWithoutSubjectCategoryInput>\n    create: XOR<study_planner_learning_gap_chartsCreateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedCreateWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutSubjectCategoryInput = {\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    data: XOR<study_planner_learning_gap_chartsUpdateWithoutSubjectCategoryInput, study_planner_learning_gap_chartsUncheckedUpdateWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_learning_gap_chartsUpdateManyWithWhereWithoutSubjectCategoryInput = {\n    where: study_planner_learning_gap_chartsScalarWhereInput\n    data: XOR<study_planner_learning_gap_chartsUpdateManyMutationInput, study_planner_learning_gap_chartsUncheckedUpdateManyWithoutSubjectCategoryInput>\n  }\n\n  export type study_planner_learning_gap_chartsScalarWhereInput = {\n    AND?: study_planner_learning_gap_chartsScalarWhereInput | study_planner_learning_gap_chartsScalarWhereInput[]\n    OR?: study_planner_learning_gap_chartsScalarWhereInput[]\n    NOT?: study_planner_learning_gap_chartsScalarWhereInput | study_planner_learning_gap_chartsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    student_id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    subject_category_id?: UuidFilter<\"study_planner_learning_gap_charts\"> | string\n    gap_metric?: FloatFilter<\"study_planner_learning_gap_charts\"> | number\n    created_at?: DateTimeFilter<\"study_planner_learning_gap_charts\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_learning_gap_charts\"> | Date | string\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudentInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudentInput = {\n    id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudentInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksCreateManyStudentInputEnvelope = {\n    data: study_planner_study_tasksCreateManyStudentInput | study_planner_study_tasksCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_task_alarmsCreateWithoutStudentInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    studyTask: study_planner_study_tasksCreateNestedOneWithoutStudy_planner_task_alarmsInput\n  }\n\n  export type study_planner_task_alarmsUncheckedCreateWithoutStudentInput = {\n    id: string\n    study_task_id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_task_alarmsCreateOrConnectWithoutStudentInput = {\n    where: study_planner_task_alarmsWhereUniqueInput\n    create: XOR<study_planner_task_alarmsCreateWithoutStudentInput, study_planner_task_alarmsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_task_alarmsCreateManyStudentInputEnvelope = {\n    data: study_planner_task_alarmsCreateManyStudentInput | study_planner_task_alarmsCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_general_remindersCreateWithoutStudentInput = {\n    id: string\n    title: string\n    due_time: Date | string\n    description?: string | null\n    active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersUncheckedCreateWithoutStudentInput = {\n    id: string\n    title: string\n    due_time: Date | string\n    description?: string | null\n    active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateOrConnectWithoutStudentInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    create: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersCreateManyStudentInputEnvelope = {\n    data: study_planner_general_remindersCreateManyStudentInput | study_planner_general_remindersCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_progress_analyticsCreateWithoutStudentInput = {\n    id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_progress_analyticsInput\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput = {\n    id: string\n    study_phase_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_progress_analyticsCreateOrConnectWithoutStudentInput = {\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    create: XOR<study_planner_study_progress_analyticsCreateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_study_progress_analyticsCreateManyStudentInputEnvelope = {\n    data: study_planner_study_progress_analyticsCreateManyStudentInput | study_planner_study_progress_analyticsCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_learning_gap_chartsCreateWithoutStudentInput = {\n    id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_learning_gap_chartsInput\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput = {\n    id: string\n    subject_category_id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_learning_gap_chartsCreateOrConnectWithoutStudentInput = {\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    create: XOR<study_planner_learning_gap_chartsCreateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_learning_gap_chartsCreateManyStudentInputEnvelope = {\n    data: study_planner_learning_gap_chartsCreateManyStudentInput | study_planner_learning_gap_chartsCreateManyStudentInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_study_tasksUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    update: XOR<study_planner_study_tasksUpdateWithoutStudentInput, study_planner_study_tasksUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudentInput, study_planner_study_tasksUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudentInput, study_planner_study_tasksUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_study_tasksUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_study_tasksScalarWhereInput\n    data: XOR<study_planner_study_tasksUpdateManyMutationInput, study_planner_study_tasksUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_task_alarmsWhereUniqueInput\n    update: XOR<study_planner_task_alarmsUpdateWithoutStudentInput, study_planner_task_alarmsUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_task_alarmsCreateWithoutStudentInput, study_planner_task_alarmsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_task_alarmsWhereUniqueInput\n    data: XOR<study_planner_task_alarmsUpdateWithoutStudentInput, study_planner_task_alarmsUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_task_alarmsUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_task_alarmsScalarWhereInput\n    data: XOR<study_planner_task_alarmsUpdateManyMutationInput, study_planner_task_alarmsUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_task_alarmsScalarWhereInput = {\n    AND?: study_planner_task_alarmsScalarWhereInput | study_planner_task_alarmsScalarWhereInput[]\n    OR?: study_planner_task_alarmsScalarWhereInput[]\n    NOT?: study_planner_task_alarmsScalarWhereInput | study_planner_task_alarmsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    student_id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    study_task_id?: UuidFilter<\"study_planner_task_alarms\"> | string\n    title?: StringFilter<\"study_planner_task_alarms\"> | string\n    alarm_time?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    created_at?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_task_alarms\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_task_alarms\"> | Date | string | null\n  }\n\n  export type study_planner_general_remindersUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    update: XOR<study_planner_general_remindersUpdateWithoutStudentInput, study_planner_general_remindersUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_general_remindersCreateWithoutStudentInput, study_planner_general_remindersUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_general_remindersWhereUniqueInput\n    data: XOR<study_planner_general_remindersUpdateWithoutStudentInput, study_planner_general_remindersUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_general_remindersScalarWhereInput\n    data: XOR<study_planner_general_remindersUpdateManyMutationInput, study_planner_general_remindersUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_general_remindersScalarWhereInput = {\n    AND?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n    OR?: study_planner_general_remindersScalarWhereInput[]\n    NOT?: study_planner_general_remindersScalarWhereInput | study_planner_general_remindersScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    student_id?: UuidFilter<\"study_planner_general_reminders\"> | string\n    title?: StringFilter<\"study_planner_general_reminders\"> | string\n    due_time?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    description?: StringNullableFilter<\"study_planner_general_reminders\"> | string | null\n    active?: BoolFilter<\"study_planner_general_reminders\"> | boolean\n    created_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_general_reminders\"> | Date | string\n    deleted_at?: DateTimeNullableFilter<\"study_planner_general_reminders\"> | Date | string | null\n  }\n\n  export type study_planner_study_progress_analyticsUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    update: XOR<study_planner_study_progress_analyticsUpdateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_study_progress_analyticsCreateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_study_progress_analyticsUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_study_progress_analyticsWhereUniqueInput\n    data: XOR<study_planner_study_progress_analyticsUpdateWithoutStudentInput, study_planner_study_progress_analyticsUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_study_progress_analyticsUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_study_progress_analyticsScalarWhereInput\n    data: XOR<study_planner_study_progress_analyticsUpdateManyMutationInput, study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_learning_gap_chartsUpsertWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    update: XOR<study_planner_learning_gap_chartsUpdateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedUpdateWithoutStudentInput>\n    create: XOR<study_planner_learning_gap_chartsCreateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedCreateWithoutStudentInput>\n  }\n\n  export type study_planner_learning_gap_chartsUpdateWithWhereUniqueWithoutStudentInput = {\n    where: study_planner_learning_gap_chartsWhereUniqueInput\n    data: XOR<study_planner_learning_gap_chartsUpdateWithoutStudentInput, study_planner_learning_gap_chartsUncheckedUpdateWithoutStudentInput>\n  }\n\n  export type study_planner_learning_gap_chartsUpdateManyWithWhereWithoutStudentInput = {\n    where: study_planner_learning_gap_chartsScalarWhereInput\n    data: XOR<study_planner_learning_gap_chartsUpdateManyMutationInput, study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentInput>\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_study_tasksInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_tasksInput = {\n    where: study_planner_study_phasesWhereUniqueInput\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_subject_categoriesCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutSubjectCategoryInput\n  }\n\n  export type study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutSubjectCategoryInput\n  }\n\n  export type study_planner_subject_categoriesCreateOrConnectWithoutStudy_planner_study_tasksInput = {\n    where: study_planner_subject_categoriesWhereUniqueInput\n    create: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_task_progressCreateWithoutStudyTaskInput = {\n    id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_task_progressInput\n  }\n\n  export type study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    study_phase_id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_task_progressCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_study_task_progressCreateManyStudyTaskInput | study_planner_study_task_progressCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_attachmentsCreateWithoutStudyTaskInput = {\n    id: string\n    file_type: string\n    file_url: string\n    created_at: Date | string\n  }\n\n  export type study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    file_type: string\n    file_url: string\n    created_at: Date | string\n  }\n\n  export type study_planner_attachmentsCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_attachmentsWhereUniqueInput\n    create: XOR<study_planner_attachmentsCreateWithoutStudyTaskInput, study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_attachmentsCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_attachmentsCreateManyStudyTaskInput | study_planner_attachmentsCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_memosCreateWithoutStudyTaskInput = {\n    id: string\n    memo_text: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_memosUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    memo_text: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_memosCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_memosWhereUniqueInput\n    create: XOR<study_planner_memosCreateWithoutStudyTaskInput, study_planner_memosUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_memosCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_memosCreateManyStudyTaskInput | study_planner_memosCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_task_alarmsCreateWithoutStudyTaskInput = {\n    id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_task_alarmsInput\n  }\n\n  export type study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput = {\n    id: string\n    student_id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_task_alarmsCreateOrConnectWithoutStudyTaskInput = {\n    where: study_planner_task_alarmsWhereUniqueInput\n    create: XOR<study_planner_task_alarmsCreateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_task_alarmsCreateManyStudyTaskInputEnvelope = {\n    data: study_planner_task_alarmsCreateManyStudyTaskInput | study_planner_task_alarmsCreateManyStudyTaskInput[]\n    skipDuplicates?: boolean\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_study_tasksInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_study_phasesUpsertWithoutStudy_planner_study_tasksInput = {\n    update: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    where?: study_planner_study_phasesWhereInput\n  }\n\n  export type study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput = {\n    where?: study_planner_study_phasesWhereInput\n    data: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_study_phasesUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_subject_categoriesUpsertWithoutStudy_planner_study_tasksInput = {\n    update: XOR<study_planner_subject_categoriesUpdateWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n    create: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_study_tasksInput>\n    where?: study_planner_subject_categoriesWhereInput\n  }\n\n  export type study_planner_subject_categoriesUpdateToOneWithWhereWithoutStudy_planner_study_tasksInput = {\n    where?: study_planner_subject_categoriesWhereInput\n    data: XOR<study_planner_subject_categoriesUpdateWithoutStudy_planner_study_tasksInput, study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput>\n  }\n\n  export type study_planner_subject_categoriesUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutSubjectCategoryNestedInput\n  }\n\n  export type study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_study_tasksInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutSubjectCategoryNestedInput\n  }\n\n  export type study_planner_study_task_progressUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    update: XOR<study_planner_study_task_progressUpdateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_study_task_progressCreateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_progressUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressWhereUniqueInput\n    data: XOR<study_planner_study_task_progressUpdateWithoutStudyTaskInput, study_planner_study_task_progressUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_task_progressUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_study_task_progressScalarWhereInput\n    data: XOR<study_planner_study_task_progressUpdateManyMutationInput, study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_attachmentsUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_attachmentsWhereUniqueInput\n    update: XOR<study_planner_attachmentsUpdateWithoutStudyTaskInput, study_planner_attachmentsUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_attachmentsCreateWithoutStudyTaskInput, study_planner_attachmentsUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_attachmentsUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_attachmentsWhereUniqueInput\n    data: XOR<study_planner_attachmentsUpdateWithoutStudyTaskInput, study_planner_attachmentsUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_attachmentsUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_attachmentsScalarWhereInput\n    data: XOR<study_planner_attachmentsUpdateManyMutationInput, study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_attachmentsScalarWhereInput = {\n    AND?: study_planner_attachmentsScalarWhereInput | study_planner_attachmentsScalarWhereInput[]\n    OR?: study_planner_attachmentsScalarWhereInput[]\n    NOT?: study_planner_attachmentsScalarWhereInput | study_planner_attachmentsScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_attachments\"> | string\n    study_task_id?: UuidFilter<\"study_planner_attachments\"> | string\n    file_type?: StringFilter<\"study_planner_attachments\"> | string\n    file_url?: StringFilter<\"study_planner_attachments\"> | string\n    created_at?: DateTimeFilter<\"study_planner_attachments\"> | Date | string\n  }\n\n  export type study_planner_memosUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_memosWhereUniqueInput\n    update: XOR<study_planner_memosUpdateWithoutStudyTaskInput, study_planner_memosUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_memosCreateWithoutStudyTaskInput, study_planner_memosUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_memosUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_memosWhereUniqueInput\n    data: XOR<study_planner_memosUpdateWithoutStudyTaskInput, study_planner_memosUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_memosUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_memosScalarWhereInput\n    data: XOR<study_planner_memosUpdateManyMutationInput, study_planner_memosUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_memosScalarWhereInput = {\n    AND?: study_planner_memosScalarWhereInput | study_planner_memosScalarWhereInput[]\n    OR?: study_planner_memosScalarWhereInput[]\n    NOT?: study_planner_memosScalarWhereInput | study_planner_memosScalarWhereInput[]\n    id?: UuidFilter<\"study_planner_memos\"> | string\n    study_task_id?: UuidFilter<\"study_planner_memos\"> | string\n    memo_text?: StringFilter<\"study_planner_memos\"> | string\n    created_at?: DateTimeFilter<\"study_planner_memos\"> | Date | string\n    updated_at?: DateTimeFilter<\"study_planner_memos\"> | Date | string\n  }\n\n  export type study_planner_task_alarmsUpsertWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_task_alarmsWhereUniqueInput\n    update: XOR<study_planner_task_alarmsUpdateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedUpdateWithoutStudyTaskInput>\n    create: XOR<study_planner_task_alarmsCreateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedCreateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_task_alarmsUpdateWithWhereUniqueWithoutStudyTaskInput = {\n    where: study_planner_task_alarmsWhereUniqueInput\n    data: XOR<study_planner_task_alarmsUpdateWithoutStudyTaskInput, study_planner_task_alarmsUncheckedUpdateWithoutStudyTaskInput>\n  }\n\n  export type study_planner_task_alarmsUpdateManyWithWhereWithoutStudyTaskInput = {\n    where: study_planner_task_alarmsScalarWhereInput\n    data: XOR<study_planner_task_alarmsUpdateManyMutationInput, study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskInput>\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_study_task_progressInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_task_progressInput = {\n    where: study_planner_study_phasesWhereUniqueInput\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_study_task_progressInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_phasesUpsertWithoutStudy_planner_study_task_progressInput = {\n    update: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_task_progressInput>\n    where?: study_planner_study_phasesWhereInput\n  }\n\n  export type study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_task_progressInput = {\n    where?: study_planner_study_phasesWhereInput\n    data: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput>\n  }\n\n  export type study_planner_study_phasesUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_task_progressInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_attachmentsInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_attachmentsInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_attachmentsInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_attachmentsInput>\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_attachmentsInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_attachmentsInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_attachmentsInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_attachmentsInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_attachmentsInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_attachmentsInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_attachmentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_attachmentsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_memosInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_memosInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_memosInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_memosInput>\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_memosInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_memosInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_memosInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_memosInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_memosInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_memosInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_memosInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_memosInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_memosInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_memosInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_task_alarmsInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_task_alarmsInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_task_alarmsInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_task_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n  }\n\n  export type study_planner_study_tasksCreateWithoutStudy_planner_task_alarmsInput = {\n    id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    student: study_planner_studentsCreateNestedOneWithoutStudy_planner_study_tasksInput\n    studyPhase: study_planner_study_phasesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    subjectCategory: study_planner_subject_categoriesCreateNestedOneWithoutStudy_planner_study_tasksInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksUncheckedCreateWithoutStudy_planner_task_alarmsInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedCreateNestedManyWithoutStudyTaskInput\n    study_planner_memos?: study_planner_memosUncheckedCreateNestedManyWithoutStudyTaskInput\n  }\n\n  export type study_planner_study_tasksCreateOrConnectWithoutStudy_planner_task_alarmsInput = {\n    where: study_planner_study_tasksWhereUniqueInput\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_task_alarmsInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_task_alarmsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_task_alarmsInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_task_alarmsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_task_alarmsInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_task_alarmsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_task_alarmsInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_task_alarmsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_task_alarmsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_study_tasksUpsertWithoutStudy_planner_task_alarmsInput = {\n    update: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_task_alarmsInput>\n    create: XOR<study_planner_study_tasksCreateWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUncheckedCreateWithoutStudy_planner_task_alarmsInput>\n    where?: study_planner_study_tasksWhereInput\n  }\n\n  export type study_planner_study_tasksUpdateToOneWithWhereWithoutStudy_planner_task_alarmsInput = {\n    where?: study_planner_study_tasksWhereInput\n    data: XOR<study_planner_study_tasksUpdateWithoutStudy_planner_task_alarmsInput, study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_task_alarmsInput>\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudy_planner_task_alarmsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudy_planner_task_alarmsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_general_remindersInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_general_remindersInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_general_remindersInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_general_remindersInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_general_remindersInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_general_remindersInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_general_remindersInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_study_progress_analyticsInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_study_progress_analyticsInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n  }\n\n  export type study_planner_study_phasesCreateWithoutStudy_planner_study_progress_analyticsInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_task_progress?: study_planner_study_task_progressCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudyPhaseInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedCreateNestedManyWithoutStudyPhaseInput\n  }\n\n  export type study_planner_study_phasesCreateOrConnectWithoutStudy_planner_study_progress_analyticsInput = {\n    where: study_planner_study_phasesWhereUniqueInput\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_study_progress_analyticsInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_study_progress_analyticsInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_study_progress_analyticsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_study_progress_analyticsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_learning_gap_charts?: study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_study_phasesUpsertWithoutStudy_planner_study_progress_analyticsInput = {\n    update: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput>\n    create: XOR<study_planner_study_phasesCreateWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUncheckedCreateWithoutStudy_planner_study_progress_analyticsInput>\n    where?: study_planner_study_phasesWhereInput\n  }\n\n  export type study_planner_study_phasesUpdateToOneWithWhereWithoutStudy_planner_study_progress_analyticsInput = {\n    where?: study_planner_study_phasesWhereInput\n    data: XOR<study_planner_study_phasesUpdateWithoutStudy_planner_study_progress_analyticsInput, study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput>\n  }\n\n  export type study_planner_study_phasesUpdateWithoutStudy_planner_study_progress_analyticsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_study_phasesUncheckedUpdateWithoutStudy_planner_study_progress_analyticsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseNestedInput\n  }\n\n  export type study_planner_studentsCreateWithoutStudy_planner_learning_gap_chartsInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput = {\n    id: string\n    email: string\n    password_hash: string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedCreateNestedManyWithoutStudentInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedCreateNestedManyWithoutStudentInput\n  }\n\n  export type study_planner_studentsCreateOrConnectWithoutStudy_planner_learning_gap_chartsInput = {\n    where: study_planner_studentsWhereUniqueInput\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n  }\n\n  export type study_planner_subject_categoriesCreateWithoutStudy_planner_learning_gap_chartsInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksCreateNestedManyWithoutSubjectCategoryInput\n  }\n\n  export type study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput = {\n    id: string\n    code: string\n    name: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedCreateNestedManyWithoutSubjectCategoryInput\n  }\n\n  export type study_planner_subject_categoriesCreateOrConnectWithoutStudy_planner_learning_gap_chartsInput = {\n    where: study_planner_subject_categoriesWhereUniqueInput\n    create: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n  }\n\n  export type study_planner_studentsUpsertWithoutStudy_planner_learning_gap_chartsInput = {\n    update: XOR<study_planner_studentsUpdateWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput>\n    create: XOR<study_planner_studentsCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n    where?: study_planner_studentsWhereInput\n  }\n\n  export type study_planner_studentsUpdateToOneWithWhereWithoutStudy_planner_learning_gap_chartsInput = {\n    where?: study_planner_studentsWhereInput\n    data: XOR<study_planner_studentsUpdateWithoutStudy_planner_learning_gap_chartsInput, study_planner_studentsUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput>\n  }\n\n  export type study_planner_studentsUpdateWithoutStudy_planner_learning_gap_chartsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_studentsUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    email?: StringFieldUpdateOperationsInput | string\n    password_hash?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_general_reminders?: study_planner_general_remindersUncheckedUpdateManyWithoutStudentNestedInput\n    study_planner_study_progress_analytics?: study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentNestedInput\n  }\n\n  export type study_planner_subject_categoriesUpsertWithoutStudy_planner_learning_gap_chartsInput = {\n    update: XOR<study_planner_subject_categoriesUpdateWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput>\n    create: XOR<study_planner_subject_categoriesCreateWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUncheckedCreateWithoutStudy_planner_learning_gap_chartsInput>\n    where?: study_planner_subject_categoriesWhereInput\n  }\n\n  export type study_planner_subject_categoriesUpdateToOneWithWhereWithoutStudy_planner_learning_gap_chartsInput = {\n    where?: study_planner_subject_categoriesWhereInput\n    data: XOR<study_planner_subject_categoriesUpdateWithoutStudy_planner_learning_gap_chartsInput, study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput>\n  }\n\n  export type study_planner_subject_categoriesUpdateWithoutStudy_planner_learning_gap_chartsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUpdateManyWithoutSubjectCategoryNestedInput\n  }\n\n  export type study_planner_subject_categoriesUncheckedUpdateWithoutStudy_planner_learning_gap_chartsInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    code?: StringFieldUpdateOperationsInput | string\n    name?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    study_planner_study_tasks?: study_planner_study_tasksUncheckedUpdateManyWithoutSubjectCategoryNestedInput\n  }\n\n  export type study_planner_study_tasksCreateManyStudyPhaseInput = {\n    id: string\n    student_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyPhaseInput = {\n    id: string\n    study_task_id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_progress_analyticsCreateManyStudyPhaseInput = {\n    id: string\n    student_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_task_progressUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_progress_analyticsNestedInput\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudyPhaseInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_tasksCreateManySubjectCategoryInput = {\n    id: string\n    student_id: string\n    study_phase_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_learning_gap_chartsCreateManySubjectCategoryInput = {\n    id: string\n    student_id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_tasksUpdateWithoutSubjectCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutSubjectCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutSubjectCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_learning_gap_chartsUpdateWithoutSubjectCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_learning_gap_chartsNestedInput\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateWithoutSubjectCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateManyWithoutSubjectCategoryInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_tasksCreateManyStudentInput = {\n    id: string\n    study_phase_id: string\n    subject_category_id: string\n    title: string\n    description?: string | null\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_task_alarmsCreateManyStudentInput = {\n    id: string\n    study_task_id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_general_remindersCreateManyStudentInput = {\n    id: string\n    title: string\n    due_time: Date | string\n    description?: string | null\n    active: boolean\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_progress_analyticsCreateManyStudentInput = {\n    id: string\n    study_phase_id: string\n    completed_tasks_count: number\n    total_tasks_count: number\n    completion_rate: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_learning_gap_chartsCreateManyStudentInput = {\n    id: string\n    subject_category_id: string\n    gap_metric: number\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_study_tasksUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_study_tasksNestedInput\n    study_planner_study_task_progress?: study_planner_study_task_progressUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    study_planner_study_task_progress?: study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_attachments?: study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_memos?: study_planner_memosUncheckedUpdateManyWithoutStudyTaskNestedInput\n    study_planner_task_alarms?: study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskNestedInput\n  }\n\n  export type study_planner_study_tasksUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_task_alarmsUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    studyTask?: study_planner_study_tasksUpdateOneRequiredWithoutStudy_planner_task_alarmsNestedInput\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_task_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_general_remindersUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    due_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    description?: NullableStringFieldUpdateOperationsInput | string | null\n    active?: BoolFieldUpdateOperationsInput | boolean\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_study_progress_analyticsUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_progress_analyticsNestedInput\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_progress_analyticsUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_tasks_count?: IntFieldUpdateOperationsInput | number\n    total_tasks_count?: IntFieldUpdateOperationsInput | number\n    completion_rate?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    subjectCategory?: study_planner_subject_categoriesUpdateOneRequiredWithoutStudy_planner_learning_gap_chartsNestedInput\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_learning_gap_chartsUncheckedUpdateManyWithoutStudentInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    subject_category_id?: StringFieldUpdateOperationsInput | string\n    gap_metric?: FloatFieldUpdateOperationsInput | number\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressCreateManyStudyTaskInput = {\n    id: string\n    study_phase_id: string\n    completed_at?: Date | string | null\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_attachmentsCreateManyStudyTaskInput = {\n    id: string\n    file_type: string\n    file_url: string\n    created_at: Date | string\n  }\n\n  export type study_planner_memosCreateManyStudyTaskInput = {\n    id: string\n    memo_text: string\n    created_at: Date | string\n    updated_at: Date | string\n  }\n\n  export type study_planner_task_alarmsCreateManyStudyTaskInput = {\n    id: string\n    student_id: string\n    title: string\n    alarm_time: Date | string\n    created_at: Date | string\n    updated_at: Date | string\n    deleted_at?: Date | string | null\n  }\n\n  export type study_planner_study_task_progressUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    studyPhase?: study_planner_study_phasesUpdateOneRequiredWithoutStudy_planner_study_task_progressNestedInput\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_study_task_progressUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    study_phase_id?: StringFieldUpdateOperationsInput | string\n    completed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_attachmentsUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_attachmentsUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_attachmentsUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    file_type?: StringFieldUpdateOperationsInput | string\n    file_url?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_memosUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_memosUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_memosUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    memo_text?: StringFieldUpdateOperationsInput | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n  }\n\n  export type study_planner_task_alarmsUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n    student?: study_planner_studentsUpdateOneRequiredWithoutStudy_planner_task_alarmsNestedInput\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n  export type study_planner_task_alarmsUncheckedUpdateManyWithoutStudyTaskInput = {\n    id?: StringFieldUpdateOperationsInput | string\n    student_id?: StringFieldUpdateOperationsInput | string\n    title?: StringFieldUpdateOperationsInput | string\n    alarm_time?: DateTimeFieldUpdateOperationsInput | Date | string\n    created_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string\n    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null\n  }\n\n\n\n  /**\n   * Batch Payload for updateMany & deleteMany & createMany\n   */\n\n  export type BatchPayload = {\n    count: number\n  }\n\n  /**\n   * DMMF\n   */\n  export const dmmf: runtime.BaseDMMF\n}","node_modules/.prisma/client/runtime/index-browser.d.ts":"declare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\ndeclare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\ndeclare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\ndeclare type Narrowable = string | number | bigint | boolean | [];\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\ndeclare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/runtime/library.d.ts":"/**\r\n * @param this\r\n */\r\ndeclare function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client;\r\n\r\ndeclare type AccelerateEngineConfig = {\r\n    inlineSchema: EngineConfig['inlineSchema'];\r\n    inlineSchemaHash: EngineConfig['inlineSchemaHash'];\r\n    env: EngineConfig['env'];\r\n    generator?: {\r\n        previewFeatures: string[];\r\n    };\r\n    inlineDatasources: EngineConfig['inlineDatasources'];\r\n    overrideDatasources: EngineConfig['overrideDatasources'];\r\n    clientVersion: EngineConfig['clientVersion'];\r\n    engineVersion: EngineConfig['engineVersion'];\r\n    logEmitter: EngineConfig['logEmitter'];\r\n    logQueries?: EngineConfig['logQueries'];\r\n    logLevel?: EngineConfig['logLevel'];\r\n    tracingHelper: EngineConfig['tracingHelper'];\r\n    accelerateUtils?: AccelerateUtils;\r\n};\r\n\r\n/**\r\n * A stripped down interface of `fetch` that `@prisma/extension-accelerate`\r\n * relies on. It must be in sync with the corresponding definition in the\r\n * Accelerate extension.\r\n *\r\n * This is the actual interface exposed by the extension. We can't use the\r\n * custom fetch function provided by it as normal fetch because the API is\r\n * different. Notably, `headers` must be an object and not a `Headers`\r\n * instance, and `url` must be a `string` and not a `URL`.\r\n *\r\n * The return type is `Response` but we can't specify this in an exported type\r\n * because it would end up referencing external types from `@types/node` or DOM\r\n * which can fail typechecking depending on TypeScript configuration in a user's\r\n * project.\r\n */\r\ndeclare type AccelerateExtensionFetch = (url: string, options: {\r\n    body?: string;\r\n    method?: string;\r\n    headers: Record<string, string>;\r\n}) => Promise<unknown>;\r\n\r\ndeclare type AccelerateExtensionFetchDecorator = (fetch: AccelerateExtensionFetch) => AccelerateExtensionFetch;\r\n\r\ndeclare type AccelerateUtils = EngineConfig['accelerateUtils'];\r\n\r\nexport declare type Action = keyof typeof DMMF_2.ModelAction | 'executeRaw' | 'queryRaw' | 'runCommandRaw';\r\n\r\ndeclare type ActiveConnectorType = Exclude<ConnectorType, 'postgres' | 'prisma+postgres'>;\r\n\r\n/**\r\n * An interface that exposes some basic information about the\r\n * adapter like its name and provider type.\r\n */\r\ndeclare interface AdapterInfo {\r\n    readonly provider: Provider;\r\n    readonly adapterName: (typeof officialPrismaAdapters)[number] | (string & {});\r\n}\r\n\r\nexport declare type Aggregate = '_count' | '_max' | '_min' | '_avg' | '_sum';\r\n\r\nexport declare type AllModelsToStringIndex<TypeMap extends TypeMapDef, Args extends Record<string, any>, K extends PropertyKey> = Args extends {\r\n    [P in K]: {\r\n        $allModels: infer AllModels;\r\n    };\r\n} ? {\r\n    [P in K]: Record<TypeMap['meta']['modelProps'], AllModels>;\r\n} : {};\r\n\r\ndeclare class AnyNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare type ApplyOmit<T, OmitConfig> = Compute<{\r\n    [K in keyof T as OmitValue<OmitConfig, K> extends true ? never : K]: T[K];\r\n}>;\r\n\r\nexport declare type Args<T, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            operations: {\r\n                [K in F]: {\r\n                    args: any;\r\n                };\r\n            };\r\n        };\r\n    };\r\n} ? T[symbol]['types']['operations'][F]['args'] : any;\r\n\r\nexport declare type Args_3<T, F extends Operation> = Args<T, F>;\r\n\r\ndeclare type ArgScalarType = 'string' | 'int' | 'bigint' | 'float' | 'decimal' | 'boolean' | 'enum' | 'uuid' | 'json' | 'datetime' | 'bytes' | 'unknown';\r\n\r\ndeclare type ArgType = {\r\n    scalarType: ArgScalarType;\r\n    dbType?: string;\r\n    arity: Arity;\r\n};\r\n\r\ndeclare type Arity = 'scalar' | 'list';\r\n\r\n/**\r\n * Attributes is a map from string to attribute values.\r\n *\r\n * Note: only the own enumerable keys are counted as valid attribute keys.\r\n */\r\ndeclare interface Attributes {\r\n    [attributeKey: string]: AttributeValue | undefined;\r\n}\r\n\r\n/**\r\n * Attribute values may be any non-nullish primitive value except an object.\r\n *\r\n * null or undefined attribute values are invalid and will result in undefined behavior.\r\n */\r\ndeclare type AttributeValue = string | number | boolean | Array<null | undefined | string> | Array<null | undefined | number> | Array<null | undefined | boolean>;\r\n\r\nexport declare type BaseDMMF = {\r\n    readonly datamodel: Omit<DMMF_2.Datamodel, 'indexes'>;\r\n};\r\n\r\ndeclare type BatchArgs = {\r\n    queries: BatchQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\ndeclare type BatchInternalParams = {\r\n    requests: RequestParams[];\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type BatchQuery = {\r\n    model: string | undefined;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n};\r\n\r\ndeclare type BatchQueryEngineResult<T> = QueryEngineResultData<T> | Error;\r\n\r\ndeclare type BatchQueryOptionsCb = (args: BatchQueryOptionsCbArgs) => Promise<any>;\r\n\r\ndeclare type BatchQueryOptionsCbArgs = {\r\n    args: BatchArgs;\r\n    query: (args: BatchArgs, __internalParams?: BatchInternalParams) => Promise<unknown[]>;\r\n    __internalParams: BatchInternalParams;\r\n};\r\n\r\ndeclare type BatchResponse = MultiBatchResponse | CompactedBatchResponse;\r\n\r\ndeclare type BatchTransactionOptions = {\r\n    isolationLevel?: Transaction_2.IsolationLevel;\r\n};\r\n\r\ndeclare interface BinaryTargetsEnvValue {\r\n    fromEnvVar: string | null;\r\n    value: string;\r\n    native?: boolean;\r\n}\r\n\r\nexport declare type Call<F extends Fn, P> = (F & {\r\n    params: P;\r\n})['returns'];\r\n\r\ndeclare interface CallSite {\r\n    getLocation(): LocationInFile | null;\r\n}\r\n\r\nexport declare type Cast<A, W> = A extends W ? A : W;\r\n\r\ndeclare type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never;\r\n\r\nexport declare type ClientArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ClientArgs = {\r\n    client: ClientArg;\r\n};\r\n\r\nexport declare type ClientBuiltInProp = keyof DynamicClientExtensionThisBuiltin<never, never, never>;\r\n\r\nexport declare type ClientOptionDef = undefined | {\r\n    [K in string]: any;\r\n};\r\n\r\nexport declare type ClientOtherOps = {\r\n    $queryRaw<T = unknown>(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<T>;\r\n    $queryRawTyped<T>(query: TypedSql<unknown[], T>): PrismaPromise<T[]>;\r\n    $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;\r\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise<number>;\r\n    $executeRawUnsafe(query: string, ...values: any[]): PrismaPromise<number>;\r\n    $runCommandRaw(command: InputJsonObject): PrismaPromise<JsonObject>;\r\n};\r\n\r\ndeclare type ColumnType = (typeof ColumnTypeEnum)[keyof typeof ColumnTypeEnum];\r\n\r\ndeclare const ColumnTypeEnum: {\r\n    readonly Int32: 0;\r\n    readonly Int64: 1;\r\n    readonly Float: 2;\r\n    readonly Double: 3;\r\n    readonly Numeric: 4;\r\n    readonly Boolean: 5;\r\n    readonly Character: 6;\r\n    readonly Text: 7;\r\n    readonly Date: 8;\r\n    readonly Time: 9;\r\n    readonly DateTime: 10;\r\n    readonly Json: 11;\r\n    readonly Enum: 12;\r\n    readonly Bytes: 13;\r\n    readonly Set: 14;\r\n    readonly Uuid: 15;\r\n    readonly Int32Array: 64;\r\n    readonly Int64Array: 65;\r\n    readonly FloatArray: 66;\r\n    readonly DoubleArray: 67;\r\n    readonly NumericArray: 68;\r\n    readonly BooleanArray: 69;\r\n    readonly CharacterArray: 70;\r\n    readonly TextArray: 71;\r\n    readonly DateArray: 72;\r\n    readonly TimeArray: 73;\r\n    readonly DateTimeArray: 74;\r\n    readonly JsonArray: 75;\r\n    readonly EnumArray: 76;\r\n    readonly BytesArray: 77;\r\n    readonly UuidArray: 78;\r\n    readonly UnknownNumber: 128;\r\n};\r\n\r\ndeclare type CompactedBatchResponse = {\r\n    type: 'compacted';\r\n    plan: QueryPlanNode;\r\n    arguments: Record<string, {}>[];\r\n    nestedSelection: string[];\r\n    keys: string[];\r\n    expectNonEmpty: boolean;\r\n};\r\n\r\ndeclare type CompilerWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryCompiler: QueryCompilerConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm compiler engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by ClientEngine\r\n     */\r\n    getQueryCompilerWasmModule: () => Promise<unknown>;\r\n};\r\n\r\nexport declare type Compute<T> = T extends Function ? T : {\r\n    [K in keyof T]: T[K];\r\n} & unknown;\r\n\r\nexport declare type ComputeDeep<T> = T extends Function ? T : {\r\n    [K in keyof T]: ComputeDeep<T[K]>;\r\n} & unknown;\r\n\r\ndeclare type ComputedField = {\r\n    name: string;\r\n    needs: string[];\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ComputedFieldsMap = {\r\n    [fieldName: string]: ComputedField;\r\n};\r\n\r\ndeclare type ConnectionInfo = {\r\n    schemaName?: string;\r\n    maxBindValues?: number;\r\n    supportsRelationJoins: boolean;\r\n};\r\n\r\ndeclare type ConnectorType = 'mysql' | 'mongodb' | 'sqlite' | 'postgresql' | 'postgres' | 'prisma+postgres' | 'sqlserver' | 'cockroachdb';\r\n\r\ndeclare interface Context {\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key: symbol): unknown;\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key: symbol, value: unknown): Context;\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key: symbol): Context;\r\n}\r\n\r\ndeclare type Context_2<T> = T extends {\r\n    [K: symbol]: {\r\n        ctx: infer C;\r\n    };\r\n} ? C & T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n} : T & {\r\n    /**\r\n     * @deprecated Use `$name` instead.\r\n     */\r\n    name?: string;\r\n    $name?: string;\r\n    $parent?: unknown;\r\n};\r\n\r\nexport declare type Count<O> = {\r\n    [K in keyof O]: Count<number>;\r\n} & {};\r\n\r\nexport declare function createParam(name: string): Param<unknown, string>;\r\n\r\ndeclare class DataLoader<T = unknown> {\r\n    private options;\r\n    batches: {\r\n        [key: string]: Job[];\r\n    };\r\n    private tickActive;\r\n    constructor(options: DataLoaderOptions<T>);\r\n    request(request: T): Promise<any>;\r\n    private dispatchBatches;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type DataLoaderOptions<T> = {\r\n    singleLoader: (request: T) => Promise<any>;\r\n    batchLoader: (request: T[]) => Promise<any[]>;\r\n    batchBy: (request: T) => string | undefined;\r\n    batchOrder: (requestA: T, requestB: T) => number;\r\n};\r\n\r\ndeclare type Datamodel = ReadonlyDeep_2<{\r\n    models: Model[];\r\n    enums: DatamodelEnum[];\r\n    types: Model[];\r\n    indexes: Index[];\r\n}>;\r\n\r\ndeclare type DatamodelEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: EnumValue[];\r\n    dbName?: string | null;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum;\r\n\r\ndeclare type DataRule = {\r\n    type: 'rowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'rowCountNeq';\r\n    args: number;\r\n} | {\r\n    type: 'affectedRowCountEq';\r\n    args: number;\r\n} | {\r\n    type: 'never';\r\n};\r\n\r\ndeclare type Datasource = {\r\n    url?: string;\r\n};\r\n\r\ndeclare type Datasources = {\r\n    [name in string]: Datasource;\r\n};\r\n\r\ndeclare class DbNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\nexport declare const Debug: typeof debugCreate & {\r\n    enable(namespace: any): void;\r\n    disable(): any;\r\n    enabled(namespace: string): boolean;\r\n    log: (...args: string[]) => void;\r\n    formatters: {};\r\n};\r\n\r\n/**\r\n * Create a new debug instance with the given namespace.\r\n *\r\n * @example\r\n * ```ts\r\n * import Debug from '@prisma/debug'\r\n * const debug = Debug('prisma:client')\r\n * debug('Hello World')\r\n * ```\r\n */\r\ndeclare function debugCreate(namespace: string): ((...args: any[]) => void) & {\r\n    color: string;\r\n    enabled: boolean;\r\n    namespace: string;\r\n    log: (...args: string[]) => void;\r\n    extend: () => void;\r\n};\r\n\r\nexport declare function Decimal(n: Decimal.Value): Decimal;\r\n\r\nexport declare namespace Decimal {\r\n    export type Constructor = typeof Decimal;\r\n    export type Instance = Decimal;\r\n    export type Rounding = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n    export type Modulo = Rounding | 9;\r\n    export type Value = string | number | Decimal;\r\n\r\n    // http://mikemcl.github.io/decimal.js/#constructor-properties\r\n    export interface Config {\r\n        precision?: number;\r\n        rounding?: Rounding;\r\n        toExpNeg?: number;\r\n        toExpPos?: number;\r\n        minE?: number;\r\n        maxE?: number;\r\n        crypto?: boolean;\r\n        modulo?: Modulo;\r\n        defaults?: boolean;\r\n    }\r\n}\r\n\r\nexport declare class Decimal {\r\n    readonly d: number[];\r\n    readonly e: number;\r\n    readonly s: number;\r\n\r\n    constructor(n: Decimal.Value);\r\n\r\n    absoluteValue(): Decimal;\r\n    abs(): Decimal;\r\n\r\n    ceil(): Decimal;\r\n\r\n    clampedTo(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    clamp(min: Decimal.Value, max: Decimal.Value): Decimal;\r\n\r\n    comparedTo(n: Decimal.Value): number;\r\n    cmp(n: Decimal.Value): number;\r\n\r\n    cosine(): Decimal;\r\n    cos(): Decimal;\r\n\r\n    cubeRoot(): Decimal;\r\n    cbrt(): Decimal;\r\n\r\n    decimalPlaces(): number;\r\n    dp(): number;\r\n\r\n    dividedBy(n: Decimal.Value): Decimal;\r\n    div(n: Decimal.Value): Decimal;\r\n\r\n    dividedToIntegerBy(n: Decimal.Value): Decimal;\r\n    divToInt(n: Decimal.Value): Decimal;\r\n\r\n    equals(n: Decimal.Value): boolean;\r\n    eq(n: Decimal.Value): boolean;\r\n\r\n    floor(): Decimal;\r\n\r\n    greaterThan(n: Decimal.Value): boolean;\r\n    gt(n: Decimal.Value): boolean;\r\n\r\n    greaterThanOrEqualTo(n: Decimal.Value): boolean;\r\n    gte(n: Decimal.Value): boolean;\r\n\r\n    hyperbolicCosine(): Decimal;\r\n    cosh(): Decimal;\r\n\r\n    hyperbolicSine(): Decimal;\r\n    sinh(): Decimal;\r\n\r\n    hyperbolicTangent(): Decimal;\r\n    tanh(): Decimal;\r\n\r\n    inverseCosine(): Decimal;\r\n    acos(): Decimal;\r\n\r\n    inverseHyperbolicCosine(): Decimal;\r\n    acosh(): Decimal;\r\n\r\n    inverseHyperbolicSine(): Decimal;\r\n    asinh(): Decimal;\r\n\r\n    inverseHyperbolicTangent(): Decimal;\r\n    atanh(): Decimal;\r\n\r\n    inverseSine(): Decimal;\r\n    asin(): Decimal;\r\n\r\n    inverseTangent(): Decimal;\r\n    atan(): Decimal;\r\n\r\n    isFinite(): boolean;\r\n\r\n    isInteger(): boolean;\r\n    isInt(): boolean;\r\n\r\n    isNaN(): boolean;\r\n\r\n    isNegative(): boolean;\r\n    isNeg(): boolean;\r\n\r\n    isPositive(): boolean;\r\n    isPos(): boolean;\r\n\r\n    isZero(): boolean;\r\n\r\n    lessThan(n: Decimal.Value): boolean;\r\n    lt(n: Decimal.Value): boolean;\r\n\r\n    lessThanOrEqualTo(n: Decimal.Value): boolean;\r\n    lte(n: Decimal.Value): boolean;\r\n\r\n    logarithm(n?: Decimal.Value): Decimal;\r\n    log(n?: Decimal.Value): Decimal;\r\n\r\n    minus(n: Decimal.Value): Decimal;\r\n    sub(n: Decimal.Value): Decimal;\r\n\r\n    modulo(n: Decimal.Value): Decimal;\r\n    mod(n: Decimal.Value): Decimal;\r\n\r\n    naturalExponential(): Decimal;\r\n    exp(): Decimal;\r\n\r\n    naturalLogarithm(): Decimal;\r\n    ln(): Decimal;\r\n\r\n    negated(): Decimal;\r\n    neg(): Decimal;\r\n\r\n    plus(n: Decimal.Value): Decimal;\r\n    add(n: Decimal.Value): Decimal;\r\n\r\n    precision(includeZeros?: boolean): number;\r\n    sd(includeZeros?: boolean): number;\r\n\r\n    round(): Decimal;\r\n\r\n    sine() : Decimal;\r\n    sin() : Decimal;\r\n\r\n    squareRoot(): Decimal;\r\n    sqrt(): Decimal;\r\n\r\n    tangent() : Decimal;\r\n    tan() : Decimal;\r\n\r\n    times(n: Decimal.Value): Decimal;\r\n    mul(n: Decimal.Value) : Decimal;\r\n\r\n    toBinary(significantDigits?: number): string;\r\n    toBinary(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toDecimalPlaces(decimalPlaces?: number): Decimal;\r\n    toDecimalPlaces(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n    toDP(decimalPlaces?: number): Decimal;\r\n    toDP(decimalPlaces: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toExponential(decimalPlaces?: number): string;\r\n    toExponential(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFixed(decimalPlaces?: number): string;\r\n    toFixed(decimalPlaces: number, rounding: Decimal.Rounding): string;\r\n\r\n    toFraction(max_denominator?: Decimal.Value): Decimal[];\r\n\r\n    toHexadecimal(significantDigits?: number): string;\r\n    toHexadecimal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n    toHex(significantDigits?: number): string;\r\n    toHex(significantDigits: number, rounding?: Decimal.Rounding): string;\r\n\r\n    toJSON(): string;\r\n\r\n    toNearest(n: Decimal.Value, rounding?: Decimal.Rounding): Decimal;\r\n\r\n    toNumber(): number;\r\n\r\n    toOctal(significantDigits?: number): string;\r\n    toOctal(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toPower(n: Decimal.Value): Decimal;\r\n    pow(n: Decimal.Value): Decimal;\r\n\r\n    toPrecision(significantDigits?: number): string;\r\n    toPrecision(significantDigits: number, rounding: Decimal.Rounding): string;\r\n\r\n    toSignificantDigits(significantDigits?: number): Decimal;\r\n    toSignificantDigits(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n    toSD(significantDigits?: number): Decimal;\r\n    toSD(significantDigits: number, rounding: Decimal.Rounding): Decimal;\r\n\r\n    toString(): string;\r\n\r\n    truncated(): Decimal;\r\n    trunc(): Decimal;\r\n\r\n    valueOf(): string;\r\n\r\n    static abs(n: Decimal.Value): Decimal;\r\n    static acos(n: Decimal.Value): Decimal;\r\n    static acosh(n: Decimal.Value): Decimal;\r\n    static add(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static asin(n: Decimal.Value): Decimal;\r\n    static asinh(n: Decimal.Value): Decimal;\r\n    static atan(n: Decimal.Value): Decimal;\r\n    static atanh(n: Decimal.Value): Decimal;\r\n    static atan2(y: Decimal.Value, x: Decimal.Value): Decimal;\r\n    static cbrt(n: Decimal.Value): Decimal;\r\n    static ceil(n: Decimal.Value): Decimal;\r\n    static clamp(n: Decimal.Value, min: Decimal.Value, max: Decimal.Value): Decimal;\r\n    static clone(object?: Decimal.Config): Decimal.Constructor;\r\n    static config(object: Decimal.Config): Decimal.Constructor;\r\n    static cos(n: Decimal.Value): Decimal;\r\n    static cosh(n: Decimal.Value): Decimal;\r\n    static div(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static exp(n: Decimal.Value): Decimal;\r\n    static floor(n: Decimal.Value): Decimal;\r\n    static hypot(...n: Decimal.Value[]): Decimal;\r\n    static isDecimal(object: any): object is Decimal;\r\n    static ln(n: Decimal.Value): Decimal;\r\n    static log(n: Decimal.Value, base?: Decimal.Value): Decimal;\r\n    static log2(n: Decimal.Value): Decimal;\r\n    static log10(n: Decimal.Value): Decimal;\r\n    static max(...n: Decimal.Value[]): Decimal;\r\n    static min(...n: Decimal.Value[]): Decimal;\r\n    static mod(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static mul(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static noConflict(): Decimal.Constructor;   // Browser only\r\n    static pow(base: Decimal.Value, exponent: Decimal.Value): Decimal;\r\n    static random(significantDigits?: number): Decimal;\r\n    static round(n: Decimal.Value): Decimal;\r\n    static set(object: Decimal.Config): Decimal.Constructor;\r\n    static sign(n: Decimal.Value): number;\r\n    static sin(n: Decimal.Value): Decimal;\r\n    static sinh(n: Decimal.Value): Decimal;\r\n    static sqrt(n: Decimal.Value): Decimal;\r\n    static sub(x: Decimal.Value, y: Decimal.Value): Decimal;\r\n    static sum(...n: Decimal.Value[]): Decimal;\r\n    static tan(n: Decimal.Value): Decimal;\r\n    static tanh(n: Decimal.Value): Decimal;\r\n    static trunc(n: Decimal.Value): Decimal;\r\n\r\n    static readonly default?: Decimal.Constructor;\r\n    static readonly Decimal?: Decimal.Constructor;\r\n\r\n    static readonly precision: number;\r\n    static readonly rounding: Decimal.Rounding;\r\n    static readonly toExpNeg: number;\r\n    static readonly toExpPos: number;\r\n    static readonly minE: number;\r\n    static readonly maxE: number;\r\n    static readonly crypto: boolean;\r\n    static readonly modulo: Decimal.Modulo;\r\n\r\n    static readonly ROUND_UP: 0;\r\n    static readonly ROUND_DOWN: 1;\r\n    static readonly ROUND_CEIL: 2;\r\n    static readonly ROUND_FLOOR: 3;\r\n    static readonly ROUND_HALF_UP: 4;\r\n    static readonly ROUND_HALF_DOWN: 5;\r\n    static readonly ROUND_HALF_EVEN: 6;\r\n    static readonly ROUND_HALF_CEIL: 7;\r\n    static readonly ROUND_HALF_FLOOR: 8;\r\n    static readonly EUCLID: 9;\r\n}\r\n\r\n/**\r\n * Interface for any Decimal.js-like library\r\n * Allows us to accept Decimal.js from different\r\n * versions and some compatible alternatives\r\n */\r\nexport declare interface DecimalJsLike {\r\n    d: number[];\r\n    e: number;\r\n    s: number;\r\n    toFixed(): string;\r\n}\r\n\r\nexport declare type DefaultArgs = InternalArgs<{}, {}, {}, {}>;\r\n\r\nexport declare type DefaultSelection<Payload extends OperationPayload, Args = {}, GlobalOmitOptions = {}> = Args extends {\r\n    omit: infer LocalOmit;\r\n} ? ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], PatchFlat<LocalOmit, ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>> : ApplyOmit<UnwrapPayload<{\r\n    default: Payload;\r\n}>['default'], ExtractGlobalOmit<GlobalOmitOptions, Uncapitalize<Payload['name']>>>;\r\n\r\nexport declare function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel): void;\r\n\r\ndeclare function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)): (client: Client) => Client;\r\n\r\ndeclare const denylist: readonly [\"$connect\", \"$disconnect\", \"$on\", \"$transaction\", \"$extends\"];\r\n\r\ndeclare type Deprecation = ReadonlyDeep_2<{\r\n    sinceVersion: string;\r\n    reason: string;\r\n    plannedRemovalVersion?: string;\r\n}>;\r\n\r\ndeclare type DeserializedResponse = Array<Record<string, unknown>>;\r\n\r\nexport declare function deserializeJsonResponse(result: unknown): unknown;\r\n\r\nexport declare function deserializeRawResult(response: RawResponse): DeserializedResponse;\r\n\r\nexport declare type DevTypeMapDef = {\r\n    meta: {\r\n        modelProps: string;\r\n    };\r\n    model: {\r\n        [Model in PropertyKey]: {\r\n            [Operation in PropertyKey]: DevTypeMapFnDef;\r\n        };\r\n    };\r\n    other: {\r\n        [Operation in PropertyKey]: DevTypeMapFnDef;\r\n    };\r\n};\r\n\r\nexport declare type DevTypeMapFnDef = {\r\n    args: any;\r\n    result: any;\r\n    payload: OperationPayload;\r\n};\r\n\r\nexport declare namespace DMMF {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\ndeclare namespace DMMF_2 {\r\n    export {\r\n        datamodelEnumToSchemaEnum,\r\n        Document_2 as Document,\r\n        Mappings,\r\n        OtherOperationMappings,\r\n        DatamodelEnum,\r\n        SchemaEnum,\r\n        EnumValue,\r\n        Datamodel,\r\n        uniqueIndex,\r\n        PrimaryKey,\r\n        Model,\r\n        FieldKind,\r\n        FieldNamespace,\r\n        FieldLocation,\r\n        Field,\r\n        FieldDefault,\r\n        FieldDefaultScalar,\r\n        Index,\r\n        IndexType,\r\n        IndexField,\r\n        SortOrder,\r\n        Schema,\r\n        Query,\r\n        QueryOutput,\r\n        TypeRef,\r\n        InputTypeRef,\r\n        SchemaArg,\r\n        OutputType,\r\n        SchemaField,\r\n        OutputTypeRef,\r\n        Deprecation,\r\n        InputType,\r\n        FieldRefType,\r\n        FieldRefAllowType,\r\n        ModelMapping,\r\n        ModelAction\r\n    }\r\n}\r\n\r\nexport declare function dmmfToRuntimeDataModel(dmmfDataModel: DMMF_2.Datamodel): RuntimeDataModel;\r\n\r\ndeclare type Document_2 = ReadonlyDeep_2<{\r\n    datamodel: Datamodel;\r\n    schema: Schema;\r\n    mappings: Mappings;\r\n}>;\r\n\r\n/**\r\n * A generic driver adapter factory that allows the user to instantiate a\r\n * driver adapter. The query and result types are specific to the adapter.\r\n */\r\ndeclare interface DriverAdapterFactory<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Instantiate a driver adapter.\r\n     */\r\n    connect(): Promise<Queryable<Query, Result>>;\r\n}\r\n\r\ndeclare type DynamicArgType = ArgType | {\r\n    arity: 'tuple';\r\n    elements: ArgType[];\r\n};\r\n\r\n/** Client */\r\nexport declare type DynamicClientExtensionArgs<C_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof C_]: unknown;\r\n} & {\r\n    [K: symbol]: {\r\n        ctx: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList> & {\r\n            $parent: Optional<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThis<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['client']]: Return<ExtArgs['client'][P]>;\r\n} & {\r\n    [P in Exclude<TypeMap['meta']['modelProps'], keyof ExtArgs['client']>]: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, P>, ExtArgs>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['other']['operations'], keyof ExtArgs['client']>]: P extends keyof ClientOtherOps ? ClientOtherOps[P] : never;\r\n} & {\r\n    [P in Exclude<ClientBuiltInProp, keyof ExtArgs['client']>]: DynamicClientExtensionThisBuiltin<TypeMap, TypeMapCb, ExtArgs>[P];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['other'];\r\n    };\r\n};\r\n\r\nexport declare type DynamicClientExtensionThisBuiltin<TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    $extends: ExtendsHook<'extends', TypeMapCb, ExtArgs, Call<TypeMapCb, {\r\n        extArgs: ExtArgs;\r\n    }>>;\r\n    $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: {\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<UnwrapTuple<P>>;\r\n    $transaction<R>(fn: (client: Omit<DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>, ITXClientDenyList>) => Promise<R>, options?: {\r\n        maxWait?: number;\r\n        timeout?: number;\r\n        isolationLevel?: TypeMap['meta']['txIsolationLevel'];\r\n    }): Promise<R>;\r\n    $disconnect(): Promise<void>;\r\n    $connect(): Promise<void>;\r\n};\r\n\r\n/** Model */\r\nexport declare type DynamicModelExtensionArgs<M_, TypeMap extends TypeMapDef, TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>> = {\r\n    [K in keyof M_]: K extends '$allModels' ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {};\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof M_[K]]?: unknown;\r\n    } & {\r\n        [K: symbol]: {\r\n            ctx: DynamicModelExtensionThis<TypeMap, ModelKey<TypeMap, K>, ExtArgs> & {\r\n                $parent: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>;\r\n            } & {\r\n                $name: ModelKey<TypeMap, K>;\r\n            } & {\r\n                /**\r\n                 * @deprecated Use `$name` instead.\r\n                 */\r\n                name: ModelKey<TypeMap, K>;\r\n            };\r\n        };\r\n    } : never;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFluentApi<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey, Null> = {\r\n    [K in keyof TypeMap['model'][M]['payload']['objects']]: <A>(args?: Exact<A, Path<TypeMap['model'][M]['operations'][P]['args']['select'], [K]>>) => PrismaPromise<Path<DynamicModelExtensionFnResultBase<TypeMap, M, {\r\n        select: {\r\n            [P in K]: A;\r\n        };\r\n    }, P>, [K]> | Null> & DynamicModelExtensionFluentApi<TypeMap, (TypeMap['model'][M]['payload']['objects'][K] & {})['name'], P, Null | Select<TypeMap['model'][M]['payload']['objects'][K], null>>;\r\n};\r\n\r\nexport declare type DynamicModelExtensionFnResult<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey, Null> = P extends FluentOperation ? DynamicModelExtensionFluentApi<TypeMap, M, P, Null> & PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P> | Null> : PrismaPromise<DynamicModelExtensionFnResultBase<TypeMap, M, A, P>>;\r\n\r\nexport declare type DynamicModelExtensionFnResultBase<TypeMap extends TypeMapDef, M extends PropertyKey, A, P extends PropertyKey> = GetResult<TypeMap['model'][M]['payload'], A, P & Operation, TypeMap['globalOmitOptions']>;\r\n\r\nexport declare type DynamicModelExtensionFnResultNull<P extends PropertyKey> = P extends 'findUnique' | 'findFirst' ? null : never;\r\n\r\nexport declare type DynamicModelExtensionOperationFn<TypeMap extends TypeMapDef, M extends PropertyKey, P extends PropertyKey> = {} extends TypeMap['model'][M]['operations'][P]['args'] ? <A extends TypeMap['model'][M]['operations'][P]['args']>(args?: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>> : <A extends TypeMap['model'][M]['operations'][P]['args']>(args: Exact<A, TypeMap['model'][M]['operations'][P]['args']>) => DynamicModelExtensionFnResult<TypeMap, M, A, P, DynamicModelExtensionFnResultNull<P>>;\r\n\r\nexport declare type DynamicModelExtensionThis<TypeMap extends TypeMapDef, M extends PropertyKey, ExtArgs extends Record<string, any>> = {\r\n    [P in keyof ExtArgs['model'][Uncapitalize<M & string>]]: Return<ExtArgs['model'][Uncapitalize<M & string>][P]>;\r\n} & {\r\n    [P in Exclude<keyof TypeMap['model'][M]['operations'], keyof ExtArgs['model'][Uncapitalize<M & string>]>]: DynamicModelExtensionOperationFn<TypeMap, M, P>;\r\n} & {\r\n    [P in Exclude<'fields', keyof ExtArgs['model'][Uncapitalize<M & string>]>]: TypeMap['model'][M]['fields'];\r\n} & {\r\n    [K: symbol]: {\r\n        types: TypeMap['model'][M];\r\n    };\r\n};\r\n\r\n/** Query */\r\nexport declare type DynamicQueryExtensionArgs<Q_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof Q_]: K extends '$allOperations' ? (args: {\r\n        model?: string;\r\n        operation: string;\r\n        args: any;\r\n        query: (args: any) => PrismaPromise<any>;\r\n    }) => Promise<any> : K extends '$allModels' ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][keyof TypeMap['model']]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], keyof TypeMap['model'][keyof TypeMap['model']]['operations']> : P extends keyof TypeMap['model'][keyof TypeMap['model']]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', keyof TypeMap['model'], P> : never;\r\n    } : K extends TypeMap['meta']['modelProps'] ? {\r\n        [P in keyof Q_[K] | keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] | '$allOperations']?: P extends '$allOperations' ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations']> : P extends keyof TypeMap['model'][ModelKey<TypeMap, K>]['operations'] ? DynamicQueryExtensionCb<TypeMap, 'model', ModelKey<TypeMap, K>, P> : never;\r\n    } : K extends keyof TypeMap['other']['operations'] ? DynamicQueryExtensionCb<[TypeMap], 0, 'other', K> : never;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCb<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = <A extends DynamicQueryExtensionCbArgs<TypeMap, _0, _1, _2>>(args: A) => Promise<TypeMap[_0][_1][_2]['result']>;\r\n\r\nexport declare type DynamicQueryExtensionCbArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = (_1 extends unknown ? _2 extends unknown ? {\r\n    args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>;\r\n    model: _0 extends 0 ? undefined : _1;\r\n    operation: _2;\r\n    query: <A extends DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>>(args: A) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n} : never : never) & {\r\n    query: (args: DynamicQueryExtensionCbArgsArgs<TypeMap, _0, _1, _2>) => PrismaPromise<TypeMap[_0][_1]['operations'][_2]['result']>;\r\n};\r\n\r\nexport declare type DynamicQueryExtensionCbArgsArgs<TypeMap extends TypeMapDef, _0 extends PropertyKey, _1 extends PropertyKey, _2 extends PropertyKey> = _2 extends '$queryRaw' | '$executeRaw' ? Sql : TypeMap[_0][_1]['operations'][_2]['args'];\r\n\r\n/** Result */\r\nexport declare type DynamicResultExtensionArgs<R_, TypeMap extends TypeMapDef> = {\r\n    [K in keyof R_]: {\r\n        [P in keyof R_[K]]?: {\r\n            needs?: DynamicResultExtensionNeeds<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>;\r\n            compute(data: DynamicResultExtensionData<TypeMap, ModelKey<TypeMap, K>, R_[K][P]>): any;\r\n        };\r\n    };\r\n};\r\n\r\nexport declare type DynamicResultExtensionData<TypeMap extends TypeMapDef, M extends PropertyKey, S> = GetFindResult<TypeMap['model'][M]['payload'], {\r\n    select: S;\r\n}, {}>;\r\n\r\nexport declare type DynamicResultExtensionNeeds<TypeMap extends TypeMapDef, M extends PropertyKey, S> = {\r\n    [K in keyof S]: K extends keyof TypeMap['model'][M]['payload']['scalars'] ? S[K] : never;\r\n} & {\r\n    [N in keyof TypeMap['model'][M]['payload']['scalars']]?: boolean;\r\n};\r\n\r\n/**\r\n * Placeholder value for \"no text\".\r\n */\r\nexport declare const empty: Sql;\r\n\r\nexport declare type EmptyToUnknown<T> = T;\r\n\r\ndeclare interface Engine<InteractiveTransactionPayload = unknown> {\r\n    /** The name of the engine. This is meant to be consumed externally */\r\n    readonly name: string;\r\n    onBeforeExit(callback: () => Promise<void>): void;\r\n    start(): Promise<void>;\r\n    stop(): Promise<void>;\r\n    version(forceRun?: boolean): Promise<string> | string;\r\n    request<T>(query: JsonQuery, options: RequestOptions<InteractiveTransactionPayload>): Promise<QueryEngineResultData<T>>;\r\n    requestBatch<T>(queries: JsonQuery[], options: RequestBatchOptions<InteractiveTransactionPayload>): Promise<BatchQueryEngineResult<T>[]>;\r\n    transaction(action: 'start', headers: Transaction_2.TransactionHeaders, options: Transaction_2.Options): Promise<Transaction_2.InteractiveTransactionInfo<unknown>>;\r\n    transaction(action: 'commit', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    transaction(action: 'rollback', headers: Transaction_2.TransactionHeaders, info: Transaction_2.InteractiveTransactionInfo<unknown>): Promise<void>;\r\n    metrics(options: MetricsOptionsJson): Promise<Metrics>;\r\n    metrics(options: MetricsOptionsPrometheus): Promise<string>;\r\n    applyPendingMigrations(): Promise<void>;\r\n}\r\n\r\ndeclare interface EngineConfig {\r\n    cwd: string;\r\n    dirname: string;\r\n    enableDebugLogs?: boolean;\r\n    allowTriggerPanic?: boolean;\r\n    prismaPath?: string;\r\n    generator?: GeneratorConfig;\r\n    /**\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    overrideDatasources: Datasources;\r\n    showColors?: boolean;\r\n    logQueries?: boolean;\r\n    logLevel?: 'info' | 'warn';\r\n    env: Record<string, string>;\r\n    flags?: string[];\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    previewFeatures?: string[];\r\n    engineEndpoint?: string;\r\n    activeProvider?: string;\r\n    logEmitter: LogEmitter;\r\n    transactionOptions: Transaction_2.Options;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`.\r\n     * If set, this is only used in the library engine, and all queries would be performed through it,\r\n     * rather than Prisma's Rust drivers.\r\n     * @remarks only used by LibraryEngine.ts\r\n     */\r\n    adapter?: SqlDriverAdapterFactory;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * The contents of the datasource url saved in a string\r\n     * @remarks only used by DataProxyEngine.ts\r\n     * @remarks this field is used internally by Policy, do not rename or remove\r\n     */\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used by DataProxyEngine.ts\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * The helper for interaction with OTEL tracing\r\n     * @remarks enabling is determined by the client and @prisma/instrumentation package\r\n     */\r\n    tracingHelper: TracingHelper;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * Web Assembly module loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n    /**\r\n     * Allows Accelerate to use runtime utilities from the client. These are\r\n     * necessary for the AccelerateEngine to function correctly.\r\n     */\r\n    accelerateUtils?: {\r\n        resolveDatasourceUrl: typeof resolveDatasourceUrl;\r\n        getBatchRequestPayload: typeof getBatchRequestPayload;\r\n        prismaGraphQLToJSError: typeof prismaGraphQLToJSError;\r\n        PrismaClientUnknownRequestError: typeof PrismaClientUnknownRequestError;\r\n        PrismaClientInitializationError: typeof PrismaClientInitializationError;\r\n        PrismaClientKnownRequestError: typeof PrismaClientKnownRequestError;\r\n        debug: (...args: any[]) => void;\r\n        engineVersion: string;\r\n        clientVersion: string;\r\n    };\r\n}\r\n\r\ndeclare type EngineEvent<E extends EngineEventType> = E extends QueryEventType ? QueryEvent : LogEvent;\r\n\r\ndeclare type EngineEventType = QueryEventType | LogEventType;\r\n\r\ndeclare type EngineSpan = {\r\n    id: EngineSpanId;\r\n    parentId: string | null;\r\n    name: string;\r\n    startTime: HrTime;\r\n    endTime: HrTime;\r\n    kind: EngineSpanKind;\r\n    attributes?: Record<string, unknown>;\r\n    links?: EngineSpanId[];\r\n};\r\n\r\ndeclare type EngineSpanId = string;\r\n\r\ndeclare type EngineSpanKind = 'client' | 'internal';\r\n\r\ndeclare type EngineWasmLoadingConfig = {\r\n    /**\r\n     * WASM-bindgen runtime for corresponding module\r\n     */\r\n    getRuntime: () => Promise<{\r\n        __wbg_set_wasm(exports: unknown): void;\r\n        QueryEngine: QueryEngineConstructor;\r\n    }>;\r\n    /**\r\n     * Loads the raw wasm module for the wasm query engine. This configuration is\r\n     * generated specifically for each type of client, eg. Node.js client and Edge\r\n     * clients will have different implementations.\r\n     * @remarks this is a callback on purpose, we only load the wasm if needed.\r\n     * @remarks only used by LibraryEngine\r\n     */\r\n    getQueryEngineWasmModule: () => Promise<unknown>;\r\n};\r\n\r\ndeclare type EnumValue = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n}>;\r\n\r\ndeclare type EnvPaths = {\r\n    rootEnvPath: string | null;\r\n    schemaEnvPath: string | undefined;\r\n};\r\n\r\ndeclare interface EnvValue {\r\n    fromEnvVar: null | string;\r\n    value: null | string;\r\n}\r\n\r\nexport declare type Equals<A, B> = (<T>() => T extends A ? 1 : 2) extends (<T>() => T extends B ? 1 : 2) ? 1 : 0;\r\n\r\ndeclare type Error_2 = MappedError & {\r\n    originalCode?: string;\r\n    originalMessage?: string;\r\n};\r\n\r\ndeclare type ErrorCapturingFunction<T> = T extends (...args: infer A) => Promise<infer R> ? (...args: A) => Promise<Result_4<ErrorCapturingInterface<R>>> : T extends (...args: infer A) => infer R ? (...args: A) => Result_4<ErrorCapturingInterface<R>> : T;\r\n\r\ndeclare type ErrorCapturingInterface<T> = {\r\n    [K in keyof T]: ErrorCapturingFunction<T[K]>;\r\n};\r\n\r\ndeclare interface ErrorCapturingSqlDriverAdapter extends ErrorCapturingInterface<SqlDriverAdapter> {\r\n    readonly errorRegistry: ErrorRegistry;\r\n}\r\n\r\ndeclare type ErrorFormat = 'pretty' | 'colorless' | 'minimal';\r\n\r\ndeclare type ErrorRecord = {\r\n    error: unknown;\r\n};\r\n\r\ndeclare interface ErrorRegistry {\r\n    consumeError(id: number): ErrorRecord | undefined;\r\n}\r\n\r\ndeclare interface ErrorWithBatchIndex {\r\n    batchRequestIdx?: number;\r\n}\r\n\r\ndeclare type EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit'] ? () => Promise<void> : [E] extends [LogLevel] ? (event: EngineEvent<E>) => void : never;\r\n\r\nexport declare type Exact<A, W> = (A extends unknown ? (W extends A ? {\r\n    [K in keyof A]: Exact<A[K], W[K]>;\r\n} : W) : never) | (A extends Narrowable ? A : never);\r\n\r\n/**\r\n * Defines Exception.\r\n *\r\n * string or an object with one of (message or name or code) and optional stack\r\n */\r\ndeclare type Exception = ExceptionWithCode | ExceptionWithMessage | ExceptionWithName | string;\r\n\r\ndeclare interface ExceptionWithCode {\r\n    code: string | number;\r\n    name?: string;\r\n    message?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithMessage {\r\n    code?: string | number;\r\n    message: string;\r\n    name?: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare interface ExceptionWithName {\r\n    code?: string | number;\r\n    message?: string;\r\n    name: string;\r\n    stack?: string;\r\n}\r\n\r\ndeclare type ExtendedEventType = LogLevel | 'beforeExit';\r\n\r\ndeclare type ExtendedSpanOptions = SpanOptions & {\r\n    /** The name of the span */\r\n    name: string;\r\n    internal?: boolean;\r\n    /** Whether it propagates context (?=true) */\r\n    active?: boolean;\r\n    /** The context to append the span to */\r\n    context?: Context;\r\n};\r\n\r\n/** $extends, defineExtension */\r\nexport declare interface ExtendsHook<Variant extends 'extends' | 'define', TypeMapCb extends TypeMapCbDef, ExtArgs extends Record<string, any>, TypeMap extends TypeMapDef = Call<TypeMapCb, {\r\n    extArgs: ExtArgs;\r\n}>> {\r\n    extArgs: ExtArgs;\r\n    <R_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, R, M_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels']?: unknown;\r\n    }, M, Q_ extends {\r\n        [K in TypeMap['meta']['modelProps'] | '$allModels' | keyof TypeMap['other']['operations'] | '$allOperations']?: unknown;\r\n    }, C_ extends {\r\n        [K in string]?: unknown;\r\n    }, C, Args extends InternalArgs = InternalArgs<R, M, {}, C>, MergedArgs extends InternalArgs = MergeExtArgs<TypeMap, ExtArgs, Args>>(extension: ((client: DynamicClientExtensionThis<TypeMap, TypeMapCb, ExtArgs>) => {\r\n        $extends: {\r\n            extArgs: Args;\r\n        };\r\n    }) | {\r\n        name?: string;\r\n        query?: DynamicQueryExtensionArgs<Q_, TypeMap>;\r\n        result?: DynamicResultExtensionArgs<R_, TypeMap> & R;\r\n        model?: DynamicModelExtensionArgs<M_, TypeMap, TypeMapCb, ExtArgs> & M;\r\n        client?: DynamicClientExtensionArgs<C_, TypeMap, TypeMapCb, ExtArgs> & C;\r\n    }): {\r\n        extends: DynamicClientExtensionThis<Call<TypeMapCb, {\r\n            extArgs: MergedArgs;\r\n        }>, TypeMapCb, MergedArgs>;\r\n        define: (client: any) => {\r\n            $extends: {\r\n                extArgs: Args;\r\n            };\r\n        };\r\n    }[Variant];\r\n}\r\n\r\nexport declare type ExtensionArgs = Optional<RequiredExtensionArgs>;\r\n\r\ndeclare namespace Extensions {\r\n    export {\r\n        defineExtension,\r\n        getExtensionContext\r\n    }\r\n}\r\nexport { Extensions }\r\n\r\ndeclare namespace Extensions_2 {\r\n    export {\r\n        InternalArgs,\r\n        DefaultArgs,\r\n        GetPayloadResultExtensionKeys,\r\n        GetPayloadResultExtensionObject,\r\n        GetPayloadResult,\r\n        GetSelect,\r\n        GetOmit,\r\n        DynamicQueryExtensionArgs,\r\n        DynamicQueryExtensionCb,\r\n        DynamicQueryExtensionCbArgs,\r\n        DynamicQueryExtensionCbArgsArgs,\r\n        DynamicResultExtensionArgs,\r\n        DynamicResultExtensionNeeds,\r\n        DynamicResultExtensionData,\r\n        DynamicModelExtensionArgs,\r\n        DynamicModelExtensionThis,\r\n        DynamicModelExtensionOperationFn,\r\n        DynamicModelExtensionFnResult,\r\n        DynamicModelExtensionFnResultBase,\r\n        DynamicModelExtensionFluentApi,\r\n        DynamicModelExtensionFnResultNull,\r\n        DynamicClientExtensionArgs,\r\n        DynamicClientExtensionThis,\r\n        ClientBuiltInProp,\r\n        DynamicClientExtensionThisBuiltin,\r\n        ExtendsHook,\r\n        MergeExtArgs,\r\n        AllModelsToStringIndex,\r\n        TypeMapDef,\r\n        DevTypeMapDef,\r\n        DevTypeMapFnDef,\r\n        ClientOptionDef,\r\n        ClientOtherOps,\r\n        TypeMapCbDef,\r\n        ModelKey,\r\n        RequiredExtensionArgs as UserArgs\r\n    }\r\n}\r\n\r\nexport declare type ExtractGlobalOmit<Options, ModelName extends string> = Options extends {\r\n    omit: {\r\n        [K in ModelName]: infer GlobalOmit;\r\n    };\r\n} ? GlobalOmit : {};\r\n\r\ndeclare type Field = ReadonlyDeep_2<{\r\n    kind: FieldKind;\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n    isUnique: boolean;\r\n    isId: boolean;\r\n    isReadOnly: boolean;\r\n    isGenerated?: boolean;\r\n    isUpdatedAt?: boolean;\r\n    /**\r\n     * Describes the data type in the same the way it is defined in the Prisma schema:\r\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\r\n     */\r\n    type: string;\r\n    /**\r\n     * Native database type, if specified.\r\n     * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\r\n     * `@db.Text` is encoded as `['Text', []]`.\r\n     */\r\n    nativeType?: [string, string[]] | null;\r\n    dbName?: string | null;\r\n    hasDefaultValue: boolean;\r\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[];\r\n    relationFromFields?: string[];\r\n    relationToFields?: string[];\r\n    relationOnDelete?: string;\r\n    relationOnUpdate?: string;\r\n    relationName?: string;\r\n    documentation?: string;\r\n}>;\r\n\r\ndeclare type FieldDefault = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: Array<string | number>;\r\n}>;\r\n\r\ndeclare type FieldDefaultScalar = string | boolean | number;\r\n\r\ndeclare type FieldInitializer = {\r\n    type: 'value';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'lastInsertId';\r\n};\r\n\r\ndeclare type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported';\r\n\r\ndeclare type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes';\r\n\r\ndeclare type FieldNamespace = 'model' | 'prisma';\r\n\r\ndeclare type FieldOperation = {\r\n    type: 'set';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'add';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'subtract';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'multiply';\r\n    value: PrismaValue;\r\n} | {\r\n    type: 'divide';\r\n    value: PrismaValue;\r\n};\r\n\r\n/**\r\n * A reference to a specific field of a specific model\r\n */\r\nexport declare interface FieldRef<Model, FieldType> {\r\n    readonly modelName: Model;\r\n    readonly name: string;\r\n    readonly typeName: FieldType;\r\n    readonly isList: boolean;\r\n}\r\n\r\ndeclare type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>;\r\n\r\ndeclare type FieldRefType = ReadonlyDeep_2<{\r\n    name: string;\r\n    allowTypes: FieldRefAllowType[];\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type FieldScalarType = {\r\n    type: 'string' | 'int' | 'bigint' | 'float' | 'boolean' | 'json' | 'object' | 'datetime' | 'decimal' | 'unsupported';\r\n} | {\r\n    type: 'enum';\r\n    name: string;\r\n} | {\r\n    type: 'bytes';\r\n    encoding: 'array' | 'base64' | 'hex';\r\n};\r\n\r\ndeclare type FieldType = {\r\n    arity: Arity;\r\n} & FieldScalarType;\r\n\r\ndeclare type FluentOperation = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'create' | 'update' | 'upsert' | 'delete';\r\n\r\nexport declare interface Fn<Params = unknown, Returns = unknown> {\r\n    params: Params;\r\n    returns: Returns;\r\n}\r\n\r\ndeclare type Fragment = {\r\n    type: 'stringChunk';\r\n    chunk: string;\r\n} | {\r\n    type: 'parameter';\r\n} | {\r\n    type: 'parameterTuple';\r\n} | {\r\n    type: 'parameterTupleList';\r\n    itemPrefix: string;\r\n    itemSeparator: string;\r\n    itemSuffix: string;\r\n    groupSeparator: string;\r\n};\r\n\r\ndeclare interface GeneratorConfig {\r\n    name: string;\r\n    output: EnvValue | null;\r\n    isCustomOutput?: boolean;\r\n    provider: EnvValue;\r\n    config: {\r\n        /** `output` is a reserved name and will only be available directly at `generator.output` */\r\n        output?: never;\r\n        /** `provider` is a reserved name and will only be available directly at `generator.provider` */\r\n        provider?: never;\r\n        /** `binaryTargets` is a reserved name and will only be available directly at `generator.binaryTargets` */\r\n        binaryTargets?: never;\r\n        /** `previewFeatures` is a reserved name and will only be available directly at `generator.previewFeatures` */\r\n        previewFeatures?: never;\r\n    } & {\r\n        [key: string]: string | string[] | undefined;\r\n    };\r\n    binaryTargets: BinaryTargetsEnvValue[];\r\n    previewFeatures: string[];\r\n    envPaths?: EnvPaths;\r\n    sourceFilePath: string;\r\n}\r\n\r\nexport declare type GetAggregateResult<P extends OperationPayload, A> = {\r\n    [K in keyof A as K extends Aggregate ? K : never]: K extends '_count' ? A[K] extends true ? number : Count<A[K]> : {\r\n        [J in keyof A[K] & string]: P['scalars'][J] | null;\r\n    };\r\n};\r\n\r\ndeclare function getBatchRequestPayload(batch: JsonQuery[], transaction?: TransactionOptions_2<unknown>): QueryEngineBatchRequest;\r\n\r\nexport declare type GetBatchResult = {\r\n    count: number;\r\n};\r\n\r\nexport declare type GetCountResult<A> = A extends {\r\n    select: infer S;\r\n} ? (S extends true ? number : Count<S>) : number;\r\n\r\ndeclare function getExtensionContext<T>(that: T): Context_2<T>;\r\n\r\nexport declare type GetFindResult<P extends OperationPayload, A, GlobalOmitOptions> = Equals<A, any> extends 1 ? DefaultSelection<P, A, GlobalOmitOptions> : A extends {\r\n    select: infer S extends object;\r\n} & Record<string, unknown> | {\r\n    include: infer I extends object;\r\n} & Record<string, unknown> ? {\r\n    [K in keyof S | keyof I as (S & I)[K] extends false | undefined | Skip | null ? never : K]: (S & I)[K] extends object ? P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? GetFindResult<O, (S & I)[K], GlobalOmitOptions> | SelectField<P, K> & null : never : K extends '_count' ? Count<GetFindResult<P, (S & I)[K], GlobalOmitOptions>> : never : P extends SelectablePayloadFields<K, (infer O)[]> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions>[] : never : P extends SelectablePayloadFields<K, infer O | null> ? O extends OperationPayload ? DefaultSelection<O, {}, GlobalOmitOptions> | SelectField<P, K> & null : never : P extends {\r\n        scalars: {\r\n            [k in K]: infer O;\r\n        };\r\n    } ? O : K extends '_count' ? Count<P['objects']> : never;\r\n} & (A extends {\r\n    include: any;\r\n} & Record<string, unknown> ? DefaultSelection<P, A & {\r\n    omit: A['omit'];\r\n}, GlobalOmitOptions> : unknown) : DefaultSelection<P, A, GlobalOmitOptions>;\r\n\r\nexport declare type GetGroupByResult<P extends OperationPayload, A> = A extends {\r\n    by: string[];\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by'][number]]: P['scalars'][K];\r\n}> : A extends {\r\n    by: string;\r\n} ? Array<GetAggregateResult<P, A> & {\r\n    [K in A['by']]: P['scalars'][K];\r\n}> : {}[];\r\n\r\nexport declare type GetOmit<BaseKeys extends string, R extends InternalArgs['result'][string], ExtraType = never> = {\r\n    [K in (string extends keyof R ? never : keyof R) | BaseKeys]?: boolean | ExtraType;\r\n};\r\n\r\nexport declare type GetPayloadResult<Base extends Record<any, any>, R extends InternalArgs['result'][string]> = Omit<Base, GetPayloadResultExtensionKeys<R>> & GetPayloadResultExtensionObject<R>;\r\n\r\nexport declare type GetPayloadResultExtensionKeys<R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = KR;\r\n\r\nexport declare type GetPayloadResultExtensionObject<R extends InternalArgs['result'][string]> = {\r\n    [K in GetPayloadResultExtensionKeys<R>]: R[K] extends () => {\r\n        compute: (...args: any) => infer C;\r\n    } ? C : never;\r\n};\r\n\r\nexport declare function getPrismaClient(config: GetPrismaClientConfig): {\r\n    new (optionsArg?: PrismaClientOptions): {\r\n        _originalClient: any;\r\n        _runtimeDataModel: RuntimeDataModel;\r\n        _requestHandler: RequestHandler;\r\n        _connectionPromise?: Promise<any> | undefined;\r\n        _disconnectionPromise?: Promise<any> | undefined;\r\n        _engineConfig: EngineConfig;\r\n        _accelerateEngineConfig: AccelerateEngineConfig;\r\n        _clientVersion: string;\r\n        _errorFormat: ErrorFormat;\r\n        _tracingHelper: TracingHelper;\r\n        _previewFeatures: string[];\r\n        _activeProvider: string;\r\n        _globalOmit?: GlobalOmitOptions | undefined;\r\n        _extensions: MergedExtensionsList;\r\n        /**\r\n         * @remarks This is used internally by Policy, do not rename or remove\r\n         */\r\n        _engine: Engine;\r\n        /**\r\n         * A fully constructed/applied Client that references the parent\r\n         * PrismaClient. This is used for Client extensions only.\r\n         */\r\n        _appliedParent: any;\r\n        _createPrismaPromise: PrismaPromiseFactory;\r\n        $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): any;\r\n        $connect(): Promise<void>;\r\n        /**\r\n         * Disconnect from the database\r\n         */\r\n        $disconnect(): Promise<void>;\r\n        /**\r\n         * Executes a raw query and always returns a number\r\n         */\r\n        $executeRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<number>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $executeRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw command only for MongoDB\r\n         *\r\n         * @param command\r\n         * @returns\r\n         */\r\n        $runCommandRaw(command: Record<string, JsInputValue>): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Executes a raw query and returns selected data\r\n         */\r\n        $queryRawInternal(transaction: PrismaPromiseTransaction | undefined, clientMethod: string, args: RawQueryArgs, middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>): Promise<any>;\r\n        /**\r\n         * Executes a raw query provided through a safe tag function\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Counterpart to $queryRaw, that returns strongly typed results\r\n         * @param typedSql\r\n         */\r\n        $queryRawTyped(typedSql: UnknownTypedSql): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\r\n         * @see https://github.com/prisma/prisma/issues/7142\r\n         *\r\n         * @param query\r\n         * @param values\r\n         * @returns\r\n         */\r\n        $queryRawUnsafe(query: string, ...values: RawValue[]): PrismaPromise_2<unknown, any>;\r\n        /**\r\n         * Execute a batch of requests in a transaction\r\n         * @param requests\r\n         * @param options\r\n         */\r\n        _transactionWithArray({ promises, options, }: {\r\n            promises: Array<PrismaPromise_2<any>>;\r\n            options?: BatchTransactionOptions;\r\n        }): Promise<any>;\r\n        /**\r\n         * Perform a long-running transaction\r\n         * @param callback\r\n         * @param options\r\n         * @returns\r\n         */\r\n        _transactionWithCallback({ callback, options, }: {\r\n            callback: (client: Client) => Promise<unknown>;\r\n            options?: Options;\r\n        }): Promise<unknown>;\r\n        _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client;\r\n        /**\r\n         * Execute queries within a transaction\r\n         * @param input a callback or a query list\r\n         * @param options to set timeouts (callback)\r\n         * @returns\r\n         */\r\n        $transaction(input: any, options?: any): Promise<any>;\r\n        /**\r\n         * Runs the middlewares over params before executing a request\r\n         * @param internalParams\r\n         * @returns\r\n         */\r\n        _request(internalParams: InternalRequestParams): Promise<any>;\r\n        _executeRequest({ args, clientMethod, dataPath, callsite, action, model, argsMapper, transaction, unpacker, otelParentCtx, customDataProxyFetch, }: InternalRequestParams): Promise<any>;\r\n        $metrics: MetricsClient;\r\n        /**\r\n         * Shortcut for checking a preview flag\r\n         * @param feature preview flag\r\n         * @returns\r\n         */\r\n        _hasPreviewFlag(feature: string): boolean;\r\n        $applyPendingMigrations(): Promise<void>;\r\n        $extends: typeof $extends;\r\n        readonly [Symbol.toStringTag]: string;\r\n    };\r\n};\r\n\r\n/**\r\n * Config that is stored into the generated client. When the generated client is\r\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\r\n * closure with that config around a non-instantiated [[PrismaClient]].\r\n */\r\nexport declare type GetPrismaClientConfig = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    generator?: GeneratorConfig;\r\n    relativeEnvPaths?: {\r\n        rootEnvPath?: string | null;\r\n        schemaEnvPath?: string | null;\r\n    };\r\n    relativePath: string;\r\n    dirname: string;\r\n    clientVersion: string;\r\n    engineVersion: string;\r\n    datasourceNames: string[];\r\n    activeProvider: ActiveConnectorType;\r\n    /**\r\n     * The contents of the schema encoded into a string\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchema: string;\r\n    /**\r\n     * A special env object just for the data proxy edge runtime.\r\n     * Allows bundlers to inject their own env variables (Vercel).\r\n     * Allows platforms to declare global variables as env (Workers).\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    injectableEdgeEnv?: () => LoadedEnv;\r\n    /**\r\n     * The contents of the datasource url saved in a string.\r\n     * This can either be an env var name or connection string.\r\n     * It is needed by the client to connect to the Data Proxy.\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineDatasources: {\r\n        [name in string]: {\r\n            url: EnvValue;\r\n        };\r\n    };\r\n    /**\r\n     * The string hash that was produced for a given schema\r\n     * @remarks only used for the purpose of data proxy\r\n     */\r\n    inlineSchemaHash: string;\r\n    /**\r\n     * A marker to indicate that the client was not generated via `prisma\r\n     * generate` but was generated via `generate --postinstall` script instead.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    postinstall?: boolean;\r\n    /**\r\n     * Information about the CI where the Prisma Client has been generated. The\r\n     * name of the CI environment is stored at generation time because CI\r\n     * information is not always available at runtime. Moreover, the edge client\r\n     * has no notion of environment variables, so this works around that.\r\n     * @remarks used to error for Vercel/Netlify for schema caching issues\r\n     */\r\n    ciName?: string;\r\n    /**\r\n     * Information about whether we have not found a schema.prisma file in the\r\n     * default location, and that we fell back to finding the schema.prisma file\r\n     * in the current working directory. This usually means it has been bundled.\r\n     */\r\n    isBundled?: boolean;\r\n    /**\r\n     * A boolean that is `false` when the client was generated with --no-engine. At\r\n     * runtime, this means the client will be bound to be using the Data Proxy.\r\n     */\r\n    copyEngine?: boolean;\r\n    /**\r\n     * Optional wasm loading configuration\r\n     */\r\n    engineWasm?: EngineWasmLoadingConfig;\r\n    compilerWasm?: CompilerWasmLoadingConfig;\r\n};\r\n\r\nexport declare type GetResult<Payload extends OperationPayload, Args, OperationName extends Operation = 'findUniqueOrThrow', GlobalOmitOptions = {}> = {\r\n    findUnique: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findUniqueOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findFirst: GetFindResult<Payload, Args, GlobalOmitOptions> | null;\r\n    findFirstOrThrow: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    findMany: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    create: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    createMany: GetBatchResult;\r\n    createManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    update: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    updateMany: GetBatchResult;\r\n    updateManyAndReturn: GetFindResult<Payload, Args, GlobalOmitOptions>[];\r\n    upsert: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    delete: GetFindResult<Payload, Args, GlobalOmitOptions>;\r\n    deleteMany: GetBatchResult;\r\n    aggregate: GetAggregateResult<Payload, Args>;\r\n    count: GetCountResult<Args>;\r\n    groupBy: GetGroupByResult<Payload, Args>;\r\n    $queryRaw: unknown;\r\n    $queryRawTyped: unknown;\r\n    $executeRaw: number;\r\n    $queryRawUnsafe: unknown;\r\n    $executeRawUnsafe: number;\r\n    $runCommandRaw: JsonObject;\r\n    findRaw: JsonObject;\r\n    aggregateRaw: JsonObject;\r\n}[OperationName];\r\n\r\nexport declare function getRuntime(): GetRuntimeOutput;\r\n\r\ndeclare type GetRuntimeOutput = {\r\n    id: RuntimeName;\r\n    prettyName: string;\r\n    isEdge: boolean;\r\n};\r\n\r\nexport declare type GetSelect<Base extends Record<any, any>, R extends InternalArgs['result'][string], KR extends keyof R = string extends keyof R ? never : keyof R> = {\r\n    [K in KR | keyof Base]?: K extends KR ? boolean : Base[K];\r\n};\r\n\r\ndeclare type GlobalOmitOptions = {\r\n    [modelName: string]: {\r\n        [fieldName: string]: boolean;\r\n    };\r\n};\r\n\r\ndeclare type HandleErrorParams = {\r\n    args: JsArgs;\r\n    error: any;\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    modelName?: string;\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare type HrTime = [number, number];\r\n\r\n/**\r\n * Defines High-Resolution Time.\r\n *\r\n * The first number, HrTime[0], is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\r\n * The second number, HrTime[1], represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\r\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\r\n * The first number is calculated by converting and truncating the Epoch time in milliseconds to seconds:\r\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\r\n * The second number is calculated by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\r\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * 1e9 = 150000000.\r\n * This is represented in HrTime format as [1609504210, 150000000].\r\n */\r\ndeclare type HrTime_2 = [number, number];\r\n\r\ndeclare type Index = ReadonlyDeep_2<{\r\n    model: string;\r\n    type: IndexType;\r\n    isDefinedOnField: boolean;\r\n    name?: string;\r\n    dbName?: string;\r\n    algorithm?: string;\r\n    clustered?: boolean;\r\n    fields: IndexField[];\r\n}>;\r\n\r\ndeclare type IndexField = ReadonlyDeep_2<{\r\n    name: string;\r\n    sortOrder?: SortOrder;\r\n    length?: number;\r\n    operatorClass?: string;\r\n}>;\r\n\r\ndeclare type IndexType = 'id' | 'normal' | 'unique' | 'fulltext';\r\n\r\ndeclare type InMemoryOps = {\r\n    pagination: Pagination | null;\r\n    distinct: string[] | null;\r\n    reverse: boolean;\r\n    linkingFields: string[] | null;\r\n    nested: Record<string, InMemoryOps>;\r\n};\r\n\r\n/**\r\n * Matches a JSON array.\r\n * Unlike \\`JsonArray\\`, readonly arrays are assignable to this type.\r\n */\r\nexport declare interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {\r\n}\r\n\r\n/**\r\n * Matches a JSON object.\r\n * Unlike \\`JsonObject\\`, this type allows undefined and read-only properties.\r\n */\r\nexport declare type InputJsonObject = {\r\n    readonly [Key in string]?: InputJsonValue | null;\r\n};\r\n\r\n/**\r\n * Matches any valid value that can be used as an input for operations like\r\n * create and update as the value of a JSON field. Unlike \\`JsonValue\\`, this\r\n * type allows read-only arrays and read-only object properties and disallows\r\n * \\`null\\` at the top level.\r\n *\r\n * \\`null\\` cannot be used as the value of a JSON field because its meaning\r\n * would be ambiguous. Use \\`Prisma.JsonNull\\` to store the JSON null value or\r\n * \\`Prisma.DbNull\\` to clear the JSON value and set the field to the database\r\n * NULL value instead.\r\n *\r\n * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values\r\n */\r\nexport declare type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | {\r\n    toJSON(): unknown;\r\n};\r\n\r\ndeclare type InputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    constraints: {\r\n        maxNumFields: number | null;\r\n        minNumFields: number | null;\r\n        fields?: string[];\r\n    };\r\n    meta?: {\r\n        source?: string;\r\n        grouping?: string;\r\n    };\r\n    fields: SchemaArg[];\r\n}>;\r\n\r\ndeclare type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>;\r\n\r\ndeclare type InteractiveTransactionInfo<Payload = unknown> = {\r\n    /**\r\n     * Transaction ID returned by the query engine.\r\n     */\r\n    id: string;\r\n    /**\r\n     * Arbitrary payload the meaning of which depends on the `Engine` implementation.\r\n     * For example, `DataProxyEngine` needs to associate different API endpoints with transactions.\r\n     * In `LibraryEngine` and `BinaryEngine` it is currently not used.\r\n     */\r\n    payload: Payload;\r\n};\r\n\r\ndeclare type InteractiveTransactionOptions<Payload> = Transaction_2.InteractiveTransactionInfo<Payload>;\r\n\r\nexport declare type InternalArgs<R = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, M = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, Q = {\r\n    [K in string]: {\r\n        [K in string]: unknown;\r\n    };\r\n}, C = {\r\n    [K in string]: unknown;\r\n}> = {\r\n    result: {\r\n        [K in keyof R]: {\r\n            [P in keyof R[K]]: () => R[K][P];\r\n        };\r\n    };\r\n    model: {\r\n        [K in keyof M]: {\r\n            [P in keyof M[K]]: () => M[K][P];\r\n        };\r\n    };\r\n    query: {\r\n        [K in keyof Q]: {\r\n            [P in keyof Q[K]]: () => Q[K][P];\r\n        };\r\n    };\r\n    client: {\r\n        [K in keyof C]: () => C[K];\r\n    };\r\n};\r\n\r\ndeclare type InternalRequestParams = {\r\n    /**\r\n     * The original client method being called.\r\n     * Even though the rootField / operation can be changed,\r\n     * this method stays as it is, as it's what the user's\r\n     * code looks like\r\n     */\r\n    clientMethod: string;\r\n    /**\r\n     * Name of js model that triggered the request. Might be used\r\n     * for warnings or error messages\r\n     */\r\n    jsModelName?: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    /** Used to \"desugar\" a user input into an \"expanded\" one */\r\n    argsMapper?: (args?: UserArgs_2) => UserArgs_2;\r\n    /** Used to convert args for middleware and back */\r\n    middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>;\r\n    /** Used for Accelerate client extension via Data Proxy */\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>;\r\n\r\ndeclare type IsolationLevel = 'READ UNCOMMITTED' | 'READ COMMITTED' | 'REPEATABLE READ' | 'SNAPSHOT' | 'SERIALIZABLE';\r\n\r\ndeclare type IsolationLevel_2 = 'ReadUncommitted' | 'ReadCommitted' | 'RepeatableRead' | 'Snapshot' | 'Serializable';\r\n\r\ndeclare function isSkip(value: unknown): value is Skip;\r\n\r\nexport declare function isTypedSql(value: unknown): value is UnknownTypedSql;\r\n\r\nexport declare type ITXClientDenyList = (typeof denylist)[number];\r\n\r\nexport declare const itxClientDenyList: readonly (string | symbol)[];\r\n\r\ndeclare interface Job {\r\n    resolve: (data: any) => void;\r\n    reject: (data: any) => void;\r\n    request: any;\r\n}\r\n\r\n/**\r\n * Create a SQL query for a list of values.\r\n */\r\nexport declare function join(values: readonly RawValue[], separator?: string, prefix?: string, suffix?: string): Sql;\r\n\r\ndeclare type JoinExpression = {\r\n    child: QueryPlanNode;\r\n    on: [left: string, right: string][];\r\n    parentField: string;\r\n    isRelationUnique: boolean;\r\n};\r\n\r\nexport declare type JsArgs = {\r\n    select?: Selection_2;\r\n    include?: Selection_2;\r\n    omit?: Omission;\r\n    [argName: string]: JsInputValue;\r\n};\r\n\r\nexport declare type JsInputValue = null | undefined | string | number | boolean | bigint | Uint8Array | Date | DecimalJsLike | ObjectEnumValue | RawParameters | JsonConvertible | FieldRef<string, unknown> | JsInputValue[] | Skip | {\r\n    [key: string]: JsInputValue;\r\n};\r\n\r\ndeclare type JsonArgumentValue = number | string | boolean | null | RawTaggedValue | JsonArgumentValue[] | {\r\n    [key: string]: JsonArgumentValue;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON array.\r\n */\r\nexport declare interface JsonArray extends Array<JsonValue> {\r\n}\r\n\r\nexport declare type JsonBatchQuery = {\r\n    batch: JsonQuery[];\r\n    transaction?: {\r\n        isolationLevel?: IsolationLevel_2;\r\n    };\r\n};\r\n\r\nexport declare interface JsonConvertible {\r\n    toJSON(): unknown;\r\n}\r\n\r\ndeclare type JsonFieldSelection = {\r\n    arguments?: Record<string, JsonArgumentValue> | RawTaggedValue;\r\n    selection: JsonSelectionSet;\r\n};\r\n\r\ndeclare class JsonNull extends NullTypesEnumValue {\r\n    #private;\r\n}\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches a JSON object.\r\n * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from.\r\n */\r\nexport declare type JsonObject = {\r\n    [Key in string]?: JsonValue;\r\n};\r\n\r\nexport declare type JsonQuery = {\r\n    modelName?: string;\r\n    action: JsonQueryAction;\r\n    query: JsonFieldSelection;\r\n};\r\n\r\ndeclare type JsonQueryAction = 'findUnique' | 'findUniqueOrThrow' | 'findFirst' | 'findFirstOrThrow' | 'findMany' | 'createOne' | 'createMany' | 'createManyAndReturn' | 'updateOne' | 'updateMany' | 'updateManyAndReturn' | 'deleteOne' | 'deleteMany' | 'upsertOne' | 'aggregate' | 'groupBy' | 'executeRaw' | 'queryRaw' | 'runCommandRaw' | 'findRaw' | 'aggregateRaw';\r\n\r\ndeclare type JsonSelectionSet = {\r\n    $scalars?: boolean;\r\n    $composites?: boolean;\r\n} & {\r\n    [fieldName: string]: boolean | JsonFieldSelection;\r\n};\r\n\r\n/**\r\n * From https://github.com/sindresorhus/type-fest/\r\n * Matches any valid JSON value.\r\n */\r\nexport declare type JsonValue = string | number | boolean | JsonObject | JsonArray | null;\r\n\r\nexport declare type JsOutputValue = null | string | number | boolean | bigint | Uint8Array | Date | Decimal | JsOutputValue[] | {\r\n    [key: string]: JsOutputValue;\r\n};\r\n\r\nexport declare type JsPromise<T> = Promise<T> & {};\r\n\r\ndeclare type KnownErrorParams = {\r\n    code: string;\r\n    clientVersion: string;\r\n    meta?: Record<string, unknown>;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\n/**\r\n * A pointer from the current {@link Span} to another span in the same trace or\r\n * in a different trace.\r\n * Few examples of Link usage.\r\n * 1. Batch Processing: A batch of elements may contain elements associated\r\n *    with one or more traces/spans. Since there can only be one parent\r\n *    SpanContext, Link is used to keep reference to SpanContext of all\r\n *    elements in the batch.\r\n * 2. Public Endpoint: A SpanContext in incoming client request on a public\r\n *    endpoint is untrusted from service provider perspective. In such case it\r\n *    is advisable to start a new trace with appropriate sampling decision.\r\n *    However, it is desirable to associate incoming SpanContext to new trace\r\n *    initiated on service provider side so two traces (from Client and from\r\n *    Service Provider) can be correlated.\r\n */\r\ndeclare interface Link {\r\n    /** The {@link SpanContext} of a linked span. */\r\n    context: SpanContext;\r\n    /** A set of {@link SpanAttributes} on the link. */\r\n    attributes?: SpanAttributes;\r\n    /** Count of attributes of the link that were dropped due to collection limits */\r\n    droppedAttributesCount?: number;\r\n}\r\n\r\ndeclare type LoadedEnv = {\r\n    message?: string;\r\n    parsed: {\r\n        [x: string]: string;\r\n    };\r\n} | undefined;\r\n\r\ndeclare type LocationInFile = {\r\n    fileName: string;\r\n    lineNumber: number | null;\r\n    columnNumber: number | null;\r\n};\r\n\r\ndeclare type LogDefinition = {\r\n    level: LogLevel;\r\n    emit: 'stdout' | 'event';\r\n};\r\n\r\n/**\r\n * Typings for the events we emit.\r\n *\r\n * @remarks\r\n * If this is updated, our edge runtime shim needs to be updated as well.\r\n */\r\ndeclare type LogEmitter = {\r\n    on<E extends EngineEventType>(event: E, listener: (event: EngineEvent<E>) => void): LogEmitter;\r\n    emit(event: QueryEventType, payload: QueryEvent): boolean;\r\n    emit(event: LogEventType, payload: LogEvent): boolean;\r\n};\r\n\r\ndeclare type LogEvent = {\r\n    timestamp: Date;\r\n    message: string;\r\n    target: string;\r\n};\r\n\r\ndeclare type LogEventType = 'info' | 'warn' | 'error';\r\n\r\ndeclare type LogLevel = 'info' | 'query' | 'warn' | 'error';\r\n\r\n/**\r\n * Generates more strict variant of an enum which, unlike regular enum,\r\n * throws on non-existing property access. This can be useful in following situations:\r\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\r\n * - enum values are generated dynamically from DMMF.\r\n *\r\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\r\n * will result in `undefined` value being used, which will be accepted. Using strict enum\r\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\r\n *\r\n * Note: if you need to check for existence of a value in the enum you can still use either\r\n * `in` operator or `hasOwnProperty` function.\r\n *\r\n * @param definition\r\n * @returns\r\n */\r\nexport declare function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T;\r\n\r\nexport declare function makeTypedQueryFactory(sql: string): (...values: any[]) => TypedSql<any[], unknown>;\r\n\r\ndeclare type MappedError = {\r\n    kind: 'GenericJs';\r\n    id: number;\r\n} | {\r\n    kind: 'UnsupportedNativeDataType';\r\n    type: string;\r\n} | {\r\n    kind: 'InvalidIsolationLevel';\r\n    level: string;\r\n} | {\r\n    kind: 'LengthMismatch';\r\n    column?: string;\r\n} | {\r\n    kind: 'UniqueConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'NullConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'ForeignKeyConstraintViolation';\r\n    constraint?: {\r\n        fields: string[];\r\n    } | {\r\n        index: string;\r\n    } | {\r\n        foreignKey: {};\r\n    };\r\n} | {\r\n    kind: 'DatabaseNotReachable';\r\n    host?: string;\r\n    port?: number;\r\n} | {\r\n    kind: 'DatabaseDoesNotExist';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAlreadyExists';\r\n    db?: string;\r\n} | {\r\n    kind: 'DatabaseAccessDenied';\r\n    db?: string;\r\n} | {\r\n    kind: 'ConnectionClosed';\r\n} | {\r\n    kind: 'TlsConnectionError';\r\n    reason: string;\r\n} | {\r\n    kind: 'AuthenticationFailed';\r\n    user?: string;\r\n} | {\r\n    kind: 'TransactionWriteConflict';\r\n} | {\r\n    kind: 'TableDoesNotExist';\r\n    table?: string;\r\n} | {\r\n    kind: 'ColumnNotFound';\r\n    column?: string;\r\n} | {\r\n    kind: 'TooManyConnections';\r\n    cause: string;\r\n} | {\r\n    kind: 'ValueOutOfRange';\r\n    cause: string;\r\n} | {\r\n    kind: 'MissingFullTextSearchIndex';\r\n} | {\r\n    kind: 'SocketTimeout';\r\n} | {\r\n    kind: 'InconsistentColumnData';\r\n    cause: string;\r\n} | {\r\n    kind: 'TransactionAlreadyClosed';\r\n    cause: string;\r\n} | {\r\n    kind: 'postgres';\r\n    code: string;\r\n    severity: string;\r\n    message: string;\r\n    detail: string | undefined;\r\n    column: string | undefined;\r\n    hint: string | undefined;\r\n} | {\r\n    kind: 'mysql';\r\n    code: number;\r\n    message: string;\r\n    state: string;\r\n} | {\r\n    kind: 'sqlite';\r\n    /**\r\n     * Sqlite extended error code: https://www.sqlite.org/rescode.html\r\n     */\r\n    extendedCode: number;\r\n    message: string;\r\n} | {\r\n    kind: 'mssql';\r\n    code: number;\r\n    message: string;\r\n};\r\n\r\ndeclare type Mappings = ReadonlyDeep_2<{\r\n    modelOperations: ModelMapping[];\r\n    otherOperations: {\r\n        read: string[];\r\n        write: string[];\r\n    };\r\n}>;\r\n\r\n/**\r\n * Class that holds the list of all extensions, applied to particular instance,\r\n * as well as resolved versions of the components that need to apply on\r\n * different levels. Main idea of this class: avoid re-resolving as much of the\r\n * stuff as possible when new extensions are added while also delaying the\r\n * resolve until the point it is actually needed. For example, computed fields\r\n * of the model won't be resolved unless the model is actually queried. Neither\r\n * adding extensions with `client` component only cause other components to\r\n * recompute.\r\n */\r\ndeclare class MergedExtensionsList {\r\n    private head?;\r\n    private constructor();\r\n    static empty(): MergedExtensionsList;\r\n    static single(extension: ExtensionArgs): MergedExtensionsList;\r\n    isEmpty(): boolean;\r\n    append(extension: ExtensionArgs): MergedExtensionsList;\r\n    getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined;\r\n    getAllClientExtensions(): ClientArg | undefined;\r\n    getAllModelExtensions(dmmfModelName: string): ModelArg | undefined;\r\n    getAllQueryCallbacks(jsModelName: string, operation: string): any;\r\n    getAllBatchQueryCallbacks(): BatchQueryOptionsCb[];\r\n}\r\n\r\nexport declare type MergeExtArgs<TypeMap extends TypeMapDef, ExtArgs extends Record<any, any>, Args extends Record<any, any>> = ComputeDeep<ExtArgs & Args & AllModelsToStringIndex<TypeMap, Args, 'result'> & AllModelsToStringIndex<TypeMap, Args, 'model'>>;\r\n\r\nexport declare type Metric<T> = {\r\n    key: string;\r\n    value: T;\r\n    labels: Record<string, string>;\r\n    description: string;\r\n};\r\n\r\nexport declare type MetricHistogram = {\r\n    buckets: MetricHistogramBucket[];\r\n    sum: number;\r\n    count: number;\r\n};\r\n\r\nexport declare type MetricHistogramBucket = [maxValue: number, count: number];\r\n\r\nexport declare type Metrics = {\r\n    counters: Metric<number>[];\r\n    gauges: Metric<number>[];\r\n    histograms: Metric<MetricHistogram>[];\r\n};\r\n\r\nexport declare class MetricsClient {\r\n    private _client;\r\n    constructor(client: Client);\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     * Result of this call can be exposed directly to prometheus scraping endpoint\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    prometheus(options?: MetricsOptions): Promise<string>;\r\n    /**\r\n     * Returns all metrics gathered up to this point in prometheus format.\r\n     *\r\n     * @param options\r\n     * @returns\r\n     */\r\n    json(options?: MetricsOptions): Promise<Metrics>;\r\n}\r\n\r\ndeclare type MetricsOptions = {\r\n    /**\r\n     * Labels to add to every metrics in key-value format\r\n     */\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsCommon = {\r\n    globalLabels?: Record<string, string>;\r\n};\r\n\r\ndeclare type MetricsOptionsJson = {\r\n    format: 'json';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MetricsOptionsPrometheus = {\r\n    format: 'prometheus';\r\n} & MetricsOptionsCommon;\r\n\r\ndeclare type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\r\n    requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs;\r\n    middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs;\r\n};\r\n\r\ndeclare type Model = ReadonlyDeep_2<{\r\n    name: string;\r\n    dbName: string | null;\r\n    schema: string | null;\r\n    fields: Field[];\r\n    uniqueFields: string[][];\r\n    uniqueIndexes: uniqueIndex[];\r\n    documentation?: string;\r\n    primaryKey: PrimaryKey | null;\r\n    isGenerated?: boolean;\r\n}>;\r\n\r\ndeclare enum ModelAction {\r\n    findUnique = \"findUnique\",\r\n    findUniqueOrThrow = \"findUniqueOrThrow\",\r\n    findFirst = \"findFirst\",\r\n    findFirstOrThrow = \"findFirstOrThrow\",\r\n    findMany = \"findMany\",\r\n    create = \"create\",\r\n    createMany = \"createMany\",\r\n    createManyAndReturn = \"createManyAndReturn\",\r\n    update = \"update\",\r\n    updateMany = \"updateMany\",\r\n    updateManyAndReturn = \"updateManyAndReturn\",\r\n    upsert = \"upsert\",\r\n    delete = \"delete\",\r\n    deleteMany = \"deleteMany\",\r\n    groupBy = \"groupBy\",\r\n    count = \"count\",// TODO: count does not actually exist in DMMF\r\n    aggregate = \"aggregate\",\r\n    findRaw = \"findRaw\",\r\n    aggregateRaw = \"aggregateRaw\"\r\n}\r\n\r\nexport declare type ModelArg = {\r\n    [MethodName in string]: unknown;\r\n};\r\n\r\nexport declare type ModelArgs = {\r\n    model: {\r\n        [ModelName in string]: ModelArg;\r\n    };\r\n};\r\n\r\nexport declare type ModelKey<TypeMap extends TypeMapDef, M extends PropertyKey> = M extends keyof TypeMap['model'] ? M : Capitalize<M & string>;\r\n\r\ndeclare type ModelMapping = ReadonlyDeep_2<{\r\n    model: string;\r\n    plural: string;\r\n    findUnique?: string | null;\r\n    findUniqueOrThrow?: string | null;\r\n    findFirst?: string | null;\r\n    findFirstOrThrow?: string | null;\r\n    findMany?: string | null;\r\n    create?: string | null;\r\n    createMany?: string | null;\r\n    createManyAndReturn?: string | null;\r\n    update?: string | null;\r\n    updateMany?: string | null;\r\n    updateManyAndReturn?: string | null;\r\n    upsert?: string | null;\r\n    delete?: string | null;\r\n    deleteMany?: string | null;\r\n    aggregate?: string | null;\r\n    groupBy?: string | null;\r\n    count?: string | null;\r\n    findRaw?: string | null;\r\n    aggregateRaw?: string | null;\r\n}>;\r\n\r\nexport declare type ModelQueryOptionsCb = (args: ModelQueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type ModelQueryOptionsCbArgs = {\r\n    model: string;\r\n    operation: string;\r\n    args: JsArgs;\r\n    query: (args: JsArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type MultiBatchResponse = {\r\n    type: 'multi';\r\n    plans: QueryPlanNode[];\r\n};\r\n\r\nexport declare type NameArgs = {\r\n    name?: string;\r\n};\r\n\r\nexport declare type Narrow<A> = {\r\n    [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>;\r\n} | (A extends Narrowable ? A : never);\r\n\r\nexport declare type Narrowable = string | number | bigint | boolean | [];\r\n\r\nexport declare type NeverToUnknown<T> = [T] extends [never] ? unknown : T;\r\n\r\ndeclare class NullTypesEnumValue extends ObjectEnumValue {\r\n    _getNamespace(): string;\r\n}\r\n\r\n/**\r\n * Base class for unique values of object-valued enums.\r\n */\r\nexport declare abstract class ObjectEnumValue {\r\n    constructor(arg?: symbol);\r\n    abstract _getNamespace(): string;\r\n    _getName(): string;\r\n    toString(): string;\r\n}\r\n\r\nexport declare const objectEnumValues: {\r\n    classes: {\r\n        DbNull: typeof DbNull;\r\n        JsonNull: typeof JsonNull;\r\n        AnyNull: typeof AnyNull;\r\n    };\r\n    instances: {\r\n        DbNull: DbNull;\r\n        JsonNull: JsonNull;\r\n        AnyNull: AnyNull;\r\n    };\r\n};\r\n\r\ndeclare const officialPrismaAdapters: readonly [\"@prisma/adapter-planetscale\", \"@prisma/adapter-neon\", \"@prisma/adapter-libsql\", \"@prisma/adapter-better-sqlite3\", \"@prisma/adapter-d1\", \"@prisma/adapter-pg\", \"@prisma/adapter-mssql\", \"@prisma/adapter-mariadb\"];\r\n\r\nexport declare type Omission = Record<string, boolean | Skip>;\r\n\r\ndeclare type Omit_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? never : P]: T[P];\r\n};\r\nexport { Omit_2 as Omit }\r\n\r\nexport declare type OmitValue<Omit, Key> = Key extends keyof Omit ? Omit[Key] : false;\r\n\r\nexport declare type Operation = 'findFirst' | 'findFirstOrThrow' | 'findUnique' | 'findUniqueOrThrow' | 'findMany' | 'create' | 'createMany' | 'createManyAndReturn' | 'update' | 'updateMany' | 'updateManyAndReturn' | 'upsert' | 'delete' | 'deleteMany' | 'aggregate' | 'count' | 'groupBy' | '$queryRaw' | '$executeRaw' | '$queryRawUnsafe' | '$executeRawUnsafe' | 'findRaw' | 'aggregateRaw' | '$runCommandRaw';\r\n\r\nexport declare type OperationPayload = {\r\n    name: string;\r\n    scalars: {\r\n        [ScalarName in string]: unknown;\r\n    };\r\n    objects: {\r\n        [ObjectName in string]: unknown;\r\n    };\r\n    composites: {\r\n        [CompositeName in string]: unknown;\r\n    };\r\n};\r\n\r\nexport declare type Optional<O, K extends keyof any = keyof O> = {\r\n    [P in K & keyof O]?: O[P];\r\n} & {\r\n    [P in Exclude<keyof O, K>]: O[P];\r\n};\r\n\r\nexport declare type OptionalFlat<T> = {\r\n    [K in keyof T]?: T[K];\r\n};\r\n\r\nexport declare type OptionalKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? K : never;\r\n}[keyof O];\r\n\r\ndeclare type Options = {\r\n    /** Timeout for starting the transaction */\r\n    maxWait?: number;\r\n    /** Timeout for the transaction body */\r\n    timeout?: number;\r\n    /** Transaction isolation level */\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type Options_2 = {\r\n    clientVersion: string;\r\n};\r\n\r\nexport declare type Or<A extends 1 | 0, B extends 1 | 0> = {\r\n    0: {\r\n        0: 0;\r\n        1: 1;\r\n    };\r\n    1: {\r\n        0: 1;\r\n        1: 1;\r\n    };\r\n}[A][B];\r\n\r\ndeclare type OtherOperationMappings = ReadonlyDeep_2<{\r\n    read: string[];\r\n    write: string[];\r\n}>;\r\n\r\ndeclare type OutputType = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: SchemaField[];\r\n}>;\r\n\r\ndeclare type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>;\r\n\r\ndeclare type Pagination = {\r\n    cursor: Record<string, PrismaValue> | null;\r\n    take: number | null;\r\n    skip: number | null;\r\n};\r\n\r\nexport declare function Param<$Type, $Value extends string>(name: $Value): Param<$Type, $Value>;\r\n\r\nexport declare type Param<out $Type, $Value extends string> = {\r\n    readonly name: $Value;\r\n};\r\n\r\nexport declare type PatchFlat<O1, O2> = O1 & Omit_2<O2, keyof O1>;\r\n\r\nexport declare type Path<O, P, Default = never> = O extends unknown ? P extends [infer K, ...infer R] ? K extends keyof O ? Path<O[K], R> : Default : O : never;\r\n\r\nexport declare type Payload<T, F extends Operation = never> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? T[symbol]['types']['payload'] : any;\r\n\r\nexport declare type PayloadToResult<P, O extends Record_2<any, any> = RenameAndNestPayloadKeys<P>> = {\r\n    [K in keyof O]?: O[K][K] extends any[] ? PayloadToResult<O[K][K][number]>[] : O[K][K] extends object ? PayloadToResult<O[K][K]> : O[K][K];\r\n};\r\n\r\ndeclare type Pick_2<T, K extends string | number | symbol> = {\r\n    [P in keyof T as P extends K ? P : never]: T[P];\r\n};\r\nexport { Pick_2 as Pick }\r\n\r\ndeclare interface PlaceholderFormat {\r\n    prefix: string;\r\n    hasNumbering: boolean;\r\n}\r\n\r\ndeclare type PrimaryKey = ReadonlyDeep_2<{\r\n    name: string | null;\r\n    fields: string[];\r\n}>;\r\n\r\nexport declare class PrismaClientInitializationError extends Error {\r\n    clientVersion: string;\r\n    errorCode?: string;\r\n    retryable?: boolean;\r\n    constructor(message: string, clientVersion: string, errorCode?: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\r\n    code: string;\r\n    meta?: Record<string, unknown>;\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare type PrismaClientOptions = {\r\n    /**\r\n     * Overwrites the primary datasource url from your schema.prisma file\r\n     */\r\n    datasourceUrl?: string;\r\n    /**\r\n     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\r\n     */\r\n    adapter?: SqlDriverAdapterFactory | null;\r\n    /**\r\n     * Overwrites the datasource url from your schema.prisma file\r\n     */\r\n    datasources?: Datasources;\r\n    /**\r\n     * @default \"colorless\"\r\n     */\r\n    errorFormat?: ErrorFormat;\r\n    /**\r\n     * The default values for Transaction options\r\n     * maxWait ?= 2000\r\n     * timeout ?= 5000\r\n     */\r\n    transactionOptions?: Transaction_2.Options;\r\n    /**\r\n     * @example\r\n     * \\`\\`\\`\r\n     * // Defaults to stdout\r\n     * log: ['query', 'info', 'warn']\r\n     *\r\n     * // Emit as events\r\n     * log: [\r\n     *  { emit: 'stdout', level: 'query' },\r\n     *  { emit: 'stdout', level: 'info' },\r\n     *  { emit: 'stdout', level: 'warn' }\r\n     * ]\r\n     * \\`\\`\\`\r\n     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\r\n     */\r\n    log?: Array<LogLevel | LogDefinition>;\r\n    omit?: GlobalOmitOptions;\r\n    /**\r\n     * @internal\r\n     * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\r\n     */\r\n    __internal?: {\r\n        debug?: boolean;\r\n        engine?: {\r\n            cwd?: string;\r\n            binaryPath?: string;\r\n            endpoint?: string;\r\n            allowTriggerPanic?: boolean;\r\n        };\r\n        /** This can be used for testing purposes */\r\n        configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig;\r\n    };\r\n};\r\n\r\nexport declare class PrismaClientRustPanicError extends Error {\r\n    clientVersion: string;\r\n    constructor(message: string, clientVersion: string);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n    constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\nexport declare class PrismaClientValidationError extends Error {\r\n    name: string;\r\n    clientVersion: string;\r\n    constructor(message: string, { clientVersion }: Options_2);\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare function prismaGraphQLToJSError({ error, user_facing_error }: RequestError, clientVersion: string, activeProvider: string): PrismaClientKnownRequestError | PrismaClientUnknownRequestError;\r\n\r\ndeclare type PrismaOperationSpec<TArgs, TAction = string> = {\r\n    args: TArgs;\r\n    action: TAction;\r\n    model: string;\r\n};\r\n\r\nexport declare interface PrismaPromise<T> extends Promise<T> {\r\n    [Symbol.toStringTag]: 'PrismaPromise';\r\n}\r\n\r\n/**\r\n * Prisma's `Promise` that is backwards-compatible. All additions on top of the\r\n * original `Promise` are optional so that it can be backwards-compatible.\r\n * @see [[createPrismaPromise]]\r\n */\r\ndeclare interface PrismaPromise_2<TResult, TSpec extends PrismaOperationSpec<unknown> = any> extends Promise<TResult> {\r\n    get spec(): TSpec;\r\n    /**\r\n     * Extension of the original `.then` function\r\n     * @param onfulfilled same as regular promises\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    then<R1 = TResult, R2 = never>(onfulfilled?: (value: TResult) => R1 | PromiseLike<R1>, onrejected?: (error: unknown) => R2 | PromiseLike<R2>, transaction?: PrismaPromiseTransaction): Promise<R1 | R2>;\r\n    /**\r\n     * Extension of the original `.catch` function\r\n     * @param onrejected same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    catch<R = never>(onrejected?: ((reason: any) => R | PromiseLike<R>) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult | R>;\r\n    /**\r\n     * Extension of the original `.finally` function\r\n     * @param onfinally same as regular promises\r\n     * @param transaction transaction options\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null, transaction?: PrismaPromiseTransaction): Promise<TResult>;\r\n    /**\r\n     * Called when executing a batch of regular tx\r\n     * @param transaction transaction options for batch tx\r\n     */\r\n    requestTransaction?(transaction: PrismaPromiseBatchTransaction): PromiseLike<unknown>;\r\n}\r\n\r\ndeclare type PrismaPromiseBatchTransaction = {\r\n    kind: 'batch';\r\n    id: number;\r\n    isolationLevel?: IsolationLevel_2;\r\n    index: number;\r\n    lock: PromiseLike<void>;\r\n};\r\n\r\ndeclare type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>;\r\n\r\n/**\r\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\r\n * is essentially a proxy for `Promise`. All the transaction-compatible client\r\n * methods return one, this allows for pre-preparing queries without executing\r\n * them until `.then` is called. It's the foundation of Prisma's query batching.\r\n * @param callback that will be wrapped within our promise implementation\r\n * @see [[PrismaPromise]]\r\n * @returns\r\n */\r\ndeclare type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(callback: PrismaPromiseCallback, op?: T) => PrismaPromise_2<unknown>;\r\n\r\ndeclare type PrismaPromiseInteractiveTransaction<PayloadType = unknown> = {\r\n    kind: 'itx';\r\n    id: string;\r\n    payload: PayloadType;\r\n};\r\n\r\ndeclare type PrismaPromiseTransaction<PayloadType = unknown> = PrismaPromiseBatchTransaction | PrismaPromiseInteractiveTransaction<PayloadType>;\r\n\r\ndeclare type PrismaValue = string | boolean | number | PrismaValue[] | null | Record<string, unknown> | PrismaValuePlaceholder | PrismaValueGenerator;\r\n\r\ndeclare type PrismaValueGenerator = {\r\n    prisma__type: 'generatorCall';\r\n    prisma__value: {\r\n        name: string;\r\n        args: PrismaValue[];\r\n    };\r\n};\r\n\r\ndeclare type PrismaValuePlaceholder = {\r\n    prisma__type: 'param';\r\n    prisma__value: {\r\n        name: string;\r\n        type: string;\r\n    };\r\n};\r\n\r\nexport declare const PrivateResultType: unique symbol;\r\n\r\ndeclare type Provider = 'mysql' | 'postgres' | 'sqlite' | 'sqlserver';\r\n\r\ndeclare namespace Public {\r\n    export {\r\n        validator\r\n    }\r\n}\r\nexport { Public }\r\n\r\ndeclare namespace Public_2 {\r\n    export {\r\n        Args,\r\n        Result,\r\n        Payload,\r\n        PrismaPromise,\r\n        Operation,\r\n        Exact\r\n    }\r\n}\r\n\r\ndeclare type Query = ReadonlyDeep_2<{\r\n    name: string;\r\n    args: SchemaArg[];\r\n    output: QueryOutput;\r\n}>;\r\n\r\ndeclare interface Queryable<Query, Result> extends AdapterInfo {\r\n    /**\r\n     * Execute a query and return its result.\r\n     */\r\n    queryRaw(params: Query): Promise<Result>;\r\n    /**\r\n     * Execute a query and return the number of affected rows.\r\n     */\r\n    executeRaw(params: Query): Promise<number>;\r\n}\r\n\r\ndeclare type QueryCompiler = {\r\n    compile(request: string): {};\r\n    compileBatch(batchRequest: string): BatchResponse;\r\n    free(): void;\r\n};\r\n\r\ndeclare interface QueryCompilerConstructor {\r\n    new (options: QueryCompilerOptions): QueryCompiler;\r\n}\r\n\r\ndeclare type QueryCompilerOptions = {\r\n    datamodel: string;\r\n    provider: Provider;\r\n    connectionInfo: ConnectionInfo;\r\n};\r\n\r\ndeclare type QueryEngineBatchGraphQLRequest = {\r\n    batch: QueryEngineRequest[];\r\n    transaction?: boolean;\r\n    isolationLevel?: IsolationLevel_2;\r\n};\r\n\r\ndeclare type QueryEngineBatchRequest = QueryEngineBatchGraphQLRequest | JsonBatchQuery;\r\n\r\ndeclare type QueryEngineConfig = {\r\n    datamodel: string;\r\n    configDir: string;\r\n    logQueries: boolean;\r\n    ignoreEnvVarErrors: boolean;\r\n    datasourceOverrides: Record<string, string>;\r\n    env: Record<string, string | undefined>;\r\n    logLevel: QueryEngineLogLevel;\r\n    engineProtocol: QueryEngineProtocol;\r\n    enableTracing: boolean;\r\n};\r\n\r\ndeclare interface QueryEngineConstructor {\r\n    new (config: QueryEngineConfig, logger: (log: string) => void, adapter?: ErrorCapturingSqlDriverAdapter): QueryEngineInstance;\r\n}\r\n\r\ndeclare type QueryEngineInstance = {\r\n    connect(headers: string, requestId: string): Promise<void>;\r\n    disconnect(headers: string, requestId: string): Promise<void>;\r\n    /**\r\n     * Frees any resources allocated by the engine's WASM instance. This method is automatically created by WASM bindgen.\r\n     * Noop for other engines.\r\n     */\r\n    free?(): void;\r\n    /**\r\n     * @param requestStr JSON.stringified `QueryEngineRequest | QueryEngineBatchRequest`\r\n     * @param headersStr JSON.stringified `QueryEngineRequestHeaders`\r\n     */\r\n    query(requestStr: string, headersStr: string, transactionId: string | undefined, requestId: string): Promise<string>;\r\n    sdlSchema?(): Promise<string>;\r\n    startTransaction(options: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    commitTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    rollbackTransaction(id: string, traceHeaders: string, requestId: string): Promise<string>;\r\n    metrics?(options: string): Promise<string>;\r\n    applyPendingMigrations?(): Promise<void>;\r\n    trace(requestId: string): Promise<string | null>;\r\n};\r\n\r\ndeclare type QueryEngineLogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\r\n\r\ndeclare type QueryEngineProtocol = 'graphql' | 'json';\r\n\r\ndeclare type QueryEngineRequest = {\r\n    query: string;\r\n    variables: Object;\r\n};\r\n\r\ndeclare type QueryEngineResultData<T> = {\r\n    data: T;\r\n};\r\n\r\ndeclare type QueryEvent = {\r\n    timestamp: Date;\r\n    query: string;\r\n    params: string;\r\n    duration: number;\r\n    target: string;\r\n};\r\n\r\ndeclare type QueryEventType = 'query';\r\n\r\ndeclare type QueryIntrospectionBuiltinType = 'int' | 'bigint' | 'float' | 'double' | 'string' | 'enum' | 'bytes' | 'bool' | 'char' | 'decimal' | 'json' | 'xml' | 'uuid' | 'datetime' | 'date' | 'time' | 'int-array' | 'bigint-array' | 'float-array' | 'double-array' | 'string-array' | 'char-array' | 'bytes-array' | 'bool-array' | 'decimal-array' | 'json-array' | 'xml-array' | 'uuid-array' | 'datetime-array' | 'date-array' | 'time-array' | 'null' | 'unknown';\r\n\r\ndeclare type QueryMiddlewareParams = {\r\n    /** The model this is executed on */\r\n    model?: string;\r\n    /** The action that is being handled */\r\n    action: Action;\r\n    /** TODO what is this */\r\n    dataPath: string[];\r\n    /** TODO what is this */\r\n    runInTransaction: boolean;\r\n    args?: UserArgs_2;\r\n};\r\n\r\nexport declare type QueryOptions = {\r\n    query: {\r\n        [ModelName in string]: {\r\n            [ModelAction in string]: ModelQueryOptionsCb;\r\n        } | QueryOptionsCb;\r\n    };\r\n};\r\n\r\nexport declare type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>;\r\n\r\nexport declare type QueryOptionsCbArgs = {\r\n    model?: string;\r\n    operation: string;\r\n    args: JsArgs | RawQueryArgs;\r\n    query: (args: JsArgs | RawQueryArgs) => Promise<unknown>;\r\n};\r\n\r\ndeclare type QueryOutput = ReadonlyDeep_2<{\r\n    name: string;\r\n    isRequired: boolean;\r\n    isList: boolean;\r\n}>;\r\n\r\ndeclare type QueryPlanBinding = {\r\n    name: string;\r\n    expr: QueryPlanNode;\r\n};\r\n\r\ndeclare type QueryPlanDbQuery = {\r\n    type: 'rawSql';\r\n    sql: string;\r\n    args: PrismaValue[];\r\n    argTypes: ArgType[];\r\n} | {\r\n    type: 'templateSql';\r\n    fragments: Fragment[];\r\n    placeholderFormat: PlaceholderFormat;\r\n    args: PrismaValue[];\r\n    argTypes: DynamicArgType[];\r\n    chunkable: boolean;\r\n};\r\n\r\ndeclare type QueryPlanNode = {\r\n    type: 'value';\r\n    args: PrismaValue;\r\n} | {\r\n    type: 'seq';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'get';\r\n    args: {\r\n        name: string;\r\n    };\r\n} | {\r\n    type: 'let';\r\n    args: {\r\n        bindings: QueryPlanBinding[];\r\n        expr: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'getFirstNonEmpty';\r\n    args: {\r\n        names: string[];\r\n    };\r\n} | {\r\n    type: 'query';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'execute';\r\n    args: QueryPlanDbQuery;\r\n} | {\r\n    type: 'reverse';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'sum';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'concat';\r\n    args: QueryPlanNode[];\r\n} | {\r\n    type: 'unique';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'required';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'join';\r\n    args: {\r\n        parent: QueryPlanNode;\r\n        children: JoinExpression[];\r\n    };\r\n} | {\r\n    type: 'mapField';\r\n    args: {\r\n        field: string;\r\n        records: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'transaction';\r\n    args: QueryPlanNode;\r\n} | {\r\n    type: 'dataMap';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        structure: ResultNode;\r\n        enums: Record<string, Record<string, string>>;\r\n    };\r\n} | {\r\n    type: 'validate';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        rules: DataRule[];\r\n    } & ValidationError;\r\n} | {\r\n    type: 'if';\r\n    args: {\r\n        value: QueryPlanNode;\r\n        rule: DataRule;\r\n        then: QueryPlanNode;\r\n        else: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'unit';\r\n} | {\r\n    type: 'diff';\r\n    args: {\r\n        from: QueryPlanNode;\r\n        to: QueryPlanNode;\r\n    };\r\n} | {\r\n    type: 'initializeRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldInitializer>;\r\n    };\r\n} | {\r\n    type: 'mapRecord';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        fields: Record<string, FieldOperation>;\r\n    };\r\n} | {\r\n    type: 'process';\r\n    args: {\r\n        expr: QueryPlanNode;\r\n        operations: InMemoryOps;\r\n    };\r\n};\r\n\r\n/**\r\n * Create raw SQL statement.\r\n */\r\nexport declare function raw(value: string): Sql;\r\n\r\nexport declare type RawParameters = {\r\n    __prismaRawParameters__: true;\r\n    values: string;\r\n};\r\n\r\nexport declare type RawQueryArgs = Sql | UnknownTypedSql | [query: string, ...values: RawValue[]];\r\n\r\ndeclare type RawResponse = {\r\n    columns: string[];\r\n    types: QueryIntrospectionBuiltinType[];\r\n    rows: unknown[][];\r\n};\r\n\r\ndeclare type RawTaggedValue = {\r\n    $type: 'Raw';\r\n    value: unknown;\r\n};\r\n\r\n/**\r\n * Supported value or SQL instance.\r\n */\r\nexport declare type RawValue = Value | Sql;\r\n\r\nexport declare type ReadonlyDeep<T> = {\r\n    readonly [K in keyof T]: ReadonlyDeep<T[K]>;\r\n};\r\n\r\ndeclare type ReadonlyDeep_2<O> = {\r\n    +readonly [K in keyof O]: ReadonlyDeep_2<O[K]>;\r\n};\r\n\r\ndeclare type Record_2<T extends string | number | symbol, U> = {\r\n    [P in T]: U;\r\n};\r\nexport { Record_2 as Record }\r\n\r\nexport declare type RenameAndNestPayloadKeys<P> = {\r\n    [K in keyof P as K extends 'scalars' | 'objects' | 'composites' ? keyof P[K] : never]: P[K];\r\n};\r\n\r\ndeclare type RequestBatchOptions<InteractiveTransactionPayload> = {\r\n    transaction?: TransactionOptions_2<InteractiveTransactionPayload>;\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    containsWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare interface RequestError {\r\n    error: string;\r\n    user_facing_error: {\r\n        is_panic: boolean;\r\n        message: string;\r\n        meta?: Record<string, unknown>;\r\n        error_code?: string;\r\n        batch_request_idx?: number;\r\n    };\r\n}\r\n\r\ndeclare class RequestHandler {\r\n    client: Client;\r\n    dataloader: DataLoader<RequestParams>;\r\n    private logEmitter?;\r\n    constructor(client: Client, logEmitter?: LogEmitter);\r\n    request(params: RequestParams): Promise<any>;\r\n    mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>): any;\r\n    /**\r\n     * Handles the error and logs it, logging the error is done synchronously waiting for the event\r\n     * handlers to finish.\r\n     */\r\n    handleAndLogRequestError(params: HandleErrorParams): never;\r\n    handleRequestError({ error, clientMethod, callsite, transaction, args, modelName, globalOmit, }: HandleErrorParams): never;\r\n    sanitizeMessage(message: any): any;\r\n    unpack(data: unknown, dataPath: string[], unpacker?: Unpacker): any;\r\n    get [Symbol.toStringTag](): string;\r\n}\r\n\r\ndeclare type RequestOptions<InteractiveTransactionPayload> = {\r\n    traceparent?: string;\r\n    numTry?: number;\r\n    interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n    isWrite: boolean;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequestParams = {\r\n    modelName?: string;\r\n    action: Action;\r\n    protocolQuery: JsonQuery;\r\n    dataPath: string[];\r\n    clientMethod: string;\r\n    callsite?: CallSite;\r\n    transaction?: PrismaPromiseTransaction;\r\n    extensions: MergedExtensionsList;\r\n    args?: any;\r\n    headers?: Record<string, string>;\r\n    unpacker?: Unpacker;\r\n    otelParentCtx?: Context;\r\n    otelChildCtx?: Context;\r\n    globalOmit?: GlobalOmitOptions;\r\n    customDataProxyFetch?: AccelerateExtensionFetchDecorator;\r\n};\r\n\r\ndeclare type RequiredExtensionArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions;\r\nexport { RequiredExtensionArgs }\r\nexport { RequiredExtensionArgs as UserArgs }\r\n\r\nexport declare type RequiredKeys<O> = {\r\n    [K in keyof O]-?: {} extends Pick_2<O, K> ? never : K;\r\n}[keyof O];\r\n\r\ndeclare function resolveDatasourceUrl({ inlineDatasources, overrideDatasources, env, clientVersion, }: {\r\n    inlineDatasources: GetPrismaClientConfig['inlineDatasources'];\r\n    overrideDatasources: Datasources;\r\n    env: Record<string, string | undefined>;\r\n    clientVersion: string;\r\n}): string;\r\n\r\nexport declare type Result<T, A, F extends Operation> = T extends {\r\n    [K: symbol]: {\r\n        types: {\r\n            payload: any;\r\n        };\r\n    };\r\n} ? GetResult<T[symbol]['types']['payload'], A, F> : GetResult<{\r\n    composites: {};\r\n    objects: {};\r\n    scalars: {};\r\n    name: '';\r\n}, {}, F>;\r\n\r\nexport declare type Result_2<T, A, F extends Operation> = Result<T, A, F>;\r\n\r\ndeclare namespace Result_3 {\r\n    export {\r\n        Count,\r\n        GetFindResult,\r\n        SelectablePayloadFields,\r\n        SelectField,\r\n        DefaultSelection,\r\n        UnwrapPayload,\r\n        ApplyOmit,\r\n        OmitValue,\r\n        GetCountResult,\r\n        Aggregate,\r\n        GetAggregateResult,\r\n        GetBatchResult,\r\n        GetGroupByResult,\r\n        GetResult,\r\n        ExtractGlobalOmit\r\n    }\r\n}\r\n\r\ndeclare type Result_4<T> = {\r\n    map<U>(fn: (value: T) => U): Result_4<U>;\r\n    flatMap<U>(fn: (value: T) => Result_4<U>): Result_4<U>;\r\n} & ({\r\n    readonly ok: true;\r\n    readonly value: T;\r\n} | {\r\n    readonly ok: false;\r\n    readonly error: Error_2;\r\n});\r\n\r\nexport declare type ResultArg = {\r\n    [FieldName in string]: ResultFieldDefinition;\r\n};\r\n\r\nexport declare type ResultArgs = {\r\n    result: {\r\n        [ModelName in string]: ResultArg;\r\n    };\r\n};\r\n\r\nexport declare type ResultArgsFieldCompute = (model: any) => unknown;\r\n\r\nexport declare type ResultFieldDefinition = {\r\n    needs?: {\r\n        [FieldName in string]: boolean;\r\n    };\r\n    compute: ResultArgsFieldCompute;\r\n};\r\n\r\ndeclare type ResultNode = {\r\n    type: 'affectedRows';\r\n} | {\r\n    type: 'object';\r\n    fields: Record<string, ResultNode>;\r\n    serializedName: string | null;\r\n    skipNulls: boolean;\r\n} | {\r\n    type: 'field';\r\n    dbName: string;\r\n    fieldType: FieldType;\r\n};\r\n\r\nexport declare type Return<T> = T extends (...args: any[]) => infer R ? R : T;\r\n\r\nexport declare type RuntimeDataModel = {\r\n    readonly models: Record<string, RuntimeModel>;\r\n    readonly enums: Record<string, RuntimeEnum>;\r\n    readonly types: Record<string, RuntimeModel>;\r\n};\r\n\r\ndeclare type RuntimeEnum = Omit<DMMF_2.DatamodelEnum, 'name'>;\r\n\r\ndeclare type RuntimeModel = Omit<DMMF_2.Model, 'name'>;\r\n\r\ndeclare type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '';\r\n\r\ndeclare type Schema = ReadonlyDeep_2<{\r\n    rootQueryType?: string;\r\n    rootMutationType?: string;\r\n    inputObjectTypes: {\r\n        model?: InputType[];\r\n        prisma?: InputType[];\r\n    };\r\n    outputObjectTypes: {\r\n        model: OutputType[];\r\n        prisma: OutputType[];\r\n    };\r\n    enumTypes: {\r\n        model?: SchemaEnum[];\r\n        prisma: SchemaEnum[];\r\n    };\r\n    fieldRefTypes: {\r\n        prisma?: FieldRefType[];\r\n    };\r\n}>;\r\n\r\ndeclare type SchemaArg = ReadonlyDeep_2<{\r\n    name: string;\r\n    comment?: string;\r\n    isNullable: boolean;\r\n    isRequired: boolean;\r\n    inputTypes: InputTypeRef[];\r\n    requiresOtherFields?: string[];\r\n    deprecation?: Deprecation;\r\n}>;\r\n\r\ndeclare type SchemaEnum = ReadonlyDeep_2<{\r\n    name: string;\r\n    values: string[];\r\n}>;\r\n\r\ndeclare type SchemaField = ReadonlyDeep_2<{\r\n    name: string;\r\n    isNullable?: boolean;\r\n    outputType: OutputTypeRef;\r\n    args: SchemaArg[];\r\n    deprecation?: Deprecation;\r\n    documentation?: string;\r\n}>;\r\n\r\nexport declare type Select<T, U> = T extends U ? T : never;\r\n\r\nexport declare type SelectablePayloadFields<K extends PropertyKey, O> = {\r\n    objects: {\r\n        [k in K]: O;\r\n    };\r\n} | {\r\n    composites: {\r\n        [k in K]: O;\r\n    };\r\n};\r\n\r\nexport declare type SelectField<P extends SelectablePayloadFields<any, any>, K extends PropertyKey> = P extends {\r\n    objects: Record<K, any>;\r\n} ? P['objects'][K] : P extends {\r\n    composites: Record<K, any>;\r\n} ? P['composites'][K] : never;\r\n\r\ndeclare type Selection_2 = Record<string, boolean | Skip | JsArgs>;\r\nexport { Selection_2 as Selection }\r\n\r\nexport declare function serializeJsonQuery({ modelName, action, args, runtimeDataModel, extensions, callsite, clientMethod, errorFormat, clientVersion, previewFeatures, globalOmit, }: SerializeParams): JsonQuery;\r\n\r\ndeclare type SerializeParams = {\r\n    runtimeDataModel: RuntimeDataModel;\r\n    modelName?: string;\r\n    action: Action;\r\n    args?: JsArgs;\r\n    extensions?: MergedExtensionsList;\r\n    callsite?: CallSite;\r\n    clientMethod: string;\r\n    clientVersion: string;\r\n    errorFormat: ErrorFormat;\r\n    previewFeatures: string[];\r\n    globalOmit?: GlobalOmitOptions;\r\n};\r\n\r\ndeclare class Skip {\r\n    constructor(param?: symbol);\r\n    ifUndefined<T>(value: T | undefined): T | Skip;\r\n}\r\n\r\nexport declare const skip: Skip;\r\n\r\ndeclare type SortOrder = 'asc' | 'desc';\r\n\r\n/**\r\n * An interface that represents a span. A span represents a single operation\r\n * within a trace. Examples of span might include remote procedure calls or a\r\n * in-process function calls to sub-components. A Trace has a single, top-level\r\n * \"root\" Span that in turn may have zero or more child Spans, which in turn\r\n * may have children.\r\n *\r\n * Spans are created by the {@link Tracer.startSpan} method.\r\n */\r\ndeclare interface Span {\r\n    /**\r\n     * Returns the {@link SpanContext} object associated with this Span.\r\n     *\r\n     * Get an immutable, serializable identifier for this span that can be used\r\n     * to create new child spans. Returned SpanContext is usable even after the\r\n     * span ends.\r\n     *\r\n     * @returns the SpanContext object associated with this Span.\r\n     */\r\n    spanContext(): SpanContext;\r\n    /**\r\n     * Sets an attribute to the span.\r\n     *\r\n     * Sets a single Attribute with the key and value passed as arguments.\r\n     *\r\n     * @param key the key for this attribute.\r\n     * @param value the value for this attribute. Setting a value null or\r\n     *              undefined is invalid and will result in undefined behavior.\r\n     */\r\n    setAttribute(key: string, value: SpanAttributeValue): this;\r\n    /**\r\n     * Sets attributes to the span.\r\n     *\r\n     * @param attributes the attributes that will be added.\r\n     *                   null or undefined attribute values\r\n     *                   are invalid and will result in undefined behavior.\r\n     */\r\n    setAttributes(attributes: SpanAttributes): this;\r\n    /**\r\n     * Adds an event to the Span.\r\n     *\r\n     * @param name the name of the event.\r\n     * @param [attributesOrStartTime] the attributes that will be added; these are\r\n     *     associated with this event. Can be also a start time\r\n     *     if type is {@type TimeInput} and 3rd param is undefined\r\n     * @param [startTime] start time of the event.\r\n     */\r\n    addEvent(name: string, attributesOrStartTime?: SpanAttributes | TimeInput, startTime?: TimeInput): this;\r\n    /**\r\n     * Adds a single link to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param link the link to add.\r\n     */\r\n    addLink(link: Link): this;\r\n    /**\r\n     * Adds multiple links to the span.\r\n     *\r\n     * Links added after the creation will not affect the sampling decision.\r\n     * It is preferred span links be added at span creation.\r\n     *\r\n     * @param links the links to add.\r\n     */\r\n    addLinks(links: Link[]): this;\r\n    /**\r\n     * Sets a status to the span. If used, this will override the default Span\r\n     * status. Default is {@link SpanStatusCode.UNSET}. SetStatus overrides the value\r\n     * of previous calls to SetStatus on the Span.\r\n     *\r\n     * @param status the SpanStatus to set.\r\n     */\r\n    setStatus(status: SpanStatus): this;\r\n    /**\r\n     * Updates the Span name.\r\n     *\r\n     * This will override the name provided via {@link Tracer.startSpan}.\r\n     *\r\n     * Upon this update, any sampling behavior based on Span name will depend on\r\n     * the implementation.\r\n     *\r\n     * @param name the Span name.\r\n     */\r\n    updateName(name: string): this;\r\n    /**\r\n     * Marks the end of Span execution.\r\n     *\r\n     * Call to End of a Span MUST not have any effects on child spans. Those may\r\n     * still be running and can be ended later.\r\n     *\r\n     * Do not return `this`. The Span generally should not be used after it\r\n     * is ended so chaining is not desired in this context.\r\n     *\r\n     * @param [endTime] the time to set as Span's end time. If not provided,\r\n     *     use the current time as the span's end time.\r\n     */\r\n    end(endTime?: TimeInput): void;\r\n    /**\r\n     * Returns the flag whether this span will be recorded.\r\n     *\r\n     * @returns true if this Span is active and recording information like events\r\n     *     with the `AddEvent` operation and attributes using `setAttributes`.\r\n     */\r\n    isRecording(): boolean;\r\n    /**\r\n     * Sets exception as a span event\r\n     * @param exception the exception the only accepted values are string or Error\r\n     * @param [time] the time to set as Span's event time. If not provided,\r\n     *     use the current time.\r\n     */\r\n    recordException(exception: Exception, time?: TimeInput): void;\r\n}\r\n\r\n/**\r\n * @deprecated please use {@link Attributes}\r\n */\r\ndeclare type SpanAttributes = Attributes;\r\n\r\n/**\r\n * @deprecated please use {@link AttributeValue}\r\n */\r\ndeclare type SpanAttributeValue = AttributeValue;\r\n\r\ndeclare type SpanCallback<R> = (span?: Span, context?: Context) => R;\r\n\r\n/**\r\n * A SpanContext represents the portion of a {@link Span} which must be\r\n * serialized and propagated along side of a {@link Baggage}.\r\n */\r\ndeclare interface SpanContext {\r\n    /**\r\n     * The ID of the trace that this span belongs to. It is worldwide unique\r\n     * with practically sufficient probability by being made as 16 randomly\r\n     * generated bytes, encoded as a 32 lowercase hex characters corresponding to\r\n     * 128 bits.\r\n     */\r\n    traceId: string;\r\n    /**\r\n     * The ID of the Span. It is globally unique with practically sufficient\r\n     * probability by being made as 8 randomly generated bytes, encoded as a 16\r\n     * lowercase hex characters corresponding to 64 bits.\r\n     */\r\n    spanId: string;\r\n    /**\r\n     * Only true if the SpanContext was propagated from a remote parent.\r\n     */\r\n    isRemote?: boolean;\r\n    /**\r\n     * Trace flags to propagate.\r\n     *\r\n     * It is represented as 1 byte (bitmap). Bit to represent whether trace is\r\n     * sampled or not. When set, the least significant bit documents that the\r\n     * caller may have recorded trace data. A caller who does not record trace\r\n     * data out-of-band leaves this flag unset.\r\n     *\r\n     * see {@link TraceFlags} for valid flag values.\r\n     */\r\n    traceFlags: number;\r\n    /**\r\n     * Tracing-system-specific info to propagate.\r\n     *\r\n     * The tracestate field value is a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     * More Info: https://www.w3.org/TR/trace-context/#tracestate-field\r\n     *\r\n     * Examples:\r\n     *     Single tracing system (generic format):\r\n     *         tracestate: rojo=00f067aa0ba902b7\r\n     *     Multiple tracing systems (with different formatting):\r\n     *         tracestate: rojo=00f067aa0ba902b7,congo=t61rcWkgMzE\r\n     */\r\n    traceState?: TraceState;\r\n}\r\n\r\ndeclare enum SpanKind {\r\n    /** Default value. Indicates that the span is used internally. */\r\n    INTERNAL = 0,\r\n    /**\r\n     * Indicates that the span covers server-side handling of an RPC or other\r\n     * remote request.\r\n     */\r\n    SERVER = 1,\r\n    /**\r\n     * Indicates that the span covers the client-side wrapper around an RPC or\r\n     * other remote request.\r\n     */\r\n    CLIENT = 2,\r\n    /**\r\n     * Indicates that the span describes producer sending a message to a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    PRODUCER = 3,\r\n    /**\r\n     * Indicates that the span describes consumer receiving a message from a\r\n     * broker. Unlike client and server, there is no direct critical path latency\r\n     * relationship between producer and consumer spans.\r\n     */\r\n    CONSUMER = 4\r\n}\r\n\r\n/**\r\n * Options needed for span creation\r\n */\r\ndeclare interface SpanOptions {\r\n    /**\r\n     * The SpanKind of a span\r\n     * @default {@link SpanKind.INTERNAL}\r\n     */\r\n    kind?: SpanKind;\r\n    /** A span's attributes */\r\n    attributes?: SpanAttributes;\r\n    /** {@link Link}s span to other spans */\r\n    links?: Link[];\r\n    /** A manually specified start time for the created `Span` object. */\r\n    startTime?: TimeInput;\r\n    /** The new span should be a root span. (Ignore parent from context). */\r\n    root?: boolean;\r\n}\r\n\r\ndeclare interface SpanStatus {\r\n    /** The status code of this message. */\r\n    code: SpanStatusCode;\r\n    /** A developer-facing error message. */\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * An enumeration of status codes.\r\n */\r\ndeclare enum SpanStatusCode {\r\n    /**\r\n     * The default status.\r\n     */\r\n    UNSET = 0,\r\n    /**\r\n     * The operation has been validated by an Application developer or\r\n     * Operator to have completed successfully.\r\n     */\r\n    OK = 1,\r\n    /**\r\n     * The operation contains an error.\r\n     */\r\n    ERROR = 2\r\n}\r\n\r\n/**\r\n * A SQL instance can be nested within each other to build SQL strings.\r\n */\r\nexport declare class Sql {\r\n    readonly values: Value[];\r\n    readonly strings: string[];\r\n    constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]);\r\n    get sql(): string;\r\n    get statement(): string;\r\n    get text(): string;\r\n    inspect(): {\r\n        sql: string;\r\n        statement: string;\r\n        text: string;\r\n        values: unknown[];\r\n    };\r\n}\r\n\r\ndeclare interface SqlDriverAdapter extends SqlQueryable {\r\n    /**\r\n     * Execute multiple SQL statements separated by semicolon.\r\n     */\r\n    executeScript(script: string): Promise<void>;\r\n    /**\r\n     * Start new transaction.\r\n     */\r\n    startTransaction(isolationLevel?: IsolationLevel): Promise<Transaction>;\r\n    /**\r\n     * Optional method that returns extra connection info\r\n     */\r\n    getConnectionInfo?(): ConnectionInfo;\r\n    /**\r\n     * Dispose of the connection and release any resources.\r\n     */\r\n    dispose(): Promise<void>;\r\n}\r\n\r\nexport declare interface SqlDriverAdapterFactory extends DriverAdapterFactory<SqlQuery, SqlResultSet> {\r\n    connect(): Promise<SqlDriverAdapter>;\r\n}\r\n\r\ndeclare type SqlQuery = {\r\n    sql: string;\r\n    args: Array<unknown>;\r\n    argTypes: Array<ArgType>;\r\n};\r\n\r\ndeclare interface SqlQueryable extends Queryable<SqlQuery, SqlResultSet> {\r\n}\r\n\r\ndeclare interface SqlResultSet {\r\n    /**\r\n     * List of column types appearing in a database query, in the same order as `columnNames`.\r\n     * They are used within the Query Engine to convert values from JS to Quaint values.\r\n     */\r\n    columnTypes: Array<ColumnType>;\r\n    /**\r\n     * List of column names appearing in a database query, in the same order as `columnTypes`.\r\n     */\r\n    columnNames: Array<string>;\r\n    /**\r\n     * List of rows retrieved from a database query.\r\n     * Each row is a list of values, whose length matches `columnNames` and `columnTypes`.\r\n     */\r\n    rows: Array<Array<unknown>>;\r\n    /**\r\n     * The last ID of an `INSERT` statement, if any.\r\n     * This is required for `AUTO_INCREMENT` columns in databases based on MySQL and SQLite.\r\n     */\r\n    lastInsertId?: string;\r\n}\r\n\r\n/**\r\n * Create a SQL object from a template string.\r\n */\r\nexport declare function sqltag(strings: readonly string[], ...values: readonly RawValue[]): Sql;\r\n\r\n/**\r\n * Defines TimeInput.\r\n *\r\n * hrtime, epoch milliseconds, performance.now() or Date\r\n */\r\ndeclare type TimeInput = HrTime_2 | number | Date;\r\n\r\nexport declare type ToTuple<T> = T extends any[] ? T : [T];\r\n\r\ndeclare interface TraceState {\r\n    /**\r\n     * Create a new TraceState which inherits from this TraceState and has the\r\n     * given key set.\r\n     * The new entry will always be added in the front of the list of states.\r\n     *\r\n     * @param key key of the TraceState entry.\r\n     * @param value value of the TraceState entry.\r\n     */\r\n    set(key: string, value: string): TraceState;\r\n    /**\r\n     * Return a new TraceState which inherits from this TraceState but does not\r\n     * contain the given key.\r\n     *\r\n     * @param key the key for the TraceState entry to be removed.\r\n     */\r\n    unset(key: string): TraceState;\r\n    /**\r\n     * Returns the value to which the specified key is mapped, or `undefined` if\r\n     * this map contains no mapping for the key.\r\n     *\r\n     * @param key with which the specified value is to be associated.\r\n     * @returns the value to which the specified key is mapped, or `undefined` if\r\n     *     this map contains no mapping for the key.\r\n     */\r\n    get(key: string): string | undefined;\r\n    /**\r\n     * Serializes the TraceState to a `list` as defined below. The `list` is a\r\n     * series of `list-members` separated by commas `,`, and a list-member is a\r\n     * key/value pair separated by an equals sign `=`. Spaces and horizontal tabs\r\n     * surrounding `list-members` are ignored. There can be a maximum of 32\r\n     * `list-members` in a `list`.\r\n     *\r\n     * @returns the serialized string.\r\n     */\r\n    serialize(): string;\r\n}\r\n\r\ndeclare interface TracingHelper {\r\n    isEnabled(): boolean;\r\n    getTraceParent(context?: Context): string;\r\n    dispatchEngineSpans(spans: EngineSpan[]): void;\r\n    getActiveContext(): Context | undefined;\r\n    runInChildSpan<R>(nameOrOptions: string | ExtendedSpanOptions, callback: SpanCallback<R>): R;\r\n}\r\n\r\ndeclare interface Transaction extends AdapterInfo, SqlQueryable {\r\n    /**\r\n     * Transaction options.\r\n     */\r\n    readonly options: TransactionOptions;\r\n    /**\r\n     * Commit the transaction.\r\n     */\r\n    commit(): Promise<void>;\r\n    /**\r\n     * Roll back the transaction.\r\n     */\r\n    rollback(): Promise<void>;\r\n}\r\n\r\ndeclare namespace Transaction_2 {\r\n    export {\r\n        Options,\r\n        IsolationLevel_2 as IsolationLevel,\r\n        InteractiveTransactionInfo,\r\n        TransactionHeaders\r\n    }\r\n}\r\n\r\ndeclare type TransactionHeaders = {\r\n    traceparent?: string;\r\n};\r\n\r\ndeclare type TransactionOptions = {\r\n    usePhantomQuery: boolean;\r\n};\r\n\r\ndeclare type TransactionOptions_2<InteractiveTransactionPayload> = {\r\n    kind: 'itx';\r\n    options: InteractiveTransactionOptions<InteractiveTransactionPayload>;\r\n} | {\r\n    kind: 'batch';\r\n    options: BatchTransactionOptions;\r\n};\r\n\r\nexport declare class TypedSql<Values extends readonly unknown[], Result> {\r\n    [PrivateResultType]: Result;\r\n    constructor(sql: string, values: Values);\r\n    get sql(): string;\r\n    get values(): Values;\r\n}\r\n\r\nexport declare type TypeMapCbDef = Fn<{\r\n    extArgs: InternalArgs;\r\n}, TypeMapDef>;\r\n\r\n/** Shared */\r\nexport declare type TypeMapDef = Record<any, any>;\r\n\r\ndeclare type TypeRef<AllowedLocations extends FieldLocation> = {\r\n    isList: boolean;\r\n    type: string;\r\n    location: AllowedLocations;\r\n    namespace?: FieldNamespace;\r\n};\r\n\r\ndeclare namespace Types {\r\n    export {\r\n        Result_3 as Result,\r\n        Extensions_2 as Extensions,\r\n        Utils,\r\n        Public_2 as Public,\r\n        isSkip,\r\n        Skip,\r\n        skip,\r\n        UnknownTypedSql,\r\n        OperationPayload as Payload\r\n    }\r\n}\r\nexport { Types }\r\n\r\ndeclare type uniqueIndex = ReadonlyDeep_2<{\r\n    name: string;\r\n    fields: string[];\r\n}>;\r\n\r\ndeclare type UnknownErrorParams = {\r\n    clientVersion: string;\r\n    batchRequestIdx?: number;\r\n};\r\n\r\nexport declare type UnknownTypedSql = TypedSql<unknown[], unknown>;\r\n\r\ndeclare type Unpacker = (data: any) => any;\r\n\r\nexport declare type UnwrapPayload<P> = {} extends P ? unknown : {\r\n    [K in keyof P]: P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    }[] ? Array<S & UnwrapPayload<C>> : P[K] extends {\r\n        scalars: infer S;\r\n        composites: infer C;\r\n    } | null ? S & UnwrapPayload<C> | Select<P[K], null> : never;\r\n};\r\n\r\nexport declare type UnwrapPromise<P> = P extends Promise<infer R> ? R : P;\r\n\r\nexport declare type UnwrapTuple<Tuple extends readonly unknown[]> = {\r\n    [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>;\r\n};\r\n\r\n/**\r\n * Input that flows from the user into the Client.\r\n */\r\ndeclare type UserArgs_2 = any;\r\n\r\ndeclare namespace Utils {\r\n    export {\r\n        EmptyToUnknown,\r\n        NeverToUnknown,\r\n        PatchFlat,\r\n        Omit_2 as Omit,\r\n        Pick_2 as Pick,\r\n        ComputeDeep,\r\n        Compute,\r\n        OptionalFlat,\r\n        ReadonlyDeep,\r\n        Narrowable,\r\n        Narrow,\r\n        Exact,\r\n        Cast,\r\n        Record_2 as Record,\r\n        UnwrapPromise,\r\n        UnwrapTuple,\r\n        Path,\r\n        Fn,\r\n        Call,\r\n        RequiredKeys,\r\n        OptionalKeys,\r\n        Optional,\r\n        Return,\r\n        ToTuple,\r\n        RenameAndNestPayloadKeys,\r\n        PayloadToResult,\r\n        Select,\r\n        Equals,\r\n        Or,\r\n        JsPromise\r\n    }\r\n}\r\n\r\ndeclare type ValidationError = {\r\n    error_identifier: 'RELATION_VIOLATION';\r\n    context: {\r\n        relation: string;\r\n        modelA: string;\r\n        modelB: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RELATED_RECORD';\r\n    context: {\r\n        model: string;\r\n        relation: string;\r\n        relationType: string;\r\n        operation: string;\r\n        neededFor?: string;\r\n    };\r\n} | {\r\n    error_identifier: 'MISSING_RECORD';\r\n    context: {\r\n        operation: string;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_INPUT';\r\n    context: {\r\n        expectedRows: number;\r\n    };\r\n} | {\r\n    error_identifier: 'INCOMPLETE_CONNECT_OUTPUT';\r\n    context: {\r\n        expectedRows: number;\r\n        relation: string;\r\n        relationType: string;\r\n    };\r\n} | {\r\n    error_identifier: 'RECORDS_NOT_CONNECTED';\r\n    context: {\r\n        relation: string;\r\n        parent: string;\r\n        child: string;\r\n    };\r\n};\r\n\r\ndeclare function validator<V>(): <S>(select: Exact<S, V>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(client: C, model: M, operation: O): <S>(select: Exact<S, Args<C[M], O>>) => S;\r\n\r\ndeclare function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation, P extends keyof Args<C[M], O>>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S;\r\n\r\n/**\r\n * Values supported by SQL engine.\r\n */\r\nexport declare type Value = unknown;\r\n\r\nexport declare function warnEnvConflicts(envPaths: any): void;\r\n\r\nexport declare const warnOnce: (key: string, message: string, ...args: unknown[]) => void;\r\n\r\nexport { }\r\n","node_modules/.prisma/client/wasm.d.ts":"export * from \"./index\"","node_modules/@prisma/client/index.d.ts":"export * from '.prisma/client/default'"},"document":"# Prisma Markdown\n\n> Generated by [`prisma-markdown`](https://github.com/samchon/prisma-markdown)\n\n- [Systematic](#systematic)\n- [Actors](#actors)\n- [Study](#study)\n- [Notifications](#notifications)\n- [Analytics](#analytics)\n\n## Systematic\n\n```mermaid\nerDiagram\n\"study_planner_study_phases\" {\n  String id PK\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_subject_categories\" {\n  String id PK\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n```\n\n### `study_planner_study_phases`\n\nDefines the three distinct study phases available in the study planner\nsystem (preview, main learning, review). These phases categorize study\nactivities and enable progress tracking by phase.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `code`\n  > Unique code identifier of the study phase, e.g., 'preview',\n  > 'main_learning', 'review'.\n- `name`: Human-readable name of the study phase, e.g., 'Preview'.\n- `description`: Optional detailed description of the study phase.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n### `study_planner_subject_categories`\n\nStores subject categories used for classifying study tasks, including\nhierarchical English language subcategories for grammar, vocabulary,\nspeaking, and others.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `code`: Unique code identifier of the subject category, e.g., 'english_grammar'.\n- `name`: Human-readable name of the subject category, e.g., 'English Grammar'.\n- `description`: Optional detailed description of the subject category.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n## Actors\n\n```mermaid\nerDiagram\n\"study_planner_students\" {\n  String id PK\n  String email UK\n  String password_hash\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `study_planner_students`\n\nThis table stores authenticated student user information including login\ncredentials and audit timestamps. It supports user authentication by\nmaintaining unique emails and hashed passwords. It includes temporal\nfields for creation, update, and potential soft deletion timestamps. As a\nprimary entity, it allows independent user management and secure\nauthentication workflows.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `email`: Unique email address used for student login and communication.\n- `password_hash`\n  > Secure hashed password for authentication purposes. Plain passwords are\n  > never stored.\n- `created_at`: Timestamp when the student record was created.\n- `updated_at`: Timestamp when the student record was last updated.\n- `deleted_at`\n  > Timestamp indicating when the student record was soft deleted, if\n  > applicable.\n\n## Study\n\n```mermaid\nerDiagram\n\"study_planner_study_tasks\" {\n  String id PK\n  String student_id FK\n  String study_phase_id FK\n  String subject_category_id FK\n  String title\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_study_task_progress\" {\n  String id PK\n  String study_task_id FK\n  String study_phase_id FK\n  DateTime completed_at \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_attachments\" {\n  String id PK\n  String study_task_id FK\n  String file_type\n  String(80000) file_url\n  DateTime created_at\n}\n\"study_planner_memos\" {\n  String id PK\n  String study_task_id FK\n  String memo_text\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_task_progress\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_attachments\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_memos\" }o--|| \"study_planner_study_tasks\" : studyTask\n```\n\n### `study_planner_study_tasks`\n\nCore entity representing a student study task managed independently,\nlinked to a student, study phase, and subject category. Tracks title,\noptional description, and soft deletion. Supports creation and update\ntimestamps for audit trail.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Belonged student's [study_planner_students.id](#study_planner_students)\n- `study_phase_id`: Associated study phase [study_planner_study_phases.id](#study_planner_study_phases)\n- `subject_category_id`: Linked subject category [study_planner_subject_categories.id](#study_planner_subject_categories)\n- `title`: Title of the study task capturing the user's learning goal.\n- `description`: Detailed description or notes about the study task.\n- `created_at`: Timestamp when the study task was created.\n- `updated_at`: Timestamp when the study task was last updated.\n- `deleted_at`: Timestamp when the study task was soft deleted; null if not deleted.\n\n### `study_planner_study_task_progress`\n\nStores progress information per study phase for each study task. Includes\ncompletion timestamps for tracking phase completion states to support\nstudy lifecycle management and analytics. References the main study task\nand the study phase.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `study_task_id`: Associated study task [study_planner_study_tasks.id](#study_planner_study_tasks)\n- `study_phase_id`: Tracked study phase [study_planner_study_phases.id](#study_planner_study_phases)\n- `completed_at`\n  > Timestamp when the study phase was completed for this task; null if\n  > incomplete.\n- `created_at`: Record creation timestamp for progress entry.\n- `updated_at`: Last update timestamp for progress entry.\n\n### `study_planner_attachments`\n\nRepresents attachment files such as images or PDFs linked to study tasks.\nSupports multiple files per task with file metadata including type, URL,\nand creation timestamp for content management.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `study_task_id`: Belonged study task [study_planner_study_tasks.id](#study_planner_study_tasks)\n- `file_type`: Type of the attachment file, e.g., image/jpeg, application/pdf.\n- `file_url`: URI of the stored attachment file for retrieval.\n- `created_at`: Timestamp when the attachment was created.\n\n### `study_planner_memos`\n\nStores memo texts attached to study tasks as notes to support users in\ncapturing additional information related to their learning activities.\nEach memo is associated with a single study task with timestamps for\ncreation and updates.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `study_task_id`: Belonged study task [study_planner_study_tasks.id](#study_planner_study_tasks)\n- `memo_text`: Text content of the memo providing additional details or notes.\n- `created_at`: Timestamp when the memo was created.\n- `updated_at`: Timestamp when the memo was last updated.\n\n## Notifications\n\n```mermaid\nerDiagram\n\"study_planner_task_alarms\" {\n  String id PK\n  String student_id FK\n  String study_task_id FK\n  String title\n  DateTime alarm_time\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_general_reminders\" {\n  String id PK\n  String student_id FK\n  String title\n  DateTime due_time\n  String description \"nullable\"\n  Boolean active\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```\n\n### `study_planner_task_alarms`\n\nThis table stores alarms set by authenticated student users for specific\nstudy tasks to trigger PWA notifications at scheduled times. Each alarm\nreferences a study task and the student user who owns it. It supports\nauditing via creation and update timestamps and allows soft deletion.\nThis is a primary table managed independently by users for notification\nmanagement.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Belonged student's [study_planner_students.id](#study_planner_students) who owns this alarm.\n- `study_task_id`\n  > Referenced study task's [study_planner_study_tasks.id](#study_planner_study_tasks) for which\n  > the alarm is set.\n- `title`: Title or label of the alarm for user identification.\n- `alarm_time`: Scheduled time for the alarm to trigger the notification.\n- `created_at`: Timestamp of record creation for audit trail.\n- `updated_at`: Timestamp of last update for audit trail.\n- `deleted_at`: Soft delete timestamp indicating logical removal (nullable).\n\n### `study_planner_general_reminders`\n\nThis table contains general reminders created by authenticated student\nusers which are not tied to specific study tasks. These reminders trigger\nPWA notifications to users at scheduled times. It includes fields for\nreminder title, scheduled due time, optional description, audit\ntimestamps, soft deletion, and an active flag to manage reminder status.\nThis is a primary table managed independently by users.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`\n  > Belonged student's [study_planner_students.id](#study_planner_students) who owns this\n  > reminder.\n- `title`: Title or label of the general reminder for user identification.\n- `due_time`: Scheduled due time for the reminder notification.\n- `description`\n  > Optional textual description providing additional context for the\n  > reminder.\n- `active`\n  > Flag indicating whether the reminder is currently active and should\n  > trigger notifications.\n- `created_at`: Timestamp of record creation for audit and history.\n- `updated_at`: Timestamp of last update for audit and history.\n- `deleted_at`: Soft delete timestamp indicating logical removal (nullable).\n\n## Analytics\n\n```mermaid\nerDiagram\n\"study_planner_study_progress_analytics\" {\n  String id PK\n  String student_id FK\n  String study_phase_id FK\n  Int completed_tasks_count\n  Int total_tasks_count\n  Float completion_rate\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_learning_gap_charts\" {\n  String id PK\n  String student_id FK\n  String subject_category_id FK\n  Float gap_metric\n  DateTime created_at\n  DateTime updated_at\n}\n```\n\n### `study_planner_study_progress_analytics`\n\nAggregated study progress analytics per student and study phase,\nproviding metrics such as completed tasks count, total tasks count, and\ncompletion rate. Related to students and study phases for tracking\nlearning progress across phases.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Associated student [study_planner_students.id](#study_planner_students).\n- `study_phase_id`: Associated study phase [study_planner_study_phases.id](#study_planner_study_phases).\n- `completed_tasks_count`: Number of completed tasks for the student in the given study phase.\n- `total_tasks_count`: Total number of tasks assigned to the student in the study phase.\n- `completion_rate`: Completion rate computed as completed tasks divided by total tasks.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n\n### `study_planner_learning_gap_charts`\n\nAnalytics data showing learning gap statistics per student and subject\ncategory, highlighting underperformed areas in study tasks. Links to\nstudents and subject categories to assist targeted improvements and\nvisualization.\n\nProperties as follows:\n\n- `id`: Primary Key.\n- `student_id`: Associated student [study_planner_students.id](#study_planner_students).\n- `subject_category_id`\n  > Subject category [study_planner_subject_categories.id](#study_planner_subject_categories) representing\n  > study topic.\n- `gap_metric`: Quantified measure of the learning gap for the subject category.\n- `created_at`: Record creation timestamp.\n- `updated_at`: Record last update timestamp.\n","diagrams":{"Systematic":"```mermaid\nerDiagram\n\"study_planner_study_phases\" {\n  String id PK\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_subject_categories\" {\n  String id PK\n  String code UK\n  String name\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n```","Actors":"```mermaid\nerDiagram\n\"study_planner_students\" {\n  String id PK\n  String email UK\n  String password_hash\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```","Study":"```mermaid\nerDiagram\n\"study_planner_study_tasks\" {\n  String id PK\n  String student_id FK\n  String study_phase_id FK\n  String subject_category_id FK\n  String title\n  String description \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_study_task_progress\" {\n  String id PK\n  String study_task_id FK\n  String study_phase_id FK\n  DateTime completed_at \"nullable\"\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_attachments\" {\n  String id PK\n  String study_task_id FK\n  String file_type\n  String(80000) file_url\n  DateTime created_at\n}\n\"study_planner_memos\" {\n  String id PK\n  String study_task_id FK\n  String memo_text\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_study_task_progress\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_attachments\" }o--|| \"study_planner_study_tasks\" : studyTask\n\"study_planner_memos\" }o--|| \"study_planner_study_tasks\" : studyTask\n```","Notifications":"```mermaid\nerDiagram\n\"study_planner_task_alarms\" {\n  String id PK\n  String student_id FK\n  String study_task_id FK\n  String title\n  DateTime alarm_time\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n\"study_planner_general_reminders\" {\n  String id PK\n  String student_id FK\n  String title\n  DateTime due_time\n  String description \"nullable\"\n  Boolean active\n  DateTime created_at\n  DateTime updated_at\n  DateTime deleted_at \"nullable\"\n}\n```","Analytics":"```mermaid\nerDiagram\n\"study_planner_study_progress_analytics\" {\n  String id PK\n  String student_id FK\n  String study_phase_id FK\n  Int completed_tasks_count\n  Int total_tasks_count\n  Float completion_rate\n  DateTime created_at\n  DateTime updated_at\n}\n\"study_planner_learning_gap_charts\" {\n  String id PK\n  String student_id FK\n  String subject_category_id FK\n  Float gap_metric\n  DateTime created_at\n  DateTime updated_at\n}\n```"}},"created_at":"2025-09-12T18:08:13.525Z","completed_at":"2025-09-12T18:09:51.935Z","step":0},{"id":"01993f1f-08e5-7569-9df8-3cb8ff7c0f74","type":"userMessage","contents":[{"type":"text","text":"so ?"}],"created_at":"2025-09-12T18:10:22.565Z"},{"id":"01993f1f-0c7b-7728-8c22-6d5774a74743","type":"assistantMessage","text":"The database schema and ERD documentation based on your study planner requirements have been successfully generated.\n\nThe next step will be to design and generate the API interfaces so that your frontend or clients can interact with the backend system.\n\nShall I proceed with creating the API interface definitions for your study planner backend?","created_at":"2025-09-12T18:10:23.483Z","completed_at":"2025-09-12T18:10:24.318Z"},{"id":"01993f21-cf3f-774c-bb11-300d1cdeb189","type":"userMessage","contents":[{"type":"text","text":"go"}],"created_at":"2025-09-12T18:13:24.415Z"},{"type":"interface","id":"01993f30-3c6c-77c6-bdc3-21e83bf9d473","reason":"Generate API interface definitions for the study planner backend based on the completed database schema and requirements analysis, supporting user authentication, study task management with phases, attachments, notifications, and progress tracking.","authorizations":[{"role":"student","operations":[{"specification":"This API operation allows an authenticated student user to register a new account. It handles user sign-up by creating a student record with a unique email and hashed password, storing creation and update timestamps, and ensuring email uniqueness as required by the underlying study_planner_students Prisma table. The API enforces input validation for email and password, securely hashes passwords, and issues JWT tokens upon successful registration to establish authenticated sessions. This supports the business requirement that students can create an account to manage their study activities.\n\nThis operation is public (no prior authentication required) to allow new student registrations.\n\nIt interacts directly with the study_planner_students table.\n\nThe response body provides an authorized token information under the type IStudyPlannerStudent.IAuthorized, conforming to the authentication response pattern.\n\nThis JWT token can be used along with other operations like login and refresh token flows.\n\nRelated operations are /auth/student/login and /auth/student/refresh for completing user authentication.\n\nPOST /auth/student/join should be called for user registration.","authorizationType":"join","description":"User registration (join) operation for student role. Creates a new student account with unique email and hashed password stored in study_planner_students table.\n\nThe system enforces email uniqueness and password security during registration. Upon successful registration, JWT access and refresh tokens are issued conforming to authentication flows.\n\nThis operation is public and does not require prior authentication.\n\nRelated endpoints /auth/student/login and /auth/student/refresh are used for subsequent user login and token refresh operations.\n\nThis process enables new users to begin using the study planner service by authenticating with their credentials.","summary":"Register a new student user account stored in study_planner_students table.","parameters":[],"requestBody":{"description":"Student registration credentials and profile data.","typeName":"IStudyPlannerStudent.IJoin"},"responseBody":{"description":"Authorized tokens and student info upon registration.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"join","path":"/auth/student/join","method":"post"},{"specification":"This API operation allows an authenticated student user to log in by validating their credentials against the stored records in study_planner_students table. It requires valid email and password inputs and authenticates the user by verifying the password hash.\n\nUpon successful authentication, the system issues JWT access and refresh tokens to enable secure session management.\n\nThe operation is public to allow user login.\n\nIt interacts with the study_planner_students table for credential verification and session token issuance.\n\nThe response body returns an object of type IStudyPlannerStudent.IAuthorized to represent the authenticated user and tokens.\n\nThis operation complements the join and refresh endpoints for a complete authentication flow.\n\nPOST /auth/student/login should be called for user authentication.","authorizationType":"login","description":"User login operation for student role. Validates email and password against stored credentials in study_planner_students table.\n\nIssues JWT tokens upon successful authentication for secure session management.\n\nThis operation is public and acts as the gateway to our study planner backend for stored users.\n\nRelated operations /auth/student/join and /auth/student/refresh complete the authentication lifecycle.\n\nUser credentials are never stored in plaintext and securely compared using password hashing methods.","summary":"Authenticate student user and issue JWT tokens.","parameters":[],"requestBody":{"description":"Student login credentials including email and password.","typeName":"IStudyPlannerStudent.ILogin"},"responseBody":{"description":"Authorized tokens and student info upon login.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"login","path":"/auth/student/login","method":"post"},{"specification":"This API operation enables an authenticated student user to refresh their access tokens using a valid refresh token. It interacts with the study_planner_students table to validate the refresh token and issues new JWT access and refresh tokens.\n\nThis operation secures session continuation without requiring the user to log in again, supporting a seamless authenticated experience.\n\nIt requires the user to provide a valid refresh token in the request body.\n\nThis endpoint complements the join and login operations for a full authentication token lifecycle.\n\nPOST /auth/student/refresh is responsible for renewing the user's JWT tokens.\n\nOnly authenticated users with valid refresh tokens can access this endpoint.","authorizationType":"refresh","description":"Refresh JWT access and refresh tokens for authenticated student users using a valid refresh token.\n\nThis operation supports seamless session continuation without re-entering credentials.\n\nRequires a valid refresh token in the request body.\n\nRelies on the study_planner_students table for user identity verification.\n\nComplements join and login endpoints for full token lifecycle management.","summary":"Refresh JWT tokens for authenticated student user.","parameters":[],"requestBody":{"description":"Valid refresh token payload for JWT renewal.","typeName":"IStudyPlannerStudent.IRefresh"},"responseBody":{"description":"New authorized tokens upon refresh.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"refresh","path":"/auth/student/refresh","method":"post"}]}],"document":{"operations":[{"specification":"This API operation allows an authenticated student user to register a new account. It handles user sign-up by creating a student record with a unique email and hashed password, storing creation and update timestamps, and ensuring email uniqueness as required by the underlying study_planner_students Prisma table. The API enforces input validation for email and password, securely hashes passwords, and issues JWT tokens upon successful registration to establish authenticated sessions. This supports the business requirement that students can create an account to manage their study activities.\n\nThis operation is public (no prior authentication required) to allow new student registrations.\n\nIt interacts directly with the study_planner_students table.\n\nThe response body provides an authorized token information under the type IStudyPlannerStudent.IAuthorized, conforming to the authentication response pattern.\n\nThis JWT token can be used along with other operations like login and refresh token flows.\n\nRelated operations are /auth/student/login and /auth/student/refresh for completing user authentication.\n\nPOST /auth/student/join should be called for user registration.","authorizationType":"join","description":"User registration (join) operation for student role. Creates a new student account with unique email and hashed password stored in study_planner_students table.\n\nThe system enforces email uniqueness and password security during registration. Upon successful registration, JWT access and refresh tokens are issued conforming to authentication flows.\n\nThis operation is public and does not require prior authentication.\n\nRelated endpoints /auth/student/login and /auth/student/refresh are used for subsequent user login and token refresh operations.\n\nThis process enables new users to begin using the study planner service by authenticating with their credentials.","summary":"Register a new student user account stored in study_planner_students table.","parameters":[],"requestBody":{"description":"Student registration credentials and profile data.","typeName":"IStudyPlannerStudent.IJoin"},"responseBody":{"description":"Authorized tokens and student info upon registration.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"join","path":"/auth/student/join","method":"post"},{"specification":"This API operation allows an authenticated student user to log in by validating their credentials against the stored records in study_planner_students table. It requires valid email and password inputs and authenticates the user by verifying the password hash.\n\nUpon successful authentication, the system issues JWT access and refresh tokens to enable secure session management.\n\nThe operation is public to allow user login.\n\nIt interacts with the study_planner_students table for credential verification and session token issuance.\n\nThe response body returns an object of type IStudyPlannerStudent.IAuthorized to represent the authenticated user and tokens.\n\nThis operation complements the join and refresh endpoints for a complete authentication flow.\n\nPOST /auth/student/login should be called for user authentication.","authorizationType":"login","description":"User login operation for student role. Validates email and password against stored credentials in study_planner_students table.\n\nIssues JWT tokens upon successful authentication for secure session management.\n\nThis operation is public and acts as the gateway to our study planner backend for stored users.\n\nRelated operations /auth/student/join and /auth/student/refresh complete the authentication lifecycle.\n\nUser credentials are never stored in plaintext and securely compared using password hashing methods.","summary":"Authenticate student user and issue JWT tokens.","parameters":[],"requestBody":{"description":"Student login credentials including email and password.","typeName":"IStudyPlannerStudent.ILogin"},"responseBody":{"description":"Authorized tokens and student info upon login.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"login","path":"/auth/student/login","method":"post"},{"specification":"This API operation enables an authenticated student user to refresh their access tokens using a valid refresh token. It interacts with the study_planner_students table to validate the refresh token and issues new JWT access and refresh tokens.\n\nThis operation secures session continuation without requiring the user to log in again, supporting a seamless authenticated experience.\n\nIt requires the user to provide a valid refresh token in the request body.\n\nThis endpoint complements the join and login operations for a full authentication token lifecycle.\n\nPOST /auth/student/refresh is responsible for renewing the user's JWT tokens.\n\nOnly authenticated users with valid refresh tokens can access this endpoint.","authorizationType":"refresh","description":"Refresh JWT access and refresh tokens for authenticated student users using a valid refresh token.\n\nThis operation supports seamless session continuation without re-entering credentials.\n\nRequires a valid refresh token in the request body.\n\nRelies on the study_planner_students table for user identity verification.\n\nComplements join and login endpoints for full token lifecycle management.","summary":"Refresh JWT tokens for authenticated student user.","parameters":[],"requestBody":{"description":"Valid refresh token payload for JWT renewal.","typeName":"IStudyPlannerStudent.IRefresh"},"responseBody":{"description":"New authorized tokens upon refresh.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"refresh","path":"/auth/student/refresh","method":"post"},{"specification":"This operation retrieves a paginated list of student user accounts from the study_planner_students table in the Prisma schema. It supports filtering and pagination, returning summary information to authorized users.","description":"Retrieve a filtered and paginated list of student users in the system. This allows administrators or authorized users to search and filter students by various criteria such as email, creation date, and soft deletion status.\n\nThe operation ensures sensitive information (e.g., password hashes) is excluded from the response. Proper authorization is required to access student data.\n\nThis operation corresponds to the study_planner_students database table which stores student authentication and profile details.","summary":"Search and retrieve paginated list of student users","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for student user filtering","typeName":"IStudyPlannerStudent.IRequest"},"responseBody":{"description":"Paginated list of student user summaries","typeName":"IPageIStudyPlannerStudent.ISummary"},"authorizationRoles":["student"],"path":"/studyPlanner/student/students","method":"patch","name":"index","authorizationRole":"student","authorizationType":null},{"specification":"This operation obtains detailed information for a specific student user identified by studentId from the study_planner_students table. It returns detailed user data excluding sensitive credentials.","description":"Retrieve detailed information about a student user by their unique ID. This operation returns all relevant user fields except sensitive password information.\n\nAccess is restricted to authenticated users to ensure privacy and security.\n\nThis operation enables viewing and management of individual student user data.","summary":"Get detailed student user information","parameters":[{"name":"studentId","description":"Unique identifier of the student user","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed student user information","typeName":"IStudyPlannerStudent"},"authorizationRoles":["student"],"path":"/studyPlanner/student/students/{studentId}","method":"get","name":"at","authorizationRole":"student","authorizationType":null},{"specification":"Update the information of an existing student user identified by studentId, excluding password changes which are handled separately for security. Only authorized authenticated students may update their own data.","description":"Update fields such as email or other allowed attributes for a student user identified by studentId. Password changes are excluded and require dedicated processes.\n\nThis operation maintains audit timestamps and does not allow modification of sensitive authentication hashes.\n\nOnly the authenticated student user may perform updates on their own account.","summary":"Update student user information","parameters":[{"name":"studentId","description":"Unique identifier of the student user","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Student user update data","typeName":"IStudyPlannerStudent.IUpdate"},"responseBody":{"description":"Updated detailed student user information","typeName":"IStudyPlannerStudent"},"authorizationRoles":["student"],"path":"/studyPlanner/student/students/{studentId}","method":"put","name":"update","authorizationRole":"student","authorizationType":null},{"specification":"Perform a soft deletion of the student user identified by studentId by setting the deleted_at timestamp in the study_planner_students table. Only the authenticated student user can delete their own account.","description":"Soft delete the student user account by setting the deleted_at field to the current timestamp, effectively marking the account as inactive while preserving data for audit.\n\nNo response body is returned upon successful deletion. Authorization ensures only the account owner can perform this operation.\n\nThis soft delete mechanics are in accordance with the Prisma schema soft deletion field guidelines.","summary":"Soft delete the student user account","parameters":[{"name":"studentId","description":"Unique identifier of the student user","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/students/{studentId}","method":"delete","name":"erase","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of study phases, allowing clients to search, filter, and sort the available study phases. It operates on the study_planner_study_phases table from the Prisma schema, which stores the distinct phases (preview, main learning, review) available in the study planner system. This endpoint supports complex queries with pagination, sorting by created_at, name, or code, and filtering by code or name, enabling clients to efficiently find phases relevant to their needs.","description":"Retrieve a filtered and paginated list of study phases from the study planner system. Each phase represents a distinct stage of study, such as preview, main learning, or review.\n\nThis operation is read-only and accessible publicly or to authenticated users according to authorization roles. It can be used to populate UI dropdowns or filters.\n\nThe study phases are immutable in terms of their core identity; however, this operation facilitates flexible retrieval for display, reporting, or selection purposes.\n\nSearch and sorting operations are based on indexed fields such as code and name.\n\nNo sensitive data is exposed through this endpoint, and it supports pagination to handle potentially large datasets.","summary":"Search and retrieve a filtered, paginated list of study phases","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering study phases","typeName":"IStudyPlannerStudyPhases.IRequest"},"responseBody":{"description":"Paginated list of study phase summaries matching search criteria","typeName":"IPageIStudyPlannerStudyPhases.ISummary"},"authorizationType":null,"authorizationRole":"student","path":"/studyPlanner/student/studyPhases","method":"patch","name":"index"},{"specification":"This operation retrieves detailed information about a specific study phase by its unique identifier. It operates on the study_planner_study_phases table from the Prisma schema, fetching all properties of a study phase including code, name, description, and timestamps.\n\nThe single study phase entity is fetched by its primary key UUID, ensuring precise and efficient access. This operation is typically used to display detailed phase information for editing or viewing purposes.\n\nAuthorization ensures only authenticated users or appropriate roles can access detailed phase data.\n\nIf the phase is not found, the endpoint will respond with a 404 error.","description":"Retrieve detailed information about a specific study phase identified by its ID.\n\nStudy phases represent the distinct phases of study such as preview, main learning, and review.\n\nThis operation requires the path parameter studyPhaseId as a UUID identifying the target phase.\n\nThe retrieved data includes code, name, optional description, and timestamps for creation and updates.\n\nOnly authenticated users can access this detailed view.\n\nErrors such as not found or invalid UUID result in appropriate HTTP error codes.","summary":"Retrieve detailed study phase information by ID","parameters":[{"name":"studyPhaseId","description":"Unique identifier of the target study phase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed study phase information","typeName":"IStudyPlannerStudyPhases"},"authorizationType":null,"authorizationRole":"student","path":"/studyPlanner/student/studyPhases/{studyPhaseId}","method":"get","name":"at"},{"specification":"This operation creates a new study phase record in the study_planner_study_phases table within the Prisma schema. The client must supply the phase's unique code, name, and an optional detailed description.\n\nThe created record includes timestamps for creation and updates automatically by the system.\n\nValidation ensures that the code is unique and the name is provided. This operation is typically restricted to admin users who manage study phase definitions.\n\nUpon successful creation, the newly created study phase data is returned.","description":"Create a new study phase with code, name, and optional description.\n\nStudy phases categorize study activities into preview, main learning, and review phases.\n\nThis operation allows authorized administrative users to add new study phases.\n\nInput validation ensures unique codes and required names.\n\nThe system generates creation and update timestamps.\n\nReturns the full details of the created phase record.","summary":"Create a new study phase","parameters":[],"requestBody":{"description":"Information required to create a new study phase","typeName":"IStudyPlannerStudyPhases.ICreate"},"responseBody":{"description":"Details of the created study phase","typeName":"IStudyPlannerStudyPhases"},"authorizationType":null,"authorizationRole":"admin","path":"/studyPlanner/student/studyPhases","method":"post","name":"create"},{"specification":"This operation updates an existing study phase record in the study_planner_study_phases table. The phase is identified by the UUID path parameter studyPhaseId. Clients can update the code, name or description.\n\nValidation rules enforce the uniqueness of the code, and the presence of a name.\n\nTimestamps are updated upon modification.\n\nOnly authorized administrative users can perform updates.\n\nThe operation returns the updated full study phase data.\n\nIf the target phase does not exist, a 404 error is returned.","description":"Update an existing study phase identified by its ID.\n\nAllows modification of code, name, and description.\n\nEnsures code uniqueness and name presence.\n\nAuthorized admin users only.\n\nThe updated record's full details are returned.\n\nProper error handling for non-existent phases or validation errors is implemented.","summary":"Update study phase information by ID","parameters":[{"name":"studyPhaseId","description":"Unique identifier of the study phase to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update study phase details","typeName":"IStudyPlannerStudyPhases.IUpdate"},"responseBody":{"description":"Updated study phase information","typeName":"IStudyPlannerStudyPhases"},"authorizationType":null,"authorizationRole":"admin","path":"/studyPlanner/student/studyPhases/{studyPhaseId}","method":"put","name":"update"},{"specification":"This operation permanently deletes a specified study phase from the study_planner_study_phases table, identified by its UUID. Study phases categorize study tasks into preview, main learning, and review to structure student learning progress.","description":"This endpoint allows admins to permanently erase a study phase record identified by the path parameter `studyPhaseId`. Deleting a study phase removes it completely from the system, which impacts categorization of study tasks associated with that phase.\n\nOnly users with the \"student\" role are authorized to perform this operation as per system policy.\n\nThe operation requires the UUID of the target study phase and performs a hard delete.\n\nNo response body is returned on successful deletion.\n\nReturns 404 if study phase not found, and 401 if unauthorized access.","summary":"Delete a specific study phase permanently","parameters":[{"name":"studyPhaseId","description":"Unique identifier of the target study phase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/studyPhases/{studyPhaseId}","method":"delete"},{"specification":"Retrieve paginated list of study subject categories from the study_planner_subject_categories table with optional filters such as code and name. Supports sorting and pagination to manage category data efficiently.","description":"Retrieve a paginated and filtered list of subject categories that classify study tasks under various subjects including English grammar, vocabulary, and speaking. The endpoint supports filtering by name or code, sorting, and pagination to efficiently browse categories.\n\nOnly authenticated users having the \"student\" role are authorized for querying this data.\n\nThe response returns summary category information suitable for list display.","summary":"Search and retrieve a paginated list of study subject categories","parameters":[],"requestBody":{"description":"Filtering, pagination, and sorting parameters for subject category search","typeName":"IStudyPlannerSubjectCategories.IRequest"},"responseBody":{"description":"Paginated list of subject category summary information matching search criteria","typeName":"IPageIStudyPlannerSubjectCategories.ISummary"},"authorizationType":null,"authorizationRole":"student","name":"index","path":"/studyPlanner/student/subjectCategories","method":"patch"},{"specification":"Retrieve detailed information of a single subject category by its UUID from the study_planner_subject_categories table. Subject categories organize study tasks under various educational subjects, including English language topics like grammar and vocabulary.","description":"This endpoint returns full details of a specific subject category identified by path parameter `subjectCategoryId`. The category includes code, name, description, and timestamps.\n\nUsers with the \"student\" role can access this endpoint.\n\nIf the requested category does not exist, a 404 error is returned.\n\nProper authorization is enforced to secure category data.","summary":"Retrieve detailed information of a specific subject category","parameters":[{"name":"subjectCategoryId","description":"Unique identifier of the target subject category","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed subject category information","typeName":"IStudyPlannerSubjectCategories"},"authorizationType":null,"authorizationRole":"student","name":"at","path":"/studyPlanner/student/subjectCategories/{subjectCategoryId}","method":"get"},{"specification":"Create a new subject category record in the study_planner_subject_categories table with a unique code, human-readable name, and optional description. This categorizes study tasks under defined subjects, enabling improved organization and filtering.","description":"This endpoint allows a student to create a new study subject category with required fields code and name, and an optional description.\n\nThe new category is returned on successful creation.\n\nAuthorization requires the user to have the \"student\" role.\n\nInput must comply with the IStudyPlannerSubjectCategories.ICreate schema.","summary":"Create a new study subject category","parameters":[],"requestBody":{"description":"Information required for subject category creation","typeName":"IStudyPlannerSubjectCategories.ICreate"},"responseBody":{"description":"Newly created subject category details","typeName":"IStudyPlannerSubjectCategories"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/subjectCategories","method":"post"},{"specification":"This operation updates an existing subject category identified by subjectCategoryId. It operates on the study_planner_subject_categories table from the Prisma schema. Users with the student role can modify the code, name, and description of a subject category. The operation requires validation that the subjectCategoryId exists and the user has appropriate authorization to update it. The update supports partial modifications with provided fields being updated accordingly. It enforces unique constraints on the code and performs validation of text lengths and formats as per the schema. This operation is intended for authorized student users managing study subject categorizations.","description":"Update the information of a specific subject category based on its unique identifier. This includes changing the unique code, the human-readable name, and optionally the description of the subject category.\n\nOnly authenticated student users can perform this update to maintain data integrity and consistency. This operation works directly with the study_planner_subject_categories table.\n\nThe system validates uniqueness of the code to avoid conflicts and ensures text fields conform to expected lengths.\n\nThis operation integrates with other APIs that list and retrieve subject categories to provide a full management experience.\n\nIf the specified subjectCategoryId does not exist, the system returns an error.\n\nNo response body is included as the operation focuses on update confirmation.","summary":"Update a subject category by ID","parameters":[{"name":"subjectCategoryId","in":"path","description":"Unique identifier of the subject category to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Subject category update data","typeName":"IStudyPlannerSubjectCategories.IUpdate"},"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/subjectCategories/{subjectCategoryId}","method":"put","name":"update","authorizationRole":"student","authorizationType":null},{"specification":"This operation deletes a subject category record from the study_planner_subject_categories database table. The target category is identified uniquely by the provided subjectCategoryId path parameter. It permanently removes the record from the database without soft deletion. Only authenticated student users can invoke this operation since deletion affects critical categorized data. Relationships with study tasks and analytics referencing the subject category must be handled by cascading or integrity checks as per database rules. Once deleted, all references to this category become invalid.\n","description":"Permanently remove a subject category by its unique identifier from the system.\n\nThis operation deletes the record irreversibly and ensures all dependent data references are managed according to database cascading rules.\n\nOnly authenticated student users are authorized to execute this deletion due to the impact on categorized study data.\n\nAttempting to delete a non-existing category results in an error response.\n\nThere is no response body as the action confirms with standard HTTP status code.\n\nUse this with caution to avoid unintended data loss.","summary":"Delete a subject category by ID","parameters":[{"name":"subjectCategoryId","in":"path","description":"Unique identifier of the subject category to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/subjectCategories/{subjectCategoryId}","method":"delete","name":"erase","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves and filters study tasks created by the authenticated student user. It allows complex search requests supporting pagination, filtering by study phase, subject category, title, and dates, and sorting options. The search operates on the study_planner_study_tasks table linking tasks with their phases, categories, and ownership. Results are paginated with summary data for efficient listing. Authorization restricts results to the current user only.\n","description":"Search and retrieve a filtered and paginated list of study tasks for the authenticated student.\n\nThe operation supports filtering by study phase ID, subject category ID, partial title matching, creation date ranges, sorting by several fields, and pagination.\n\nSecurity enforces that returned tasks belong only to the authenticated student user.\n\nThis operation integrates with create, update, and delete APIs to manage study tasks comprehensively.\n\nResults are returned as task summary information optimized for list rendering.\n","summary":"Search and retrieve study tasks of the authenticated user","parameters":[],"requestBody":{"description":"Search filters and pagination parameters for study tasks","typeName":"IStudyPlannerStudyTasks.IRequest"},"responseBody":{"description":"Paginated list of study task summaries matching search criteria","typeName":"IPageIStudyPlannerStudyTasks.ISummary"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks","method":"patch","name":"index","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves detailed information of a single study task identified by studyTaskId. The data includes task metadata, associated study phase and subject category, attachments, memos, and progress states. It fetches data from the study_planner_study_tasks table and related tables for comprehensive task detail viewing.\n\nAuthorization requires the requester to be the owner of the study task to protect privacy and data integrity. If the task does not exist or does not belong to the user, an error is returned.\n","description":"Retrieve detailed information about a specific study task identified by its ID.\n\nIncludes the task's title, description, associated study phase and subject category details, attachments like images or PDFs, related memos, and the status of study progress phases.\n\nSecurity restricts access to the owner student to prevent unauthorized data exposure.\n\nThis operation is designed to support detailed task review and editing workflows.\n","summary":"Get detailed study task information by ID","parameters":[{"name":"studyTaskId","in":"path","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Study task detailed information","typeName":"IStudyPlannerStudyTasks"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"get","name":"at","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates an existing study task identified by its unique UUID. It allows authenticated students to modify task attributes such as title, description, associated study phase, and subject category within the study planner system. The endpoint interacts directly with the study_planner_study_tasks table and enforces authorization to ensure only owners can update their tasks. Validation rules require that the task title is provided and categories are valid. Upon successful update, the updated study task entity is returned.","description":"This API endpoint is designed for authenticated student users to update their individual study tasks. Each study task is linked to a student, a specific study phase (preview, main learning, review), and a subject category (e.g., English grammar). Authorized users can modify attributes including title and description.\n\nSecurity considerations ensure only the owner of the task (identified by student_id) may successfully update the resource. Invalid or incomplete data will result in a validation error.\n\nThe operation closely interacts with the study_planner_study_tasks table defined in the Prisma schema, which stores the core study task entities including relationships to students, study phases, and subject categories.\n\nValidation rules enforce title presence and correct foreign key association with existing phases and categories. Upon success, the updated task record is returned.\n\nThis operation requires the studyTaskId path parameter that corresponds to the UUID of the target study task to update.\n\nErrors include 400 for validation failure, 403 for unauthorized access, and 404 if the task is not found.","summary":"Update an existing study task by ID","parameters":[{"name":"studyTaskId","description":"UUID of target study task to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for updating the study task","typeName":"IStudyPlannerStudyTask.IUpdate"},"responseBody":{"description":"Updated study task details","typeName":"IStudyPlannerStudyTask"},"authorizationType":null,"authorizationRole":"student","name":"update","path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"put"},{"specification":"This operation permanently deletes a study task identified by its UUID from the study planner system's database, including all related attachments, memos, alarms, and progress records. It is exclusive to authenticated student users who own the task. This deletion removes the record entirely without archival or soft deletion, as the schema supports soft deletion but this endpoint enforces permanent removal.\n\nThe underlying table is study_planner_study_tasks, which is the core entity representing a study task. This delete endpoint ensures cascading deletion of all associated relations to maintain database integrity.\n\nPath parameter studyTaskId identifies the specific study task to remove. Successful deletion yields no content.\n\nSecurity enforcement verifies user ownership before deletion to prevent unauthorized data removal.","description":"Permanently remove a study task and all its related data from the system. This hard delete operation is accessible only to authenticated student users owning the task.\n\nThe operation targets the study_planner_study_tasks table as the main entity in the Prisma schema, ensuring cleanup of all linked attachments, memos, alarms, and progress entries via cascading deletes.\n\nA valid UUID is required as the path parameter to identify the task to delete. The operation returns no content upon success.\n\nErrors include 403 for unauthorized access and 404 if the task is not found.\n\nNo request body is required since it's a delete operation.","summary":"Delete a study task by ID","parameters":[{"name":"studyTaskId","description":"UUID of study task to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"delete"},{"specification":"This operation updates the progress state of a study task's learning phases, allowing authenticated students to mark phases as completed with timestamps. It modifies the study_planner_study_task_progress table to record completion timestamps per phase for a given task.\n\nThe endpoint supports updating completion status, creating or modifying progress entries related to the specified study task and study phase.\n\nPath parameter studyTaskId identifies the target study task for which progress is updated.\n\nA request body containing progress data (completion timestamps per phase) must be provided.\n\nErrors such as 400, 403, and 404 handle validation failure, unauthorized access, or missing records respectively.\n\nOn success, returns detailed progress information related to the study task.","description":"Authenticated students can mark phase completions for their study tasks using this API. It stores or updates completion timestamps per phase for the specified task.\n\nThis operation interacts with the study_planner_study_task_progress entity representing phase-wise progress. It ensures only the owner can update progress.\n\nErrors include unauthorized attempts or invalid data.","summary":"Update progress of a study task","parameters":[{"name":"studyTaskId","description":"UUID of the study task to update progress","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Progress data for study phases","typeName":"IStudyPlannerStudyTaskProgress.IUpdate"},"responseBody":{"description":"Updated progress details for the study task","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationType":null,"authorizationRole":"student","name":"updateProgress","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress","method":"patch"},{"specification":"This operation creates a new study task for the authenticated student user, allowing them to specify its title, optional description, study phase association (such as preview, main learning, or review), and category (including defined subject categories). The endpoint manipulates the study_planner_study_tasks table to insert a new task record.\n\nThe API requires validation of all input parameters to ensure completeness and correctness, such as a non-empty title and valid foreign keys for study phase and category.\n\nUpon successful creation, the newly created study task entity is returned in the response.\n\nThis endpoint requires the student to provide creation details in the request body.","description":"Allows an authenticated student user to create a new study task within the study planner system. The task must be linked to a valid study phase and subject category, with a mandatory title and optional description.\n\nThe system validates inputs rigorously to prevent invalid tasks.\n\nThis endpoint targets the study_planner_study_tasks table, a principal entity managing study tasks, and returns the created record.\n\nErrors include 400 for invalid data and 401 for unauthorized access.\n\nNo path parameter is necessary as the task is newly created.","summary":"Create a new study task","parameters":[],"requestBody":{"description":"Information needed to create a study task","typeName":"IStudyPlannerStudyTask.ICreate"},"responseBody":{"description":"Details of the newly created study task","typeName":"IStudyPlannerStudyTask"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"post"},{"specification":"This operation retrieves a specific study task progress record by its unique identifier. It corresponds to the study_planner_study_task_progress table in the Prisma schema, which tracks progress completion timestamps for study phases within a study task. This GET endpoint enables authenticated users (role: student) to fetch detailed progress status for a particular phase of a study task.","description":"Retrieve detailed progress information for a specific study task phase by progress ID.\n\nThis operation allows an authenticated student to access the completion state and timestamps of a study phase associated with a study task. It references the study_planner_study_task_progress table which stores the completion timestamp (`completed_at`), creation and update times for tracking progress.\n\nSecurity considerations include ensuring the requester is authenticated and authorized to view this progress record.\n\nThis operation works in conjunction with other study task and progress operations, providing fine-grained progress details.\n\nErrors will be returned if the specified progress ID does not exist or access is unauthorized.","summary":"Retrieve study task progress details by progress ID","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}},{"name":"progressId","description":"Unique identifier for the target progress record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed study task progress information","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationRoles":["student"],"name":"at","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress/{progressId}","method":"get","authorizationRole":"student","authorizationType":null},{"specification":"This operation creates a new progress entry for a study phase within a specific study task. The study_planner_study_task_progress table tracks per-phase completion timestamps, and this POST endpoint enables authenticated users (role: student) to record progress updates. It requires specifying the studyTaskId in the path to associate the progress to the correct task.","description":"Create a new progress record for a specific study task and study phase.\n\nAuthenticated students can record the completion timestamp for a study phase linked to a study task. The request body must provide all required data fields defined by the study_planner_study_task_progress entity except auto-generated IDs and timestamps.\n\nThe system validates the study phase relevance and ensures duplicate progress entries for the same study phase and task do not occur.\n\nUpon successful creation, the newly created progress record is returned.\n\nThis is part of the study lifecycle management enabling detailed tracking of each study phase progress.","summary":"Create study task progress record","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Creation info of study task progress","typeName":"IStudyPlannerStudyTaskProgress.ICreate"},"responseBody":{"description":"Created study task progress record","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationRoles":["student"],"name":"create","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress","method":"post","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates an existing progress record of a study phase for a study task in the study_planner_study_task_progress table. It supports updating completion timestamps and other modifiable properties. Requires authenticated users (role: student) to provide the studyTaskId in the path and the progressId of the progress to update.","description":"Update an existing study task progress record.\n\nAuthenticated student users can modify completion timestamps or other allowed fields of a progress entry associated with a study phase and study task.\n\nThe system validates the existence of the progress record and permissions.\n\nUpon success, the updated record is returned.\n\nThis endpoint supports accurate study phase progress management within the study lifecycle.","summary":"Update study task progress record","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}},{"name":"progressId","description":"Unique identifier for the target progress record","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update information for study task progress","typeName":"IStudyPlannerStudyTaskProgress.IUpdate"},"responseBody":{"description":"Updated study task progress record","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationRoles":["student"],"name":"update","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress/{progressId}","method":"put","authorizationRole":"student","authorizationType":null},{"specification":"This operation deletes a specific progress record for a study phase within a study task. It corresponds to the study_planner_study_task_progress table deletion. This is a hard delete operation as the schema has no soft delete field for this table. Authorization checks ensure only owning users can delete their progress entries.","description":"Permanently delete a study task progress record.\n\nAuthenticated students may remove progress entries for study phases attached to their study tasks. This operation completely removes the record from the database and cannot be undone.\n\nAppropriate authorization is enforced to prevent unauthorized deletion.\n\nThis endpoint is useful for correcting or resetting study phase progress data.","summary":"Delete study task progress record","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}},{"name":"progressId","description":"Unique identifier for the target progress record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"name":"erase","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress/{progressId}","method":"delete","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves the list of attachment files linked to a specific study task in the Study Planner system. It corresponds to the study_planner_attachments table in the Prisma schema, which stores metadata about attachment files such as images or PDFs associated with study tasks. This retrieval supports user interface features displaying all attachments for a given study task, enabling students to view attached study materials. The operation requires the studyTaskId path parameter representing the unique identifier of the study task whose attachments are fetched. The response body returns an array of attachment summaries with essential fields.","description":"Retrieve all attachment files associated with the specified study task. The attachments include images and PDF files linked as study materials.\n\nThis operation requires authentication as only the owner student can access their study task attachments. It uses the studyTaskId path parameter to identify the target study task and returns the relevant attachment data linked by foreign keys.\n\nThe response contains attachment metadata such as file type and file URL necessary to display or download the contents. Access control and validation ensure that users cannot retrieve attachments for others' study tasks.\n\nRelated operations include creating new attachments for a study task or retrieving an individual attachment by ID.\n\nErrors may occur if the studyTaskId does not exist or if access is unauthorized, resulting in 404 Not Found or 403 Forbidden responses respectively.","summary":"List all attachments for a study task","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"List of study task attachment summaries","typeName":"IPageIStudyPlannerAttachment.ISummary"},"authorizationRoles":["student"],"name":"index","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments","method":"patch","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves detailed metadata of a specific attachment file associated with a study task in the Study Planner system. It uses the studyTaskId and attachmentId path parameters, which uniquely identify the study task and attachment respectively. The Prisma schema's study_planner_attachments table contains attachment information including file type and file URL. This retrieval is essential for displaying or downloading the exact attached file.\n\nOnly authorized student users who own the associated study task can access the attachment. Proper authorization and validation ensure security.\n\nUpon success, the response includes the full attachment data as per the IStudyPlannerAttachment DTO.","description":"Retrieve detailed information of a specific attachment by its ID for a given study task.\n\nThis endpoint requires authentication and authorization ensuring the requesting user owns the study task.\n\nThe response provides metadata about the attachment such as file type and URL needed for rendering or download.\n\nErrors include 404 if attachment or study task is not found and 403 if user lacks permission.","summary":"Retrieve a specific attachment by ID","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"attachmentId","description":"Unique identifier of the target attachment","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified attachment","typeName":"IStudyPlannerAttachment"},"authorizationRoles":["student"],"name":"at","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments/{attachmentId}","method":"get","authorizationRole":"student","authorizationType":null},{"specification":"This operation creates a new attachment for a specified study task in the Study Planner system. The attachment may be an image (JPEG, PNG) or PDF file linked as study material. The request body includes file metadata such as file type (e.g., image/jpeg, application/pdf) and a URI file_url to identify the stored file.\n\nThe Prisma schema's study_planner_attachments table records these attachments and associates them with the study task via study_task_id.\n\nAuthorization requires the student user to own the study task to add attachments. The server validates file types and size limits as per business rules (max 10MB, allowed types jpeg, png, pdf).\n\nThe response returns the created attachment's detailed data.","description":"Create a new attachment entry linked to a study task. The client provides metadata about the uploaded file including type and storage URL.\n\nAuthentication and ownership validation are required to ensure only the owning student can add attachments to their study tasks.\n\nValidation is performed to ensure file type and size constraints are met.\n\nErrors return appropriate status codes for invalid input or unauthorized access.","summary":"Add a new attachment to a study task","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attachment creation data including file type and file URL","typeName":"IStudyPlannerAttachment.ICreate"},"responseBody":{"description":"Created attachment detailed information","typeName":"IStudyPlannerAttachment"},"authorizationRoles":["student"],"name":"create","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments","method":"post","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates an existing attachment linked to a specific study task in the Study Planner system. The request contains updated metadata such as file type or file URL. The studyTaskId and attachmentId path parameters identify the target study task and attachment.\n\nThis operation enforces that only the owning student can modify attachments via authorization and ownership checks. It validates the updated fields against allowed file types and constraints.\n\nOn success, returns the updated attachment data. Errors include 404 Not Found for invalid IDs and 403 Forbidden for unauthorized access.","description":"Update metadata of an existing attachment linked to a study task.\n\nThe client can modify properties such as file type and file URL.\n\nAuthorization and ownership verification ensure only the user owning the study task may update attachments.\n\nReturns updated attachment information on success. Validation errors or unauthorized access lead to appropriate error responses.","summary":"Modify an attachment of a study task","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"attachmentId","description":"Unique identifier of the target attachment","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attachment update data including file type and file URL","typeName":"IStudyPlannerAttachment.IUpdate"},"responseBody":{"description":"Updated attachment detailed information","typeName":"IStudyPlannerAttachment"},"authorizationRoles":["student"],"name":"update","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments/{attachmentId}","method":"put","authorizationRole":"student","authorizationType":null},{"specification":"This operation deletes a specific attachment file linked to a user's study task in the StudyPlanner system. It targets the 'study_planner_attachments' table in the Prisma schema responsible for storing metadata about attachment files such as images and PDFs linked to study tasks. The operation requires identifiers for both the study task and the specific attachment file to ensure proper ownership and resource targeting. When executed, the specified attachment record is permanently removed from the database along with its associated metadata. Security considerations mandate that only the authenticated student owner of the study task can perform this deletion, preventing unauthorized removal of attachments. The operation does not require a request body and does not return any content upon success.","description":"This operation permanently deletes an attachment file associated with a study task owned by the authenticated student user. The attachment represents images or PDFs linked to the task for study-related content management.\n\nThe deletion process fully removes the record from the 'study_planner_attachments' table, including all metadata such as file type and URL. Users must be authorized to act only on their own attachments, ensuring privacy and security.\n\nThe API requires the study task's unique ID and the attachment's unique ID to identify and target the resource precisely. Errors include authorization failure if the user does not own the task, or resource not found if no matching attachment exists. No request body is necessary as all identification comes from path parameters.\n\nUpon success, the system responds with no content, indicating the attachment has been deleted completely and cannot be recovered.","summary":"Delete a specific attachment file linked to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"attachmentId","in":"path","description":"UUID of the target attachment file to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments/{attachmentId}","method":"delete","name":"eraseAttachment","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves all memos linked to a specific study task in the StudyPlanner system. It operates on the 'study_planner_memos' table which stores textual notes associated with study tasks. The memos provide additional contextual information or notes related to the user's learning activities. The operation requires the ID of the study task to fetch all related memos. It supports secure retrieval by ensuring only the authenticated owner can obtain memos of their own tasks. Returned data includes an array of memo entities with memo text and timestamps for creation and updates.","description":"Retrieve all memo notes associated with a specific study task owned by the authenticated student. Memos provide textual notes supporting study activities.\n\nThis operation queries the 'study_planner_memos' table to return all memos linked to the specified study task.\n\nSecurity controls ensure only the owner of the study task can retrieve its memos. No request body is required as the input is solely the study task ID in the URL path.\n\nThe response includes an array of memo objects with memo text, creation, and update timestamps, enabling clients to display or edit notes.\n\nErrors include unauthorized access if the user does not own the task, or not found if the task does not exist.","summary":"Retrieve memos linked to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Array of memo objects associated with the study task","typeName":"IStudyPlannerStudyPlannerMemoArray"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos","method":"patch","name":"indexMemos","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves a specific memo associated with a given study task in the StudyPlanner system. It uses the 'study_planner_memos' table from the Prisma schema, which stores memo texts providing notes linked to study tasks. The operation requires identifiers for both the study task and the memo. It ensures secure access by allowing only the authenticated owner of the study task to fetch memo details. The returned object contains the memo text along with creation and update timestamps for client display or editing purposes.","description":"Retrieve a single memo note identified by 'memoId' that belongs to the specified study task for the authenticated student user.\n\nThis operation queries the 'study_planner_memos' table to fetch the particular memo entity linked to the study task.\n\nSecurity ensures that only the task owner can access the memo details.\n\nThe response contains memo text, creation date, and last update date.\n\nErrors may be returned if the memo or study task does not exist or the user lacks authorization.","summary":"Retrieve details of a specific memo attached to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"memoId","in":"path","description":"UUID of the memo to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Memo object retrieved","typeName":"IStudyPlannerStudyPlannerMemo"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos/{memoId}","method":"get","name":"atMemo","authorizationRole":"student","authorizationType":null},{"specification":"This operation creates a new memo note for a specific study task in the StudyPlanner system. It interacts with the 'study_planner_memos' table holding textual memos linked to study tasks. The operation requires the ID of the study task to associate the new memo and a request body containing the memo text. It enforces security by allowing only the authenticated owner of the study task to add memos. Upon successful creation, the new memo object including creation and update timestamps is returned for client usage.","description":"Create a new memo note associated with the specified study task owned by the authenticated student user.\n\nThis operation adds a record to the 'study_planner_memos' table linking text notes to the study task to support user note-taking.\n\nAuthentication and authorization ensure only the owner can create memos for their task.\n\nThe request body must contain the memo text content.\n\nThe response returns the created memo object with its timestamps.\n\nErrors include validation failures if memo text is invalid or missing.\n\nThis operation helps users enrich their study tasks with additional textual information.","summary":"Create a memo note linked to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Memo creation data","typeName":"IStudyPlannerStudyPlannerMemoICreate"},"responseBody":{"description":"Created memo object","typeName":"IStudyPlannerStudyPlannerMemo"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos","method":"post","name":"createMemo","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates a specific memo associated with a particular study task in the StudyPlanner backend database. It modifies the memo text content and updates timestamps accordingly. It operates on the 'study_planner_memos' table in the database schema. The operation requires the IDs of the parent study task and the memo to identify the target memo record precisely. It checks that the memo belongs to the specified study task. Typical validation includes verifying memo_text length and ownership. Because memo management is user-critical, authentication is required. No request body returns are expected other than the updated memo.","description":"This API operation allows an authenticated student user to update the content of an existing memo linked to one of their study tasks.\n\nThe memo is uniquely identified by both the study task ID and memo ID provided in the request path parameters.\n\nSecurity considerations require that only the owning student can update the memo associated with their study task.\n\nThe operation updates the 'memo_text' field and the 'updated_at' timestamp in the 'study_planner_memos' database table.\n\nValidation includes ensuring the memo_text is a non-empty string that meets length constraints.\n\nErrors include 401 Unauthorized if the user is not authenticated or not owner, 404 Not Found if memo or study task do not exist, and 400 Bad Request if validation fails.\n\nSuccessful response returns the updated memo entity as detailed in the response body.","summary":"Update a memo entry of a study task in the StudyPlanner database","parameters":[{"name":"studyTaskId","description":"Unique identifier of the parent study task","schema":{"type":"string","format":"uuid"}},{"name":"memoId","description":"Unique identifier of the memo to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Memo update payload containing new memo text","typeName":"IStudyPlannerStudyPlannerMemos.IUpdate"},"responseBody":{"description":"Updated study task memo entity","typeName":"IStudyPlannerStudyPlannerMemos"},"authorizationType":null,"authorizationRole":"student","name":"updateMemo","path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos/{memoId}","method":"put"},{"specification":"This operation deletes a specific memo associated with a study task in the StudyPlanner system. It removes the memo entirely from the 'study_planner_memos' table based on the memo ID and parent study task ID. This is a hard delete operation as the schema does not have soft delete for memos. Access is restricted to authenticated student users owning the study task. No request body is needed. Successful deletion returns no content.","description":"This API endpoint enables authenticated student users to completely remove a memo attached to their study task.\n\nThe memo to delete is specified via the memo ID and the parent study task ID path parameters ensuring exact identification.\n\nSecurity checks ensure only the owner can delete their memo.\n\nBeing a hard delete, the memo record is removed fully from the database.\n\nIf the memo or task does not exist or does not belong to the user, appropriate errors are returned.\n\nSuccessful response is empty with HTTP 204 No Content status.\n\nThis operation is part of the resource management workflow enabling users to clean up their study task notes.","summary":"Delete a memo entry from a study task in the StudyPlanner database","parameters":[{"name":"studyTaskId","description":"Unique identifier of the parent study task","schema":{"type":"string","format":"uuid"}},{"name":"memoId","description":"Unique identifier of the memo to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"eraseMemo","path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos/{memoId}","method":"delete"},{"specification":"This operation retrieves a paginated and filtered list of task alarms set by authenticated student users in the StudyPlanner backend. These alarms are linked to study tasks and trigger notifications at scheduled times. The result supports searching by student id, task id, alarm time, and pagination/sorting. It operates on the 'study_planner_task_alarms' table. Authorization is required to view a user's own alarms. The operation returns a paginated list of alarms with summary data.","description":"Retrieve a paginated list of task alarms associated with study tasks for the authenticated student.\n\nThis search API supports filtering by various criteria such as alarm title, time range, and associated study task.\n\nSecurity restrictions ensure a user can only view their own alarms.\n\nThe response contains a paginated list of alarm summaries including alarm ID, title, alarm time, and associated task ID.\n\nErrors include 401 Unauthorized for unauthenticated access.\n\nThis operation supports management of alarms set for study reminders within the StudyPlanner system.","summary":"Search and retrieve a paginated list of task alarms","parameters":[],"requestBody":{"description":"Filtering and pagination parameters for task alarms","typeName":"IStudyPlannerStudyPlannerTaskAlarms.IRequest"},"responseBody":{"description":"Paginated list of task alarm summaries","typeName":"IPageIStudyPlannerStudyPlannerTaskAlarms.ISummary"},"authorizationType":null,"authorizationRole":"student","name":"searchTaskAlarms","path":"/studyPlanner/student/taskAlarms","method":"patch"},{"specification":"This operation retrieves detailed information of a specific task alarm for an authenticated student user in the StudyPlanner backend. The alarm is identified by its unique ID. It returns full alarm details including associated study task and scheduling information. Security ensures only the owner can retrieve this alarm. The operation operates on the 'study_planner_task_alarms' table in the Prisma schema.","description":"Get detailed information about a single task alarm associated with the authenticated user's study tasks.\n\nThis operation requires the path parameter to specify the exact alarm ID.\n\nSecurity checks ensure only the owner student can access their task alarm.\n\nSuccessful requests return the complete task alarm record including timestamps, title, alarm time, and associated study task.\n\nErrors include 401 Unauthorized if not logged in, 404 Not Found if alarm does not exist or does not belong to the user.\n\nThis operation supports alarm management features in the StudyPlanner system.","summary":"Retrieve detailed information of a specific task alarm","parameters":[{"name":"taskAlarmId","description":"Unique identifier of the task alarm to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed task alarm information","typeName":"IStudyPlannerStudyPlannerTaskAlarms"},"authorizationType":null,"authorizationRole":"student","name":"atTaskAlarm","path":"/studyPlanner/student/taskAlarms/{taskAlarmId}","method":"get"},{"specification":"This operation creates a new study task alarm for an authenticated student user, associating the alarm with a specific study task. It stores alarm details such as title and scheduled alarm time. This operation allows students to set reminders for their study tasks to receive PWA notifications at designated times. The underlying database table is study_planner_task_alarms, which manages user-specific alarms linked to study tasks. Validation ensures the student owns the task and that alarm_time is a valid future timestamp. Duplicate alarms with identical student_id, study_task_id, and alarm_time are prevented by a uniqueness constraint.","description":"Create a new alarm for a study task in the study planner system.\n\nThis operation enables authenticated student users to set alarms for their individual study tasks. The alarm includes a user-friendly title and a scheduled timestamp when the PWA notification should trigger.\n\nSecurity considerations ensure only the owning student can create alarms for their tasks. Validation on the alarm time and uniqueness constraints prevent duplicate alarms.\n\nThis API interfaces with the study_planner_task_alarms table, which holds individual alarms referencing the study task and student.\n\nExpected behavior involves storing the alarm record and returning the created alarm details upon success.\n\nIf the user is unauthorized or provides invalid data, appropriate errors are returned.","summary":"Create a new study task alarm","parameters":[],"requestBody":{"description":"Information required to create a new study task alarm","typeName":"IStudyPlannerTaskAlarm.ICreate"},"responseBody":{"description":"The created study task alarm information","typeName":"IStudyPlannerTaskAlarm"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/taskAlarms","method":"post"},{"specification":"Update an existing study task alarm belonging to an authenticated student user. Allows modification of the alarm title and the scheduled alarm time. The operation ensures ownership verification, valid alarm time, and respects the uniqueness constraint to prevent conflicts with existing alarms. It operates on the study_planner_task_alarms table which stores user-specific alarms linked to study tasks.","description":"Update the properties of an existing study task alarm.\n\nThis operation allows a student to modify their previously set alarm's title and trigger time. It validates ownership, ensuring the alarm belongs to the requesting student, and checks for valid input including future alarm times.\n\nThe operation guarantees no duplication with other alarms having the same student, study task, and alarm time.\n\nThe underlying data resides in the study_planner_task_alarms table with all relevant constraints.\n\nSuccessful updates return the updated alarm details; errors such as unauthorized access or invalid input return appropriate status codes.","summary":"Update an existing study task alarm","parameters":[{"name":"taskAlarmId","description":"Unique identifier of the target task alarm","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the study task alarm","typeName":"IStudyPlannerTaskAlarm.IUpdate"},"responseBody":{"description":"The updated study task alarm information","typeName":"IStudyPlannerTaskAlarm"},"authorizationType":null,"authorizationRole":"student","name":"update","path":"/studyPlanner/student/taskAlarms/{taskAlarmId}","method":"put"},{"specification":"This operation deletes a study task alarm permanently for an authenticated student user. It verifies that the alarm identified by the taskAlarmId belongs to the requesting student. The underlying storage is the study_planner_task_alarms table which includes a soft delete field, but this operation performs a hard delete removing the record entirely from the database. The process ensures integrity by cascading deletions appropriately and confirming authorization before deletion.","description":"Delete an existing study task alarm.\n\nThis operation permanently removes a specified alarm associated with a student's study task from the system. Prior authorization checks ensure that only the owner can delete their alarms to maintain data security.\n\nThe deletion is definitive; data cannot be recovered once erased.\n\nData integrity is maintained by cascading or adjusting any dependent data relating to the deleted alarm.\n\nErrors for unauthorized access or missing records are handled with proper error codes.","summary":"Delete a study task alarm","parameters":[{"name":"taskAlarmId","description":"Unique identifier of the target task alarm","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/taskAlarms/{taskAlarmId}","method":"delete"},{"specification":"Retrieve a paginated, filtered list of general reminders for the authenticated student user. These reminders are not tied to specific study tasks but serve as general notifications. The operation interfaces with the study_planner_general_reminders table, supporting search and filtering capabilities by title, due time, and active status. Pagination and sorting options allow clients to receive manageable chunks of reminders. The response includes summary information optimized for list display.","description":"Get a paginated list of general reminders.\n\nThis operation returns general reminder records created by the authenticated student. These reminders are independent of study tasks and serve as personal notifications or to-do items.\n\nFiltering by title, reminder status, and due time range is supported to allow users to narrow down results.\n\nPagination parameters control data volume and sorting by due time or creation date.\n\nSecurity ensures only the authenticated user's reminders are returned.\n\nData is fetched from the study_planner_general_reminders table.\n\nInvalid input leads to error responses with validation details.","summary":"Retrieve a filtered, paginated list of general reminders","parameters":[],"requestBody":{"description":"Filtering, search, and pagination parameters for general reminders","typeName":"IStudyPlannerGeneralReminder.IRequest"},"responseBody":{"description":"Paginated list of general reminders","typeName":"IPageIStudyPlannerGeneralReminder.ISummary"},"authorizationType":null,"authorizationRole":"student","name":"index","path":"/studyPlanner/student/generalReminders","method":"patch"},{"specification":"This operation retrieves detailed information of a general reminder by its unique identifier (generalReminderId) from the study_planner_general_reminders table in the Prisma database. It is designed to allow authenticated student users to view their own general reminders, which are not tied to specific study tasks but provide scheduled notifications with title, due time, optional descriptions, and active status. The operation ensures that only authenticated users can access their reminders and that the reminder exists and belongs to the user. It returns the full detailed reminder record including all timestamps and active flags.","description":"Retrieve detailed information about a single general reminder based on its UUID identifier. This operation fetches the reminder data from the study_planner_general_reminders table.\n\nOnly authenticated users can perform this operation to ensure privacy and security of user-specific reminder data.\n\nThe reminder is uniquely identified by the path parameter generalReminderId, which corresponds to the primary key UUID field in the database. The returned data includes the reminder title, scheduled due time, optional description, active status indicating if the reminder is currently effective, and timestamps for creation and updates.\n\nIf the specified general reminder does not exist or does not belong to the authenticated user, the operation will result in an appropriate 404 Not Found or authorization error response handled by the service logic.\n\nNo request body is needed as the identifier is provided in the URL path, and the response body returns the main IStudyPlannerGeneralReminder entity.","summary":"Retrieve detailed information of a general reminder by its ID","parameters":[{"name":"generalReminderId","description":"Unique UUID identifier of the general reminder","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed general reminder entity","typeName":"IStudyPlannerGeneralReminder"},"authorizationType":null,"authorizationRole":"student","name":"at","path":"/studyPlanner/student/generalReminders/{generalReminderId}","method":"get"},{"specification":"This operation creates a new general reminder record for an authenticated student user in the study_planner_general_reminders table. It requires a request body containing the reminder title, due time, optional description, and active status flag. Upon successful creation, the operation returns the full created general reminder entity with all associated metadata including creation and update timestamps. The system enforces that reminders are associated with the authenticated user, and proper validation ensures all required fields are provided and valid.","description":"Create a new general reminder linked to the authenticated student user. The request body must include a title, due time in ISO 8601 format, an optional description, and the active flag status.\n\nThe system validates that the user is authenticated before creating the reminder.\n\nAfter successful creation, the newly created general reminder entity is returned in the response, containing all fields stored including timestamps.\n\nThis operation operates on the study_planner_general_reminders table and ensures user ownership and data integrity.","summary":"Create a new general reminder for the authenticated user","parameters":[],"requestBody":{"description":"Information for the new general reminder","typeName":"IStudyPlannerGeneralReminder.ICreate"},"responseBody":{"description":"The created general reminder entity","typeName":"IStudyPlannerGeneralReminder"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/generalReminders","method":"post"},{"specification":"This operation updates an existing general reminder identified by generalReminderId for the authenticated student user. It accepts a request body with updatable fields such as title, due time, optional description, and active status. The operation validates input fields and user ownership before applying the updates in the study_planner_general_reminders table. Upon success, it returns the updated full general reminder entity reflecting all latest data and timestamps.","description":"Update an existing general reminder identified by its UUID in the system. The authenticated user can modify the title, due time, optional description, and active status via the request body.\n\nThe operation ensures that the general reminder to be updated belongs to the authenticated user.\n\nReturns the fully updated general reminder entity after applying all changes.\n\nThis operation acts on the study_planner_general_reminders table as defined in the Prisma schema.","summary":"Update an existing general reminder by ID","parameters":[{"name":"generalReminderId","description":"Unique UUID identifier of the general reminder to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the general reminder","typeName":"IStudyPlannerGeneralReminder.IUpdate"},"responseBody":{"description":"The updated general reminder entity","typeName":"IStudyPlannerGeneralReminder"},"authorizationType":null,"authorizationRole":"student","name":"update","path":"/studyPlanner/student/generalReminders/{generalReminderId}","method":"put"},{"specification":"This operation deletes a general reminder record identified by the generalReminderId for the authenticated student user. It performs a hard delete removing the record permanently from the study_planner_general_reminders table as the schema does not define a soft-delete column for this entity. The operation validates user ownership and existence of the reminder before deletion. No request body or response body is required. After completion, the reminder data is permanently removed and cannot be recovered.","description":"Delete a general reminder permanently from the system using its unique UUID identifier. The reminder to be deleted must belong to the authenticated user.\n\nSince the database schema does not provide a soft-delete column for the general reminders table, this operation performs a hard delete removing the record permanently.\n\nReturns no content upon successful deletion.\n\nThis operation acts directly on the study_planner_general_reminders table according to the Prisma schema specifications.","summary":"Delete a general reminder by ID permanently","parameters":[{"name":"generalReminderId","description":"Unique UUID identifier of the general reminder to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/generalReminders/{generalReminderId}","method":"delete"},{"specification":"Manage the aggregated study progress analytics for authenticated students in the studyPlanner system. This operation retrieves a paginated and filtered list of study progress analytics data, operating on the study_planner_study_progress_analytics table. It provides metrics such as completed tasks count, total tasks count, and completion rate per student and study phase. The operation supports filtering, sorting, and pagination and restricts access to data belonging strictly to the authenticated student, enforcing privacy and security.","description":"This operation retrieves a filtered and paginated list of study progress analytics records for the authenticated student in the studyPlanner system. It provides detailed progress metrics for study tasks categorized by study phases like preview, main learning, and review.\n\nOnly authenticated students can access their own study progress analytics data to ensure user privacy and security.\n\nThe operation queries the study_planner_study_progress_analytics Prisma table with support for advanced filtering and pagination parameters passed in the request body.\n\nThe response delivers paginated analytics matching search criteria, enabling clients to present summaries and lists.\n\nErrors due to invalid input or unauthorized access are handled with appropriate responses.\n\nTypically used alongside detail retrieval operations for comprehensive analytics management.","summary":"Search and retrieve a filtered, paginated list of study progress analytics","path":"/studyPlanner/student/studyProgressAnalytics","method":"patch","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering study progress analytics","typeName":"IStudyPlannerStudyProgressAnalytics.IRequest"},"responseBody":{"description":"Paginated list of study progress analytics matching search criteria","typeName":"IPageIStudyPlannerStudyProgressAnalytics"},"authorizationType":null,"authorizationRole":"student","name":"index"},{"specification":"Retrieve detailed information for a specific study progress analytics record identified by its UUID. This operation reads from the study_planner_study_progress_analytics table, which tracks metrics on completed tasks, total tasks, and completion rates for study phases per student.\n\nAccess is restricted to the authenticated student to maintain data privacy and security. The response includes comprehensive analytics data for the specified record.\n\nHandles errors related to missing records or unauthorized access with appropriate status codes and messages.","description":"Fetch detailed study progress analytics data for a single record by its unique identifier for the authenticated student. It includes counts of completed tasks, total tasks, and the completion rate for the associated study phase.\n\nAccess is restricted to ensure data privacy; only the owning student can retrieve the record.\n\nThis operation accesses the study_planner_study_progress_analytics Prisma table and provides full analytics details.\n\nProper error handling is included for unauthorized access or not found errors.","summary":"Retrieve detailed study progress analytics by ID","path":"/studyPlanner/student/studyProgressAnalytics/{id}","method":"get","parameters":[{"name":"id","description":"Unique identifier of the study progress analytics record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete study progress analytics record details","typeName":"IStudyPlannerStudyProgressAnalytics"},"authorizationType":null,"authorizationRole":"student","name":"at"},{"specification":"Retrieve a filtered and paginated list of learning gap charts representing areas of study underperformance based on subject categories for the authenticated students. This operation operates on the study_planner_learning_gap_charts table and provides metrics on learning gaps per subject category.\n\nSupports filtering, sorting, and pagination for efficient analytics data retrieval. Access is restricted to the authenticated student to safeguard privacy and security.\n\nInvalid input or unauthorized access is managed through appropriate error responses.","description":"Retrieve a filtered, paginated list of learning gap chart data highlighting student's study subject learning gaps for the authenticated studyPlanner student. The data is grouped by subject categories providing insights into areas needing improvement.\n\nOnly authenticated students should access their own analytics data.\n\nThe operation queries the study_planner_learning_gap_charts Prisma table.\n\nSupports filtering and pagination parameters.\n\nHandles errors gracefully and provides optimized data for frontend visualization.\n\nTypically used in combo with detail retrieval endpoint.","summary":"Search and retrieve a list of learning gap charts with filtering and pagination","path":"/studyPlanner/student/learningGapCharts","method":"patch","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for learning gap charts","typeName":"IStudyPlannerLearningGapCharts.IRequest"},"responseBody":{"description":"Paginated list of learning gap charts matching search criteria","typeName":"IPageIStudyPlannerLearningGapCharts"},"authorizationType":null,"authorizationRole":"student","name":"index"},{"specification":"Retrieve detailed learning gap chart data by its unique identifier for the authenticated studyPlanner student. This operation reads from the study_planner_learning_gap_charts table, which holds analytics on learning gaps per subject category.\n\nAccess is restricted to the authenticated student to ensure privacy and security. The response contains comprehensive data on the specified learning gap chart record.\n\nErrors related to missing resources or unauthorized access are handled appropriately.","description":"Fetch detailed learning gap chart information by unique ID for the authenticated user. The returned data provides specific metrics on student's learning gaps associated with subject categories.\n\nOnly the owning authenticated student can access this data to maintain privacy.\n\nThis operation accesses the study_planner_learning_gap_charts Prisma table and returns complete information.\n\nError responses handle invalid IDs or access violations suitably.","summary":"Retrieve specific learning gap chart details by ID","path":"/studyPlanner/student/learningGapCharts/{id}","method":"get","parameters":[{"name":"id","description":"Unique identifier of the learning gap chart record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed learning gap chart record information","typeName":"IStudyPlannerLearningGapCharts"},"authorizationType":null,"authorizationRole":"student","name":"at"}],"components":{"authorization":[{"name":"student","description":"Authenticated student user who can register, login, manage their learning activities including preview, main learning, review phases, create and update study tasks, set memos and alarms, and view learning progress analytics.","kind":"member"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIStudyPlannerStudent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyPhases.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyPhases.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerSubjectCategories.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerSubjectCategories.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyTasks.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyTasks.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerAttachment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerAttachment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyPlannerTaskAlarms.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyPlannerTaskAlarms.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerGeneralReminder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerGeneralReminder.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyProgressAnalytics":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyProgressAnalytics"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerLearningGapCharts":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerLearningGapCharts"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IStudyPlannerStudent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the student user.\n\nMust be a UUID string."},"email":{"type":"string","format":"email","description":"Unique email address used for student login and communication.\n\nMust be a valid email address format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was created.\n\nISO 8601 date-time formatted string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was last updated.\n\nISO 8601 date-time formatted string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp indicating when the student record was soft deleted, if applicable.\n\nISO 8601 date-time formatted string or null if not deleted."}},"required":["id","email","created_at","updated_at","deleted_at"],"description":"Student entity representing authenticated user information used for login and identification.\n\nStores unique email, password hash (not exposed in response types), and audit timestamps.\n\nSupports soft deletion via `deleted_at` field."},"IStudyPlannerStudent.IJoin":{"type":"object","properties":{"email":{"type":"string","description":"Unique email address for registration."},"password":{"type":"string","description":"The plaintext password provided during registration."}},"required":["email","password"],"description":"Request body for user registration (join). Contains email and plaintext password for registration."},"IStudyPlannerStudent.ILogin":{"type":"object","properties":{"email":{"type":"string","description":"User provided email for login."},"password":{"type":"string","description":"User plaintext password for authentication."}},"required":["email","password"],"description":"Request body for user login. Contains email and password for authentication."},"IStudyPlannerStudent.IRefresh":{"type":"object","properties":{"refreshToken":{"type":"string","description":"Refresh token string used to obtain new access token."}},"required":["refreshToken"],"description":"Request body for refreshing JWT tokens. Contains the refresh token string."},"IStudyPlannerStudent.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated student (UUID)."},"email":{"type":"string","format":"email","description":"Unique email address used for student login and communication.\n\nMust be a valid email address format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was created.\n\nISO 8601 date-time formatted string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was last updated.\n\nISO 8601 date-time formatted string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp indicating when the student record was soft deleted, if applicable.\n\nISO 8601 date-time formatted string or null if not deleted."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","created_at","updated_at","deleted_at","token"],"description":"Response type for authorized authentication results containing token and user info."},"IStudyPlannerStudent.IRequest":{"type":"object","properties":{"email":{"oneOf":[{"type":"string","description":"Search by email string. Optional. Can be used for partial matching."},{"type":"null"}],"description":"Search by email string. Optional. Can be used for partial matching."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Pagination page number. Optional. Positive integer.\n\nIf omitted, default pagination applies."},{"type":"null"}],"description":"Pagination page number. Optional. Positive integer.\n\nIf omitted, default pagination applies."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Limit of records per page. Optional. Positive integer.\n\nDefaults to 100 if omitted."},{"type":"null"}],"description":"Limit of records per page. Optional. Positive integer.\n\nDefaults to 100 if omitted."},"sortBy":{"oneOf":[{"type":"string","description":"Sort key for listed students (e.g., created_at, email). Optional."},{"type":"null"}],"description":"Sort key for listed students (e.g., created_at, email). Optional."},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort direction, 'asc' or 'desc'. Optional."},{"const":"desc","description":"Sort direction, 'asc' or 'desc'. Optional."},{"type":"null"}],"description":"Sort direction, 'asc' or 'desc'. Optional."}},"required":[],"description":"Request parameters type for listing and searching study planner students.\n\nIncludes pagination, sorting, filtering options."},"IStudyPlannerStudent.IUpdate":{"type":"object","properties":{"email":{"oneOf":[{"type":"string","format":"email","description":"Email address of the student user.\n\nOptional. Must be valid email format if provided."},{"type":"null"}],"description":"Email address of the student user.\n\nOptional. Must be valid email format if provided."}},"required":[],"description":"Request body for updating student user information.\n\nEmail can be updated; password changes use a separate flow.\nCreated_at and ID are read-only, omitted."},"IStudyPlannerStudyPhases.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32","description":"Pagination page number.\nOptional positive integer."},{"type":"null"}],"description":"Pagination page number.\nOptional positive integer."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Limit of records per page.\nOptional positive integer."},{"type":"null"}],"description":"Limit of records per page.\nOptional positive integer."},"code":{"oneOf":[{"type":"string","description":"Filtering code string.\nOptional."},{"type":"null"}],"description":"Filtering code string.\nOptional."},"name":{"oneOf":[{"type":"string","description":"Filtering name string.\nOptional."},{"type":"null"}],"description":"Filtering name string.\nOptional."},"sortBy":{"oneOf":[{"type":"string","description":"Sort field.\nOptional.\nExamples: 'created_at', 'name', 'code'"},{"type":"null"}],"description":"Sort field.\nOptional.\nExamples: 'created_at', 'name', 'code'"},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort direction.\nOptional.\nEnum: 'asc' or 'desc'"},{"const":"desc","description":"Sort direction.\nOptional.\nEnum: 'asc' or 'desc'"},{"type":"null"}],"description":"Sort direction.\nOptional.\nEnum: 'asc' or 'desc'"}},"required":[],"description":"Search and pagination request type for study phases.\nIncludes pagination, filtering and sorting options."},"IStudyPlannerStudyPhases":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key unique identifier of the study phase.\n\nA UUID string representing the unique ID."},"code":{"type":"string","description":"Unique code identifier of the study phase, e.g., 'preview', 'main_learning', 'review'.\n\nUsed as a keyword code for recognizing the study phase."},"name":{"type":"string","description":"Human-readable name of the study phase, e.g., 'Preview'.\n\nThis is the display name shown to users."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the study phase.\n\nMay be null if description is not provided."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp with timezone.\n\nFormat: ISO 8601 date-time string."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp with timezone.\n\nFormat: ISO 8601 date-time string."}},"required":["id","code","name","created_at","updated_at"],"description":"Defines a study phase such as preview, main learning, or review. Each phase categorizes study activities and includes timestamps for record creation and updates.\n\nThe 'code' is a unique string used to identify the phase programmatically.\n\nThe 'name' is the human-readable name for display purposes.\n\nThe optional 'description' provides further details about the phase.\n\nTimestamps track creation and last update times."},"IStudyPlannerStudyPhases.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code identifier of the study phase.\n\nRequired to add a new study phase with a unique code such as 'preview'."},"name":{"type":"string","description":"Human-readable name of the study phase.\n\nRequired name describing the phase for display."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description about the study phase.\n\nCan be null or omitted."}},"required":["code","name"],"description":"Request data to create a new study phase in the system.\n\nRequires unique code and a descriptive name.\n\nDescription is optional and can be null."},"IStudyPlannerStudyPhases.IUpdate":{"type":"object","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifier for the study phase.\n\nOptional update field to modify the code."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable name.\n\nOptional update field to change the phase name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description.\n\nCan be null to clear or update description."}},"required":[],"description":"Request data to update an existing study phase.\n\nAll fields are optional and nullable to allow partial updates."},"IStudyPlannerSubjectCategories.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":0},{"type":"null"}],"description":"Page number of the request.\n\nOptional; default pagination parameter."},"limit":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Number of records per page.\n\nOptional limit for pagination."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional search string to filter subject categories by name or code."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Field for sorting results, such as 'created_at', 'name', or 'code'.\n\nOptional sorting key."},"orderDirection":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction, \"asc\" for ascending, \"desc\" for descending.\n\nOptional; must be one of \"asc\" or \"desc\"."}},"required":[],"description":"Search request payload for filtering and paginating subject categories.\n\nIncludes optional paging, search filter, and sorting information."},"IStudyPlannerSubjectCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"code":{"type":"string","description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},"name":{"type":"string","description":"Human-readable name of the subject category, e.g., 'English Grammar'."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the subject category."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."}},"required":["id","code","name","created_at","updated_at"],"description":"Describes a subject category for study tasks including English subcategories such as grammar, vocabulary, speaking."},"IStudyPlannerSubjectCategories.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},"name":{"type":"string","description":"Human-readable name of the subject category, e.g., 'English Grammar'."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the subject category."}},"required":["code","name"],"description":"Used for creating a new study subject category with mandatory code and name."},"IStudyPlannerSubjectCategories.IUpdate":{"type":"object","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable name of the subject category, e.g., 'English Grammar'."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the subject category."}},"required":[],"description":"Used for updating an existing study subject category where all fields are optional."},"IStudyPlannerStudyTasks.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Number of items per page (limit)."},"study_phase_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by study phase id."},"subject_category_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by subject category id."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search text to filter study task titles (partial match)."},"orderBy":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"const":"title"},{"type":"null"}],"description":"Sort order."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Ascending or descending order."}},"required":[],"description":"Request parameters to filter, paginate, and sort study task listings."},"IStudyPlannerStudyTasks":{"description":"Study task entity representing an individual learning activity owned by a student.\n\nEach task is linked to a student, a study phase, and a subject category. It stores metadata including a unique UUID, title, optional description, creation/update timestamps, and a soft delete timestamp.\n\nThis entity supports core task management features by tracking the learning goal and associating it with categorized study phases for progress monitoring.","type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the study task (uuid v4)","format":"uuid"},"student_id":{"type":"string","description":"The student UUID who owns this task","format":"uuid"},"study_phase_id":{"type":"string","description":"The study phase UUID e.g. preview, main_learning, review","format":"uuid"},"subject_category_id":{"type":"string","description":"The subject category UUID representing the study topic","format":"uuid"},"title":{"type":"string","description":"Title of the study task describing the learning goal"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed explanation of the study task"},"created_at":{"type":"string","description":"ISO 8601 timestamp when the record was created","format":"date-time"},"updated_at":{"type":"string","description":"ISO 8601 timestamp of last update","format":"date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if not deleted"}},"required":["id","student_id","study_phase_id","subject_category_id","title","created_at","updated_at"]},"IStudyPlannerStudyTask.IUpdate":{"type":"object","properties":{"study_phase_id":{"type":"string","format":"uuid","description":"Associated study phase {@link study_planner_study_phases.id}"},"subject_category_id":{"type":"string","format":"uuid","description":"Linked subject category {@link study_planner_subject_categories.id}"},"title":{"type":"string","description":"Title of the study task capturing the user's learning goal."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description or notes about the study task."}},"required":[],"description":"Request body properties for updating an existing study task.\n\n@namespace Study\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IStudyPlannerStudyTaskProgress":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID identifier for the study task progress record.\n\nUnique identifier for the progress entry linked to a specific study task and study phase."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task.\n\nLinks progress to a specific study task."},"study_phase_id":{"type":"string","format":"uuid","description":"UUID of the study phase (preview, main learning, review) tracked.\n\nSpecifies which study phase this progress record belongs to."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the study phase was completed for the task.\n\nNullable; null means not yet completed."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation.\n\nIndicates when this progress record was initially created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update.\n\nIndicates the last time this progress record was modified."}},"required":["id","study_task_id","study_phase_id","created_at","updated_at"],"description":"Represents progress tracking state for a study task in a specific study phase. This includes completion timestamps and audit information.\n\nTracks phase completion milestones for tasks to support study lifecycle management and analytics."},"IStudyPlannerStudyTaskProgress.IUpdate":{"description":"Payload to update the completion timestamp of a study task progress entry.\n\nAllows setting or clearing the completed_at timestamp to mark phase completion or incompletion.\n\nOnly the completed_at field is updateable.","type":"object","properties":{"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Completion timestamp (ISO 8601) or null to mark incomplete"}},"required":[]},"IStudyPlannerStudyTask":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"student_id":{"type":"string","format":"uuid","description":"Belonged student's {@link study_planner_students.id}"},"study_phase_id":{"type":"string","format":"uuid","description":"Associated study phase {@link study_planner_study_phases.id}"},"subject_category_id":{"type":"string","format":"uuid","description":"Linked subject category {@link study_planner_subject_categories.id}"},"title":{"type":"string","description":"Title of the study task capturing the user's learning goal."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description or notes about the study task."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the study task was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the study task was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the study task was soft deleted; null if not deleted."}},"required":["id","student_id","study_phase_id","subject_category_id","title","created_at","updated_at"],"description":"Core entity representing a student study task managed independently, linked to a student, study phase, and subject category. Tracks title, optional description, and soft deletion. Supports creation and update timestamps for audit trail.\n\n@namespace Study\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IStudyPlannerStudyTask.ICreate":{"type":"object","properties":{"student_id":{"type":"string","format":"uuid","description":"UUID of the student creating the study task.\n\nThis associates the task with a specific student owner."},"study_phase_id":{"type":"string","format":"uuid","description":"UUID of the study phase assigned to this task (preview, main learning, review)."},"subject_category_id":{"type":"string","format":"uuid","description":"UUID of the subject category linked to the study task."},"title":{"type":"string","description":"Title of the study task, describing its learning objective."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description or notes about the study task."}},"required":["student_id","study_phase_id","subject_category_id","title"],"description":"Input payload required to create a new study task. Includes student ownership, study phase, subject category, and task title.\n\nAn optional description may be provided."},"IStudyPlannerStudyTaskProgress.ICreate":{"type":"object","properties":{"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task for which progress is created.\n\nLinks the progress record to a specific study task"},"study_phase_id":{"type":"string","format":"uuid","description":"UUID of the study phase being tracked in this progress entry.\n\nSpecifies the study phase this progress entry represents."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp marking the completion time for the study phase.\n\nNull means phase not completed."}},"required":["study_task_id","study_phase_id","completed_at"],"description":"Input data required to create a new study task progress record for a specific study phase.\n\nIncludes the task and phase identifiers and completion timestamp."},"IStudyPlannerAttachment":{"type":"object","description":"An attachment file linked to a study task, representing image or PDF content.\n\nThis entity stores metadata for the attachment including its file type and URL.\n\nThe created_at timestamp records when the attachment was added to the system.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the attachment."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the related study task this attachment belongs to."},"file_type":{"type":"string","description":"MIME type of the attachment file, e.g., 'image/jpeg' or 'application/pdf'."},"file_url":{"type":"string","description":"URL or URI to access the attachment file.","maxLength":80000},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the attachment record was created."}},"required":["id","study_task_id","file_type","file_url","created_at"]},"IStudyPlannerAttachment.ICreate":{"type":"object","description":"Data required to create a new attachment linked to a study task.\n\nOnly the study_task_id, file_type, and file_url are provided by the client.\n\nThe id and created_at fields are generated by the system.","properties":{"study_task_id":{"type":"string","format":"uuid","description":"UUID of the study task to associate the attachment with."},"file_type":{"type":"string","description":"MIME type of the attachment file to be created."},"file_url":{"type":"string","description":"URL or URI where the attachment file is stored."}},"required":["study_task_id","file_type","file_url"]},"IStudyPlannerAttachment.IUpdate":{"type":"object","description":"Data for updating a study task attachment.\n\nOnly file_type and file_url can be updated.\n\nOther fields such as id and study_task_id cannot be changed.","properties":{"file_type":{"type":"string","description":"Updated MIME type of the attachment file."},"file_url":{"type":"string","description":"Updated URL or URI of the attachment file."}},"required":[]},"IStudyPlannerStudyPlannerMemo":{"type":"object","description":"A memo note linked to a study task providing textual information or comments.\n\nIncludes memo text and timestamps for creation and update.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the memo."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the related study task this memo belongs to."},"memo_text":{"type":"string","description":"Text content of the memo note."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was last updated."}},"required":["id","study_task_id","memo_text","created_at","updated_at"]},"IStudyPlannerStudyPlannerMemoArray":{"type":"array","description":"An array of memos attached to a study task.\n\nEach item represents a memo providing textual notes related to a study task.","items":{"$ref":"#/components/schemas/IStudyPlannerStudyPlannerMemo"}},"IStudyPlannerStudyPlannerMemoICreate":{"type":"object","properties":{"memo_text":{"type":"string","description":"Text content of the memo providing additional details or notes.\n\nThis field holds the textual memo associated with a specific study task.\nIt supports note-taking for the student study activity management."}},"required":["memo_text"],"description":"Create request body for a study task memo. Contains the memo text.\n\nNote: The study_task_id field is set internally and should not be sent in the request."},"IStudyPlannerStudyPlannerMemos.IUpdate":{"type":"object","properties":{"memo_text":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Text content of the memo providing additional details or notes.\n\nCan be null to clear the memo."}},"required":[],"description":"Update request body for a study task memo. Supports partial update of memo text."},"IStudyPlannerStudyPlannerMemos":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\nUnique identifier of the memo."},"memo_text":{"type":"string","description":"Text content of the memo providing additional details or notes."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was last updated."}},"required":["id","memo_text","created_at","updated_at"],"description":"Represents a memo attached to a study task containing the memo text and timestamps."},"IStudyPlannerStudyPlannerTaskAlarms.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Current page number for pagination."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum number of records per page.\nDefault value is 100 if not specified."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter for alarm title supporting partial matching."},"study_task_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional study task ID filter to retrieve alarms related to specific study tasks."},"order_by_created_at":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort by creation date.\nAllowed values: 'asc' or 'desc'."},"order_by_alarm_time":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort by alarm time.\nAllowed values: 'asc' or 'desc'."}},"required":[],"description":"Request parameters for searching and paginating task alarms."},"IStudyPlannerStudyPlannerTaskAlarms":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key UUID for the task alarm record."},"student_id":{"type":"string","format":"uuid","description":"UUID of the student who owns this alarm."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task."},"title":{"type":"string","description":"Title or label of the alarm for identification."},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled time for the alarm to trigger the notification in ISO 8601 format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last record update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft deletion timestamp indicating logical removal."}},"required":["id","student_id","study_task_id","title","alarm_time","created_at","updated_at"],"description":"Study task alarm entity storing alarm details such as title, alarm time, and association with student and study task.\n\nThis entity supports scheduling notifications and is managed per authenticated student user."},"IStudyPlannerTaskAlarm.ICreate":{"type":"object","properties":{"student_id":{"type":"string","format":"uuid","description":"UUID of the student who owns this alarm."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task."},"title":{"type":"string","description":"Title or label for the alarm."},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled date-time for the alarm notification trigger."}},"required":["student_id","study_task_id","title","alarm_time"],"description":"Request body schema for creating a new study task alarm.\n\nContains required fields to define alarm owner and trigger details, excluding auto-generated fields like id and timestamps."},"IStudyPlannerTaskAlarm.IUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Optional updated title of the alarm."},"alarm_time":{"type":"string","format":"date-time","description":"Optional updated scheduled date-time for the alarm."}},"required":[],"description":"Request body schema for updating details of an existing study task alarm.\n\nOnly title and alarm_time are updatable fields."},"IStudyPlannerTaskAlarm":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key UUID for the task alarm record."},"student_id":{"type":"string","format":"uuid","description":"UUID of the student who owns this alarm."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task."},"title":{"type":"string","description":"Title or label for the alarm."},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled time for the alarm in ISO 8601 format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last record update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft deletion timestamp."}},"required":["id","student_id","study_task_id","title","alarm_time","created_at","updated_at"],"description":"A study task alarm entity including all details such as id, ownership, title, scheduled trigger time, and timestamps.\n\nDeleted_at is nullable and used for soft deletes."},"IStudyPlannerGeneralReminder.IRequest":{"type":"object","properties":{"student_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter for the ID of the student to restrict reminders.\n\n@format uuid"},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter for reminder title matching.\n\nThis enables search by reminder title."},"due_time_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional minimum due time filter; reminders due after this time.\n\n@format date-time"},"due_time_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional maximum due time filter; reminders due before this time.\n\n@format date-time"},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional filter for active status.\n\ntrue to filter only active reminders;\nfalse for only inactive;\nnull or undefined to not filter by active status."},"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination: page number starting from 1.\n\nOptional; defaults to null if not specified."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination: maximum number of records per page.\n\nOptional; defaults to null if not specified."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional sorting field, e.g., 'due_time', 'title'."},"orderDirection":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional ascending (true) or descending (false) order."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated alias for 'title'."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated alias for 'orderBy'."},"dir":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Deprecated alias for 'orderDirection'."},"column":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated; use 'orderBy' instead."},"order_column":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated; use 'orderBy' instead."},"order_dir":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Deprecated; use 'orderDirection' instead."}},"description":"Request schema for filtering and paginated retrieval of general reminders.","required":[]},"IStudyPlannerGeneralReminder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of the general reminder.\n\n@format uuid"},"student_id":{"type":"string","format":"uuid","description":"ID of the student who owns this reminder.\n\n@format uuid"},"title":{"type":"string","description":"Friendly name or title of the general reminder for identification.\n\nThis is a brief label shown to the user to describe the reminder.\nIt is required to be non-empty."},"due_time":{"type":"string","format":"date-time","description":"Scheduled due time of the reminder as an ISO 8601 datetime string.\n\nThis indicates when the notification should be triggered.\nMust be a valid date-time string.\n\nExample: \"2023-12-31T10:00:00Z\""},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description providing extra context for the reminder.\n\nThis field can be null or a string."},"active":{"type":"boolean","description":"Whether this reminder is active and will trigger notifications.\n\nThis boolean controls if the reminder is currently enabled."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of reminder creation.\n\n@format date-time"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to the reminder.\n\n@format date-time"}},"required":["id","student_id","title","due_time","active","created_at","updated_at"],"description":"Entity representing a general reminder set by a student to receive notifications.\n\nIt includes scheduling, descriptive text, active state, and audit timestamps."},"IStudyPlannerGeneralReminder.ICreate":{"type":"object","properties":{"title":{"type":"string","description":"Friendly name or title of the new general reminder.\n\nThis is required and serves as the label for the reminder."},"due_time":{"type":"string","format":"date-time","description":"Scheduled due time for this reminder.\n\nISO 8601 formatted date-time string."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description explaining the reminder in more detail.\n\nThis field may be null."},"active":{"type":"boolean","description":"Flag indicating whether the reminder is active and should trigger notifications."}},"required":["title","due_time","active"],"description":"Schema for creating a new general reminder.\n\nIncludes title, due time, optional description, and active flag."},"IStudyPlannerGeneralReminder.IUpdate":{"type":"object","properties":{"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated title of the reminder.\n\nIf included, overrides the existing title."},"due_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional updated due time.\n\nISO 8601 date-time format if provided."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated description.\n\nNullable field to allow clearing or changing description."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional updated active flag."}},"required":[],"description":"Schema for updating an existing general reminder.\n\nAll fields are optional and may be null."},"IStudyPlannerStudyProgressAnalytics.IRequest":{"type":"object","properties":{"student_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by student unique identifier. Use null to ignore this filter."},"study_phase_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by study phase unique identifier. Use null to ignore this filter."},"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Current page number for pagination."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Limit of records per page."},"sortBy":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"type":"null"}],"description":"Sort records by created or updated timestamp."},"order":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order - ascending or descending."}},"required":[],"description":"Request object for searching and filtering study progress analytics."},"IStudyPlannerStudyProgressAnalytics":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the study progress analytics record."},"student_id":{"type":"string","format":"uuid","description":"Unique identifier of the student."},"study_phase_id":{"type":"string","format":"uuid","description":"Unique identifier of the study phase."},"completed_tasks_count":{"type":"integer","description":"Number of completed tasks for the student in the given study phase."},"total_tasks_count":{"type":"integer","description":"Total number of tasks assigned to the student in the study phase."},"completion_rate":{"type":"number","format":"double","description":"Completion rate computed as completed tasks divided by total tasks."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."}},"required":["id","student_id","study_phase_id","completed_tasks_count","total_tasks_count","completion_rate","created_at","updated_at"],"description":"Aggregated study progress analytics per student and study phase.\n\nThis entity provides metrics such as completed tasks count, total tasks count, and completion rate.\n\nIt relates to students and study phases for tracking learning progress across phases."},"IStudyPlannerLearningGapCharts.IRequest":{"type":"object","properties":{"student_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by student unique identifier. Use null to ignore this filter."},"subject_category_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by subject category unique identifier. Use null to ignore this filter."},"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Current page number for pagination."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Limit of records per page."},"sortBy":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"type":"null"}],"description":"Sort records by created or updated timestamp."},"order":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order - ascending or descending."}},"required":[],"description":"Request object for searching and filtering learning gap charts."},"IStudyPlannerLearningGapCharts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the learning gap chart record."},"student_id":{"type":"string","format":"uuid","description":"Unique identifier of the student."},"subject_category_id":{"type":"string","format":"uuid","description":"Unique identifier of the subject category."},"gap_metric":{"type":"number","format":"double","description":"Quantified measure of the learning gap for the subject category."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."}},"required":["id","student_id","subject_category_id","gap_metric","created_at","updated_at"],"description":"Analytics data showing learning gap statistics per student and subject category.\n\nThis entity highlights underperformed areas in study tasks, linked to students and subject categories to assist targeted improvements and visualization."},"IStudyPlannerStudent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the student user"},"email":{"type":"string","description":"Email address of the student user used for login"}},"required":["id","email"],"description":"Summary information of student user containing essential identification fields only."},"IStudyPlannerStudyPhases.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the study phase"},"code":{"type":"string","description":"Unique code identifier of the study phase"},"name":{"type":"string","description":"Human-readable name of the study phase"}},"required":["id","code","name"],"description":"Summary information of study phase including id, code, and name."},"IStudyPlannerSubjectCategories.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the subject category"},"code":{"type":"string","description":"Unique code identifier of the subject category"},"name":{"type":"string","description":"Human-readable name of the subject category"}},"required":["id","code","name"],"description":"Summary information of subject category including id, code, and name."},"IStudyPlannerStudyTasks.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the study task"},"title":{"type":"string","description":"Title of the study task"},"study_phase_id":{"type":"string","format":"uuid","description":"Unique identifier of the associated study phase"},"subject_category_id":{"type":"string","format":"uuid","description":"Unique identifier of the associated subject category"}},"required":["id","title","study_phase_id","subject_category_id"],"description":"Summary information for study tasks, including identifiers and title."},"IStudyPlannerAttachment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the attachment"},"file_type":{"type":"string","description":"Type of the attachment file, e.g., image/jpeg, application/pdf"},"file_url":{"type":"string","description":"URI of the stored attachment file for retrieval"}},"required":["id","file_type","file_url"],"description":"Summary information of an attachment file linked to a study task.\n\nThis summary includes the unique ID, file type, and the file URL for access."},"IStudyPlannerStudyPlannerTaskAlarms.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the task alarm"},"title":{"type":"string","description":"Title or label of the alarm for user identification"},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled time for the alarm to trigger the notification"},"study_task_id":{"type":"string","format":"uuid","description":"Referenced study task's identifier for which the alarm is set"}},"required":["id","title","alarm_time","study_task_id"],"description":"Summary information of a task alarm set by a student for a study task.\n\nIncludes unique ID, alarm title, alarm time, and linked study task identifier."},"IStudyPlannerGeneralReminder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the general reminder"},"title":{"type":"string","description":"Title or label of the general reminder for user identification"},"due_time":{"type":"string","format":"date-time","description":"Scheduled due time for the general reminder notification"},"active":{"type":"boolean","description":"Boolean flag indicating the reminder's active status"},"description":{"type":"string","description":"Optional textual description providing additional context for the reminder"},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation for audit and history"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for audit and history"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp indicating logical removal (nullable)"},"student_id":{"type":"string","format":"uuid","description":"Belonged student's unique identifier"}},"required":["id","title","due_time","active"],"description":"Summary information of a general reminder created by a student.\n\nIncludes unique ID, title, due time, and active status.\n\nNote: detailed properties like description, created_at, updated_at, deleted_at, and student_id are normally excluded from summaries."}}}},"created_at":"2025-09-12T18:13:25.630Z","completed_at":"2025-09-12T18:29:09.868Z","step":0},{"id":"01993f37-fd3e-7777-b092-c1da2d51fe89","type":"userMessage","contents":[{"type":"text","text":"next"}],"created_at":"2025-09-12T18:37:37.982Z"},{"id":"01993f38-0028-7242-8f1d-817e928fd090","type":"assistantMessage","text":"The API interfaces for your study planner backend are now generated and ready.\n\nThe next step is to create comprehensive end-to-end test suites to validate all API endpoints and their interactions, ensuring your backend functions correctly according to the requirements.\n\nShall I proceed with generating the test code for your study planner backend?","created_at":"2025-09-12T18:37:38.728Z","completed_at":"2025-09-12T18:37:39.543Z"}]