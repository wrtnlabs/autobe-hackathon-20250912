{"operations":[{"specification":"This API operation allows an authenticated student user to register a new account. It handles user sign-up by creating a student record with a unique email and hashed password, storing creation and update timestamps, and ensuring email uniqueness as required by the underlying study_planner_students Prisma table. The API enforces input validation for email and password, securely hashes passwords, and issues JWT tokens upon successful registration to establish authenticated sessions. This supports the business requirement that students can create an account to manage their study activities.\n\nThis operation is public (no prior authentication required) to allow new student registrations.\n\nIt interacts directly with the study_planner_students table.\n\nThe response body provides an authorized token information under the type IStudyPlannerStudent.IAuthorized, conforming to the authentication response pattern.\n\nThis JWT token can be used along with other operations like login and refresh token flows.\n\nRelated operations are /auth/student/login and /auth/student/refresh for completing user authentication.\n\nPOST /auth/student/join should be called for user registration.","authorizationType":"join","description":"User registration (join) operation for student role. Creates a new student account with unique email and hashed password stored in study_planner_students table.\n\nThe system enforces email uniqueness and password security during registration. Upon successful registration, JWT access and refresh tokens are issued conforming to authentication flows.\n\nThis operation is public and does not require prior authentication.\n\nRelated endpoints /auth/student/login and /auth/student/refresh are used for subsequent user login and token refresh operations.\n\nThis process enables new users to begin using the study planner service by authenticating with their credentials.","summary":"Register a new student user account stored in study_planner_students table.","parameters":[],"requestBody":{"description":"Student registration credentials and profile data.","typeName":"IStudyPlannerStudent.IJoin"},"responseBody":{"description":"Authorized tokens and student info upon registration.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"join","path":"/auth/student/join","method":"post"},{"specification":"This API operation allows an authenticated student user to log in by validating their credentials against the stored records in study_planner_students table. It requires valid email and password inputs and authenticates the user by verifying the password hash.\n\nUpon successful authentication, the system issues JWT access and refresh tokens to enable secure session management.\n\nThe operation is public to allow user login.\n\nIt interacts with the study_planner_students table for credential verification and session token issuance.\n\nThe response body returns an object of type IStudyPlannerStudent.IAuthorized to represent the authenticated user and tokens.\n\nThis operation complements the join and refresh endpoints for a complete authentication flow.\n\nPOST /auth/student/login should be called for user authentication.","authorizationType":"login","description":"User login operation for student role. Validates email and password against stored credentials in study_planner_students table.\n\nIssues JWT tokens upon successful authentication for secure session management.\n\nThis operation is public and acts as the gateway to our study planner backend for stored users.\n\nRelated operations /auth/student/join and /auth/student/refresh complete the authentication lifecycle.\n\nUser credentials are never stored in plaintext and securely compared using password hashing methods.","summary":"Authenticate student user and issue JWT tokens.","parameters":[],"requestBody":{"description":"Student login credentials including email and password.","typeName":"IStudyPlannerStudent.ILogin"},"responseBody":{"description":"Authorized tokens and student info upon login.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"login","path":"/auth/student/login","method":"post"},{"specification":"This API operation enables an authenticated student user to refresh their access tokens using a valid refresh token. It interacts with the study_planner_students table to validate the refresh token and issues new JWT access and refresh tokens.\n\nThis operation secures session continuation without requiring the user to log in again, supporting a seamless authenticated experience.\n\nIt requires the user to provide a valid refresh token in the request body.\n\nThis endpoint complements the join and login operations for a full authentication token lifecycle.\n\nPOST /auth/student/refresh is responsible for renewing the user's JWT tokens.\n\nOnly authenticated users with valid refresh tokens can access this endpoint.","authorizationType":"refresh","description":"Refresh JWT access and refresh tokens for authenticated student users using a valid refresh token.\n\nThis operation supports seamless session continuation without re-entering credentials.\n\nRequires a valid refresh token in the request body.\n\nRelies on the study_planner_students table for user identity verification.\n\nComplements join and login endpoints for full token lifecycle management.","summary":"Refresh JWT tokens for authenticated student user.","parameters":[],"requestBody":{"description":"Valid refresh token payload for JWT renewal.","typeName":"IStudyPlannerStudent.IRefresh"},"responseBody":{"description":"New authorized tokens upon refresh.","typeName":"IStudyPlannerStudent.IAuthorized"},"authorizationRole":"student","name":"refresh","path":"/auth/student/refresh","method":"post"},{"specification":"This operation retrieves a paginated list of student user accounts from the study_planner_students table in the Prisma schema. It supports filtering and pagination, returning summary information to authorized users.","description":"Retrieve a filtered and paginated list of student users in the system. This allows administrators or authorized users to search and filter students by various criteria such as email, creation date, and soft deletion status.\n\nThe operation ensures sensitive information (e.g., password hashes) is excluded from the response. Proper authorization is required to access student data.\n\nThis operation corresponds to the study_planner_students database table which stores student authentication and profile details.","summary":"Search and retrieve paginated list of student users","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for student user filtering","typeName":"IStudyPlannerStudent.IRequest"},"responseBody":{"description":"Paginated list of student user summaries","typeName":"IPageIStudyPlannerStudent.ISummary"},"authorizationRoles":["student"],"path":"/studyPlanner/student/students","method":"patch","name":"index","authorizationRole":"student","authorizationType":null},{"specification":"This operation obtains detailed information for a specific student user identified by studentId from the study_planner_students table. It returns detailed user data excluding sensitive credentials.","description":"Retrieve detailed information about a student user by their unique ID. This operation returns all relevant user fields except sensitive password information.\n\nAccess is restricted to authenticated users to ensure privacy and security.\n\nThis operation enables viewing and management of individual student user data.","summary":"Get detailed student user information","parameters":[{"name":"studentId","description":"Unique identifier of the student user","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed student user information","typeName":"IStudyPlannerStudent"},"authorizationRoles":["student"],"path":"/studyPlanner/student/students/{studentId}","method":"get","name":"at","authorizationRole":"student","authorizationType":null},{"specification":"Update the information of an existing student user identified by studentId, excluding password changes which are handled separately for security. Only authorized authenticated students may update their own data.","description":"Update fields such as email or other allowed attributes for a student user identified by studentId. Password changes are excluded and require dedicated processes.\n\nThis operation maintains audit timestamps and does not allow modification of sensitive authentication hashes.\n\nOnly the authenticated student user may perform updates on their own account.","summary":"Update student user information","parameters":[{"name":"studentId","description":"Unique identifier of the student user","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Student user update data","typeName":"IStudyPlannerStudent.IUpdate"},"responseBody":{"description":"Updated detailed student user information","typeName":"IStudyPlannerStudent"},"authorizationRoles":["student"],"path":"/studyPlanner/student/students/{studentId}","method":"put","name":"update","authorizationRole":"student","authorizationType":null},{"specification":"Perform a soft deletion of the student user identified by studentId by setting the deleted_at timestamp in the study_planner_students table. Only the authenticated student user can delete their own account.","description":"Soft delete the student user account by setting the deleted_at field to the current timestamp, effectively marking the account as inactive while preserving data for audit.\n\nNo response body is returned upon successful deletion. Authorization ensures only the account owner can perform this operation.\n\nThis soft delete mechanics are in accordance with the Prisma schema soft deletion field guidelines.","summary":"Soft delete the student user account","parameters":[{"name":"studentId","description":"Unique identifier of the student user","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/students/{studentId}","method":"delete","name":"erase","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of study phases, allowing clients to search, filter, and sort the available study phases. It operates on the study_planner_study_phases table from the Prisma schema, which stores the distinct phases (preview, main learning, review) available in the study planner system. This endpoint supports complex queries with pagination, sorting by created_at, name, or code, and filtering by code or name, enabling clients to efficiently find phases relevant to their needs.","description":"Retrieve a filtered and paginated list of study phases from the study planner system. Each phase represents a distinct stage of study, such as preview, main learning, or review.\n\nThis operation is read-only and accessible publicly or to authenticated users according to authorization roles. It can be used to populate UI dropdowns or filters.\n\nThe study phases are immutable in terms of their core identity; however, this operation facilitates flexible retrieval for display, reporting, or selection purposes.\n\nSearch and sorting operations are based on indexed fields such as code and name.\n\nNo sensitive data is exposed through this endpoint, and it supports pagination to handle potentially large datasets.","summary":"Search and retrieve a filtered, paginated list of study phases","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering study phases","typeName":"IStudyPlannerStudyPhases.IRequest"},"responseBody":{"description":"Paginated list of study phase summaries matching search criteria","typeName":"IPageIStudyPlannerStudyPhases.ISummary"},"authorizationType":null,"authorizationRole":"student","path":"/studyPlanner/student/studyPhases","method":"patch","name":"index"},{"specification":"This operation retrieves detailed information about a specific study phase by its unique identifier. It operates on the study_planner_study_phases table from the Prisma schema, fetching all properties of a study phase including code, name, description, and timestamps.\n\nThe single study phase entity is fetched by its primary key UUID, ensuring precise and efficient access. This operation is typically used to display detailed phase information for editing or viewing purposes.\n\nAuthorization ensures only authenticated users or appropriate roles can access detailed phase data.\n\nIf the phase is not found, the endpoint will respond with a 404 error.","description":"Retrieve detailed information about a specific study phase identified by its ID.\n\nStudy phases represent the distinct phases of study such as preview, main learning, and review.\n\nThis operation requires the path parameter studyPhaseId as a UUID identifying the target phase.\n\nThe retrieved data includes code, name, optional description, and timestamps for creation and updates.\n\nOnly authenticated users can access this detailed view.\n\nErrors such as not found or invalid UUID result in appropriate HTTP error codes.","summary":"Retrieve detailed study phase information by ID","parameters":[{"name":"studyPhaseId","description":"Unique identifier of the target study phase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed study phase information","typeName":"IStudyPlannerStudyPhases"},"authorizationType":null,"authorizationRole":"student","path":"/studyPlanner/student/studyPhases/{studyPhaseId}","method":"get","name":"at"},{"specification":"This operation creates a new study phase record in the study_planner_study_phases table within the Prisma schema. The client must supply the phase's unique code, name, and an optional detailed description.\n\nThe created record includes timestamps for creation and updates automatically by the system.\n\nValidation ensures that the code is unique and the name is provided. This operation is typically restricted to admin users who manage study phase definitions.\n\nUpon successful creation, the newly created study phase data is returned.","description":"Create a new study phase with code, name, and optional description.\n\nStudy phases categorize study activities into preview, main learning, and review phases.\n\nThis operation allows authorized administrative users to add new study phases.\n\nInput validation ensures unique codes and required names.\n\nThe system generates creation and update timestamps.\n\nReturns the full details of the created phase record.","summary":"Create a new study phase","parameters":[],"requestBody":{"description":"Information required to create a new study phase","typeName":"IStudyPlannerStudyPhases.ICreate"},"responseBody":{"description":"Details of the created study phase","typeName":"IStudyPlannerStudyPhases"},"authorizationType":null,"authorizationRole":"admin","path":"/studyPlanner/student/studyPhases","method":"post","name":"create"},{"specification":"This operation updates an existing study phase record in the study_planner_study_phases table. The phase is identified by the UUID path parameter studyPhaseId. Clients can update the code, name or description.\n\nValidation rules enforce the uniqueness of the code, and the presence of a name.\n\nTimestamps are updated upon modification.\n\nOnly authorized administrative users can perform updates.\n\nThe operation returns the updated full study phase data.\n\nIf the target phase does not exist, a 404 error is returned.","description":"Update an existing study phase identified by its ID.\n\nAllows modification of code, name, and description.\n\nEnsures code uniqueness and name presence.\n\nAuthorized admin users only.\n\nThe updated record's full details are returned.\n\nProper error handling for non-existent phases or validation errors is implemented.","summary":"Update study phase information by ID","parameters":[{"name":"studyPhaseId","description":"Unique identifier of the study phase to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update study phase details","typeName":"IStudyPlannerStudyPhases.IUpdate"},"responseBody":{"description":"Updated study phase information","typeName":"IStudyPlannerStudyPhases"},"authorizationType":null,"authorizationRole":"admin","path":"/studyPlanner/student/studyPhases/{studyPhaseId}","method":"put","name":"update"},{"specification":"This operation permanently deletes a specified study phase from the study_planner_study_phases table, identified by its UUID. Study phases categorize study tasks into preview, main learning, and review to structure student learning progress.","description":"This endpoint allows admins to permanently erase a study phase record identified by the path parameter `studyPhaseId`. Deleting a study phase removes it completely from the system, which impacts categorization of study tasks associated with that phase.\n\nOnly users with the \"student\" role are authorized to perform this operation as per system policy.\n\nThe operation requires the UUID of the target study phase and performs a hard delete.\n\nNo response body is returned on successful deletion.\n\nReturns 404 if study phase not found, and 401 if unauthorized access.","summary":"Delete a specific study phase permanently","parameters":[{"name":"studyPhaseId","description":"Unique identifier of the target study phase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/studyPhases/{studyPhaseId}","method":"delete"},{"specification":"Retrieve paginated list of study subject categories from the study_planner_subject_categories table with optional filters such as code and name. Supports sorting and pagination to manage category data efficiently.","description":"Retrieve a paginated and filtered list of subject categories that classify study tasks under various subjects including English grammar, vocabulary, and speaking. The endpoint supports filtering by name or code, sorting, and pagination to efficiently browse categories.\n\nOnly authenticated users having the \"student\" role are authorized for querying this data.\n\nThe response returns summary category information suitable for list display.","summary":"Search and retrieve a paginated list of study subject categories","parameters":[],"requestBody":{"description":"Filtering, pagination, and sorting parameters for subject category search","typeName":"IStudyPlannerSubjectCategories.IRequest"},"responseBody":{"description":"Paginated list of subject category summary information matching search criteria","typeName":"IPageIStudyPlannerSubjectCategories.ISummary"},"authorizationType":null,"authorizationRole":"student","name":"index","path":"/studyPlanner/student/subjectCategories","method":"patch"},{"specification":"Retrieve detailed information of a single subject category by its UUID from the study_planner_subject_categories table. Subject categories organize study tasks under various educational subjects, including English language topics like grammar and vocabulary.","description":"This endpoint returns full details of a specific subject category identified by path parameter `subjectCategoryId`. The category includes code, name, description, and timestamps.\n\nUsers with the \"student\" role can access this endpoint.\n\nIf the requested category does not exist, a 404 error is returned.\n\nProper authorization is enforced to secure category data.","summary":"Retrieve detailed information of a specific subject category","parameters":[{"name":"subjectCategoryId","description":"Unique identifier of the target subject category","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed subject category information","typeName":"IStudyPlannerSubjectCategories"},"authorizationType":null,"authorizationRole":"student","name":"at","path":"/studyPlanner/student/subjectCategories/{subjectCategoryId}","method":"get"},{"specification":"Create a new subject category record in the study_planner_subject_categories table with a unique code, human-readable name, and optional description. This categorizes study tasks under defined subjects, enabling improved organization and filtering.","description":"This endpoint allows a student to create a new study subject category with required fields code and name, and an optional description.\n\nThe new category is returned on successful creation.\n\nAuthorization requires the user to have the \"student\" role.\n\nInput must comply with the IStudyPlannerSubjectCategories.ICreate schema.","summary":"Create a new study subject category","parameters":[],"requestBody":{"description":"Information required for subject category creation","typeName":"IStudyPlannerSubjectCategories.ICreate"},"responseBody":{"description":"Newly created subject category details","typeName":"IStudyPlannerSubjectCategories"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/subjectCategories","method":"post"},{"specification":"This operation updates an existing subject category identified by subjectCategoryId. It operates on the study_planner_subject_categories table from the Prisma schema. Users with the student role can modify the code, name, and description of a subject category. The operation requires validation that the subjectCategoryId exists and the user has appropriate authorization to update it. The update supports partial modifications with provided fields being updated accordingly. It enforces unique constraints on the code and performs validation of text lengths and formats as per the schema. This operation is intended for authorized student users managing study subject categorizations.","description":"Update the information of a specific subject category based on its unique identifier. This includes changing the unique code, the human-readable name, and optionally the description of the subject category.\n\nOnly authenticated student users can perform this update to maintain data integrity and consistency. This operation works directly with the study_planner_subject_categories table.\n\nThe system validates uniqueness of the code to avoid conflicts and ensures text fields conform to expected lengths.\n\nThis operation integrates with other APIs that list and retrieve subject categories to provide a full management experience.\n\nIf the specified subjectCategoryId does not exist, the system returns an error.\n\nNo response body is included as the operation focuses on update confirmation.","summary":"Update a subject category by ID","parameters":[{"name":"subjectCategoryId","in":"path","description":"Unique identifier of the subject category to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Subject category update data","typeName":"IStudyPlannerSubjectCategories.IUpdate"},"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/subjectCategories/{subjectCategoryId}","method":"put","name":"update","authorizationRole":"student","authorizationType":null},{"specification":"This operation deletes a subject category record from the study_planner_subject_categories database table. The target category is identified uniquely by the provided subjectCategoryId path parameter. It permanently removes the record from the database without soft deletion. Only authenticated student users can invoke this operation since deletion affects critical categorized data. Relationships with study tasks and analytics referencing the subject category must be handled by cascading or integrity checks as per database rules. Once deleted, all references to this category become invalid.\n","description":"Permanently remove a subject category by its unique identifier from the system.\n\nThis operation deletes the record irreversibly and ensures all dependent data references are managed according to database cascading rules.\n\nOnly authenticated student users are authorized to execute this deletion due to the impact on categorized study data.\n\nAttempting to delete a non-existing category results in an error response.\n\nThere is no response body as the action confirms with standard HTTP status code.\n\nUse this with caution to avoid unintended data loss.","summary":"Delete a subject category by ID","parameters":[{"name":"subjectCategoryId","in":"path","description":"Unique identifier of the subject category to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/subjectCategories/{subjectCategoryId}","method":"delete","name":"erase","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves and filters study tasks created by the authenticated student user. It allows complex search requests supporting pagination, filtering by study phase, subject category, title, and dates, and sorting options. The search operates on the study_planner_study_tasks table linking tasks with their phases, categories, and ownership. Results are paginated with summary data for efficient listing. Authorization restricts results to the current user only.\n","description":"Search and retrieve a filtered and paginated list of study tasks for the authenticated student.\n\nThe operation supports filtering by study phase ID, subject category ID, partial title matching, creation date ranges, sorting by several fields, and pagination.\n\nSecurity enforces that returned tasks belong only to the authenticated student user.\n\nThis operation integrates with create, update, and delete APIs to manage study tasks comprehensively.\n\nResults are returned as task summary information optimized for list rendering.\n","summary":"Search and retrieve study tasks of the authenticated user","parameters":[],"requestBody":{"description":"Search filters and pagination parameters for study tasks","typeName":"IStudyPlannerStudyTasks.IRequest"},"responseBody":{"description":"Paginated list of study task summaries matching search criteria","typeName":"IPageIStudyPlannerStudyTasks.ISummary"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks","method":"patch","name":"index","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves detailed information of a single study task identified by studyTaskId. The data includes task metadata, associated study phase and subject category, attachments, memos, and progress states. It fetches data from the study_planner_study_tasks table and related tables for comprehensive task detail viewing.\n\nAuthorization requires the requester to be the owner of the study task to protect privacy and data integrity. If the task does not exist or does not belong to the user, an error is returned.\n","description":"Retrieve detailed information about a specific study task identified by its ID.\n\nIncludes the task's title, description, associated study phase and subject category details, attachments like images or PDFs, related memos, and the status of study progress phases.\n\nSecurity restricts access to the owner student to prevent unauthorized data exposure.\n\nThis operation is designed to support detailed task review and editing workflows.\n","summary":"Get detailed study task information by ID","parameters":[{"name":"studyTaskId","in":"path","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Study task detailed information","typeName":"IStudyPlannerStudyTasks"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"get","name":"at","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates an existing study task identified by its unique UUID. It allows authenticated students to modify task attributes such as title, description, associated study phase, and subject category within the study planner system. The endpoint interacts directly with the study_planner_study_tasks table and enforces authorization to ensure only owners can update their tasks. Validation rules require that the task title is provided and categories are valid. Upon successful update, the updated study task entity is returned.","description":"This API endpoint is designed for authenticated student users to update their individual study tasks. Each study task is linked to a student, a specific study phase (preview, main learning, review), and a subject category (e.g., English grammar). Authorized users can modify attributes including title and description.\n\nSecurity considerations ensure only the owner of the task (identified by student_id) may successfully update the resource. Invalid or incomplete data will result in a validation error.\n\nThe operation closely interacts with the study_planner_study_tasks table defined in the Prisma schema, which stores the core study task entities including relationships to students, study phases, and subject categories.\n\nValidation rules enforce title presence and correct foreign key association with existing phases and categories. Upon success, the updated task record is returned.\n\nThis operation requires the studyTaskId path parameter that corresponds to the UUID of the target study task to update.\n\nErrors include 400 for validation failure, 403 for unauthorized access, and 404 if the task is not found.","summary":"Update an existing study task by ID","parameters":[{"name":"studyTaskId","description":"UUID of target study task to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for updating the study task","typeName":"IStudyPlannerStudyTask.IUpdate"},"responseBody":{"description":"Updated study task details","typeName":"IStudyPlannerStudyTask"},"authorizationType":null,"authorizationRole":"student","name":"update","path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"put"},{"specification":"This operation permanently deletes a study task identified by its UUID from the study planner system's database, including all related attachments, memos, alarms, and progress records. It is exclusive to authenticated student users who own the task. This deletion removes the record entirely without archival or soft deletion, as the schema supports soft deletion but this endpoint enforces permanent removal.\n\nThe underlying table is study_planner_study_tasks, which is the core entity representing a study task. This delete endpoint ensures cascading deletion of all associated relations to maintain database integrity.\n\nPath parameter studyTaskId identifies the specific study task to remove. Successful deletion yields no content.\n\nSecurity enforcement verifies user ownership before deletion to prevent unauthorized data removal.","description":"Permanently remove a study task and all its related data from the system. This hard delete operation is accessible only to authenticated student users owning the task.\n\nThe operation targets the study_planner_study_tasks table as the main entity in the Prisma schema, ensuring cleanup of all linked attachments, memos, alarms, and progress entries via cascading deletes.\n\nA valid UUID is required as the path parameter to identify the task to delete. The operation returns no content upon success.\n\nErrors include 403 for unauthorized access and 404 if the task is not found.\n\nNo request body is required since it's a delete operation.","summary":"Delete a study task by ID","parameters":[{"name":"studyTaskId","description":"UUID of study task to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"delete"},{"specification":"This operation updates the progress state of a study task's learning phases, allowing authenticated students to mark phases as completed with timestamps. It modifies the study_planner_study_task_progress table to record completion timestamps per phase for a given task.\n\nThe endpoint supports updating completion status, creating or modifying progress entries related to the specified study task and study phase.\n\nPath parameter studyTaskId identifies the target study task for which progress is updated.\n\nA request body containing progress data (completion timestamps per phase) must be provided.\n\nErrors such as 400, 403, and 404 handle validation failure, unauthorized access, or missing records respectively.\n\nOn success, returns detailed progress information related to the study task.","description":"Authenticated students can mark phase completions for their study tasks using this API. It stores or updates completion timestamps per phase for the specified task.\n\nThis operation interacts with the study_planner_study_task_progress entity representing phase-wise progress. It ensures only the owner can update progress.\n\nErrors include unauthorized attempts or invalid data.","summary":"Update progress of a study task","parameters":[{"name":"studyTaskId","description":"UUID of the study task to update progress","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Progress data for study phases","typeName":"IStudyPlannerStudyTaskProgress.IUpdate"},"responseBody":{"description":"Updated progress details for the study task","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationType":null,"authorizationRole":"student","name":"updateProgress","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress","method":"patch"},{"specification":"This operation creates a new study task for the authenticated student user, allowing them to specify its title, optional description, study phase association (such as preview, main learning, or review), and category (including defined subject categories). The endpoint manipulates the study_planner_study_tasks table to insert a new task record.\n\nThe API requires validation of all input parameters to ensure completeness and correctness, such as a non-empty title and valid foreign keys for study phase and category.\n\nUpon successful creation, the newly created study task entity is returned in the response.\n\nThis endpoint requires the student to provide creation details in the request body.","description":"Allows an authenticated student user to create a new study task within the study planner system. The task must be linked to a valid study phase and subject category, with a mandatory title and optional description.\n\nThe system validates inputs rigorously to prevent invalid tasks.\n\nThis endpoint targets the study_planner_study_tasks table, a principal entity managing study tasks, and returns the created record.\n\nErrors include 400 for invalid data and 401 for unauthorized access.\n\nNo path parameter is necessary as the task is newly created.","summary":"Create a new study task","parameters":[],"requestBody":{"description":"Information needed to create a study task","typeName":"IStudyPlannerStudyTask.ICreate"},"responseBody":{"description":"Details of the newly created study task","typeName":"IStudyPlannerStudyTask"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/studyTasks/{studyTaskId}","method":"post"},{"specification":"This operation retrieves a specific study task progress record by its unique identifier. It corresponds to the study_planner_study_task_progress table in the Prisma schema, which tracks progress completion timestamps for study phases within a study task. This GET endpoint enables authenticated users (role: student) to fetch detailed progress status for a particular phase of a study task.","description":"Retrieve detailed progress information for a specific study task phase by progress ID.\n\nThis operation allows an authenticated student to access the completion state and timestamps of a study phase associated with a study task. It references the study_planner_study_task_progress table which stores the completion timestamp (`completed_at`), creation and update times for tracking progress.\n\nSecurity considerations include ensuring the requester is authenticated and authorized to view this progress record.\n\nThis operation works in conjunction with other study task and progress operations, providing fine-grained progress details.\n\nErrors will be returned if the specified progress ID does not exist or access is unauthorized.","summary":"Retrieve study task progress details by progress ID","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}},{"name":"progressId","description":"Unique identifier for the target progress record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed study task progress information","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationRoles":["student"],"name":"at","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress/{progressId}","method":"get","authorizationRole":"student","authorizationType":null},{"specification":"This operation creates a new progress entry for a study phase within a specific study task. The study_planner_study_task_progress table tracks per-phase completion timestamps, and this POST endpoint enables authenticated users (role: student) to record progress updates. It requires specifying the studyTaskId in the path to associate the progress to the correct task.","description":"Create a new progress record for a specific study task and study phase.\n\nAuthenticated students can record the completion timestamp for a study phase linked to a study task. The request body must provide all required data fields defined by the study_planner_study_task_progress entity except auto-generated IDs and timestamps.\n\nThe system validates the study phase relevance and ensures duplicate progress entries for the same study phase and task do not occur.\n\nUpon successful creation, the newly created progress record is returned.\n\nThis is part of the study lifecycle management enabling detailed tracking of each study phase progress.","summary":"Create study task progress record","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Creation info of study task progress","typeName":"IStudyPlannerStudyTaskProgress.ICreate"},"responseBody":{"description":"Created study task progress record","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationRoles":["student"],"name":"create","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress","method":"post","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates an existing progress record of a study phase for a study task in the study_planner_study_task_progress table. It supports updating completion timestamps and other modifiable properties. Requires authenticated users (role: student) to provide the studyTaskId in the path and the progressId of the progress to update.","description":"Update an existing study task progress record.\n\nAuthenticated student users can modify completion timestamps or other allowed fields of a progress entry associated with a study phase and study task.\n\nThe system validates the existence of the progress record and permissions.\n\nUpon success, the updated record is returned.\n\nThis endpoint supports accurate study phase progress management within the study lifecycle.","summary":"Update study task progress record","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}},{"name":"progressId","description":"Unique identifier for the target progress record","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update information for study task progress","typeName":"IStudyPlannerStudyTaskProgress.IUpdate"},"responseBody":{"description":"Updated study task progress record","typeName":"IStudyPlannerStudyTaskProgress"},"authorizationRoles":["student"],"name":"update","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress/{progressId}","method":"put","authorizationRole":"student","authorizationType":null},{"specification":"This operation deletes a specific progress record for a study phase within a study task. It corresponds to the study_planner_study_task_progress table deletion. This is a hard delete operation as the schema has no soft delete field for this table. Authorization checks ensure only owning users can delete their progress entries.","description":"Permanently delete a study task progress record.\n\nAuthenticated students may remove progress entries for study phases attached to their study tasks. This operation completely removes the record from the database and cannot be undone.\n\nAppropriate authorization is enforced to prevent unauthorized deletion.\n\nThis endpoint is useful for correcting or resetting study phase progress data.","summary":"Delete study task progress record","parameters":[{"name":"studyTaskId","description":"Unique identifier for the target study task","schema":{"type":"string","format":"uuid"}},{"name":"progressId","description":"Unique identifier for the target progress record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"name":"erase","path":"/studyPlanner/student/studyTasks/{studyTaskId}/progress/{progressId}","method":"delete","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves the list of attachment files linked to a specific study task in the Study Planner system. It corresponds to the study_planner_attachments table in the Prisma schema, which stores metadata about attachment files such as images or PDFs associated with study tasks. This retrieval supports user interface features displaying all attachments for a given study task, enabling students to view attached study materials. The operation requires the studyTaskId path parameter representing the unique identifier of the study task whose attachments are fetched. The response body returns an array of attachment summaries with essential fields.","description":"Retrieve all attachment files associated with the specified study task. The attachments include images and PDF files linked as study materials.\n\nThis operation requires authentication as only the owner student can access their study task attachments. It uses the studyTaskId path parameter to identify the target study task and returns the relevant attachment data linked by foreign keys.\n\nThe response contains attachment metadata such as file type and file URL necessary to display or download the contents. Access control and validation ensure that users cannot retrieve attachments for others' study tasks.\n\nRelated operations include creating new attachments for a study task or retrieving an individual attachment by ID.\n\nErrors may occur if the studyTaskId does not exist or if access is unauthorized, resulting in 404 Not Found or 403 Forbidden responses respectively.","summary":"List all attachments for a study task","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"List of study task attachment summaries","typeName":"IPageIStudyPlannerAttachment.ISummary"},"authorizationRoles":["student"],"name":"index","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments","method":"patch","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves detailed metadata of a specific attachment file associated with a study task in the Study Planner system. It uses the studyTaskId and attachmentId path parameters, which uniquely identify the study task and attachment respectively. The Prisma schema's study_planner_attachments table contains attachment information including file type and file URL. This retrieval is essential for displaying or downloading the exact attached file.\n\nOnly authorized student users who own the associated study task can access the attachment. Proper authorization and validation ensure security.\n\nUpon success, the response includes the full attachment data as per the IStudyPlannerAttachment DTO.","description":"Retrieve detailed information of a specific attachment by its ID for a given study task.\n\nThis endpoint requires authentication and authorization ensuring the requesting user owns the study task.\n\nThe response provides metadata about the attachment such as file type and URL needed for rendering or download.\n\nErrors include 404 if attachment or study task is not found and 403 if user lacks permission.","summary":"Retrieve a specific attachment by ID","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"attachmentId","description":"Unique identifier of the target attachment","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the specified attachment","typeName":"IStudyPlannerAttachment"},"authorizationRoles":["student"],"name":"at","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments/{attachmentId}","method":"get","authorizationRole":"student","authorizationType":null},{"specification":"This operation creates a new attachment for a specified study task in the Study Planner system. The attachment may be an image (JPEG, PNG) or PDF file linked as study material. The request body includes file metadata such as file type (e.g., image/jpeg, application/pdf) and a URI file_url to identify the stored file.\n\nThe Prisma schema's study_planner_attachments table records these attachments and associates them with the study task via study_task_id.\n\nAuthorization requires the student user to own the study task to add attachments. The server validates file types and size limits as per business rules (max 10MB, allowed types jpeg, png, pdf).\n\nThe response returns the created attachment's detailed data.","description":"Create a new attachment entry linked to a study task. The client provides metadata about the uploaded file including type and storage URL.\n\nAuthentication and ownership validation are required to ensure only the owning student can add attachments to their study tasks.\n\nValidation is performed to ensure file type and size constraints are met.\n\nErrors return appropriate status codes for invalid input or unauthorized access.","summary":"Add a new attachment to a study task","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attachment creation data including file type and file URL","typeName":"IStudyPlannerAttachment.ICreate"},"responseBody":{"description":"Created attachment detailed information","typeName":"IStudyPlannerAttachment"},"authorizationRoles":["student"],"name":"create","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments","method":"post","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates an existing attachment linked to a specific study task in the Study Planner system. The request contains updated metadata such as file type or file URL. The studyTaskId and attachmentId path parameters identify the target study task and attachment.\n\nThis operation enforces that only the owning student can modify attachments via authorization and ownership checks. It validates the updated fields against allowed file types and constraints.\n\nOn success, returns the updated attachment data. Errors include 404 Not Found for invalid IDs and 403 Forbidden for unauthorized access.","description":"Update metadata of an existing attachment linked to a study task.\n\nThe client can modify properties such as file type and file URL.\n\nAuthorization and ownership verification ensure only the user owning the study task may update attachments.\n\nReturns updated attachment information on success. Validation errors or unauthorized access lead to appropriate error responses.","summary":"Modify an attachment of a study task","parameters":[{"name":"studyTaskId","description":"Unique identifier of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"attachmentId","description":"Unique identifier of the target attachment","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Attachment update data including file type and file URL","typeName":"IStudyPlannerAttachment.IUpdate"},"responseBody":{"description":"Updated attachment detailed information","typeName":"IStudyPlannerAttachment"},"authorizationRoles":["student"],"name":"update","path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments/{attachmentId}","method":"put","authorizationRole":"student","authorizationType":null},{"specification":"This operation deletes a specific attachment file linked to a user's study task in the StudyPlanner system. It targets the 'study_planner_attachments' table in the Prisma schema responsible for storing metadata about attachment files such as images and PDFs linked to study tasks. The operation requires identifiers for both the study task and the specific attachment file to ensure proper ownership and resource targeting. When executed, the specified attachment record is permanently removed from the database along with its associated metadata. Security considerations mandate that only the authenticated student owner of the study task can perform this deletion, preventing unauthorized removal of attachments. The operation does not require a request body and does not return any content upon success.","description":"This operation permanently deletes an attachment file associated with a study task owned by the authenticated student user. The attachment represents images or PDFs linked to the task for study-related content management.\n\nThe deletion process fully removes the record from the 'study_planner_attachments' table, including all metadata such as file type and URL. Users must be authorized to act only on their own attachments, ensuring privacy and security.\n\nThe API requires the study task's unique ID and the attachment's unique ID to identify and target the resource precisely. Errors include authorization failure if the user does not own the task, or resource not found if no matching attachment exists. No request body is necessary as all identification comes from path parameters.\n\nUpon success, the system responds with no content, indicating the attachment has been deleted completely and cannot be recovered.","summary":"Delete a specific attachment file linked to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"attachmentId","in":"path","description":"UUID of the target attachment file to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/attachments/{attachmentId}","method":"delete","name":"eraseAttachment","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves all memos linked to a specific study task in the StudyPlanner system. It operates on the 'study_planner_memos' table which stores textual notes associated with study tasks. The memos provide additional contextual information or notes related to the user's learning activities. The operation requires the ID of the study task to fetch all related memos. It supports secure retrieval by ensuring only the authenticated owner can obtain memos of their own tasks. Returned data includes an array of memo entities with memo text and timestamps for creation and updates.","description":"Retrieve all memo notes associated with a specific study task owned by the authenticated student. Memos provide textual notes supporting study activities.\n\nThis operation queries the 'study_planner_memos' table to return all memos linked to the specified study task.\n\nSecurity controls ensure only the owner of the study task can retrieve its memos. No request body is required as the input is solely the study task ID in the URL path.\n\nThe response includes an array of memo objects with memo text, creation, and update timestamps, enabling clients to display or edit notes.\n\nErrors include unauthorized access if the user does not own the task, or not found if the task does not exist.","summary":"Retrieve memos linked to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Array of memo objects associated with the study task","typeName":"IStudyPlannerStudyPlannerMemoArray"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos","method":"patch","name":"indexMemos","authorizationRole":"student","authorizationType":null},{"specification":"This operation retrieves a specific memo associated with a given study task in the StudyPlanner system. It uses the 'study_planner_memos' table from the Prisma schema, which stores memo texts providing notes linked to study tasks. The operation requires identifiers for both the study task and the memo. It ensures secure access by allowing only the authenticated owner of the study task to fetch memo details. The returned object contains the memo text along with creation and update timestamps for client display or editing purposes.","description":"Retrieve a single memo note identified by 'memoId' that belongs to the specified study task for the authenticated student user.\n\nThis operation queries the 'study_planner_memos' table to fetch the particular memo entity linked to the study task.\n\nSecurity ensures that only the task owner can access the memo details.\n\nThe response contains memo text, creation date, and last update date.\n\nErrors may be returned if the memo or study task does not exist or the user lacks authorization.","summary":"Retrieve details of a specific memo attached to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}},{"name":"memoId","in":"path","description":"UUID of the memo to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Memo object retrieved","typeName":"IStudyPlannerStudyPlannerMemo"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos/{memoId}","method":"get","name":"atMemo","authorizationRole":"student","authorizationType":null},{"specification":"This operation creates a new memo note for a specific study task in the StudyPlanner system. It interacts with the 'study_planner_memos' table holding textual memos linked to study tasks. The operation requires the ID of the study task to associate the new memo and a request body containing the memo text. It enforces security by allowing only the authenticated owner of the study task to add memos. Upon successful creation, the new memo object including creation and update timestamps is returned for client usage.","description":"Create a new memo note associated with the specified study task owned by the authenticated student user.\n\nThis operation adds a record to the 'study_planner_memos' table linking text notes to the study task to support user note-taking.\n\nAuthentication and authorization ensure only the owner can create memos for their task.\n\nThe request body must contain the memo text content.\n\nThe response returns the created memo object with its timestamps.\n\nErrors include validation failures if memo text is invalid or missing.\n\nThis operation helps users enrich their study tasks with additional textual information.","summary":"Create a memo note linked to a study task","parameters":[{"name":"studyTaskId","in":"path","description":"UUID of the target study task","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Memo creation data","typeName":"IStudyPlannerStudyPlannerMemoICreate"},"responseBody":{"description":"Created memo object","typeName":"IStudyPlannerStudyPlannerMemo"},"authorizationRoles":["student"],"path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos","method":"post","name":"createMemo","authorizationRole":"student","authorizationType":null},{"specification":"This operation updates a specific memo associated with a particular study task in the StudyPlanner backend database. It modifies the memo text content and updates timestamps accordingly. It operates on the 'study_planner_memos' table in the database schema. The operation requires the IDs of the parent study task and the memo to identify the target memo record precisely. It checks that the memo belongs to the specified study task. Typical validation includes verifying memo_text length and ownership. Because memo management is user-critical, authentication is required. No request body returns are expected other than the updated memo.","description":"This API operation allows an authenticated student user to update the content of an existing memo linked to one of their study tasks.\n\nThe memo is uniquely identified by both the study task ID and memo ID provided in the request path parameters.\n\nSecurity considerations require that only the owning student can update the memo associated with their study task.\n\nThe operation updates the 'memo_text' field and the 'updated_at' timestamp in the 'study_planner_memos' database table.\n\nValidation includes ensuring the memo_text is a non-empty string that meets length constraints.\n\nErrors include 401 Unauthorized if the user is not authenticated or not owner, 404 Not Found if memo or study task do not exist, and 400 Bad Request if validation fails.\n\nSuccessful response returns the updated memo entity as detailed in the response body.","summary":"Update a memo entry of a study task in the StudyPlanner database","parameters":[{"name":"studyTaskId","description":"Unique identifier of the parent study task","schema":{"type":"string","format":"uuid"}},{"name":"memoId","description":"Unique identifier of the memo to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Memo update payload containing new memo text","typeName":"IStudyPlannerStudyPlannerMemos.IUpdate"},"responseBody":{"description":"Updated study task memo entity","typeName":"IStudyPlannerStudyPlannerMemos"},"authorizationType":null,"authorizationRole":"student","name":"updateMemo","path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos/{memoId}","method":"put"},{"specification":"This operation deletes a specific memo associated with a study task in the StudyPlanner system. It removes the memo entirely from the 'study_planner_memos' table based on the memo ID and parent study task ID. This is a hard delete operation as the schema does not have soft delete for memos. Access is restricted to authenticated student users owning the study task. No request body is needed. Successful deletion returns no content.","description":"This API endpoint enables authenticated student users to completely remove a memo attached to their study task.\n\nThe memo to delete is specified via the memo ID and the parent study task ID path parameters ensuring exact identification.\n\nSecurity checks ensure only the owner can delete their memo.\n\nBeing a hard delete, the memo record is removed fully from the database.\n\nIf the memo or task does not exist or does not belong to the user, appropriate errors are returned.\n\nSuccessful response is empty with HTTP 204 No Content status.\n\nThis operation is part of the resource management workflow enabling users to clean up their study task notes.","summary":"Delete a memo entry from a study task in the StudyPlanner database","parameters":[{"name":"studyTaskId","description":"Unique identifier of the parent study task","schema":{"type":"string","format":"uuid"}},{"name":"memoId","description":"Unique identifier of the memo to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"eraseMemo","path":"/studyPlanner/student/studyTasks/{studyTaskId}/memos/{memoId}","method":"delete"},{"specification":"This operation retrieves a paginated and filtered list of task alarms set by authenticated student users in the StudyPlanner backend. These alarms are linked to study tasks and trigger notifications at scheduled times. The result supports searching by student id, task id, alarm time, and pagination/sorting. It operates on the 'study_planner_task_alarms' table. Authorization is required to view a user's own alarms. The operation returns a paginated list of alarms with summary data.","description":"Retrieve a paginated list of task alarms associated with study tasks for the authenticated student.\n\nThis search API supports filtering by various criteria such as alarm title, time range, and associated study task.\n\nSecurity restrictions ensure a user can only view their own alarms.\n\nThe response contains a paginated list of alarm summaries including alarm ID, title, alarm time, and associated task ID.\n\nErrors include 401 Unauthorized for unauthenticated access.\n\nThis operation supports management of alarms set for study reminders within the StudyPlanner system.","summary":"Search and retrieve a paginated list of task alarms","parameters":[],"requestBody":{"description":"Filtering and pagination parameters for task alarms","typeName":"IStudyPlannerStudyPlannerTaskAlarms.IRequest"},"responseBody":{"description":"Paginated list of task alarm summaries","typeName":"IPageIStudyPlannerStudyPlannerTaskAlarms.ISummary"},"authorizationType":null,"authorizationRole":"student","name":"searchTaskAlarms","path":"/studyPlanner/student/taskAlarms","method":"patch"},{"specification":"This operation retrieves detailed information of a specific task alarm for an authenticated student user in the StudyPlanner backend. The alarm is identified by its unique ID. It returns full alarm details including associated study task and scheduling information. Security ensures only the owner can retrieve this alarm. The operation operates on the 'study_planner_task_alarms' table in the Prisma schema.","description":"Get detailed information about a single task alarm associated with the authenticated user's study tasks.\n\nThis operation requires the path parameter to specify the exact alarm ID.\n\nSecurity checks ensure only the owner student can access their task alarm.\n\nSuccessful requests return the complete task alarm record including timestamps, title, alarm time, and associated study task.\n\nErrors include 401 Unauthorized if not logged in, 404 Not Found if alarm does not exist or does not belong to the user.\n\nThis operation supports alarm management features in the StudyPlanner system.","summary":"Retrieve detailed information of a specific task alarm","parameters":[{"name":"taskAlarmId","description":"Unique identifier of the task alarm to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed task alarm information","typeName":"IStudyPlannerStudyPlannerTaskAlarms"},"authorizationType":null,"authorizationRole":"student","name":"atTaskAlarm","path":"/studyPlanner/student/taskAlarms/{taskAlarmId}","method":"get"},{"specification":"This operation creates a new study task alarm for an authenticated student user, associating the alarm with a specific study task. It stores alarm details such as title and scheduled alarm time. This operation allows students to set reminders for their study tasks to receive PWA notifications at designated times. The underlying database table is study_planner_task_alarms, which manages user-specific alarms linked to study tasks. Validation ensures the student owns the task and that alarm_time is a valid future timestamp. Duplicate alarms with identical student_id, study_task_id, and alarm_time are prevented by a uniqueness constraint.","description":"Create a new alarm for a study task in the study planner system.\n\nThis operation enables authenticated student users to set alarms for their individual study tasks. The alarm includes a user-friendly title and a scheduled timestamp when the PWA notification should trigger.\n\nSecurity considerations ensure only the owning student can create alarms for their tasks. Validation on the alarm time and uniqueness constraints prevent duplicate alarms.\n\nThis API interfaces with the study_planner_task_alarms table, which holds individual alarms referencing the study task and student.\n\nExpected behavior involves storing the alarm record and returning the created alarm details upon success.\n\nIf the user is unauthorized or provides invalid data, appropriate errors are returned.","summary":"Create a new study task alarm","parameters":[],"requestBody":{"description":"Information required to create a new study task alarm","typeName":"IStudyPlannerTaskAlarm.ICreate"},"responseBody":{"description":"The created study task alarm information","typeName":"IStudyPlannerTaskAlarm"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/taskAlarms","method":"post"},{"specification":"Update an existing study task alarm belonging to an authenticated student user. Allows modification of the alarm title and the scheduled alarm time. The operation ensures ownership verification, valid alarm time, and respects the uniqueness constraint to prevent conflicts with existing alarms. It operates on the study_planner_task_alarms table which stores user-specific alarms linked to study tasks.","description":"Update the properties of an existing study task alarm.\n\nThis operation allows a student to modify their previously set alarm's title and trigger time. It validates ownership, ensuring the alarm belongs to the requesting student, and checks for valid input including future alarm times.\n\nThe operation guarantees no duplication with other alarms having the same student, study task, and alarm time.\n\nThe underlying data resides in the study_planner_task_alarms table with all relevant constraints.\n\nSuccessful updates return the updated alarm details; errors such as unauthorized access or invalid input return appropriate status codes.","summary":"Update an existing study task alarm","parameters":[{"name":"taskAlarmId","description":"Unique identifier of the target task alarm","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the study task alarm","typeName":"IStudyPlannerTaskAlarm.IUpdate"},"responseBody":{"description":"The updated study task alarm information","typeName":"IStudyPlannerTaskAlarm"},"authorizationType":null,"authorizationRole":"student","name":"update","path":"/studyPlanner/student/taskAlarms/{taskAlarmId}","method":"put"},{"specification":"This operation deletes a study task alarm permanently for an authenticated student user. It verifies that the alarm identified by the taskAlarmId belongs to the requesting student. The underlying storage is the study_planner_task_alarms table which includes a soft delete field, but this operation performs a hard delete removing the record entirely from the database. The process ensures integrity by cascading deletions appropriately and confirming authorization before deletion.","description":"Delete an existing study task alarm.\n\nThis operation permanently removes a specified alarm associated with a student's study task from the system. Prior authorization checks ensure that only the owner can delete their alarms to maintain data security.\n\nThe deletion is definitive; data cannot be recovered once erased.\n\nData integrity is maintained by cascading or adjusting any dependent data relating to the deleted alarm.\n\nErrors for unauthorized access or missing records are handled with proper error codes.","summary":"Delete a study task alarm","parameters":[{"name":"taskAlarmId","description":"Unique identifier of the target task alarm","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/taskAlarms/{taskAlarmId}","method":"delete"},{"specification":"Retrieve a paginated, filtered list of general reminders for the authenticated student user. These reminders are not tied to specific study tasks but serve as general notifications. The operation interfaces with the study_planner_general_reminders table, supporting search and filtering capabilities by title, due time, and active status. Pagination and sorting options allow clients to receive manageable chunks of reminders. The response includes summary information optimized for list display.","description":"Get a paginated list of general reminders.\n\nThis operation returns general reminder records created by the authenticated student. These reminders are independent of study tasks and serve as personal notifications or to-do items.\n\nFiltering by title, reminder status, and due time range is supported to allow users to narrow down results.\n\nPagination parameters control data volume and sorting by due time or creation date.\n\nSecurity ensures only the authenticated user's reminders are returned.\n\nData is fetched from the study_planner_general_reminders table.\n\nInvalid input leads to error responses with validation details.","summary":"Retrieve a filtered, paginated list of general reminders","parameters":[],"requestBody":{"description":"Filtering, search, and pagination parameters for general reminders","typeName":"IStudyPlannerGeneralReminder.IRequest"},"responseBody":{"description":"Paginated list of general reminders","typeName":"IPageIStudyPlannerGeneralReminder.ISummary"},"authorizationType":null,"authorizationRole":"student","name":"index","path":"/studyPlanner/student/generalReminders","method":"patch"},{"specification":"This operation retrieves detailed information of a general reminder by its unique identifier (generalReminderId) from the study_planner_general_reminders table in the Prisma database. It is designed to allow authenticated student users to view their own general reminders, which are not tied to specific study tasks but provide scheduled notifications with title, due time, optional descriptions, and active status. The operation ensures that only authenticated users can access their reminders and that the reminder exists and belongs to the user. It returns the full detailed reminder record including all timestamps and active flags.","description":"Retrieve detailed information about a single general reminder based on its UUID identifier. This operation fetches the reminder data from the study_planner_general_reminders table.\n\nOnly authenticated users can perform this operation to ensure privacy and security of user-specific reminder data.\n\nThe reminder is uniquely identified by the path parameter generalReminderId, which corresponds to the primary key UUID field in the database. The returned data includes the reminder title, scheduled due time, optional description, active status indicating if the reminder is currently effective, and timestamps for creation and updates.\n\nIf the specified general reminder does not exist or does not belong to the authenticated user, the operation will result in an appropriate 404 Not Found or authorization error response handled by the service logic.\n\nNo request body is needed as the identifier is provided in the URL path, and the response body returns the main IStudyPlannerGeneralReminder entity.","summary":"Retrieve detailed information of a general reminder by its ID","parameters":[{"name":"generalReminderId","description":"Unique UUID identifier of the general reminder","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed general reminder entity","typeName":"IStudyPlannerGeneralReminder"},"authorizationType":null,"authorizationRole":"student","name":"at","path":"/studyPlanner/student/generalReminders/{generalReminderId}","method":"get"},{"specification":"This operation creates a new general reminder record for an authenticated student user in the study_planner_general_reminders table. It requires a request body containing the reminder title, due time, optional description, and active status flag. Upon successful creation, the operation returns the full created general reminder entity with all associated metadata including creation and update timestamps. The system enforces that reminders are associated with the authenticated user, and proper validation ensures all required fields are provided and valid.","description":"Create a new general reminder linked to the authenticated student user. The request body must include a title, due time in ISO 8601 format, an optional description, and the active flag status.\n\nThe system validates that the user is authenticated before creating the reminder.\n\nAfter successful creation, the newly created general reminder entity is returned in the response, containing all fields stored including timestamps.\n\nThis operation operates on the study_planner_general_reminders table and ensures user ownership and data integrity.","summary":"Create a new general reminder for the authenticated user","parameters":[],"requestBody":{"description":"Information for the new general reminder","typeName":"IStudyPlannerGeneralReminder.ICreate"},"responseBody":{"description":"The created general reminder entity","typeName":"IStudyPlannerGeneralReminder"},"authorizationType":null,"authorizationRole":"student","name":"create","path":"/studyPlanner/student/generalReminders","method":"post"},{"specification":"This operation updates an existing general reminder identified by generalReminderId for the authenticated student user. It accepts a request body with updatable fields such as title, due time, optional description, and active status. The operation validates input fields and user ownership before applying the updates in the study_planner_general_reminders table. Upon success, it returns the updated full general reminder entity reflecting all latest data and timestamps.","description":"Update an existing general reminder identified by its UUID in the system. The authenticated user can modify the title, due time, optional description, and active status via the request body.\n\nThe operation ensures that the general reminder to be updated belongs to the authenticated user.\n\nReturns the fully updated general reminder entity after applying all changes.\n\nThis operation acts on the study_planner_general_reminders table as defined in the Prisma schema.","summary":"Update an existing general reminder by ID","parameters":[{"name":"generalReminderId","description":"Unique UUID identifier of the general reminder to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the general reminder","typeName":"IStudyPlannerGeneralReminder.IUpdate"},"responseBody":{"description":"The updated general reminder entity","typeName":"IStudyPlannerGeneralReminder"},"authorizationType":null,"authorizationRole":"student","name":"update","path":"/studyPlanner/student/generalReminders/{generalReminderId}","method":"put"},{"specification":"This operation deletes a general reminder record identified by the generalReminderId for the authenticated student user. It performs a hard delete removing the record permanently from the study_planner_general_reminders table as the schema does not define a soft-delete column for this entity. The operation validates user ownership and existence of the reminder before deletion. No request body or response body is required. After completion, the reminder data is permanently removed and cannot be recovered.","description":"Delete a general reminder permanently from the system using its unique UUID identifier. The reminder to be deleted must belong to the authenticated user.\n\nSince the database schema does not provide a soft-delete column for the general reminders table, this operation performs a hard delete removing the record permanently.\n\nReturns no content upon successful deletion.\n\nThis operation acts directly on the study_planner_general_reminders table according to the Prisma schema specifications.","summary":"Delete a general reminder by ID permanently","parameters":[{"name":"generalReminderId","description":"Unique UUID identifier of the general reminder to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"student","name":"erase","path":"/studyPlanner/student/generalReminders/{generalReminderId}","method":"delete"},{"specification":"Manage the aggregated study progress analytics for authenticated students in the studyPlanner system. This operation retrieves a paginated and filtered list of study progress analytics data, operating on the study_planner_study_progress_analytics table. It provides metrics such as completed tasks count, total tasks count, and completion rate per student and study phase. The operation supports filtering, sorting, and pagination and restricts access to data belonging strictly to the authenticated student, enforcing privacy and security.","description":"This operation retrieves a filtered and paginated list of study progress analytics records for the authenticated student in the studyPlanner system. It provides detailed progress metrics for study tasks categorized by study phases like preview, main learning, and review.\n\nOnly authenticated students can access their own study progress analytics data to ensure user privacy and security.\n\nThe operation queries the study_planner_study_progress_analytics Prisma table with support for advanced filtering and pagination parameters passed in the request body.\n\nThe response delivers paginated analytics matching search criteria, enabling clients to present summaries and lists.\n\nErrors due to invalid input or unauthorized access are handled with appropriate responses.\n\nTypically used alongside detail retrieval operations for comprehensive analytics management.","summary":"Search and retrieve a filtered, paginated list of study progress analytics","path":"/studyPlanner/student/studyProgressAnalytics","method":"patch","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering study progress analytics","typeName":"IStudyPlannerStudyProgressAnalytics.IRequest"},"responseBody":{"description":"Paginated list of study progress analytics matching search criteria","typeName":"IPageIStudyPlannerStudyProgressAnalytics"},"authorizationType":null,"authorizationRole":"student","name":"index"},{"specification":"Retrieve detailed information for a specific study progress analytics record identified by its UUID. This operation reads from the study_planner_study_progress_analytics table, which tracks metrics on completed tasks, total tasks, and completion rates for study phases per student.\n\nAccess is restricted to the authenticated student to maintain data privacy and security. The response includes comprehensive analytics data for the specified record.\n\nHandles errors related to missing records or unauthorized access with appropriate status codes and messages.","description":"Fetch detailed study progress analytics data for a single record by its unique identifier for the authenticated student. It includes counts of completed tasks, total tasks, and the completion rate for the associated study phase.\n\nAccess is restricted to ensure data privacy; only the owning student can retrieve the record.\n\nThis operation accesses the study_planner_study_progress_analytics Prisma table and provides full analytics details.\n\nProper error handling is included for unauthorized access or not found errors.","summary":"Retrieve detailed study progress analytics by ID","path":"/studyPlanner/student/studyProgressAnalytics/{id}","method":"get","parameters":[{"name":"id","description":"Unique identifier of the study progress analytics record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete study progress analytics record details","typeName":"IStudyPlannerStudyProgressAnalytics"},"authorizationType":null,"authorizationRole":"student","name":"at"},{"specification":"Retrieve a filtered and paginated list of learning gap charts representing areas of study underperformance based on subject categories for the authenticated students. This operation operates on the study_planner_learning_gap_charts table and provides metrics on learning gaps per subject category.\n\nSupports filtering, sorting, and pagination for efficient analytics data retrieval. Access is restricted to the authenticated student to safeguard privacy and security.\n\nInvalid input or unauthorized access is managed through appropriate error responses.","description":"Retrieve a filtered, paginated list of learning gap chart data highlighting student's study subject learning gaps for the authenticated studyPlanner student. The data is grouped by subject categories providing insights into areas needing improvement.\n\nOnly authenticated students should access their own analytics data.\n\nThe operation queries the study_planner_learning_gap_charts Prisma table.\n\nSupports filtering and pagination parameters.\n\nHandles errors gracefully and provides optimized data for frontend visualization.\n\nTypically used in combo with detail retrieval endpoint.","summary":"Search and retrieve a list of learning gap charts with filtering and pagination","path":"/studyPlanner/student/learningGapCharts","method":"patch","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for learning gap charts","typeName":"IStudyPlannerLearningGapCharts.IRequest"},"responseBody":{"description":"Paginated list of learning gap charts matching search criteria","typeName":"IPageIStudyPlannerLearningGapCharts"},"authorizationType":null,"authorizationRole":"student","name":"index"},{"specification":"Retrieve detailed learning gap chart data by its unique identifier for the authenticated studyPlanner student. This operation reads from the study_planner_learning_gap_charts table, which holds analytics on learning gaps per subject category.\n\nAccess is restricted to the authenticated student to ensure privacy and security. The response contains comprehensive data on the specified learning gap chart record.\n\nErrors related to missing resources or unauthorized access are handled appropriately.","description":"Fetch detailed learning gap chart information by unique ID for the authenticated user. The returned data provides specific metrics on student's learning gaps associated with subject categories.\n\nOnly the owning authenticated student can access this data to maintain privacy.\n\nThis operation accesses the study_planner_learning_gap_charts Prisma table and returns complete information.\n\nError responses handle invalid IDs or access violations suitably.","summary":"Retrieve specific learning gap chart details by ID","path":"/studyPlanner/student/learningGapCharts/{id}","method":"get","parameters":[{"name":"id","description":"Unique identifier of the learning gap chart record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed learning gap chart record information","typeName":"IStudyPlannerLearningGapCharts"},"authorizationType":null,"authorizationRole":"student","name":"at"}],"components":{"authorization":[{"name":"student","description":"Authenticated student user who can register, login, manage their learning activities including preview, main learning, review phases, create and update study tasks, set memos and alarms, and view learning progress analytics.","kind":"member"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIStudyPlannerStudent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyPhases.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyPhases.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerSubjectCategories.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerSubjectCategories.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyTasks.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyTasks.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerAttachment.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerAttachment.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyPlannerTaskAlarms.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyPlannerTaskAlarms.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerGeneralReminder.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerGeneralReminder.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerStudyProgressAnalytics":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerStudyProgressAnalytics"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIStudyPlannerLearningGapCharts":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IStudyPlannerLearningGapCharts"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IStudyPlannerStudent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the student user.\n\nMust be a UUID string."},"email":{"type":"string","format":"email","description":"Unique email address used for student login and communication.\n\nMust be a valid email address format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was created.\n\nISO 8601 date-time formatted string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was last updated.\n\nISO 8601 date-time formatted string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp indicating when the student record was soft deleted, if applicable.\n\nISO 8601 date-time formatted string or null if not deleted."}},"required":["id","email","created_at","updated_at","deleted_at"],"description":"Student entity representing authenticated user information used for login and identification.\n\nStores unique email, password hash (not exposed in response types), and audit timestamps.\n\nSupports soft deletion via `deleted_at` field."},"IStudyPlannerStudent.IJoin":{"type":"object","properties":{"email":{"type":"string","description":"Unique email address for registration."},"password":{"type":"string","description":"The plaintext password provided during registration."}},"required":["email","password"],"description":"Request body for user registration (join). Contains email and plaintext password for registration."},"IStudyPlannerStudent.ILogin":{"type":"object","properties":{"email":{"type":"string","description":"User provided email for login."},"password":{"type":"string","description":"User plaintext password for authentication."}},"required":["email","password"],"description":"Request body for user login. Contains email and password for authentication."},"IStudyPlannerStudent.IRefresh":{"type":"object","properties":{"refreshToken":{"type":"string","description":"Refresh token string used to obtain new access token."}},"required":["refreshToken"],"description":"Request body for refreshing JWT tokens. Contains the refresh token string."},"IStudyPlannerStudent.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated student (UUID)."},"email":{"type":"string","format":"email","description":"Unique email address used for student login and communication.\n\nMust be a valid email address format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was created.\n\nISO 8601 date-time formatted string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the student record was last updated.\n\nISO 8601 date-time formatted string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp indicating when the student record was soft deleted, if applicable.\n\nISO 8601 date-time formatted string or null if not deleted."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","created_at","updated_at","deleted_at","token"],"description":"Response type for authorized authentication results containing token and user info."},"IStudyPlannerStudent.IRequest":{"type":"object","properties":{"email":{"oneOf":[{"type":"string","description":"Search by email string. Optional. Can be used for partial matching."},{"type":"null"}],"description":"Search by email string. Optional. Can be used for partial matching."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Pagination page number. Optional. Positive integer.\n\nIf omitted, default pagination applies."},{"type":"null"}],"description":"Pagination page number. Optional. Positive integer.\n\nIf omitted, default pagination applies."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Limit of records per page. Optional. Positive integer.\n\nDefaults to 100 if omitted."},{"type":"null"}],"description":"Limit of records per page. Optional. Positive integer.\n\nDefaults to 100 if omitted."},"sortBy":{"oneOf":[{"type":"string","description":"Sort key for listed students (e.g., created_at, email). Optional."},{"type":"null"}],"description":"Sort key for listed students (e.g., created_at, email). Optional."},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort direction, 'asc' or 'desc'. Optional."},{"const":"desc","description":"Sort direction, 'asc' or 'desc'. Optional."},{"type":"null"}],"description":"Sort direction, 'asc' or 'desc'. Optional."}},"required":[],"description":"Request parameters type for listing and searching study planner students.\n\nIncludes pagination, sorting, filtering options."},"IStudyPlannerStudent.IUpdate":{"type":"object","properties":{"email":{"oneOf":[{"type":"string","format":"email","description":"Email address of the student user.\n\nOptional. Must be valid email format if provided."},{"type":"null"}],"description":"Email address of the student user.\n\nOptional. Must be valid email format if provided."}},"required":[],"description":"Request body for updating student user information.\n\nEmail can be updated; password changes use a separate flow.\nCreated_at and ID are read-only, omitted."},"IStudyPlannerStudyPhases.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"int32","description":"Pagination page number.\nOptional positive integer."},{"type":"null"}],"description":"Pagination page number.\nOptional positive integer."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Limit of records per page.\nOptional positive integer."},{"type":"null"}],"description":"Limit of records per page.\nOptional positive integer."},"code":{"oneOf":[{"type":"string","description":"Filtering code string.\nOptional."},{"type":"null"}],"description":"Filtering code string.\nOptional."},"name":{"oneOf":[{"type":"string","description":"Filtering name string.\nOptional."},{"type":"null"}],"description":"Filtering name string.\nOptional."},"sortBy":{"oneOf":[{"type":"string","description":"Sort field.\nOptional.\nExamples: 'created_at', 'name', 'code'"},{"type":"null"}],"description":"Sort field.\nOptional.\nExamples: 'created_at', 'name', 'code'"},"sortDirection":{"oneOf":[{"const":"asc","description":"Sort direction.\nOptional.\nEnum: 'asc' or 'desc'"},{"const":"desc","description":"Sort direction.\nOptional.\nEnum: 'asc' or 'desc'"},{"type":"null"}],"description":"Sort direction.\nOptional.\nEnum: 'asc' or 'desc'"}},"required":[],"description":"Search and pagination request type for study phases.\nIncludes pagination, filtering and sorting options."},"IStudyPlannerStudyPhases":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key unique identifier of the study phase.\n\nA UUID string representing the unique ID."},"code":{"type":"string","description":"Unique code identifier of the study phase, e.g., 'preview', 'main_learning', 'review'.\n\nUsed as a keyword code for recognizing the study phase."},"name":{"type":"string","description":"Human-readable name of the study phase, e.g., 'Preview'.\n\nThis is the display name shown to users."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the study phase.\n\nMay be null if description is not provided."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp with timezone.\n\nFormat: ISO 8601 date-time string."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp with timezone.\n\nFormat: ISO 8601 date-time string."}},"required":["id","code","name","created_at","updated_at"],"description":"Defines a study phase such as preview, main learning, or review. Each phase categorizes study activities and includes timestamps for record creation and updates.\n\nThe 'code' is a unique string used to identify the phase programmatically.\n\nThe 'name' is the human-readable name for display purposes.\n\nThe optional 'description' provides further details about the phase.\n\nTimestamps track creation and last update times."},"IStudyPlannerStudyPhases.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code identifier of the study phase.\n\nRequired to add a new study phase with a unique code such as 'preview'."},"name":{"type":"string","description":"Human-readable name of the study phase.\n\nRequired name describing the phase for display."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description about the study phase.\n\nCan be null or omitted."}},"required":["code","name"],"description":"Request data to create a new study phase in the system.\n\nRequires unique code and a descriptive name.\n\nDescription is optional and can be null."},"IStudyPlannerStudyPhases.IUpdate":{"type":"object","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifier for the study phase.\n\nOptional update field to modify the code."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable name.\n\nOptional update field to change the phase name."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description.\n\nCan be null to clear or update description."}},"required":[],"description":"Request data to update an existing study phase.\n\nAll fields are optional and nullable to allow partial updates."},"IStudyPlannerSubjectCategories.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","minimum":0},{"type":"null"}],"description":"Page number of the request.\n\nOptional; default pagination parameter."},"limit":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Number of records per page.\n\nOptional limit for pagination."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional search string to filter subject categories by name or code."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Field for sorting results, such as 'created_at', 'name', or 'code'.\n\nOptional sorting key."},"orderDirection":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction, \"asc\" for ascending, \"desc\" for descending.\n\nOptional; must be one of \"asc\" or \"desc\"."}},"required":[],"description":"Search request payload for filtering and paginating subject categories.\n\nIncludes optional paging, search filter, and sorting information."},"IStudyPlannerSubjectCategories":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"code":{"type":"string","description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},"name":{"type":"string","description":"Human-readable name of the subject category, e.g., 'English Grammar'."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the subject category."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."}},"required":["id","code","name","created_at","updated_at"],"description":"Describes a subject category for study tasks including English subcategories such as grammar, vocabulary, speaking."},"IStudyPlannerSubjectCategories.ICreate":{"type":"object","properties":{"code":{"type":"string","description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},"name":{"type":"string","description":"Human-readable name of the subject category, e.g., 'English Grammar'."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the subject category."}},"required":["code","name"],"description":"Used for creating a new study subject category with mandatory code and name."},"IStudyPlannerSubjectCategories.IUpdate":{"type":"object","properties":{"code":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Unique code identifier of the subject category, e.g., 'english_grammar'."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Human-readable name of the subject category, e.g., 'English Grammar'."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the subject category."}},"required":[],"description":"Used for updating an existing study subject category where all fields are optional."},"IStudyPlannerStudyTasks.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Page number for pagination."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Number of items per page (limit)."},"study_phase_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by study phase id."},"subject_category_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by subject category id."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search text to filter study task titles (partial match)."},"orderBy":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"const":"title"},{"type":"null"}],"description":"Sort order."},"direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Ascending or descending order."}},"required":[],"description":"Request parameters to filter, paginate, and sort study task listings."},"IStudyPlannerStudyTasks":{"description":"Study task entity representing an individual learning activity owned by a student.\n\nEach task is linked to a student, a study phase, and a subject category. It stores metadata including a unique UUID, title, optional description, creation/update timestamps, and a soft delete timestamp.\n\nThis entity supports core task management features by tracking the learning goal and associating it with categorized study phases for progress monitoring.","type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the study task (uuid v4)","format":"uuid"},"student_id":{"type":"string","description":"The student UUID who owns this task","format":"uuid"},"study_phase_id":{"type":"string","description":"The study phase UUID e.g. preview, main_learning, review","format":"uuid"},"subject_category_id":{"type":"string","description":"The subject category UUID representing the study topic","format":"uuid"},"title":{"type":"string","description":"Title of the study task describing the learning goal"},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed explanation of the study task"},"created_at":{"type":"string","description":"ISO 8601 timestamp when the record was created","format":"date-time"},"updated_at":{"type":"string","description":"ISO 8601 timestamp of last update","format":"date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if not deleted"}},"required":["id","student_id","study_phase_id","subject_category_id","title","created_at","updated_at"]},"IStudyPlannerStudyTask.IUpdate":{"type":"object","properties":{"study_phase_id":{"type":"string","format":"uuid","description":"Associated study phase {@link study_planner_study_phases.id}"},"subject_category_id":{"type":"string","format":"uuid","description":"Linked subject category {@link study_planner_subject_categories.id}"},"title":{"type":"string","description":"Title of the study task capturing the user's learning goal."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description or notes about the study task."}},"required":[],"description":"Request body properties for updating an existing study task.\n\n@namespace Study\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IStudyPlannerStudyTaskProgress":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID identifier for the study task progress record.\n\nUnique identifier for the progress entry linked to a specific study task and study phase."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task.\n\nLinks progress to a specific study task."},"study_phase_id":{"type":"string","format":"uuid","description":"UUID of the study phase (preview, main learning, review) tracked.\n\nSpecifies which study phase this progress record belongs to."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the study phase was completed for the task.\n\nNullable; null means not yet completed."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation.\n\nIndicates when this progress record was initially created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update.\n\nIndicates the last time this progress record was modified."}},"required":["id","study_task_id","study_phase_id","created_at","updated_at"],"description":"Represents progress tracking state for a study task in a specific study phase. This includes completion timestamps and audit information.\n\nTracks phase completion milestones for tasks to support study lifecycle management and analytics."},"IStudyPlannerStudyTaskProgress.IUpdate":{"description":"Payload to update the completion timestamp of a study task progress entry.\n\nAllows setting or clearing the completed_at timestamp to mark phase completion or incompletion.\n\nOnly the completed_at field is updateable.","type":"object","properties":{"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Completion timestamp (ISO 8601) or null to mark incomplete"}},"required":[]},"IStudyPlannerStudyTask":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"student_id":{"type":"string","format":"uuid","description":"Belonged student's {@link study_planner_students.id}"},"study_phase_id":{"type":"string","format":"uuid","description":"Associated study phase {@link study_planner_study_phases.id}"},"subject_category_id":{"type":"string","format":"uuid","description":"Linked subject category {@link study_planner_subject_categories.id}"},"title":{"type":"string","description":"Title of the study task capturing the user's learning goal."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description or notes about the study task."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the study task was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the study task was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the study task was soft deleted; null if not deleted."}},"required":["id","student_id","study_phase_id","subject_category_id","title","created_at","updated_at"],"description":"Core entity representing a student study task managed independently, linked to a student, study phase, and subject category. Tracks title, optional description, and soft deletion. Supports creation and update timestamps for audit trail.\n\n@namespace Study\n@author AutoBE - https://github.com/wrtnlabs/autobe"},"IStudyPlannerStudyTask.ICreate":{"type":"object","properties":{"student_id":{"type":"string","format":"uuid","description":"UUID of the student creating the study task.\n\nThis associates the task with a specific student owner."},"study_phase_id":{"type":"string","format":"uuid","description":"UUID of the study phase assigned to this task (preview, main learning, review)."},"subject_category_id":{"type":"string","format":"uuid","description":"UUID of the subject category linked to the study task."},"title":{"type":"string","description":"Title of the study task, describing its learning objective."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description or notes about the study task."}},"required":["student_id","study_phase_id","subject_category_id","title"],"description":"Input payload required to create a new study task. Includes student ownership, study phase, subject category, and task title.\n\nAn optional description may be provided."},"IStudyPlannerStudyTaskProgress.ICreate":{"type":"object","properties":{"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task for which progress is created.\n\nLinks the progress record to a specific study task"},"study_phase_id":{"type":"string","format":"uuid","description":"UUID of the study phase being tracked in this progress entry.\n\nSpecifies the study phase this progress entry represents."},"completed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp marking the completion time for the study phase.\n\nNull means phase not completed."}},"required":["study_task_id","study_phase_id","completed_at"],"description":"Input data required to create a new study task progress record for a specific study phase.\n\nIncludes the task and phase identifiers and completion timestamp."},"IStudyPlannerAttachment":{"type":"object","description":"An attachment file linked to a study task, representing image or PDF content.\n\nThis entity stores metadata for the attachment including its file type and URL.\n\nThe created_at timestamp records when the attachment was added to the system.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the attachment."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the related study task this attachment belongs to."},"file_type":{"type":"string","description":"MIME type of the attachment file, e.g., 'image/jpeg' or 'application/pdf'."},"file_url":{"type":"string","description":"URL or URI to access the attachment file.","maxLength":80000},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the attachment record was created."}},"required":["id","study_task_id","file_type","file_url","created_at"]},"IStudyPlannerAttachment.ICreate":{"type":"object","description":"Data required to create a new attachment linked to a study task.\n\nOnly the study_task_id, file_type, and file_url are provided by the client.\n\nThe id and created_at fields are generated by the system.","properties":{"study_task_id":{"type":"string","format":"uuid","description":"UUID of the study task to associate the attachment with."},"file_type":{"type":"string","description":"MIME type of the attachment file to be created."},"file_url":{"type":"string","description":"URL or URI where the attachment file is stored."}},"required":["study_task_id","file_type","file_url"]},"IStudyPlannerAttachment.IUpdate":{"type":"object","description":"Data for updating a study task attachment.\n\nOnly file_type and file_url can be updated.\n\nOther fields such as id and study_task_id cannot be changed.","properties":{"file_type":{"type":"string","description":"Updated MIME type of the attachment file."},"file_url":{"type":"string","description":"Updated URL or URI of the attachment file."}},"required":[]},"IStudyPlannerStudyPlannerMemo":{"type":"object","description":"A memo note linked to a study task providing textual information or comments.\n\nIncludes memo text and timestamps for creation and update.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the memo."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the related study task this memo belongs to."},"memo_text":{"type":"string","description":"Text content of the memo note."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was last updated."}},"required":["id","study_task_id","memo_text","created_at","updated_at"]},"IStudyPlannerStudyPlannerMemoArray":{"type":"array","description":"An array of memos attached to a study task.\n\nEach item represents a memo providing textual notes related to a study task.","items":{"$ref":"#/components/schemas/IStudyPlannerStudyPlannerMemo"}},"IStudyPlannerStudyPlannerMemoICreate":{"type":"object","properties":{"memo_text":{"type":"string","description":"Text content of the memo providing additional details or notes.\n\nThis field holds the textual memo associated with a specific study task.\nIt supports note-taking for the student study activity management."}},"required":["memo_text"],"description":"Create request body for a study task memo. Contains the memo text.\n\nNote: The study_task_id field is set internally and should not be sent in the request."},"IStudyPlannerStudyPlannerMemos.IUpdate":{"type":"object","properties":{"memo_text":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Text content of the memo providing additional details or notes.\n\nCan be null to clear the memo."}},"required":[],"description":"Update request body for a study task memo. Supports partial update of memo text."},"IStudyPlannerStudyPlannerMemos":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\nUnique identifier of the memo."},"memo_text":{"type":"string","description":"Text content of the memo providing additional details or notes."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the memo was last updated."}},"required":["id","memo_text","created_at","updated_at"],"description":"Represents a memo attached to a study task containing the memo text and timestamps."},"IStudyPlannerStudyPlannerTaskAlarms.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Current page number for pagination."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum number of records per page.\nDefault value is 100 if not specified."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter for alarm title supporting partial matching."},"study_task_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional study task ID filter to retrieve alarms related to specific study tasks."},"order_by_created_at":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort by creation date.\nAllowed values: 'asc' or 'desc'."},"order_by_alarm_time":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort by alarm time.\nAllowed values: 'asc' or 'desc'."}},"required":[],"description":"Request parameters for searching and paginating task alarms."},"IStudyPlannerStudyPlannerTaskAlarms":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key UUID for the task alarm record."},"student_id":{"type":"string","format":"uuid","description":"UUID of the student who owns this alarm."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task."},"title":{"type":"string","description":"Title or label of the alarm for identification."},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled time for the alarm to trigger the notification in ISO 8601 format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last record update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft deletion timestamp indicating logical removal."}},"required":["id","student_id","study_task_id","title","alarm_time","created_at","updated_at"],"description":"Study task alarm entity storing alarm details such as title, alarm time, and association with student and study task.\n\nThis entity supports scheduling notifications and is managed per authenticated student user."},"IStudyPlannerTaskAlarm.ICreate":{"type":"object","properties":{"student_id":{"type":"string","format":"uuid","description":"UUID of the student who owns this alarm."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task."},"title":{"type":"string","description":"Title or label for the alarm."},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled date-time for the alarm notification trigger."}},"required":["student_id","study_task_id","title","alarm_time"],"description":"Request body schema for creating a new study task alarm.\n\nContains required fields to define alarm owner and trigger details, excluding auto-generated fields like id and timestamps."},"IStudyPlannerTaskAlarm.IUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Optional updated title of the alarm."},"alarm_time":{"type":"string","format":"date-time","description":"Optional updated scheduled date-time for the alarm."}},"required":[],"description":"Request body schema for updating details of an existing study task alarm.\n\nOnly title and alarm_time are updatable fields."},"IStudyPlannerTaskAlarm":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key UUID for the task alarm record."},"student_id":{"type":"string","format":"uuid","description":"UUID of the student who owns this alarm."},"study_task_id":{"type":"string","format":"uuid","description":"UUID of the associated study task."},"title":{"type":"string","description":"Title or label for the alarm."},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled time for the alarm in ISO 8601 format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last record update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional soft deletion timestamp."}},"required":["id","student_id","study_task_id","title","alarm_time","created_at","updated_at"],"description":"A study task alarm entity including all details such as id, ownership, title, scheduled trigger time, and timestamps.\n\nDeleted_at is nullable and used for soft deletes."},"IStudyPlannerGeneralReminder.IRequest":{"type":"object","properties":{"student_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional filter for the ID of the student to restrict reminders.\n\n@format uuid"},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter for reminder title matching.\n\nThis enables search by reminder title."},"due_time_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional minimum due time filter; reminders due after this time.\n\n@format date-time"},"due_time_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional maximum due time filter; reminders due before this time.\n\n@format date-time"},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional filter for active status.\n\ntrue to filter only active reminders;\nfalse for only inactive;\nnull or undefined to not filter by active status."},"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination: page number starting from 1.\n\nOptional; defaults to null if not specified."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination: maximum number of records per page.\n\nOptional; defaults to null if not specified."},"orderBy":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional sorting field, e.g., 'due_time', 'title'."},"orderDirection":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional ascending (true) or descending (false) order."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated alias for 'title'."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated alias for 'orderBy'."},"dir":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Deprecated alias for 'orderDirection'."},"column":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated; use 'orderBy' instead."},"order_column":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Deprecated; use 'orderBy' instead."},"order_dir":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Deprecated; use 'orderDirection' instead."}},"description":"Request schema for filtering and paginated retrieval of general reminders.","required":[]},"IStudyPlannerGeneralReminder":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of the general reminder.\n\n@format uuid"},"student_id":{"type":"string","format":"uuid","description":"ID of the student who owns this reminder.\n\n@format uuid"},"title":{"type":"string","description":"Friendly name or title of the general reminder for identification.\n\nThis is a brief label shown to the user to describe the reminder.\nIt is required to be non-empty."},"due_time":{"type":"string","format":"date-time","description":"Scheduled due time of the reminder as an ISO 8601 datetime string.\n\nThis indicates when the notification should be triggered.\nMust be a valid date-time string.\n\nExample: \"2023-12-31T10:00:00Z\""},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description providing extra context for the reminder.\n\nThis field can be null or a string."},"active":{"type":"boolean","description":"Whether this reminder is active and will trigger notifications.\n\nThis boolean controls if the reminder is currently enabled."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of reminder creation.\n\n@format date-time"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update to the reminder.\n\n@format date-time"}},"required":["id","student_id","title","due_time","active","created_at","updated_at"],"description":"Entity representing a general reminder set by a student to receive notifications.\n\nIt includes scheduling, descriptive text, active state, and audit timestamps."},"IStudyPlannerGeneralReminder.ICreate":{"type":"object","properties":{"title":{"type":"string","description":"Friendly name or title of the new general reminder.\n\nThis is required and serves as the label for the reminder."},"due_time":{"type":"string","format":"date-time","description":"Scheduled due time for this reminder.\n\nISO 8601 formatted date-time string."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description explaining the reminder in more detail.\n\nThis field may be null."},"active":{"type":"boolean","description":"Flag indicating whether the reminder is active and should trigger notifications."}},"required":["title","due_time","active"],"description":"Schema for creating a new general reminder.\n\nIncludes title, due time, optional description, and active flag."},"IStudyPlannerGeneralReminder.IUpdate":{"type":"object","properties":{"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated title of the reminder.\n\nIf included, overrides the existing title."},"due_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional updated due time.\n\nISO 8601 date-time format if provided."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional updated description.\n\nNullable field to allow clearing or changing description."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Optional updated active flag."}},"required":[],"description":"Schema for updating an existing general reminder.\n\nAll fields are optional and may be null."},"IStudyPlannerStudyProgressAnalytics.IRequest":{"type":"object","properties":{"student_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by student unique identifier. Use null to ignore this filter."},"study_phase_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by study phase unique identifier. Use null to ignore this filter."},"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Current page number for pagination."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Limit of records per page."},"sortBy":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"type":"null"}],"description":"Sort records by created or updated timestamp."},"order":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order - ascending or descending."}},"required":[],"description":"Request object for searching and filtering study progress analytics."},"IStudyPlannerStudyProgressAnalytics":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the study progress analytics record."},"student_id":{"type":"string","format":"uuid","description":"Unique identifier of the student."},"study_phase_id":{"type":"string","format":"uuid","description":"Unique identifier of the study phase."},"completed_tasks_count":{"type":"integer","description":"Number of completed tasks for the student in the given study phase."},"total_tasks_count":{"type":"integer","description":"Total number of tasks assigned to the student in the study phase."},"completion_rate":{"type":"number","format":"double","description":"Completion rate computed as completed tasks divided by total tasks."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."}},"required":["id","student_id","study_phase_id","completed_tasks_count","total_tasks_count","completion_rate","created_at","updated_at"],"description":"Aggregated study progress analytics per student and study phase.\n\nThis entity provides metrics such as completed tasks count, total tasks count, and completion rate.\n\nIt relates to students and study phases for tracking learning progress across phases."},"IStudyPlannerLearningGapCharts.IRequest":{"type":"object","properties":{"student_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by student unique identifier. Use null to ignore this filter."},"subject_category_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by subject category unique identifier. Use null to ignore this filter."},"page":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Current page number for pagination."},"limit":{"oneOf":[{"type":"number","format":"uint32"},{"type":"null"}],"description":"Limit of records per page."},"sortBy":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"type":"null"}],"description":"Sort records by created or updated timestamp."},"order":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort order - ascending or descending."}},"required":[],"description":"Request object for searching and filtering learning gap charts."},"IStudyPlannerLearningGapCharts":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the learning gap chart record."},"student_id":{"type":"string","format":"uuid","description":"Unique identifier of the student."},"subject_category_id":{"type":"string","format":"uuid","description":"Unique identifier of the subject category."},"gap_metric":{"type":"number","format":"double","description":"Quantified measure of the learning gap for the subject category."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."}},"required":["id","student_id","subject_category_id","gap_metric","created_at","updated_at"],"description":"Analytics data showing learning gap statistics per student and subject category.\n\nThis entity highlights underperformed areas in study tasks, linked to students and subject categories to assist targeted improvements and visualization."},"IStudyPlannerStudent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the student user"},"email":{"type":"string","description":"Email address of the student user used for login"}},"required":["id","email"],"description":"Summary information of student user containing essential identification fields only."},"IStudyPlannerStudyPhases.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the study phase"},"code":{"type":"string","description":"Unique code identifier of the study phase"},"name":{"type":"string","description":"Human-readable name of the study phase"}},"required":["id","code","name"],"description":"Summary information of study phase including id, code, and name."},"IStudyPlannerSubjectCategories.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the subject category"},"code":{"type":"string","description":"Unique code identifier of the subject category"},"name":{"type":"string","description":"Human-readable name of the subject category"}},"required":["id","code","name"],"description":"Summary information of subject category including id, code, and name."},"IStudyPlannerStudyTasks.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the study task"},"title":{"type":"string","description":"Title of the study task"},"study_phase_id":{"type":"string","format":"uuid","description":"Unique identifier of the associated study phase"},"subject_category_id":{"type":"string","format":"uuid","description":"Unique identifier of the associated subject category"}},"required":["id","title","study_phase_id","subject_category_id"],"description":"Summary information for study tasks, including identifiers and title."},"IStudyPlannerAttachment.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the attachment"},"file_type":{"type":"string","description":"Type of the attachment file, e.g., image/jpeg, application/pdf"},"file_url":{"type":"string","description":"URI of the stored attachment file for retrieval"}},"required":["id","file_type","file_url"],"description":"Summary information of an attachment file linked to a study task.\n\nThis summary includes the unique ID, file type, and the file URL for access."},"IStudyPlannerStudyPlannerTaskAlarms.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the task alarm"},"title":{"type":"string","description":"Title or label of the alarm for user identification"},"alarm_time":{"type":"string","format":"date-time","description":"Scheduled time for the alarm to trigger the notification"},"study_task_id":{"type":"string","format":"uuid","description":"Referenced study task's identifier for which the alarm is set"}},"required":["id","title","alarm_time","study_task_id"],"description":"Summary information of a task alarm set by a student for a study task.\n\nIncludes unique ID, alarm title, alarm time, and linked study task identifier."},"IStudyPlannerGeneralReminder.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key identifier of the general reminder"},"title":{"type":"string","description":"Title or label of the general reminder for user identification"},"due_time":{"type":"string","format":"date-time","description":"Scheduled due time for the general reminder notification"},"active":{"type":"boolean","description":"Boolean flag indicating the reminder's active status"},"description":{"type":"string","description":"Optional textual description providing additional context for the reminder"},"created_at":{"type":"string","format":"date-time","description":"Timestamp of record creation for audit and history"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for audit and history"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp indicating logical removal (nullable)"},"student_id":{"type":"string","format":"uuid","description":"Belonged student's unique identifier"}},"required":["id","title","due_time","active"],"description":"Summary information of a general reminder created by a student.\n\nIncludes unique ID, title, due time, and active status.\n\nNote: detailed properties like description, created_at, updated_at, deleted_at, and student_id are normally excluded from summaries."}}}}