import { tags } from "typia";

/**
 * Historical records capturing changes and events related to user
 * subscriptions.
 *
 * Provides audit trails for subscription state changes and billing plan
 * updates.
 *
 * Includes detailed tracking of subscription changes such as upgrades,
 * downgrades, cancellations, timestamps, related payments, and additional
 * notes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderSubscriptionAudit = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Referenced subscription plan. */
  telegram_file_downloader_subscription_plan_id: string & tags.Format<"uuid">;

  /** Payment associated with this audit record. */
  telegram_file_downloader_payment_id?:
    | (string & tags.Format<"uuid">)
    | null
    | undefined;

  /** User undergoing the subscription change. */
  user_id: string & tags.Format<"uuid">;

  /**
   * Type of subscription change event (e.g., 'upgrade', 'downgrade',
   * 'cancellation').
   */
  change_type: string;

  /** Timestamp when the subscription change occurred. */
  change_timestamp: string & tags.Format<"date-time">;

  /** Additional notes or metadata about the subscription change. */
  notes?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for subscription audit records. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderSubscriptionAudit {
  /**
   * Request body includes pagination, filter criteria, and sorting options
   * for subscription audit records.
   */
  export type IRequest = {
    /** Page number for pagination */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Filter criteria for subscription audit records */
    filter?:
      | {
          /** Filter by user ID */
          user_id?: string | null | undefined;

          /** Filter by type of subscription change */
          change_type?: string | null | undefined;

          /** Filter by subscription plan ID */
          subscription_plan_id?: string | null | undefined;

          /** Additional notes filter */
          notes?: string | null | undefined;

          /** Creation date filter */
          created_at?: string | null | undefined;

          /** Update date filter */
          updated_at?: string | null | undefined;

          /** Soft deletion date filter */
          deleted_at?: string | null | undefined;
        }
      | undefined;

    /** Sorting criteria */
    sort?:
      | {
          /** Field to sort by */
          orderBy?: string | undefined;

          /** Sort direction */
          direction?: "asc" | "desc" | undefined;
        }
      | undefined;
  };
}
