import { tags } from "typia";

/**
 * Job queue entries representing file download tasks queued for processing.
 * Contains metadata about job status, priority, retry attempts, and timestamps
 * for queueing and processing.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderJobQueue = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the file download job. Links to the
   * telegram_file_downloader_download_jobs.id.
   */
  job_id: string & tags.Format<"uuid">;

  /**
   * Current status of the job in the queue, e.g., 'pending', 'processing',
   * 'failed', 'completed'.
   */
  status: string;

  /** Priority level for job processing, higher value means higher priority. */
  priority: number & tags.Type<"int32"> & tags.Minimum<0>;

  /** Number of times this job has been retried due to failure. */
  retries: number & tags.Type<"int32"> & tags.Minimum<0>;

  /** Last error message if job processing failed. */
  last_error_message?: string | null | undefined;

  /** Timestamp when this job queue entry was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when this job queue entry was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp, if the job queue entry has been logically
   * deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderJobQueue {
  /** Request parameters to filter and paginate job queues */
  export type IRequest = {
    /**
     * Filter jobs by status such as 'pending', 'processing', 'failed', or
     * 'completed'
     */
    status?: string | null | undefined;

    /** Filter jobs by priority level */
    priority?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter jobs by minimum retry count */
    min_retries?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter jobs by maximum retry count */
    max_retries?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter jobs where last error message contains the specified string */
    last_error_message_contains?: string | null | undefined;

    /** Page number to retrieve */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of jobs per page */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort results by specified column */
    order_by?: string | null | undefined;

    /** Sort order direction */
    order_direction?: "asc" | "desc" | null | undefined;
  };

  /** Request body to create a new job queue entry for a file download task. */
  export type ICreate = {
    /**
     * Reference to the file download job. Links to the
     * telegram_file_downloader_download_jobs.id.
     */
    job_id: string & tags.Format<"uuid">;

    /**
     * Current status of the job in the queue, e.g., 'pending',
     * 'processing', 'failed', 'completed'.
     */
    status: string;

    /**
     * Priority level for job processing, higher value means higher
     * priority.
     */
    priority: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** Number of times this job has been retried due to failure. */
    retries: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** Last error message if job processing failed. */
    last_error_message?: string | null | undefined;
  };

  /** Request body to update an existing job queue entry. */
  export type IUpdate = {
    /**
     * Current status of the job in the queue, e.g., 'pending',
     * 'processing', 'failed', 'completed'.
     */
    status?: string | undefined;

    /**
     * Priority level for job processing, higher value means higher
     * priority.
     */
    priority?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;

    /** Number of times this job has been retried due to failure. */
    retries?: (number & tags.Type<"int32"> & tags.Minimum<0>) | undefined;

    /** Last error message if job processing failed. */
    last_error_message?: string | null | undefined;

    /**
     * Soft deletion timestamp, if the job queue entry has been logically
     * deleted.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information about a job queue entry.
   *
   * This schema provides a summarized view of the job queue entries used for
   * monitoring and administrative overviews.
   *
   * It captures key details such as job status, priority, retry counts, and
   * timestamps.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /**
     * Reference to the file download job. Links to the
     * telegram_file_downloader_download_jobs.id.
     */
    job_id: string & tags.Format<"uuid">;

    /**
     * Current status of the job in the queue, e.g., 'pending',
     * 'processing', 'failed', 'completed'.
     */
    status: string;

    /**
     * Priority level for job processing, higher value means higher
     * priority.
     */
    priority: number & tags.Type<"int32">;

    /** Number of times this job has been retried due to failure. */
    retries: number & tags.Type<"int32">;

    /** Last error message if job processing failed. */
    last_error_message?: string | null | undefined;

    /** Timestamp when this job queue entry was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when this job queue entry was last updated. */
    updated_at: string & tags.Format<"date-time">;
  };
}
