import { tags } from "typia";

/**
 * Payment records store events from users subscribing to plans. They track
 * payment metadata (provider, status, amounts, currency, etc.) essential for
 * billing and subscription management.
 *
 * The unique ID field assures distinct payments. Reference fields link payments
 * to subscription plans and paying users. These records enforce payment
 * processing consistency and support auditing.
 *
 * Sensitive data like raw credentials are excluded, maintaining privacy and
 * security.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderPayments = {
  /**
   * Primary Key.
   *
   * Unique identifier of the payment.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Referenced subscription plan ID.
   *
   * Must be a valid UUID.
   */
  subscription_plan_id: string & tags.Format<"uuid">;

  /**
   * ID of the paying user (enduser or developer).
   *
   * Must be a valid UUID.
   */
  user_id: string & tags.Format<"uuid">;

  /**
   * Payment provider name (e.g., Stripe).
   *
   * Should be a known payment gateway identifier.
   */
  payment_provider: string;

  /**
   * Current status of the payment.
   *
   * Examples include: 'pending', 'succeeded', 'failed'.
   *
   * Must match one of the allowed payment statuses.
   */
  payment_status: string;

  /**
   * Amount paid in USD.
   *
   * Should be a positive double precision number.
   */
  payment_amount: number;

  /** Currency code in ISO 4217 format (e.g., "USD"). */
  payment_currency: string;

  /**
   * External payment reference ID.
   *
   * Should be unique per payment.
   */
  payment_reference_id: string;

  /**
   * Date and time when the payment was made.
   *
   * ISO 8601 date-time string.
   */
  payment_date: string & tags.Format<"date-time">;

  /** Timestamp of record creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. Null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderPayments {
  /**
   * Partial update schema for payment records. Fields are optional and allow
   * updating payment metadata, status, and timestamps. Soft delete timestamp
   * can be set or nulled.
   */
  export type IUpdate = {
    /**
     * Referenced subscription plan ID.
     *
     * Must be a valid UUID.
     */
    subscription_plan_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * ID of the paying user (enduser or developer).
     *
     * Must be a valid UUID.
     */
    user_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Payment provider name (e.g., Stripe).
     *
     * Should be a known payment gateway identifier.
     */
    payment_provider?: string | undefined;

    /**
     * Current status of the payment.
     *
     * Examples include: 'pending', 'succeeded', 'failed'.
     *
     * Must match one of the allowed payment statuses.
     */
    payment_status?: string | undefined;

    /**
     * Amount paid in USD.
     *
     * Should be a positive double precision number.
     */
    payment_amount?: number | undefined;

    /** Currency code in ISO 4217 format (e.g., "USD"). */
    payment_currency?: string | undefined;

    /**
     * External payment reference ID.
     *
     * Should be unique per payment.
     */
    payment_reference_id?: string | undefined;

    /**
     * Date and time when the payment was made.
     *
     * ISO 8601 date-time string.
     */
    payment_date?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp of record creation. */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /** Timestamp of last update. */
    updated_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft delete timestamp. Null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
