import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Developer users who access the Telegram File Downloader service via API.
 * Store authentication credentials, email, and audit timestamps. Unique email
 * per developer. Supports soft deletion and timestamps for auditing user record
 * changes.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @namespace Actors
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderDeveloper = {
  /** Primary Key of the developer user. */
  id: string & tags.Format<"uuid">;

  /** Email address of the developer user, unique across developers. */
  email: string;

  /** Hashed password for authenticating the developer user. */
  password_hash: string;

  /** Timestamp when the developer user record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the developer user record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the developer user record was soft deleted; null if
   * active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderDeveloper {
  /**
   * Request body for developer user registration including email and password
   * hash.
   */
  export type ICreate = {
    /**
     * Email address of the developer user.
     *
     * Must be unique and valid.
     */
    email: string & tags.Format<"email">;

    /**
     * Password hash for authentication.
     *
     * Should be securely generated and stored.
     */
    password_hash: string;
  };

  /** Authorized developer user information with JWT tokens. */
  export type IAuthorized = {
    /** Unique identifier of developer user. */
    id: string & tags.Format<"uuid">;

    /** Email address of the developer user, unique across developers. */
    email: string;

    /** Hashed password for authenticating the developer user. */
    password_hash: string;

    /** Timestamp when the developer user record was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the developer user record was last updated. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the developer user record was soft deleted; null if
     * active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Request body containing login credentials for developer. */
  export type ILogin = {
    /** Email address of the developer user. */
    email: string & tags.Format<"email">;

    /**
     * Password in plain text or a password hash depending on the
     * authenticate process. Typically, the client sends plain password.
     */
    password: string;
  };

  /** Refresh token payload for renewing developer access tokens. */
  export type IRefresh = {
    /** Refresh token string to renew JWT access. */
    refreshToken: string;
  };

  /**
   * Request parameters for filtering, searching, and pagination for developer
   * users.
   *
   * Supports search by email, paging, limits, deletion filter, and sort
   * order.
   */
  export type IRequest = {
    /** Search term for developers. */
    search?: string | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of results per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter for deleted status. */
    deleted?: boolean | null | undefined;

    /** Sort order criteria. */
    order?: string | null | undefined;
  };

  /**
   * Update partial data for a Telegram File Downloader developer user.
   *
   * Allows updating email, password hash, and soft deletion timestamp.
   *
   * All fields are optional allowing partial updates.
   */
  export type IUpdate = {
    /** Email address of the developer user, unique across developers. */
    email?: string | undefined;

    /** Hashed password for authenticating the developer user. */
    password_hash?: string | undefined;

    /**
     * Timestamp when the developer user record was soft deleted; null if
     * active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of the Telegram File Downloader developer user for
   * list views, excluding sensitive authentication fields.
   */
  export type ISummary = {
    /** Unique identifier of the developer user */
    id: string & tags.Format<"uuid">;

    /** Email address of the developer user */
    email: string;
  };
}
