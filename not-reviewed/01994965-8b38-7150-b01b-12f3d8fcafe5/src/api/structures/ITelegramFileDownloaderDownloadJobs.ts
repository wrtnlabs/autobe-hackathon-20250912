import { tags } from "typia";

/**
 * User-submitted download job requests capturing parameters such as channel ID,
 * filters, and status. Used to track download lifecycle and quota enforcement.
 *
 * @namespace FileManagement
 * @auther AutoBE - https://github.com/wrtnlabs/autobe
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderDownloadJobs = {
  /**
   * Primary Key.
   *
   * Unique UUID identifying the download job.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Belonged end user's telegram_file_downloader_endusers.id.
   *
   * Nullable for developer-initiated jobs.
   */
  enduser_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Belonged developer's telegram_file_downloader_developers.id.
   *
   * Nullable for end user-initiated jobs.
   */
  developer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Telegram channel or group identifier targeted for file download.
   *
   * Represented as a string unique to the target Telegram resource.
   */
  channel_id: string;

  /**
   * Comma-separated list of requested file extensions for filtering, e.g.,
   * "mp4,zip,jpg,pdf".
   */
  file_types?: string | null | undefined;

  /**
   * Start date of inclusive date range to filter files.
   *
   * ISO 8601 date-time format.
   */
  date_start?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * End date of inclusive date range to filter files.
   *
   * ISO 8601 date-time format.
   */
  date_end?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Current status code of the download job (e.g., pending, in_progress,
   * completed, failed).
   */
  status: string;

  /** Timestamp when the download job was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the download job was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for logical deletion; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderDownloadJobs {
  /** Request body for filtered and paginated listing of download jobs. */
  export type IRequest = {
    /** Filter by end user ID who submitted the download jobs. */
    enduser_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by developer ID who submitted the download jobs. */
    developer_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter by download job status (e.g., "pending", "completed"). */
    status?: string | null | undefined;

    /** Filter by Telegram channel or group ID. */
    channel_id?: string | null | undefined;

    /** Filter for jobs created after this date (ISO 8601). */
    created_after?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter for jobs created before this date (ISO 8601). */
    created_before?: (string & tags.Format<"date-time">) | null | undefined;

    /** Sorting field, e.g., "created_at" or "updated_at". */
    order_by?: string | null | undefined;

    /** Pagination page number (uint32). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Pagination result limit per page (uint32). */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;
  };

  /** Summary information of a download job request for list views. */
  export type ISummary = {
    /** Primary Key ID of the download job request. */
    id: string & tags.Format<"uuid">;

    /** Telegram channel or group identifier targeted for file download. */
    channel_id: string;

    /**
     * Current status of the download job (e.g., pending, in_progress,
     * completed, failed).
     */
    status: string;

    /** Timestamp when the download job was created. */
    created_at: string & tags.Format<"date-time">;
  };
}
