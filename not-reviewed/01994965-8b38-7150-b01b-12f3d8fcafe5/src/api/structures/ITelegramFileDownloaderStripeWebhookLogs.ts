import { tags } from "typia";

/**
 * Stripe webhook event log.
 *
 * Represents a record of an event received from Stripe webhooks, including
 * event metadata, payload, and processing status.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderStripeWebhookLogs = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Unique identifier of the Stripe webhook event. */
  event_id: string;

  /**
   * Type of Stripe event, e.g., 'payment_intent.succeeded',
   * 'invoice.payment_failed'.
   */
  event_type: string;

  /** Full JSON payload of the webhook event stored as string. */
  payload: string;

  /** Timestamp when the webhook was received by the system. */
  received_at: string & tags.Format<"date-time">;

  /** Flag indicating if the webhook event has been processed successfully. */
  processed: boolean;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last updated timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITelegramFileDownloaderStripeWebhookLogs {
  /**
   * Request body for searching and filtering Stripe webhook logs.
   *
   * Includes pagination and filter parameters.
   */
  export type IRequest = {
    /** Page number. */
    page?: number | null | undefined;

    /**
     * Limitation of records per a page.
     *
     * @default 100
     */
    limit?: number | null | undefined;

    /** Filter by event type for webhook logs. */
    event_type?: string | null | undefined;

    /** Filter by processing status. */
    processed?: boolean | null | undefined;
  };

  /**
   * Summary information of Stripe webhook logs to assist in audit and
   * monitoring.
   */
  export type ISummary = {
    /** Primary Key of the Stripe webhook log. */
    id: string & tags.Format<"uuid">;

    /** Unique identifier of the Stripe webhook event. */
    event_id: string;

    /**
     * Type of Stripe event, e.g., 'payment_intent.succeeded',
     * 'invoice.payment_failed'.
     */
    event_type: string;

    /** Timestamp when the webhook was received by the system. */
    received_at: string & tags.Format<"date-time">;

    /** Flag indicating if the webhook event has been processed successfully. */
    processed: boolean;
  };
}
