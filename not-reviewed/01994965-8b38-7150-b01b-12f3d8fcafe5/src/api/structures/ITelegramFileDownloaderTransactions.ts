import { tags } from "typia";

/**
 * Detailed payment transaction entity representing financial transaction
 * records tied to user payments.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderTransactions = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Associated payment record. {@link telegram_file_downloader_payments.id} */
  payment_id: string & tags.Format<"uuid">;

  /**
   * Reference to user who performed the transaction.
   * {@link telegram_file_downloader_endusers.id} or
   * {@link telegram_file_downloader_developers.id}
   */
  user_id: string & tags.Format<"uuid">;

  /** Type of transaction, e.g., charge, refund. */
  transaction_type: string;

  /** Status of the transaction, e.g., succeeded, failed, pending. */
  transaction_status: string;

  /** Amount involved in the transaction in USD. */
  transaction_amount: number;

  /** Timestamp when the transaction occurred. */
  transaction_date: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderTransactions {
  /**
   * Search and pagination parameters for filtering payment transaction
   * records. Supports optional filters for type, status, user, and date
   * ranges to generate paged results.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Filter by transaction type (optional). */
    transaction_type?: string | null | undefined;

    /** Filter by transaction status (optional). */
    transaction_status?: string | null | undefined;

    /** Filter by user ID (optional). */
    user_id?: string | null | undefined;

    /** Filter by date range start. */
    date_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by date range end. */
    date_end?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Request body to create a new payment transaction entry tied to user
   * payments.
   */
  export type ICreate = {
    /**
     * Associated payment record.
     * {@link telegram_file_downloader_payments.id}
     */
    payment_id: string & tags.Format<"uuid">;

    /**
     * Reference to user who performed the transaction.
     * {@link telegram_file_downloader_endusers.id} or
     * {@link telegram_file_downloader_developers.id}
     */
    user_id: string & tags.Format<"uuid">;

    /** Type of transaction, e.g., charge, refund. */
    transaction_type: string;

    /** Status of the transaction, e.g., succeeded, failed, pending. */
    transaction_status: string;

    /** Amount involved in the transaction in USD. */
    transaction_amount: number;

    /** Timestamp when the transaction occurred. */
    transaction_date: string & tags.Format<"date-time">;
  };

  /**
   * Request body to update payment transaction entries. Supports partial
   * updates with nullable fields.
   */
  export type IUpdate = {
    /**
     * Associated payment record.
     * {@link telegram_file_downloader_payments.id}
     */
    payment_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Reference to user who performed the transaction.
     * {@link telegram_file_downloader_endusers.id} or
     * {@link telegram_file_downloader_developers.id}
     */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Type of transaction, e.g., charge, refund. */
    transaction_type?: string | null | undefined;

    /** Status of the transaction, e.g., succeeded, failed, pending. */
    transaction_status?: string | null | undefined;

    /** Amount involved in the transaction in USD. */
    transaction_amount?: number | null | undefined;

    /** Timestamp when the transaction occurred. */
    transaction_date?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
