import { tags } from "typia";

/**
 * Records payment events from users subscribing to plans. Stores payment
 * metadata, statuses and links to subscription plans and user identities.
 * Critical for billing and subscription status tracking.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderPayment = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Referenced subscription plan for this payment. */
  subscription_plan_id: string & tags.Format<"uuid">;

  /** Reference to the paying user (enduser or developer). */
  user_id: string & tags.Format<"uuid">;

  /** Payment gateway provider, e.g., Stripe. */
  payment_provider: string;

  /** Status of the payment, e.g., pending, succeeded, failed. */
  payment_status: string;

  /** Amount paid in USD. */
  payment_amount: number;

  /** Currency code, e.g., USD. */
  payment_currency: string;

  /** External payment reference ID from the provider. */
  payment_reference_id: string;

  /** Timestamp of the payment event. */
  payment_date: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderPayment {
  /**
   * Parameters to filter and paginate the listing of payments in the system.
   *
   * Optional filters include subscription plan, user, provider, status, and
   * date range.
   */
  export type IRequest = {
    /** Filter payments by subscription plan UUID. */
    subscription_plan_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter payments by user UUID (end user or developer). */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter payments by payment gateway provider (e.g., Stripe). */
    payment_provider?: string | null | undefined;

    /** Filter payments by status (e.g. pending, succeeded, failed). */
    payment_status?: string | null | undefined;

    /** Start date filter for payment date (inclusive). */
    payment_date_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** End date filter for payment date (inclusive). */
    payment_date_end?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit of records per page for pagination. */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Request body to create a new payment record for a user subscription
   * event, including payment provider, status, amounts, and related
   * timestamps.
   */
  export type ICreate = {
    /** Referenced subscription plan for this payment. */
    subscription_plan_id: string & tags.Format<"uuid">;

    /** Reference to the paying user (enduser or developer). */
    user_id: string & tags.Format<"uuid">;

    /** Payment gateway provider, e.g., Stripe. */
    payment_provider: string;

    /** Status of the payment, e.g., pending, succeeded, failed. */
    payment_status: string;

    /** Amount paid in USD. */
    payment_amount: number;

    /** Currency code, e.g., USD. */
    payment_currency: string;

    /** External payment reference ID from the provider. */
    payment_reference_id: string;

    /** Timestamp of the payment event. */
    payment_date: string & tags.Format<"date-time">;
  };
}
