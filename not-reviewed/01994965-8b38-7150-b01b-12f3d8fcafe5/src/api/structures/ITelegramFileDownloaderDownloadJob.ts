import { tags } from "typia";

/**
 * Download job entity storing request details including channel ID, file
 * filters, date range, status, and timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderDownloadJob = {
  /**
   * Unique identifier of the download job.
   *
   * This identifier links the job to either an end user or a developer.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Reference to the end user who submitted the download job.
   *
   * Nullable because the job could belong to a developer instead.
   */
  enduser_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Reference to the developer who submitted the download job.
   *
   * Nullable because the job could belong to an end user instead.
   */
  developer_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Telegram channel or group identifier for the files to be downloaded. This
   * is mandatory to specify the target channel/group.
   */
  channel_id: string;

  /**
   * Comma-separated string list of file types/extensions to filter downloads.
   * Nullable to allow downloading without specific file type filtering.
   */
  file_types?: string | null | undefined;

  /**
   * Inclusive start datetime for filtering files by the date shared. Uses ISO
   * 8601 format with timezone. Nullable to signify no start date filtering.
   */
  date_start?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Inclusive end datetime for filtering files by the date shared. Uses ISO
   * 8601 format with timezone. Nullable to signify no end date filtering.
   */
  date_end?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Status of the download job such as 'pending', 'in_progress', 'completed',
   * or 'failed'. Represents the current processing state.
   */
  status: string;

  /**
   * Timestamp of creation for this download job. ISO 8601 date-time with
   * timezone.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp of last update to this download job. ISO 8601 date-time with
   * timezone.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp marking soft deletion of this download job. Null if the job is
   * active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITelegramFileDownloaderDownloadJob {
  /**
   * Request body for creating a new download job, specifying mandatory and
   * optional filters.
   */
  export type ICreate = {
    /**
     * Telegram channel or group identifier for the download target.
     * Required to initiate a new download job.
     */
    channel_id: string;

    /**
     * Optional comma-separated file type filters, e.g., "mp4,zip,jpg,pdf".
     * Allows limiting files to specified types.
     */
    file_types?: string | null | undefined;

    /**
     * Optional inclusive start date for download filtering. Must be in ISO
     * 8601 date-time format with timezone.
     */
    date_start?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional inclusive end date for download filtering. Must be in ISO
     * 8601 date-time format with timezone.
     */
    date_end?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Request body for updating an existing download job with optional fields. */
  export type IUpdate = {
    /** Optional updated channel or group identifier for the download job. */
    channel_id?: string | undefined;

    /** Optional updated comma-separated file type filters. */
    file_types?: string | null | undefined;

    /** Optional updated inclusive start date. */
    date_start?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional updated inclusive end date. */
    date_end?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional updated status of the download job, e.g., 'pending',
     * 'completed', or 'failed'.
     */
    status?: string | undefined;
  };
}
