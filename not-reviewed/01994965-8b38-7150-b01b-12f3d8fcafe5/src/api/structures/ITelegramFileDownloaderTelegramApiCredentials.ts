import { tags } from "typia";

/**
 * Stores Telegram API bot credentials used for authenticating and interacting
 * with Telegram services. Each record represents a single credential set for a
 * bot instance including its token and metadata for management.
 *
 * @namespace Integrations
 * @auther AutoBE - https://github.com/wrtnlabs/autobe
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITelegramFileDownloaderTelegramApiCredentials = {
  /** Primary Key of the Telegram API credentials record. */
  id: string & tags.Format<"uuid">;

  /** The display name of the Telegram bot. */
  bot_name: string;

  /** The secret bot token used for authenticating Telegram API calls. */
  bot_token: string;

  /**
   * Flag indicating if this credential is currently active and used for
   * operations.
   */
  is_active: boolean;

  /** Timestamp of the last time this credential was used to make an API call. */
  last_used_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last updated timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITelegramFileDownloaderTelegramApiCredentials {
  /**
   * Request body for searching Telegram API credentials with filters and
   * pagination.
   */
  export type IRequest = {
    /** The display name of the Telegram bot. */
    bot_name?: string | null | undefined;

    /**
     * Flag indicating if this credential is currently active and used for
     * operations.
     */
    is_active?: boolean | null | undefined;

    /**
     * Timestamp of the last time this credential was used to make an API
     * call.
     */
    last_used_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records per page for pagination. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** General search string for filtering credentials. */
    search?: string | null | undefined;
  };
}
