import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";
import { posttelegramFileDownloaderEndusers } from "../../../providers/posttelegramFileDownloaderEndusers";

import { ITelegramFileDownloaderEndUser } from "../../../api/structures/ITelegramFileDownloaderEndUser";

@Controller("/telegramFileDownloader/endusers")
export class TelegramfiledownloaderEndusersController {
  /**
   * Create a new Telegram File Downloader end user account with email and
   * password hash, plus optional auditing timestamps.
   *
   * Enforces unique email constraint.
   *
   * Returns the created user record with assigned ID.
   *
   * Intended for user registration processes.
   *
   * @param connection
   * @param body Creation data for Telegram File Downloader end user
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Post()
  public async create(
    @TypedBody()
    body: ITelegramFileDownloaderEndUser.ICreate,
  ): Promise<ITelegramFileDownloaderEndUser> {
    try {
      return await posttelegramFileDownloaderEndusers({
        body,
      });
    } catch (error) {
      console.log(error);
      throw error;
    }
  }
}
