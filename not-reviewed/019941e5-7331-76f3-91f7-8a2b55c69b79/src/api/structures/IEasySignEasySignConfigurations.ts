import { tags } from "typia";

/**
 * EasySign system configuration entity representing global key-value settings
 * for controlling the EasySign backend system. Each configuration has a unique
 * identifier, key, value, and optional description with audit timestamps and
 * soft deletion support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IEasySignEasySignConfigurations = {
  /**
   * Primary key.
   *
   * Unique identifier of the system configuration entry.
   */
  id: string & tags.Format<"uuid">;

  /** Unique configuration key that identifies the setting. */
  config_key: string;

  /** Value associated with the configuration key. */
  config_value: string;

  /** Optional detailed description of the configuration item. */
  description?: string | null | undefined;

  /**
   * Timestamp when the configuration entry was created.
   *
   * ISO 8601 date-time string with timezone.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the configuration entry was last updated.
   *
   * ISO 8601 date-time string with timezone.
   */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp marking soft deletion of the configuration entry. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IEasySignEasySignConfigurations {
  /** Request type for searching and paginating EasySign system configurations. */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Number of records per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Optional search term to filter configurations. */
    search?: string | null | undefined;

    /** Optional sort field name. */
    sort?: string | null | undefined;

    /** Sort direction, ascending or descending. */
    direction?: "asc" | "desc" | null | undefined;
  };

  /**
   * Summary view of EasySign system configuration entries providing key
   * configuration details.
   *
   * This includes the unique key, its value, optional description, and
   * timestamps for auditing.
   */
  export type ISummary = {
    /** Unique identifier of the EasySign configuration record. */
    id: string & tags.Format<"uuid">;

    /** Unique configuration key identifying the system control setting. */
    config_key: string;

    /** Value associated with the configuration key defining system behavior. */
    config_value: string;

    /**
     * Optional detailed description of the configuration item explaining
     * its purpose and usage.
     */
    description?: string | null | undefined;

    /**
     * Timestamp when the configuration record was created, in ISO 8601
     * format.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the configuration record was last updated, in ISO 8601
     * format.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
