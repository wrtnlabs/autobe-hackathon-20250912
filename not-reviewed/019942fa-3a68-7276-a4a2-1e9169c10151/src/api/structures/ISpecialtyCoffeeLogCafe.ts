import { tags } from "typia";

/**
 * Holds detailed information about specialty coffee cafes including name,
 * address, contact details, opening hours, menu description, and photo. This
 * table is a core business entity accessible to all users for browsing and
 * searching cafe information. Enforces uniqueness on cafe name to prevent
 * duplicates and supports soft deletion for data integrity and recovery.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ISpecialtyCoffeeLogCafe = {
  /**
   * Primary Key.
   *
   * Unique identifier of the specialty coffee cafe.
   */
  id: string & tags.Format<"uuid">;

  /** Unique name of the specialty coffee cafe. */
  name: string;

  /** Physical address of the cafe. */
  address: string;

  /** Contact information such as phone number or email. */
  contact_info?: string | null | undefined;

  /** Human-readable opening hours of the cafe. */
  opening_hours?: string | null | undefined;

  /** Brief description of the cafe menu offerings. */
  menu_description?: string | null | undefined;

  /** URL string pointing to a photo of the cafe. */
  photo_url?: string | null | undefined;

  /** Timestamp when the cafe record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the cafe record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the cafe was soft deleted, if applicable. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ISpecialtyCoffeeLogCafe {
  /**
   * Request parameters for filtering, searching, pagination, and ordering
   * cafes.
   */
  export type IRequest = {
    /**
     * Page number for pagination. Optional; if null, defaults to first
     * page.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Limit of records per page. Optional; if null, defaults to a preset
     * limit.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Search string to filter cafes by name with case-insensitive, partial
     * matching.
     */
    search?: string | null | undefined;

    /** Field name to order results by (e.g., name). Optional. */
    orderBy?: string | null | undefined;

    /** Direction of ordering: 'asc' or 'desc'. Optional. */
    orderDirection?: string | null | undefined;
  };

  /** Request body to create new specialty coffee cafe. */
  export type ICreate = {
    /** Unique name of the specialty coffee cafe. */
    name: string;

    /** Physical address of the cafe. */
    address: string;

    /** Contact information such as phone number or email. */
    contact_info?: string | null | undefined;

    /** Human-readable opening hours of the cafe. */
    opening_hours?: string | null | undefined;

    /** Brief description of the cafe menu offerings. */
    menu_description?: string | null | undefined;

    /** URL string pointing to a photo of the cafe. */
    photo_url?: string | null | undefined;
  };

  /** Request body to update an existing specialty coffee cafe. */
  export type IUpdate = {
    /** Unique name of the specialty coffee cafe. */
    name?: string | null | undefined;

    /** Physical address of the cafe. */
    address?: string | null | undefined;

    /** Contact information such as phone number or email. */
    contact_info?: string | null | undefined;

    /** Human-readable opening hours of the cafe. */
    opening_hours?: string | null | undefined;

    /** Brief description of the cafe menu offerings. */
    menu_description?: string | null | undefined;

    /** URL string pointing to a photo of the cafe. */
    photo_url?: string | null | undefined;
  };

  /**
   * Summary view of specialty coffee cafe.
   *
   * Contains essential fields for listings such as ID, name, and address.
   */
  export type ISummary = {
    /**
     * Primary Key.
     *
     * Unique identifier of the specialty coffee cafe.
     */
    id: string & tags.Format<"uuid">;

    /** Unique name of the specialty coffee cafe. */
    name: string;

    /** Physical address of the cafe. */
    address: string;
  };
}
