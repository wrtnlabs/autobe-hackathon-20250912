import { tags } from "typia";

/**
 * Stores user-submitted suggestions for adding new cafes or editing existing
 * cafe information. Suggestions include proposed cafe data and track status for
 * review workflow, allowing independent management of suggestions separate from
 * the core cafe data. Each suggestion is linked to the member who submitted it
 * for accountability.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ISpecialtyCoffeeLogCafeSuggestion = {
  /**
   * Primary Key.
   *
   * Unique identifier of the cafe suggestion.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Submitting member's ID.
   *
   * References the member who submitted this suggestion.
   */
  member_id: string & tags.Format<"uuid">;

  /** Proposed cafe name in the suggestion. */
  name: string;

  /**
   * Proposed physical address in the suggestion.
   *
   * Nullable property.
   */
  address?: string | null | undefined;

  /**
   * Proposed contact info such as phone or email.
   *
   * Nullable property.
   */
  contact_info?: string | null | undefined;

  /**
   * Proposed opening hours in human-readable format.
   *
   * Nullable property.
   */
  opening_hours?: string | null | undefined;

  /**
   * Proposed menu description.
   *
   * Nullable property.
   */
  menu_description?: string | null | undefined;

  /**
   * Proposed photo URL for the cafe.
   *
   * Nullable property.
   */
  photo_url?: string | null | undefined;

  /**
   * Review status of the suggestion, such as 'pending', 'approved', or
   * 'rejected'.
   */
  status: string;

  /** Timestamp when the suggestion was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the suggestion was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the suggestion was soft deleted, if applicable.
   *
   * Nullable property.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ISpecialtyCoffeeLogCafeSuggestion {
  /**
   * Request body to request list or filter suggestions. Supports pagination,
   * filtering, sorting.
   */
  export type IRequest = {
    /** Pagination page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Pagination limit per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Search filter for cafe suggestion name partial match, case
     * insensitive.
     */
    searchName?: string | null | undefined;

    /**
     * Filter by suggestion status. Allowed values: 'pending', 'approved',
     * 'rejected'
     */
    status?: "pending" | "approved" | "rejected" | null | undefined;

    /** Sort field, e.g., 'created_at', 'updated_at'. */
    sortField?: string | null | undefined;

    /** Sort order, e.g., 'asc', 'desc'. */
    sortOrder?: "asc" | "desc" | null | undefined;
  };

  /** Request type for creating new cafe suggestions submitted by members. */
  export type ICreate = {
    /**
     * Submitting member's ID.
     *
     * Do NOT accept actor IDs directly - this must come from authentication
     * context.
     */
    member_id: string & tags.Format<"uuid">;

    /** Proposed cafe name in the suggestion. */
    name: string;

    /**
     * Proposed physical address in the suggestion.
     *
     * Nullable property.
     */
    address?: string | null | undefined;

    /**
     * Proposed contact info such as phone or email.
     *
     * Nullable property.
     */
    contact_info?: string | null | undefined;

    /**
     * Proposed opening hours in human-readable format.
     *
     * Nullable property.
     */
    opening_hours?: string | null | undefined;

    /**
     * Proposed menu description.
     *
     * Nullable property.
     */
    menu_description?: string | null | undefined;

    /**
     * Proposed photo URL for the cafe.
     *
     * Nullable property.
     */
    photo_url?: string | null | undefined;

    /**
     * Review status of the suggestion, such as 'pending', 'approved', or
     * 'rejected'.
     *
     * For creation, typically 'pending'.
     */
    status: string;
  };

  /** Request type for updating existing cafe suggestions by members. */
  export type IUpdate = {
    /** Proposed cafe name in the suggestion. */
    name?: string | undefined;

    /**
     * Proposed physical address in the suggestion.
     *
     * Nullable property.
     */
    address?: string | null | undefined;

    /**
     * Proposed contact info such as phone or email.
     *
     * Nullable property.
     */
    contact_info?: string | null | undefined;

    /**
     * Proposed opening hours in human-readable format.
     *
     * Nullable property.
     */
    opening_hours?: string | null | undefined;

    /**
     * Proposed menu description.
     *
     * Nullable property.
     */
    menu_description?: string | null | undefined;

    /**
     * Proposed photo URL for the cafe.
     *
     * Nullable property.
     */
    photo_url?: string | null | undefined;

    /**
     * Review status of the suggestion, such as 'pending', 'approved', or
     * 'rejected'.
     *
     * Status field is optional on update.
     */
    status?: string | undefined;
  };

  /**
   * Summary view of a cafe suggestion including essential fields such as id,
   * name, current review status, created and updated timestamps.
   *
   * This summary is suitable for listing cafe suggestions in member
   * dashboards or management interfaces.
   */
  export type ISummary = {
    /** Unique identifier of the cafe suggestion. */
    id: string & tags.Format<"uuid">;

    /** Proposed name of the cafe in the suggestion. */
    name: string;

    /**
     * Review status of the suggestion (e.g., "pending", "approved",
     * "rejected").
     */
    status: string;

    /** Timestamp when the suggestion was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the suggestion was last updated. */
    updated_at: string & tags.Format<"date-time">;
  };
}
