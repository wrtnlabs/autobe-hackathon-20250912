import { tags } from "typia";

/**
 * A global enumeration entry as defined in the ats_recruitment_enums Prisma
 * table for business logic and UI value-set management.
 *
 * Each enum code is uniquely defined within its enum_type and associated with
 * labels and optional metadata. Used for standardizing select options, status
 * codes, business constants, and system-wide code management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentEnum = {
  /**
   * Unique identifier (UUID) for this enum value. References the field 'id'
   * in the ats_recruitment_enums Prisma table.
   *
   * This value is system-generated upon creation and used for internal
   * lookups and relationships throughout the ATS platform.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The type or namespace for this enum set, such as 'application_status',
   * 'employment_type', or 'notification_channel'. Codes of the same type are
   * grouped for central business validation and for lookup selector
   * population (e.g., status dropdowns).
   *
   * This field is required and must match the business grouping as managed
   * within the platform and data dictionary.
   */
  enum_type: string;

  /**
   * Platform-wide business code (case-sensitive string) uniquely identifying
   * a value within its enum_type. For example, 'APPLIED', 'INTERVIEWED', or
   * 'EMAIL'. Used for system logic, API, and business rule matching.
   *
   * Must be unique in combination with enum_type.
   */
  enum_code: string;

  /**
   * Human-friendly label for this code, used for UI displays, reports, and
   * notifications. This string should be localized where appropriate.
   *
   * For example: '서류 지원', '면접 대상', or '이메일 알림'.
   */
  label: string;

  /**
   * Optional JSON string or opaque value containing additional display or
   * business metadata for the enum value. May include icon references, color
   * codes, sort order, or other business attributes relevant for UI and
   * workflow.
   *
   * Field is nullable and JSON-encoded by convention.
   */
  extended_data?: string | null | undefined;

  /**
   * Optional documentation or reference notes describing semantic usage of
   * this enum code. Intended as developer/business documentation and may
   * appear in platform admin screens.
   */
  description?: string | null | undefined;

  /**
   * Timestamp when this enum value was created in the system (ISO 8601). Used
   * for auditing, management, or reporting purposes.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp showing when this enum entity was last updated (ISO 8601). Must
   * be updated on every modification for compliance and traceability.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for the enum. Null if the code is currently
   * active. If set to a date, this value was soft-deleted and is not in
   * normal business use. Ensures compliance with business recovery, undo, and
   * error handling policies.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentEnum {
  /**
   * Request type for searching and paginating global enum registry values in
   * the system. Allows advanced filter criteria by enum_type (e.g.,
   * 'application_status'), code, label, or other search values. Supports
   * pagination via page/limit options.
   */
  export type IRequest = {
    /**
     * Enum category/group to filter by (e.g., 'application_status',
     * 'employment_type').
     */
    enum_type?: string | undefined;

    /** Specific business code to search for within the enum type. */
    enum_code?: string | undefined;

    /** Label text for searching matches in the UI/localized field. */
    label?: string | undefined;

    /** Text search on the enum value's description field (partial match). */
    description?: string | undefined;

    /**
     * Filter by deleted state: null = active only, or date-time = include
     * soft-deleted records.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page number for paginated search (1-based index). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum records to return per page for result set (default per system
     * policy).
     */
    limit?:
      | (number & tags.Type<"int32"> & tags.Minimum<1> & tags.Maximum<100>)
      | undefined;
  };
}
