import { tags } from "typia";

/**
 * Job Posting State entity representing a single state used in the ATS job
 * posting workflow. Includes metadata for admin/configuration and business
 * logic.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentJobPostingState = {
  /** Primary Key. Unique identifier for the job posting state entity. */
  id: string & tags.Format<"uuid">;

  /**
   * Machine-friendly state code (e.g., open, closed, paused, draft). Must be
   * unique within the system.
   */
  state_code: string;

  /** Human-readable label used for presentation and admin UI. */
  label: string;

  /**
   * Optional detailed business/policy description for this state. Explains
   * workflow effect, constraints, or historical notes.
   */
  description?: string | null | undefined;

  /**
   * Whether this posting state is selectable when creating or updating a job
   * posting.
   */
  is_active: boolean;

  /**
   * Ordering index for display and business rules. Lower number means higher
   * in lists.
   */
  sort_order: number & tags.Type<"int32">;

  /** Timestamp when this job posting state was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last modification. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when this state was deleted (soft deleted), or null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentJobPostingState {
  /**
   * Search/filter/pagination object for job posting state index/listing API.
   * All fields optional.
   */
  export type IRequest = {
    /**
     * Machine friendly code for the job posting state. Example: 'open',
     * 'closed', 'draft'.
     */
    state_code?: string | undefined;

    /** Human-friendly state label for UI display or configuration. */
    label?: string | undefined;

    /** Whether this state is active and available for new postings. */
    is_active?: boolean | undefined;

    /** Integer sort ordering index for listing or display. */
    sort_order?: (number & tags.Type<"int32">) | undefined;

    /** Page number for pagination (optional). */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Number of records per page (optional). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Start date for filtering by creation date (ISO 8601, optional). */
    from_created_at?: (string & tags.Format<"date">) | undefined;

    /** End date for filtering by creation date (ISO 8601, optional). */
    to_created_at?: (string & tags.Format<"date">) | undefined;
  };

  /**
   * Object to create a new job posting state. All required except
   * description. Used in the master data management of job posting state
   * workflows.
   */
  export type ICreate = {
    /**
     * Machine-friendly unique code to identify this job posting state
     * (e.g., 'open', 'paused'). Must be unique.
     */
    state_code: string;

    /**
     * Human-readable label for the job posting state, as displayed in admin
     * and user UIs.
     */
    label: string;

    /** Whether the state is selectable and available for workflow use. */
    is_active: boolean;

    /** Integer index for preferred ordering in UI or process logic. */
    sort_order: number & tags.Type<"int32">;

    /** Optional details/business description associated with the state. */
    description?: string | null | undefined;
  };

  /**
   * Update record for ats_recruitment_job_posting_states entity. Fields
   * optional and can be updated independently. Refer to business rules for
   * allowed state transitions and uniqueness constraints, as well as display
   * order.
   */
  export type IUpdate = {
    /**
     * Machine-friendly state code for the job posting state (e.g., open,
     * closed, paused, draft). Must match business rules and be unique among
     * active records.
     */
    state_code?: string | undefined;

    /**
     * Human-readable label for the job posting state. Displayed in
     * administration UIs and dropdowns.
     */
    label?: string | undefined;

    /**
     * Optional business or technical description for context and audit.
     * Null permitted.
     */
    description?: string | null | undefined;

    /**
     * Whether the state is currently selectable and available for new job
     * postings.
     */
    is_active?: boolean | undefined;

    /** Numeric ordering index for display and evaluation sequence. */
    sort_order?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Summary DTO for job posting workflow states in the ATS system. Used for
   * populating dropdowns and validating job posting status transitions.
   * Fields match the main key columns in the Prisma model.
   *
   * - Id: Primary key for the state.
   * - State_code: Internal workflow code.
   * - Label: UI display name.
   * - Is_active: Current active/inactive status.
   */
  export type ISummary = {
    /**
     * Unique identifier for the job posting state. This is the primary key
     * from the posting state entity in the Prisma schema.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Machine-friendly unique state code (e.g., 'open', 'closed',
     * 'paused'). Must be unique within the ATS job states. This corresponds
     * to 'state_code' in the Prisma schema.
     */
    state_code: string;

    /**
     * Human-readable label for the workflow status (e.g., 'Open',
     * 'Paused'). Used for UI display. Sourced from the Prisma schema.
     */
    label: string;

    /**
     * Indicates whether this job state is currently selectable. The same as
     * 'is_active' in the Prisma schema.
     */
    is_active: boolean;
  };
}
