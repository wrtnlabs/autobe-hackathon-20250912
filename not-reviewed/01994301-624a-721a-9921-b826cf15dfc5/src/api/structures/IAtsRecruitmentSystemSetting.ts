import { tags } from "typia";

/**
 * Represents a single global system configuration setting for the ATS platform.
 * Each setting controls a specific system-wide option, with a unique key
 * (`setting_name`), a value in string format (`setting_value`), the data type
 * of the value (`setting_type`), detailed documentation (`description`), and
 * audit trail fields. Soft-deletion is supported via `deleted_at`, and
 * timestamps track creation and modification.
 *
 * Properties are derived from the `ats_recruitment_system_settings` Prisma
 * table; all fields must match database schema column types and business rules.
 * This entity is used for get/find/detail API output and for administrative UIs
 * showing and updating system configuration. All properties except
 * `description` and `deleted_at` are required.
 *
 * @title ATS System Setting (Entity)
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentSystemSetting = {
  /** Primary Key. Unique system-generated UUID for the system setting record. */
  id: string & tags.Format<"uuid">;

  /**
   * The unique name/key for this configuration setting. Names must be unique
   * across all settings and correspond to a platform-wide option.
   */
  setting_name: string;

  /**
   * The current value of the setting as a string. How this value is
   * interpreted depends on `setting_type`.
   */
  setting_value: string;

  /**
   * Data type for interpreting `setting_value` (e.g., 'string', 'int',
   * 'boolean', 'json').
   */
  setting_type: string;

  /**
   * Long-form free text documentation and maintenance notes for this setting.
   * (optional)
   */
  description?: string | null | undefined;

  /** Timestamp of creation for this system setting record (ISO8601 UTC). */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update for this record (ISO8601 UTC). */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for this configuration record (null if active). */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentSystemSetting {
  /**
   * Request schema for searching and paginating ATS system settings. Used in
   * admin UI and backends for advanced platform configuration workflows. All
   * properties are optional for flexible filtering.
   */
  export type IRequest = {
    /** (Optional) Filter by exact setting name */
    setting_name?: string | undefined;

    /** (Optional) Filter by configuration value type */
    setting_type?: string | undefined;

    /**
     * (Optional) Restrict to system settings created after this UTC
     * timestamp
     */
    created_after?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * (Optional) Restrict to system settings created before this UTC
     * timestamp
     */
    created_before?: (string & tags.Format<"date-time">) | null | undefined;

    /** (Optional) If true, only returns active (not soft-deleted) settings */
    is_active?: boolean | undefined;

    /** Page number for result set pagination, 1-based, default 1 */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Page size/limit for pagination, must be positive */
    limit?: (number & tags.Type<"int32">) | undefined;
  };

  /**
   * Payload schema for creating a new ATS system setting. Used in system
   * admin UI for platform configuration. Optional description provides
   * business context/documentation for future maintainers.
   */
  export type ICreate = {
    /**
     * Unique key/name for the new system setting to create. Must not
     * conflict with existing setting_name values for data integrity.
     */
    setting_name: string;

    /**
     * Initial value of the setting in string format. Must be compatible
     * with the provided setting_type, and must follow business validation
     * logic.
     */
    setting_value: string;

    /**
     * Type of the setting (e.g., 'string', 'int', 'boolean', 'json'). Used
     * to control how the setting_value is interpreted at runtime.
     */
    setting_type: string;

    /**
     * Optional long-form documentation for the new setting (reason,
     * context, or usage policy).
     */
    description?: string | null | undefined;
  };

  /**
   * Payload schema for updating an existing ATS system setting. All
   * properties are individually optional and used to patch fields without
   * replacing the entire object. Used in granular configuration editing and
   * management interfaces.
   */
  export type IUpdate = {
    /**
     * (Optional) Updated key/name for the setting. Used for renaming, but
     * must retain global uniqueness.
     */
    setting_name?: string | undefined;

    /**
     * (Optional) Updated value for the setting, must match setting_type
     * constraints.
     */
    setting_value?: string | undefined;

    /**
     * (Optional) Alternative type for the setting, used in migrations or
     * policy changes.
     */
    setting_type?: string | undefined;

    /**
     * Optional updated description for the setting. Used to clarify new
     * context or behavior.
     */
    description?: string | null | undefined;
  };

  /**
   * Summary DTO for listing ATS system settings in paginated/search
   * responses. Contains subset of IAtsRecruitmentSystemSetting entity fields
   * for efficient table/list reporting. Excludes large descriptions or unused
   * audit fields.
   */
  export type ISummary = {
    /** Record UUID */
    id: string & tags.Format<"uuid">;

    /** Unique name/key for the setting */
    setting_name: string;

    /** Current value (in string form) */
    setting_value: string;

    /** Data type of the value */
    setting_type: string;

    /** Creation timestamp */
    created_at: string & tags.Format<"date-time">;

    /** Last updated timestamp */
    updated_at: string & tags.Format<"date-time">;
  };
}
