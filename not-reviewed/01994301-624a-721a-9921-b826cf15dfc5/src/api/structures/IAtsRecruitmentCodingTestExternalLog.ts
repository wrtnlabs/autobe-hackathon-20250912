import { tags } from "typia";

/**
 * Represents a record of an external log event for a coding test.
 *
 * Includes event metadata, raw event payload, optional provider/external
 * identifiers, timestamp, and audit information. Used for provider
 * troubleshooting, event forensics, compliance, and integration support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentCodingTestExternalLog = {
  /** Unique identifier for the coding test external log entry. */
  id: string & tags.Format<"uuid">;

  /** UUID of the coding test this log is associated with. */
  ats_recruitment_coding_test_id: string & tags.Format<"uuid">;

  /** Log event type (API request/response, error, callback, etc.). */
  event_type: string;

  /** Raw JSON or stringified event payload content. */
  event_payload: string;

  /**
   * External reference, such as provider ID or callback token. May be null
   * for internal events.
   */
  external_id?: string | null | undefined;

  /** Optional message or error context (may be null if not set). */
  message?: string | null | undefined;

  /** Timestamp when external log event occurred. */
  occurred_at: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last log update. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp; null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentCodingTestExternalLog {
  /**
   * Request schema for searching coding test external integration logs.
   *
   * Provides filter/search criteria with support for pagination and sorting
   * to review events, errors, or callbacks captured during coding test
   * provider integrations. Used by HR and system administrators for
   * troubleshooting and compliance review.
   */
  export type IRequest = {
    /** Type of event (e.g., api_request, api_response, callback, error). */
    event_type?: string | undefined;

    /** External system/entity identifier for filtering logs. */
    external_id?: string | undefined;

    /** Logs occurred at or after this ISO 8601 datetime. */
    occurred_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Logs occurred at or before this ISO 8601 datetime. */
    occurred_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** (Substring) pattern to search within the message body. */
    message?: string | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Page size / number of records to return. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Field to sort logs by, typically 'occurred_at'. */
    sort_by?: string | undefined;

    /** Sort order: asc or desc. */
    sort_order?: "asc" | "desc" | undefined;
  };

  /**
   * Summary object representing one entry in the coding test external log
   * (ats_recruitment_coding_test_external_logs).
   *
   * Enumerates one integration-related event for troubleshooting, external
   * trace audit, or status history.
   */
  export type ISummary = {
    /**
     * Unique ID of the external log entry. References
     * ats_recruitment_coding_test_external_logs.id
     */
    id: string & tags.Format<"uuid">;

    /**
     * Type of external integration event (api_request, callback, error,
     * status, etc). Categorizes log entry for troubleshooting.
     */
    event_type: string;

    /**
     * Short message or summary about the log event or external interaction.
     * Can be null for types without user-facing message.
     */
    message?: string | null | undefined;

    /**
     * UTC ISO 8601 timestamp when the external log event occurred. Used for
     * audit/log ordering.
     */
    occurred_at: string & tags.Format<"date-time">;
  };
}
