import { tags } from "typia";

/**
 * Complete audit trail record as defined in the ats_recruitment_audit_trails
 * table. Used as a base for audit log detail, compliance investigations, and
 * reporting APIs. Every record is uniquely identified and contains full
 * event/actor/entity/audit metadata.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentAuditTrails = {
  /**
   * Unique identifier for the audit trail record (primary key).
   *
   * From the 'id' field in the Prisma table.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Timestamp when the event occurred (UTC, ISO8601 string).
   *
   * Corresponds to 'event_timestamp'.
   */
  event_timestamp: string & tags.Format<"date-time">;

  /**
   * ID of the user, admin, or system component that performed the operation.
   *
   * References actor tables. Used for security investigation and audit
   * linking.
   */
  actor_id: string & tags.Format<"uuid">;

  /**
   * Role or identity of the actor at the time the event occurred.
   *
   * Typical values: systemAdmin, hrRecruiter, applicant, techReviewer,
   * backgroundJob.
   */
  actor_role: string;

  /**
   * Type of operation recorded ('CREATE', 'UPDATE', 'DELETE', 'ACCESS',
   * etc.).
   *
   * Tracks the nature of the event for reporting and forensics.
   */
  operation_type: string;

  /**
   * Type of entity/object impacted by this event.
   *
   * Examples: 'system_setting', 'api_credential', 'enum', 'user', etc.
   */
  target_type: string;

  /**
   * Identifier of the affected object/entity (may be null).
   *
   * May reference any primary key in the business tables. Used for
   * traceability.
   */
  target_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Serialized JSON or free-form text describing the event in detail.
   * Includes before/after, error messages, request metadata, etc.
   *
   * Allows for compliance review and incident reconstruction.
   */
  event_detail: string;

  /**
   * IP address of the actor for this event (nullable).
   *
   * Used in security forensics and threat analysis. Optional.
   */
  ip_address?: string | null | undefined;

  /**
   * User agent, device fingerprint, or context string.
   *
   * Used for fraud analysis and device attribution.
   */
  user_agent?: string | null | undefined;

  /**
   * Timestamp when the audit trail was created (system managed).
   *
   * Corresponds to 'created_at' field in Prisma.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * The most recent time this audit trail was updated.
   *
   * Supports traceability, correction records, etc.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion marker: null if active, set if this audit trail is
   * logically deleted (enables recovery/audit suppression).
   *
   * Matches 'deleted_at' field in schema.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentAuditTrails {
  /**
   * Search and filtering criteria for ATS system audit trail records. Not all
   * fields need to be set; filters are applied as provided. Supports full
   * pagination, text search, and advanced field filtering for compliance
   * review and traceability.
   */
  export type IRequest = {
    /** The page number for pagination (defaults to 1 if not present). */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Number of results per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Filter logs where actor_id matches this UUID. */
    actor_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Filter by actor role string (e.g. hrRecruiter, applicant,
     * systemAdmin, techReviewer).
     */
    actor_role?: string | undefined;

    /**
     * Filter by operation type (e.g. CREATE, UPDATE, DELETE, ACCESS,
     * EXPORT, etc).
     */
    operation_type?: string | undefined;

    /**
     * Filter by type of target object (e.g. application, enum,
     * system_setting, user, audit_policy, etc).
     */
    target_type?: string | undefined;

    /** Filter by target object's ID. */
    target_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional ISO8601 - only logs since this date/time. */
    since?: (string & tags.Format<"date-time">) | undefined;

    /** Optional ISO8601 - only logs until this date/time. */
    until?: (string & tags.Format<"date-time">) | undefined;

    /** Full-text search on event_detail field, supports partial match. */
    search?: string | undefined;

    /**
     * Field to sort by (e.g. event_timestamp, actor_id, operation_type,
     * etc).
     */
    sort_by?: string | undefined;

    /** Sort direction (asc/desc). */
    sort_order?: "asc" | "desc" | undefined;
  };
}
