import { tags } from "typia";

/**
 * Interview record representing a single interview scheduled for a job
 * application. Contains business and scheduling metadata, status, and event
 * audit fields.
 *
 * Directly maps to the ats_recruitment_interviews table in the Prisma schema.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentInterview = {
  /** Unique identifier for the interview record. */
  id: string & tags.Format<"uuid">;

  /** UUID of the linked job application (ats_recruitment_applications). */
  ats_recruitment_application_id: string & tags.Format<"uuid">;

  /** Interview event title/label assigned by HR, shown in calendar/events. */
  title: string;

  /** Pipeline stage label (e.g., 'first_phase', 'tech_round', 'hr', 'final'). */
  stage: string;

  /** Current status ('scheduled', 'cancelled', 'completed', 'failed', etc.) */
  status: string;

  /** Optional free-form notes or details for interview process/logs. */
  notes?: string | null | undefined;

  /** ISO8601 timestamp representing when the interview record was created. */
  created_at: string & tags.Format<"date-time">;

  /** ISO8601 timestamp for the last time this interview record was modified. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp if the interview is removed; null if not deleted.
   * Used for GDPR and undo tracking.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentInterview {
  /**
   * Request structure for searching/paginating interview records.
   *
   * Includes filters for stage, status, application ID, date, and keyword
   * search. Pagination and sorting supported.
   */
  export type IRequest = {
    /**
     * Page number for pagination - starts from 1. Optional. Used with limit
     * for paginated listings.
     */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /**
     * Maximum number of records per page. Optional. Default is usually
     * 20-100, set by API.
     */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Keyword text to search interview title or notes (optional). */
    search?: string | null | undefined;

    /**
     * Interview pipeline stage to filter (e.g., 'first_phase',
     * 'tech_round'). Optional.
     */
    stage?: string | null | undefined;

    /**
     * Filter by interview status (e.g., 'scheduled', 'completed',
     * 'cancelled'). Optional.
     */
    status?: string | null | undefined;

    /**
     * UUID of the application related to the interview for filtering.
     * Optional.
     */
    ats_recruitment_application_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /**
     * Start datetime (inclusive), filters interviews created after this
     * value. Optional, ISO8601 timestamp.
     */
    date_from?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * End datetime (inclusive), filters interviews created before this
     * value. Optional, ISO8601 timestamp.
     */
    date_to?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Sorting target field. One of 'created_at', 'updated_at', 'title',
     * 'stage'. Optional.
     */
    order_by?:
      | "created_at"
      | "updated_at"
      | "title"
      | "stage"
      | null
      | undefined;

    /**
     * Sorting direction, 'asc' (ascending) or 'desc' (descending).
     * Optional.
     */
    order_direction?: "asc" | "desc" | null | undefined;
  };

  /**
   * Structure for creating a new interview record. Used by HR to schedule a
   * new interview for an application. All main business fields must be
   * supplied except notes (which is optional).
   */
  export type ICreate = {
    /**
     * UUID of the job application for which interview is created
     * (required).
     */
    ats_recruitment_application_id: string & tags.Format<"uuid">;

    /** Interview event title, used in notifications and scheduling. */
    title: string;

    /** Label for the interview stage (e.g., 'first_phase', 'tech_round'). */
    stage: string;

    /**
     * Optional preparatory or background notes for the interview event or
     * interviewer.
     */
    notes?: string | null | undefined;
  };

  /**
   * Fields for updating interview information. All properties optional; only
   * included fields are updated. HR and admin may update interview details,
   * notes, or status as workflow changes. Used by endpoints supporting
   * PATCH/PUT for interview records.
   */
  export type IUpdate = {
    /** Updated title for the interview (optional). */
    title?: string | undefined;

    /** Updated interview stage label (optional). */
    stage?: string | undefined;

    /**
     * New interview status such as 'scheduled', 'cancelled', 'completed'.
     * Optional.
     */
    status?: string | undefined;

    /**
     * Updated notes or additional details for the interview (optional; can
     * be null to clear notes).
     */
    notes?: string | null | undefined;
  };

  /**
   * Summary representation of one interview (ats_recruitment_interviews) for
   * list/dashboard/reporting views.
   *
   * Includes most salient fields for filtering, assignments, and quick review
   * in HR/TechReviewer UI.
   */
  export type ISummary = {
    /**
     * Unique identifier for the interview entity. References
     * ats_recruitment_interviews.id
     */
    id: string & tags.Format<"uuid">;

    /**
     * The job application to which this interview applies. FK to
     * ats_recruitment_applications.id
     */
    ats_recruitment_application_id: string & tags.Format<"uuid">;

    /**
     * Interview title/label, as entered by HR or defaulted by the system.
     * Used for dashboard and summary listing.
     */
    title: string;

    /**
     * Interview stage or round (e.g. 'tech_round', 'hr', 'final'). Required
     * for business process and analytics.
     */
    stage: string;

    /**
     * Current/aggregate interview status: scheduled, completed, cancelled,
     * pending, etc. Required for interview tracking.
     */
    status: string;

    /** UTC ISO 8601 date-time of interview creation. */
    created_at: string & tags.Format<"date-time">;
  };
}
