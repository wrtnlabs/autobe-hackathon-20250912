import { tags } from "typia";

/**
 * Representation of an individual notification delivery failure audit event
 * (ats_recruitment_notification_failures). Tracks failed notification attempts
 * for compliance, troubleshooting, and management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentNotificationFailure = {
  /** Primary key (UUID) of the failure record. */
  id: string;

  /** ID (UUID) of the notification event to which this failure log relates. */
  notification_id: string;

  /**
   * Delivery attempt record id, if related to a specific delivery channel
   * attempt (UUID), or null.
   */
  delivery_id?: string | null | undefined;

  /**
   * Failure mode code for the notification delivery attempt. (e.g.,
   * provider_bounce, permanent_error, invalid_address, api_rejected,
   * user_optout).
   */
  failure_type: string;

  /** Provider/system error message for troubleshooting. */
  failure_message: string;

  /** Timestamp of the failure event, ISO8601/RFC3339 format. */
  occurred_at: string & tags.Format<"date-time">;

  /** Timestamp of creation for this failure log record. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update for this record. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp, or null if active. Maintains logical retention
   * compliance.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentNotificationFailure {
  /**
   * Filtering, search, and pagination criteria for querying notification
   * delivery failure records, supports all relevant query fields from
   * ats_recruitment_notification_failures for audit panels and
   * troubleshooting.
   */
  export type IRequest = {
    /** Filter by notification event id (UUID). */
    notification_id?: string | undefined;

    /** Filter by delivery log record id (UUID). */
    delivery_id?: string | undefined;

    /**
     * Type of failure filter (e.g., api_rejected, provider_bounce,
     * invalid_address, user_optout, permanent_error, etc.).
     */
    failure_type?: string | undefined;

    /** Lower bound for occurred_at ISO timestamp for time range filtering. */
    occurred_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** Upper bound for occurred_at ISO timestamp for time range filtering. */
    occurred_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number, starting from 1. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Records per page (pagination limit). */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Sort field (e.g., occurred_at, failure_type, etc.). */
    sort_by?: string | undefined;

    /** Sorting order: asc or desc. */
    sort_order?: "asc" | "desc" | undefined;
  };

  /**
   * Summary of a notification delivery failure for listing and audit
   * purposes.
   */
  export type ISummary = {
    /** Unique identifier for the notification failure record. */
    id: string & tags.Format<"uuid">;

    /**
     * Nature or category of failure (e.g., permanent_error,
     * provider_bounce, user_optout).
     */
    failure_type: string;

    /** Detailed failure message from notification provider or system. */
    failure_message: string;

    /** Timestamp when the failure occurred. */
    occurred_at: string & tags.Format<"date-time">;
  };
}
