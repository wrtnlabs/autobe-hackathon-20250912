import { tags } from "typia";

/**
 * Audit log record for a data masking event in the ATS system. Each record
 * captures when, who, why, and what data was masked, enabling transparent
 * compliance tracking for privacy regulations such as GDPR.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentMaskingLog = {
  /**
   * Unique identifier for this data masking log record. Each log entry
   * captures a singular masking event for audit and compliance.
   */
  id: string & tags.Format<"uuid">;

  /**
   * The timestamp at which the masking event was performed, in ISO8601
   * format. This indicates the moment data masking occurred, facilitating
   * chronological audits.
   */
  masked_at: string & tags.Format<"date-time">;

  /**
   * UUID of the actor (user or system) who performed masking. Helps in
   * tracing accountability for compliance and security teams.
   */
  masked_by_id: string & tags.Format<"uuid">;

  /**
   * The actor role/type who performed masking. Typical values include
   * 'applicant', 'hrRecruiter', 'techReviewer', 'systemAdmin', 'automated',
   * or 'compliance'. This clarifies the source of masking action for
   * regulatory context.
   */
  masked_by_type: string;

  /**
   * The class/type of data that was maskedâ€”e.g., 'resume', 'application',
   * 'contact info', etc. Enables quick filtering of masking events by data
   * category for compliance reviews.
   */
  target_type: string;

  /**
   * UUID of the entity that was masked. This points to the specific record
   * for audit, forensics, or data recovery verification.
   */
  target_id: string & tags.Format<"uuid">;

  /**
   * Stated business or compliance reason for masking (e.g., user request,
   * automated policy, privacy complaint, scheduled expiry, etc.). This
   * property records the motivation for masking for regulatory examination.
   */
  masking_reason: string;
};
export namespace IAtsRecruitmentMaskingLog {
  /**
   * Request object for querying/filtering paginated masking log entries.
   * Allows advanced filtering by actor type, target data type, masking
   * reason, and date range with pagination controls.
   */
  export type IRequest = {
    /**
     * Filter for the role/type of masking actor. Typically 'applicant',
     * 'hrRecruiter', 'techReviewer', 'systemAdmin', etc. Optional.
     */
    masked_by_type?: string | undefined;

    /**
     * Filter for masking events by data class/type, e.g., 'resume',
     * 'application'. Optional.
     */
    target_type?: string | undefined;

    /**
     * Filter for logs by specific masking reason, such as 'user request',
     * 'policy', 'GDPR', 'privacy'. Optional.
     */
    masking_reason?: string | undefined;

    /** Start datetime (inclusive, ISO8601) for filtering masking events. */
    masked_at_from?: (string & tags.Format<"date-time">) | undefined;

    /** End datetime (inclusive, ISO8601) for filtering masking events. */
    masked_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Page number to return for pagination. Defaults to 1 if omitted. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of records per page for pagination. Defaults to system
     * standard if omitted.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /**
   * Summary for a single data masking operation captured in the
   * ats_recruitment_masking_logs table. Used to trace privacy/encryption
   * workflow events (e.g., field masking, PII anonymization) for compliance
   * needs. Contains all direct identifiers for the masking/batch, actor,
   * reason, and affected resource.
   */
  export type ISummary = {
    /** Unique primary key (UUID) for this masking log entry. */
    id: string & tags.Format<"uuid">;

    /** Timestamp when this masking event occurred (UTC). */
    masked_at: string & tags.Format<"date-time">;

    /**
     * UUID of the actor (user/system/admin) who performed masking; not
     * strict FK for audit resilience.
     */
    masked_by_id: string & tags.Format<"uuid">;

    /**
     * Role/type of the actor (applicant, hrRecruiter, techReviewer,
     * systemAdmin, automated, etc.).
     */
    masked_by_type: string;

    /**
     * Resource/entity type that was masked (resume, contact info,
     * application, etc.).
     */
    target_type: string;

    /** UUID of the specifically masked record. */
    target_id: string & tags.Format<"uuid">;

    /**
     * Reason for masking (GDPR request, privacy incident, automated policy,
     * etc.).
     */
    masking_reason: string;
  };
}
