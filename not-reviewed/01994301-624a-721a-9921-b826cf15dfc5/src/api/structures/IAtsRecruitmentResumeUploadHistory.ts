import { tags } from "typia";

/**
 * Snapshot table for recording the full history of applicant resume uploads
 * (including replacements and repeated uploads).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentResumeUploadHistory = {
  /** Primary key (UUID) of this upload history record. */
  id: string & tags.Format<"uuid">;

  /**
   * Applicant ID from ats_recruitment_applicants.id. The user who performed
   * this upload.
   */
  ats_recruitment_applicant_id: string & tags.Format<"uuid">;

  /** Resume title (at time of upload) for recovery/display. */
  resume_title: string;

  /** Uploaded file name/upload snapshot. Used for audit and trace recovery. */
  file_name: string;

  /** Size of uploaded file in bytes (snapshot at time of upload). */
  file_size: number & tags.Type<"int32">;

  /** File extension/format at time of upload. */
  file_ext: string;

  /**
   * Full text or JSON snapshot of parsed resume at upload. Archival purpose
   * for audit/forensics.
   */
  resume_json_snapshot?: string | undefined;

  /** Timestamp of upload event. Immutable record. */
  upload_timestamp: string & tags.Format<"date-time">;

  /** IP address (when known) of actor uploading. Security/audit context. */
  source_ip?: string | undefined;
};
export namespace IAtsRecruitmentResumeUploadHistory {
  /**
   * Request filter for searching and paginating resume upload history events.
   * Allows search by page, limit, upload time range, file ext, file name,
   * applicant id. All fields are optional. Used on
   * ats_recruitment_resume_upload_histories.
   */
  export type IRequest = {
    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | undefined;

    /** Limit of records per page. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * Beginning of upload timestamp search range (inclusive). ISO8601
     * date-time string.
     */
    upload_timestamp_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * End of upload timestamp search range (inclusive). ISO8601 date-time
     * string.
     */
    upload_timestamp_to?: (string & tags.Format<"date-time">) | undefined;

    /** File extension to filter by (e.g., 'pdf', 'docx'). */
    file_ext?: string | undefined;

    /** Uploaded file name, partial or full, to search. */
    file_name?: string | undefined;

    /** Unique identifier (UUID) of applicant to filter upload histories. */
    applicant_id?: (string & tags.Format<"uuid">) | undefined;
  };
}
