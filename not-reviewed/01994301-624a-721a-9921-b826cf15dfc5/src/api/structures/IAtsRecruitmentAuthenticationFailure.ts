import { tags } from "typia";

/**
 * Detailed log record for a failed authentication event in the ATS system.
 * Includes timestamp, user identifier attempted, failure reason, IP/device
 * context, and lockout state. Supports compliance, fraud investigation, and
 * brute-force attack detection.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentAuthenticationFailure = {
  /**
   * Unique identifier for this authentication failure log. Used to reference
   * or audit specific authentication incidents for forensics and compliance.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Timestamp (ISO 8601) when the failed authentication event occurred.
   * Supports precise incident reporting.
   */
  attempted_at: string & tags.Format<"date-time">;

  /**
   * User-provided identifier (may be email, username, or ID) used during the
   * failed authentication attempt. Captures what the actor tried to use for
   * access.
   */
  attempted_user_identifier: string;

  /**
   * IP address (IPv4 or IPv6) of the device or origin making the failed login
   * attempt. Useful for security monitoring and brute-force attack
   * detection.
   */
  ip_address?:
    | (string & tags.Format<"ipv4">)
    | (string & tags.Format<"ipv6">)
    | undefined;

  /**
   * Browser user-agent or system context information at the time of login
   * attempt. Used for device fingerprinting and suspicious device detection.
   */
  device_info?: string | undefined;

  /**
   * Detailed technical/business reason for authentication failure (e.g.,
   * 'wrong password', 'locked account', 'user not found', 'expired token').
   * Granular error context for incident handling.
   */
  failure_reason: string;

  /**
   * Whether this failure contributed to or triggered an account lockout as
   * per security policy. Used for compliance tracking, account lockout policy
   * enforcement, and forensic audits.
   */
  lockout_triggered: boolean;
};
export namespace IAtsRecruitmentAuthenticationFailure {
  /**
   * Request object for searching and retrieving paginated authentication
   * failure logs. Supports advanced filter options by user identifier, IP
   * address, failure reason, lockout trigger, date range, and pagination.
   */
  export type IRequest = {
    /**
     * Optional filter for failed attempts by specific user email, username,
     * or identifier.
     */
    attempted_user_identifier?: string | undefined;

    /**
     * Optional filter for login attempts by specific IP address. Accepts
     * both IPv4 and IPv6 as string.
     */
    ip_address?: string | undefined;

    /**
     * Optional filter by authentication error reason (e.g. 'wrong
     * password', 'user not found').
     */
    failure_reason?: string | undefined;

    /** Optional filter—set true to query only lockout-triggering attempts. */
    lockout_triggered?: boolean | undefined;

    /**
     * Start datetime (inclusive, ISO8601) for filtering authentication
     * failure events.
     */
    attempted_at_from?: (string & tags.Format<"date-time">) | undefined;

    /**
     * End datetime (inclusive, ISO8601) for filtering authentication
     * failure events.
     */
    attempted_at_to?: (string & tags.Format<"date-time">) | undefined;

    /** Pagination page number to return. Defaults to 1 if omitted. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /**
     * Maximum number of records per page for pagination. Uses system
     * default if omitted.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;
  };

  /**
   * Summary view of an authentication failure event for audit and security
   * monitoring.
   *
   * Includes key fields required for analytics, investigation, and compliance
   * reporting. Mirrors audit record for authentication failure. Nullable
   * fields omitted or set as null when not captured. Excludes device_info and
   * user agent for privacy in summary context.
   */
  export type ISummary = {
    /**
     * Unique identifier of the authentication failure log event.
     *
     * This property is the primary key for referencing and retrieving
     * detailed information about a specific authentication failure attempt,
     * supporting audit and compliance tracking.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Timestamp of when the failed authentication attempt occurred (ISO
     * 8601, UTC).
     *
     * This represents the moment the login, token exchange, or
     * authentication workflow was attempted and denied.
     */
    attempted_at: string & tags.Format<"date-time">;

    /**
     * The username, email, or identifier supplied by the entity attempting
     * authentication.
     *
     * This field is used for tracing which user/account generated the
     * failure—may reference inactive/deleted/nonexistent users.
     */
    attempted_user_identifier: string;

    /**
     * IP address from which the failed authentication was attempted (can be
     * null).
     *
     * May include IPv4 or IPv6, or null if not provided by the system or
     * API.
     */
    ip_address?: string | null | undefined;

    /**
     * Human-readable or coded failure reason for the authentication denial.
     *
     * Examples: 'wrong password', 'user not found', 'account locked',
     * 'token expired', 'invalid credential', etc. Used for analytics, fraud
     * detection, and audit review.
     */
    failure_reason: string;

    /**
     * Indicates whether this failure contributed to triggering an account
     * lockout policy.
     *
     * True if the failed attempt incremented a lockout counter or caused
     * account suspension for security.
     */
    lockout_triggered: boolean;
  };
}
