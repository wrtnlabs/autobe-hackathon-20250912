import { tags } from "typia";

/**
 * Represents secure storage and metadata for an external API credential used by
 * the ATS platform to integrate with third-party services. Fields mirror the
 * corresponding Prisma schema. Contains encrypted credential data, expiration,
 * and system-managed audit information. Passwords or tokens are never exposed
 * via API endpoints. Used for admin and configuration management workflows
 * only.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAtsRecruitmentExternalApiCredential = {
  /**
   * Primary key. System-generated UUID identifier for the credential entry
   * (must match DB schema requirements).
   */
  id: string & tags.Format<"uuid">;

  /**
   * A globally unique, system-friendly key for referencing this credential
   * configuration (e.g., 'google_calendar_main', 'sendgrid_email_default').
   */
  credential_key: string;

  /**
   * The human-readable name of the external service that this credential is
   * for (e.g., 'Google Calendar', 'SendGrid', 'CodeSignal'). This is for
   * display and administrative lookup.
   */
  service_name: string;

  /**
   * The serialized credential data, typically a JSON object string holding
   * third-party secrets/tokens/keys as returned by the provider. This is
   * always encrypted at rest. Never exposed in responses by default.
   */
  credential_json: string;

  /**
   * Optional ISO 8601 expiration timestamp after which the credential should
   * be considered invalid. Used for token rotation and lifecycle management.
   */
  expires_at?: (string & tags.Format<"date-time">) | null | undefined;

  /**
   * Optional business/context documentation explaining where or why this
   * credential is used. Markdown/text allowed. Not PII.
   */
  description?: string | null | undefined;

  /** Creation timestamp (in UTC) for the credential record. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp for the last update/change to this credential record. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete marker used for credential removal/rotation operations. Null
   * if credential is active. Read-only for business logic.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAtsRecruitmentExternalApiCredential {
  /**
   * Request schema for searching/filtering/paginating ATS external API
   * credentials (ats_recruitment_external_api_credentials). Used in admin UI
   * or backend logic for secret management and audit.
   */
  export type IRequest = {
    /**
     * (Optional) Filter for records whose credential_key exactly matches
     * this value. Used to search for a specific integration credential key
     * (e.g., 'google_calendar_main').
     */
    credential_key?: string | undefined;

    /**
     * (Optional) Filter to restrict to credentials with a given
     * service_name (e.g., 'Google Calendar', 'SendGrid').
     */
    service_name?: string | undefined;

    /**
     * (Optional) If true, restrict to active credentials (not soft-deleted
     * and not expired). If false, returns all records regardless of
     * status.
     */
    is_active?: boolean | undefined;

    /**
     * (Optional) Restrict to credentials expiring after this timestamp
     * (ISO8601 formatted). Used for filtering soon-to-expire or valid
     * tokens.
     */
    expires_after?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * (Optional) Restrict to credentials expiring before this timestamp
     * (ISO8601 formatted). Used for filtering already expired or
     * soon-to-expire credentials.
     */
    expires_before?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * (Optional, 1-based) Page number for pagination. Default to 1 if
     * omitted. Used when result sets are large.
     */
    page?: (number & tags.Type<"int32">) | undefined;

    /**
     * (Optional) Maximum number of results per page for pagination. Must be
     * positive. Used to control result set size and page count.
     */
    limit?: (number & tags.Type<"int32">) | undefined;

    /**
     * (Optional) Field by which to sort results (e.g., 'created_at',
     * 'service_name').
     */
    sort_by?: string | undefined;

    /**
     * (Optional) Sort order direction. One of 'asc' (ascending) or 'desc'
     * (descending).
     */
    sort_order?: "asc" | "desc" | undefined;
  };

  /**
   * Request body for registering a new external API credential. Used by admin
   * users to register a new integration credential for third-party services.
   * Mirrors all required columns from Prisma schema except system-managed
   * audit fields. credential_json is required and holds the encrypted
   * credential payload. expires_at and description are optional.
   */
  export type ICreate = {
    /**
     * Globally unique key for this credential (must not clash with other
     * entries).
     */
    credential_key: string;

    /**
     * Name of the third-party integration service for which this credential
     * is valid.
     */
    service_name: string;

    /**
     * Encrypted credential configuration in JSON stringified format as
     * expected by client/provider. (Not literally plain text secret.)
     */
    credential_json: string;

    /**
     * Expiration date-time for this credential (optional). Null (or
     * omitted) means no fixed expiration.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional documentation or comments for credential usage. */
    description?: string | null | undefined;
  };

  /**
   * Request body to update fields on an existing external API credential.
   * Supports partial updates (PATCH semantics). At least one of the updatable
   * fields must be provided. Never allows direct update of system audit
   * fields or credential id. Used for key rotation, description changes, or
   * service name update. Respects the same constraints and validation logic
   * as the create DTO.
   */
  export type IUpdate = {
    /**
     * New unique credential key if changing the logical key. Must not
     * duplicate another credential's key.
     */
    credential_key?: string | undefined;

    /** New service name if changing the integrated service. */
    service_name?: string | undefined;

    /** New encrypted credential payload (JSON string). */
    credential_json?: string | undefined;

    /** Optional new expiration timestamp (null to clear). */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Documentation or business rationale update. */
    description?: string | null | undefined;
  };

  /**
   * Summary representation of an external API credential as used by the ATS
   * platform for auditing, rotation dashboards, and administration. Key
   * fields include identity, logical key, service name, optional expiration,
   * and soft deletion flag. Uniqueness is enforced at 'credential_key'. This
   * type is used in search results and list displays.
   */
  export type ISummary = {
    /**
     * Unique identifier of the external API credential.
     *
     * This field is the primary key for the credential record as defined in
     * the Prisma schema. It is used to reference, update, or delete this
     * credential.
     */
    id: string & tags.Format<"uuid">;

    /**
     * A unique logical key for the external credential. Used for
     * in-application reference, credential rotation, and service lookups.
     *
     * Matches the 'credential_key' field in the Prisma table.
     */
    credential_key: string;

    /**
     * Name of the third-party service the credential is for, e.g. Google
     * Calendar, SendGrid, etc. Used for display and filter.
     */
    service_name: string;

    /**
     * Indicates when the credential will expire, or null for non-expiring
     * entries.
     *
     * Pulled from the 'expires_at' column in Prisma. Allows for rotation
     * and expiring credential management.
     */
    expires_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Optional business/contextual description for what this credential is
     * used for.
     *
     * Corresponds to 'description' field in schema. Shown in audit, search
     * UI, or documentation screens.
     */
    description?: string | null | undefined;

    /**
     * Timestamp of when the credential record was created.
     *
     * Corresponds to 'created_at' in schema. Used for auditing and change
     * management.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * The last update timestamp for the credential entry.
     *
     * Field is managed by system and allows for audit trace history.
     */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion marker; null if active, set if this credential is
     * logically deleted.
     *
     * Important for audit recovery and for excluding from production
     * integration logic.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
