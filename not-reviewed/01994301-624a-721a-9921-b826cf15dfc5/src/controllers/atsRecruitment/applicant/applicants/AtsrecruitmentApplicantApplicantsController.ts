import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";

@Controller("/atsRecruitment/applicant/applicants/:applicantId")
export class AtsrecruitmentApplicantApplicantsController {
  /**
   * Deactivate (soft-delete) an applicant account in the
   * ats_recruitment_applicants table.
   *
   * Deactivates an applicant account by setting the deleted_at timestamp in the
   * ats_recruitment_applicants table. This approach follows GDPR and security
   * standards by ensuring the applicant's data is not hard-deleted but is
   * instead marked for deletion and excluded from normal business logic, while
   * audit log and compliance requirements are maintained.
   *
   * Only the applicant themselves can request deletion of their account, or a
   * system administrator may perform this for legal or compliance reasons. The
   * applicant's access to the platform is fully revoked after this operation,
   * and login attempts are blocked. Related data in applications, resumes, and
   * audit logs remain for compliance but with reduced PII visibility as
   * required.
   *
   * All actions are recorded in audit trails. Attempts to delete an applicant
   * who is already marked as deleted result in a no-op or idempotent response.
   * This operation is crucial for maintaining data subject rights under privacy
   * law and enabling secure account lifecycle management.
   *
   * @param connection
   * @param applicantId Unique identifier of the applicant account to be
   *   deactivated (UUID).
   * @nestia Generated by Nestia - https://github.com/samchon/nestia
   */
  @TypedRoute.Delete()
  public async erase(
    @TypedParam("applicantId")
    applicantId: string & tags.Format<"uuid">,
  ): Promise<void> {
    applicantId;
    return typia.random<void>();
  }
}
