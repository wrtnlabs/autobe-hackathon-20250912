{"operations":[{"specification":"This API endpoint allows new HR recruiters to register by providing a unique email (used for authentication and notification) and a secure password, which is stored as a one-way hash. The operation issues JWT tokens for session management. The registration process checks for the uniqueness of email and ensures profile data is complete. Upon successful creation, the new HR recruiter can access recruitment features. Email, password_hash, name, department, and is_active status are the primary fields, in line with the Prisma schema for the ats_recruitment_hrrecruiters table. The API participates in the typical 'member' flow: join → login → refresh.","authorizationType":"join","description":"This endpoint registers a new HR recruiter by creating a unique account in the ats_recruitment_hrrecruiters table. It requires the applicant to provide an email (must be unique), a plaintext password (stored as a hash), and other core fields such as name and optionally department, as defined in the schema. The API validates email uniqueness based on the unique constraint in the table. Upon successful registration, the operation creates an active HR recruiter account with is_active set to true, allowing access to recruitment management features. Security considerations include password hashing and account activation status. If an email already exists or a required field is missing, the operation returns an error. This operation is foundational—other auth flows (login, token refresh) require a prior join, and is thus an entry-point into the ATS system for HR users. Passwords must never be returned in the response or stored in plaintext. On success, returns an IAtsRecruitmentHrRecruiter.IAuthorized DTO which includes the full information required for client-side session management.","summary":"Register (join) as an HR recruiter using ats_recruitment_hrrecruiters schema.","parameters":[],"requestBody":{"description":"New HR recruiter registration form input.","typeName":"IAtsRecruitmentHrRecruiter.IJoin"},"responseBody":{"description":"Authorized session and recruiter resource after successful join.","typeName":"IAtsRecruitmentHrRecruiter.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/hrRecruiter/join","method":"post"},{"specification":"This API endpoint handles login for an HR recruiter using their unique email and password. On valid credentials, it issues JWT tokens containing role and permissions info. Failed attempts are tracked in ats_recruitment_actor_login_histories (referenced in the schema). Credentials are verified against the hashed password stored in ats_recruitment_hrrecruiters. The flow requires the account to have is_active set to true and not be soft-deleted. Security safeguards include account lockout after repeated failed attempts (coordinated with login history audit), and all events are auditable. Login enables full access to the member's privileges, enabling hiring workflow management as described for HR recruiter roles in requirements. Related flows: join must precede login; refresh requires previous successful authentication. Errors return standardized authentication failure codes and messages. On successful login, provides an IAtsRecruitmentHrRecruiter.IAuthorized DTO to establish session context on the client.","authorizationType":"login","description":"Allows an HR recruiter to authenticate using their unique email and plaintext password. The email is checked for existence in the ats_recruitment_hrrecruiters table, and passwords are hashed for secure comparison against password_hash. Login is rejected if is_active is false or deleted_at is not null. All events, including both successful and failed login attempts, are logged in ats_recruitment_actor_login_histories, as per security and audit requirements. Repeated failed logins may trigger account lockout (policy enforced using login history and not shown in this API directly). Security ensures passwords are never exposed outside the API boundary. The API issues new JWT tokens containing userId, role, and permissions, enabling the recruiter to carry out their recruitment operations. This operation is part of the core authentication lifecycle for members, and a successful join is mandatory before login. Associated endpoints: join (registration), refresh (token renewal).","summary":"Login for HR recruiter using ats_recruitment_hrrecruiters table.","parameters":[],"requestBody":{"description":"HR recruiter login request (email, password).","typeName":"IAtsRecruitmentHrRecruiter.ILogin"},"responseBody":{"description":"Authorized session object granted after successful login.","typeName":"IAtsRecruitmentHrRecruiter.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/hrRecruiter/login","method":"post"},{"specification":"This endpoint allows a previously authenticated HR recruiter to refresh their JWT access token using a valid refresh token. Token renewal checks that the user account is still active and not deleted (per the ats_recruitment_hrrecruiters schema). Upon validation, a new JWT is issued that includes current permissions, role, and actor ID. This flow requires the original session context (existing refresh token) and is intended for prolonging authenticated sessions without re-entering credentials. The endpoint never exposes credentials or password_hash and ensures issued tokens are based on latest HR recruiter profile state. Security rules enforce that refresh is only possible if the underlying HR recruiter record still has is_active true and deleted_at null. Refresh events are typically audited for security analysis. The endpoint is part of the core triplet for authentication: join (registration), login (credential auth), and refresh (token renewal). On success, returns an IAtsRecruitmentHrRecruiter.IAuthorized DTO for updated session establishment.","authorizationType":"refresh","description":"Refreshes the JWT access token for an HR recruiter using a valid refresh token. The system consults the ats_recruitment_hrrecruiters table, verifying the user's is_active status and that deleted_at is null. The token is extended or replaced, granting continued access to all privileges held at the time of refresh according to their role. The operation never returns or re-validates credentials. If the account is disabled or deleted, the operation fails. All refresh attempts and results may be logged for audit purposes per compliance best practices. Other APIs in the authentication workflow (join, login) are required for initial registration and gaining refresh token eligibility. On success, returns IAtsRecruitmentHrRecruiter.IAuthorized with updated session info and access/refresh tokens.","summary":"JWT token refresh for HR recruiter using ats_recruitment_hrrecruiters.","parameters":[],"requestBody":{"description":"Refresh token operation (requires valid refresh token).","typeName":"IAtsRecruitmentHrRecruiter.IRefresh"},"responseBody":{"description":"Authorized session payload for new tokens after refresh.","typeName":"IAtsRecruitmentHrRecruiter.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/hrRecruiter/refresh","method":"post"},{"specification":"Applicant authentication operations for the ATS recruitment system. These endpoints provide registration (join), login, and refresh functionality for user accounts stored in the ats_recruitment_applicants table. The table contains unique email (for login and notification), password_hash (for credential verification), name, phone (optional), is_active status, and audit timestamps. Each applicant must be uniquely identified by email. Passwords are stored as secure hashes only; no plaintexts are ever persisted. Soft deletion is managed by the deleted_at field for GDPR and account recovery. On successful registration or login, the API issues JWT access and refresh tokens, embedding user id and role. Token refresh relies on a valid refresh token; accounts with is_active=false or deleted_at!=null cannot authenticate or refresh tokens. This endpoint should be used exclusively for applicant accounts (not HR, reviewers, or admins). Account registration is available to the public, login is available to active applicant users, and refresh is for users with valid refresh tokens only. The response body for all 3 operations is IAtsRecruitmentApplicant.IAuthorized, following authentication response conventions.","authorizationType":"join","description":"This operation allows new applicants to register for the ATS recruitment system. Upon providing a unique email address and valid password (as stored via password_hash), the account is created in the ats_recruitment_applicants table, with is_active set to true and initial applicant details saved (name, phone, audit fields). The schema enforces unique email addresses per applicant; attempts to register with duplicate emails result in validation error. Password is stored exclusively as a secure hash (password_hash)—never in plaintext—per security best practices and Prisma schema documentation. The created record is immediately available for login and supports soft deletion for GDPR or voluntary account removal (deleted_at is null upon registration; if later set, login is blocked). The join endpoint also issues initial JWT access and refresh tokens, corresponding to the new user and returned as IAtsRecruitmentApplicant.IAuthorized in the response. Security considerations include mandatory HTTPS transport, password complexity enforcement at application level, and rejection of registration for existing or deactivated accounts. If registration succeeds, users can immediately proceed to login workflow. Related APIs include /auth/applicant/login (for credential login) and /auth/applicant/refresh (for token renewal). Errors are handled with structured messages, and all attempts (successful or failed) are logged in audit trails referencing applicant ID.","summary":"Register new applicant account (ats_recruitment_applicants) and issue JWT tokens.","parameters":[],"requestBody":{"description":"Applicant registration payload containing email, password, name, and phone (optional).","typeName":"IAtsRecruitmentApplicant.IJoin"},"responseBody":{"description":"JWT access/refresh tokens and authorized applicant profile.","typeName":"IAtsRecruitmentApplicant.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/applicant/join","method":"post"},{"specification":"Applicant authentication operations for the ATS recruitment system. These endpoints provide registration (join), login, and refresh functionality for user accounts stored in the ats_recruitment_applicants table. The table contains unique email (for login and notification), password_hash (for credential verification), name, phone (optional), is_active status, and audit timestamps. Each applicant must be uniquely identified by email. Passwords are stored as secure hashes only; no plaintexts are ever persisted. Soft deletion is managed by the deleted_at field for GDPR and account recovery. On successful registration or login, the API issues JWT access and refresh tokens, embedding user id and role. Token refresh relies on a valid refresh token; accounts with is_active=false or deleted_at!=null cannot authenticate or refresh tokens. This endpoint should be used exclusively for applicant accounts (not HR, reviewers, or admins). Account registration is available to the public, login is available to active applicant users, and refresh is for users with valid refresh tokens only. The response body for all 3 operations is IAtsRecruitmentApplicant.IAuthorized, following authentication response conventions.","authorizationType":"login","description":"This operation authenticates an applicant account via email and password, verifying credentials against the ats_recruitment_applicants table. The schema ensures that email is unique and password_hash is used for comparison—raw passwords are never stored. Only accounts with is_active=true and deleted_at=null can authenticate; attempts with deactivated accounts or deleted profiles are denied. Upon successful login, the API issues new JWT access and refresh tokens representing the logged-in applicant; tokens include user id, role, and permissions per business policy and are returned as IAtsRecruitmentApplicant.IAuthorized. Credential mismatches, soft-deleted, or inactive accounts result in login failure with clear error messages. All attempts are logged via linked actor ID in audit tables, referencing login attempt time, origin IP, and user agent. Security best practices require enforcing password complexity, rate limiting, and login history tracking. This operation is intended for the applicant role only; separate login endpoints exist for HR, reviewers, and admins. Upon success, users gain access to ATS applicant privileges (resume upload, application, test participation, etc.). Related: /auth/applicant/join (registration), /auth/applicant/refresh (token renewal), and audit tools for login tracking.","summary":"Login for applicant via email/password, issuing JWT access/refresh tokens (ats_recruitment_applicants).","parameters":[],"requestBody":{"description":"Applicant login credentials (email, password).","typeName":"IAtsRecruitmentApplicant.ILogin"},"responseBody":{"description":"JWT access/refresh tokens and authorized applicant profile.","typeName":"IAtsRecruitmentApplicant.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/applicant/login","method":"post"},{"specification":"Applicant authentication operations for the ATS recruitment system. These endpoints provide registration (join), login, and refresh functionality for user accounts stored in the ats_recruitment_applicants table. The table contains unique email (for login and notification), password_hash (for credential verification), name, phone (optional), is_active status, and audit timestamps. Each applicant must be uniquely identified by email. Passwords are stored as secure hashes only; no plaintexts are ever persisted. Soft deletion is managed by the deleted_at field for GDPR and account recovery. On successful registration or login, the API issues JWT access and refresh tokens, embedding user id and role. Token refresh relies on a valid refresh token; accounts with is_active=false or deleted_at!=null cannot authenticate or refresh tokens. This endpoint should be used exclusively for applicant accounts (not HR, reviewers, or admins). Account registration is available to the public, login is available to active applicant users, and refresh is for users with valid refresh tokens only. The response body for all 3 operations is IAtsRecruitmentApplicant.IAuthorized, following authentication response conventions.","authorizationType":"refresh","description":"This operation enables applicant users to obtain a new JWT access token using a valid refresh token, referencing their account in the ats_recruitment_applicants table. Only accounts with is_active=true and deleted_at=null can refresh tokens; attempts from deactivated or deleted users are denied. The operation checks that the refresh token is valid and not expired, and then issues a new pair of JWT access and refresh tokens, encoded with the applicant's id and role. If the refresh succeeds, the response is an IAtsRecruitmentApplicant.IAuthorized object with the new tokens and applicant profile. All refresh attempts—successful or failed—are audit-logged with applicant ID, IP address, and user agent (corresponding schema tables: ats_recruitment_actor_login_histories). This endpoint is intended solely for the applicant role and cannot be used for HR, reviewer, or admin authentication. Related endpoints: /auth/applicant/login (for credential login), /auth/applicant/join (for registration). Security considerations include rate limiting, session expiration policies, and token signature validation aligned with schema and audit policy.","summary":"Refresh JWT tokens for applicant account (ats_recruitment_applicants) with a valid refresh token.","parameters":[],"requestBody":{"description":"Refresh token request by applicant (token-based).","typeName":"IAtsRecruitmentApplicant.IRefresh"},"responseBody":{"description":"New JWT tokens and profile for applicant after refresh.","typeName":"IAtsRecruitmentApplicant.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/applicant/refresh","method":"post"},{"specification":"Generate a registration endpoint for the 'techReviewer' role (technical reviewer) for the ATS platform. This operation creates a technical reviewer account, issuing initial JWT tokens upon successful registration. It requires email and password_hash fields, both present in the ats_recruitment_techreviewers table, plus name and optional specialization for business context. This creation endpoint parallels other member-role account creation flows described in the requirements and enables technical reviewer onboarding. Only allow creation if email is unique and not already registered. Success returns the authorized account info and tokens defined in IAtsRecruitmentTechReviewer.IAuthorized. Incorporate explicit audit logging for role onboarding as per Prisma schema documentation.","authorizationType":"join","description":"This operation enables registration (join) of a new technical reviewer in the ATS system, utilizing the schema fields from the ats_recruitment_techreviewers table. It is required for onboarding tech reviewers responsible for coding test reviews, skill assessments, and technical interviews.\n\nSecurity checks are built-in to ensure email uniqueness (no account registered with same email can exist). The operation requires an email and password_hash (securely hashed), along with the name field and optionally the specialization for assignment matching. On successful join, system issues JWT tokens and authorizes the user.\n\nThe registration process is auditable using the audit trail mechanisms described for the platform; every registration attempt is logged for compliance. Additional fields from the schema, such as is_active and created_at, are set by the business logic, not by the registrant.\n\nThis function is foundational for all member-kind users in technical reviewer role and is a prerequisite for subsequent login or token refresh flows. Registration is public (no credentials required) and available only for unregistered emails.\n\nRelated operations include login and refresh for accessing or maintaining authorized sessions. Deletion/disable is performed via separate admin-only actions, not by this endpoint.","summary":"Register (join) a new technical reviewer user (ats_recruitment_techreviewers).","parameters":[],"requestBody":{"description":"Tech reviewer account creation fields (email, password_hash, name, optional specialization).","typeName":"IAtsRecruitmentTechReviewer.ICreate"},"responseBody":{"description":"Authorized tech reviewer identity and session tokens.","typeName":"IAtsRecruitmentTechReviewer.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/techReviewer/join","method":"post"},{"specification":"Implement a login endpoint for the 'techReviewer' role in the ATS platform. Supports credential validation using the email and password_hash fields defined in the ats_recruitment_techreviewers schema. Requires email and password for authentication; verifies password_hash against stored value. Upon success, issues JWT access and refresh tokens as described in platform requirements. Uses IAtsRecruitmentTechReviewer.ILogin for request and returns IAtsRecruitmentTechReviewer.IAuthorized. The flow includes login history log creation (ats_recruitment_actor_login_histories table) and audit trail update. Login attempts with incorrect credentials or inactive/deleted accounts are rejected with informative error codes. This endpoint is public (no prior authentication required).","authorizationType":"login","description":"Handles authentication (login) of technical reviewer accounts using unique email and password, referencing fields email and password_hash in ats_recruitment_techreviewers. Only active, non-deleted accounts are eligible for login.\n\nThe request body includes email and password, triggering a password_hash check against the stored value. Successful logins generate JWT access/refesh tokens and record login attempts in ats_recruitment_actor_login_histories and audit logs as per the schema. Unsuccessful logins due to wrong credentials, inactive, or soft deleted accounts respond with error codes per platform security policy.\n\nAll tokens include user id, role, and permissions, following the platform's JWT spec. The operation is accessible publicly (unauthenticated) and is essential for all member-kind technical reviewer users for system access after registration.\n\nThis endpoint is paired with registration (join) and token refresh (refresh) endpoints to support the technical reviewer authentication lifecycle, with credential updating handled separately.","summary":"Authenticate (login) technical reviewer by email and password (ats_recruitment_techreviewers).","parameters":[],"requestBody":{"description":"Tech reviewer login credentials (email, password).","typeName":"IAtsRecruitmentTechReviewer.ILogin"},"responseBody":{"description":"Authorized technical reviewer identity and JWT tokens.","typeName":"IAtsRecruitmentTechReviewer.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/techReviewer/login","method":"post"},{"specification":"Token refresh endpoint for 'techReviewer' role to renew JWT access tokens with valid refresh tokens, matching the member-kind workflow for secure session extension. Requires a valid refresh token, as described in platform requirements (JWT spec). Leverages the ats_recruitment_techreviewers table for identity validation and session reauthorization. No other fields needed. Returns IAtsRecruitmentTechReviewer.IAuthorized with new tokens. This operation is required to maintain secure, uninterrupted access for signed-in technical reviewers. Endpoint is public but requires a valid refresh token in HTTP headers or request context, not part of body. Audited via login histories and audit trail on token issuance. No personal data is updated by this endpoint.","authorizationType":"refresh","description":"Renews JWT access tokens for authenticated technical reviewers using a valid refresh token, as required for long-term session integrity in the ATS system. Implementation refers to the ats_recruitment_techreviewers table for active/inactive status checks and token validation. No user data fields are changed; only tokens are refreshed.\n\nThis endpoint is invoked by member-kind technical reviewer clients that present a valid refresh token (typically via cookie or header, per JWT platform requirements). If the refresh is valid and the account is active/non-deleted, new JWT access/refresh tokens are issued and audit trails updated for compliance.\n\nAccess requires a valid refresh token and is managed separately from login and registration; no credentials are passed in the body. Token refresh maintains session continuity for reviewers who already authenticated successfully.\n\nIf the refresh token is missing, expired, or invalid, the endpoint returns appropriate error codes. Related endpoints include join (account creation) and login, and token refresh records are included in ats_recruitment_actor_login_histories.","summary":"Refresh JWT access/refresh tokens for technical reviewer (ats_recruitment_techreviewers).","parameters":[],"requestBody":null,"responseBody":{"description":"Authorized technical reviewer identity and new JWT tokens.","typeName":"IAtsRecruitmentTechReviewer.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/techReviewer/refresh","method":"post"},{"specification":"This endpoint allows a new system administrator account to be created in the ATS recruitment system. The registration requires a unique email (used for login and notifications), a password hash (never storing plain text password), and the administrator's name. The field 'super_admin' can be used to specify if the administrator being created should have full platform privileges. Upon successful registration, a JWT token set is issued that authorizes all system administrative operations.\n\nThe endpoint uses the 'ats_recruitment_systemadmins' Prisma table. The database columns used are: id (PK, auto-generated), email (unique login), password_hash (for authentication), name (display/audit purposes), super_admin (boolean), is_active (defaults to true), created_at, updated_at, updated_at, and optionally deleted_at (for GDPR/soft-deletion).\n\nAll registration attempts should validate email uniqueness and minimum strength requirement for password hash. Audit trails must be maintained for the creation event referencing the actor (if any) and time. This endpoint is public, but the account is subject to approval policy per business rules.","authorizationType":"join","description":"This operation enables the registration of a new system administrator for the ATS recruitment platform.\n\nIt uses the 'ats_recruitment_systemadmins' table where each administrator is uniquely identified by their email. The registration process requires the email, password hash (stored securely), and name. You may optionally define 'super_admin' to grant full environment access. On success, an authorization token set is issued to the new admin.\n\nThis is the main entry point for platform administrator onboarding, ensuring full auditing and separation of duties per compliance rules. Email uniqueness and password strength validation are mandatory, and registration attempts should result in appropriate audit trail records in the system. The endpoint is public to allow invitation-based or first-time bootstrap of administrator, but the use is subject to additional manual approval steps in the business process.\n\nSecurity is paramount: never store plaintext passwords; only a strong cryptographic hash. The response returns the authorized admin record and JWT token set conforming to strict authentication schema.\n\nRelated endpoints: admin login (for existing accounts), admin token refresh, and admin deactivation/approval by super admins.","summary":"Register a new system administrator (ats_recruitment_systemadmins table) and issue JWT tokens.","parameters":[],"requestBody":{"description":"Administrator registration data","typeName":"IAtsRecruitmentSystemAdmin.IJoin"},"responseBody":{"description":"Authenticated admin + JWT tokens","typeName":"IAtsRecruitmentSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"join","path":"/auth/systemAdmin/join","method":"post"},{"specification":"This endpoint authenticates a system administrator in the ATS platform using their unique email and password hash. The underlying Prisma table involved is 'ats_recruitment_systemadmins', which holds the columns: email (unique login), password_hash (hashed for security), and is_active. The login checks for a unique, active account with a matching password hash. If successful, an authorization token set is generated for admin operations.\n\nThe API ensures that only enabled and non-deleted administrators can log in, referring to the is_active and deleted_at columns. Failed attempts should be logged in security/audit logs along with the actor's email and timestamp. The login operation outputs the authenticated admin entity and a newly issued JWT token set for further use in admin services. This endpoint does not perform registration or admin approval.","authorizationType":"login","description":"This operation authenticates a system administrator by validating the email and password hash against the 'ats_recruitment_systemadmins' table.\n\nIt ensures the provided email exists, password_hash matches, and the account is both active (is_active=true) and not soft-deleted (deleted_at=null). Password must be provided as a secure hash; plaintext passwords are never accepted or stored. Failed or successful attempts are logged in the audit system for compliance.\n\nOn success, issues a full JWT token set for access and refresh, allowing the admin to access privileged parts of the ATS system. Non-existent accounts, disabled users, and deleted records must return appropriate errors. Responses include the admin's core record and tokens in the 'IAtsRecruitmentSystemAdmin.IAuthorized' structure.\n\nSecurity: Always use timing-safe comparisons for hashes. Abuse prevention if login failed multiple times.\n\nRelated endpoints: admin registration, admin token refresh, admin password reset if recovery is needed.","summary":"Authenticate admin account and return tokens (ats_recruitment_systemadmins).","parameters":[],"requestBody":{"description":"Admin login credentials","typeName":"IAtsRecruitmentSystemAdmin.ILogin"},"responseBody":{"description":"Authenticated admin + JWT set","typeName":"IAtsRecruitmentSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"login","path":"/auth/systemAdmin/login","method":"post"},{"specification":"This endpoint refreshes JWT tokens for an authenticated system administrator based on a valid refresh token. The system validates the supplied refresh token, checks for the related admin's current enablement (is_active=true, deleted_at=null), and issues new access/refresh tokens upon successful verification. All security/session rules apply.\n\nThe endpoint uses the 'ats_recruitment_systemadmins' table for token association and privilege checks. The refresh request must refer only to active, non-deleted system admins. The system must manage the refresh token lifecycle and verify its authenticity, expiration, and revocation status.\n\nSuccessful refresh returns the admin's entity details and a fresh set of JWTs using the latest claims and current privileges from the database. Token generation and lifecycle must comply with platform security and regulatory practices. The endpoint itself does not perform login validation, only token renewal. Use associated security and audit logging for compliance.\n\nRelated endpoints include admin login and admin registration for account creation and first login.","authorizationType":"refresh","description":"Renews JWT tokens for authenticated ATS system administrators based on a valid, existing refresh token.\n\nRefers to the 'ats_recruitment_systemadmins' table and confirms the associated admin account is both enabled and not soft-deleted (is_active=true, deleted_at=null). Refresh tokens are checked for validity, freshness, and revocation in accordance with ATS security policies.\n\nOn successful verification, generates and returns updated access and refresh tokens, plus the admin profile entity. Facilitates continual secure admin privilege without need for password re-entry. If the refresh token is invalid, expired, or for an inactive/deleted account, returns an error response.\n\nAudit and security compliance is strictly enforced on every token refresh. Tokens use standard JWT structure configured for ATS system admin role.\n\nRelated endpoints: admin login (for new authentication), registration (for onboarding new admins).","summary":"Refresh admin JWT tokens using a valid refresh token (ats_recruitment_systemadmins).","parameters":[],"requestBody":{"description":"Refresh token submission body","typeName":"IAtsRecruitmentSystemAdmin.IRefresh"},"responseBody":{"description":"Authenticated admin + new JWT tokens","typeName":"IAtsRecruitmentSystemAdmin.IAuthorized"},"authorizationRole":null,"name":"refresh","path":"/auth/systemAdmin/refresh","method":"post"},{"specification":"This operation retrieves a paginated, filterable, and sortable list of system configuration settings managed within the ATS platform. It operates on the ats_recruitment_system_settings table and supports advanced search for system administrators to review and maintain global settings. The returned data includes all key metadata and status used in platform configuration auditing.","path":"/atsRecruitment/systemAdmin/systemSettings","method":"patch","summary":"Retrieve a filtered, paginated list of ATS system settings (ats_recruitment_system_settings)","description":"This endpoint allows system administrators to search for and retrieve a paginated list of all ATS platform-wide system settings. The operation provides advanced filtering on setting name, value, type, and temporal ranges.\n\nIt supports searching for specific settings, retrieving only active/non-deleted entries, filtering by created/updated timestamps, and sorting by name/type/created date. This helps administrators keep track of configuration changes, audit compliance, and troubleshoot system behavior based on global parameters.\n\nDue to the sensitive nature of system settings, access is restricted to systemAdmin role, and every invocation is audit-logged. Results are fully compliant with the underlying ats_recruitment_system_settings schema, including all key fields and relations. If no settings match the filter, an empty array is returned.","parameters":[],"requestBody":{"description":"Search and filter criteria for system settings, including setting name, type, value, date range, pagination, and sort options.","typeName":"IAtsRecruitmentSystemSetting.IRequest"},"responseBody":{"description":"Paginated list of settings with all configuration metadata as defined in the settings table.","typeName":"IPageIAtsRecruitmentSystemSetting"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation retrieves detailed information for a specific system configuration setting identified by its unique ID, from the ats_recruitment_system_settings table. Used by system administrators to inspect a configuration in full detail for audit, troubleshooting, or change planning.","path":"/atsRecruitment/systemAdmin/systemSettings/{systemSettingId}","method":"get","summary":"Retrieve a single system setting's detailed information by systemSettingId (ats_recruitment_system_settings)","description":"This endpoint allows a system administrator to fetch the complete details of a single ATS system setting by specifying its unique ID. It returns all defined metadata including setting name, value, type, full description, audit timestamps, and deleted_at if present.\n\nUse cases include auditing configuration changes, investigating system behavior, or preparing to update or disable a specific setting. If the setting is soft-deleted, a deleted_at value will be present for recovery or compliance monitoring.\n\nThe response structure matches the ats_recruitment_system_settings Prisma model, exposing every field necessary for platform configuration management. Only systemAdmin roles are authorized to call this endpoint.","parameters":[{"name":"systemSettingId","description":"Unique ID of the target ATS system setting to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the specified system setting, including all metadata and audit fields.","typeName":"IAtsRecruitmentSystemSetting"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation creates a new system configuration setting in the ATS platform by inserting a record into ats_recruitment_system_settings. It enforces uniqueness of setting name and validates all critical fields for platform configuration control. The operation is available only to system administrators for strict governance.","path":"/atsRecruitment/systemAdmin/systemSettings","method":"post","summary":"Create a new ATS system setting (ats_recruitment_system_settings)","description":"This endpoint allows system administrators to add a new global configuration setting to the ATS system. The input must provide a unique setting_name, value, type, and optionally a description. Constraints include setting_name uniqueness, valid value/type pairs, and full audit trace.\n\nIf a setting with the same name already exists, the operation will fail with a uniqueness violation error. Upon success, the endpoint returns the newly created setting's data including timestamps and all schema-defined metadata.\n\nEvery setting creation is logged for compliance review. Only systemAdmin role may create or modify global configurations, as these settings can affect the workflow for all users across the platform.","parameters":[],"requestBody":{"description":"Data required to create a new system setting, including unique name, value, type, and optional documentation.","typeName":"IAtsRecruitmentSystemSetting.ICreate"},"responseBody":{"description":"The newly created system setting with full metadata, as stored in the database.","typeName":"IAtsRecruitmentSystemSetting"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation updates an existing system configuration setting in the ATS platform by modifying a record in ats_recruitment_system_settings. It requires the unique ID of the setting to be updated and validates all input to prevent misconfiguration or accidental errors. Access is strictly limited to system administrators, and changes are fully audited for compliance.","path":"/atsRecruitment/systemAdmin/systemSettings/{systemSettingId}","method":"put","summary":"Update an existing ATS system setting by ID (ats_recruitment_system_settings)","description":"This endpoint enables system administrators to modify an existing ATS system setting by specifying its ID and providing new values for the fields to update. Partial updates require specifying all relevant fields, and all changes are subject to validation against the schema, including uniqueness of setting_name.\n\nOn success, the endpoint returns the updated system setting record, reflecting changes including value, type, description, and updated_at timestamp. This is used to manage platform behavior, enable/disable features, or adjust thresholds and parameters at runtime.\n\nAll update actions are audit-logged for traceability and compliance. Only the systemAdmin role is authorized to update global configuration settings.","parameters":[{"name":"systemSettingId","description":"Unique ID of the system setting to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data containing the fields to update for the target system setting.","typeName":"IAtsRecruitmentSystemSetting.IUpdate"},"responseBody":{"description":"The updated system setting data after modification is applied.","typeName":"IAtsRecruitmentSystemSetting"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation permanently deletes the specified system setting record from the ats_recruitment_system_settings table. Used by system administrators to remove obsolete or invalid global configuration parameters. The operation ensures that soft delete is performed by setting the deleted_at timestamp rather than physically removing the record, enabling recovery and audit compliance. Access is restricted to system administrator accounts only. Attempts to delete a non-existent or already deleted setting will result in a precise error indicating the status. Related audit trails record deletion events for compliance.","description":"This delete operation is leveraged to mark a system-wide configuration parameter as deleted in the ats_recruitment_system_settings table. The setting is not physically removed, but rather, the deleted_at field is set with the current timestamp, which is a soft delete implementation. \n\nThe endpoint requires system administrator privileges and is strictly audited by the ats_recruitment_audit_trails model for regulatory compliance and traceability. Any attempt by a non-admin user or request for a non-existent or previously deleted record results in an error.\n\nThis operation is used in conjunction with settings index, retrieval, and update endpoints. It is essential that business logic ensures only non-critical settings can be deleted, and deleted settings are not loaded into the live system configuration. Recovery, undo, or reactivation may require alternate routes and audit review. Error handling includes validation of permissions, existence, and current status before marking as deleted.","summary":"Soft delete a system setting (ats_recruitment_system_settings table) by ID.","parameters":[{"name":"systemSettingId","description":"Unique identifier (UUID) of the system setting to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase","path":"/atsRecruitment/systemAdmin/systemSettings/{systemSettingId}","method":"delete"},{"specification":"This operation retrieves a paginated, filterable, and sortable list of external API credentials from the ats_recruitment_external_api_credentials table. Designed for use by system administrators managing integration secrets for third-party services (e.g., calendar, SMS, AI APIs). Supports search by credential key, service name, and status, enabling audits, key rotations, and access validation.","description":"Fetch a filtered and paginated list of external API credentials stored in the ats_recruitment_external_api_credentials table. System administrators use this endpoint to audit, manage rotations, or validate integration credentials used by the ATS platform. Filtering options may include credential key, service name, and expiration status.\n\nThe response is paginated and may include metadata about the secret (excluding plaintext values), business usage description, and expiration details. Related endpoints such as credential creation, detail view, and deletion are used to extend the integration lifecycle. Only users with systemAdmin role may access this operation due to security-sensitive nature.","summary":"Search and list external API credentials (ats_recruitment_external_api_credentials table).","parameters":[],"requestBody":{"description":"Criteria for searching/filtering and paginating external API credentials.","typeName":"IAtsRecruitmentExternalApiCredential.IRequest"},"responseBody":{"description":"Paginated search results with summary data for external API credentials.","typeName":"IPageIAtsRecruitmentExternalApiCredential.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/atsRecruitment/systemAdmin/externalApiCredentials","method":"patch"},{"specification":"This operation retrieves detailed information about a single external API credential from the ats_recruitment_external_api_credentials table, identified by its unique credential ID. Used by system administrators for viewing credential metadata, status, audit details, and business context. The secret value itself is encrypted and only exposed in a secure, redacted manner or when explicitly allowed by policy.","description":"Retrieve full metadata for an external API credential in the ats_recruitment_external_api_credentials table (not including the raw credential secret), by specifying its credential ID in the path parameter. System administrators use this endpoint for troubleshooting, auditing, or regenerating integration keys.\n\nThe operation is restricted to systemAdmin users due to the sensitive nature of the information. The endpoint provides reference details such as credential key, service, description, expiration, and audit/conformity metadata. If the credential does not exist or is deleted, a precise error is returned. Related endpoints include credentials list search, create, update, and (soft) delete.","summary":"View external API credential detail (ats_recruitment_external_api_credentials table).","parameters":[{"name":"externalApiCredentialId","description":"Unique identifier (UUID) of the external API credential to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full metadata details for the specified external API credential (secret value redacted or securely handled).","typeName":"IAtsRecruitmentExternalApiCredential"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/atsRecruitment/systemAdmin/externalApiCredentials/{externalApiCredentialId}","method":"get"},{"specification":"This operation creates a new external API credential record in the ats_recruitment_external_api_credentials table. System administrators utilize it to securely register new third-party service credentials (e.g., calendar API keys, SMS gateway tokens). Credential fields include a unique key, service name, encrypted credential JSON, expiration timestamp, and business description. Audit logs are automatically created for compliance. Only systemAdmin users may perform this operation.","description":"Register a new external API credential into the ats_recruitment_external_api_credentials table, enabling secure storage and future management of integration secrets. The operation expects a payload with the credential key, service name, encrypted credential JSON, expiration details, and an optional business-purpose description. Upon successful creation, an audit record is generated for compliance tracking.\n\nAccess is restricted to systemAdmin users to safeguard secrets. Related endpoints support credential querying, updating, and (soft) deletion for secret rotation. The response includes the full metadata excluding plaintext credentials, confirming secure creation. If a credential key already exists, an error is returned. Input validation enforces business rules for service naming, expiration logic, and unique key assignment.","summary":"Create/register a new external API credential (ats_recruitment_external_api_credentials table).","parameters":[],"requestBody":{"description":"Information required to create/register a new external API credential.","typeName":"IAtsRecruitmentExternalApiCredential.ICreate"},"responseBody":{"description":"Metadata for the newly created external API credential, with sensitive data handled securely.","typeName":"IAtsRecruitmentExternalApiCredential"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"create","path":"/atsRecruitment/systemAdmin/externalApiCredentials","method":"post"},{"specification":"This operation updates the details of an external API credential entry referenced by the given externalApiCredentialId. It enables a system administrator to modify service credentials, such as rotating keys or updating connection metadata, for ATS integrations with third-party services. The operation strictly follows validation of the payload per schema, with emphasis on tracking changes (audit/compliance) and denying access to unauthorized roles. It is based on the ats_recruitment_external_api_credentials Prisma schema entity. The credential entity includes credential_key, service_name, credential_json (typically with secret keys/OAuth tokens), expiration date, and usage description. Only non-deleted, active credentials can be updated. All changes are strictly historical (created_at/updated_at tracking) and triggers audit trail records. Unique constraints are enforced on credential_key. Service credentials are not accessible to general business (HR/applicant) users; only systemAdmin role may perform this operation.","description":"Update the specified external API credential configuration in the ATS platform. This API operation allows a system administrator to replace, rotate, or update the contents of an existing credential, such as updating OAuth tokens for Google Calendar integration, or rotating the SendGrid API key used for notifications.\n\nThis operation enforces strict access control—the user must have the \"systemAdmin\" role. The target credential must exist and not be soft-deleted. When changes are made, an audit event is recorded.\n\nThe payload must provide updated values for relevant credential fields: credential_key (unique), service_name, credential_json (with secrets/tokens encrypted), expiration timestamp, and an optional description. Unique constraints on credential_key and referential integrity are ensured.\n\nSensitive information is encrypted at rest and only visible to highly privileged system/admin users. Regular business actors (applicants, HR, tech reviewers) are forbidden from direct access. Attempts to update non-existent or deleted credentials fail with a clear error. Input validation includes credential_key uniqueness, service_name integrity, credential_json format, and optional expires_at (must be in the future or null for unlimited).\n\nAll updates trigger audit trail entries with before/after snapshots for compliance and traceability. Related endpoints: credential creation (POST /externalApiCredentials), credential retrieval (GET /externalApiCredentials/{id}).","summary":"Update an external API credential configuration in ats_recruitment_external_api_credentials table.","parameters":[{"name":"externalApiCredentialId","description":"UUID for the specific external API credential to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated credential information for the external API integration credential.","typeName":"IAtsRecruitmentExternalApiCredential.IUpdate"},"responseBody":{"description":"The updated record of the external API credential with new values applied.","typeName":"IAtsRecruitmentExternalApiCredential"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/externalApiCredentials/{externalApiCredentialId}","method":"put"},{"specification":"This operation performs a soft delete of a specific external API credential entity identified by externalApiCredentialId from the ats_recruitment_external_api_credentials table. It is available exclusively to system administrators. The operation respects soft-delete semantics (setting deleted_at timestamp), making the credential unavailable for future API integrations without physically removing it from persistent storage. This ensures auditability and recovery for compliance, and prevents accidental credential loss. Access is strictly limited to users with \"systemAdmin\" role; audit/compliance logs are updated upon operation.","description":"Perform a soft delete on the specified external API credential record in the ATS platform. This operation is strictly for system administrative purposes and allows a systemAdmin to mark an external API credential as deleted (by setting the deleted_at field). The operation ensures that the credential is logically removed from active use for all subsequent API workflows and integrations, but physically retained for future recovery, compliance reviews, and audit purposes.\n\nThis deletion does not remove the credential from the database; rather, it flags the credential as deleted. All references in integration logic and ATS business workflows must ignore credentials marked as deleted_at != null.\n\nAll actions performed via this endpoint are recorded in audit logs for full traceability, including operation type, actor, and deletion reason/context for security incident response. This endpoint is not available to applicants, HR users, or technical reviewers and enforces access control before mutating the credential entity.\n\nError conditions include referencing a non-existent or already soft-deleted credential, or insufficient permissions. Related endpoints include external API credential creation, update, and credential usage tracking in integration layers.","summary":"Soft-delete an external API credential (flag deleted_at, not hard removal) in ats_recruitment_external_api_credentials table.","parameters":[{"name":"externalApiCredentialId","description":"UUID of target external API credential to be soft-deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/externalApiCredentials/{externalApiCredentialId}","method":"delete"},{"specification":"This operation searches and retrieves a paginated list of enumeration values registered in the ats_recruitment_enums table. It supports complex filtering by enum_type, enum_code, label, and other criteria. Results are intended for use in ATS workflows for populating dropdowns, validating codes, and enforcing business constraints. Public read access for enums is generally safe, but sensitive detail fields may be filtered based on role. The operation includes pagination, search, and sorting per standard conventions. All enum records, except soft-deleted ones, may appear per client criteria.","description":"Retrieve a filtered and paginated list of enumeration (enum) values registered in the ATS recruitment platform for business code lookup, dropdowns, and validation. This operation allows searching by enum_type (such as application_status, notification_channel), enum_code (unique code/constant for business logic), label (UI-visible string), and sorting/pagination/filtering as needed.\n\nOnly enum values that are not soft-deleted (deleted_at IS NULL) are included in listings. The fields available for query include: enum_type (category), enum_code (business code), label (for UI), description, and any optional extended_data for metadata.\n\nThis endpoint is open to all authenticated users and may be called by both backend services and client UIs to dynamically construct dropdowns and validation lists. Sensitivity of some enums (if any) should be managed with business logic in the implementation layer; schema-level access is not restricted. The operation is read-only and never exposes secrets. Standard pagination and search conventions apply. Related endpoints include single-enum retrieval (GET /enums/{id}) and enum creation/update (admin-only).","summary":"Search and retrieve a paginated, filterable list of enum values from ats_recruitment_enums table.","parameters":[],"requestBody":{"description":"Complex filter/search and pagination criteria for enum list retrieval.","typeName":"IAtsRecruitmentEnum.IRequest"},"responseBody":{"description":"Paginated result set of enum records matching provided criteria.","typeName":"IPageIAtsRecruitmentEnum"},"authorizationType":null,"authorizationRole":null,"name":"index","path":"/atsRecruitment/enums","method":"patch"},{"specification":"This operation fetches details of a specific enumeration value from the ats_recruitment_enums table, identified by enumId. The fetched record includes enum_type, enum_code, label, extended_data, description, and audit timestamps. Lookups are used for business logic validation, dropdown population, and reference integrity in ATS workflows. Enum details are not sensitive and safe for public or authenticated-read access. Returns null if not found or soft-deleted. Used by clients, admin panels, or reference validation workflows.","description":"Fetch detailed information for a specific enumeration (enum) value in the ATS recruitment system, identified by enumId (UUID). The returned entity contains all principal attributes: enum_type (category, such as application_status), enum_code (business code/constant), label (display value), extended_data (optional metadata for UI/widgets), description (usage context), and audit fields created_at/updated_at.\n\nThis operation is typically used for client-side data population, lookup, and data integrity validation. No secrets or confidential business logic is contained in the enum values. Access is open to all authenticated users and may be public if business logic allows. Only non-deleted (deleted_at IS NULL) enum records can be returned; otherwise, the response is null or error.\n\nRelated endpoints: paginated search/filter (PATCH /enums), enum creation/update (admin only). Error handling includes not-found, deleted, or invalid-id cases. All audit trail and data correctness constraints are handled at the implementation layer.","summary":"Retrieve a specific enum value's full details from ats_recruitment_enums table by UUID.","parameters":[{"name":"enumId","description":"UUID of the enumeration entity to fetch detailed information for.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full entity details for the requested enumeration value.","typeName":"IAtsRecruitmentEnum"},"authorizationType":null,"authorizationRole":null,"name":"at","path":"/atsRecruitment/enums/{enumId}","method":"get"},{"specification":"This operation creates a new enumeration value in the ATS platform by adding a record to the ats_recruitment_enums table. It is used for global registry and management of enum codes/types in the recruitment system (e.g., application statuses, notification channels, employment types). Only privileged users (systemAdmin) can create new enum values to ensure consistency and compliance across business processes. The operation requires the specification of the enum_type (namespace), enum_code (business key), label for display, and optional metadata. All fields are validated for uniqueness within each enum type. The operation enforces proper input, checks for uniqueness, and records all changes for audit compliance.","description":"This endpoint allows an authorized system administrator to add a new enumeration value to the central enum registry used across the ATS platform. The ats_recruitment_enums table is referenced for all business-specific codes and labels (such as job state codes, employment types, and notification channels) and supports critical application logic.\n\nThe operation enforces that enum_type and enum_code are unique within their grouping. Creation activity is logged for compliance and audit purposes. Only users with the \"systemAdmin\" role are authorized to invoke this endpoint, as incorrect or duplicate enums can cause system-wide lookup failures or inconsistencies.\n\nDuring processing, the input is validated for format, uniqueness, and required fields according to the schema. Optional attributes and extended metadata can be added to support custom UI or logic extensions. Errors may be thrown if constraint or naming violations occur, which are surfaced with clear messages for maintenance and audit traceability.","summary":"Create a new global enumeration for the recruitment system (ats_recruitment_enums table).","parameters":[],"requestBody":{"description":"Creation data for enumeration value including enum_type, enum_code, label, and optional metadata.","typeName":"IAtsRecruitmentEnums.ICreate"},"responseBody":{"description":"Details of the created enumeration record in the system.","typeName":"IAtsRecruitmentEnums"},"authorizationRoles":["systemAdmin"],"name":"create","path":"/atsRecruitment/systemAdmin/enums","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing enumeration value within the ats_recruitment_enums table in the ATS platform. It allows system administrators to modify the label, description, or extended attributes of a previously registered enum value. Critical for system maintenance and updating business requirements (e.g., updating status labels for UI, correcting metadata, etc.), it retains the code and type for relational integrity. All changes are tracked for audit and compliance purposes. Only accessible by users with system administrator authority.","description":"This endpoint lets a system administrator update details of a specific enumeration in the ats_recruitment_enums registry, identified by its unique UUID. Use cases include renaming labels for localization, adding descriptions for clarity, or modifying extended_data payloads for UI logic or integrations.\n\nReference to the existing enum is by enumId (UUID path parameter). Only the label, description, or extended_data fields may be updated—enum_type and enum_code should remain unchanged to avoid referential breakage. All modifications are logged in the audit trail for governance.\n\nStrict permission checks ensure that only authorized system administrators can perform modifications, as enum changes can have system-wide impact. Input validation will enforce type and length limits according to schema. Error responses are clear for traceability and remediation if the UUID is invalid or if the record is not found.","summary":"Update an existing enumeration value by UUID (ats_recruitment_enums table).","parameters":[{"name":"enumId","description":"Unique identifier (UUID) of the enum value to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated properties for the enumeration value (label, description, extended_data).","typeName":"IAtsRecruitmentEnums.IUpdate"},"responseBody":{"description":"The updated enumeration record after modification.","typeName":"IAtsRecruitmentEnums"},"authorizationRoles":["systemAdmin"],"name":"update","path":"/atsRecruitment/systemAdmin/enums/{enumId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation performs a soft deletion of an enumeration value from the ats_recruitment_enums table, using the specified enumId UUID as a path parameter. Soft delete marks the deleted_at field, making the enum unavailable for further business logic while preserving historical auditability. Deletion is restricted to system administrators to ensure the integrity of global reference data. Hard deletes are not supported for compliance reasons. All delete actions are logged for traceability.","description":"A system administrator can use this endpoint to logically remove (soft delete) an enumeration value from the central ats_recruitment_enums registry by specifying its UUID in the path parameter. Soft deletion sets the deleted_at timestamp, thereby hiding the enum from future use in business processes but keeping its record for audit and reference.\n\nThis operation is protected and only accessible by the \"systemAdmin\" role because enums are core to many business flows; improper deletion could break lookups and workflows. Audit logs record the actor, timestamp, reason, and affected record for compliance and future audits.\n\nThe operation validates the uuid format and existence before marking as deleted. Attempts to delete an already deleted or non-existent record result in a clear error message for remediation or further investigation.","summary":"Soft delete an enumeration value from the ATS global registry (ats_recruitment_enums table) by UUID.","parameters":[{"name":"enumId","description":"Unique identifier (UUID) of the enum value to be soft deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/enums/{enumId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation allows privileged system administrators to search, filter, and paginate audit logs from the ats_recruitment_audit_trails table. It supports querying by actor, operation type, target entity, timestamp ranges, and event context for compliance review, incident investigation, and operational monitoring. This read-only endpoint is essential for forensic investigations and external audits, enabling traceability of all significant system actions and configuration changes. It supports advanced query capabilities including full-text search of event details, result pagination, and sorting.","description":"This endpoint delivers a paginated and filterable list of audit trails for the ATS system, as recorded in the ats_recruitment_audit_trails table. It supports robust querying on actor ID, operation types (e.g., CREATE, UPDATE, DELETE, ACCESS), target types, time ranges, and partial/full-text event details (using trigram search where enabled).\n\nThe audit log index is vital for compliance and security review, supporting internal and external audit requirements for configuration changes, sensitive data access, and administrative actions. All API activity, business object modifications, and system events are chronologically archived and available to system administrators.\n\nAccess to this API is strictly restricted to the \"systemAdmin\" role for security and data privacy reasons. Requests specify search parameters, pagination options, and sorting preferences, returning a paged set of audit trail entries and associated metadata for review or download.","summary":"Search and retrieve paginated audit trails for all administrative/configuration events (ats_recruitment_audit_trails table).","parameters":[],"requestBody":{"description":"Search and filter parameters for querying audit logs (actor, operation, time range, etc.).","typeName":"IAtsRecruitmentAuditTrails.IRequest"},"responseBody":{"description":"Paginated result set of audit trail entries that match search criteria.","typeName":"IPageIAtsRecruitmentAuditTrails"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/atsRecruitment/systemAdmin/auditTrails","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieves a single audit log entry by its unique identifier from the ats_recruitment_audit_trails table. Designed for system administrators and compliance officers to review details of a specific system event (create, update, access, delete, security, export, etc.) for forensic analysis or compliance review. The audit log record includes precise timestamp, actor, operation type, target entity, event detail, IP address, and user agent, enabling authorized users to investigate security or operational incidents at a granular level. Access is role-restricted to those with systemAdmin authorization.","description":"This operation fetches a single, detailed audit trail entry from the ATS Audit Log using the primary key. The audit log record comprises information such as event timestamp, actor information, operation type, affected target and its type, event detail, IP address, and user agent string.\n\nAccess is strictly limited to users with the systemAdmin role due to the sensitivity and confidentiality of audit data, in compliance with audit and security requirements. The response structure mirrors the full schema of ats_recruitment_audit_trails, ensuring all relevant metadata for incident investigation is included.\n\nError handling: Returns 404 if the specified auditTrailId does not exist or caller lacks permission; all access attempts are further audited for compliance logging.","summary":"Retrieve a specific audit trail entry by its ID from ats_recruitment_audit_trails.","parameters":[{"name":"auditTrailId","description":"Unique identifier of the audit trail record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed audit log entry corresponding to the provided auditTrailId.","typeName":"IAtsRecruitmentAuditTrail"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/atsRecruitment/systemAdmin/auditTrails/{auditTrailId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Lists and searches applicant user accounts (ats_recruitment_applicants) with advanced filtering, pagination, and sorting for HR or admin usage. Enables review of onboarding, status, search by name/email/phone, and account activation. Pagination, keyword search, and sorting are supported, with request/response DTOs following enterprise conventions. Only available to HR users and system administrators for privacy.","description":"Enables HR recruiters or system administrators to retrieve a paginated, filterable list of applicant accounts from the ats_recruitment_applicants table. Search filters can include name, email, account status, creation date, and activation status.\n\nThe list supports pagination and sorting to efficiently browse large numbers of applicants, with performance optimized via indexed fields. Each applicant record includes primary identification data, contact details, activation state, and basic timestamps. Access is limited to authorized HR staff and administrators.\n\nRole-based restrictions ensure privacy of applicant contact data, and audit logging is performed for search activities. Standard error handling (permission denied, invalid parameters) applies to this operation.","summary":"Search and retrieve a paginated list of ats_recruitment_applicants records with filtering and sorting.","parameters":[],"requestBody":{"description":"Search criteria, pagination, and sorting parameters for applicant filtering.","typeName":"IAtsRecruitmentApplicant.IRequest"},"responseBody":{"description":"Paginated result set containing filtered applicant user summary records.","typeName":"IPageIAtsRecruitmentApplicant.ISummary"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"index","path":"/atsRecruitment/hrRecruiter/applicants","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Lists and searches applicant user accounts (ats_recruitment_applicants) with advanced filtering, pagination, and sorting for HR or admin usage. Enables review of onboarding, status, search by name/email/phone, and account activation. Pagination, keyword search, and sorting are supported, with request/response DTOs following enterprise conventions. Only available to HR users and system administrators for privacy.","description":"Enables HR recruiters or system administrators to retrieve a paginated, filterable list of applicant accounts from the ats_recruitment_applicants table. Search filters can include name, email, account status, creation date, and activation status.\n\nThe list supports pagination and sorting to efficiently browse large numbers of applicants, with performance optimized via indexed fields. Each applicant record includes primary identification data, contact details, activation state, and basic timestamps. Access is limited to authorized HR staff and administrators.\n\nRole-based restrictions ensure privacy of applicant contact data, and audit logging is performed for search activities. Standard error handling (permission denied, invalid parameters) applies to this operation.","summary":"Search and retrieve a paginated list of ats_recruitment_applicants records with filtering and sorting.","parameters":[],"requestBody":{"description":"Search criteria, pagination, and sorting parameters for applicant filtering.","typeName":"IAtsRecruitmentApplicant.IRequest"},"responseBody":{"description":"Paginated result set containing filtered applicant user summary records.","typeName":"IPageIAtsRecruitmentApplicant.ISummary"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"index","path":"/atsRecruitment/systemAdmin/applicants","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieves a detailed profile of a specific applicant from the ats_recruitment_applicants table using their unique applicantId. Returns all profile fields, including personal identifiers, contact information, activation status, and registration timestamps. Intended for HR recruiters or administrators for applicant review and management. Data access is role-protected to enforce privacy and compliance.","description":"Fetches the complete profile for a single applicant user account, identified by applicantId. Returns structured applicant profile data including authentication email, full name, phone, account activity status, registration, and update timestamps, mirroring the database record structure.\n\nOnly HR recruiters and system administrators are permitted to access this operation due to sensitive personal data. The system audits all access for compliance and privacy reporting. Responds with detailed 404/403 error on not-found or unauthorized access.","summary":"Get detailed applicant profile by applicantId from ats_recruitment_applicants.","parameters":[{"name":"applicantId","description":"Unique identifier of the applicant to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"ATS applicant profile details for the given applicantId.","typeName":"IAtsRecruitmentApplicant"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"at","path":"/atsRecruitment/hrRecruiter/applicants/{applicantId}","method":"get","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Retrieves a detailed profile of a specific applicant from the ats_recruitment_applicants table using their unique applicantId. Returns all profile fields, including personal identifiers, contact information, activation status, and registration timestamps. Intended for HR recruiters or administrators for applicant review and management. Data access is role-protected to enforce privacy and compliance.","description":"Fetches the complete profile for a single applicant user account, identified by applicantId. Returns structured applicant profile data including authentication email, full name, phone, account activity status, registration, and update timestamps, mirroring the database record structure.\n\nOnly HR recruiters and system administrators are permitted to access this operation due to sensitive personal data. The system audits all access for compliance and privacy reporting. Responds with detailed 404/403 error on not-found or unauthorized access.","summary":"Get detailed applicant profile by applicantId from ats_recruitment_applicants.","parameters":[{"name":"applicantId","description":"Unique identifier of the applicant to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"ATS applicant profile details for the given applicantId.","typeName":"IAtsRecruitmentApplicant"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"at","path":"/atsRecruitment/systemAdmin/applicants/{applicantId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Updates an existing applicant account's information in ats_recruitment_applicants. Accepts updates to permitted fields such as name, phone, password (hashed by backend), and activation status. Does not allow direct modification of system-managed identifiers or deletion fields. Enforces strict role-based access, allowing only HR or systemAdmin to modify accounts for compliance. Returns updated applicant profile on success.","description":"Modifies the profile of an existing applicant account as identified by applicantId in the path. Permitted updatable fields include name, phone number, and account activation state (is_active). The authenticated backend system always safely processes the new password (if present) as a secure hash, never as plaintext. Attempts to update email or primary identifier fields are rejected.\n\nOnly accessible to HR recruiters and system administrators for account management. All operations are audited for security, and changes to key fields are logged for compliance. Returns the updated profile record or appropriate error (not found, permission denied, invalid input).","summary":"Update an existing applicant account by applicantId in ats_recruitment_applicants.","parameters":[{"name":"applicantId","description":"Unique identifier of the applicant account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the applicant profile (name, phone, password, is_active).","typeName":"IAtsRecruitmentApplicant.IUpdate"},"responseBody":{"description":"Updated applicant profile record in response to the update operation.","typeName":"IAtsRecruitmentApplicant"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"update","path":"/atsRecruitment/hrRecruiter/applicants/{applicantId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Updates an existing applicant account's information in ats_recruitment_applicants. Accepts updates to permitted fields such as name, phone, password (hashed by backend), and activation status. Does not allow direct modification of system-managed identifiers or deletion fields. Enforces strict role-based access, allowing only HR or systemAdmin to modify accounts for compliance. Returns updated applicant profile on success.","description":"Modifies the profile of an existing applicant account as identified by applicantId in the path. Permitted updatable fields include name, phone number, and account activation state (is_active). The authenticated backend system always safely processes the new password (if present) as a secure hash, never as plaintext. Attempts to update email or primary identifier fields are rejected.\n\nOnly accessible to HR recruiters and system administrators for account management. All operations are audited for security, and changes to key fields are logged for compliance. Returns the updated profile record or appropriate error (not found, permission denied, invalid input).","summary":"Update an existing applicant account by applicantId in ats_recruitment_applicants.","parameters":[{"name":"applicantId","description":"Unique identifier of the applicant account to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update on the applicant profile (name, phone, password, is_active).","typeName":"IAtsRecruitmentApplicant.IUpdate"},"responseBody":{"description":"Updated applicant profile record in response to the update operation.","typeName":"IAtsRecruitmentApplicant"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"update","path":"/atsRecruitment/systemAdmin/applicants/{applicantId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation deactivates an applicant account by setting the soft deletion timestamp on the applicant record. It operates on the ats_recruitment_applicants table, ensuring that accounts are not permanently removed but instead marked as deleted for audit trail and GDPR compliance. Account deactivation prevents login and all access to services, but audit traces are retained for compliance and security. This is a critical operation for responding to user deletion requests or administrative actions to remove an applicant's access. Soft deletion is used to allow potential recovery or audit investigation. Only the applicant themselves or system administrators should be authorized for this operation.","description":"Deactivates an applicant account by setting the deleted_at timestamp in the ats_recruitment_applicants table. This approach follows GDPR and security standards by ensuring the applicant's data is not hard-deleted but is instead marked for deletion and excluded from normal business logic, while audit log and compliance requirements are maintained.\n\nOnly the applicant themselves can request deletion of their account, or a system administrator may perform this for legal or compliance reasons. The applicant's access to the platform is fully revoked after this operation, and login attempts are blocked. Related data in applications, resumes, and audit logs remain for compliance but with reduced PII visibility as required.\n\nAll actions are recorded in audit trails. Attempts to delete an applicant who is already marked as deleted result in a no-op or idempotent response. This operation is crucial for maintaining data subject rights under privacy law and enabling secure account lifecycle management.","summary":"Deactivate (soft-delete) an applicant account in the ats_recruitment_applicants table.","parameters":[{"name":"applicantId","description":"Unique identifier of the applicant account to be deactivated (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"applicant","name":"erase","path":"/atsRecruitment/applicant/applicants/{applicantId}","method":"delete"},{"specification":"This operation deactivates an applicant account by setting the soft deletion timestamp on the applicant record. It operates on the ats_recruitment_applicants table, ensuring that accounts are not permanently removed but instead marked as deleted for audit trail and GDPR compliance. Account deactivation prevents login and all access to services, but audit traces are retained for compliance and security. This is a critical operation for responding to user deletion requests or administrative actions to remove an applicant's access. Soft deletion is used to allow potential recovery or audit investigation. Only the applicant themselves or system administrators should be authorized for this operation.","description":"Deactivates an applicant account by setting the deleted_at timestamp in the ats_recruitment_applicants table. This approach follows GDPR and security standards by ensuring the applicant's data is not hard-deleted but is instead marked for deletion and excluded from normal business logic, while audit log and compliance requirements are maintained.\n\nOnly the applicant themselves can request deletion of their account, or a system administrator may perform this for legal or compliance reasons. The applicant's access to the platform is fully revoked after this operation, and login attempts are blocked. Related data in applications, resumes, and audit logs remain for compliance but with reduced PII visibility as required.\n\nAll actions are recorded in audit trails. Attempts to delete an applicant who is already marked as deleted result in a no-op or idempotent response. This operation is crucial for maintaining data subject rights under privacy law and enabling secure account lifecycle management.","summary":"Deactivate (soft-delete) an applicant account in the ats_recruitment_applicants table.","parameters":[{"name":"applicantId","description":"Unique identifier of the applicant account to be deactivated (UUID).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/applicants/{applicantId}","method":"delete"},{"specification":"This operation retrieves a filtered, paginated list of HR recruiter accounts from the ats_recruitment_hrrecruiters table. It supports advanced search, filtering by name, email, department, activation status, and creation date as well as pagination and sorting by key columns. This is used by administrators for oversight, by system operators for reporting, and by internal tools for directory and access management. All sensitive account data is returned in summary format for secure viewing. This endpoint does not return credentials or sensitive security hashes.","description":"Lists and searches HR recruiter accounts according to advanced filtering and pagination criteria. Only users with proper authorization, typically system administrators, can use this operation to view and manage HR user lists. Supported filters include name, email, department, account status, and registration date. Sorting and pagination are required to handle large account sets efficiently.\n\nReturned recruiter information includes profile name, email, department, account status (is_active) and audit dates but never includes credentials or password hashes. Search access is logged for administrative forensics and privacy compliance. Public or applicant users cannot access this endpoint. Related endpoints allow administrators to manage or view individual HR accounts in detail.","summary":"Search and retrieve a paginated list of HR recruiters from ats_recruitment_hrrecruiters.","parameters":[],"requestBody":{"description":"Filtering, searching, and pagination criteria for HR recruiter account search.","typeName":"IAtsRecruitmentHrRecruiter.IRequest"},"responseBody":{"description":"Paginated result set of HR recruiter summary information matching search criteria.","typeName":"IPageIAtsRecruitmentHrRecruiter.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/hrRecruiters","method":"patch"},{"specification":"This operation retrieves detailed information for a specific HR recruiter by their unique identifier from the ats_recruitment_hrrecruiters table. It is used for account management, auditing, and HR user profile view purposes. The data includes profile fields, department, account status, and audit timestamps, but excludes sensitive authentication data. Access is restricted to system administrators to protect privileged data and prevent unauthorized disclosure of HR staff information.","description":"Returns detailed information for one HR recruiter account, enabling system admins to review account status, department details, name, and profile audit details. Email, name, and department fields are returned but security credentials including password hashes are strictly excluded from the response for security compliance.\n\nThis operation is necessary for administrative UI, support operations, and compliance verification. The endpoint is access-controlled to only system administrators for privacy and security. Any access to this data is logged in audit trails for regulatory and business record keeping. Attempting to access a non-existent account should return a clear error response.","summary":"Retrieve a detailed HR recruiter account by unique identifier from ats_recruitment_hrrecruiters.","parameters":[{"name":"hrRecruiterId","description":"Unique identifier (UUID) of the HR recruiter account to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed HR recruiter account information matching the provided identifier.","typeName":"IAtsRecruitmentHrRecruiter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/hrRecruiters/{hrRecruiterId}","method":"get"},{"specification":"This operation updates all modifiable fields of a specific HR recruiter account in the ats_recruitment_hrrecruiters table, given the recruiter's unique identifier. System administrators use this endpoint to modify profile details such as name, department, and account status. Sensitive fields such as password hash are not directly updatable through this endpoint. Administrative operations are fully audited and restricted to maintain security and business controls. Only system administrators have permission to execute account modification.","description":"Performs an account modification on a targeted HR recruiter record, enabling updates to name, department, and is_active status, but never direct updates of password hashes or security credentials. All modifications are tracked for audit compliance, including before-and-after state information for regulatory record keeping.\n\nThis endpoint is access-restricted to system administrators, ensuring only privileged users may perform account profile changes. All update events are recorded in audit trails and may trigger notification workflows if account status or department changes. Related endpoints support searching, viewing, or deactivating HR recruiter accounts. If the specified account does not exist, a clear error response is provided.","summary":"Update an HR recruiter account's profile details in ats_recruitment_hrrecruiters.","parameters":[{"name":"hrRecruiterId","description":"Unique identifier (UUID) of the HR recruiter account to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated HR recruiter account profile fields (except password) to apply.","typeName":"IAtsRecruitmentHrRecruiter.IUpdate"},"responseBody":{"description":"The updated HR recruiter account details after modification.","typeName":"IAtsRecruitmentHrRecruiter"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/hrRecruiters/{hrRecruiterId}","method":"put"},{"specification":"This operation permanently deletes an HR recruiter account by their unique identifier. It is designed for use by system administrators to remove HR recruiters who have left the organization or should no longer have access to the system. The operation ensures that the 'ats_recruitment_hrrecruiters' table is updated accordingly, setting the 'deleted_at' timestamp (soft delete) and disabling sensitive system access. This supports compliance with audit requirements and separation of duties within the ATS platform.","description":"This API endpoint allows system administrators to deactivate and mark as deleted a specific HR recruiter account. The operation targets the 'ats_recruitment_hrrecruiters' table, and performs a soft-delete by setting the 'deleted_at' field, which ensures business auditability and traceability in compliance with legal and HR best practices.\n\nSystem admins must use this endpoint when an HR staff member leaves the company, changes roles, or loses system privileges. The deletion preserves historical data about managed job postings, applications, and related audit trails, while preventing future logins from the deleted account. The process also updates the 'is_active' flag as needed.\n\nThe operation is restricted to systemAdmin roles, reflecting high security requirements. Attempts to delete the last remaining admin or currently active session will result in an error. Soft-deletion allows for recovery or compliance review.\n\nRelated endpoints: list HR recruiters, create HR recruiter, view HR recruiter details. Error cases include attempting to delete already deleted or non-existent accounts, and insufficient privileges.","summary":"Deactivate (soft-delete) an HR recruiter account by ID in ats_recruitment_hrrecruiters","parameters":[{"name":"hrRecruiterId","description":"Unique identifier of HR recruiter to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/hrRecruiters/{hrRecruiterId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of technical reviewer accounts registered on the ATS platform. It operates on the ats_recruitment_techreviewers table and supports advanced search, filtering, and sorting by reviewer name, email, specialization, and activation status. This enables system administrators and HR teams to efficiently manage, audit, and assign tech reviewers for coding tests and interviews.","description":"Retrieve a filtered list of technical reviewers for system overview, assignment, and audit purposes. The operation queries the ats_recruitment_techreviewers table and supports search parameters such as reviewer name (partial match search), email, specialization, active status, and date of registration. Pagination parameters allow the client to navigate large reviewer datasets efficiently.\n\nSecurity restrictions limit this endpoint to system administrators and HR recruiters, as tech reviewer accounts may contain sensitive information. Filtering, sorting, and pagination enhance the administrative user experience and audit control.\n\nRelated API operations include creating, updating, retrieving, or deactivating technical reviewer accounts. Error handling includes invalid filter parameters and excessive pagination requests.","summary":"List and search technical reviewers with advanced filtering and pagination","parameters":[],"requestBody":{"description":"Search filters, sorting, and pagination information for technical reviewer listing","typeName":"IAtsRecruitmentTechReviewer.IRequest"},"responseBody":{"description":"Paginated list of tech reviewer account summaries","typeName":"IPageIAtsRecruitmentTechReviewer.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","path":"/atsRecruitment/systemAdmin/techReviewers","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of technical reviewer accounts registered on the ATS platform. It operates on the ats_recruitment_techreviewers table and supports advanced search, filtering, and sorting by reviewer name, email, specialization, and activation status. This enables system administrators and HR teams to efficiently manage, audit, and assign tech reviewers for coding tests and interviews.","description":"Retrieve a filtered list of technical reviewers for system overview, assignment, and audit purposes. The operation queries the ats_recruitment_techreviewers table and supports search parameters such as reviewer name (partial match search), email, specialization, active status, and date of registration. Pagination parameters allow the client to navigate large reviewer datasets efficiently.\n\nSecurity restrictions limit this endpoint to system administrators and HR recruiters, as tech reviewer accounts may contain sensitive information. Filtering, sorting, and pagination enhance the administrative user experience and audit control.\n\nRelated API operations include creating, updating, retrieving, or deactivating technical reviewer accounts. Error handling includes invalid filter parameters and excessive pagination requests.","summary":"List and search technical reviewers with advanced filtering and pagination","parameters":[],"requestBody":{"description":"Search filters, sorting, and pagination information for technical reviewer listing","typeName":"IAtsRecruitmentTechReviewer.IRequest"},"responseBody":{"description":"Paginated list of tech reviewer account summaries","typeName":"IPageIAtsRecruitmentTechReviewer.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","path":"/atsRecruitment/hrRecruiter/techReviewers","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves full detail for a single tech reviewer account identified by UUID. It reads from the ats_recruitment_techreviewers table and exposes critical account properties necessary for system administration, reviewer assignment, and audit. Enables role-based access for systemAdmin and HR recruiter users to view reviewer profile data including name, email, specialization, activation status, and related activity history.","description":"Obtain detailed information about a specific technical reviewer, using their unique account identifier as the path parameter. This endpoint sources from the ats_recruitment_techreviewers table and returns core properties such as full name, email address, primary technology specialization, activation state, registration information, and access control metadata.\n\nThis API is restricted to system administrators and HR recruiter-level users for security, as tech reviewer profiles may include personal information. It supports assignment of reviewers to coding tests and interviews, management of reviewer pool, and auditing access history.\n\nAssociated endpoints include list/search, create, update, and deactivate tech reviewer operations. Error handling includes non-existent reviewer ID, deleted or inactive accounts, and insufficient privileges.\n\nThis read-only API does not expose authentication or password fields and is not available to applicants or reviewers themselves.","summary":"Get full details of a single tech reviewer account by reviewer ID","parameters":[{"name":"techReviewerId","description":"Unique identifier for the technical reviewer account","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed tech reviewer profile and assignment/activation metadata","typeName":"IAtsRecruitmentTechReviewer"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"at","path":"/atsRecruitment/systemAdmin/techReviewers/{techReviewerId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves full detail for a single tech reviewer account identified by UUID. It reads from the ats_recruitment_techreviewers table and exposes critical account properties necessary for system administration, reviewer assignment, and audit. Enables role-based access for systemAdmin and HR recruiter users to view reviewer profile data including name, email, specialization, activation status, and related activity history.","description":"Obtain detailed information about a specific technical reviewer, using their unique account identifier as the path parameter. This endpoint sources from the ats_recruitment_techreviewers table and returns core properties such as full name, email address, primary technology specialization, activation state, registration information, and access control metadata.\n\nThis API is restricted to system administrators and HR recruiter-level users for security, as tech reviewer profiles may include personal information. It supports assignment of reviewers to coding tests and interviews, management of reviewer pool, and auditing access history.\n\nAssociated endpoints include list/search, create, update, and deactivate tech reviewer operations. Error handling includes non-existent reviewer ID, deleted or inactive accounts, and insufficient privileges.\n\nThis read-only API does not expose authentication or password fields and is not available to applicants or reviewers themselves.","summary":"Get full details of a single tech reviewer account by reviewer ID","parameters":[{"name":"techReviewerId","description":"Unique identifier for the technical reviewer account","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed tech reviewer profile and assignment/activation metadata","typeName":"IAtsRecruitmentTechReviewer"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"at","path":"/atsRecruitment/hrRecruiter/techReviewers/{techReviewerId}","method":"get","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation updates the profile and account properties of a specific technical reviewer identified by UUID. The ats_recruitment_techreviewers table is modified with the supplied data, which may include name, email, specialization, and activation status. Changes are audit-logged for compliance. System administrators and HR recruiters use this function to maintain the reviewer pool, adjust assignments, and control platform access.","description":"Modify the persistent properties of a technical reviewer account by providing updated information such as name, email, technical specialization, and activation state. The endpoint accepts a payload matching the IAtsRecruitmentTechReviewer.IUpdate schema, and applies partial or full updates to the ats_recruitment_techreviewers table as appropriate.\n\nProper authorization is required, limited to systemAdmin and hrRecruiter roles. Updates are tracked and recorded for audit and compliance purposes. This enables platform staff to activate, deactivate, correct, or reassign reviewer accounts as organizational needs change.\n\nError handling covers invalid update data, conflicting emails, attempts to update deleted or non-existent accounts, and insufficient privileges. This endpoint should not be used for reviewer self-updates (separate mechanism).\n\nSee also: create, view, search, and delete reviewer endpoints. All changes are reflected immediately across related administrative functions.","summary":"Update a technical reviewer account details by reviewer ID","parameters":[{"name":"techReviewerId","description":"UUID of the technical reviewer to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the technical reviewer account","typeName":"IAtsRecruitmentTechReviewer.IUpdate"},"responseBody":{"description":"The updated tech reviewer profile and account settings","typeName":"IAtsRecruitmentTechReviewer"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"update","path":"/atsRecruitment/systemAdmin/techReviewers/{techReviewerId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates the profile and account properties of a specific technical reviewer identified by UUID. The ats_recruitment_techreviewers table is modified with the supplied data, which may include name, email, specialization, and activation status. Changes are audit-logged for compliance. System administrators and HR recruiters use this function to maintain the reviewer pool, adjust assignments, and control platform access.","description":"Modify the persistent properties of a technical reviewer account by providing updated information such as name, email, technical specialization, and activation state. The endpoint accepts a payload matching the IAtsRecruitmentTechReviewer.IUpdate schema, and applies partial or full updates to the ats_recruitment_techreviewers table as appropriate.\n\nProper authorization is required, limited to systemAdmin and hrRecruiter roles. Updates are tracked and recorded for audit and compliance purposes. This enables platform staff to activate, deactivate, correct, or reassign reviewer accounts as organizational needs change.\n\nError handling covers invalid update data, conflicting emails, attempts to update deleted or non-existent accounts, and insufficient privileges. This endpoint should not be used for reviewer self-updates (separate mechanism).\n\nSee also: create, view, search, and delete reviewer endpoints. All changes are reflected immediately across related administrative functions.","summary":"Update a technical reviewer account details by reviewer ID","parameters":[{"name":"techReviewerId","description":"UUID of the technical reviewer to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the technical reviewer account","typeName":"IAtsRecruitmentTechReviewer.IUpdate"},"responseBody":{"description":"The updated tech reviewer profile and account settings","typeName":"IAtsRecruitmentTechReviewer"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"update","path":"/atsRecruitment/hrRecruiter/techReviewers/{techReviewerId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation permanently deletes a technical reviewer (techReviewer) account by its unique identifier from the ATS platform. The endpoint utilizes a hard delete mechanism because the underlying Prisma model 'ats_recruitment_techreviewers' includes a soft deletion timestamp ('deleted_at'); however, this DELETE action truly removes the entity and makes the reviewer account and its relationships inaccessible for any future authentication or review assignments. Only system administrators or privileged support staff can execute this operation to satisfy compliance and privileged access policies. Referential integrity across related entities (e.g. reviews, interviews) should be managed at the application layer, marking those dependencies as orphaned or reporting errors on deletion. This endpoint is essential for personnel turnover, account lifecycle management, and GDPR compliance workflows. Business logic must verify irreversible nature of the removal, log the action in audit trails, and strictly check permissions.","description":"This API operation is used to delete a technical reviewer (techReviewer) account record from the ATS system by its unique ID. The purpose of this endpoint is to allow for system administrator-initiated account removal in response to turnover, withdrawal, or privilege revocation events.\n\nSecurity measures ensure only authorized system administrators are permitted to perform this sensitive action, and all requests should be logged in the audit trails for compliance auditing. Deletion permanently removes the tech reviewer from authentication and assignment flows; the system must ensure that remaining records (e.g. code reviews, interview histories) reference the deleted user as an orphaned record where appropriate, or handle as business exception.\n\nSpecial consideration should be given to dependencies on interviews, review comments, and IT audit reporting—these associations must not be silently lost or misattributed post-deletion. Implementers must enforce strong permission checks, mandatory audit trail creation, and pre-checks before executing the removal. Deletion is irreversible and must be confirmed by privileged administrators.","summary":"Delete a technical reviewer (techReviewer) account from the ATS system by ID","parameters":[{"name":"techReviewerId","description":"Unique identifier of the technical reviewer to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/techReviewers/{techReviewerId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of system administrator (systemAdmin) accounts from the ATS platform. It leverages the 'ats_recruitment_systemadmins' Prisma model, supporting advanced search, filters (e.g., active status, name, email), and sort logic for admin-lifecycle management and compliance reporting. System administrators use this endpoint to review and manage other admin accounts. The result is suitable for list views or admin role assignment UIs. Sensitive account info—including soft-deleted or disabled states—should be available depending on caller's privilege, and private password hashes are never exposed.","description":"Retrieve a paginated and filterable list of system administrator accounts registered on the ATS platform. This endpoint is designed for privileged management screens that require overviews and searching of admin accounts by various criteria (e.g., name, email, is_active status).\n\nThe response returns summary data for each systemAdmin, making it suitable for use in audit, role assignment, or personnel onboarding/offboarding processes. Only accounts with sufficient permission may execute this query, typically for security, account management, or compliance purposes.\n\nBusiness logic must ensure that sensitive account material (such as password hashes) are excluded from the response. Implementers should support pagination, keyword filtering, is_active filtering, and other fraud/compliance reporting tools as required by operations, referencing the ats_recruitment_systemadmins schema.","summary":"List system administrator accounts with filtering and pagination","parameters":[],"requestBody":{"description":"Search/filter criteria and paging configuration for systemAdmin admin account list retrieval","typeName":"IAtsRecruitmentSystemAdmin.IRequest"},"responseBody":{"description":"Paginated list of system administrator summary data matching filter criteria","typeName":"IPageIAtsRecruitmentSystemAdmin.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/atsRecruitment/systemAdmin/systemAdmins","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This endpoint retrieves complete details for a single system administrator (systemAdmin) account by its unique identifier. Built on the 'ats_recruitment_systemadmins' Prisma model, this operation provides all profile fields except the password hash, and reveals privilege, activation state, and audit-relevant information. System administrators may use this API to view record details for personnel management, troubleshooting, or verification (such as confirming super_admin status for hierarchical privilege delegation). Account access is strictly controlled; only system administrators may use this endpoint.","description":"Fetch detailed profile information for a single system administrator entity on the ATS platform by their unique UUID. This API provides all core model properties (excluding password hash for security), including creation/update times, is_active and super_admin flags, and identifying fields used for privilege and access escalation flows.\n\nThis operation is typically used in admin detail screens, compliance inspection, or when managing changes to administrator accounts. System access controls ensure that only authorized admins may call this endpoint and that sensitive data is handled appropriately, in compliance with privileged access and system operations policies.\n\nError handling should confirm existence of the target systemAdmin account, provide meaningful error responses if not found, and ensure all requests are logged in audit trails for compliance and traceability.","summary":"Retrieve system administrator account details by ID","parameters":[{"name":"systemAdminId","description":"Unique identifier of the system administrator account to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed profile view of the specified system administrator record","typeName":"IAtsRecruitmentSystemAdmin"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/atsRecruitment/systemAdmin/systemAdmins/{systemAdminId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates the profile information of an existing system administrator (systemAdmin) account by ID. Using the 'ats_recruitment_systemadmins' Prisma model, this endpoint enables authorized system administrators to change permitted attributes such as name, is_active state, or privilege designation (e.g., super_admin) for other admin accounts. Password hash updates are not supported in this endpoint for security and must use a separate reset route. All modifications require strong permission enforcement and must be logged in the audit system for compliance and accountability. Soft deletion is not triggered here; only attribute changes as permitted by policy. Business logic should strictly audit privilege escalations or redundancy breaches (e.g., single admin left).","description":"Update the details of a target system administrator (systemAdmin) account by its unique UUID. Supported updates typically include the name, is_active status/flag, and super_admin designation for the account, excluding the password hash (which is managed via a separate password reset interface for security reasons).\n\nThis endpoint is used by privileged personnel to manage administrator lifecycle events, such as role transitions, temporary deactivation/reactivation, or assignment of higher or lower privilege. Business logic must check that operations do not violate redundancy rules (e.g., not demoting or disabling the only remaining admin), and must log all changes in the system's audit trail for compliance and forensic history.\n\nImplementers must validate all input attributes, enforce security requirements (such as ensuring the current requestor holds sufficient privilege to make these changes), and return informative error messages on policy-violating or failed attempts.","summary":"Update a system administrator account by ID","parameters":[{"name":"systemAdminId","description":"Unique identifier of the system administrator to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update payload for modifying a system administrator profile (excluding password hash)","typeName":"IAtsRecruitmentSystemAdmin.IUpdate"},"responseBody":{"description":"Updated profile view of the system administrator after modification","typeName":"IAtsRecruitmentSystemAdmin"},"authorizationRoles":["systemAdmin"],"name":"update","path":"/atsRecruitment/systemAdmin/systemAdmins/{systemAdminId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation deletes an ATS system administrator record based on the provided systemAdminId. The endpoint is directly associated with the 'ats_recruitment_systemadmins' table in the Actors namespace within the ATS platform's Prisma schema. Deletion is performed by setting the deleted_at timestamp (soft delete) for audit and regulatory compliance. Full removal from the database is handled only by policy-compliant processes or system workflows.","description":"This operation facilitates the removal (deactivation via soft delete) of an ATS system administrator from the 'ats_recruitment_systemadmins' database entity based on their unique identifier. System administrator deletion is strictly permission controlled and subject to compliance auditing – the system ensures that at least two admin accounts remain, and attempts to delete the last admin will result in an error as per business rule.\n\nSecurity considerations enforce that only active super_admins can remove system admin accounts, and all changes are logged in audit trails. The response to this operation is void (no body), reflecting the absence of content; however, operation success/failure is communicated via HTTP status codes (e.g., 204 for success, 403/409 for rule violation).\n\nThis operation only soft-deletes the admin account by updating the deleted_at field, ensuring compliance with audit and regulatory requirements. It does not perform a hard delete or erase historical activity records from the audit log. Attempting to delete an already deleted or only remaining admin account will result in a controlled error state.","summary":"Soft-deletes an ATS system administrator (ats_recruitment_systemadmins) by ID, enforcing minimum admin rule.","parameters":[{"name":"systemAdminId","description":"Unique identifier (UUID) of the system administrator to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/systemAdmins/{systemAdminId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, sorted, and paginated collection of job posting records from the 'ats_recruitment_job_postings' table. Business users (HR/Recruiter, System Admin) can search for job postings with advanced criteria such as title, location, employment type, posting status, recruiter, salary range, or date ranges. Used for job management dashboards, applicant-facing search, and reporting interfaces.","description":"This operation allows authorized users to perform a comprehensive search and paginated listing of job postings (ats_recruitment_job_postings), with advanced filtering capabilities provided in the request body. Search fields include job title (partial match), HR recruiter assignment, employment type, posting status, visibility, location, salary range, and deadline windows—all corresponding directly to the schema fields defined in the Prisma model.\n\nThe business logic ensures only active (is_visible or non-deleted) postings are included unless explicitly searching for hidden/archived ones. Query performance is optimized via indexes on title, state, type, and created_at date, supporting large-scale HR system usage. Proper authorization ensures only authorized recruiters, HR staff, or system administrators can access sensitive job data not available to general applicants.\n\nRate limiting, result size limits, and query slow-logs are enforced through policy and audit mechanisms to prevent abuse or system degradation.","summary":"Performs advanced search and paginated retrieval of job postings (ats_recruitment_job_postings) with filters.","parameters":[],"requestBody":{"description":"Filtering, search, and pagination criteria for job postings listing.","typeName":"IAtsRecruitmentJobPosting.IRequest"},"responseBody":{"description":"Paginated response containing job posting summaries and pagination metadata.","typeName":"IPageIAtsRecruitmentJobPosting.ISummary"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"index","path":"/atsRecruitment/hrRecruiter/jobPostings","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a filtered, sorted, and paginated collection of job posting records from the 'ats_recruitment_job_postings' table. Business users (HR/Recruiter, System Admin) can search for job postings with advanced criteria such as title, location, employment type, posting status, recruiter, salary range, or date ranges. Used for job management dashboards, applicant-facing search, and reporting interfaces.","description":"This operation allows authorized users to perform a comprehensive search and paginated listing of job postings (ats_recruitment_job_postings), with advanced filtering capabilities provided in the request body. Search fields include job title (partial match), HR recruiter assignment, employment type, posting status, visibility, location, salary range, and deadline windows—all corresponding directly to the schema fields defined in the Prisma model.\n\nThe business logic ensures only active (is_visible or non-deleted) postings are included unless explicitly searching for hidden/archived ones. Query performance is optimized via indexes on title, state, type, and created_at date, supporting large-scale HR system usage. Proper authorization ensures only authorized recruiters, HR staff, or system administrators can access sensitive job data not available to general applicants.\n\nRate limiting, result size limits, and query slow-logs are enforced through policy and audit mechanisms to prevent abuse or system degradation.","summary":"Performs advanced search and paginated retrieval of job postings (ats_recruitment_job_postings) with filters.","parameters":[],"requestBody":{"description":"Filtering, search, and pagination criteria for job postings listing.","typeName":"IAtsRecruitmentJobPosting.IRequest"},"responseBody":{"description":"Paginated response containing job posting summaries and pagination metadata.","typeName":"IPageIAtsRecruitmentJobPosting.ISummary"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"index","path":"/atsRecruitment/systemAdmin/jobPostings","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific job posting, returned from the 'ats_recruitment_job_postings' table. The lookup is performed using the unique jobPostingId parameter. Returned data includes the posting's title, description, employment type, status, salary range, posting HR recruiter, and associated metadata.","description":"Fetch full detail of a single job posting (ats_recruitment_job_postings) identified by jobPostingId, including all principal business fields and relations (such as assigned HR recruiter and employment type/state details). This operation is used across both applicant- and HR-facing business flows for viewing job requirements, descriptions, location, salary range, deadlines, and presentation metadata.\n\nAuthorization is enforced to restrict access to non-public postings: HR recruiters and system administrators may access all jobs, while applicants and the public are limited to is_visible set jobs. Access control is handled in implementation logic. Attempts to retrieve a deleted (soft-deleted) posting will result in a not-found or forbidden response.\n\nReturned data structure conforms to the IAtsRecruitmentJobPosting interface, reflecting every non-sensitive field as present in the schema for full compliance and audit trail purposes.","summary":"Get detailed job posting info (ats_recruitment_job_postings) by posting ID for viewing or management.","parameters":[{"name":"jobPostingId","description":"The unique identifier (UUID) of the target job posting to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details of the requested job posting, including relational metadata.","typeName":"IAtsRecruitmentJobPosting"},"authorizationRoles":[],"name":"at","path":"/atsRecruitment/jobPostings/{jobPostingId}","method":"get","authorizationRole":null,"authorizationType":null},{"specification":"Creates a new job posting record in the 'ats_recruitment_job_postings' table, managed by an authenticated HR recruiter or system administrator. The operation builds a new job opportunity complete with role/title, employment type (reference), posting state, description, location, salary range, and deadline. Some fields are required per business rules to ensure minimum job listing quality and schema compliance.","description":"This operation enables HR recruiters or system administrators to register a new job posting into the ATS platform. Input data is received via the request body adhering to the IAtsRecruitmentJobPosting.ICreate DTO, which covers all necessary attributes as required by the schema, including title, description, employment type, job status, recruiter assignment, visibility, and any optional location or salary information.\n\nStrict validation is performed to guarantee unique job titles per recruiter (HR uniqueness), valid employment type/state codes, and future application deadlines (where given). The system enforces access control—only authenticated HR or admin users are permitted to create postings. On successful creation, the full job posting entity (IAtsRecruitmentJobPosting) is returned to the client.\n\nPost-creation actions such as notification dispatching, audit logging, and index rebuilding are handled by downstream business logic as mandated by compliance and audit requirements.","summary":"Creates a new job posting in the ATS (ats_recruitment_job_postings); allowed for HR recruiters and system admins.","parameters":[],"requestBody":{"description":"Job posting creation information (title, description, employment type, recruiter ID, deadlines, etc).","typeName":"IAtsRecruitmentJobPosting.ICreate"},"responseBody":{"description":"The full job posting record newly created, including all business fields.","typeName":"IAtsRecruitmentJobPosting"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"create","path":"/atsRecruitment/hrRecruiter/jobPostings","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Creates a new job posting record in the 'ats_recruitment_job_postings' table, managed by an authenticated HR recruiter or system administrator. The operation builds a new job opportunity complete with role/title, employment type (reference), posting state, description, location, salary range, and deadline. Some fields are required per business rules to ensure minimum job listing quality and schema compliance.","description":"This operation enables HR recruiters or system administrators to register a new job posting into the ATS platform. Input data is received via the request body adhering to the IAtsRecruitmentJobPosting.ICreate DTO, which covers all necessary attributes as required by the schema, including title, description, employment type, job status, recruiter assignment, visibility, and any optional location or salary information.\n\nStrict validation is performed to guarantee unique job titles per recruiter (HR uniqueness), valid employment type/state codes, and future application deadlines (where given). The system enforces access control—only authenticated HR or admin users are permitted to create postings. On successful creation, the full job posting entity (IAtsRecruitmentJobPosting) is returned to the client.\n\nPost-creation actions such as notification dispatching, audit logging, and index rebuilding are handled by downstream business logic as mandated by compliance and audit requirements.","summary":"Creates a new job posting in the ATS (ats_recruitment_job_postings); allowed for HR recruiters and system admins.","parameters":[],"requestBody":{"description":"Job posting creation information (title, description, employment type, recruiter ID, deadlines, etc).","typeName":"IAtsRecruitmentJobPosting.ICreate"},"responseBody":{"description":"The full job posting record newly created, including all business fields.","typeName":"IAtsRecruitmentJobPosting"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"create","path":"/atsRecruitment/systemAdmin/jobPostings","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing job skill in the ATS recruitment platform. It is associated with the ats_recruitment_job_skills table, which represents master skill/technology definitions used by HR for job requirement matching. The update allows modification of skill name, description, and status. All changes are audited for compliance. Only active job skills should be modifiable.","path":"/atsRecruitment/systemAdmin/jobSkills/{jobSkillId}","method":"put","summary":"Update details of a job skill (ats_recruitment_job_skills) by ID","description":"This endpoint enables authorized HR recruiters, system administrators, or technical reviewers to update the details of a specific job skill. It supports changes to the skill name, description, and status (active/inactive) for improved recruitment workflows and tech stack normalization.\n\nOnly users with write permissions (systemAdmin, hrRecruiter) can access this operation. Attempting to update non-existent, deleted, or inactive skills will result in a clear error response, and all updates are tracked in the audit trail for security and compliance.\n\nSkill name uniqueness is enforced, and changing it may impact job postings or application skill matching. If a name already exists, the operation rejects the change. \"deleted_at\" column indicates soft removal; updates are not allowed on deleted skills.\n\nThis API operation is crucial for maintaining a clean and current master skills list and supporting continuous improvement of job requirement management.","parameters":[{"name":"jobSkillId","description":"Unique identifier of the job skill to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated attributes for the job skill, such as name, status, or description","typeName":"IAtsRecruitmentJobSkill.IUpdate"},"responseBody":{"description":"The updated job skill details after modification","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"update","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing job skill in the ATS recruitment platform. It is associated with the ats_recruitment_job_skills table, which represents master skill/technology definitions used by HR for job requirement matching. The update allows modification of skill name, description, and status. All changes are audited for compliance. Only active job skills should be modifiable.","path":"/atsRecruitment/hrRecruiter/jobSkills/{jobSkillId}","method":"put","summary":"Update details of a job skill (ats_recruitment_job_skills) by ID","description":"This endpoint enables authorized HR recruiters, system administrators, or technical reviewers to update the details of a specific job skill. It supports changes to the skill name, description, and status (active/inactive) for improved recruitment workflows and tech stack normalization.\n\nOnly users with write permissions (systemAdmin, hrRecruiter) can access this operation. Attempting to update non-existent, deleted, or inactive skills will result in a clear error response, and all updates are tracked in the audit trail for security and compliance.\n\nSkill name uniqueness is enforced, and changing it may impact job postings or application skill matching. If a name already exists, the operation rejects the change. \"deleted_at\" column indicates soft removal; updates are not allowed on deleted skills.\n\nThis API operation is crucial for maintaining a clean and current master skills list and supporting continuous improvement of job requirement management.","parameters":[{"name":"jobSkillId","description":"Unique identifier of the job skill to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated attributes for the job skill, such as name, status, or description","typeName":"IAtsRecruitmentJobSkill.IUpdate"},"responseBody":{"description":"The updated job skill details after modification","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"update","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation hard deletes a job skill by its unique ID from the ats_recruitment_job_skills table in the ATS platform. It enables system administrators to remove deprecated or obsolete skills from the master list, which impacts availability for matching and job postings.","path":"/atsRecruitment/systemAdmin/jobSkills/{jobSkillId}","method":"delete","summary":"Remove a job skill entry by ID (ats_recruitment_job_skills)","description":"Allows a system administrator to permanently remove a job skill from the system. The targeted skill is identified by its unique ID. This is a hard delete: the record is fully removed and cannot be recovered. Attempts to remove a skill in active use (referenced by job postings or applications) may fail with a clearly described error.\n\nThe operation is restricted to system administrators, reflecting the significant impact of removing skills on job requirements, analytics, and application evaluation. A successful deletion is also audited for compliance. The \"deleted_at\" column is set if using soft delete, but in the API context this endpoint executes a full removal from the data store.","parameters":[{"name":"jobSkillId","description":"Unique identifier of the job skill to be deleted","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation provides paginated, filtered, and sorted retrieval of job skills from the ats_recruitment_job_skills table. It allows HR and system admins to search by name, status, or description for management, normalization, and analytical activities.","path":"/atsRecruitment/systemAdmin/jobSkills","method":"patch","summary":"Search and retrieve list of job skills (ats_recruitment_job_skills) with filtering, sorting, and pagination","description":"Enables authorized users to perform advanced search and listing of job skills defined in the ATS platform. Filtering options include name (partial match), is_active status, and description keywords. Results are returned in a paginated format, supporting customizable page size and sort order.\n\nThis API is used by system administrators and HR to maintain a clean skills dictionary, identify deprecated or missing skills, and to summarize available technologies for job posting creation or analytics. Rate limiting and authorization controls apply to prevent unapproved access or data abuse. Responses use a summary DTO for display lists, and may include metadata such as total count.\n\nAttempting to query with invalid filters or sort parameters returns user guidance in the error payload. All returned skills reflect the current active status and are unique by name.","parameters":[],"requestBody":{"description":"Search, filter, and pagination criteria for job skills listing","typeName":"IAtsRecruitmentJobSkill.IRequest"},"responseBody":{"description":"Paginated results of job skill summaries matching criteria","typeName":"IPageIAtsRecruitmentJobSkill.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation provides paginated, filtered, and sorted retrieval of job skills from the ats_recruitment_job_skills table. It allows HR and system admins to search by name, status, or description for management, normalization, and analytical activities.","path":"/atsRecruitment/hrRecruiter/jobSkills","method":"patch","summary":"Search and retrieve list of job skills (ats_recruitment_job_skills) with filtering, sorting, and pagination","description":"Enables authorized users to perform advanced search and listing of job skills defined in the ATS platform. Filtering options include name (partial match), is_active status, and description keywords. Results are returned in a paginated format, supporting customizable page size and sort order.\n\nThis API is used by system administrators and HR to maintain a clean skills dictionary, identify deprecated or missing skills, and to summarize available technologies for job posting creation or analytics. Rate limiting and authorization controls apply to prevent unapproved access or data abuse. Responses use a summary DTO for display lists, and may include metadata such as total count.\n\nAttempting to query with invalid filters or sort parameters returns user guidance in the error payload. All returned skills reflect the current active status and are unique by name.","parameters":[],"requestBody":{"description":"Search, filter, and pagination criteria for job skills listing","typeName":"IAtsRecruitmentJobSkill.IRequest"},"responseBody":{"description":"Paginated results of job skill summaries matching criteria","typeName":"IPageIAtsRecruitmentJobSkill.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves all information about a specific job skill, as defined in the ats_recruitment_job_skills table, by its unique identifier. It is typically used in skill management dashboards and job posting or analysis dialogs.","path":"/atsRecruitment/systemAdmin/jobSkills/{jobSkillId}","method":"get","summary":"Retrieve information about a single job skill by ID (ats_recruitment_job_skills)","description":"Returns complete information about a job skill, including name, description, status, creation and update timestamps. The record is identified by its jobSkillId, which must be a valid UUID for a job skill currently present in the system. The response includes all business-relevant metadata necessary for display and possible analysis.\n\nAccessible to system administrators, HR recruiters, and technical reviewers, but write operations are not permitted through this endpoint. Attempts to access a non-existent or deleted job skill return a not found error. Audit logging of the access event is recommended for compliance.\n\nThis API is typically used in admin/support dashboards or job skill reference dialogs for efficient skill management and data quality improvement.","parameters":[{"name":"jobSkillId","description":"Unique identifier of the job skill to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job skill information as defined in the job skill entity","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves all information about a specific job skill, as defined in the ats_recruitment_job_skills table, by its unique identifier. It is typically used in skill management dashboards and job posting or analysis dialogs.","path":"/atsRecruitment/hrRecruiter/jobSkills/{jobSkillId}","method":"get","summary":"Retrieve information about a single job skill by ID (ats_recruitment_job_skills)","description":"Returns complete information about a job skill, including name, description, status, creation and update timestamps. The record is identified by its jobSkillId, which must be a valid UUID for a job skill currently present in the system. The response includes all business-relevant metadata necessary for display and possible analysis.\n\nAccessible to system administrators, HR recruiters, and technical reviewers, but write operations are not permitted through this endpoint. Attempts to access a non-existent or deleted job skill return a not found error. Audit logging of the access event is recommended for compliance.\n\nThis API is typically used in admin/support dashboards or job skill reference dialogs for efficient skill management and data quality improvement.","parameters":[{"name":"jobSkillId","description":"Unique identifier of the job skill to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job skill information as defined in the job skill entity","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"at","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves all information about a specific job skill, as defined in the ats_recruitment_job_skills table, by its unique identifier. It is typically used in skill management dashboards and job posting or analysis dialogs.","path":"/atsRecruitment/techReviewer/jobSkills/{jobSkillId}","method":"get","summary":"Retrieve information about a single job skill by ID (ats_recruitment_job_skills)","description":"Returns complete information about a job skill, including name, description, status, creation and update timestamps. The record is identified by its jobSkillId, which must be a valid UUID for a job skill currently present in the system. The response includes all business-relevant metadata necessary for display and possible analysis.\n\nAccessible to system administrators, HR recruiters, and technical reviewers, but write operations are not permitted through this endpoint. Attempts to access a non-existent or deleted job skill return a not found error. Audit logging of the access event is recommended for compliance.\n\nThis API is typically used in admin/support dashboards or job skill reference dialogs for efficient skill management and data quality improvement.","parameters":[{"name":"jobSkillId","description":"Unique identifier of the job skill to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job skill information as defined in the job skill entity","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"at","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation allows a HR recruiter or system administrator to create a new job skill entry for the ATS platform. It is directly associated with the ats_recruitment_job_skills table in the database. Creating a job skill means registering a new technology, tool, or competency (such as 'Python', 'React', 'AWS') that may be referenced within job postings or used for applicant skill matching and analytics. Creation requires specifying the skill name, an optional description, and activity status. Named skills are unique in the system and are an essential part of the recruitment process configuration.","description":"This endpoint enables authorized users (HR recruiters or admins) to register a new job skill in the system, such as programming languages, libraries, frameworks, or other technical competencies relevant for recruitment.\n\nSecurity considerations: Only HR recruiters or system administrators should be able to create new job skills, as these influence applicant evaluation and job posting requirements. Creation events should be logged for future auditability.\n\nSkill names must be globally unique within the system; the endpoint should perform validation to prevent duplicates. The request body should follow the IAtsRecruitmentJobSkill.ICreate type.\n\nUpon success, the response returns the full job skill entity including id, name, description, is_active flag, and timestamp fields as defined in the ats_recruitment_job_skills table.","summary":"Create a new job skill (ats_recruitment_job_skills) for job posting and talent matching.","parameters":[],"requestBody":{"description":"New job skill information to register in the system.","typeName":"IAtsRecruitmentJobSkill.ICreate"},"responseBody":{"description":"Detailed information of the created job skill entity.","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"create","path":"/atsRecruitment/hrRecruiter/jobSkills","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation allows a HR recruiter or system administrator to create a new job skill entry for the ATS platform. It is directly associated with the ats_recruitment_job_skills table in the database. Creating a job skill means registering a new technology, tool, or competency (such as 'Python', 'React', 'AWS') that may be referenced within job postings or used for applicant skill matching and analytics. Creation requires specifying the skill name, an optional description, and activity status. Named skills are unique in the system and are an essential part of the recruitment process configuration.","description":"This endpoint enables authorized users (HR recruiters or admins) to register a new job skill in the system, such as programming languages, libraries, frameworks, or other technical competencies relevant for recruitment.\n\nSecurity considerations: Only HR recruiters or system administrators should be able to create new job skills, as these influence applicant evaluation and job posting requirements. Creation events should be logged for future auditability.\n\nSkill names must be globally unique within the system; the endpoint should perform validation to prevent duplicates. The request body should follow the IAtsRecruitmentJobSkill.ICreate type.\n\nUpon success, the response returns the full job skill entity including id, name, description, is_active flag, and timestamp fields as defined in the ats_recruitment_job_skills table.","summary":"Create a new job skill (ats_recruitment_job_skills) for job posting and talent matching.","parameters":[],"requestBody":{"description":"New job skill information to register in the system.","typeName":"IAtsRecruitmentJobSkill.ICreate"},"responseBody":{"description":"Detailed information of the created job skill entity.","typeName":"IAtsRecruitmentJobSkill"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"create","path":"/atsRecruitment/systemAdmin/jobSkills","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation permanently deletes (hard delete) a job skill from the ats_recruitment_job_skills table. Only HR recruiters or system administrators may perform this operation. Once deleted, the skill cannot be referenced in future job postings or by applicants, and it is permanently removed from the system (not soft deleted). This is appropriate since the deleted_at field exists for soft delete, but this endpoint is expected to be a hard delete by explicit operation.","description":"This endpoint is used to permanently remove a job skill record from the system by its UUID identifier.\n\nAuthorization: Only HR recruiters or system administrators have access to job skill deletion. All such actions should be audited and verified for compliance.\n\nThe operation requires the 'jobSkillId' parameter as a UUID, strictly matching the path parameter. If the skill is still referenced elsewhere in the database (e.g. in old applications), referential integrity and business policies must be respected. Once deleted, the job skill is not recoverable, and attempts to access it afterwards will fail.","summary":"Permanently delete a job skill (ats_recruitment_job_skills) by id.","parameters":[{"name":"jobSkillId","description":"The UUID of the job skill to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"erase","path":"/atsRecruitment/hrRecruiter/jobSkills/{jobSkillId}","method":"delete","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation enables authorized users (HR recruiters or administrators) to search and retrieve a paginated list of job employment types defined for job postings. It is associated with the ats_recruitment_job_employment_types table, supporting advanced filtering, searching, and pagination. Example employment types might include Full-time, Part-time, Contract, or Internship. The operation returns employment type metadata including name, description, active status, and creation timestamps.","description":"Use this endpoint to search and retrieve job employment types that applicants or HR can select when registering job postings. Searching can be filtered by active status, name, or other relevant fields as defined in the schema.\n\nSecurity: Accessible to authenticated HR recruiters or system administrators. Permission is enforced to block unauthorized retrieval for sensitive configuration entities.\n\nPaginated results support efficient management and display in admin UIs. The request body specifies IAtsRecruitmentJobEmploymentType.IRequest for filtering and pagination. The response body returns paginated results with metadata, following the IPageIAtsRecruitmentJobEmploymentType.ISummary pattern.","summary":"Search and retrieve job employment types (ats_recruitment_job_employment_types), supporting filter and pagination.","parameters":[],"requestBody":{"description":"Search and pagination criteria for job employment types.","typeName":"IAtsRecruitmentJobEmploymentType.IRequest"},"responseBody":{"description":"Paginated summary list of employment types matching search criteria.","typeName":"IPageIAtsRecruitmentJobEmploymentType.ISummary"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"index","path":"/atsRecruitment/hrRecruiter/jobEmploymentTypes","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation enables authorized users (HR recruiters or administrators) to search and retrieve a paginated list of job employment types defined for job postings. It is associated with the ats_recruitment_job_employment_types table, supporting advanced filtering, searching, and pagination. Example employment types might include Full-time, Part-time, Contract, or Internship. The operation returns employment type metadata including name, description, active status, and creation timestamps.","description":"Use this endpoint to search and retrieve job employment types that applicants or HR can select when registering job postings. Searching can be filtered by active status, name, or other relevant fields as defined in the schema.\n\nSecurity: Accessible to authenticated HR recruiters or system administrators. Permission is enforced to block unauthorized retrieval for sensitive configuration entities.\n\nPaginated results support efficient management and display in admin UIs. The request body specifies IAtsRecruitmentJobEmploymentType.IRequest for filtering and pagination. The response body returns paginated results with metadata, following the IPageIAtsRecruitmentJobEmploymentType.ISummary pattern.","summary":"Search and retrieve job employment types (ats_recruitment_job_employment_types), supporting filter and pagination.","parameters":[],"requestBody":{"description":"Search and pagination criteria for job employment types.","typeName":"IAtsRecruitmentJobEmploymentType.IRequest"},"responseBody":{"description":"Paginated summary list of employment types matching search criteria.","typeName":"IPageIAtsRecruitmentJobEmploymentType.ISummary"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"index","path":"/atsRecruitment/systemAdmin/jobEmploymentTypes","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve detailed information about a specific job employment type in the atsRecruitment system. This operation targets the ats_recruitment_job_employment_types table and allows clients to fetch a single record by unique identifier (jobEmploymentTypeId). It is typically used to show details such as the employment type name, description, and status during job posting management or HR policy review.","description":"This operation provides detailed information about one job employment type as stored in the ats_recruitment_job_employment_types table. It serves HR recruiters and system admins who need to view current employment types (such as full-time, part-time, contract, internship) associated with job postings.\n\nUpon invocation, the endpoint returns the label, status (is_active), description, and metadata of the targeted record, facilitating downstream validation for job posting and reporting flows.\n\nSecurity measures are enforced so only authenticated HR recruiters and system admins can retrieve this data. The operation enforces precise parameter typing and returns a useful object for display and validation in both administrative and business workflows.\n\nIf the specified jobEmploymentTypeId does not exist, a not found error is returned.","summary":"Fetch a specific atsRecruitment job employment type by ID for detailed viewing.","parameters":[{"name":"jobEmploymentTypeId","description":"Unique identifier of the target job employment type.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record of job employment type including name, description, and status.","typeName":"IAtsRecruitmentJobEmploymentType"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"at","path":"/atsRecruitment/hrRecruiter/jobEmploymentTypes/{jobEmploymentTypeId}","method":"get"},{"specification":"Retrieve detailed information about a specific job employment type in the atsRecruitment system. This operation targets the ats_recruitment_job_employment_types table and allows clients to fetch a single record by unique identifier (jobEmploymentTypeId). It is typically used to show details such as the employment type name, description, and status during job posting management or HR policy review.","description":"This operation provides detailed information about one job employment type as stored in the ats_recruitment_job_employment_types table. It serves HR recruiters and system admins who need to view current employment types (such as full-time, part-time, contract, internship) associated with job postings.\n\nUpon invocation, the endpoint returns the label, status (is_active), description, and metadata of the targeted record, facilitating downstream validation for job posting and reporting flows.\n\nSecurity measures are enforced so only authenticated HR recruiters and system admins can retrieve this data. The operation enforces precise parameter typing and returns a useful object for display and validation in both administrative and business workflows.\n\nIf the specified jobEmploymentTypeId does not exist, a not found error is returned.","summary":"Fetch a specific atsRecruitment job employment type by ID for detailed viewing.","parameters":[{"name":"jobEmploymentTypeId","description":"Unique identifier of the target job employment type.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed record of job employment type including name, description, and status.","typeName":"IAtsRecruitmentJobEmploymentType"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/atsRecruitment/systemAdmin/jobEmploymentTypes/{jobEmploymentTypeId}","method":"get"},{"specification":"Create a new job employment type (full-time, contract, part-time, internship, etc.) for the atsRecruitment system. This operation allows authorized HR recruiters or system administrators to add additional employment schemes to the central master list, modifying the available types for future job postings. It writes to the ats_recruitment_job_employment_types table and returns the newly created record with all meta fields.","description":"This operation permits creation of a new employment type in the atsRecruitment platform, stored in the ats_recruitment_job_employment_types table. Typical use cases are HR system initialization, expansion to new contract types, or administrative updates of hiring schemas.\n\nThe request body specifies the mandatory name, description, and active status, ensuring each entry is unique and appropriately documented as per table constraints. The operation enforces business logic such as de-duplication by name (enforced by unique constraint) and provides validation errors when required properties are missing or duplicate.\n\nOnly system administrators and HR recruiters with appropriate permissions may invoke this endpoint. The response contains all information about the newly created job employment type for display or further reference.","summary":"Create a new atsRecruitment job employment type.","parameters":[],"requestBody":{"description":"Information about the employment type to register, including name, description, and active state.","typeName":"IAtsRecruitmentJobEmploymentType.ICreate"},"responseBody":{"description":"The newly created job employment type with all attributes and meta fields.","typeName":"IAtsRecruitmentJobEmploymentType"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"create","path":"/atsRecruitment/hrRecruiter/jobEmploymentTypes","method":"post"},{"specification":"Create a new job employment type (full-time, contract, part-time, internship, etc.) for the atsRecruitment system. This operation allows authorized HR recruiters or system administrators to add additional employment schemes to the central master list, modifying the available types for future job postings. It writes to the ats_recruitment_job_employment_types table and returns the newly created record with all meta fields.","description":"This operation permits creation of a new employment type in the atsRecruitment platform, stored in the ats_recruitment_job_employment_types table. Typical use cases are HR system initialization, expansion to new contract types, or administrative updates of hiring schemas.\n\nThe request body specifies the mandatory name, description, and active status, ensuring each entry is unique and appropriately documented as per table constraints. The operation enforces business logic such as de-duplication by name (enforced by unique constraint) and provides validation errors when required properties are missing or duplicate.\n\nOnly system administrators and HR recruiters with appropriate permissions may invoke this endpoint. The response contains all information about the newly created job employment type for display or further reference.","summary":"Create a new atsRecruitment job employment type.","parameters":[],"requestBody":{"description":"Information about the employment type to register, including name, description, and active state.","typeName":"IAtsRecruitmentJobEmploymentType.ICreate"},"responseBody":{"description":"The newly created job employment type with all attributes and meta fields.","typeName":"IAtsRecruitmentJobEmploymentType"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"create","path":"/atsRecruitment/systemAdmin/jobEmploymentTypes","method":"post"},{"specification":"Update an existing job employment type in the atsRecruitment system. This endpoint targets the ats_recruitment_job_employment_types table and allows authorized HR recruiters or system administrators to modify employment type details such as name, description, and status (is_active) by referencing the jobEmploymentTypeId. Uniqueness and change-logging are preserved by the implementation.","description":"This operation enables authorized users (HR recruiters and system administrators) to update the metadata and status of a job employment type record in the ats_recruitment_job_employment_types table. Business scenarios include renaming employment schemes, describing contract-specific policies, or disabling deprecated options.\n\nThe input requires specifying the unique jobEmploymentTypeId in the path and an update payload containing the changed fields, conforming to the schema's constraints (such as unique name and not null for required attributes). If the update action would violate constraints or the record is not found, appropriate errors are returned.\n\nAccess control restricts this feature to privileged roles. Auditability and consistency are ensured through the underlying database rules and proper timestamp management by the platform.","summary":"Update attributes of an existing atsRecruitment job employment type.","parameters":[{"name":"jobEmploymentTypeId","description":"ID of the job employment type to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated employment type info, such as name, description, or active status.","typeName":"IAtsRecruitmentJobEmploymentType.IUpdate"},"responseBody":{"description":"Updated atsRecruitment job employment type including all fields and meta info.","typeName":"IAtsRecruitmentJobEmploymentType"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"update","path":"/atsRecruitment/hrRecruiter/jobEmploymentTypes/{jobEmploymentTypeId}","method":"put"},{"specification":"Update an existing job employment type in the atsRecruitment system. This endpoint targets the ats_recruitment_job_employment_types table and allows authorized HR recruiters or system administrators to modify employment type details such as name, description, and status (is_active) by referencing the jobEmploymentTypeId. Uniqueness and change-logging are preserved by the implementation.","description":"This operation enables authorized users (HR recruiters and system administrators) to update the metadata and status of a job employment type record in the ats_recruitment_job_employment_types table. Business scenarios include renaming employment schemes, describing contract-specific policies, or disabling deprecated options.\n\nThe input requires specifying the unique jobEmploymentTypeId in the path and an update payload containing the changed fields, conforming to the schema's constraints (such as unique name and not null for required attributes). If the update action would violate constraints or the record is not found, appropriate errors are returned.\n\nAccess control restricts this feature to privileged roles. Auditability and consistency are ensured through the underlying database rules and proper timestamp management by the platform.","summary":"Update attributes of an existing atsRecruitment job employment type.","parameters":[{"name":"jobEmploymentTypeId","description":"ID of the job employment type to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated employment type info, such as name, description, or active status.","typeName":"IAtsRecruitmentJobEmploymentType.IUpdate"},"responseBody":{"description":"Updated atsRecruitment job employment type including all fields and meta info.","typeName":"IAtsRecruitmentJobEmploymentType"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"update","path":"/atsRecruitment/systemAdmin/jobEmploymentTypes/{jobEmploymentTypeId}","method":"put"},{"specification":"Erase (soft-delete) an employment type from the ats_recruitment_job_employment_types master list. This operation is invoked by system administrator or HR recruiter roles and marks the targeted employment type (referenced by jobEmploymentTypeId) as deleted (using deleted_at), removing it from active selection for job postings. This conforms to the table's soft deletion policy and maintains recoverability and audit compliance.","description":"This operation performs a soft delete of the specified job employment type entry, updating the deleted_at field in the ats_recruitment_job_employment_types table to mark it as logically deleted. Soft-deleted entries no longer appear in new job posting workflows or selection lists but are retained for historical and recovery needs.\n\nOnly HR recruiters and system admins have permission to erase an employment type. If the employment type is currently referenced by job postings, business logic may restrict deletion or require additional validation. Proper audit records and referential integrity are enforced as part of the underlying platform implementation.\n\nAttempting to delete a non-existent or already deleted entry will return a not found or conflict error, as appropriate. Hard deletion is not supported except by database administrators per policy.","summary":"Soft delete a job employment type from the atsRecruitment master list.","parameters":[{"name":"jobEmploymentTypeId","description":"ID of the job employment type to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"hrRecruiter","authorizationType":null,"name":"erase","path":"/atsRecruitment/hrRecruiter/jobEmploymentTypes/{jobEmploymentTypeId}","method":"delete"},{"specification":"Erase (soft-delete) an employment type from the ats_recruitment_job_employment_types master list. This operation is invoked by system administrator or HR recruiter roles and marks the targeted employment type (referenced by jobEmploymentTypeId) as deleted (using deleted_at), removing it from active selection for job postings. This conforms to the table's soft deletion policy and maintains recoverability and audit compliance.","description":"This operation performs a soft delete of the specified job employment type entry, updating the deleted_at field in the ats_recruitment_job_employment_types table to mark it as logically deleted. Soft-deleted entries no longer appear in new job posting workflows or selection lists but are retained for historical and recovery needs.\n\nOnly HR recruiters and system admins have permission to erase an employment type. If the employment type is currently referenced by job postings, business logic may restrict deletion or require additional validation. Proper audit records and referential integrity are enforced as part of the underlying platform implementation.\n\nAttempting to delete a non-existent or already deleted entry will return a not found or conflict error, as appropriate. Hard deletion is not supported except by database administrators per policy.","summary":"Soft delete a job employment type from the atsRecruitment master list.","parameters":[{"name":"jobEmploymentTypeId","description":"ID of the job employment type to soft delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase","path":"/atsRecruitment/systemAdmin/jobEmploymentTypes/{jobEmploymentTypeId}","method":"delete"},{"specification":"This operation retrieves a paginated and filterable list of all job posting state entities in the ATS platform. The operation is based on the ats_recruitment_job_posting_states Prisma DB table, which tracks all possible workflow/statuses for job postings (for example: open, closed, draft, paused, archived). It acts as a central registry for HR and system admins to view, search, filter, and audit available and deprecated job posting states. The endpoint supports comprehensive searching by state code, label, active status, or description, and returns only non-deleted records by default.","description":"Retrieve a filtered and paginated list of job posting state records to support admin and HR selection, validation, and update of available status workflow codes. This endpoint performs advanced search, filtering, and pagination over all entries in ats_recruitment_job_posting_states, using fields such as state code, human-readable label, is_active, description, and sort order for filtering and ordering.\n\nImplemented authorization ensures that only users with systemAdmin or hrRecruiter roles can search administrative job state definitions, maintaining separation of business logic domains and audit accuracy. Sensitive operations or exports require further privilege. Returned data provides insight into both platform-supported (active=true) and deprecated (active=false, deleted_at not null) workflow statuses.\n\nErrors caused by invalid filters, insufficient authorization, or unexpected query overloads are handled with clear user-facing messages based on system policy. This endpoint is often used in conjunction with job posting creation and management flows, and its results may inform dropdown selectors or workflow UI transitions.","summary":"Search and retrieve a paginated list of job posting states defined in the system (ats_recruitment_job_posting_states).","parameters":[],"requestBody":{"description":"Filter and pagination criteria for searching job posting states (state code, label, status, active, etc).","typeName":"IAtsRecruitmentJobPostingState.IRequest"},"responseBody":{"description":"Paginated response containing job posting state summary data.","typeName":"IPageIAtsRecruitmentJobPostingState.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/jobPostingStates","method":"patch"},{"specification":"This operation retrieves a paginated and filterable list of all job posting state entities in the ATS platform. The operation is based on the ats_recruitment_job_posting_states Prisma DB table, which tracks all possible workflow/statuses for job postings (for example: open, closed, draft, paused, archived). It acts as a central registry for HR and system admins to view, search, filter, and audit available and deprecated job posting states. The endpoint supports comprehensive searching by state code, label, active status, or description, and returns only non-deleted records by default.","description":"Retrieve a filtered and paginated list of job posting state records to support admin and HR selection, validation, and update of available status workflow codes. This endpoint performs advanced search, filtering, and pagination over all entries in ats_recruitment_job_posting_states, using fields such as state code, human-readable label, is_active, description, and sort order for filtering and ordering.\n\nImplemented authorization ensures that only users with systemAdmin or hrRecruiter roles can search administrative job state definitions, maintaining separation of business logic domains and audit accuracy. Sensitive operations or exports require further privilege. Returned data provides insight into both platform-supported (active=true) and deprecated (active=false, deleted_at not null) workflow statuses.\n\nErrors caused by invalid filters, insufficient authorization, or unexpected query overloads are handled with clear user-facing messages based on system policy. This endpoint is often used in conjunction with job posting creation and management flows, and its results may inform dropdown selectors or workflow UI transitions.","summary":"Search and retrieve a paginated list of job posting states defined in the system (ats_recruitment_job_posting_states).","parameters":[],"requestBody":{"description":"Filter and pagination criteria for searching job posting states (state code, label, status, active, etc).","typeName":"IAtsRecruitmentJobPostingState.IRequest"},"responseBody":{"description":"Paginated response containing job posting state summary data.","typeName":"IPageIAtsRecruitmentJobPostingState.ISummary"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index","path":"/atsRecruitment/hrRecruiter/jobPostingStates","method":"patch"},{"specification":"This operation retrieves detailed information for a specific job posting state entity, referenced by its unique identifier. It directly queries the ats_recruitment_job_posting_states table using jobPostingStateId to return all available fields for the designated job posting state. Used to populate admin edit screens, validate workflow transitions, and present full context to HR staff and system administrators.","description":"Retrieve the full record details for a single job posting state, identified by jobPostingStateId (UUID). The response includes fields such as state_code, label, description, is_active, sort_order, creation and update timestamps, and soft-deletion marker.\n\nAccess is restricted to administrative and HR recruiter roles, ensuring only privileged users can perform code/label mapping or workflow adjustment. This endpoint markets itself as a readonly business entity lookup, suitable for supporting validation at runtime or for pre-loading context for update/edit interfaces.\n\nIf the specified jobPostingStateId does not exist or is soft-deleted, a clear not-found error is returned. Permission violations generate a 403 error. Typical use cases include admin UI modules for workflow management or business rule enforcement based on active/deprecated states.","summary":"Get detailed information for a specific job posting state (ats_recruitment_job_posting_states) by ID.","parameters":[{"name":"jobPostingStateId","description":"Unique identifier (UUID) of the target job posting state.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job posting state record as stored in the system.","typeName":"IAtsRecruitmentJobPostingState"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/jobPostingStates/{jobPostingStateId}","method":"get"},{"specification":"This operation retrieves detailed information for a specific job posting state entity, referenced by its unique identifier. It directly queries the ats_recruitment_job_posting_states table using jobPostingStateId to return all available fields for the designated job posting state. Used to populate admin edit screens, validate workflow transitions, and present full context to HR staff and system administrators.","description":"Retrieve the full record details for a single job posting state, identified by jobPostingStateId (UUID). The response includes fields such as state_code, label, description, is_active, sort_order, creation and update timestamps, and soft-deletion marker.\n\nAccess is restricted to administrative and HR recruiter roles, ensuring only privileged users can perform code/label mapping or workflow adjustment. This endpoint markets itself as a readonly business entity lookup, suitable for supporting validation at runtime or for pre-loading context for update/edit interfaces.\n\nIf the specified jobPostingStateId does not exist or is soft-deleted, a clear not-found error is returned. Permission violations generate a 403 error. Typical use cases include admin UI modules for workflow management or business rule enforcement based on active/deprecated states.","summary":"Get detailed information for a specific job posting state (ats_recruitment_job_posting_states) by ID.","parameters":[{"name":"jobPostingStateId","description":"Unique identifier (UUID) of the target job posting state.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed job posting state record as stored in the system.","typeName":"IAtsRecruitmentJobPostingState"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/jobPostingStates/{jobPostingStateId}","method":"get"},{"specification":"This operation creates a new job posting state in the ATS system using the supplied workflow code, label, and related metadata. It inserts a new row in ats_recruitment_job_posting_states and validates that the provided state code is unique. The creation is strictly managed by authorized system administrators, ensuring that only allowed actors introduce new workflow states. All business rules about duplicate state codes, label formats, and required fields are enforced.","description":"Allows a system administrator to define a new job posting workflow state, such as introducing a new official lifecycle step (e.g., open, paused, archived). The endpoint validates that a unique state_code is provided (not present in soft-deleted or active states) and all essential fields—including label, is_active, description, and sort_order—are present. Additional rules for label format and allowed state_code patterns are enforced as per platform requirements.\n\nUpon successful creation, the detailed entity record is returned to the caller. If state code conflict, input validation, or insufficient privilege occurs, clear errors are returned. Only users with the systemAdmin role can invoke this endpoint due to the potential global platform impact of creating new workflow states.","summary":"Create a new job posting state (ats_recruitment_job_posting_states) in the system.","parameters":[],"requestBody":{"description":"Details of the new job posting state to be created, including workflow code, label, description, active status, and sort order.","typeName":"IAtsRecruitmentJobPostingState.ICreate"},"responseBody":{"description":"Detailed job posting state record as created in the system.","typeName":"IAtsRecruitmentJobPostingState"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/atsRecruitment/systemAdmin/jobPostingStates","method":"post"},{"specification":"This operation updates the details, label, or activation flag of a specific job posting state entity in the ATS system, identified by jobPostingStateId. It modifies the designated row in ats_recruitment_job_posting_states according to the provided input, enforcing unique state_code constraint and other business rules. Only system administrators are allowed to update or deactivate job state entries. Business validation rules apply for state uniqueness, allowed transitions, and label/flag changes.","description":"Update attributes (label, is_active, description, sort_order, etc.) of an existing job posting state identified by jobPostingStateId. This supports administrative workflows for managing the full catalog of job application transitions, supporting both temporary deactivation and full edit of platform states.\n\nInput body must include the required jobPostingStateId and at least one field to be updated. The system ensures state_code is not duplicated by another active entry and validates all format/rule constraints before committing changes. Soft deleted/archived entries cannot be edited.\n\nAuthorization is strictly limited to systemAdmin role. Any attempt by unauthorized users or a request for a non-existent or deleted state triggers an error. This is an essential admin operation for lifecycle and workflow tuning of job postings.","summary":"Update an existing job posting state (ats_recruitment_job_posting_states) in the system by ID.","parameters":[{"name":"jobPostingStateId","description":"Unique identifier (UUID) of the job posting state to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the target job posting state (must include at least one updatable field).","typeName":"IAtsRecruitmentJobPostingState.IUpdate"},"responseBody":{"description":"Detailed job posting state record as updated in the system.","typeName":"IAtsRecruitmentJobPostingState"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/jobPostingStates/{jobPostingStateId}","method":"put"},{"specification":"This operation permanently removes the specified job posting state from the ATS system database. The deletion is a hard delete, as the Prisma schema for ats_recruitment_job_posting_states features a soft deletion field (deleted_at); this endpoint is specifically intended for situations where administrative users need to remove deprecated, erroneous, or obsolete posting states from system use. The operation requires the unique identifier of the job posting state to target deletion and supports full audit tracking for recovery and compliance reasons.","description":"This operation serves to irrevocably remove a given job posting state from the recruitment system. The underlying Prisma model (ats_recruitment_job_posting_states) includes information such as state code, label, description, and support for soft deletion via 'deleted_at' timestamps. Deletion through this endpoint is reserved for administrative actions where a state is no longer permitted for business use, such as deprecating states or correcting erroneous entries.\n\nAccess to this endpoint is strictly limited to users with system administrator rights, as altering workflow states can impact the business process for all job postings. All such deletions are logged in the system audit trail for compliance and recovery purposes. Attempting to delete a currently-referenced state may be restricted by referential integrity rules, and error responses inform the user if deletion is not possible due to active dependencies.\n\nThis endpoint directly manipulates the ats_recruitment_job_posting_states table in the Prisma schema, ensuring that only valid state identifiers can be deleted. Related get (at), create, and update operations are present for full lifecycle state configuration management. Hard deletion removes the record, and related postings must reference an alternative or default state to preserve data integrity.","summary":"Permanently delete a job posting state from ats_recruitment_job_posting_states by ID.","parameters":[{"name":"jobPostingStateId","description":"Unique identifier of the job posting state to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/jobPostingStates/{jobPostingStateId}","method":"delete"},{"specification":"Retrieve a paginated and filterable list of job application records in the system. This operation is based on the ats_recruitment_applications Prisma schema, providing advanced search across applicants, job postings, status, submission timeline, and supports business analytics and workflow administration. HR recruiters and system administrators can query for applications by status, date, posting, or applicant for management and reporting purposes.","description":"This endpoint enables authorized users (HR recruiters/system administrators) to conduct advanced queries to list all job applications currently registered in the ATS platform. The underlying Prisma model (ats_recruitment_applications) links applications to applicants, job postings, and resumes and features fields such as current_status, submitted_at, and last_state_change_at for filtering, sorting, and paging.\n\nBusiness logic supports filtering applications by status (e.g., submitted, screening, code_test), applicant info, posting title, submission period, and related job attributes to facilitate workflow orchestration. Requests may include search terms, filters, page size, and sorting options encapsulated in the request body. Security restrictions ensure applicants only see their own records, while hrRecruiter and systemAdmin roles have broader system management permissions.\n\nThis operation supports business analytics, SLA tracking, and helps administer the recruitment funnel, allowing bulk actions, reporting, and export integration. Errors are handled for non-existent filter values or excessive query ranges, with compliance considerations for personal data access.","summary":"Search and retrieve a filtered, paginated list of job applications (ats_recruitment_applications).","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sorting parameters for job application listing.","typeName":"IAtsRecruitmentApplication.IRequest"},"responseBody":{"description":"Paginated result set of job applications matching search criteria.","typeName":"IPageIAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index","path":"/atsRecruitment/hrRecruiter/applications","method":"patch"},{"specification":"Retrieve a paginated and filterable list of job application records in the system. This operation is based on the ats_recruitment_applications Prisma schema, providing advanced search across applicants, job postings, status, submission timeline, and supports business analytics and workflow administration. HR recruiters and system administrators can query for applications by status, date, posting, or applicant for management and reporting purposes.","description":"This endpoint enables authorized users (HR recruiters/system administrators) to conduct advanced queries to list all job applications currently registered in the ATS platform. The underlying Prisma model (ats_recruitment_applications) links applications to applicants, job postings, and resumes and features fields such as current_status, submitted_at, and last_state_change_at for filtering, sorting, and paging.\n\nBusiness logic supports filtering applications by status (e.g., submitted, screening, code_test), applicant info, posting title, submission period, and related job attributes to facilitate workflow orchestration. Requests may include search terms, filters, page size, and sorting options encapsulated in the request body. Security restrictions ensure applicants only see their own records, while hrRecruiter and systemAdmin roles have broader system management permissions.\n\nThis operation supports business analytics, SLA tracking, and helps administer the recruitment funnel, allowing bulk actions, reporting, and export integration. Errors are handled for non-existent filter values or excessive query ranges, with compliance considerations for personal data access.","summary":"Search and retrieve a filtered, paginated list of job applications (ats_recruitment_applications).","parameters":[],"requestBody":{"description":"Search, filter, pagination, and sorting parameters for job application listing.","typeName":"IAtsRecruitmentApplication.IRequest"},"responseBody":{"description":"Paginated result set of job applications matching search criteria.","typeName":"IPageIAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/applications","method":"patch"},{"specification":"Retrieve detailed information for a single job application based on its unique identifier. Uses the ats_recruitment_applications table in Prisma, supporting read-access for authorized users to inspect applicant details, linked job posting, resume, current status, timeline metadata, and associated audit history. Used for candidate review, evaluation, and process management.","description":"This operation returns the complete set of information for a specific job application in the ATS system, including applicant linkage, job posting details, resume reference, current status, and the timeline of submission and state changes. The underlying Prisma schema ats_recruitment_applications provides fields for applicant_id, job_posting_id, resume_id, current_status, submission and last_state_change timestamps, and reference to related tables.\n\nAccess is granted to HR recruiters and system administrators for managerial review, process evaluation, or formal record-keeping. Applicants may access only their own applications, while HR recruiters and system administrators may view all records. The endpoint integrates with feedback, skill matching, and interview scheduling, supporting comprehensive candidate evaluation and workflow progression.\n\nSecurity and privacy controls ensure proper compliance with applicant data access regulations. Attempts to access non-existent or unauthorized application IDs result in structured error responses. Detailed business and audit context for the application are delivered in the response.","summary":"Get details for a single application by applicationId from ats_recruitment_applications.","parameters":[{"name":"applicationId","description":"Unique identifier of the application to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed application information, including applicant, posting, resume, current status, and metadata.","typeName":"IAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}","method":"get"},{"specification":"Retrieve detailed information for a single job application based on its unique identifier. Uses the ats_recruitment_applications table in Prisma, supporting read-access for authorized users to inspect applicant details, linked job posting, resume, current status, timeline metadata, and associated audit history. Used for candidate review, evaluation, and process management.","description":"This operation returns the complete set of information for a specific job application in the ATS system, including applicant linkage, job posting details, resume reference, current status, and the timeline of submission and state changes. The underlying Prisma schema ats_recruitment_applications provides fields for applicant_id, job_posting_id, resume_id, current_status, submission and last_state_change timestamps, and reference to related tables.\n\nAccess is granted to HR recruiters and system administrators for managerial review, process evaluation, or formal record-keeping. Applicants may access only their own applications, while HR recruiters and system administrators may view all records. The endpoint integrates with feedback, skill matching, and interview scheduling, supporting comprehensive candidate evaluation and workflow progression.\n\nSecurity and privacy controls ensure proper compliance with applicant data access regulations. Attempts to access non-existent or unauthorized application IDs result in structured error responses. Detailed business and audit context for the application are delivered in the response.","summary":"Get details for a single application by applicationId from ats_recruitment_applications.","parameters":[{"name":"applicationId","description":"Unique identifier of the application to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed application information, including applicant, posting, resume, current status, and metadata.","typeName":"IAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/applications/{applicationId}","method":"get"},{"specification":"Create a new job application record, linking an applicant to a target job posting and (optionally) a resume. This operation writes to the ats_recruitment_applications table in the Prisma schema, enforcing business rules for duplicate checks, application windows, and required fields. Successful creation returns the full application record and is audit-logged for compliance. Triggered when an applicant applies for a job posting through the platform.","description":"This operation allows a job applicant user to submit a new application for an open job posting. All required data—including the applicant's identification (must be authenticated), target job posting, and a resume reference—must be provided as per the AtsRecruitmentApplication.ICreate DTO. The operation prevents duplicate applications for the same posting (enforced via the unique [applicant_id, job_posting_id] constraint in Prisma) and verifies that the posting is currently open to applications.\n\nUpon successful submission, the application enters an initial state (e.g., 'submitted') and timestamps for submission and state tracking are automatically set. The full application object, including all core fields and relationships, is returned as confirmation. Business validation ensures the application window is still open, and all relevant applicant and posting access checks are enforced. Any attempt to apply outside of the permitted window, or duplicate applications, result in business logic errors as per project rules.\n\nAudit trails and event notifications are triggered on successful application creation, for use by HR, compliance, and system monitoring.","summary":"Create a new job application record in ats_recruitment_applications (applicant role).","parameters":[],"requestBody":{"description":"Application data with target job posting, applicant identification, and resume reference.","typeName":"IAtsRecruitmentApplication.ICreate"},"responseBody":{"description":"Full application record upon creation, with all core fields and relationships.","typeName":"IAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"applicant","name":"create","path":"/atsRecruitment/applicant/applications","method":"post"},{"specification":"This operation updates an existing application record in the ats_recruitment_applications table. It allows authorized HR recruiters and system administrators to modify fields such as resume association, status, and any relevant business metadata for a specific job application. The operation requires a valid applicationId path parameter to identify the record, and uses the IAtsRecruitmentApplication.IUpdate request body schema for update information. Only users with hrRecruiter or systemAdmin roles are authorized. All modifications are recorded for audit compliance and business traceability.","description":"Update details of a specific application record in the recruitment platform. This allows HR recruiters or system administrators to modify fields such as the associated resume, application status, or other editable business/personal details tied to the application. Sensitive changes, such as applicant mapping or significant status progression, may require additional validation or checks for concurrent updates or compliance reasons.\n\nAccess to this operation is restricted to hrRecruiter and systemAdmin roles, reflecting the need for controlled changes to applicant progress and sensitive information. The change will be logged in the audit trail for traceability. Relationships to other tables—such as job postings, resumes, and applicants—are enforced in the business logic, and the update must comply with valid foreign key references (e.g., resumeId must refer to a resume owned by the correct applicant).\n\nFields not present in the update body retain their current values. Validation ensures that changes to status or related fields remain consistent with allowed business transitions and overall data integrity. Any attempt to change immutable application properties or to bypass state checks will be prevented at the service layer. Errors may arise if the application does not exist, is deleted, or if a conflict/consistency violation is detected.","summary":"Update a specific application record in ats_recruitment_applications","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update in the application record","typeName":"IAtsRecruitmentApplication.IUpdate"},"responseBody":{"description":"The updated application record after modification","typeName":"IAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"update","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}","method":"put"},{"specification":"This operation updates an existing application record in the ats_recruitment_applications table. It allows authorized HR recruiters and system administrators to modify fields such as resume association, status, and any relevant business metadata for a specific job application. The operation requires a valid applicationId path parameter to identify the record, and uses the IAtsRecruitmentApplication.IUpdate request body schema for update information. Only users with hrRecruiter or systemAdmin roles are authorized. All modifications are recorded for audit compliance and business traceability.","description":"Update details of a specific application record in the recruitment platform. This allows HR recruiters or system administrators to modify fields such as the associated resume, application status, or other editable business/personal details tied to the application. Sensitive changes, such as applicant mapping or significant status progression, may require additional validation or checks for concurrent updates or compliance reasons.\n\nAccess to this operation is restricted to hrRecruiter and systemAdmin roles, reflecting the need for controlled changes to applicant progress and sensitive information. The change will be logged in the audit trail for traceability. Relationships to other tables—such as job postings, resumes, and applicants—are enforced in the business logic, and the update must comply with valid foreign key references (e.g., resumeId must refer to a resume owned by the correct applicant).\n\nFields not present in the update body retain their current values. Validation ensures that changes to status or related fields remain consistent with allowed business transitions and overall data integrity. Any attempt to change immutable application properties or to bypass state checks will be prevented at the service layer. Errors may arise if the application does not exist, is deleted, or if a conflict/consistency violation is detected.","summary":"Update a specific application record in ats_recruitment_applications","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and values to update in the application record","typeName":"IAtsRecruitmentApplication.IUpdate"},"responseBody":{"description":"The updated application record after modification","typeName":"IAtsRecruitmentApplication"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/applications/{applicationId}","method":"put"},{"specification":"This operation permanently erases a specific application record from the ats_recruitment_applications table by applicationId. It is authorized for use by system administrators only. When invoked, the operation marks the record as deleted to maintain auditability and compliance with GDPR/data retention rules. Attempts to erase applications that are referenced in other business-critical tables or that do not exist will result in an error. Operation is fully logged for audit purposes.","description":"Permanently erase (delete) an application from the system matching the given applicationId. Only system administrators are permitted to perform this operation due to the sensitivity and compliance implications of deleting applicant-job association records.\n\nThis operation will either perform hard deletion or set the deleted_at timestamp for soft-delete, depending on business retention policy (as per GDPR requirements). Attempts to remove records still in use by other active entities or referenced by logs, or when not permitted by compliance rules, will result in an error.\n\nAll erasure attempts (success and failure) are recorded in audit/data deletion logs for traceability. Errors may arise for non-existent records, already deleted applications, or compliance violations. Deleted records cannot be recovered unless an explicit recovery/revert workflow exists at the admin level.","summary":"Erase (delete) a specific application record by applicationId (admin only)","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/applications/{applicationId}","method":"delete"},{"specification":"This operation retrieves a paginated, filterable list of status/history transitions for a specific application, as stored in the ats_recruitment_application_status_histories table. It is designed for use by HR recruiters, technical reviewers, and system administrators, providing full context of status changes throughout the application's lifecycle. Advanced filtering, search, and pagination features are supported through a request body using IAtsRecruitmentApplicationStatusHistory.IRequest. Results are returned as a paginated list with summary information. Sensitive actor details are filtered based on the caller's role.","description":"Fetch a filtered and paginated list of all status change history events for a given application in the recruitment system. This operation supports scenarios where HR recruiters, technical reviewers, or system administrators review the full progression of candidate status transitions, for audit, compliance, and decision support.\n\nThe operation requires a valid applicationId as a path parameter and accepts an optional filter/search object as the request body for advanced queries (date range, from_status/to_status filters, actor identity, etc). Results are returned in a paginated structure using IAtsRecruitmentApplicationStatusHistory.ISummary. Caller authorization determines the visibility of certain sensitive fields (e.g., actor identity).\n\nThis endpoint enforces strict access control, and the underlying data is returned from a query joining applications with the status history table. All queries are subject to audit logging. Errors include: application not found, no history available, or unauthorized access attempts. The operation is central to candidate tracking and recruitment process transparency.","summary":"List all status change histories for an application (paginated, filterable)","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced status history search and filter query for an application","typeName":"IAtsRecruitmentApplicationStatusHistory.IRequest"},"responseBody":{"description":"Paginated list of status change summaries for the application","typeName":"IPageIAtsRecruitmentApplicationStatusHistory.ISummary"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/statusHistories","method":"patch"},{"specification":"This operation retrieves a paginated, filterable list of status/history transitions for a specific application, as stored in the ats_recruitment_application_status_histories table. It is designed for use by HR recruiters, technical reviewers, and system administrators, providing full context of status changes throughout the application's lifecycle. Advanced filtering, search, and pagination features are supported through a request body using IAtsRecruitmentApplicationStatusHistory.IRequest. Results are returned as a paginated list with summary information. Sensitive actor details are filtered based on the caller's role.","description":"Fetch a filtered and paginated list of all status change history events for a given application in the recruitment system. This operation supports scenarios where HR recruiters, technical reviewers, or system administrators review the full progression of candidate status transitions, for audit, compliance, and decision support.\n\nThe operation requires a valid applicationId as a path parameter and accepts an optional filter/search object as the request body for advanced queries (date range, from_status/to_status filters, actor identity, etc). Results are returned in a paginated structure using IAtsRecruitmentApplicationStatusHistory.ISummary. Caller authorization determines the visibility of certain sensitive fields (e.g., actor identity).\n\nThis endpoint enforces strict access control, and the underlying data is returned from a query joining applications with the status history table. All queries are subject to audit logging. Errors include: application not found, no history available, or unauthorized access attempts. The operation is central to candidate tracking and recruitment process transparency.","summary":"List all status change histories for an application (paginated, filterable)","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced status history search and filter query for an application","typeName":"IAtsRecruitmentApplicationStatusHistory.IRequest"},"responseBody":{"description":"Paginated list of status change summaries for the application","typeName":"IPageIAtsRecruitmentApplicationStatusHistory.ISummary"},"authorizationType":null,"authorizationRole":"techReviewer","name":"index","path":"/atsRecruitment/techReviewer/applications/{applicationId}/statusHistories","method":"patch"},{"specification":"This operation retrieves a paginated, filterable list of status/history transitions for a specific application, as stored in the ats_recruitment_application_status_histories table. It is designed for use by HR recruiters, technical reviewers, and system administrators, providing full context of status changes throughout the application's lifecycle. Advanced filtering, search, and pagination features are supported through a request body using IAtsRecruitmentApplicationStatusHistory.IRequest. Results are returned as a paginated list with summary information. Sensitive actor details are filtered based on the caller's role.","description":"Fetch a filtered and paginated list of all status change history events for a given application in the recruitment system. This operation supports scenarios where HR recruiters, technical reviewers, or system administrators review the full progression of candidate status transitions, for audit, compliance, and decision support.\n\nThe operation requires a valid applicationId as a path parameter and accepts an optional filter/search object as the request body for advanced queries (date range, from_status/to_status filters, actor identity, etc). Results are returned in a paginated structure using IAtsRecruitmentApplicationStatusHistory.ISummary. Caller authorization determines the visibility of certain sensitive fields (e.g., actor identity).\n\nThis endpoint enforces strict access control, and the underlying data is returned from a query joining applications with the status history table. All queries are subject to audit logging. Errors include: application not found, no history available, or unauthorized access attempts. The operation is central to candidate tracking and recruitment process transparency.","summary":"List all status change histories for an application (paginated, filterable)","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Advanced status history search and filter query for an application","typeName":"IAtsRecruitmentApplicationStatusHistory.IRequest"},"responseBody":{"description":"Paginated list of status change summaries for the application","typeName":"IPageIAtsRecruitmentApplicationStatusHistory.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/statusHistories","method":"patch"},{"specification":"This operation returns the details of a single status history event for a particular application status change, as recorded in ats_recruitment_application_status_histories. It is accessible by HR recruiters, tech reviewers, and system administrators. The operation requires both applicationId and statusHistoryId as path parameters to ensure context and security compliance. It returns the complete status history transition details, including before/after status, actor, timestamp, and any comments or reasons. Sensitive user/actor data is only returned if the caller's role is permitted. The response is IAtsRecruitmentApplicationStatusHistory.","description":"Retrieve the detailed information of a single application status change event, including previous and next status values, the actor who performed the transition, timestamps, and any contextual comments. Used to support thorough audits, compliance reviews, and deep dives into candidate progress.\n\nBoth applicationId and statusHistoryId must be provided as path parameters for unambiguous context and security validation. Only HR recruiters, technical reviewers, or system administrators are authorized to access this detailed view. The record is looked up and returned as IAtsRecruitmentApplicationStatusHistory type, with sensitive fields protected per-caller's role (e.g., actor identity for compliance users).\n\nBusiness logic ensures only users with a direct business relationship (e.g., assigned recruiter) can access sensitive information. Error responses are triggered for not found, unauthorized, or compliance data blocks. This endpoint is essential for supporting transparency and defensible recruitment practices.","summary":"Retrieve details for a specific status change history record for an application","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history event to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full status history record with details, actor, and comments","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"get"},{"specification":"This operation returns the details of a single status history event for a particular application status change, as recorded in ats_recruitment_application_status_histories. It is accessible by HR recruiters, tech reviewers, and system administrators. The operation requires both applicationId and statusHistoryId as path parameters to ensure context and security compliance. It returns the complete status history transition details, including before/after status, actor, timestamp, and any comments or reasons. Sensitive user/actor data is only returned if the caller's role is permitted. The response is IAtsRecruitmentApplicationStatusHistory.","description":"Retrieve the detailed information of a single application status change event, including previous and next status values, the actor who performed the transition, timestamps, and any contextual comments. Used to support thorough audits, compliance reviews, and deep dives into candidate progress.\n\nBoth applicationId and statusHistoryId must be provided as path parameters for unambiguous context and security validation. Only HR recruiters, technical reviewers, or system administrators are authorized to access this detailed view. The record is looked up and returned as IAtsRecruitmentApplicationStatusHistory type, with sensitive fields protected per-caller's role (e.g., actor identity for compliance users).\n\nBusiness logic ensures only users with a direct business relationship (e.g., assigned recruiter) can access sensitive information. Error responses are triggered for not found, unauthorized, or compliance data blocks. This endpoint is essential for supporting transparency and defensible recruitment practices.","summary":"Retrieve details for a specific status change history record for an application","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history event to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full status history record with details, actor, and comments","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationType":null,"authorizationRole":"techReviewer","name":"at","path":"/atsRecruitment/techReviewer/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"get"},{"specification":"This operation returns the details of a single status history event for a particular application status change, as recorded in ats_recruitment_application_status_histories. It is accessible by HR recruiters, tech reviewers, and system administrators. The operation requires both applicationId and statusHistoryId as path parameters to ensure context and security compliance. It returns the complete status history transition details, including before/after status, actor, timestamp, and any comments or reasons. Sensitive user/actor data is only returned if the caller's role is permitted. The response is IAtsRecruitmentApplicationStatusHistory.","description":"Retrieve the detailed information of a single application status change event, including previous and next status values, the actor who performed the transition, timestamps, and any contextual comments. Used to support thorough audits, compliance reviews, and deep dives into candidate progress.\n\nBoth applicationId and statusHistoryId must be provided as path parameters for unambiguous context and security validation. Only HR recruiters, technical reviewers, or system administrators are authorized to access this detailed view. The record is looked up and returned as IAtsRecruitmentApplicationStatusHistory type, with sensitive fields protected per-caller's role (e.g., actor identity for compliance users).\n\nBusiness logic ensures only users with a direct business relationship (e.g., assigned recruiter) can access sensitive information. Error responses are triggered for not found, unauthorized, or compliance data blocks. This endpoint is essential for supporting transparency and defensible recruitment practices.","summary":"Retrieve details for a specific status change history record for an application","parameters":[{"name":"applicationId","description":"Unique identifier of the target job application","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history event to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full status history record with details, actor, and comments","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"get"},{"specification":"Creates a new status history entry for a given job application in the ATS recruitment system. This is associated with the ats_recruitment_application_status_histories table, allowing HR or tech reviewers to record each change in application status, along with the actor, transition states, timestamp, and optional comments. This operation is critical for tracking state progression, auditing application review steps, and maintaining compliance with record-keeping requirements. Status histories preserve every state change (e.g., from screening to interview) and provide a transparent audit trail for hiring processes.","description":"This operation allows an authorized HR recruiter or designated tech reviewer to create a new status history record for a specific job application. This is primarily used for logging any transition of the job application state (such as moving from 'screening' to 'interview', or marking an application as 'accepted' or 'rejected').\n\nOn successful execution, a record is created in the ats_recruitment_application_status_histories table, detailing which application was affected, which actor performed the status change, the states transitioned from and to, the timestamp, and any additional transition comment. Access is restricted to users with HR or reviewer roles to ensure that unauthorized users cannot forge application state changes. Business logic may enforce allowed transitions according to the organization’s workflow rules and reject invalid transitions.\n\nAs an auditable entity, this status history is used for compliance, analytics, and transparency within the recruitment platform. All changes are timestamped and associated with actors to support workflow forensics and application lifecycle reporting. On error, validation checks ensure the application exists and the user has proper permissions. Related endpoints include viewing all status histories for an application and updating an existing record if correction is needed.","summary":"Create a new status history record for an application (ats_recruitment_application_status_histories table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application for which the status history is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information about the new status transition, including previous and new status values, the actor (if provided), timestamp, and optional comment.","typeName":"IAtsRecruitmentApplicationStatusHistory.ICreate"},"responseBody":{"description":"The created application status history record with all details included.","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"create","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/statusHistories","method":"post"},{"specification":"Creates a new status history entry for a given job application in the ATS recruitment system. This is associated with the ats_recruitment_application_status_histories table, allowing HR or tech reviewers to record each change in application status, along with the actor, transition states, timestamp, and optional comments. This operation is critical for tracking state progression, auditing application review steps, and maintaining compliance with record-keeping requirements. Status histories preserve every state change (e.g., from screening to interview) and provide a transparent audit trail for hiring processes.","description":"This operation allows an authorized HR recruiter or designated tech reviewer to create a new status history record for a specific job application. This is primarily used for logging any transition of the job application state (such as moving from 'screening' to 'interview', or marking an application as 'accepted' or 'rejected').\n\nOn successful execution, a record is created in the ats_recruitment_application_status_histories table, detailing which application was affected, which actor performed the status change, the states transitioned from and to, the timestamp, and any additional transition comment. Access is restricted to users with HR or reviewer roles to ensure that unauthorized users cannot forge application state changes. Business logic may enforce allowed transitions according to the organization’s workflow rules and reject invalid transitions.\n\nAs an auditable entity, this status history is used for compliance, analytics, and transparency within the recruitment platform. All changes are timestamped and associated with actors to support workflow forensics and application lifecycle reporting. On error, validation checks ensure the application exists and the user has proper permissions. Related endpoints include viewing all status histories for an application and updating an existing record if correction is needed.","summary":"Create a new status history record for an application (ats_recruitment_application_status_histories table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application for which the status history is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information about the new status transition, including previous and new status values, the actor (if provided), timestamp, and optional comment.","typeName":"IAtsRecruitmentApplicationStatusHistory.ICreate"},"responseBody":{"description":"The created application status history record with all details included.","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationRole":"techReviewer","authorizationType":null,"name":"create","path":"/atsRecruitment/techReviewer/applications/{applicationId}/statusHistories","method":"post"},{"specification":"Updates a specific status history entry for a job application in the ATS recruitment system. This covers the ats_recruitment_application_status_histories table and is typically used to correct errors in the recorded transition, add more detailed comments, or adjust metadata (e.g., change comment, actor) when permitted. All updates are logged for audit purposes. Direct updates may be subject to audit or restricted depending on compliance needs.","description":"This operation enables authorized HR recruiters or tech reviewers to update a specific application status history record. Typical use cases include correcting previously submitted comments, rectifying metadata errors (such as an incorrect 'from_status' or 'to_status'), or enhancing details required for more granular audit trails.\n\nThe operation targets a specific status history identified by its unique ID within the context of a job application. On update, the record in ats_recruitment_application_status_histories is changed accordingly; previous data is typically archived or version-controlled for compliance. Input validation ensures changes comply with business rules and that only permissible fields are edited. Unauthorized or inappropriate edits may be restricted according to platform policy.\n\nAll updates are timestamped and, where applicable, attributed to the editor. This operation supports maintaining a highly accurate, auditable process record within the hiring workflow, ensuring compliance with traceability standards.","summary":"Update a specific status history record for an application (ats_recruitment_application_status_histories table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application.","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated details for the status history record, such as new comments or corrected status values.","typeName":"IAtsRecruitmentApplicationStatusHistory.IUpdate"},"responseBody":{"description":"The updated status history record with all changes applied.","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"update","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"put"},{"specification":"Updates a specific status history entry for a job application in the ATS recruitment system. This covers the ats_recruitment_application_status_histories table and is typically used to correct errors in the recorded transition, add more detailed comments, or adjust metadata (e.g., change comment, actor) when permitted. All updates are logged for audit purposes. Direct updates may be subject to audit or restricted depending on compliance needs.","description":"This operation enables authorized HR recruiters or tech reviewers to update a specific application status history record. Typical use cases include correcting previously submitted comments, rectifying metadata errors (such as an incorrect 'from_status' or 'to_status'), or enhancing details required for more granular audit trails.\n\nThe operation targets a specific status history identified by its unique ID within the context of a job application. On update, the record in ats_recruitment_application_status_histories is changed accordingly; previous data is typically archived or version-controlled for compliance. Input validation ensures changes comply with business rules and that only permissible fields are edited. Unauthorized or inappropriate edits may be restricted according to platform policy.\n\nAll updates are timestamped and, where applicable, attributed to the editor. This operation supports maintaining a highly accurate, auditable process record within the hiring workflow, ensuring compliance with traceability standards.","summary":"Update a specific status history record for an application (ats_recruitment_application_status_histories table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application.","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"The updated details for the status history record, such as new comments or corrected status values.","typeName":"IAtsRecruitmentApplicationStatusHistory.IUpdate"},"responseBody":{"description":"The updated status history record with all changes applied.","typeName":"IAtsRecruitmentApplicationStatusHistory"},"authorizationRole":"techReviewer","authorizationType":null,"name":"update","path":"/atsRecruitment/techReviewer/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"put"},{"specification":"Deletes a specific status history entry from the ATS recruitment system for a given job application. This implements a hard delete, as the ats_recruitment_application_status_histories table does not have an explicit soft delete marker. Use only for administrative error correction or regulatory compliance. Deletion actions should be highly restricted and auditable due to compliance and traceability requirements.","description":"This operation allows an authorized HR recruiter or tech reviewer to permanently remove a status history record for a specific application. Typically, deletion is allowed only in exceptional situations such as administrative error correction or compliance obligations, as most status history records are considered immutable to preserve audit trails.\n\nWhen executed, the specified status history record is permanently deleted from the ats_recruitment_application_status_histories table. As there is no soft delete column, this record becomes irrecoverable. All deletion actions are recommended to be logged in the audit trail for compliance and transparency. Only users with explicit privileges should be able to perform this operation, and attempts to delete immutable or protected records must be rejected with an appropriate error.\n\nThis operation supports maintaining an accurate and compliant workflow while minimizing the risk of accidental or unauthorized loss of critical history data. Related operations include retrieval and update of status histories.","summary":"Permanently delete a specific status history record for an application (ats_recruitment_application_status_histories table, hard delete).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application.","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"hrRecruiter","authorizationType":null,"name":"erase","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"delete"},{"specification":"Deletes a specific status history entry from the ATS recruitment system for a given job application. This implements a hard delete, as the ats_recruitment_application_status_histories table does not have an explicit soft delete marker. Use only for administrative error correction or regulatory compliance. Deletion actions should be highly restricted and auditable due to compliance and traceability requirements.","description":"This operation allows an authorized HR recruiter or tech reviewer to permanently remove a status history record for a specific application. Typically, deletion is allowed only in exceptional situations such as administrative error correction or compliance obligations, as most status history records are considered immutable to preserve audit trails.\n\nWhen executed, the specified status history record is permanently deleted from the ats_recruitment_application_status_histories table. As there is no soft delete column, this record becomes irrecoverable. All deletion actions are recommended to be logged in the audit trail for compliance and transparency. Only users with explicit privileges should be able to perform this operation, and attempts to delete immutable or protected records must be rejected with an appropriate error.\n\nThis operation supports maintaining an accurate and compliant workflow while minimizing the risk of accidental or unauthorized loss of critical history data. Related operations include retrieval and update of status histories.","summary":"Permanently delete a specific status history record for an application (ats_recruitment_application_status_histories table, hard delete).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application.","schema":{"type":"string","format":"uuid"}},{"name":"statusHistoryId","description":"Unique identifier of the status history record to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"techReviewer","authorizationType":null,"name":"erase","path":"/atsRecruitment/techReviewer/applications/{applicationId}/statusHistories/{statusHistoryId}","method":"delete"},{"specification":"Retrieves a paginated, filterable list of feedback records associated with a given job application in the ATS recruitment system. Targets the ats_recruitment_application_feedback table, returning all feedback (HR and tech reviewer) linked to the specified application. Supports advanced search, filtering, and sorting based on feedback creator, rating, submission date, and final recommendation. This supports HR review, audit, and compliance reporting.","description":"This operation enables authorized HR recruiters, tech reviewers, or system administrators to retrieve a paginated and filtered list of feedback entries for a specific job application. Feedback records are stored in the ats_recruitment_application_feedback table and may be created by both HR recruiters and tech reviewers, with each entry containing reviewer identity, textual feedback, rating, and recommendation status.\n\nSearch and filtering can include attributes such as reviewer ID, date ranges, numerical ratings, and whether the feedback is the final recommendation. Pagination is supported to handle large numbers of feedbacks efficiently. Responses are formatted as a page of summary feedback records, ensuring scalability and performance for operational review panels.\n\nSecurity restricts access to authorized users and ensures sensitive feedback content is only presented to permitted HR, reviewer, or administrator roles. All access to feedback records should be logged for compliance and audit. Business logic may restrict views to only non-deleted or appropriately filtered feedback.","summary":"Retrieve a paginated, filtered list of feedback for an application (ats_recruitment_application_feedback table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application whose feedbacks are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pagination, filtering, and sorting criteria for feedback search.","typeName":"IAtsRecruitmentApplicationFeedback.IRequest"},"responseBody":{"description":"Paginated list of summary feedback records for the specified application.","typeName":"IPageIAtsRecruitmentApplicationFeedback.ISummary"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"index","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/feedbacks","method":"patch"},{"specification":"Retrieves a paginated, filterable list of feedback records associated with a given job application in the ATS recruitment system. Targets the ats_recruitment_application_feedback table, returning all feedback (HR and tech reviewer) linked to the specified application. Supports advanced search, filtering, and sorting based on feedback creator, rating, submission date, and final recommendation. This supports HR review, audit, and compliance reporting.","description":"This operation enables authorized HR recruiters, tech reviewers, or system administrators to retrieve a paginated and filtered list of feedback entries for a specific job application. Feedback records are stored in the ats_recruitment_application_feedback table and may be created by both HR recruiters and tech reviewers, with each entry containing reviewer identity, textual feedback, rating, and recommendation status.\n\nSearch and filtering can include attributes such as reviewer ID, date ranges, numerical ratings, and whether the feedback is the final recommendation. Pagination is supported to handle large numbers of feedbacks efficiently. Responses are formatted as a page of summary feedback records, ensuring scalability and performance for operational review panels.\n\nSecurity restricts access to authorized users and ensures sensitive feedback content is only presented to permitted HR, reviewer, or administrator roles. All access to feedback records should be logged for compliance and audit. Business logic may restrict views to only non-deleted or appropriately filtered feedback.","summary":"Retrieve a paginated, filtered list of feedback for an application (ats_recruitment_application_feedback table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application whose feedbacks are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pagination, filtering, and sorting criteria for feedback search.","typeName":"IAtsRecruitmentApplicationFeedback.IRequest"},"responseBody":{"description":"Paginated list of summary feedback records for the specified application.","typeName":"IPageIAtsRecruitmentApplicationFeedback.ISummary"},"authorizationRole":"techReviewer","authorizationType":null,"name":"index","path":"/atsRecruitment/techReviewer/applications/{applicationId}/feedbacks","method":"patch"},{"specification":"Retrieves a paginated, filterable list of feedback records associated with a given job application in the ATS recruitment system. Targets the ats_recruitment_application_feedback table, returning all feedback (HR and tech reviewer) linked to the specified application. Supports advanced search, filtering, and sorting based on feedback creator, rating, submission date, and final recommendation. This supports HR review, audit, and compliance reporting.","description":"This operation enables authorized HR recruiters, tech reviewers, or system administrators to retrieve a paginated and filtered list of feedback entries for a specific job application. Feedback records are stored in the ats_recruitment_application_feedback table and may be created by both HR recruiters and tech reviewers, with each entry containing reviewer identity, textual feedback, rating, and recommendation status.\n\nSearch and filtering can include attributes such as reviewer ID, date ranges, numerical ratings, and whether the feedback is the final recommendation. Pagination is supported to handle large numbers of feedbacks efficiently. Responses are formatted as a page of summary feedback records, ensuring scalability and performance for operational review panels.\n\nSecurity restricts access to authorized users and ensures sensitive feedback content is only presented to permitted HR, reviewer, or administrator roles. All access to feedback records should be logged for compliance and audit. Business logic may restrict views to only non-deleted or appropriately filtered feedback.","summary":"Retrieve a paginated, filtered list of feedback for an application (ats_recruitment_application_feedback table).","parameters":[{"name":"applicationId","description":"Unique identifier of the job application whose feedbacks are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Pagination, filtering, and sorting criteria for feedback search.","typeName":"IAtsRecruitmentApplicationFeedback.IRequest"},"responseBody":{"description":"Paginated list of summary feedback records for the specified application.","typeName":"IPageIAtsRecruitmentApplicationFeedback.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/feedbacks","method":"patch"},{"specification":"This operation retrieves the details of a specific feedback left on a job application. It is based on the 'ats_recruitment_application_feedback' table, which stores feedback records submitted by HR recruiters or technical reviewers for an application. The operation allows authorized actors to access detailed feedback, including reviewer comments, ratings, and final recommendation status for a given application and feedback entry. This is essential for audit trails, review discussions, and historical reference by permitted roles.","description":"Fetch the details of a particular feedback entry associated with a job application from the ATS system's application feedback table. This API allows HR recruiters and tech reviewers to retrieve comprehensive feedback information, encompassing fields such as feedback text, reviewer identification, associated application, rating, final recommendation flag, and creation timestamp.\n\nProper authorization is required to access this endpoint, typically limiting access to HR, tech reviewers, or admins with assignments to the targeted application. Reviewing the feedback promotes transparency in the evaluation process and supports compliance with audit and reporting needs.\n\nThe operation references 'ats_recruitment_application_feedback' and validates that the referenced feedbackId is associated with the specified applicationId. Error handling covers invalid UUIDs, unauthorized access attempts, or missing feedback records.","summary":"Retrieve a specific feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier of the target application containing the feedback.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed feedback entity for the specified application and feedback ID.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"at","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/feedbacks/{feedbackId}","method":"get","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves the details of a specific feedback left on a job application. It is based on the 'ats_recruitment_application_feedback' table, which stores feedback records submitted by HR recruiters or technical reviewers for an application. The operation allows authorized actors to access detailed feedback, including reviewer comments, ratings, and final recommendation status for a given application and feedback entry. This is essential for audit trails, review discussions, and historical reference by permitted roles.","description":"Fetch the details of a particular feedback entry associated with a job application from the ATS system's application feedback table. This API allows HR recruiters and tech reviewers to retrieve comprehensive feedback information, encompassing fields such as feedback text, reviewer identification, associated application, rating, final recommendation flag, and creation timestamp.\n\nProper authorization is required to access this endpoint, typically limiting access to HR, tech reviewers, or admins with assignments to the targeted application. Reviewing the feedback promotes transparency in the evaluation process and supports compliance with audit and reporting needs.\n\nThe operation references 'ats_recruitment_application_feedback' and validates that the referenced feedbackId is associated with the specified applicationId. Error handling covers invalid UUIDs, unauthorized access attempts, or missing feedback records.","summary":"Retrieve a specific feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier of the target application containing the feedback.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed feedback entity for the specified application and feedback ID.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"at","path":"/atsRecruitment/techReviewer/applications/{applicationId}/feedbacks/{feedbackId}","method":"get","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves the details of a specific feedback left on a job application. It is based on the 'ats_recruitment_application_feedback' table, which stores feedback records submitted by HR recruiters or technical reviewers for an application. The operation allows authorized actors to access detailed feedback, including reviewer comments, ratings, and final recommendation status for a given application and feedback entry. This is essential for audit trails, review discussions, and historical reference by permitted roles.","description":"Fetch the details of a particular feedback entry associated with a job application from the ATS system's application feedback table. This API allows HR recruiters and tech reviewers to retrieve comprehensive feedback information, encompassing fields such as feedback text, reviewer identification, associated application, rating, final recommendation flag, and creation timestamp.\n\nProper authorization is required to access this endpoint, typically limiting access to HR, tech reviewers, or admins with assignments to the targeted application. Reviewing the feedback promotes transparency in the evaluation process and supports compliance with audit and reporting needs.\n\nThe operation references 'ats_recruitment_application_feedback' and validates that the referenced feedbackId is associated with the specified applicationId. Error handling covers invalid UUIDs, unauthorized access attempts, or missing feedback records.","summary":"Retrieve a specific feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier of the target application containing the feedback.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed feedback entity for the specified application and feedback ID.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"at","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/feedbacks/{feedbackId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation allows an authorized HR recruiter or technical reviewer to create a new feedback entry on a specific job application. The feedback is stored in the ats_recruitment_application_feedback table and includes free-form feedback text, numerical rating (optional), a final recommendation flag, and the reviewer ID. Each feedback is associated with an application and is critical for collective decision making in the hiring process.","description":"Create a new feedback entry for a job application using this endpoint. Upon submission, the system validates the reviewer's permission to provide feedback for the referenced application and ensures data integrity for feedback body, rating, and the recommendation status fields.\n\nThis feedback mechanism enhances transparency in the candidate evaluation process and supports structured collaboration among HR recruiters and technical reviewers. The API enforces a unique reviewer–application feedback combination to prevent duplicate entries for the same reviewer and application.\n\nThis operation directly interacts with the ats_recruitment_application_feedback table as defined in the Prisma schema, populating all relevant columns. Access to this endpoint is controlled to ensure only designated reviewers (HR, technical reviewers, or authorized admins) can submit feedback for an application. Business logic includes validation of the application existence, reviewer eligibility, and correct feedback data structure. Error handling provides responses for unauthorized access, validation failures, or constraint violations (such as duplicate feedback).","summary":"Create a new feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application to which the feedback is being added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Feedback creation payload, including reviewer, body, rating, and recommendation flag.","typeName":"IAtsRecruitmentApplicationFeedback.ICreate"},"responseBody":{"description":"The created feedback record with its attributes and association.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"create","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/feedbacks","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation allows an authorized HR recruiter or technical reviewer to create a new feedback entry on a specific job application. The feedback is stored in the ats_recruitment_application_feedback table and includes free-form feedback text, numerical rating (optional), a final recommendation flag, and the reviewer ID. Each feedback is associated with an application and is critical for collective decision making in the hiring process.","description":"Create a new feedback entry for a job application using this endpoint. Upon submission, the system validates the reviewer's permission to provide feedback for the referenced application and ensures data integrity for feedback body, rating, and the recommendation status fields.\n\nThis feedback mechanism enhances transparency in the candidate evaluation process and supports structured collaboration among HR recruiters and technical reviewers. The API enforces a unique reviewer–application feedback combination to prevent duplicate entries for the same reviewer and application.\n\nThis operation directly interacts with the ats_recruitment_application_feedback table as defined in the Prisma schema, populating all relevant columns. Access to this endpoint is controlled to ensure only designated reviewers (HR, technical reviewers, or authorized admins) can submit feedback for an application. Business logic includes validation of the application existence, reviewer eligibility, and correct feedback data structure. Error handling provides responses for unauthorized access, validation failures, or constraint violations (such as duplicate feedback).","summary":"Create a new feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application to which the feedback is being added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Feedback creation payload, including reviewer, body, rating, and recommendation flag.","typeName":"IAtsRecruitmentApplicationFeedback.ICreate"},"responseBody":{"description":"The created feedback record with its attributes and association.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"create","path":"/atsRecruitment/techReviewer/applications/{applicationId}/feedbacks","method":"post","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation allows an authorized HR recruiter or technical reviewer to create a new feedback entry on a specific job application. The feedback is stored in the ats_recruitment_application_feedback table and includes free-form feedback text, numerical rating (optional), a final recommendation flag, and the reviewer ID. Each feedback is associated with an application and is critical for collective decision making in the hiring process.","description":"Create a new feedback entry for a job application using this endpoint. Upon submission, the system validates the reviewer's permission to provide feedback for the referenced application and ensures data integrity for feedback body, rating, and the recommendation status fields.\n\nThis feedback mechanism enhances transparency in the candidate evaluation process and supports structured collaboration among HR recruiters and technical reviewers. The API enforces a unique reviewer–application feedback combination to prevent duplicate entries for the same reviewer and application.\n\nThis operation directly interacts with the ats_recruitment_application_feedback table as defined in the Prisma schema, populating all relevant columns. Access to this endpoint is controlled to ensure only designated reviewers (HR, technical reviewers, or authorized admins) can submit feedback for an application. Business logic includes validation of the application existence, reviewer eligibility, and correct feedback data structure. Error handling provides responses for unauthorized access, validation failures, or constraint violations (such as duplicate feedback).","summary":"Create a new feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application to which the feedback is being added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Feedback creation payload, including reviewer, body, rating, and recommendation flag.","typeName":"IAtsRecruitmentApplicationFeedback.ICreate"},"responseBody":{"description":"The created feedback record with its attributes and association.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"create","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/feedbacks","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing feedback entry associated with a job application in the ats_recruitment_application_feedback table. Authorized HR recruiters, technical reviewers, or admins may use this endpoint to modify their previously submitted feedback, such as correcting feedback text, updating rating, or adjusting final recommendation status. Only assigned reviewers can update their own feedback, and all updates are subject to validation for audit and compliance.","description":"Update a specific feedback entry for an application using this endpoint. The operation enforces reviewer identity and permission, ensuring only the original reviewer or appropriately privileged actors can alter an existing feedback record.\n\nThe update process applies changes to fields such as feedback body, rating, and the is_final_recommendation flag while maintaining an audit trail of modifications. Updates must comply with table uniqueness constraints, and only authorized users assigned to the application or with system-level privileges may perform changes.\n\nBusiness logic includes validation of feedback existence, reviewer-authority linkage, and data structure of the update body. Proper error handling ensures clients are informed of unauthorized attempts, record-not-found scenarios, or update constraint violations.","summary":"Update an existing feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application containing the feedback to update.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields to be updated for the feedback entry.","typeName":"IAtsRecruitmentApplicationFeedback.IUpdate"},"responseBody":{"description":"The updated feedback record reflecting the latest changes.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"update","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/feedbacks/{feedbackId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation updates an existing feedback entry associated with a job application in the ats_recruitment_application_feedback table. Authorized HR recruiters, technical reviewers, or admins may use this endpoint to modify their previously submitted feedback, such as correcting feedback text, updating rating, or adjusting final recommendation status. Only assigned reviewers can update their own feedback, and all updates are subject to validation for audit and compliance.","description":"Update a specific feedback entry for an application using this endpoint. The operation enforces reviewer identity and permission, ensuring only the original reviewer or appropriately privileged actors can alter an existing feedback record.\n\nThe update process applies changes to fields such as feedback body, rating, and the is_final_recommendation flag while maintaining an audit trail of modifications. Updates must comply with table uniqueness constraints, and only authorized users assigned to the application or with system-level privileges may perform changes.\n\nBusiness logic includes validation of feedback existence, reviewer-authority linkage, and data structure of the update body. Proper error handling ensures clients are informed of unauthorized attempts, record-not-found scenarios, or update constraint violations.","summary":"Update an existing feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application containing the feedback to update.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields to be updated for the feedback entry.","typeName":"IAtsRecruitmentApplicationFeedback.IUpdate"},"responseBody":{"description":"The updated feedback record reflecting the latest changes.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"update","path":"/atsRecruitment/techReviewer/applications/{applicationId}/feedbacks/{feedbackId}","method":"put","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation updates an existing feedback entry associated with a job application in the ats_recruitment_application_feedback table. Authorized HR recruiters, technical reviewers, or admins may use this endpoint to modify their previously submitted feedback, such as correcting feedback text, updating rating, or adjusting final recommendation status. Only assigned reviewers can update their own feedback, and all updates are subject to validation for audit and compliance.","description":"Update a specific feedback entry for an application using this endpoint. The operation enforces reviewer identity and permission, ensuring only the original reviewer or appropriately privileged actors can alter an existing feedback record.\n\nThe update process applies changes to fields such as feedback body, rating, and the is_final_recommendation flag while maintaining an audit trail of modifications. Updates must comply with table uniqueness constraints, and only authorized users assigned to the application or with system-level privileges may perform changes.\n\nBusiness logic includes validation of feedback existence, reviewer-authority linkage, and data structure of the update body. Proper error handling ensures clients are informed of unauthorized attempts, record-not-found scenarios, or update constraint violations.","summary":"Update an existing feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application containing the feedback to update.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Payload with fields to be updated for the feedback entry.","typeName":"IAtsRecruitmentApplicationFeedback.IUpdate"},"responseBody":{"description":"The updated feedback record reflecting the latest changes.","typeName":"IAtsRecruitmentApplicationFeedback"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"update","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/feedbacks/{feedbackId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation deletes a specific feedback entry from the ats_recruitment_application_feedback table associated with a job application. The deletion is performed by the original reviewer or a system administrator, complying with data privacy regulations and business rules. Audit and traceability are ensured, and, as the schema does not implement soft delete fields for this table, the operation irreversibly removes feedback records from the system.","description":"Permanently delete a feedback entry for a job application using this endpoint. Only the reviewer who authored the feedback or a system administrator may perform deletion actions. The system validates both user authorization and the association between feedbackId and applicationId before executing the operation.\n\nThe underlying schema for ats_recruitment_application_feedback does not include soft delete fields; therefore, deletions are permanent and unrecoverable. Audit logs of such actions may be maintained in the system (separately) for compliance, but the record itself is removed from the business table.\n\nAccess is strictly controlled to prevent unauthorized or accidental data loss. Proper error handling includes responses for invalid IDs, missing records, unauthorized access, and business logic conflicts (such as attempting to delete feedback not associated with the specified application).","summary":"Permanently delete a feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application containing the feedback to delete.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"erase","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/feedbacks/{feedbackId}","method":"delete","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation deletes a specific feedback entry from the ats_recruitment_application_feedback table associated with a job application. The deletion is performed by the original reviewer or a system administrator, complying with data privacy regulations and business rules. Audit and traceability are ensured, and, as the schema does not implement soft delete fields for this table, the operation irreversibly removes feedback records from the system.","description":"Permanently delete a feedback entry for a job application using this endpoint. Only the reviewer who authored the feedback or a system administrator may perform deletion actions. The system validates both user authorization and the association between feedbackId and applicationId before executing the operation.\n\nThe underlying schema for ats_recruitment_application_feedback does not include soft delete fields; therefore, deletions are permanent and unrecoverable. Audit logs of such actions may be maintained in the system (separately) for compliance, but the record itself is removed from the business table.\n\nAccess is strictly controlled to prevent unauthorized or accidental data loss. Proper error handling includes responses for invalid IDs, missing records, unauthorized access, and business logic conflicts (such as attempting to delete feedback not associated with the specified application).","summary":"Permanently delete a feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application containing the feedback to delete.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"erase","path":"/atsRecruitment/techReviewer/applications/{applicationId}/feedbacks/{feedbackId}","method":"delete","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation deletes a specific feedback entry from the ats_recruitment_application_feedback table associated with a job application. The deletion is performed by the original reviewer or a system administrator, complying with data privacy regulations and business rules. Audit and traceability are ensured, and, as the schema does not implement soft delete fields for this table, the operation irreversibly removes feedback records from the system.","description":"Permanently delete a feedback entry for a job application using this endpoint. Only the reviewer who authored the feedback or a system administrator may perform deletion actions. The system validates both user authorization and the association between feedbackId and applicationId before executing the operation.\n\nThe underlying schema for ats_recruitment_application_feedback does not include soft delete fields; therefore, deletions are permanent and unrecoverable. Audit logs of such actions may be maintained in the system (separately) for compliance, but the record itself is removed from the business table.\n\nAccess is strictly controlled to prevent unauthorized or accidental data loss. Proper error handling includes responses for invalid IDs, missing records, unauthorized access, and business logic conflicts (such as attempting to delete feedback not associated with the specified application).","summary":"Permanently delete a feedback entry for an application (ats_recruitment_application_feedback).","parameters":[{"name":"applicationId","description":"Unique identifier for the application containing the feedback to delete.","schema":{"type":"string","format":"uuid"}},{"name":"feedbackId","description":"Unique identifier of the feedback entry to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/feedbacks/{feedbackId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a list of all skill match records associated with a particular application from the ats_recruitment_application_skill_matches table. It allows authorized HR recruiters or system administrators to search and paginate per-skill matching results, with filtering options such as skill type, match status, manual/AI verification, and confidence score. This endpoint supports business workflows requiring review or analytics of skill matching by application, and includes pagination and filter logic for efficient navigation of possibly large result sets. Per business security policy, only users with HR recruiter or system administrator roles are permitted to use this operation.","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/skillMatches","method":"patch","summary":"Retrieve a paginated list of skill match records for a given application from ats_recruitment_application_skill_matches table.","description":"This API operation returns a filtered and paginated list of skill match results linked to a specific job application. Each skill match represents the outcome of AI or manual comparison between the applicant's resume and the job requirements, with match type, confidence, and verification status.\n\nHR recruiters and system administrators may use this API to review which skills were matched automatically, which need manual verification, and assess candidate fit. Filtering options allow narrowing results by skill, match type (required/preferred/missing etc.), or verification status.\n\nSecurity: Only authenticated HR recruiters and system administrators may use this endpoint to ensure privacy and protect sensitive evaluation information. Proper permission checks are enforced and access is logged for audit trail purposes.\n\nThis operation integrates the ats_recruitment_application_skill_matches Prisma table and includes all related fields as described in the schema. Business validation ensures the applicationId belongs to the current organization context.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application whose skill matches are requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for paginated skill match retrieval within the given application.","typeName":"IAtsRecruitmentApplicationSkillMatch.IRequest"},"responseBody":{"description":"Paginated list containing summary records for skill matches and matching metadata.","typeName":"IPageIAtsRecruitmentApplicationSkillMatch.ISummary"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index"},{"specification":"This operation retrieves a list of all skill match records associated with a particular application from the ats_recruitment_application_skill_matches table. It allows authorized HR recruiters or system administrators to search and paginate per-skill matching results, with filtering options such as skill type, match status, manual/AI verification, and confidence score. This endpoint supports business workflows requiring review or analytics of skill matching by application, and includes pagination and filter logic for efficient navigation of possibly large result sets. Per business security policy, only users with HR recruiter or system administrator roles are permitted to use this operation.","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/skillMatches","method":"patch","summary":"Retrieve a paginated list of skill match records for a given application from ats_recruitment_application_skill_matches table.","description":"This API operation returns a filtered and paginated list of skill match results linked to a specific job application. Each skill match represents the outcome of AI or manual comparison between the applicant's resume and the job requirements, with match type, confidence, and verification status.\n\nHR recruiters and system administrators may use this API to review which skills were matched automatically, which need manual verification, and assess candidate fit. Filtering options allow narrowing results by skill, match type (required/preferred/missing etc.), or verification status.\n\nSecurity: Only authenticated HR recruiters and system administrators may use this endpoint to ensure privacy and protect sensitive evaluation information. Proper permission checks are enforced and access is logged for audit trail purposes.\n\nThis operation integrates the ats_recruitment_application_skill_matches Prisma table and includes all related fields as described in the schema. Business validation ensures the applicationId belongs to the current organization context.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application whose skill matches are requested.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter parameters for paginated skill match retrieval within the given application.","typeName":"IAtsRecruitmentApplicationSkillMatch.IRequest"},"responseBody":{"description":"Paginated list containing summary records for skill matches and matching metadata.","typeName":"IPageIAtsRecruitmentApplicationSkillMatch.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation retrieves detailed information for a specific skill match record associated with a particular application from the ats_recruitment_application_skill_matches table. Only authorized HR recruiters or system administrators may access this information to review detailed matching logic, confidence score, and verification notes for audit and business evaluation purposes.","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/skillMatches/{skillMatchId}","method":"get","summary":"Get detailed information on a specific skill match for an application from ats_recruitment_application_skill_matches.","description":"This API operation provides complete details for a single skill match record, as identified by skillMatchId, within the context of a given application. The skill match includes AI/NLP-derived similarity scores, manual verification, associated skill, and match type (required, missing, extra, etc). HR recruiters or system administrators can use this detail API to investigate specific skill mismatches, audit AI outcomes, or record basis for fit assessments.\n\nSecurity: Only authenticated HR recruiters and system administrators are authorized to access detailed skill match information, and all access events are recorded for compliance and audit.\n\nThis operation reads from the ats_recruitment_application_skill_matches table and strictly returns only the record matching both applicationId and skillMatchId. Validation ensures users may only view data in their organizational scope.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application being queried.","schema":{"type":"string","format":"uuid"}},{"name":"skillMatchId","description":"Unique identifier of the skill match record being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested skill match, including AI match, human verification, and metadata.","typeName":"IAtsRecruitmentApplicationSkillMatch"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at"},{"specification":"This operation retrieves detailed information for a specific skill match record associated with a particular application from the ats_recruitment_application_skill_matches table. Only authorized HR recruiters or system administrators may access this information to review detailed matching logic, confidence score, and verification notes for audit and business evaluation purposes.","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/skillMatches/{skillMatchId}","method":"get","summary":"Get detailed information on a specific skill match for an application from ats_recruitment_application_skill_matches.","description":"This API operation provides complete details for a single skill match record, as identified by skillMatchId, within the context of a given application. The skill match includes AI/NLP-derived similarity scores, manual verification, associated skill, and match type (required, missing, extra, etc). HR recruiters or system administrators can use this detail API to investigate specific skill mismatches, audit AI outcomes, or record basis for fit assessments.\n\nSecurity: Only authenticated HR recruiters and system administrators are authorized to access detailed skill match information, and all access events are recorded for compliance and audit.\n\nThis operation reads from the ats_recruitment_application_skill_matches table and strictly returns only the record matching both applicationId and skillMatchId. Validation ensures users may only view data in their organizational scope.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application being queried.","schema":{"type":"string","format":"uuid"}},{"name":"skillMatchId","description":"Unique identifier of the skill match record being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail of the requested skill match, including AI match, human verification, and metadata.","typeName":"IAtsRecruitmentApplicationSkillMatch"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation creates a new skill match record for a given application in the ats_recruitment_application_skill_matches table. It is used when a new skill matching result (either automated or manually verified) must be inserted, typically after resume analysis or HR review. Only authorized HR recruiters or system administrators may invoke this operation, and robust validation is performed on incoming data against business rules and current application state. On success, the new skill match is returned.","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/skillMatches","method":"post","summary":"Create a new skill match entry for a job application in ats_recruitment_application_skill_matches.","description":"This API operation enables the creation of a new skill match record for a specific application, linking a skill to the application and recording match type, AI score, and manual verification status. The record is used for analytics, automated matching results, or manual correction by HR. The payload must include a valid skill ID, match type, AI score (if provided), and manual verification status. The response returns the newly created skill match with all attributes for confirmation and downstream processing.\n\nAccess is restricted to HR recruiters and system administrators due to the sensitive nature of hiring evaluation data. All actions are audited and must conform to the workflow rules of the recruitment platform. Insertion is validated to prevent duplicate skill matches for the same application-skill pair.\n\nThis operation writes to the ats_recruitment_application_skill_matches Prisma model.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application for which the new skill match is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for the new skill match, including skill id, match type, AI score, and verification flags.","typeName":"IAtsRecruitmentApplicationSkillMatch.ICreate"},"responseBody":{"description":"The created skill match entity, including generated identifiers and all stored fields.","typeName":"IAtsRecruitmentApplicationSkillMatch"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"create"},{"specification":"This operation creates a new skill match record for a given application in the ats_recruitment_application_skill_matches table. It is used when a new skill matching result (either automated or manually verified) must be inserted, typically after resume analysis or HR review. Only authorized HR recruiters or system administrators may invoke this operation, and robust validation is performed on incoming data against business rules and current application state. On success, the new skill match is returned.","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/skillMatches","method":"post","summary":"Create a new skill match entry for a job application in ats_recruitment_application_skill_matches.","description":"This API operation enables the creation of a new skill match record for a specific application, linking a skill to the application and recording match type, AI score, and manual verification status. The record is used for analytics, automated matching results, or manual correction by HR. The payload must include a valid skill ID, match type, AI score (if provided), and manual verification status. The response returns the newly created skill match with all attributes for confirmation and downstream processing.\n\nAccess is restricted to HR recruiters and system administrators due to the sensitive nature of hiring evaluation data. All actions are audited and must conform to the workflow rules of the recruitment platform. Insertion is validated to prevent duplicate skill matches for the same application-skill pair.\n\nThis operation writes to the ats_recruitment_application_skill_matches Prisma model.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application for which the new skill match is being created.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for the new skill match, including skill id, match type, AI score, and verification flags.","typeName":"IAtsRecruitmentApplicationSkillMatch.ICreate"},"responseBody":{"description":"The created skill match entity, including generated identifiers and all stored fields.","typeName":"IAtsRecruitmentApplicationSkillMatch"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation updates an existing skill match record for a specific application in the ats_recruitment_application_skill_matches table. It is typically used by HR or administrators to manually override or confirm AI-based skill matching after review. This includes updating match type, verification status, or AI score. The endpoint enforces strict access control to only allow HR recruiters and system administrators, validates data integrity, and ensures a correct application-skill mapping. The updated entity is returned for front-end state management and business continuity.","path":"/atsRecruitment/hrRecruiter/applications/{applicationId}/skillMatches/{skillMatchId}","method":"put","summary":"Update a skill match record for a job application in ats_recruitment_application_skill_matches.","description":"This API operation allows authorized HR recruiters or system administrators to update the details of a skill match between an application and a skill. Updatable fields include match type, AI score, human/manual verification flags. This is essential in workflows where HR reviewers must confirm or override AI-detected skills, correct mismatches, or update validation status. The system enforces business rules such as unique application-skill mapping and appropriate audit logging.\n\nRequest validation ensures only the record identified by applicationId and skillMatchId is affected. All updates are logged for audit and compliance. The API only permits HR recruiters and system administrators with valid credentials to execute this operation.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application related to the skill match update.","schema":{"type":"string","format":"uuid"}},{"name":"skillMatchId","description":"Unique identifier of the skill match entry being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the skill match, such as match type, score, and verification status.","typeName":"IAtsRecruitmentApplicationSkillMatch.IUpdate"},"responseBody":{"description":"The updated skill match entity reflecting the values just applied.","typeName":"IAtsRecruitmentApplicationSkillMatch"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"update"},{"specification":"This operation updates an existing skill match record for a specific application in the ats_recruitment_application_skill_matches table. It is typically used by HR or administrators to manually override or confirm AI-based skill matching after review. This includes updating match type, verification status, or AI score. The endpoint enforces strict access control to only allow HR recruiters and system administrators, validates data integrity, and ensures a correct application-skill mapping. The updated entity is returned for front-end state management and business continuity.","path":"/atsRecruitment/systemAdmin/applications/{applicationId}/skillMatches/{skillMatchId}","method":"put","summary":"Update a skill match record for a job application in ats_recruitment_application_skill_matches.","description":"This API operation allows authorized HR recruiters or system administrators to update the details of a skill match between an application and a skill. Updatable fields include match type, AI score, human/manual verification flags. This is essential in workflows where HR reviewers must confirm or override AI-detected skills, correct mismatches, or update validation status. The system enforces business rules such as unique application-skill mapping and appropriate audit logging.\n\nRequest validation ensures only the record identified by applicationId and skillMatchId is affected. All updates are logged for audit and compliance. The API only permits HR recruiters and system administrators with valid credentials to execute this operation.","parameters":[{"name":"applicationId","description":"Unique identifier of the job application related to the skill match update.","schema":{"type":"string","format":"uuid"}},{"name":"skillMatchId","description":"Unique identifier of the skill match entry being updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the skill match, such as match type, score, and verification status.","typeName":"IAtsRecruitmentApplicationSkillMatch.IUpdate"},"responseBody":{"description":"The updated skill match entity reflecting the values just applied.","typeName":"IAtsRecruitmentApplicationSkillMatch"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation searches and retrieves a filtered, paginated list of resumes in the system. It operates on the ats_recruitment_resumes table, which stores applicant-uploaded resumes including parsed and structured information for searchability and matching. Advanced search criteria can filter resumes by owner, title, creation date, skills extracted, and key structured fields. Search supports pagination, optional keyword filtering, and sorting by fields such as creation date or parsed attributes. This is primarily used by HR recruiters and system admins to efficiently locate and analyze resumes for recruiting purposes.","description":"Retrieve a list of resumes currently registered in the recruitment system, applying advanced filtering criteria such as applicant identity, title, parsing results, creation date, or included skill sets. The operation supports pagination, allowing efficient browsing of large resume databases.\n\nHR recruiters can use this endpoint to narrow down resumes based on technical skill requirements, applicant names, or date of submission, and quickly identify candidates best suited for job postings. System administrators can also access this for compliance and audit purposes. Filters also allow for searching active vs. deleted (soft-deleted) resumes as needed.\n\nPermissions are restricted by user role: HR recruiters and system admins can access all resumes, while applicants may only view their own data (via a different endpoint). Search results support performance requirements for large datasets and are optimized for list UI presentation.","summary":"Search, filter, and page through all applicant resumes in the system (ats_recruitment_resumes table).","parameters":[],"requestBody":{"description":"Complex search/filter criteria, pagination, and sorting info for resumes.","typeName":"IAtsRecruitmentResume.IRequest"},"responseBody":{"description":"Paginated resume summaries matching the search criteria.","typeName":"IPageIAtsRecruitmentResume.ISummary"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"index","path":"/atsRecruitment/hrRecruiter/resumes","method":"patch"},{"specification":"This operation searches and retrieves a filtered, paginated list of resumes in the system. It operates on the ats_recruitment_resumes table, which stores applicant-uploaded resumes including parsed and structured information for searchability and matching. Advanced search criteria can filter resumes by owner, title, creation date, skills extracted, and key structured fields. Search supports pagination, optional keyword filtering, and sorting by fields such as creation date or parsed attributes. This is primarily used by HR recruiters and system admins to efficiently locate and analyze resumes for recruiting purposes.","description":"Retrieve a list of resumes currently registered in the recruitment system, applying advanced filtering criteria such as applicant identity, title, parsing results, creation date, or included skill sets. The operation supports pagination, allowing efficient browsing of large resume databases.\n\nHR recruiters can use this endpoint to narrow down resumes based on technical skill requirements, applicant names, or date of submission, and quickly identify candidates best suited for job postings. System administrators can also access this for compliance and audit purposes. Filters also allow for searching active vs. deleted (soft-deleted) resumes as needed.\n\nPermissions are restricted by user role: HR recruiters and system admins can access all resumes, while applicants may only view their own data (via a different endpoint). Search results support performance requirements for large datasets and are optimized for list UI presentation.","summary":"Search, filter, and page through all applicant resumes in the system (ats_recruitment_resumes table).","parameters":[],"requestBody":{"description":"Complex search/filter criteria, pagination, and sorting info for resumes.","typeName":"IAtsRecruitmentResume.IRequest"},"responseBody":{"description":"Paginated resume summaries matching the search criteria.","typeName":"IPageIAtsRecruitmentResume.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/atsRecruitment/systemAdmin/resumes","method":"patch"},{"specification":"This operation retrieves detailed information for a single applicant resume by ID. It operates on the ats_recruitment_resumes table, which stores both structured resume data and references to the original uploaded file. Returns all parsed/entered attributes (such as name, email, technical skills), metadata (creation, update timestamps, etc.), and any links to the associated applicant or parsed AI analyses. Used for reviewing or presenting the full resume record in detail screens.","description":"Retrieve complete structured data for an applicant's resume, including original parsing results (name, email, phone, education, experience), skills JSON, creation/update metadata, and relations to file storage. This operation enables detailed review and verification of the resume in recruiting workflows.\n\nThe operation checks that the requesting user (HR, admin) has permission to view the resume record, as resumes contain sensitive applicant data and are subject to privacy controls. Resumes may be visible in detail to HR and system admins for candidate evaluation, while applicants can only access their own records (handled by a separate endpoint, not this one).\n\nSensitive personal data is handled in compliance with privacy policies, and access is logged for security and audit purposes.","summary":"Get full detail of a single applicant resume by resume ID (ats_recruitment_resumes table).","parameters":[{"name":"resumeId","description":"ID of the resume to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed resume data as stored in the applicant resumes table.","typeName":"IAtsRecruitmentResume"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"at","path":"/atsRecruitment/hrRecruiter/resumes/{resumeId}","method":"get"},{"specification":"This operation retrieves detailed information for a single applicant resume by ID. It operates on the ats_recruitment_resumes table, which stores both structured resume data and references to the original uploaded file. Returns all parsed/entered attributes (such as name, email, technical skills), metadata (creation, update timestamps, etc.), and any links to the associated applicant or parsed AI analyses. Used for reviewing or presenting the full resume record in detail screens.","description":"Retrieve complete structured data for an applicant's resume, including original parsing results (name, email, phone, education, experience), skills JSON, creation/update metadata, and relations to file storage. This operation enables detailed review and verification of the resume in recruiting workflows.\n\nThe operation checks that the requesting user (HR, admin) has permission to view the resume record, as resumes contain sensitive applicant data and are subject to privacy controls. Resumes may be visible in detail to HR and system admins for candidate evaluation, while applicants can only access their own records (handled by a separate endpoint, not this one).\n\nSensitive personal data is handled in compliance with privacy policies, and access is logged for security and audit purposes.","summary":"Get full detail of a single applicant resume by resume ID (ats_recruitment_resumes table).","parameters":[{"name":"resumeId","description":"ID of the resume to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed resume data as stored in the applicant resumes table.","typeName":"IAtsRecruitmentResume"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/atsRecruitment/systemAdmin/resumes/{resumeId}","method":"get"},{"specification":"This operation registers a new applicant resume by accepting structured resume data and/or parsed fields. It creates a new entry in the ats_recruitment_resumes table, which is linked to the submitting applicant. The payload should include parsed data (fields such as name, email, phone, skills, etc.) and meta-info (title, upload date, file reference if available). This operation validates format, content, and ownership, storing extracted attributes for later searching and matching. On success, returns the newly created resume record.","description":"Register a new applicant resume, providing both basic meta-information (title, owner/applicant reference) and extracted/parsed structured fields such as name, email, phone, skills JSON, education summary, experience summary, and file reference (if available). The system validates that the applicant is authorized to submit a resume and that required fields are complete, robustly storing both the structured fields and links to file storage as necessary.\n\nThis operation is restricted to authenticated applicants, allowing them to register their own resume for future job applications or matching. De-duplication and replacement rules apply: an applicant cannot register multiple resumes with the same title, and re-uploads replace the existing record. Sensitive parsed data is handled according to privacy and compliance policies.","summary":"Register (create) a new applicant resume with parsed and meta-attributes (ats_recruitment_resumes table).","parameters":[],"requestBody":{"description":"Structured data for the new resume, including parsed fields and file references.","typeName":"IAtsRecruitmentResume.ICreate"},"responseBody":{"description":"Detail of the new resume record after creation.","typeName":"IAtsRecruitmentResume"},"authorizationRole":"applicant","authorizationType":null,"name":"create","path":"/atsRecruitment/applicant/resumes","method":"post"},{"specification":"This operation allows the owner applicant to update the content and parsed data of an existing resume. It is associated with the ats_recruitment_resumes table in the Prisma schema. The request includes fields such as resume title, parsed contact information, skills, and education/experience summary, enabling applicants to correct or enhance their structured resume information after initial upload or parsing. The operation validates user ownership and ensures that edits are aligned to only active, non-deleted resumes directly owned by the applicant. Soft deletion and update tracking are enforced for data compliance and auditability.","description":"This API endpoint enables an authenticated applicant to update their own resume's structured information, including contact, education, experience, and skills records. The endpoint corresponds to the ats_recruitment_resumes table. Applicants may need to update information if initial parsing was incomplete, or if their experience or skills have changed. \n\nOnly the applicant who owns the resume record may perform updates; others will be denied. All updates are tracked via updated_at timestamps and subject to audit trail logic. The backend checks that the resume is not soft-deleted. Attempts to update unknown or deleted resumes result in clear error messages, following ATS system error and data recovery policies, and business validation ensures all mandatory fields are present.\n\nFor critical data protection, sensitive fields such as parsed_email, parsed_mobile, and skills_json must be validated and sanitized before update, ensuring privacy compliance and structured data quality. Soft-delete and audit rules defined in the Prisma schema are always respected.","summary":"Update an existing applicant resume with revised structured content in ats_recruitment_resumes table.","parameters":[{"name":"resumeId","description":"Unique identifier of the resume to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Structured content and updates for the target resume","typeName":"IAtsRecruitmentResume.IUpdate"},"responseBody":{"description":"Resume entity after successful update","typeName":"IAtsRecruitmentResume"},"authorizationRoles":["applicant"],"name":"update","path":"/atsRecruitment/applicant/resumes/{resumeId}","method":"put","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation performs a soft-delete on a resume record in the ats_recruitment_resumes table, marking it as deleted for compliance and recovery. The resume is not physically removed but is hidden from normal query/view operations. The operation checks applicant ownership, the active status of the resume, and auditability for GDPR and business compliance.","description":"This API endpoint allows an authenticated applicant to perform a soft-deletion of their own resume from the system. The deletion action sets the deleted_at field, as defined in the ats_recruitment_resumes table, rather than removing the record from the database.\n\nOnly the applicant who owns the record can perform this operation. If the resume has already been deleted or does not exist, an appropriate error is returned. All deletions are tracked for compliance purposes; attempted access after deletion will result in a not found or forbidden error, as dictated by system security and privacy rules.\n\nThis operation supports post-deletion recovery (if allowed by policy) and is compatible with audit requirements for actions on sensitive user documents and personal data.","summary":"Soft-delete an applicant's resume via deleted_at in ats_recruitment_resumes table.","parameters":[{"name":"resumeId","description":"Unique identifier of the resume to delete (soft)","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["applicant"],"name":"erase","path":"/atsRecruitment/applicant/resumes/{resumeId}","method":"delete","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation allows an applicant to retrieve recent or full historical file upload events (including file names, upload timestamps, and meta) for a specific resume, as recorded in the ats_recruitment_resume_upload_histories table. It is intended for reviewing upload attempts, version history, forensic analysis, or compliance viewing. The request supports advanced filtering, sorting, and pagination over the upload event records.","description":"This endpoint provides authenticated applicants with visibility into their historical file upload attempts for a specific resume, as maintained in the ats_recruitment_resume_upload_histories table. Each record displays the file meta, timestamp, file size, and parsing summary at the time of upload.\n\nApplicants can use this information for version management, tracking replacements, or reviewing accidental upload events. Management and inspection of this audit trail helps resolve user support scenarios related to lost, overwritten, or corrupted files. Pagination and advanced filtering/sorting are supported to manage large upload histories. Only the owner applicant can access this history; all queries enforce strict permission checks to protect personal data.","summary":"Get file upload histories for a specific resume from ats_recruitment_resume_upload_histories table.","parameters":[{"name":"resumeId","description":"Unique identifier of the resume whose upload files history is being queried","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request parameters for upload history listing, supports advanced filters and pagination","typeName":"IAtsRecruitmentResumeUploadHistory.IRequest"},"responseBody":{"description":"Page of upload histories for the target resume","typeName":"IPageIAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["applicant"],"name":"index","path":"/atsRecruitment/applicant/resumes/{resumeId}/files","method":"patch","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation retrieves metadata about a specific uploaded resume file belonging to one of the applicant's resumes, as stored in the ats_recruitment_resume_files table. This includes file name, storage URI, extension, upload timestamp, and basic validation. Used for download links or investigating file attributes. Permission is enforced by both resume and file ownership by the requesting applicant.","description":"This API endpoint enables an authenticated applicant to view metadata details about a particular uploaded resume file associated with their resume. The record is returned from the ats_recruitment_resume_files table, including information such as file name, file extension, file size, upload timestamp, and storage URI.\n\nThis function is typically used when displaying document information on an applicant's dashboard, before allowing file downloads or integrity verification. Only the file's owner (the applicant who uploaded the resume) is permitted to access this information. Attempts to access files for resumes not belonging to the applicant, or where the referenced fileId does not tie back to the resumeId, result in a forbidden or not found error.\n\nSystem audit trails enforce compliance with data protection policies, and all access is logged for privacy and support analysis.","summary":"Get uploaded resume file metadata (for download/inspect) from ats_recruitment_resume_files table.","parameters":[{"name":"resumeId","description":"Identifier of the parent resume","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"Identifier of the resume file record to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed metadata for the uploaded resume file","typeName":"IAtsRecruitmentResumeFile"},"authorizationRoles":["applicant"],"name":"at","path":"/atsRecruitment/applicant/resumes/{resumeId}/files/{fileId}","method":"get","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation allows an applicant to upload a new or replacement resume file for an existing resume entity. The resume file entity ('ats_recruitment_resume_files') stores the original filename, storage URI, extension, file size, and upload timestamp. The ATS restricts file formats to PDF and DOCX, with a 10MB size limit, and only one file can be attached to a resume at a time. On successful upload, any previous file is replaced. The operation validates file properties and persists metadata for auditing, supporting retrieval and compliance requirements.","description":"This API operation allows applicants to upload a new or replacement file to their resume by targeting an existing resume record. The file must comply with policy constraints—only PDF and DOCX file types are accepted, files must not exceed 10MB, and each resume can have only one current file attached (replacing prior uploads).\n\nFor security and auditability, the operation records metadata including original filename, permanent object storage URI, extension, file size, and upload timestamp on the ats_recruitment_resume_files table. Upon uploading a new file, any existing file record for this resume is replaced according to the unique constraint on ats_recruitment_resume_files. Resume parsing, OCR/AI analysis, and applicant data extraction workflows may be triggered asynchronously after upload.\n\nAuthorization ensures that only the resume's owner (applicant) can upload files to their resume. Attempting to upload files with disallowed extensions or oversized files will yield validation errors. Upload actions are captured for compliance, and file metadata is available for subsequent resume parsing and analysis automation. Typical error handling includes guidance for unsupported format, over-size, or unexpected server errors.","summary":"Upload or replace a resume file for an existing applicant resume (ats_recruitment_resume_files).","parameters":[{"name":"resumeId","description":"The unique identifier of the resume to which the file will be attached or replaced.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Resume file metadata and storage details for upload (PDF/DOCX, max 10MB).","typeName":"IAtsRecruitmentResumeFile.ICreate"},"responseBody":{"description":"The uploaded resume file's metadata and storage URI information.","typeName":"IAtsRecruitmentResumeFile"},"authorizationType":null,"authorizationRole":"applicant","name":"create","path":"/atsRecruitment/applicant/resumes/{resumeId}/files","method":"post"},{"specification":"This operation updates the metadata for an existing uploaded resume file (ats_recruitment_resume_files) for a specific resume. Only the file's description-related non-file contents such as display name or labeling for improved search may be modified. Actual file replacement must be handled by upload/replacement operation.","description":"This API operation allows an applicant to update descriptive metadata about their previously uploaded resume file (such as display name, labeling, or additional tags used for auditing or internal search). It does not permit the actual binary file or object storage URI to be changed—file replacements are only possible via a dedicated upload/replace operation.\n\nUse cases include correcting display titles, marking tags for filtering, or providing comments on file use. Modifications are audited, and only the file's owner (the applicant) is authorized to perform updates. Operations attempting to alter immutable or storage-related fields will result in validation errors. All changes are tracked for compliance and data lineage requirements.","summary":"Update metadata for an uploaded resume file (ats_recruitment_resume_files).","parameters":[{"name":"resumeId","description":"The unique identifier of the resume record to which the file belongs.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"The unique identifier of the file record to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Metadata fields for updating descriptive properties of the resume file (not the binary file itself).","typeName":"IAtsRecruitmentResumeFile.IUpdate"},"responseBody":{"description":"The updated metadata of the resume file.","typeName":"IAtsRecruitmentResumeFile"},"authorizationType":null,"authorizationRole":"applicant","name":"update","path":"/atsRecruitment/applicant/resumes/{resumeId}/files/{fileId}","method":"put"},{"specification":"This operation allows an applicant to perform a soft-deletion of a specific resume file (ats_recruitment_resume_files) associated with their resume. The file is not permanently deleted from storage but is marked as deleted for audit and GDPR compliance. Only the file's owner may delete the file. Resume file deletions are critical for privacy and regulatory requirements.","description":"This API operation enables applicants to remove their uploaded resume files. Rather than hard-deleting the file from storage (which may violate audit/GDPR compliance), the operation sets the 'deleted_at' field to mark the file as deleted, allowing for recovery if needed and ensuring audit trail continuity.\n\nOnly the applicant who owns the resume and file may invoke this operation. Attempting to delete files for resumes not owned by the applicant is denied. Once deleted, the file is no longer accessible from resume-related queries, and the deletion action is recorded for audit purposes. Actual blob/object file removal may be conducted periodically in accordance with policy or compliance requirements. Error handling includes validation of existence, authorization, and conflict scenarios (such as already deleted files).","summary":"Soft-delete (logical remove) a resume file for a given applicant resume (ats_recruitment_resume_files).","parameters":[{"name":"resumeId","description":"The unique identifier of the resume record whose file is to be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"fileId","description":"The unique identifier of the resume file to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"applicant","name":"erase","path":"/atsRecruitment/applicant/resumes/{resumeId}/files/{fileId}","method":"delete"},{"specification":"This operation retrieves a paginated list of AI/automation analyses executed on a specific resume. The ats_recruitment_resume_ai_analyses table contains parse records and results for OCR, NLP/NER, AI tech stack extraction, and skill-matching performed on the applicant's uploaded resume. Used for reviewing extraction/parsing status, audit, and display of analysis artifacts for the applicant or HR user.","description":"This API operation allows retrieval of a filtered and paginated set of AI analysis and parsing results associated with a specific resume. Examples of recorded analysis jobs include initial OCR, named entity recognition, extracted skills, education, experience summaries, and AI-driven tech stack matching.\n\nApplicants and authorized HR users can use this API to view the current analysis state, check for failures, and obtain details about individual AI/automation jobs run on a resume. It supports advanced searching and pagination for efficient UX even in high-frequency re-analysis scenarios (such as repeated OCR or skill extraction attempts).\n\nAccess is restricted to the resume's owner (applicant) and authorized HR personnel. Error scenarios include non-existing resume references, authorization violations, or malformed query parameters. Each entry provides job status, results, meta information, and audit fields for debugging, compliance, or human verification.","summary":"Retrieve/paginate AI/automation analysis jobs for a particular applicant resume (ats_recruitment_resume_ai_analyses).","parameters":[{"name":"resumeId","description":"The unique identifier of the resume for which to retrieve AI analysis jobs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request body filter/sort/pagination criteria for listing resume AI analyses.","typeName":"IAtsRecruitmentResumeAiAnalysis.IRequest"},"responseBody":{"description":"Paginated list of AI/automation analysis records for the specified resume.","typeName":"IPageIAtsRecruitmentResumeAiAnalysis"},"authorizationType":null,"authorizationRole":"applicant","name":"index","path":"/atsRecruitment/applicant/resumes/{resumeId}/aiAnalyses","method":"patch"},{"specification":"This operation retrieves a paginated list of AI/automation analyses executed on a specific resume. The ats_recruitment_resume_ai_analyses table contains parse records and results for OCR, NLP/NER, AI tech stack extraction, and skill-matching performed on the applicant's uploaded resume. Used for reviewing extraction/parsing status, audit, and display of analysis artifacts for the applicant or HR user.","description":"This API operation allows retrieval of a filtered and paginated set of AI analysis and parsing results associated with a specific resume. Examples of recorded analysis jobs include initial OCR, named entity recognition, extracted skills, education, experience summaries, and AI-driven tech stack matching.\n\nApplicants and authorized HR users can use this API to view the current analysis state, check for failures, and obtain details about individual AI/automation jobs run on a resume. It supports advanced searching and pagination for efficient UX even in high-frequency re-analysis scenarios (such as repeated OCR or skill extraction attempts).\n\nAccess is restricted to the resume's owner (applicant) and authorized HR personnel. Error scenarios include non-existing resume references, authorization violations, or malformed query parameters. Each entry provides job status, results, meta information, and audit fields for debugging, compliance, or human verification.","summary":"Retrieve/paginate AI/automation analysis jobs for a particular applicant resume (ats_recruitment_resume_ai_analyses).","parameters":[{"name":"resumeId","description":"The unique identifier of the resume for which to retrieve AI analysis jobs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Request body filter/sort/pagination criteria for listing resume AI analyses.","typeName":"IAtsRecruitmentResumeAiAnalysis.IRequest"},"responseBody":{"description":"Paginated list of AI/automation analysis records for the specified resume.","typeName":"IPageIAtsRecruitmentResumeAiAnalysis"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index","path":"/atsRecruitment/hrRecruiter/resumes/{resumeId}/aiAnalyses","method":"patch"},{"specification":"This operation retrieves a specific AI analysis result associated with an applicant's resume. It operates on the ats_recruitment_resume_ai_analyses table, which maintains AI/NLP analysis, OCR, and skill extraction outputs for resumes. The operation allows users to access detailed AI parsing results, extracted skills and metadata, and audit information about the analysis process for compliance, review, or troubleshooting.\n\nThis API endpoint enforces RBAC: only the resume owner (applicant) or authorized HR/tech reviewer may access AI analysis data. The operation checks that the resumeId and aiAnalysisId are connected and not soft-deleted before returning details.\n\nRelated operations include listing all analyses for a resume, uploading resumes for (re)analysis, and updating resume details. Error handling includes access denial for unauthorized users or requests to non-existent or deleted records.","description":"Retrieve details of a single AI analysis result for a given resume. This endpoint provides the parsed AI/NLP processing information, including type, status, original and result payloads, and analytics confidence scores directly from the ats_recruitment_resume_ai_analyses schema. \n\nSecurity checks ensure the resumeId and aiAnalysisId are correctly related, attached to an accessible resume, and the analysis has not been soft-deleted. Only authorized applicants (owners), HR recruiters, or tech reviewers can invoke this operation, in accordance with access policies. \n\nBusiness logic validates the association between resume and analysis, returning all relevant information fields as stored. On error or unauthorized attempts, a 404 or 403 response is returned. This endpoint is frequently used with the operations for listing analyses on a resume or rerunning automated parsing workflows. \n\nResponse includes type, OCR/AI job metadata, request/result JSON, confidence score, status (pending, completed, failed), and timestamp fields for the requested analysis entry.","summary":"Get details of a specific resume AI analysis (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/applicant/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"get","parameters":[{"name":"resumeId","description":"Unique identifier of the resume being analyzed","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"UUID of the AI analysis record to retrieve for this resume","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed AI analysis record information for the resume, including all stored results and parsing/provenance details","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["applicant","hrRecruiter","techReviewer"],"name":"at","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation retrieves a specific AI analysis result associated with an applicant's resume. It operates on the ats_recruitment_resume_ai_analyses table, which maintains AI/NLP analysis, OCR, and skill extraction outputs for resumes. The operation allows users to access detailed AI parsing results, extracted skills and metadata, and audit information about the analysis process for compliance, review, or troubleshooting.\n\nThis API endpoint enforces RBAC: only the resume owner (applicant) or authorized HR/tech reviewer may access AI analysis data. The operation checks that the resumeId and aiAnalysisId are connected and not soft-deleted before returning details.\n\nRelated operations include listing all analyses for a resume, uploading resumes for (re)analysis, and updating resume details. Error handling includes access denial for unauthorized users or requests to non-existent or deleted records.","description":"Retrieve details of a single AI analysis result for a given resume. This endpoint provides the parsed AI/NLP processing information, including type, status, original and result payloads, and analytics confidence scores directly from the ats_recruitment_resume_ai_analyses schema. \n\nSecurity checks ensure the resumeId and aiAnalysisId are correctly related, attached to an accessible resume, and the analysis has not been soft-deleted. Only authorized applicants (owners), HR recruiters, or tech reviewers can invoke this operation, in accordance with access policies. \n\nBusiness logic validates the association between resume and analysis, returning all relevant information fields as stored. On error or unauthorized attempts, a 404 or 403 response is returned. This endpoint is frequently used with the operations for listing analyses on a resume or rerunning automated parsing workflows. \n\nResponse includes type, OCR/AI job metadata, request/result JSON, confidence score, status (pending, completed, failed), and timestamp fields for the requested analysis entry.","summary":"Get details of a specific resume AI analysis (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/hrRecruiter/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"get","parameters":[{"name":"resumeId","description":"Unique identifier of the resume being analyzed","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"UUID of the AI analysis record to retrieve for this resume","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed AI analysis record information for the resume, including all stored results and parsing/provenance details","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["applicant","hrRecruiter","techReviewer"],"name":"at","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a specific AI analysis result associated with an applicant's resume. It operates on the ats_recruitment_resume_ai_analyses table, which maintains AI/NLP analysis, OCR, and skill extraction outputs for resumes. The operation allows users to access detailed AI parsing results, extracted skills and metadata, and audit information about the analysis process for compliance, review, or troubleshooting.\n\nThis API endpoint enforces RBAC: only the resume owner (applicant) or authorized HR/tech reviewer may access AI analysis data. The operation checks that the resumeId and aiAnalysisId are connected and not soft-deleted before returning details.\n\nRelated operations include listing all analyses for a resume, uploading resumes for (re)analysis, and updating resume details. Error handling includes access denial for unauthorized users or requests to non-existent or deleted records.","description":"Retrieve details of a single AI analysis result for a given resume. This endpoint provides the parsed AI/NLP processing information, including type, status, original and result payloads, and analytics confidence scores directly from the ats_recruitment_resume_ai_analyses schema. \n\nSecurity checks ensure the resumeId and aiAnalysisId are correctly related, attached to an accessible resume, and the analysis has not been soft-deleted. Only authorized applicants (owners), HR recruiters, or tech reviewers can invoke this operation, in accordance with access policies. \n\nBusiness logic validates the association between resume and analysis, returning all relevant information fields as stored. On error or unauthorized attempts, a 404 or 403 response is returned. This endpoint is frequently used with the operations for listing analyses on a resume or rerunning automated parsing workflows. \n\nResponse includes type, OCR/AI job metadata, request/result JSON, confidence score, status (pending, completed, failed), and timestamp fields for the requested analysis entry.","summary":"Get details of a specific resume AI analysis (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/techReviewer/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"get","parameters":[{"name":"resumeId","description":"Unique identifier of the resume being analyzed","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"UUID of the AI analysis record to retrieve for this resume","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed AI analysis record information for the resume, including all stored results and parsing/provenance details","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["applicant","hrRecruiter","techReviewer"],"name":"at","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation triggers a new AI analysis process for a specified applicant resume by creating an entry in the ats_recruitment_resume_ai_analyses table. It supports both applicant-initiated (e.g., after a new upload) and HR/tech reviewer-initiated requests to analyze a resume with AI/ML/NLP, including OCR, skill extraction, or customized parsing. The created job is tracked for progress/status by downstream systems.\n\nThe operation requires validation that the authenticated actor has permission to analyze the given resume (owner or reviewer roles). On successful invocation, a new analysis job is registered as 'pending' and automatically picked up for execution based on system configuration.","description":"Initiate a new AI analysis for a resume. This endpoint allows the authenticated applicant (resume owner) or a privileged HR recruiter or technical reviewer to request a fresh AI/NLP/skill-extraction job for the provided resume. The data includes analysis_type (e.g., \"basic_ocr\", \"ai_skill_match\"), expected input metadata, and source tracking as defined in the ats_recruitment_resume_ai_analyses schema.\n\nUpon validation, the system creates a new analysis job record which is processed asynchronously. The endpoint ensures only authorized actors (owner HR/tech reviewer) can schedule new analyses. Typical use cases include re-running failed/older analyses, forcibly updating skills or contact parsing, or batch-processing resumes. Business rules govern maximum frequency and enforce audit logging.\n\nOn success, the response returns the detailed created job record, including status, type, and analysis metadata. Errors include unauthorized access or business rule violations (e.g., repeated requests too soon).","summary":"Create new AI/NLP analysis job for a resume (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/applicant/resumes/{resumeId}/aiAnalyses","method":"post","parameters":[{"name":"resumeId","description":"UUID of the target resume to analyze","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data specifying analysis type and initial options for launching an AI parsing job","typeName":"IAtsRecruitmentResumeAiAnalysis.ICreate"},"responseBody":{"description":"Full record for the newly queued AI analysis job","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["applicant","hrRecruiter","techReviewer"],"name":"create","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation triggers a new AI analysis process for a specified applicant resume by creating an entry in the ats_recruitment_resume_ai_analyses table. It supports both applicant-initiated (e.g., after a new upload) and HR/tech reviewer-initiated requests to analyze a resume with AI/ML/NLP, including OCR, skill extraction, or customized parsing. The created job is tracked for progress/status by downstream systems.\n\nThe operation requires validation that the authenticated actor has permission to analyze the given resume (owner or reviewer roles). On successful invocation, a new analysis job is registered as 'pending' and automatically picked up for execution based on system configuration.","description":"Initiate a new AI analysis for a resume. This endpoint allows the authenticated applicant (resume owner) or a privileged HR recruiter or technical reviewer to request a fresh AI/NLP/skill-extraction job for the provided resume. The data includes analysis_type (e.g., \"basic_ocr\", \"ai_skill_match\"), expected input metadata, and source tracking as defined in the ats_recruitment_resume_ai_analyses schema.\n\nUpon validation, the system creates a new analysis job record which is processed asynchronously. The endpoint ensures only authorized actors (owner HR/tech reviewer) can schedule new analyses. Typical use cases include re-running failed/older analyses, forcibly updating skills or contact parsing, or batch-processing resumes. Business rules govern maximum frequency and enforce audit logging.\n\nOn success, the response returns the detailed created job record, including status, type, and analysis metadata. Errors include unauthorized access or business rule violations (e.g., repeated requests too soon).","summary":"Create new AI/NLP analysis job for a resume (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/hrRecruiter/resumes/{resumeId}/aiAnalyses","method":"post","parameters":[{"name":"resumeId","description":"UUID of the target resume to analyze","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data specifying analysis type and initial options for launching an AI parsing job","typeName":"IAtsRecruitmentResumeAiAnalysis.ICreate"},"responseBody":{"description":"Full record for the newly queued AI analysis job","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["applicant","hrRecruiter","techReviewer"],"name":"create","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation triggers a new AI analysis process for a specified applicant resume by creating an entry in the ats_recruitment_resume_ai_analyses table. It supports both applicant-initiated (e.g., after a new upload) and HR/tech reviewer-initiated requests to analyze a resume with AI/ML/NLP, including OCR, skill extraction, or customized parsing. The created job is tracked for progress/status by downstream systems.\n\nThe operation requires validation that the authenticated actor has permission to analyze the given resume (owner or reviewer roles). On successful invocation, a new analysis job is registered as 'pending' and automatically picked up for execution based on system configuration.","description":"Initiate a new AI analysis for a resume. This endpoint allows the authenticated applicant (resume owner) or a privileged HR recruiter or technical reviewer to request a fresh AI/NLP/skill-extraction job for the provided resume. The data includes analysis_type (e.g., \"basic_ocr\", \"ai_skill_match\"), expected input metadata, and source tracking as defined in the ats_recruitment_resume_ai_analyses schema.\n\nUpon validation, the system creates a new analysis job record which is processed asynchronously. The endpoint ensures only authorized actors (owner HR/tech reviewer) can schedule new analyses. Typical use cases include re-running failed/older analyses, forcibly updating skills or contact parsing, or batch-processing resumes. Business rules govern maximum frequency and enforce audit logging.\n\nOn success, the response returns the detailed created job record, including status, type, and analysis metadata. Errors include unauthorized access or business rule violations (e.g., repeated requests too soon).","summary":"Create new AI/NLP analysis job for a resume (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/techReviewer/resumes/{resumeId}/aiAnalyses","method":"post","parameters":[{"name":"resumeId","description":"UUID of the target resume to analyze","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data specifying analysis type and initial options for launching an AI parsing job","typeName":"IAtsRecruitmentResumeAiAnalysis.ICreate"},"responseBody":{"description":"Full record for the newly queued AI analysis job","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["applicant","hrRecruiter","techReviewer"],"name":"create","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation updates an existing AI analysis record for a resume, as stored in ats_recruitment_resume_ai_analyses. Permitted fields for update may include user-supplied notes, manual status overrides or certain metadata, depending on the business rules and system policy. Most fields, such as analysis_type, job input, or result, are written by the system/AI pipeline and not directly user-editable after creation, to maintain audit integrity.\n\nThe operation requires proper authorization and checks for soft deletion before allowing updates.","description":"Update (patch) limited fields of an existing AI analysis result for a resume. Only authorized HR recruiters or tech reviewers can perform this operation, and only on analyses that are not already finalized or soft-deleted.\n\nEditable fields may include reviewer notes or status corrections, but not the main input/output AI analysis fields. Business logic strictly controls update permissions and logs every change for compliance audit. Attempting to modify non-editable fields or analyses linked to deleted resumes will result in error.\n\nThe response returns the updated AI analysis record, showing only the allowed modifications and current persisted values.","summary":"Update a resume AI analysis record (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/hrRecruiter/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"put","parameters":[{"name":"resumeId","description":"UUID of the resume containing the analysis to update","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"ID of the specific AI analysis entry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Values to patch for the targeted AI analysis record; only permitted fields are accepted","typeName":"IAtsRecruitmentResumeAiAnalysis.IUpdate"},"responseBody":{"description":"Updated AI analysis record after permitted field patching","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"update","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation updates an existing AI analysis record for a resume, as stored in ats_recruitment_resume_ai_analyses. Permitted fields for update may include user-supplied notes, manual status overrides or certain metadata, depending on the business rules and system policy. Most fields, such as analysis_type, job input, or result, are written by the system/AI pipeline and not directly user-editable after creation, to maintain audit integrity.\n\nThe operation requires proper authorization and checks for soft deletion before allowing updates.","description":"Update (patch) limited fields of an existing AI analysis result for a resume. Only authorized HR recruiters or tech reviewers can perform this operation, and only on analyses that are not already finalized or soft-deleted.\n\nEditable fields may include reviewer notes or status corrections, but not the main input/output AI analysis fields. Business logic strictly controls update permissions and logs every change for compliance audit. Attempting to modify non-editable fields or analyses linked to deleted resumes will result in error.\n\nThe response returns the updated AI analysis record, showing only the allowed modifications and current persisted values.","summary":"Update a resume AI analysis record (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/techReviewer/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"put","parameters":[{"name":"resumeId","description":"UUID of the resume containing the analysis to update","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"ID of the specific AI analysis entry to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Values to patch for the targeted AI analysis record; only permitted fields are accepted","typeName":"IAtsRecruitmentResumeAiAnalysis.IUpdate"},"responseBody":{"description":"Updated AI analysis record after permitted field patching","typeName":"IAtsRecruitmentResumeAiAnalysis"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"update","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation permanently erases (hard deletes) an AI analysis entry from the ats_recruitment_resume_ai_analyses table, provided that it is not already soft-deleted or required for audit. The operation validates the association between the AI analysis and its parent resume and blocks deletion if the entry is in use or under compliance hold. Only privileged roles (HR recruiter or tech reviewer) may invoke hard deletion, in line with audit policies.","description":"Permanently remove a specific AI analysis record linked to a resume. The operation targets the ats_recruitment_resume_ai_analyses table, deleting the specified analysis (by aiAnalysisId) if it is associated with the provided resumeId and not currently under audit lock or soft-deleted. \n\nThis endpoint can only be performed by authorized HR recruiters or tech reviewers and may require additional business rule checks on compliance, audit retention, or process state. If the delete is blocked due to policy, a descriptive error is returned.\n\nRelated non-delete operations include analysis retrieval, creation, and update as part of resume/AI pipeline management.","summary":"Permanently delete a resume AI analysis record (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/hrRecruiter/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"delete","parameters":[{"name":"resumeId","description":"UUID of the parent resume for which to erase the AI analysis record","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"ID of the resume AI analysis record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer"],"name":"erase","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation permanently erases (hard deletes) an AI analysis entry from the ats_recruitment_resume_ai_analyses table, provided that it is not already soft-deleted or required for audit. The operation validates the association between the AI analysis and its parent resume and blocks deletion if the entry is in use or under compliance hold. Only privileged roles (HR recruiter or tech reviewer) may invoke hard deletion, in line with audit policies.","description":"Permanently remove a specific AI analysis record linked to a resume. The operation targets the ats_recruitment_resume_ai_analyses table, deleting the specified analysis (by aiAnalysisId) if it is associated with the provided resumeId and not currently under audit lock or soft-deleted. \n\nThis endpoint can only be performed by authorized HR recruiters or tech reviewers and may require additional business rule checks on compliance, audit retention, or process state. If the delete is blocked due to policy, a descriptive error is returned.\n\nRelated non-delete operations include analysis retrieval, creation, and update as part of resume/AI pipeline management.","summary":"Permanently delete a resume AI analysis record (ats_recruitment_resume_ai_analyses)","path":"/atsRecruitment/techReviewer/resumes/{resumeId}/aiAnalyses/{aiAnalysisId}","method":"delete","parameters":[{"name":"resumeId","description":"UUID of the parent resume for which to erase the AI analysis record","schema":{"type":"string","format":"uuid"}},{"name":"aiAnalysisId","description":"ID of the resume AI analysis record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer"],"name":"erase","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of all resume upload histories from the ats_recruitment_resume_upload_histories table. It allows HR, system admins, and applicants (for their own history) to search for upload events, review metadata (file name, size, upload timestamp), and understand the provenance of resume file changes. Primarily used for compliance, traceability, and support. Schema enforced by indexing on applicant ID, upload date, and file attributes. Supports advanced searching and filtering for large-scale forensics.","path":"/atsRecruitment/hrRecruiter/resumeUploadHistories","method":"patch","summary":"Search and retrieve a paginated list of resume upload histories in the ATS system","description":"Retrieve a paginated, filterable list of resume upload histories from the ats_recruitment_resume_upload_histories table. This endpoint is used by HR recruiters and system administrators to audit all uploads and modifications to applicant resume files. It is also accessible to applicants for reviewing their own upload records.\n\nThe operation leverages indices on applicant ID, upload_timestamp, and file metadata for fast access and supports advanced search (by date range, applicant email/name, file extension, file size, IP address, etc). This is critical for uncovering compliance anomalies, supporting GDPR requests to trace file usage, and for forensic history during disputes or security audits.\n\nSensitive information such as applicant details must be filtered based on caller's authorization. Only system admins can retrieve all histories, while HR recruiters are restricted to job-related applicants, and applicants may only see their own uploads. The operation provides upload provenance, enables tracking multiple upload/replacement cycles, and ensures robust file history retention. Large result sets are paginated to support compliance-scale reporting.","parameters":[],"requestBody":{"description":"Search and pagination parameters for resume upload history retrieval","typeName":"IAtsRecruitmentResumeUploadHistory.IRequest"},"responseBody":{"description":"Paginated list of resume upload history records matching search criteria","typeName":"IPageIAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["hrRecruiter","systemAdmin","applicant"],"name":"index","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of all resume upload histories from the ats_recruitment_resume_upload_histories table. It allows HR, system admins, and applicants (for their own history) to search for upload events, review metadata (file name, size, upload timestamp), and understand the provenance of resume file changes. Primarily used for compliance, traceability, and support. Schema enforced by indexing on applicant ID, upload date, and file attributes. Supports advanced searching and filtering for large-scale forensics.","path":"/atsRecruitment/systemAdmin/resumeUploadHistories","method":"patch","summary":"Search and retrieve a paginated list of resume upload histories in the ATS system","description":"Retrieve a paginated, filterable list of resume upload histories from the ats_recruitment_resume_upload_histories table. This endpoint is used by HR recruiters and system administrators to audit all uploads and modifications to applicant resume files. It is also accessible to applicants for reviewing their own upload records.\n\nThe operation leverages indices on applicant ID, upload_timestamp, and file metadata for fast access and supports advanced search (by date range, applicant email/name, file extension, file size, IP address, etc). This is critical for uncovering compliance anomalies, supporting GDPR requests to trace file usage, and for forensic history during disputes or security audits.\n\nSensitive information such as applicant details must be filtered based on caller's authorization. Only system admins can retrieve all histories, while HR recruiters are restricted to job-related applicants, and applicants may only see their own uploads. The operation provides upload provenance, enables tracking multiple upload/replacement cycles, and ensures robust file history retention. Large result sets are paginated to support compliance-scale reporting.","parameters":[],"requestBody":{"description":"Search and pagination parameters for resume upload history retrieval","typeName":"IAtsRecruitmentResumeUploadHistory.IRequest"},"responseBody":{"description":"Paginated list of resume upload history records matching search criteria","typeName":"IPageIAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["hrRecruiter","systemAdmin","applicant"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated and filterable list of all resume upload histories from the ats_recruitment_resume_upload_histories table. It allows HR, system admins, and applicants (for their own history) to search for upload events, review metadata (file name, size, upload timestamp), and understand the provenance of resume file changes. Primarily used for compliance, traceability, and support. Schema enforced by indexing on applicant ID, upload date, and file attributes. Supports advanced searching and filtering for large-scale forensics.","path":"/atsRecruitment/applicant/resumeUploadHistories","method":"patch","summary":"Search and retrieve a paginated list of resume upload histories in the ATS system","description":"Retrieve a paginated, filterable list of resume upload histories from the ats_recruitment_resume_upload_histories table. This endpoint is used by HR recruiters and system administrators to audit all uploads and modifications to applicant resume files. It is also accessible to applicants for reviewing their own upload records.\n\nThe operation leverages indices on applicant ID, upload_timestamp, and file metadata for fast access and supports advanced search (by date range, applicant email/name, file extension, file size, IP address, etc). This is critical for uncovering compliance anomalies, supporting GDPR requests to trace file usage, and for forensic history during disputes or security audits.\n\nSensitive information such as applicant details must be filtered based on caller's authorization. Only system admins can retrieve all histories, while HR recruiters are restricted to job-related applicants, and applicants may only see their own uploads. The operation provides upload provenance, enables tracking multiple upload/replacement cycles, and ensures robust file history retention. Large result sets are paginated to support compliance-scale reporting.","parameters":[],"requestBody":{"description":"Search and pagination parameters for resume upload history retrieval","typeName":"IAtsRecruitmentResumeUploadHistory.IRequest"},"responseBody":{"description":"Paginated list of resume upload history records matching search criteria","typeName":"IPageIAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["hrRecruiter","systemAdmin","applicant"],"name":"index","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific resume upload history record identified by uploadHistoryId, from ats_recruitment_resume_upload_histories. It provides full audit metadata, including file name, size, upload timestamp, upload IP, source, and parse snapshot. Only the associated applicant, admins, or HR recruiters for the job can view the detail. Intended for compliance, forensic inquiry, and user transparency. Follows secure access patterns distinguishing roles in the ATS system.","path":"/atsRecruitment/hrRecruiter/resumeUploadHistories/{uploadHistoryId}","method":"get","summary":"Retrieve detailed information for a specific resume upload history record","description":"Fetches the full details for a given resume upload history (ats_recruitment_resume_upload_histories) by its unique ID. Returns immutable forensic data including who uploaded, file name and size, IP address at upload time, and (when available) a snapshot of the parsed resume JSON at that point. This endpoint is used for compliance review, error tracing, and for applicant/user download history verification.\n\nAuthorization is enforced so that only the owner (applicant), admin, or HR associated with the respective application can retrieve the record. All trace and snapshot fields are delivered as stored, but sensitive details (resume_json_snapshot) may be restricted for non-owners. System audit records are not directly deletable by end users; they form part of organizational compliance and legal audit capabilities.\n\nRelated operations include list (index) and applicant self-service download. Error handling distinguishes between not found, permission denied, and corrupted/deleted record cases.","parameters":[{"name":"uploadHistoryId","description":"Unique identifier for the specific resume upload history record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete record of resume upload history with metadata and parse snapshot","typeName":"IAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["hrRecruiter","systemAdmin","applicant"],"name":"at","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific resume upload history record identified by uploadHistoryId, from ats_recruitment_resume_upload_histories. It provides full audit metadata, including file name, size, upload timestamp, upload IP, source, and parse snapshot. Only the associated applicant, admins, or HR recruiters for the job can view the detail. Intended for compliance, forensic inquiry, and user transparency. Follows secure access patterns distinguishing roles in the ATS system.","path":"/atsRecruitment/systemAdmin/resumeUploadHistories/{uploadHistoryId}","method":"get","summary":"Retrieve detailed information for a specific resume upload history record","description":"Fetches the full details for a given resume upload history (ats_recruitment_resume_upload_histories) by its unique ID. Returns immutable forensic data including who uploaded, file name and size, IP address at upload time, and (when available) a snapshot of the parsed resume JSON at that point. This endpoint is used for compliance review, error tracing, and for applicant/user download history verification.\n\nAuthorization is enforced so that only the owner (applicant), admin, or HR associated with the respective application can retrieve the record. All trace and snapshot fields are delivered as stored, but sensitive details (resume_json_snapshot) may be restricted for non-owners. System audit records are not directly deletable by end users; they form part of organizational compliance and legal audit capabilities.\n\nRelated operations include list (index) and applicant self-service download. Error handling distinguishes between not found, permission denied, and corrupted/deleted record cases.","parameters":[{"name":"uploadHistoryId","description":"Unique identifier for the specific resume upload history record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete record of resume upload history with metadata and parse snapshot","typeName":"IAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["hrRecruiter","systemAdmin","applicant"],"name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific resume upload history record identified by uploadHistoryId, from ats_recruitment_resume_upload_histories. It provides full audit metadata, including file name, size, upload timestamp, upload IP, source, and parse snapshot. Only the associated applicant, admins, or HR recruiters for the job can view the detail. Intended for compliance, forensic inquiry, and user transparency. Follows secure access patterns distinguishing roles in the ATS system.","path":"/atsRecruitment/applicant/resumeUploadHistories/{uploadHistoryId}","method":"get","summary":"Retrieve detailed information for a specific resume upload history record","description":"Fetches the full details for a given resume upload history (ats_recruitment_resume_upload_histories) by its unique ID. Returns immutable forensic data including who uploaded, file name and size, IP address at upload time, and (when available) a snapshot of the parsed resume JSON at that point. This endpoint is used for compliance review, error tracing, and for applicant/user download history verification.\n\nAuthorization is enforced so that only the owner (applicant), admin, or HR associated with the respective application can retrieve the record. All trace and snapshot fields are delivered as stored, but sensitive details (resume_json_snapshot) may be restricted for non-owners. System audit records are not directly deletable by end users; they form part of organizational compliance and legal audit capabilities.\n\nRelated operations include list (index) and applicant self-service download. Error handling distinguishes between not found, permission denied, and corrupted/deleted record cases.","parameters":[{"name":"uploadHistoryId","description":"Unique identifier for the specific resume upload history record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete record of resume upload history with metadata and parse snapshot","typeName":"IAtsRecruitmentResumeUploadHistory"},"authorizationRoles":["hrRecruiter","systemAdmin","applicant"],"name":"at","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation provides an indexed, paginated list of coding test assignments within the ATS, based on the ats_recruitment_coding_tests table. It is designed for HR recruiters, tech reviewers, and system administrators to monitor, filter, and search for coding test events by status, scheduled date, applicant/job criteria, provider (internal/external), and more. Supports complex queries, result pagination, and advanced sorting for operational monitoring, analytics, and compliance.","path":"/atsRecruitment/hrRecruiter/codingTests","method":"patch","summary":"Search and retrieve a filtered, paginated list of coding test assignments and progress","description":"Retrieves a paginated collection of coding test assigments from ats_recruitment_coding_tests, supporting advanced filter criteria such as applicant, job posting, status (scheduled, in progress, completed, failed), delivery channel (internal or 3rd-party), scheduled/delivery dates, and provider-specific IDs. It is primarily used by HR and technical reviewers to monitor applicant assessment pipeline progress and by system admins for compliance oversight.\n\nIntegration with related tables (applications, applicants, submission/results/feedback) enables rich operational dashboarding, while indices on status, applicant, and provider allow for efficient processing even with a high volume of tests.\n\nAuthorization distinguishes that HR recruiters can only see tests related to their postings, tech reviewers are limited to their assignments, and system admins may see all entries. Each record may summarize the test state, links to test or review, and primary metadata needed for next action. Large datasets are returned in a paginated form.","parameters":[],"requestBody":{"description":"Complex filtering parameters and pagination controls for coding test search","typeName":"IAtsRecruitmentCodingTest.IRequest"},"responseBody":{"description":"Paginated set of coding test assignment records with basic metadata","typeName":"IPageIAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"index","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation provides an indexed, paginated list of coding test assignments within the ATS, based on the ats_recruitment_coding_tests table. It is designed for HR recruiters, tech reviewers, and system administrators to monitor, filter, and search for coding test events by status, scheduled date, applicant/job criteria, provider (internal/external), and more. Supports complex queries, result pagination, and advanced sorting for operational monitoring, analytics, and compliance.","path":"/atsRecruitment/techReviewer/codingTests","method":"patch","summary":"Search and retrieve a filtered, paginated list of coding test assignments and progress","description":"Retrieves a paginated collection of coding test assigments from ats_recruitment_coding_tests, supporting advanced filter criteria such as applicant, job posting, status (scheduled, in progress, completed, failed), delivery channel (internal or 3rd-party), scheduled/delivery dates, and provider-specific IDs. It is primarily used by HR and technical reviewers to monitor applicant assessment pipeline progress and by system admins for compliance oversight.\n\nIntegration with related tables (applications, applicants, submission/results/feedback) enables rich operational dashboarding, while indices on status, applicant, and provider allow for efficient processing even with a high volume of tests.\n\nAuthorization distinguishes that HR recruiters can only see tests related to their postings, tech reviewers are limited to their assignments, and system admins may see all entries. Each record may summarize the test state, links to test or review, and primary metadata needed for next action. Large datasets are returned in a paginated form.","parameters":[],"requestBody":{"description":"Complex filtering parameters and pagination controls for coding test search","typeName":"IAtsRecruitmentCodingTest.IRequest"},"responseBody":{"description":"Paginated set of coding test assignment records with basic metadata","typeName":"IPageIAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"index","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation provides an indexed, paginated list of coding test assignments within the ATS, based on the ats_recruitment_coding_tests table. It is designed for HR recruiters, tech reviewers, and system administrators to monitor, filter, and search for coding test events by status, scheduled date, applicant/job criteria, provider (internal/external), and more. Supports complex queries, result pagination, and advanced sorting for operational monitoring, analytics, and compliance.","path":"/atsRecruitment/systemAdmin/codingTests","method":"patch","summary":"Search and retrieve a filtered, paginated list of coding test assignments and progress","description":"Retrieves a paginated collection of coding test assigments from ats_recruitment_coding_tests, supporting advanced filter criteria such as applicant, job posting, status (scheduled, in progress, completed, failed), delivery channel (internal or 3rd-party), scheduled/delivery dates, and provider-specific IDs. It is primarily used by HR and technical reviewers to monitor applicant assessment pipeline progress and by system admins for compliance oversight.\n\nIntegration with related tables (applications, applicants, submission/results/feedback) enables rich operational dashboarding, while indices on status, applicant, and provider allow for efficient processing even with a high volume of tests.\n\nAuthorization distinguishes that HR recruiters can only see tests related to their postings, tech reviewers are limited to their assignments, and system admins may see all entries. Each record may summarize the test state, links to test or review, and primary metadata needed for next action. Large datasets are returned in a paginated form.","parameters":[],"requestBody":{"description":"Complex filtering parameters and pagination controls for coding test search","typeName":"IAtsRecruitmentCodingTest.IRequest"},"responseBody":{"description":"Paginated set of coding test assignment records with basic metadata","typeName":"IPageIAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a detailed record for a specific coding test assignment from the ats_recruitment_coding_tests table, based on codingTestId. Returns full information on assignment, scheduling, provider data, status, applicant, and linked relations. Access is restricted by role: only the assigning HR, associated tech reviewers, the applicant, or a system administrator may access the record. Used for monitoring, compliance, and operational support.","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}","method":"get","summary":"Retrieve detailed information about a specific coding test assignment in ATS","description":"Returns all details for a specific coding test record from ats_recruitment_coding_tests, referenced by codingTestId. This includes scheduling, delivery status, applicant and HR references, external provider linkage, expiration dates, and all current state and tracking fields. Used by HR and tech reviewers to monitor assignment progress and investigate applicant issues.\n\nAuthorization ensures HR can only see assignments for their postings, tech reviewers see only their assignments, system admins have full access, and applicants can view their own assignments. Sensitive provider integration details may be masked except for system admins.\n\nRelated operations include indexing (list view), and submission/feedback tracking endpoints. Error handling surfaces not found, access violation, or data corruption cases specifically.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test assignment to be retrieved","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete information about the coding test assignment and its linked metadata","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a detailed record for a specific coding test assignment from the ats_recruitment_coding_tests table, based on codingTestId. Returns full information on assignment, scheduling, provider data, status, applicant, and linked relations. Access is restricted by role: only the assigning HR, associated tech reviewers, the applicant, or a system administrator may access the record. Used for monitoring, compliance, and operational support.","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}","method":"get","summary":"Retrieve detailed information about a specific coding test assignment in ATS","description":"Returns all details for a specific coding test record from ats_recruitment_coding_tests, referenced by codingTestId. This includes scheduling, delivery status, applicant and HR references, external provider linkage, expiration dates, and all current state and tracking fields. Used by HR and tech reviewers to monitor assignment progress and investigate applicant issues.\n\nAuthorization ensures HR can only see assignments for their postings, tech reviewers see only their assignments, system admins have full access, and applicants can view their own assignments. Sensitive provider integration details may be masked except for system admins.\n\nRelated operations include indexing (list view), and submission/feedback tracking endpoints. Error handling surfaces not found, access violation, or data corruption cases specifically.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test assignment to be retrieved","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete information about the coding test assignment and its linked metadata","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a detailed record for a specific coding test assignment from the ats_recruitment_coding_tests table, based on codingTestId. Returns full information on assignment, scheduling, provider data, status, applicant, and linked relations. Access is restricted by role: only the assigning HR, associated tech reviewers, the applicant, or a system administrator may access the record. Used for monitoring, compliance, and operational support.","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}","method":"get","summary":"Retrieve detailed information about a specific coding test assignment in ATS","description":"Returns all details for a specific coding test record from ats_recruitment_coding_tests, referenced by codingTestId. This includes scheduling, delivery status, applicant and HR references, external provider linkage, expiration dates, and all current state and tracking fields. Used by HR and tech reviewers to monitor assignment progress and investigate applicant issues.\n\nAuthorization ensures HR can only see assignments for their postings, tech reviewers see only their assignments, system admins have full access, and applicants can view their own assignments. Sensitive provider integration details may be masked except for system admins.\n\nRelated operations include indexing (list view), and submission/feedback tracking endpoints. Error handling surfaces not found, access violation, or data corruption cases specifically.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test assignment to be retrieved","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete information about the coding test assignment and its linked metadata","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a detailed record for a specific coding test assignment from the ats_recruitment_coding_tests table, based on codingTestId. Returns full information on assignment, scheduling, provider data, status, applicant, and linked relations. Access is restricted by role: only the assigning HR, associated tech reviewers, the applicant, or a system administrator may access the record. Used for monitoring, compliance, and operational support.","path":"/atsRecruitment/applicant/codingTests/{codingTestId}","method":"get","summary":"Retrieve detailed information about a specific coding test assignment in ATS","description":"Returns all details for a specific coding test record from ats_recruitment_coding_tests, referenced by codingTestId. This includes scheduling, delivery status, applicant and HR references, external provider linkage, expiration dates, and all current state and tracking fields. Used by HR and tech reviewers to monitor assignment progress and investigate applicant issues.\n\nAuthorization ensures HR can only see assignments for their postings, tech reviewers see only their assignments, system admins have full access, and applicants can view their own assignments. Sensitive provider integration details may be masked except for system admins.\n\nRelated operations include indexing (list view), and submission/feedback tracking endpoints. Error handling surfaces not found, access violation, or data corruption cases specifically.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test assignment to be retrieved","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete information about the coding test assignment and its linked metadata","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","authorizationRole":"applicant","authorizationType":null},{"specification":"Creates a new coding test assignment for an application in the ATS system. This operation targets the ats_recruitment_coding_tests Prisma table and allows an HR recruiter to assign a coding test to a specific applicant for a given job application. The coding test may be provided via an internal or external provider, and includes scheduling, delivery, expiration (deadline), and linkage to applicant, application, and recruiter. The creation of the coding test will be logged for audit purposes, and the corresponding coding test status will be initialized based on the provider and recruitment workflow stage.","path":"/atsRecruitment/hrRecruiter/codingTests","method":"post","description":"This operation enables HR recruiters to create (assign) a new coding test for a specific applicant, linked to a job application. The coding test record tracks the application, applicant, HR recruiter who assigned the test, the test provider (internal platform or an external provider such as Programmers or CodeSignal), the provider's reference ID or URL, the scheduled and deadline times, and the initial status.\n\nThe coding test creation may trigger notifications to the applicant, as well as setup of external service communication if using third-party platforms, with proper callbacks enabled. All details of the test, such as provider, test URL, delivery, and status, are maintained for later review and audit. Scheduling rules, such as not allowing duplicate assignments for the same application and applicant, are enforced as per business logic.\n\nThe operation will return the full created coding test record including IDs, provider, scheduling, and linkage fields. Authorization is required: only HR recruiters or system administrators may perform this operation. Errors may occur if referenced application or applicant does not exist, or if business rules (e.g., duplicate test assignments or invalid schedule) are violated.","summary":"Creates a coding test assignment for an application (ats_recruitment_coding_tests table).","parameters":[],"requestBody":{"description":"Information required to create a coding test assignment for an application, including links to application, applicant, HR recruiter, test provider, scheduling details, and test meta.","typeName":"IAtsRecruitmentCodingTest.ICreate"},"responseBody":{"description":"Created coding test assignment with all provider, scheduling, and audit fields.","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"create","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Creates a new coding test assignment for an application in the ATS system. This operation targets the ats_recruitment_coding_tests Prisma table and allows an HR recruiter to assign a coding test to a specific applicant for a given job application. The coding test may be provided via an internal or external provider, and includes scheduling, delivery, expiration (deadline), and linkage to applicant, application, and recruiter. The creation of the coding test will be logged for audit purposes, and the corresponding coding test status will be initialized based on the provider and recruitment workflow stage.","path":"/atsRecruitment/systemAdmin/codingTests","method":"post","description":"This operation enables HR recruiters to create (assign) a new coding test for a specific applicant, linked to a job application. The coding test record tracks the application, applicant, HR recruiter who assigned the test, the test provider (internal platform or an external provider such as Programmers or CodeSignal), the provider's reference ID or URL, the scheduled and deadline times, and the initial status.\n\nThe coding test creation may trigger notifications to the applicant, as well as setup of external service communication if using third-party platforms, with proper callbacks enabled. All details of the test, such as provider, test URL, delivery, and status, are maintained for later review and audit. Scheduling rules, such as not allowing duplicate assignments for the same application and applicant, are enforced as per business logic.\n\nThe operation will return the full created coding test record including IDs, provider, scheduling, and linkage fields. Authorization is required: only HR recruiters or system administrators may perform this operation. Errors may occur if referenced application or applicant does not exist, or if business rules (e.g., duplicate test assignments or invalid schedule) are violated.","summary":"Creates a coding test assignment for an application (ats_recruitment_coding_tests table).","parameters":[],"requestBody":{"description":"Information required to create a coding test assignment for an application, including links to application, applicant, HR recruiter, test provider, scheduling details, and test meta.","typeName":"IAtsRecruitmentCodingTest.ICreate"},"responseBody":{"description":"Created coding test assignment with all provider, scheduling, and audit fields.","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"create","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Updates the details of an existing coding test assignment (ats_recruitment_coding_tests table). This operation allows an HR recruiter or system admin to modify scheduling, status, or test provider-related metadata for a specific coding test, as identified by its unique ID (UUID). The update action is audited and only permitted if the test is still modifiable according to business rules (e.g., not already closed, not soft deleted).","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}","method":"put","description":"This operation updates an existing coding test assignment in the ATS, as referenced by its unique coding test ID. The update can include scheduling changes (reschedule, change deadlines), provider metadata (such as updating external provider IDs or URLs), or status updates if allowed. The operation enforces access control (HR recruiter or system admin only), ensures audit logging, and prevents modification for already closed or deleted test records.\n\nIf the coding test record does not exist, is no longer active, or is not in an updatable state, an error will be returned. All relevant updates to audit fields, scheduling, and referencing information are reflected. Business logic may enforce that certain fields cannot be changed after delivery or after submissions have started, as dictated by process policies.","summary":"Updates an existing coding test assignment by codingTestId (ats_recruitment_coding_tests table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test assignment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the coding test assignment, including schedule, provider info, and metadata.","typeName":"IAtsRecruitmentCodingTest.IUpdate"},"responseBody":{"description":"Updated coding test assignment with all provider, scheduling, and audit fields.","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"update","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Updates the details of an existing coding test assignment (ats_recruitment_coding_tests table). This operation allows an HR recruiter or system admin to modify scheduling, status, or test provider-related metadata for a specific coding test, as identified by its unique ID (UUID). The update action is audited and only permitted if the test is still modifiable according to business rules (e.g., not already closed, not soft deleted).","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}","method":"put","description":"This operation updates an existing coding test assignment in the ATS, as referenced by its unique coding test ID. The update can include scheduling changes (reschedule, change deadlines), provider metadata (such as updating external provider IDs or URLs), or status updates if allowed. The operation enforces access control (HR recruiter or system admin only), ensures audit logging, and prevents modification for already closed or deleted test records.\n\nIf the coding test record does not exist, is no longer active, or is not in an updatable state, an error will be returned. All relevant updates to audit fields, scheduling, and referencing information are reflected. Business logic may enforce that certain fields cannot be changed after delivery or after submissions have started, as dictated by process policies.","summary":"Updates an existing coding test assignment by codingTestId (ats_recruitment_coding_tests table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test assignment to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the coding test assignment, including schedule, provider info, and metadata.","typeName":"IAtsRecruitmentCodingTest.IUpdate"},"responseBody":{"description":"Updated coding test assignment with all provider, scheduling, and audit fields.","typeName":"IAtsRecruitmentCodingTest"},"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"update","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Deletes (soft deletes) a coding test assignment from the ats_recruitment_coding_tests table. This operation enables HR recruiters or system administrators to remove a coding test assignment by its unique ID. The operation sets the deleted_at timestamp for audit and GDPR compliance. Actual hard delete is not performed, supporting recovery or compliance traceability. Only allowed if removing the test assignment does not violate process constraints (e.g., there are no completed applicant submissions or business policies block deletion in a given state).","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}","method":"delete","description":"This operation soft deletes a coding test assignment identified by codingTestId, by setting the deleted_at field to the current timestamp in the ats_recruitment_coding_tests Prisma table. The operation is only available to authorized HR recruiters or system administrators. When performed, it marks the coding test as deleted but does not remove it from storage, ensuring that records support audit/recovery/GDPR compliance.\n\nIf the coding test is referenced by candidate submissions or is in a non-deletable status (such as already closed or processed), the operation will be rejected with an error. The operation ensures that no critical in-progress results or downstream dependencies are orphaned by deletion. Deletion attempts are logged for audit purposes, including timestamp and actor.","summary":"Soft deletes (marks as deleted) a coding test assignment by codingTestId (ats_recruitment_coding_tests table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test assignment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"erase","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Deletes (soft deletes) a coding test assignment from the ats_recruitment_coding_tests table. This operation enables HR recruiters or system administrators to remove a coding test assignment by its unique ID. The operation sets the deleted_at timestamp for audit and GDPR compliance. Actual hard delete is not performed, supporting recovery or compliance traceability. Only allowed if removing the test assignment does not violate process constraints (e.g., there are no completed applicant submissions or business policies block deletion in a given state).","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}","method":"delete","description":"This operation soft deletes a coding test assignment identified by codingTestId, by setting the deleted_at field to the current timestamp in the ats_recruitment_coding_tests Prisma table. The operation is only available to authorized HR recruiters or system administrators. When performed, it marks the coding test as deleted but does not remove it from storage, ensuring that records support audit/recovery/GDPR compliance.\n\nIf the coding test is referenced by candidate submissions or is in a non-deletable status (such as already closed or processed), the operation will be rejected with an error. The operation ensures that no critical in-progress results or downstream dependencies are orphaned by deletion. Deletion attempts are logged for audit purposes, including timestamp and actor.","summary":"Soft deletes (marks as deleted) a coding test assignment by codingTestId (ats_recruitment_coding_tests table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test assignment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","systemAdmin"],"name":"erase","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Searches and retrieves a paginated list of coding test submissions for a particular coding test. This operation, targeting the ats_recruitment_coding_test_submissions table, supports filtering, sorting, and pagination capabilities. Used by HR recruiters, technical reviewers, and system admins to monitor applicant progress, audit attempts, or review coding test activity for a specific coding test instance.","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/submissions","method":"patch","description":"This operation retrieves a filtered and paginated list of submissions for the coding test identified by codingTestId. Filtering criteria may include submission status, review state, timestamp, or applicant reference. Results are returned in a paginated form, supporting sorting by submitted_at or other columns.\n\nThe operation supports advanced search criteria, enabling HR recruiters, technical reviewers, or system admins to analyze applicant responses, audit activity, or review progress. Authorization is required, ensuring only staff with appropriate rights can access applicant submission information and sensitive data. Pagination fields, filtering parameters, and sorting directions are accepted in the request body as per business policy.","summary":"Search and paginate coding test submissions for a specific coding test (ats_recruitment_coding_test_submissions table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test for which submissions are to be retrieved and searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and sorting options for listing coding test submissions.","typeName":"IAtsRecruitmentCodingTestSubmission.IRequest"},"responseBody":{"description":"Paginated, filtered result for coding test submissions, including metadata and applicant info.","typeName":"IPageIAtsRecruitmentCodingTestSubmission"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"index","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Searches and retrieves a paginated list of coding test submissions for a particular coding test. This operation, targeting the ats_recruitment_coding_test_submissions table, supports filtering, sorting, and pagination capabilities. Used by HR recruiters, technical reviewers, and system admins to monitor applicant progress, audit attempts, or review coding test activity for a specific coding test instance.","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions","method":"patch","description":"This operation retrieves a filtered and paginated list of submissions for the coding test identified by codingTestId. Filtering criteria may include submission status, review state, timestamp, or applicant reference. Results are returned in a paginated form, supporting sorting by submitted_at or other columns.\n\nThe operation supports advanced search criteria, enabling HR recruiters, technical reviewers, or system admins to analyze applicant responses, audit activity, or review progress. Authorization is required, ensuring only staff with appropriate rights can access applicant submission information and sensitive data. Pagination fields, filtering parameters, and sorting directions are accepted in the request body as per business policy.","summary":"Search and paginate coding test submissions for a specific coding test (ats_recruitment_coding_test_submissions table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test for which submissions are to be retrieved and searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and sorting options for listing coding test submissions.","typeName":"IAtsRecruitmentCodingTestSubmission.IRequest"},"responseBody":{"description":"Paginated, filtered result for coding test submissions, including metadata and applicant info.","typeName":"IPageIAtsRecruitmentCodingTestSubmission"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"index","authorizationRole":"techReviewer","authorizationType":null},{"specification":"Searches and retrieves a paginated list of coding test submissions for a particular coding test. This operation, targeting the ats_recruitment_coding_test_submissions table, supports filtering, sorting, and pagination capabilities. Used by HR recruiters, technical reviewers, and system admins to monitor applicant progress, audit attempts, or review coding test activity for a specific coding test instance.","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/submissions","method":"patch","description":"This operation retrieves a filtered and paginated list of submissions for the coding test identified by codingTestId. Filtering criteria may include submission status, review state, timestamp, or applicant reference. Results are returned in a paginated form, supporting sorting by submitted_at or other columns.\n\nThe operation supports advanced search criteria, enabling HR recruiters, technical reviewers, or system admins to analyze applicant responses, audit activity, or review progress. Authorization is required, ensuring only staff with appropriate rights can access applicant submission information and sensitive data. Pagination fields, filtering parameters, and sorting directions are accepted in the request body as per business policy.","summary":"Search and paginate coding test submissions for a specific coding test (ats_recruitment_coding_test_submissions table).","parameters":[{"name":"codingTestId","description":"UUID of the coding test for which submissions are to be retrieved and searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search criteria, pagination, and sorting options for listing coding test submissions.","typeName":"IAtsRecruitmentCodingTestSubmission.IRequest"},"responseBody":{"description":"Paginated, filtered result for coding test submissions, including metadata and applicant info.","typeName":"IPageIAtsRecruitmentCodingTestSubmission"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"index","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Get a specific coding test submission by its unique identifier. This operation works with the ats_recruitment_coding_test_submissions table, retrieving detailed information about a specific coding test submission linked to a certain coding test. The main use case is for HR, technical reviewers, or applicants to view the full submission data (including submitted answer, file URL, status, reviewer comments) for a given submission. Parameters: codingTestId (parent test), submissionId (submission UUID). Output includes both the meta and answer content for audit and review purposes.","description":"This endpoint retrieves full information about a specific coding test submission record from the system. It references the ats_recruitment_coding_test_submissions table, returning all key fields such as submission timestamp, answer file URL or inline code, status, reviewer status, any comments, and submission history for the indicated codingTestId and submissionId.\n\nThe operation checks visibility/authorization: applicants may only access their own submissions, while HR or tech reviewers can access submissions linked to their assigned/tested applicants. Security is managed via role-based access, and audit logs should be maintained for all access events.\n\nIf the submission does not exist, or the requester is not authorized, an error is returned. Linked reviewer comments and result metadata can be included in the response for authorized roles. This endpoint is related to viewing, evaluating, or exporting solution content for interviews or hiring decision processes.","summary":"Get a specific coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coding test submission details, including content and status info.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"applicant","name":"at","path":"/atsRecruitment/applicant/codingTests/{codingTestId}/submissions/{submissionId}","method":"get"},{"specification":"Get a specific coding test submission by its unique identifier. This operation works with the ats_recruitment_coding_test_submissions table, retrieving detailed information about a specific coding test submission linked to a certain coding test. The main use case is for HR, technical reviewers, or applicants to view the full submission data (including submitted answer, file URL, status, reviewer comments) for a given submission. Parameters: codingTestId (parent test), submissionId (submission UUID). Output includes both the meta and answer content for audit and review purposes.","description":"This endpoint retrieves full information about a specific coding test submission record from the system. It references the ats_recruitment_coding_test_submissions table, returning all key fields such as submission timestamp, answer file URL or inline code, status, reviewer status, any comments, and submission history for the indicated codingTestId and submissionId.\n\nThe operation checks visibility/authorization: applicants may only access their own submissions, while HR or tech reviewers can access submissions linked to their assigned/tested applicants. Security is managed via role-based access, and audit logs should be maintained for all access events.\n\nIf the submission does not exist, or the requester is not authorized, an error is returned. Linked reviewer comments and result metadata can be included in the response for authorized roles. This endpoint is related to viewing, evaluating, or exporting solution content for interviews or hiring decision processes.","summary":"Get a specific coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coding test submission details, including content and status info.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/submissions/{submissionId}","method":"get"},{"specification":"Get a specific coding test submission by its unique identifier. This operation works with the ats_recruitment_coding_test_submissions table, retrieving detailed information about a specific coding test submission linked to a certain coding test. The main use case is for HR, technical reviewers, or applicants to view the full submission data (including submitted answer, file URL, status, reviewer comments) for a given submission. Parameters: codingTestId (parent test), submissionId (submission UUID). Output includes both the meta and answer content for audit and review purposes.","description":"This endpoint retrieves full information about a specific coding test submission record from the system. It references the ats_recruitment_coding_test_submissions table, returning all key fields such as submission timestamp, answer file URL or inline code, status, reviewer status, any comments, and submission history for the indicated codingTestId and submissionId.\n\nThe operation checks visibility/authorization: applicants may only access their own submissions, while HR or tech reviewers can access submissions linked to their assigned/tested applicants. Security is managed via role-based access, and audit logs should be maintained for all access events.\n\nIf the submission does not exist, or the requester is not authorized, an error is returned. Linked reviewer comments and result metadata can be included in the response for authorized roles. This endpoint is related to viewing, evaluating, or exporting solution content for interviews or hiring decision processes.","summary":"Get a specific coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coding test submission details, including content and status info.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"techReviewer","name":"at","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}","method":"get"},{"specification":"Create a new submission for a coding test. This operation adds a record to ats_recruitment_coding_test_submissions, linking the submission to a parent coding test instance via codingTestId. Used by applicants to submit solutions—either as inline text or a file URI—to their assigned coding test. Upon creation, submission status is set (e.g., 'valid', 'pending', 'needs_review'). The corresponding answer (code/text or file link) is recorded as part of the submission. Business logic ensures only one submission per applicant per test unless re-submission is explicitly allowed.","description":"This endpoint allows an applicant to submit their solution to a coding test as a new record in the ats_recruitment_coding_test_submissions table. The applicant provides the answer in text or file format, linking to the codingTestId and associated application and applicant.\n\nUpon POST, the system validates uniqueness (prevents multiple submissions unless allowed), enforces deadline/expiration checks, and sets the initial status. Security rules ensure only the applicant for the relevant test can submit an answer, and audit logging is performed.\n\nIf submitted past the allowed expiry, the system rejects the submission. This operation is fundamental to capturing applicant activity in the recruitment workflow and integrates with downstream reviewer and scoring logic.","summary":"Create a new coding test submission for a coding test in ats_recruitment_coding_test_submissions.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"New coding test submission information to be created.","typeName":"IAtsRecruitmentCodingTestSubmission.ICreate"},"responseBody":{"description":"Details of the created coding test submission.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"applicant","name":"create","path":"/atsRecruitment/applicant/codingTests/{codingTestId}/submissions","method":"post"},{"specification":"Update an existing coding test submission (by submission ID) with a new answer, additional file URL, or status update. This operation targets the ats_recruitment_coding_test_submissions table, generally used for technical reviewers or HR to update review-related status, add comments, or allow the applicant to correct a submission before reviewer action. The operation supports full replacement as appropriate for audit compliance and accuracy.","description":"This endpoint updates properties of an existing coding test submission in the ats_recruitment_coding_test_submissions table. The most common use cases include technical reviewer or HR updating review status, adding reviewer comments, correcting a misclassified submission, or handling edge cases where re-submission is necessary before final review.\n\nThe endpoint enforces authorization so only the relevant technical reviewer, HR, or (if permitted) the original applicant can perform updates. Business logic verifies that critical fields such as submitted answer are not altered post-deadline except by authorized users. Audit trails must be kept for all status and comment changes to ensure reviewer accountability and traceability.\n\nRelated endpoints include retrieval and reviewer comment add/edit. Update operations trigger recalculation of downstream scoring and visibility states as business rules dictate.","summary":"Update an existing coding test submission in ats_recruitment_coding_test_submissions.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated submission information for the coding test submission.","typeName":"IAtsRecruitmentCodingTestSubmission.IUpdate"},"responseBody":{"description":"The updated coding test submission record details.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"applicant","name":"update","path":"/atsRecruitment/applicant/codingTests/{codingTestId}/submissions/{submissionId}","method":"put"},{"specification":"Update an existing coding test submission (by submission ID) with a new answer, additional file URL, or status update. This operation targets the ats_recruitment_coding_test_submissions table, generally used for technical reviewers or HR to update review-related status, add comments, or allow the applicant to correct a submission before reviewer action. The operation supports full replacement as appropriate for audit compliance and accuracy.","description":"This endpoint updates properties of an existing coding test submission in the ats_recruitment_coding_test_submissions table. The most common use cases include technical reviewer or HR updating review status, adding reviewer comments, correcting a misclassified submission, or handling edge cases where re-submission is necessary before final review.\n\nThe endpoint enforces authorization so only the relevant technical reviewer, HR, or (if permitted) the original applicant can perform updates. Business logic verifies that critical fields such as submitted answer are not altered post-deadline except by authorized users. Audit trails must be kept for all status and comment changes to ensure reviewer accountability and traceability.\n\nRelated endpoints include retrieval and reviewer comment add/edit. Update operations trigger recalculation of downstream scoring and visibility states as business rules dictate.","summary":"Update an existing coding test submission in ats_recruitment_coding_test_submissions.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated submission information for the coding test submission.","typeName":"IAtsRecruitmentCodingTestSubmission.IUpdate"},"responseBody":{"description":"The updated coding test submission record details.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"update","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/submissions/{submissionId}","method":"put"},{"specification":"Update an existing coding test submission (by submission ID) with a new answer, additional file URL, or status update. This operation targets the ats_recruitment_coding_test_submissions table, generally used for technical reviewers or HR to update review-related status, add comments, or allow the applicant to correct a submission before reviewer action. The operation supports full replacement as appropriate for audit compliance and accuracy.","description":"This endpoint updates properties of an existing coding test submission in the ats_recruitment_coding_test_submissions table. The most common use cases include technical reviewer or HR updating review status, adding reviewer comments, correcting a misclassified submission, or handling edge cases where re-submission is necessary before final review.\n\nThe endpoint enforces authorization so only the relevant technical reviewer, HR, or (if permitted) the original applicant can perform updates. Business logic verifies that critical fields such as submitted answer are not altered post-deadline except by authorized users. Audit trails must be kept for all status and comment changes to ensure reviewer accountability and traceability.\n\nRelated endpoints include retrieval and reviewer comment add/edit. Update operations trigger recalculation of downstream scoring and visibility states as business rules dictate.","summary":"Update an existing coding test submission in ats_recruitment_coding_test_submissions.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated submission information for the coding test submission.","typeName":"IAtsRecruitmentCodingTestSubmission.IUpdate"},"responseBody":{"description":"The updated coding test submission record details.","typeName":"IAtsRecruitmentCodingTestSubmission"},"authorizationType":null,"authorizationRole":"techReviewer","name":"update","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}","method":"put"},{"specification":"Permanently erase a coding test submission from the ats_recruitment_coding_test_submissions table by unique submissionId. This operation is used for applicant-initiated deletion prior to review, or admin/HR removal in compliance cases or accidental submissions. Ensures full removal and non-recoverability in accordance with business policies. Authorized only for the submission owner, responsible HR, technical reviewer, or system admin, with audit trail recorded.","description":"This endpoint permanently deletes a coding test submission record from the system using the provided codingTestId and submissionId, referencing the ats_recruitment_coding_test_submissions table. This operation is typically available before the submission is reviewed or in rare compliance scenarios requiring data removal.\n\nAuthentication and authorization checks ensure only the owner (applicant), involved HR, technical reviewer, or system administrators can perform this operation. Business logic prevents deletion after a certain workflow point (such as after final review), and full audit/reporting is performed for compliance.\n\nIrrecoverable hard deletion ensures no lingering answer or evaluation data post-operation. Related endpoints include submission retrieval, update, and status advances for other workflow states.","summary":"Permanently delete a coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"applicant","name":"erase","path":"/atsRecruitment/applicant/codingTests/{codingTestId}/submissions/{submissionId}","method":"delete"},{"specification":"Permanently erase a coding test submission from the ats_recruitment_coding_test_submissions table by unique submissionId. This operation is used for applicant-initiated deletion prior to review, or admin/HR removal in compliance cases or accidental submissions. Ensures full removal and non-recoverability in accordance with business policies. Authorized only for the submission owner, responsible HR, technical reviewer, or system admin, with audit trail recorded.","description":"This endpoint permanently deletes a coding test submission record from the system using the provided codingTestId and submissionId, referencing the ats_recruitment_coding_test_submissions table. This operation is typically available before the submission is reviewed or in rare compliance scenarios requiring data removal.\n\nAuthentication and authorization checks ensure only the owner (applicant), involved HR, technical reviewer, or system administrators can perform this operation. Business logic prevents deletion after a certain workflow point (such as after final review), and full audit/reporting is performed for compliance.\n\nIrrecoverable hard deletion ensures no lingering answer or evaluation data post-operation. Related endpoints include submission retrieval, update, and status advances for other workflow states.","summary":"Permanently delete a coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"hrRecruiter","name":"erase","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/submissions/{submissionId}","method":"delete"},{"specification":"Permanently erase a coding test submission from the ats_recruitment_coding_test_submissions table by unique submissionId. This operation is used for applicant-initiated deletion prior to review, or admin/HR removal in compliance cases or accidental submissions. Ensures full removal and non-recoverability in accordance with business policies. Authorized only for the submission owner, responsible HR, technical reviewer, or system admin, with audit trail recorded.","description":"This endpoint permanently deletes a coding test submission record from the system using the provided codingTestId and submissionId, referencing the ats_recruitment_coding_test_submissions table. This operation is typically available before the submission is reviewed or in rare compliance scenarios requiring data removal.\n\nAuthentication and authorization checks ensure only the owner (applicant), involved HR, technical reviewer, or system administrators can perform this operation. Business logic prevents deletion after a certain workflow point (such as after final review), and full audit/reporting is performed for compliance.\n\nIrrecoverable hard deletion ensures no lingering answer or evaluation data post-operation. Related endpoints include submission retrieval, update, and status advances for other workflow states.","summary":"Permanently delete a coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"techReviewer","name":"erase","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}","method":"delete"},{"specification":"Permanently erase a coding test submission from the ats_recruitment_coding_test_submissions table by unique submissionId. This operation is used for applicant-initiated deletion prior to review, or admin/HR removal in compliance cases or accidental submissions. Ensures full removal and non-recoverability in accordance with business policies. Authorized only for the submission owner, responsible HR, technical reviewer, or system admin, with audit trail recorded.","description":"This endpoint permanently deletes a coding test submission record from the system using the provided codingTestId and submissionId, referencing the ats_recruitment_coding_test_submissions table. This operation is typically available before the submission is reviewed or in rare compliance scenarios requiring data removal.\n\nAuthentication and authorization checks ensure only the owner (applicant), involved HR, technical reviewer, or system administrators can perform this operation. Business logic prevents deletion after a certain workflow point (such as after final review), and full audit/reporting is performed for compliance.\n\nIrrecoverable hard deletion ensures no lingering answer or evaluation data post-operation. Related endpoints include submission retrieval, update, and status advances for other workflow states.","summary":"Permanently delete a coding test submission from ats_recruitment_coding_test_submissions by ID.","parameters":[{"name":"codingTestId","description":"The unique ID of the parent coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"The unique ID of the coding test submission.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/submissions/{submissionId}","method":"delete"},{"specification":"This operation provides a paginated and searchable list of all coding test results related to a specific coding test instance. It works on the ats_recruitment_coding_test_results table and is intended for use by technical reviewers and system administrators to audit, filter, and analyze results for evaluation, fraud detection, or reporting. Supported search parameters might include score ranges, evaluation method, plagiarism flags, dates, and status; paginated response ensures scalability. The endpoint enhances transparency and audit control in interview processes.","description":"Fetches a paginated, filterable list of coding test results associated with a specific coding test. The response includes detailed scoring, evaluation methods, flags for plagiarism, and additional metadata per result.\n\nUsers with the 'techReviewer' or 'systemAdmin' roles can search by score, evaluation status, review status, or filter by result timing and attributes. All query conditions must adhere to privacy, and only authorized personnel can access rich scoring and sensitive information as per role-based policy.\n\nUnderlying data comes from the ats_recruitment_coding_test_results table; result rows also reference submission IDs and coding test IDs for cross-correlation within the audit trail. Operation supports business logic for reviewing candidate performance and identifying anomalies. It complements the GET (single detail) and POST (new entry) APIs for this resource.","summary":"List and search coding test results linked to a specific coding test (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/results","method":"patch","parameters":[{"name":"codingTestId","description":"Unique identifier of the coding test instance whose results are being listed or searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter conditions for coding test results including pagination and filters (score, plagiarism_flag, etc)","typeName":"IAtsRecruitmentCodingTestResult.IRequest"},"responseBody":{"description":"Paginated results of coding test outcomes for the given coding test, including detailed evaluation fields and meta.","typeName":"IPageIAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"techReviewer","name":"index"},{"specification":"This operation provides a paginated and searchable list of all coding test results related to a specific coding test instance. It works on the ats_recruitment_coding_test_results table and is intended for use by technical reviewers and system administrators to audit, filter, and analyze results for evaluation, fraud detection, or reporting. Supported search parameters might include score ranges, evaluation method, plagiarism flags, dates, and status; paginated response ensures scalability. The endpoint enhances transparency and audit control in interview processes.","description":"Fetches a paginated, filterable list of coding test results associated with a specific coding test. The response includes detailed scoring, evaluation methods, flags for plagiarism, and additional metadata per result.\n\nUsers with the 'techReviewer' or 'systemAdmin' roles can search by score, evaluation status, review status, or filter by result timing and attributes. All query conditions must adhere to privacy, and only authorized personnel can access rich scoring and sensitive information as per role-based policy.\n\nUnderlying data comes from the ats_recruitment_coding_test_results table; result rows also reference submission IDs and coding test IDs for cross-correlation within the audit trail. Operation supports business logic for reviewing candidate performance and identifying anomalies. It complements the GET (single detail) and POST (new entry) APIs for this resource.","summary":"List and search coding test results linked to a specific coding test (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/results","method":"patch","parameters":[{"name":"codingTestId","description":"Unique identifier of the coding test instance whose results are being listed or searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter conditions for coding test results including pagination and filters (score, plagiarism_flag, etc)","typeName":"IAtsRecruitmentCodingTestResult.IRequest"},"responseBody":{"description":"Paginated results of coding test outcomes for the given coding test, including detailed evaluation fields and meta.","typeName":"IPageIAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation retrieves detailed information about a specific coding test result record for a given coding test. It reads from the ats_recruitment_coding_test_results table, returning all key fields such as score, evaluation method, plagiarism flags, result JSON, and timestamps. Designed for deep review, audit, or manual review preview.","description":"Fetches all fields of a particular coding test result, including the score, maximum score, ranking percentile, evaluation method ('auto', 'manual', etc.), and flags such as plagiarism detection.\n\nThis endpoint is available to technical reviewers and system administrators for compliance review, investigation, manual evaluation of flagged cases, or candidate assessment validation. Permission checks restrict access to only approved roles. The response also includes provenance (submission ID, finalized date, raw evaluation JSON) and fits into the operational flow of technical assessment audits.\n\nThe resulting data is sourced exclusively from the ats_recruitment_coding_test_results table and directly identified via both codingTestId and resultId—a composite path for security and traceability.","summary":"Fetch single coding test result detail by codingTestId and resultId (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/results/{resultId}","method":"get","parameters":[{"name":"codingTestId","description":"Coding test instance ID (parent context for the result).","schema":{"type":"string","format":"uuid"}},{"name":"resultId","description":"Unique result record ID to be fetched.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coding test result record with all evaluation details and audit fields.","typeName":"IAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"techReviewer","name":"at"},{"specification":"This operation retrieves detailed information about a specific coding test result record for a given coding test. It reads from the ats_recruitment_coding_test_results table, returning all key fields such as score, evaluation method, plagiarism flags, result JSON, and timestamps. Designed for deep review, audit, or manual review preview.","description":"Fetches all fields of a particular coding test result, including the score, maximum score, ranking percentile, evaluation method ('auto', 'manual', etc.), and flags such as plagiarism detection.\n\nThis endpoint is available to technical reviewers and system administrators for compliance review, investigation, manual evaluation of flagged cases, or candidate assessment validation. Permission checks restrict access to only approved roles. The response also includes provenance (submission ID, finalized date, raw evaluation JSON) and fits into the operational flow of technical assessment audits.\n\nThe resulting data is sourced exclusively from the ats_recruitment_coding_test_results table and directly identified via both codingTestId and resultId—a composite path for security and traceability.","summary":"Fetch single coding test result detail by codingTestId and resultId (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/results/{resultId}","method":"get","parameters":[{"name":"codingTestId","description":"Coding test instance ID (parent context for the result).","schema":{"type":"string","format":"uuid"}},{"name":"resultId","description":"Unique result record ID to be fetched.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full coding test result record with all evaluation details and audit fields.","typeName":"IAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation allows a technical reviewer or system administrator to record a new coding test result for a given coding test. It writes a new entry in the ats_recruitment_coding_test_results table, supporting both automatic and manual evaluations, including test scores, evaluation methods, flags, and result audit details. Each POST creates a unique snapshot, not an update or overwrite.","description":"Creates a new coding test result record associated with a specified coding test. This operation is intended for generating formal result records after a test is evaluated—either manually by a technical reviewer or through automatic assessment system integration.\n\nInput data includes score, maximum score, evaluation method, ranking percentile, plagiarism flags, and possibly result JSON for system-generated outcomes. Only permitted for users with 'techReviewer' or 'systemAdmin' roles; operation is audited for compliance.\n\nThe operation enables creation of both routine and exceptional evaluation records and supports backfilling test results if needed for audit/history improvement.","summary":"Create a new coding test result record under the specified coding test (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/results","method":"post","parameters":[{"name":"codingTestId","description":"ID of the coding test to which the new result belongs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Coding test result data including scores, flags, evaluation method, and details.","typeName":"IAtsRecruitmentCodingTestResult.ICreate"},"responseBody":{"description":"The created coding test result record with all computed fields and identifiers.","typeName":"IAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"techReviewer","name":"create"},{"specification":"This operation allows a technical reviewer or system administrator to record a new coding test result for a given coding test. It writes a new entry in the ats_recruitment_coding_test_results table, supporting both automatic and manual evaluations, including test scores, evaluation methods, flags, and result audit details. Each POST creates a unique snapshot, not an update or overwrite.","description":"Creates a new coding test result record associated with a specified coding test. This operation is intended for generating formal result records after a test is evaluated—either manually by a technical reviewer or through automatic assessment system integration.\n\nInput data includes score, maximum score, evaluation method, ranking percentile, plagiarism flags, and possibly result JSON for system-generated outcomes. Only permitted for users with 'techReviewer' or 'systemAdmin' roles; operation is audited for compliance.\n\nThe operation enables creation of both routine and exceptional evaluation records and supports backfilling test results if needed for audit/history improvement.","summary":"Create a new coding test result record under the specified coding test (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/results","method":"post","parameters":[{"name":"codingTestId","description":"ID of the coding test to which the new result belongs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Coding test result data including scores, flags, evaluation method, and details.","typeName":"IAtsRecruitmentCodingTestResult.ICreate"},"responseBody":{"description":"The created coding test result record with all computed fields and identifiers.","typeName":"IAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create"},{"specification":"This operation updates an existing coding test result record for a given coding test. It performs an update on the ats_recruitment_coding_test_results table (located by codingTestId and resultId) to change fields such as score, evaluation method, or flag status. Tracks changes for audit, and ensures valid data lineage for technical assessment systems.","description":"Allows technical reviewers or system administrators to update a coding test result's critical fields—such as adjusting score, flagging for plagiarism, changing evaluation method, or entering new result JSON—in response to manual review findings or correction cycles.\n\nUpdate is restricted to authorized roles. Audit trails track every modification for compliance, and adjusted results are versioned to reflect change history where required. Reviewers may use this to correct mistaken auto-evaluations or mark suspicion indicators found after initial review.\n\nThe operation leverages the ats_recruitment_coding_test_results table, and all field modifications must be consistent with assessment and compliance rules of the ATS platform and audit guidelines.","summary":"Update coding test result with revised scores, flags, or additional evaluation details (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/results/{resultId}","method":"put","parameters":[{"name":"codingTestId","description":"Parent coding test context; ensures update is within proper assessment scope.","schema":{"type":"string","format":"uuid"}},{"name":"resultId","description":"Target unique coding test result ID to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Delta/patch of updated coding test result fields (scores, methods, flags, etc).","typeName":"IAtsRecruitmentCodingTestResult.IUpdate"},"responseBody":{"description":"Updated coding test result entity as stored after modification.","typeName":"IAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"techReviewer","name":"update"},{"specification":"This operation updates an existing coding test result record for a given coding test. It performs an update on the ats_recruitment_coding_test_results table (located by codingTestId and resultId) to change fields such as score, evaluation method, or flag status. Tracks changes for audit, and ensures valid data lineage for technical assessment systems.","description":"Allows technical reviewers or system administrators to update a coding test result's critical fields—such as adjusting score, flagging for plagiarism, changing evaluation method, or entering new result JSON—in response to manual review findings or correction cycles.\n\nUpdate is restricted to authorized roles. Audit trails track every modification for compliance, and adjusted results are versioned to reflect change history where required. Reviewers may use this to correct mistaken auto-evaluations or mark suspicion indicators found after initial review.\n\nThe operation leverages the ats_recruitment_coding_test_results table, and all field modifications must be consistent with assessment and compliance rules of the ATS platform and audit guidelines.","summary":"Update coding test result with revised scores, flags, or additional evaluation details (ats_recruitment_coding_test_results table).","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/results/{resultId}","method":"put","parameters":[{"name":"codingTestId","description":"Parent coding test context; ensures update is within proper assessment scope.","schema":{"type":"string","format":"uuid"}},{"name":"resultId","description":"Target unique coding test result ID to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Delta/patch of updated coding test result fields (scores, methods, flags, etc).","typeName":"IAtsRecruitmentCodingTestResult.IUpdate"},"responseBody":{"description":"Updated coding test result entity as stored after modification.","typeName":"IAtsRecruitmentCodingTestResult"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update"},{"specification":"This operation retrieves the details of a coding test review comment for a specific submission in the ATS Recruitment system. It accesses the ats_recruitment_coding_test_review_comments table, which holds immutable reviewer and automated feedback snapshots for coding test submissions. The endpoint requires both the coding test ID and the review comment ID, and returns all available comment details, including reviewer and comment metadata, for business audit and display in evaluation UIs.","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"get","summary":"Retrieve the details of a coding test review comment by ID for a given coding test submission.","description":"This API retrieves all details of a specified review comment associated with a particular coding test submission. It can be used by technical reviewers, HR staff, or system admins to display the content, review type, timestamps, and reviewer identification of a single comment for moderation/audit purposes.\n\nAccess to this endpoint should be restricted according to applicant privacy and reviewer authorization rules, as review comments may contain sensitive evaluation notes. Security checks must ensure the requesting actor is permitted to view the review comment (e.g., must be the assigned tech reviewer or HR of the job posting), as per platform policy.\n\nReferenced database columns include the immutable review comment text, comment_type (e.g., 'manual', 'auto', or 'system'), timestamps for when the comment was started and finalized, and the reviewer ID. The operation draws from the ats_recruitment_coding_test_review_comments schema and supports compliance by enabling audit of reviewer feedback and the integrity of the review process.\n\nThis endpoint is intended to be used after listing available review comments for a submission (via listing endpoint), or when directly accessing a comment from a moderation or feedback workflow UI. Error handling must clearly distinguish not found, forbidden, or deleted resources, returning appropriate error codes and audit logging all access for compliance.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to which the review comment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the coding test submission associated with this review comment.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"Unique identifier for the review comment being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested review comment, including content, author, type, and time metadata.","typeName":"IAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"techReviewer","name":"at"},{"specification":"This operation retrieves the details of a coding test review comment for a specific submission in the ATS Recruitment system. It accesses the ats_recruitment_coding_test_review_comments table, which holds immutable reviewer and automated feedback snapshots for coding test submissions. The endpoint requires both the coding test ID and the review comment ID, and returns all available comment details, including reviewer and comment metadata, for business audit and display in evaluation UIs.","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"get","summary":"Retrieve the details of a coding test review comment by ID for a given coding test submission.","description":"This API retrieves all details of a specified review comment associated with a particular coding test submission. It can be used by technical reviewers, HR staff, or system admins to display the content, review type, timestamps, and reviewer identification of a single comment for moderation/audit purposes.\n\nAccess to this endpoint should be restricted according to applicant privacy and reviewer authorization rules, as review comments may contain sensitive evaluation notes. Security checks must ensure the requesting actor is permitted to view the review comment (e.g., must be the assigned tech reviewer or HR of the job posting), as per platform policy.\n\nReferenced database columns include the immutable review comment text, comment_type (e.g., 'manual', 'auto', or 'system'), timestamps for when the comment was started and finalized, and the reviewer ID. The operation draws from the ats_recruitment_coding_test_review_comments schema and supports compliance by enabling audit of reviewer feedback and the integrity of the review process.\n\nThis endpoint is intended to be used after listing available review comments for a submission (via listing endpoint), or when directly accessing a comment from a moderation or feedback workflow UI. Error handling must clearly distinguish not found, forbidden, or deleted resources, returning appropriate error codes and audit logging all access for compliance.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to which the review comment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the coding test submission associated with this review comment.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"Unique identifier for the review comment being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested review comment, including content, author, type, and time metadata.","typeName":"IAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at"},{"specification":"This operation retrieves the details of a coding test review comment for a specific submission in the ATS Recruitment system. It accesses the ats_recruitment_coding_test_review_comments table, which holds immutable reviewer and automated feedback snapshots for coding test submissions. The endpoint requires both the coding test ID and the review comment ID, and returns all available comment details, including reviewer and comment metadata, for business audit and display in evaluation UIs.","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"get","summary":"Retrieve the details of a coding test review comment by ID for a given coding test submission.","description":"This API retrieves all details of a specified review comment associated with a particular coding test submission. It can be used by technical reviewers, HR staff, or system admins to display the content, review type, timestamps, and reviewer identification of a single comment for moderation/audit purposes.\n\nAccess to this endpoint should be restricted according to applicant privacy and reviewer authorization rules, as review comments may contain sensitive evaluation notes. Security checks must ensure the requesting actor is permitted to view the review comment (e.g., must be the assigned tech reviewer or HR of the job posting), as per platform policy.\n\nReferenced database columns include the immutable review comment text, comment_type (e.g., 'manual', 'auto', or 'system'), timestamps for when the comment was started and finalized, and the reviewer ID. The operation draws from the ats_recruitment_coding_test_review_comments schema and supports compliance by enabling audit of reviewer feedback and the integrity of the review process.\n\nThis endpoint is intended to be used after listing available review comments for a submission (via listing endpoint), or when directly accessing a comment from a moderation or feedback workflow UI. Error handling must clearly distinguish not found, forbidden, or deleted resources, returning appropriate error codes and audit logging all access for compliance.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to which the review comment belongs.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the coding test submission associated with this review comment.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"Unique identifier for the review comment being retrieved.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested review comment, including content, author, type, and time metadata.","typeName":"IAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at"},{"specification":"This operation creates a new coding test review comment for a specific coding test submission in the ATS Recruitment system. It interacts with the ats_recruitment_coding_test_review_comments table, which allows multiple immutable comments per submission per reviewer, supporting detailed evaluation, moderation, and audit trails. Reviewer roles are identified by their authenticated session, and each comment captures reviewer, time, content, and type.","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments","method":"post","summary":"Create a new coding test review comment for a specific submission.","description":"This API enables a technical reviewer to add a new review comment to a coding test submission in the ATS platform. Only authenticated technical reviewers assigned to the specific coding test may use this endpoint, which ensures each review comment is properly attributed, timestamped, and stored immutably for audit compliance.\n\nThe request body must provide the content of the comment, type (manual, auto, or system), and any supplementary information as defined by the business process. The backend enforces one comment per reviewer per submission phase (i.e., duplicate/redundant comments in the same phase are rejected), and all fields are validated according to the underlying ats_recruitment_coding_test_review_comments schema.\n\nSecurity best practices require that only authorized technical reviewers can create comments for submissions to which they are assigned, and that all comment creation events are logged for audit. In the case of unauthorized attempts or failed validation, detailed and secure error messages are returned.\n\nThis operation is typically used in the review workflow after a coding test is submitted and before final review is closed, providing an audit-ready log of all reviewer feedback. Related endpoints include retrieval and listing of comments, and modification is not supported (comments are immutable apart from soft delete).","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to assign the review comment to.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the specific submission under review.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Creation details of the review comment including text, type, and reviewer context.","typeName":"IAtsRecruitmentCodingTestReviewComment.ICreate"},"responseBody":{"description":"The newly created immutable review comment with all comment metadata and unique ID.","typeName":"IAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"techReviewer","name":"create"},{"specification":"This operation retrieves a paginated list (with advanced search and filter) of all coding test review comments for a given submission in the ATS platform. It operates on the ats_recruitment_coding_test_review_comments table, returning summary or full comment details as needed for evaluation workflows. This is critical for reviewers, HR, and system admins to audit or moderate the technical review process.","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments","method":"patch","summary":"Search and retrieve a paginated, filtered list of coding test review comments for a specific submission.","description":"This API provides a way to retrieve a filtered and paginated list of all review comments associated with a specific coding test submission, enabling team members to audit, moderate, or collaboratively evaluate the applicant's coding test. The request body may include search terms, reviewer filters, date ranges, or comment type, supporting flexible UX scenarios for reviewing or audit.\n\nComments are returned ordered by commented_at descending, but support additional sort options. The response includes pagination, total count, and a list of matching review comments, as per the ats_recruitment_coding_test_review_comments schema. Security rules ensure that only authorized tech reviewers (those assigned), HR for the corresponding job posting, or system admins can access the list, with full audit logging of all data accesses.\n\nThe endpoint is not intended to return the full coding test or submission content, only the review comment metadata and content fields. Error handling distinguishes between no results, forbidden access, and deleted resources. Related endpoints include creation, single retrieval, and deletion of comments.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to list review comments for.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the coding test submission under review.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for reviewer comment query.","typeName":"IAtsRecruitmentCodingTestReviewComment.IRequest"},"responseBody":{"description":"Paginated list of review comment summaries matching filter and search criteria, with paging info.","typeName":"IPageIAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"techReviewer","name":"index"},{"specification":"This operation retrieves a paginated list (with advanced search and filter) of all coding test review comments for a given submission in the ATS platform. It operates on the ats_recruitment_coding_test_review_comments table, returning summary or full comment details as needed for evaluation workflows. This is critical for reviewers, HR, and system admins to audit or moderate the technical review process.","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments","method":"patch","summary":"Search and retrieve a paginated, filtered list of coding test review comments for a specific submission.","description":"This API provides a way to retrieve a filtered and paginated list of all review comments associated with a specific coding test submission, enabling team members to audit, moderate, or collaboratively evaluate the applicant's coding test. The request body may include search terms, reviewer filters, date ranges, or comment type, supporting flexible UX scenarios for reviewing or audit.\n\nComments are returned ordered by commented_at descending, but support additional sort options. The response includes pagination, total count, and a list of matching review comments, as per the ats_recruitment_coding_test_review_comments schema. Security rules ensure that only authorized tech reviewers (those assigned), HR for the corresponding job posting, or system admins can access the list, with full audit logging of all data accesses.\n\nThe endpoint is not intended to return the full coding test or submission content, only the review comment metadata and content fields. Error handling distinguishes between no results, forbidden access, and deleted resources. Related endpoints include creation, single retrieval, and deletion of comments.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to list review comments for.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the coding test submission under review.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for reviewer comment query.","typeName":"IAtsRecruitmentCodingTestReviewComment.IRequest"},"responseBody":{"description":"Paginated list of review comment summaries matching filter and search criteria, with paging info.","typeName":"IPageIAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index"},{"specification":"This operation retrieves a paginated list (with advanced search and filter) of all coding test review comments for a given submission in the ATS platform. It operates on the ats_recruitment_coding_test_review_comments table, returning summary or full comment details as needed for evaluation workflows. This is critical for reviewers, HR, and system admins to audit or moderate the technical review process.","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments","method":"patch","summary":"Search and retrieve a paginated, filtered list of coding test review comments for a specific submission.","description":"This API provides a way to retrieve a filtered and paginated list of all review comments associated with a specific coding test submission, enabling team members to audit, moderate, or collaboratively evaluate the applicant's coding test. The request body may include search terms, reviewer filters, date ranges, or comment type, supporting flexible UX scenarios for reviewing or audit.\n\nComments are returned ordered by commented_at descending, but support additional sort options. The response includes pagination, total count, and a list of matching review comments, as per the ats_recruitment_coding_test_review_comments schema. Security rules ensure that only authorized tech reviewers (those assigned), HR for the corresponding job posting, or system admins can access the list, with full audit logging of all data accesses.\n\nThe endpoint is not intended to return the full coding test or submission content, only the review comment metadata and content fields. Error handling distinguishes between no results, forbidden access, and deleted resources. Related endpoints include creation, single retrieval, and deletion of comments.","parameters":[{"name":"codingTestId","description":"Unique identifier for the coding test to list review comments for.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"Unique identifier for the coding test submission under review.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filter, and pagination parameters for reviewer comment query.","typeName":"IAtsRecruitmentCodingTestReviewComment.IRequest"},"responseBody":{"description":"Paginated list of review comment summaries matching filter and search criteria, with paging info.","typeName":"IPageIAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index"},{"specification":"This operation updates an existing review comment for a coding test submission. It operates on the ats_recruitment_coding_test_review_comments table, allowing a technical reviewer to modify their comment or evaluation regarding a specific submission. The review comment may include manual or automated feedback, comment type, or update comment timings. The operation enforces authorization so that only the comment's technical reviewer or appropriate roles such as systemAdmin can update the content.\n\nPath parameters uniquely identify the coding test, relevant submission, and the review comment to be updated. The request body (IAtsRecruitmentCodingTestReviewComment.IUpdate) captures new content, type, or additional details required for the comment. Responses return the updated review comment entity for client confirmation.\n\nAccess control ensures that only the original reviewer or allowed admin roles may execute this operation. Attempting to update a comment that the requester does not own or is not authorized for results in a permission error. Validation ensures updated text is non-empty, comment type is valid, and comment timings are logical (e.g., commented_at cannot precede started_at).","description":"Update a coding test review comment in the ATS recruitment system. This endpoint is used by technical reviewers or system administrators to modify existing feedback or commentary on a coding test submission.\n\nAuthorization checks ensure that only technical reviewers associated with the review comment or system administrators can update the comment. The operation references the coding test and its submission for context, enforcing that the specified reviewCommentId actually belongs to the target submission. \n\nBusiness validation ensures the comment text, type, and review timings remain consistent with reviewer workflow policies. Updating soft-deleted or non-existent comments will return an error. Usage of this endpoint is auditable, and updates are tracked for compliance purposes.\n\nRelated operations include creating new review comments, deleting comments, or retrieving comments for a given submission. This operation supports the technical review loop and code quality feedback in talent evaluation processes.","summary":"Update a review comment for a coding test submission (ats_recruitment_coding_test_review_comments).","parameters":[{"name":"codingTestId","description":"ID of the target coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"ID of the submission under the coding test.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"ID of the review comment to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the review comment.","typeName":"IAtsRecruitmentCodingTestReviewComment.IUpdate"},"responseBody":{"description":"The updated coding test review comment entity.","typeName":"IAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"techReviewer","name":"update","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"put"},{"specification":"This operation updates an existing review comment for a coding test submission. It operates on the ats_recruitment_coding_test_review_comments table, allowing a technical reviewer to modify their comment or evaluation regarding a specific submission. The review comment may include manual or automated feedback, comment type, or update comment timings. The operation enforces authorization so that only the comment's technical reviewer or appropriate roles such as systemAdmin can update the content.\n\nPath parameters uniquely identify the coding test, relevant submission, and the review comment to be updated. The request body (IAtsRecruitmentCodingTestReviewComment.IUpdate) captures new content, type, or additional details required for the comment. Responses return the updated review comment entity for client confirmation.\n\nAccess control ensures that only the original reviewer or allowed admin roles may execute this operation. Attempting to update a comment that the requester does not own or is not authorized for results in a permission error. Validation ensures updated text is non-empty, comment type is valid, and comment timings are logical (e.g., commented_at cannot precede started_at).","description":"Update a coding test review comment in the ATS recruitment system. This endpoint is used by technical reviewers or system administrators to modify existing feedback or commentary on a coding test submission.\n\nAuthorization checks ensure that only technical reviewers associated with the review comment or system administrators can update the comment. The operation references the coding test and its submission for context, enforcing that the specified reviewCommentId actually belongs to the target submission. \n\nBusiness validation ensures the comment text, type, and review timings remain consistent with reviewer workflow policies. Updating soft-deleted or non-existent comments will return an error. Usage of this endpoint is auditable, and updates are tracked for compliance purposes.\n\nRelated operations include creating new review comments, deleting comments, or retrieving comments for a given submission. This operation supports the technical review loop and code quality feedback in talent evaluation processes.","summary":"Update a review comment for a coding test submission (ats_recruitment_coding_test_review_comments).","parameters":[{"name":"codingTestId","description":"ID of the target coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"ID of the submission under the coding test.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"ID of the review comment to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the review comment.","typeName":"IAtsRecruitmentCodingTestReviewComment.IUpdate"},"responseBody":{"description":"The updated coding test review comment entity.","typeName":"IAtsRecruitmentCodingTestReviewComment"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"put"},{"specification":"This operation permanently removes a review comment on a coding test submission from the system. It acts on the ats_recruitment_coding_test_review_comments table and is typically used when a technical reviewer or system administrator needs to delete feedback for compliance, correction, or policy reasons. Deletion is a hard operation since the schema lacks a soft-delete-specific column.\n\nThe path uniquely identifies the coding test, the related submission, and the targeted review comment. This operation ensures the comment truly belongs to the specified submission and coding test. On successful deletion, no content is returned.\n\nAuthorization is required and limited to the original technical reviewer owning the comment or a privileged systemAdmin. Attempting to delete someone else's comment, or a non-existent comment, results in an authorization or not found error.","description":"Permanently delete a review comment for a coding test submission in the ATS recruitment system. Technical reviewers or system administrators may use this endpoint to remove comments that are erroneous, inappropriate, or no longer relevant to the evaluation process.\n\nAccess control ensures only the comment owner, or users with the system administrator role, may perform this operation. The operation verifies that the reviewCommentId belongs to the referenced submission and coding test. \n\nThe absence of a soft-delete column in the schema means deleted records cannot be recovered. Deleted comments are removed from the feedback and visibility loop for the submission and are not returned in future review queries. \n\nError handling covers cases where the comment does not exist or the requester is not authorized. This is a destructive operation intended for exceptional cases, not regular reviewer workflow.","summary":"Delete a review comment for a coding test submission (ats_recruitment_coding_test_review_comments).","parameters":[{"name":"codingTestId","description":"ID of the coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"ID of the coding test submission.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"ID of the review comment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"techReviewer","name":"erase","path":"/atsRecruitment/techReviewer/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"delete"},{"specification":"This operation permanently removes a review comment on a coding test submission from the system. It acts on the ats_recruitment_coding_test_review_comments table and is typically used when a technical reviewer or system administrator needs to delete feedback for compliance, correction, or policy reasons. Deletion is a hard operation since the schema lacks a soft-delete-specific column.\n\nThe path uniquely identifies the coding test, the related submission, and the targeted review comment. This operation ensures the comment truly belongs to the specified submission and coding test. On successful deletion, no content is returned.\n\nAuthorization is required and limited to the original technical reviewer owning the comment or a privileged systemAdmin. Attempting to delete someone else's comment, or a non-existent comment, results in an authorization or not found error.","description":"Permanently delete a review comment for a coding test submission in the ATS recruitment system. Technical reviewers or system administrators may use this endpoint to remove comments that are erroneous, inappropriate, or no longer relevant to the evaluation process.\n\nAccess control ensures only the comment owner, or users with the system administrator role, may perform this operation. The operation verifies that the reviewCommentId belongs to the referenced submission and coding test. \n\nThe absence of a soft-delete column in the schema means deleted records cannot be recovered. Deleted comments are removed from the feedback and visibility loop for the submission and are not returned in future review queries. \n\nError handling covers cases where the comment does not exist or the requester is not authorized. This is a destructive operation intended for exceptional cases, not regular reviewer workflow.","summary":"Delete a review comment for a coding test submission (ats_recruitment_coding_test_review_comments).","parameters":[{"name":"codingTestId","description":"ID of the coding test.","schema":{"type":"string","format":"uuid"}},{"name":"submissionId","description":"ID of the coding test submission.","schema":{"type":"string","format":"uuid"}},{"name":"reviewCommentId","description":"ID of the review comment to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/submissions/{submissionId}/reviewComments/{reviewCommentId}","method":"delete"},{"specification":"This operation retrieves a filtered and paginated list of external logs related to a specific coding test from the ats_recruitment_coding_test_external_logs table. These logs provide a detailed audit of integration events with external coding test platforms, such as API requests, callbacks, error events, synchronization attempts, and status notifications. HR recruiters or system administrators typically use this for troubleshooting, integration diagnostics, or platform compliance audits.\n\nThe endpoint expects a request body (IAtsRecruitmentCodingTestExternalLog.IRequest) that can specify filters such as event type, date range, or error occurrence, as well as pagination and sorting preferences. The filtered logs help diagnose issues with coding test delivery or provider callbacks. The response is a paginated list of external log summary entities for ease of processing and review.","description":"Retrieve a paginated and filtered list of external integration logs for a given coding test. This operation supports search and troubleshooting across all external log records tied to a particular coding test instance, including log type (API event, callback, error), timestamps, references to external IDs, and diagnostic messages.\n\nThis endpoint is primarily used by HR recruiters and system administrators when resolving external service delivery problems, audit compliance, or investigating delivery/reporting anomalies for technical assessment platforms. Logs may include both successful and failed interactions, supporting comprehensive analysis. The endpoint references the coding test's logs only; it does not cross into logs of unrelated tests.\n\nValidation ensures request body constraints for filters, pagination (page, perPage), and allows events to be searched by type, date, or error code. The endpoint is critical for compliance and support functions, does not allow record modification, and read operations are logged for audit traceability. Related endpoints include getting a single log record or exporting logs for external review.","summary":"List external integration logs for a coding test (ats_recruitment_coding_test_external_logs).","parameters":[{"name":"codingTestId","description":"ID of the coding test to retrieve external logs for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, pagination, or search criteria for external log retrieval.","typeName":"IAtsRecruitmentCodingTestExternalLog.IRequest"},"responseBody":{"description":"Paginated list of external log summaries for the specified coding test.","typeName":"IPageIAtsRecruitmentCodingTestExternalLog.ISummary"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/externalLogs","method":"patch"},{"specification":"This operation retrieves a filtered and paginated list of external logs related to a specific coding test from the ats_recruitment_coding_test_external_logs table. These logs provide a detailed audit of integration events with external coding test platforms, such as API requests, callbacks, error events, synchronization attempts, and status notifications. HR recruiters or system administrators typically use this for troubleshooting, integration diagnostics, or platform compliance audits.\n\nThe endpoint expects a request body (IAtsRecruitmentCodingTestExternalLog.IRequest) that can specify filters such as event type, date range, or error occurrence, as well as pagination and sorting preferences. The filtered logs help diagnose issues with coding test delivery or provider callbacks. The response is a paginated list of external log summary entities for ease of processing and review.","description":"Retrieve a paginated and filtered list of external integration logs for a given coding test. This operation supports search and troubleshooting across all external log records tied to a particular coding test instance, including log type (API event, callback, error), timestamps, references to external IDs, and diagnostic messages.\n\nThis endpoint is primarily used by HR recruiters and system administrators when resolving external service delivery problems, audit compliance, or investigating delivery/reporting anomalies for technical assessment platforms. Logs may include both successful and failed interactions, supporting comprehensive analysis. The endpoint references the coding test's logs only; it does not cross into logs of unrelated tests.\n\nValidation ensures request body constraints for filters, pagination (page, perPage), and allows events to be searched by type, date, or error code. The endpoint is critical for compliance and support functions, does not allow record modification, and read operations are logged for audit traceability. Related endpoints include getting a single log record or exporting logs for external review.","summary":"List external integration logs for a coding test (ats_recruitment_coding_test_external_logs).","parameters":[{"name":"codingTestId","description":"ID of the coding test to retrieve external logs for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering, pagination, or search criteria for external log retrieval.","typeName":"IAtsRecruitmentCodingTestExternalLog.IRequest"},"responseBody":{"description":"Paginated list of external log summaries for the specified coding test.","typeName":"IPageIAtsRecruitmentCodingTestExternalLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/externalLogs","method":"patch"},{"specification":"This operation retrieves the details of a specific external log event associated with a coding test, using the ats_recruitment_coding_test_external_logs table. HR recruiters or system administrators use this to view comprehensive diagnostic event data, such as API request/response payloads, third-party callback information, timestamps, error messages, and provider metadata for a single log record. The operation is critical for low-level troubleshooting and compliance investigations.\n\nThe endpoint path requires both codingTestId and externalLogId to uniquely identify the log record in the context of a particular coding test. The response includes all fields of the log entity, including event type, payload, related external IDs, messages, and timing data. If the specified log does not exist or does not match the coding test, a 404 or unauthorized error is returned.","description":"Retrieve complete details for one external integration log event for a given coding test. Typically used during integration issue investigation to analyze the technical trace, response payload, error diagnosis, and metadata of exchanges with external coding test platforms.\n\nThis endpoint is intended for authorized HR recruiters and system administrators. It supports incident investigation, compliance recordkeeping, or export for case documentation. The log data structure provides comprehensive diagnostic context, but is read-only and cannot be altered through this endpoint.\n\nRelated endpoints include listing logs for a coding test or exporting event batches. Error handling covers missing or mismatched log identifiers and authorization failures. All access to log details is itself auditable.","summary":"Get details of a specific external log event for a coding test (ats_recruitment_coding_test_external_logs).","parameters":[{"name":"codingTestId","description":"ID of the coding test to which the log belongs.","schema":{"type":"string","format":"uuid"}},{"name":"externalLogId","description":"ID of the external log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full event and payload details for the specified coding test external log entry.","typeName":"IAtsRecruitmentCodingTestExternalLog"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/codingTests/{codingTestId}/externalLogs/{externalLogId}","method":"get"},{"specification":"This operation retrieves the details of a specific external log event associated with a coding test, using the ats_recruitment_coding_test_external_logs table. HR recruiters or system administrators use this to view comprehensive diagnostic event data, such as API request/response payloads, third-party callback information, timestamps, error messages, and provider metadata for a single log record. The operation is critical for low-level troubleshooting and compliance investigations.\n\nThe endpoint path requires both codingTestId and externalLogId to uniquely identify the log record in the context of a particular coding test. The response includes all fields of the log entity, including event type, payload, related external IDs, messages, and timing data. If the specified log does not exist or does not match the coding test, a 404 or unauthorized error is returned.","description":"Retrieve complete details for one external integration log event for a given coding test. Typically used during integration issue investigation to analyze the technical trace, response payload, error diagnosis, and metadata of exchanges with external coding test platforms.\n\nThis endpoint is intended for authorized HR recruiters and system administrators. It supports incident investigation, compliance recordkeeping, or export for case documentation. The log data structure provides comprehensive diagnostic context, but is read-only and cannot be altered through this endpoint.\n\nRelated endpoints include listing logs for a coding test or exporting event batches. Error handling covers missing or mismatched log identifiers and authorization failures. All access to log details is itself auditable.","summary":"Get details of a specific external log event for a coding test (ats_recruitment_coding_test_external_logs).","parameters":[{"name":"codingTestId","description":"ID of the coding test to which the log belongs.","schema":{"type":"string","format":"uuid"}},{"name":"externalLogId","description":"ID of the external log entry to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full event and payload details for the specified coding test external log entry.","typeName":"IAtsRecruitmentCodingTestExternalLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/codingTests/{codingTestId}/externalLogs/{externalLogId}","method":"get"},{"specification":"This operation retrieves a paginated and filtered list of interview schedules and records from the ats_recruitment_interviews table, supporting advanced filtering, searching, and sorting based on relevant interview metadata. The request enables fine-grained queries on interview stage, status, date ranges, and participant properties for HR recruiters, technical reviewers, and applicants (restricted).","path":"/atsRecruitment/hrRecruiter/interviews","method":"patch","summary":"Search and retrieve a filtered, paginated list of interviews (ats_recruitment_interviews).","description":"Retrieve a filtered and paginated list of interview records from the system. This operation provides advanced search capabilities, allowing users to find interviews by stage (e.g., first phase, tech round), status (scheduled, completed, cancelled), date ranges, and notes. Filtering can include associated applicant/application/job posting metadata if permitted by requester role.\n\nSecurity considerations are enforced, with role-based filtering ensuring applicants only see their own interviews, reviewers see assigned interviews, and HR/admin have broader access. Results can be sorted by schedule, creation timestamp, or updated timestamp. Access entails compliance with interview participant and schedule join data, as per requirements in the Prisma schema and business documentation.\n\nTypical use cases include dashboards for HR to monitor upcoming interviews, technical reviewers to manage assigned rounds, and applicants to view their own interview schedule. Pagination parameters allow scalable monitoring in high-velocity recruitment cycles. Error handling provides informative guidance if search criteria violate permissions or result in empty sets.","parameters":[],"requestBody":{"description":"Search and filter parameters for interviews, including stage, status, scheduled date ranges, and participant properties.","typeName":"IAtsRecruitmentInterview.IRequest"},"responseBody":{"description":"Paginated list of interviews and summary data matching search criteria.","typeName":"IPageIAtsRecruitmentInterview.ISummary"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"index"},{"specification":"This operation retrieves detailed information of a single interview specified by its unique identifier (UUID). It provides full interview data from the ats_recruitment_interviews table, including all fields, participant list, schedules, assigned questions, and related status/notes.","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}","method":"get","summary":"Retrieve a single interview's detailed information by interviewId (ats_recruitment_interviews).","description":"Fetch detailed information for a specific interview instance identified by its UUID. The returned data includes all primary interview attributes (title, stage, status, notes), and aggregates relevant scheduling, participant, question, and calendar sync data for context as joined/embedded resources are allowed.\n\nRole-based security ensures only participants (applicant/recruiter/reviewer) and authorized HR or system admins are permitted to view the interview detail. This endpoint supports comprehensive review of the interview's current state, participant confirmations, all scheduled time slots, attached questions (with type/classification), and status change notes. Querying non-existent or unauthorized interviews returns a descriptive error or permission denial message.\n\nAdvanced error handling ensures compliance with participant and schedule relationships and maintains privacy controls over linked personal data, following the ats_recruitment_interviews schema and its relations.","parameters":[{"name":"interviewId","description":"The unique UUID of the interview to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed interview information including high-level properties, all participants, schedules, questions, and related info.","typeName":"IAtsRecruitmentInterview"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"at"},{"specification":"This operation creates a new interview record in the ats_recruitment_interviews table, initializing interview details such as application reference, title, stage, and participants. It establishes the main interview entity, to which schedules, participants, and questions can be attached. Used primarily by HR recruiters to formally schedule new interview rounds in a recruitment pipeline.","path":"/atsRecruitment/hrRecruiter/interviews","method":"post","summary":"Create a new interview record (ats_recruitment_interviews) for a particular application.","description":"This API operation allows an HR recruiter to create and schedule a new interview session against an application. The POST body defines properties including the application UUID, title, interview stage (e.g., tech_round, final), notes, and initial participant list. Upon success, the system returns full details of the newly created interview entity, ready for association with schedules and questions by follow-up operations.\n\nSecurity and business logic require that only HR recruiters (and authorized delegates) can perform interview creation. The provided application must exist and be in an interview-eligible state. Data is validated according to the ats_recruitment_interviews schema, and schedule slots and participants may be managed in associated endpoints. The operation fully participates in audit trails and compliance logging as required by the business requirements.","parameters":[],"requestBody":{"description":"Interview creation payload, including application ID, title, stage, and participant list.","typeName":"IAtsRecruitmentInterview.ICreate"},"responseBody":{"description":"The newly created interview's full entity returned on success.","typeName":"IAtsRecruitmentInterview"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"create"},{"specification":"This operation updates an existing interview record in the ats_recruitment_interviews table, including modifiable fields such as title, notes, stage, and status. Used by HR or privileged users to reschedule, revise participant assignment, or update current state and interview metadata. The operation validates that the interview exists, the actor is authorized (HR recruiter or admin/participant with rights), and applies JSON-merge or patch semantics to preserve previous audit trail data.","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}","method":"put","summary":"Update interview details for a given interviewId (ats_recruitment_interviews).","description":"Allows HR recruiters to update details of a scheduled interview, including the interview's title, stage label, notes, or current status (rescheduled, cancelled, completed, etc). Input payload must specify which fields to update. The operation prescribes business logic for status transitions (e.g., scheduled → completed), with permission checks to prevent unauthorized changes to ineligible interviews.\n\nThe request enforces full validation according to schema requirements, maintains audit trails, and ensures data consistency (e.g., rescheduled interviews cannot lose all participant assignments). Only authorized HR and admin roles can update arbitrary interviews, while regular participants may be limited to confirmation status for themselves. Error handling covers invalid UUIDs, attempts on deleted or archived interviews, and rejection of forbidden state transitions.","parameters":[{"name":"interviewId","description":"The target interview's UUID to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Interview update request specifying updated title, notes, status, participants, or other allowed fields.","typeName":"IAtsRecruitmentInterview.IUpdate"},"responseBody":{"description":"Updated interview entity reflecting all changes as applied.","typeName":"IAtsRecruitmentInterview"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"update"},{"specification":"This operation permanently erases an interview record from the ats_recruitment_interviews table of the ATS platform. System administrators or authorized HR recruiters use this to irreversibly delete an interview instance, including all scheduling, participants, and assigned questions. This is a hard-delete action and cannot be undone or recovered. Audit trails should log the action and responsible actor for compliance.","description":"The purpose of this operation is to enable authorized users—specifically system administrators and HR recruiters—to irreversibly remove an entire interview record from the ATS recruitment system. This includes the interview metadata, scheduling records, participants, and associated interview questions. Once deleted, the information is permanently removed from the database and cannot be restored, supporting GDPR and business data lifecycle policies.\n\nSecurity considerations restrict access to this operation to systemAdmin and hrRecruiter roles. Appropriate authorization checks must be enforced, and all deletion actions must be logged in the audit trail with full context, including actor and timestamp, to ensure compliance and enable post-mortem analysis if necessary.\n\nThe operation directly manipulates the ats_recruitment_interviews table. Any related records in child tables (such as participants, schedules, and questions) must be removed or cascade-deleted to maintain referential integrity. This does not perform any kind of soft deletion; the record is eliminated entirely from persistent storage. Attempts to access the interview after deletion should result in appropriate errors.\n\nRelated operations include interview creation, updating, and listing endpoints, as well as recovery and audit queries for administrative review. If deletion fails due to constraints or non-existent interviewId, clear error messages should be provided.","summary":"Permanently remove an interview from the ats_recruitment_interviews table.","parameters":[{"name":"interviewId","description":"Unique identifier of the interview to be permanently deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"path":"/atsRecruitment/systemAdmin/interviews/{interviewId}","method":"delete","name":"erase"},{"specification":"This operation permanently erases an interview record from the ats_recruitment_interviews table of the ATS platform. System administrators or authorized HR recruiters use this to irreversibly delete an interview instance, including all scheduling, participants, and assigned questions. This is a hard-delete action and cannot be undone or recovered. Audit trails should log the action and responsible actor for compliance.","description":"The purpose of this operation is to enable authorized users—specifically system administrators and HR recruiters—to irreversibly remove an entire interview record from the ATS recruitment system. This includes the interview metadata, scheduling records, participants, and associated interview questions. Once deleted, the information is permanently removed from the database and cannot be restored, supporting GDPR and business data lifecycle policies.\n\nSecurity considerations restrict access to this operation to systemAdmin and hrRecruiter roles. Appropriate authorization checks must be enforced, and all deletion actions must be logged in the audit trail with full context, including actor and timestamp, to ensure compliance and enable post-mortem analysis if necessary.\n\nThe operation directly manipulates the ats_recruitment_interviews table. Any related records in child tables (such as participants, schedules, and questions) must be removed or cascade-deleted to maintain referential integrity. This does not perform any kind of soft deletion; the record is eliminated entirely from persistent storage. Attempts to access the interview after deletion should result in appropriate errors.\n\nRelated operations include interview creation, updating, and listing endpoints, as well as recovery and audit queries for administrative review. If deletion fails due to constraints or non-existent interviewId, clear error messages should be provided.","summary":"Permanently remove an interview from the ats_recruitment_interviews table.","parameters":[{"name":"interviewId","description":"Unique identifier of the interview to be permanently deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"hrRecruiter","authorizationType":null,"path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}","method":"delete","name":"erase"},{"specification":"Retrieve a paginated, filterable list of all participants associated with a specific interview record from the ats_recruitment_interview_participants table in the ATS recruitment system. Used by authorized users to list, filter, or review all assigned participants for interview management and scheduling purposes. Supports advanced searching by role or status if required.","description":"This endpoint enables authorized users—such as system administrators, HR recruiters, and relevant tech reviewers—to access a complete, up-to-date listing of all participants associated with a particular interview record. Each participant entry includes actor role (applicant, recruiter, reviewer, observer), relation to the interview, invitation timestamp, and current confirmation status. Responses may include filtering, sorting, and pagination of records as needed for listings with many participants.\n\nAccess is role-restricted for privacy and operational security, with systemAdmin, hrRecruiter, and techReviewer roles allowed. The main table involved is ats_recruitment_interview_participants, with relationships to ats_recruitment_interviews (parent) and the relevant actor entity.\n\nBusiness rules should enforce that only users assigned to or responsible for the interview may access this list, and all accesses should be logged in the access log table for compliance. Security policies ensure that applicant details are not exposed beyond authorized users. The endpoint must also validate that the interviewId exists prior to searching, with appropriate errors for missing or deleted records.\n\nRelated API operations include creating, updating, or deleting interview participants, as well as retrieving interview and schedule details. If the interviewId does not exist, return a clear error indicating the issue.","summary":"Retrieve all participants for a specific interview from ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the parent interview whose participants are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination options for participant listing (optional fields).","typeName":"IAtsRecruitmentInterviewParticipant.IRequest"},"responseBody":{"description":"Paginated and filtered list of participants for the specified interview.","typeName":"IPageIAtsRecruitmentInterviewParticipant"},"authorizationRole":"systemAdmin","authorizationType":null,"path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/participants","method":"patch","name":"index"},{"specification":"Retrieve a paginated, filterable list of all participants associated with a specific interview record from the ats_recruitment_interview_participants table in the ATS recruitment system. Used by authorized users to list, filter, or review all assigned participants for interview management and scheduling purposes. Supports advanced searching by role or status if required.","description":"This endpoint enables authorized users—such as system administrators, HR recruiters, and relevant tech reviewers—to access a complete, up-to-date listing of all participants associated with a particular interview record. Each participant entry includes actor role (applicant, recruiter, reviewer, observer), relation to the interview, invitation timestamp, and current confirmation status. Responses may include filtering, sorting, and pagination of records as needed for listings with many participants.\n\nAccess is role-restricted for privacy and operational security, with systemAdmin, hrRecruiter, and techReviewer roles allowed. The main table involved is ats_recruitment_interview_participants, with relationships to ats_recruitment_interviews (parent) and the relevant actor entity.\n\nBusiness rules should enforce that only users assigned to or responsible for the interview may access this list, and all accesses should be logged in the access log table for compliance. Security policies ensure that applicant details are not exposed beyond authorized users. The endpoint must also validate that the interviewId exists prior to searching, with appropriate errors for missing or deleted records.\n\nRelated API operations include creating, updating, or deleting interview participants, as well as retrieving interview and schedule details. If the interviewId does not exist, return a clear error indicating the issue.","summary":"Retrieve all participants for a specific interview from ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the parent interview whose participants are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination options for participant listing (optional fields).","typeName":"IAtsRecruitmentInterviewParticipant.IRequest"},"responseBody":{"description":"Paginated and filtered list of participants for the specified interview.","typeName":"IPageIAtsRecruitmentInterviewParticipant"},"authorizationRole":"hrRecruiter","authorizationType":null,"path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/participants","method":"patch","name":"index"},{"specification":"Retrieve a paginated, filterable list of all participants associated with a specific interview record from the ats_recruitment_interview_participants table in the ATS recruitment system. Used by authorized users to list, filter, or review all assigned participants for interview management and scheduling purposes. Supports advanced searching by role or status if required.","description":"This endpoint enables authorized users—such as system administrators, HR recruiters, and relevant tech reviewers—to access a complete, up-to-date listing of all participants associated with a particular interview record. Each participant entry includes actor role (applicant, recruiter, reviewer, observer), relation to the interview, invitation timestamp, and current confirmation status. Responses may include filtering, sorting, and pagination of records as needed for listings with many participants.\n\nAccess is role-restricted for privacy and operational security, with systemAdmin, hrRecruiter, and techReviewer roles allowed. The main table involved is ats_recruitment_interview_participants, with relationships to ats_recruitment_interviews (parent) and the relevant actor entity.\n\nBusiness rules should enforce that only users assigned to or responsible for the interview may access this list, and all accesses should be logged in the access log table for compliance. Security policies ensure that applicant details are not exposed beyond authorized users. The endpoint must also validate that the interviewId exists prior to searching, with appropriate errors for missing or deleted records.\n\nRelated API operations include creating, updating, or deleting interview participants, as well as retrieving interview and schedule details. If the interviewId does not exist, return a clear error indicating the issue.","summary":"Retrieve all participants for a specific interview from ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the parent interview whose participants are to be listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Filtering and pagination options for participant listing (optional fields).","typeName":"IAtsRecruitmentInterviewParticipant.IRequest"},"responseBody":{"description":"Paginated and filtered list of participants for the specified interview.","typeName":"IPageIAtsRecruitmentInterviewParticipant"},"authorizationRole":"techReviewer","authorizationType":null,"path":"/atsRecruitment/techReviewer/interviews/{interviewId}/participants","method":"patch","name":"index"},{"specification":"Retrieve detailed participant information for a specific participant within an interview by participantId, as stored in the ats_recruitment_interview_participants table. Used for access control, audit, and operational management of interview attendees. Exposes status, invitation timestamp, actor type, and confirmation status for detailed review by authorized staff.","description":"This operation allows authorized HR recruiters, system administrators, and tech reviewers to obtain detailed information about a single interview participant. Details include the participant’s role (e.g., applicant, recruiter, tech reviewer), the time of invitation, their current confirmation status (pending, accepted, declined), and the relationship to the parent interview. This is useful for pre-interview preparation, operational control, and compliance auditing.\n\nAccess restrictions are applied to maintain privacy and business compliance, with only relevant users able to view individual participant data. All accesses are to be logged in compliance with ATS audit and access requirements. Input validation must ensure both interviewId and participantId refer to valid, existing records, with clear errors for missing or deleted participants or interviews.\n\nThe schema source is the ats_recruitment_interview_participants table, joined with related identity and interview data for context. Other related endpoints include participant listing/search as well as update or removal actions. Error cases may involve inexistent participantIds or unauthorized access attempts, for which meaningful error responses must be provided.","summary":"Retrieve details for a specific interview participant from ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the interview associated with the participant.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier for the specific participant within the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified interview participant.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationRole":"systemAdmin","authorizationType":null,"path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/participants/{participantId}","method":"get","name":"at"},{"specification":"Retrieve detailed participant information for a specific participant within an interview by participantId, as stored in the ats_recruitment_interview_participants table. Used for access control, audit, and operational management of interview attendees. Exposes status, invitation timestamp, actor type, and confirmation status for detailed review by authorized staff.","description":"This operation allows authorized HR recruiters, system administrators, and tech reviewers to obtain detailed information about a single interview participant. Details include the participant’s role (e.g., applicant, recruiter, tech reviewer), the time of invitation, their current confirmation status (pending, accepted, declined), and the relationship to the parent interview. This is useful for pre-interview preparation, operational control, and compliance auditing.\n\nAccess restrictions are applied to maintain privacy and business compliance, with only relevant users able to view individual participant data. All accesses are to be logged in compliance with ATS audit and access requirements. Input validation must ensure both interviewId and participantId refer to valid, existing records, with clear errors for missing or deleted participants or interviews.\n\nThe schema source is the ats_recruitment_interview_participants table, joined with related identity and interview data for context. Other related endpoints include participant listing/search as well as update or removal actions. Error cases may involve inexistent participantIds or unauthorized access attempts, for which meaningful error responses must be provided.","summary":"Retrieve details for a specific interview participant from ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the interview associated with the participant.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier for the specific participant within the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified interview participant.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationRole":"hrRecruiter","authorizationType":null,"path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/participants/{participantId}","method":"get","name":"at"},{"specification":"Retrieve detailed participant information for a specific participant within an interview by participantId, as stored in the ats_recruitment_interview_participants table. Used for access control, audit, and operational management of interview attendees. Exposes status, invitation timestamp, actor type, and confirmation status for detailed review by authorized staff.","description":"This operation allows authorized HR recruiters, system administrators, and tech reviewers to obtain detailed information about a single interview participant. Details include the participant’s role (e.g., applicant, recruiter, tech reviewer), the time of invitation, their current confirmation status (pending, accepted, declined), and the relationship to the parent interview. This is useful for pre-interview preparation, operational control, and compliance auditing.\n\nAccess restrictions are applied to maintain privacy and business compliance, with only relevant users able to view individual participant data. All accesses are to be logged in compliance with ATS audit and access requirements. Input validation must ensure both interviewId and participantId refer to valid, existing records, with clear errors for missing or deleted participants or interviews.\n\nThe schema source is the ats_recruitment_interview_participants table, joined with related identity and interview data for context. Other related endpoints include participant listing/search as well as update or removal actions. Error cases may involve inexistent participantIds or unauthorized access attempts, for which meaningful error responses must be provided.","summary":"Retrieve details for a specific interview participant from ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the interview associated with the participant.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier for the specific participant within the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information for the specified interview participant.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationRole":"techReviewer","authorizationType":null,"path":"/atsRecruitment/techReviewer/interviews/{interviewId}/participants/{participantId}","method":"get","name":"at"},{"specification":"Create a new participant entry for an existing interview in the ats_recruitment_interview_participants table. This enables HR recruiters or system administrators to add an applicant, reviewer, or observer to an interview with all necessary role and confirmation metadata. Enforces participant uniqueness and validates that the parent interview exists before addition.","description":"This operation allows authorized HR recruiters and system administrators to add a new participant to an interview record. The new participant may be an applicant, recruiter, tech reviewer, or other actor needed for the session. Creation includes participant role, actor reference, initial invitation timestamp, and default confirmation status (e.g., pending).\n\nSecurity requires validation that only privileged users may create participants and that the referenced interviewId exists and is active. If attempting to add a duplicate participant (same actor/interview/role), the system must reject with a unique constraint violation. All additions are logged for compliance and future participant management.\n\nThis operation works directly with the ats_recruitment_interview_participants table, with necessary foreign keys to the interview and actor tables. Related API operations include participant listing, deletion, and interview retrieval. Inputs must be validated for type, completeness, and referential integrity; errors for nonexistent interviews or actors should yield clear business errors.\n\nEdge cases include attempts to add participants to deleted or closed interviews, which must fail gracefully. Successful completion returns the full participant record as confirmation.","summary":"Add a new participant to an interview in ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the parent interview to which the participant will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new interview participant (actor, role, etc.).","typeName":"IAtsRecruitmentInterviewParticipant.ICreate"},"responseBody":{"description":"Detailed participant record after successful creation.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationRole":"systemAdmin","authorizationType":null,"path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/participants","method":"post","name":"create"},{"specification":"Create a new participant entry for an existing interview in the ats_recruitment_interview_participants table. This enables HR recruiters or system administrators to add an applicant, reviewer, or observer to an interview with all necessary role and confirmation metadata. Enforces participant uniqueness and validates that the parent interview exists before addition.","description":"This operation allows authorized HR recruiters and system administrators to add a new participant to an interview record. The new participant may be an applicant, recruiter, tech reviewer, or other actor needed for the session. Creation includes participant role, actor reference, initial invitation timestamp, and default confirmation status (e.g., pending).\n\nSecurity requires validation that only privileged users may create participants and that the referenced interviewId exists and is active. If attempting to add a duplicate participant (same actor/interview/role), the system must reject with a unique constraint violation. All additions are logged for compliance and future participant management.\n\nThis operation works directly with the ats_recruitment_interview_participants table, with necessary foreign keys to the interview and actor tables. Related API operations include participant listing, deletion, and interview retrieval. Inputs must be validated for type, completeness, and referential integrity; errors for nonexistent interviews or actors should yield clear business errors.\n\nEdge cases include attempts to add participants to deleted or closed interviews, which must fail gracefully. Successful completion returns the full participant record as confirmation.","summary":"Add a new participant to an interview in ats_recruitment_interview_participants.","parameters":[{"name":"interviewId","description":"Unique identifier for the parent interview to which the participant will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to create a new interview participant (actor, role, etc.).","typeName":"IAtsRecruitmentInterviewParticipant.ICreate"},"responseBody":{"description":"Detailed participant record after successful creation.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationRole":"hrRecruiter","authorizationType":null,"path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/participants","method":"post","name":"create"},{"specification":"This operation updates the details of a specific participant in an interview. It is associated with the ats_recruitment_interview_participants table, which manages the participants for each interview. The participant can be an applicant, HR recruiter, or technical reviewer, and their role and confirmation status may be updated by authorized users.\n\nThe operation ensures the integrity of participant roles, allowing HR recruiters and system administrators to update details such as the participant's role (e.g., applicant, recruiter, reviewer) and confirmation status (e.g., accepted, declined, pending). It supports fine-grained participant management as interview schedules change or role assignments are adjusted.\n\nSecurity is enforced so that only users with hrRecruiter or systemAdmin roles can modify interview participants. Changes are logged for audit and compliance, in line with the system's requirements for role-based access and historical tracking.\n\nIf the update does not pass validation (such as invalid role, non-existing interview or participant, or forbidden role transitions), the API returns appropriate error responses with meaningful business messages. Related operations may include GET for fetching participant info or DELETE for removing participants.","description":"Update details for a specific interview participant by interview and participant ID. This can change participant role (applicant, recruiter, reviewer) or confirmation status (pending, accepted, declined, tentative).\n\nThe interview participant entity is part of ats_recruitment_interview_participants, which serves as the link between interviews and their human actors. Only HR recruiters or system administrators can update participant details to ensure privileged and authorized modification.\n\nChanges are logged for audit compliance, and improper access is denied with explanatory error messages. Edits must respect the participant's relationship (e.g., an applicant cannot be changed to a reviewer arbitrarily).\n\nValidation covers interview existence, participant presence, allowed status transitions, and role constraints. Audit logs will capture who performed the edit and what details were modified for incident forensics.\n\nThis API should be used in conjunction with GET participants, PATCH for listing schedules, and DELETE for participant removal as part of broader interview and participant management.","summary":"Update interview participant details by interview and participant ID (ats_recruitment_interview_participants).","parameters":[{"name":"interviewId","description":"Unique identifier for the target interview.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier for the interview participant to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update for the interview participant (e.g., role, confirmation status).","typeName":"IAtsRecruitmentInterviewParticipant.IUpdate"},"responseBody":{"description":"The updated interview participant information.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"update","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/participants/{participantId}","method":"put"},{"specification":"This operation updates the details of a specific participant in an interview. It is associated with the ats_recruitment_interview_participants table, which manages the participants for each interview. The participant can be an applicant, HR recruiter, or technical reviewer, and their role and confirmation status may be updated by authorized users.\n\nThe operation ensures the integrity of participant roles, allowing HR recruiters and system administrators to update details such as the participant's role (e.g., applicant, recruiter, reviewer) and confirmation status (e.g., accepted, declined, pending). It supports fine-grained participant management as interview schedules change or role assignments are adjusted.\n\nSecurity is enforced so that only users with hrRecruiter or systemAdmin roles can modify interview participants. Changes are logged for audit and compliance, in line with the system's requirements for role-based access and historical tracking.\n\nIf the update does not pass validation (such as invalid role, non-existing interview or participant, or forbidden role transitions), the API returns appropriate error responses with meaningful business messages. Related operations may include GET for fetching participant info or DELETE for removing participants.","description":"Update details for a specific interview participant by interview and participant ID. This can change participant role (applicant, recruiter, reviewer) or confirmation status (pending, accepted, declined, tentative).\n\nThe interview participant entity is part of ats_recruitment_interview_participants, which serves as the link between interviews and their human actors. Only HR recruiters or system administrators can update participant details to ensure privileged and authorized modification.\n\nChanges are logged for audit compliance, and improper access is denied with explanatory error messages. Edits must respect the participant's relationship (e.g., an applicant cannot be changed to a reviewer arbitrarily).\n\nValidation covers interview existence, participant presence, allowed status transitions, and role constraints. Audit logs will capture who performed the edit and what details were modified for incident forensics.\n\nThis API should be used in conjunction with GET participants, PATCH for listing schedules, and DELETE for participant removal as part of broader interview and participant management.","summary":"Update interview participant details by interview and participant ID (ats_recruitment_interview_participants).","parameters":[{"name":"interviewId","description":"Unique identifier for the target interview.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier for the interview participant to be updated.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information to update for the interview participant (e.g., role, confirmation status).","typeName":"IAtsRecruitmentInterviewParticipant.IUpdate"},"responseBody":{"description":"The updated interview participant information.","typeName":"IAtsRecruitmentInterviewParticipant"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/participants/{participantId}","method":"put"},{"specification":"This operation removes a participant from an interview entity. It maps to the ats_recruitment_interview_participants table and enables authorized users (HR recruiters or system administrators) to delete a participant, revoking their association with the interview instance.","description":"Erase (permanently remove) a participant from an interview given both the interview and participant IDs. The operation is mapped to ats_recruitment_interview_participants and supports compliance/audit by logging who performed the deletion.\n\nThis API endpoint is protected—only accessible to users with hrRecruiter or systemAdmin roles. Deletion is permanent (not soft-delete), removing the participant link and preventing further notifications or participation in the scheduled interview. The participant entity is not deleted from the system, only the association with this specific interview.\n\nIf the participant does not exist for the given interview, a not found error is returned. Business logic prevents removing mandatory participants (e.g., the last applicant in mandatory configuration) and enforces schedule validity.\n\nTypical workflow includes using this API after a change in schedule or participant assignment, or to manage replacements/cancelations.","summary":"Remove a participant from an interview (ats_recruitment_interview_participants).","parameters":[{"name":"interviewId","description":"Unique identifier for the interview containing the participant.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier of the participant to be removed from the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"hrRecruiter","name":"erase","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/participants/{participantId}","method":"delete"},{"specification":"This operation removes a participant from an interview entity. It maps to the ats_recruitment_interview_participants table and enables authorized users (HR recruiters or system administrators) to delete a participant, revoking their association with the interview instance.","description":"Erase (permanently remove) a participant from an interview given both the interview and participant IDs. The operation is mapped to ats_recruitment_interview_participants and supports compliance/audit by logging who performed the deletion.\n\nThis API endpoint is protected—only accessible to users with hrRecruiter or systemAdmin roles. Deletion is permanent (not soft-delete), removing the participant link and preventing further notifications or participation in the scheduled interview. The participant entity is not deleted from the system, only the association with this specific interview.\n\nIf the participant does not exist for the given interview, a not found error is returned. Business logic prevents removing mandatory participants (e.g., the last applicant in mandatory configuration) and enforces schedule validity.\n\nTypical workflow includes using this API after a change in schedule or participant assignment, or to manage replacements/cancelations.","summary":"Remove a participant from an interview (ats_recruitment_interview_participants).","parameters":[{"name":"interviewId","description":"Unique identifier for the interview containing the participant.","schema":{"type":"string","format":"uuid"}},{"name":"participantId","description":"Unique identifier of the participant to be removed from the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"systemAdmin","name":"erase","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/participants/{participantId}","method":"delete"},{"specification":"This operation retrieves a paginated, filtered list of all schedule slots associated with a specific interview, supporting advanced search and management scenarios. It is associated with the ats_recruitment_interview_schedules table, which maintains all proposed and confirmed time slots for interviews.\n\nHR recruiters and system administrators can use this to manage, review, and query all scheduling scenarios, including proposed, confirmed, rescheduled, or canceled interview slots. The operation supports filtering by status and sorting to facilitate complex scheduling workflows.","description":"Search and retrieve a filtered, paginated list of interview schedules (slots) for a given interview. This is mapped to the ats_recruitment_interview_schedules table and enables advanced query parameters (such as slot status, creation date, order, etc.).\n\nHR recruiters and system administrators can use this API to audit or manage schedules, verify correct slot assignments, identify conflicts (e.g., double bookings or cancellations), and review past/future slots.\n\nSecurity: Only users with hrRecruiter or systemAdmin roles can access this endpoint. The query allows for flexible retrieval with pagination and filtering, making it suitable for calendar integration, conflict checks, or UI timeline displays.\n\nTypical sequence: called before GET schedule by schedule ID for detail view; supports high-level schedule management and reporting needs.","summary":"List and search all schedule slots for a specific interview (ats_recruitment_interview_schedules, advanced query).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose schedules are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Parameters for advanced search, filtering, and pagination of interview schedules.","typeName":"IAtsRecruitmentInterviewSchedule.IRequest"},"responseBody":{"description":"Paginated, filtered results containing the interview schedule slots.","typeName":"IPageIAtsRecruitmentInterviewSchedule"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"index","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/schedules","method":"patch"},{"specification":"This operation retrieves a paginated, filtered list of all schedule slots associated with a specific interview, supporting advanced search and management scenarios. It is associated with the ats_recruitment_interview_schedules table, which maintains all proposed and confirmed time slots for interviews.\n\nHR recruiters and system administrators can use this to manage, review, and query all scheduling scenarios, including proposed, confirmed, rescheduled, or canceled interview slots. The operation supports filtering by status and sorting to facilitate complex scheduling workflows.","description":"Search and retrieve a filtered, paginated list of interview schedules (slots) for a given interview. This is mapped to the ats_recruitment_interview_schedules table and enables advanced query parameters (such as slot status, creation date, order, etc.).\n\nHR recruiters and system administrators can use this API to audit or manage schedules, verify correct slot assignments, identify conflicts (e.g., double bookings or cancellations), and review past/future slots.\n\nSecurity: Only users with hrRecruiter or systemAdmin roles can access this endpoint. The query allows for flexible retrieval with pagination and filtering, making it suitable for calendar integration, conflict checks, or UI timeline displays.\n\nTypical sequence: called before GET schedule by schedule ID for detail view; supports high-level schedule management and reporting needs.","summary":"List and search all schedule slots for a specific interview (ats_recruitment_interview_schedules, advanced query).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose schedules are being searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Parameters for advanced search, filtering, and pagination of interview schedules.","typeName":"IAtsRecruitmentInterviewSchedule.IRequest"},"responseBody":{"description":"Paginated, filtered results containing the interview schedule slots.","typeName":"IPageIAtsRecruitmentInterviewSchedule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/schedules","method":"patch"},{"specification":"This operation retrieves detailed information about a specific time slot (schedule) of an interview. It is mapped to the ats_recruitment_interview_schedules table, which tracks detailed scheduling information such as start/end time, timezone, status, and audit metadata.\n\nThe endpoint is used for schedule review, audits, and management by HR recruiters and system administrators. It returns complete detail for the specified interview and schedule slot, supporting UI display, manual confirmation, or troubleshooting.","description":"Retrieve detailed information for a single interview schedule slot. The operation requires both the interviewId and scheduleId (referencing ats_recruitment_interview_schedules). Only accessible to authorized HR or administrator actors for compliance.\n\nReturned information includes start/end time, timezone, schedule status, source, audit trail, and related notes or cancellation reason. Validation enforces that the schedule belongs to the provided interview. Access is logged for audit/compliance. Typical related operations are listing all slots via PATCH and updating slots separately.","summary":"Get details for a specific interview schedule slot (ats_recruitment_interview_schedules record).","parameters":[{"name":"interviewId","description":"The unique ID of the interview to which the schedule belongs.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"The unique identifier of the schedule slot within the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed schedule slot information for the interview.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/schedules/{scheduleId}","method":"get"},{"specification":"This operation retrieves detailed information about a specific time slot (schedule) of an interview. It is mapped to the ats_recruitment_interview_schedules table, which tracks detailed scheduling information such as start/end time, timezone, status, and audit metadata.\n\nThe endpoint is used for schedule review, audits, and management by HR recruiters and system administrators. It returns complete detail for the specified interview and schedule slot, supporting UI display, manual confirmation, or troubleshooting.","description":"Retrieve detailed information for a single interview schedule slot. The operation requires both the interviewId and scheduleId (referencing ats_recruitment_interview_schedules). Only accessible to authorized HR or administrator actors for compliance.\n\nReturned information includes start/end time, timezone, schedule status, source, audit trail, and related notes or cancellation reason. Validation enforces that the schedule belongs to the provided interview. Access is logged for audit/compliance. Typical related operations are listing all slots via PATCH and updating slots separately.","summary":"Get details for a specific interview schedule slot (ats_recruitment_interview_schedules record).","parameters":[{"name":"interviewId","description":"The unique ID of the interview to which the schedule belongs.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"The unique identifier of the schedule slot within the interview.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed schedule slot information for the interview.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/schedules/{scheduleId}","method":"get"},{"specification":"This operation creates a new interview schedule slot for a specified interview. It is designed for HR recruiters, system administrators, or technical reviewers to add available times (slots) for an interview participant group. The schedule includes start/end times, timezone, and the scheduling source (e.g., manual, google_calendar, auto), and must confirm that the interview exists and is not canceled. The operation is associated with the ats_recruitment_interview_schedules table, and business validation includes preventing overlapping schedules and ensuring only authorized participants can add or propose new times. The operation logs scheduling events for audit and compliance tracking.","description":"This API operation creates a new schedule entry linked to a specific interview in the ATS recruitment platform. The schedule slot includes fields for start and end times (UTC), timezone, source (manual or automated), and confirmation or proposal status. Operation ensures that the referenced interview exists and is active, and checks for time conflicts to prevent overlapping or duplicate booking. Only users assigned as participant roles (HR, applicant, techReviewer) for this interview may invoke this operation.\n\nUpon creation, the slot is checked to confirm it does not conflict with existing slots for the interview, and will fail gracefully with a meaningful error if there are duplications or the referenced interview is not eligible for new scheduling. The record stores the reason for any cancellation or status update (e.g., rescheduled, cancelled, confirmed).\n\nSecurity: Only authorized HR recruiters, related applicants, or tech reviewers can add schedules. All invocations are logged in audit trails for compliance and traceability. Related operations are PUT (update slot), DELETE (cancel slot), and PATCH (list slots for interview).","summary":"Create a new interview schedule slot for a specific interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview for which to create a new schedule.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the interview schedule slot to create, including start/end time, timezone, schedule source, participant data, and confirmation status.","typeName":"IAtsRecruitmentInterviewSchedule.ICreate"},"responseBody":{"description":"The created interview schedule slot record, including all scheduling and participant details.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"create","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/schedules","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation creates a new interview schedule slot for a specified interview. It is designed for HR recruiters, system administrators, or technical reviewers to add available times (slots) for an interview participant group. The schedule includes start/end times, timezone, and the scheduling source (e.g., manual, google_calendar, auto), and must confirm that the interview exists and is not canceled. The operation is associated with the ats_recruitment_interview_schedules table, and business validation includes preventing overlapping schedules and ensuring only authorized participants can add or propose new times. The operation logs scheduling events for audit and compliance tracking.","description":"This API operation creates a new schedule entry linked to a specific interview in the ATS recruitment platform. The schedule slot includes fields for start and end times (UTC), timezone, source (manual or automated), and confirmation or proposal status. Operation ensures that the referenced interview exists and is active, and checks for time conflicts to prevent overlapping or duplicate booking. Only users assigned as participant roles (HR, applicant, techReviewer) for this interview may invoke this operation.\n\nUpon creation, the slot is checked to confirm it does not conflict with existing slots for the interview, and will fail gracefully with a meaningful error if there are duplications or the referenced interview is not eligible for new scheduling. The record stores the reason for any cancellation or status update (e.g., rescheduled, cancelled, confirmed).\n\nSecurity: Only authorized HR recruiters, related applicants, or tech reviewers can add schedules. All invocations are logged in audit trails for compliance and traceability. Related operations are PUT (update slot), DELETE (cancel slot), and PATCH (list slots for interview).","summary":"Create a new interview schedule slot for a specific interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview for which to create a new schedule.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the interview schedule slot to create, including start/end time, timezone, schedule source, participant data, and confirmation status.","typeName":"IAtsRecruitmentInterviewSchedule.ICreate"},"responseBody":{"description":"The created interview schedule slot record, including all scheduling and participant details.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"create","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/schedules","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new interview schedule slot for a specified interview. It is designed for HR recruiters, system administrators, or technical reviewers to add available times (slots) for an interview participant group. The schedule includes start/end times, timezone, and the scheduling source (e.g., manual, google_calendar, auto), and must confirm that the interview exists and is not canceled. The operation is associated with the ats_recruitment_interview_schedules table, and business validation includes preventing overlapping schedules and ensuring only authorized participants can add or propose new times. The operation logs scheduling events for audit and compliance tracking.","description":"This API operation creates a new schedule entry linked to a specific interview in the ATS recruitment platform. The schedule slot includes fields for start and end times (UTC), timezone, source (manual or automated), and confirmation or proposal status. Operation ensures that the referenced interview exists and is active, and checks for time conflicts to prevent overlapping or duplicate booking. Only users assigned as participant roles (HR, applicant, techReviewer) for this interview may invoke this operation.\n\nUpon creation, the slot is checked to confirm it does not conflict with existing slots for the interview, and will fail gracefully with a meaningful error if there are duplications or the referenced interview is not eligible for new scheduling. The record stores the reason for any cancellation or status update (e.g., rescheduled, cancelled, confirmed).\n\nSecurity: Only authorized HR recruiters, related applicants, or tech reviewers can add schedules. All invocations are logged in audit trails for compliance and traceability. Related operations are PUT (update slot), DELETE (cancel slot), and PATCH (list slots for interview).","summary":"Create a new interview schedule slot for a specific interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview for which to create a new schedule.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Details of the interview schedule slot to create, including start/end time, timezone, schedule source, participant data, and confirmation status.","typeName":"IAtsRecruitmentInterviewSchedule.ICreate"},"responseBody":{"description":"The created interview schedule slot record, including all scheduling and participant details.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"create","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/schedules","method":"post","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation updates an existing interview schedule slot (time proposal) for a given interview. Supported updates include adjusting start/end times, changing timezone, or modifying the status (confirmed, rescheduled, cancelled, etc.). It is associated with the ats_recruitment_interview_schedules table and supports only users assigned to the interview (HR, applicant, techReviewer). Business logic validates that updates do not create overlapping slots and that only modifiable fields are altered. All actions are audit-logged.","description":"This API operation updates details of an existing schedule slot for a particular interview. Updatable fields include start_at, end_at, timezone, schedule source, and schedule status or cancellation reason. It requires checking that the interview and schedule both exist, are not deleted, and are eligible for update according to the current status (e.g., slots that are already confirmed as completed or cancelled cannot be updated).\n\nValidation rules enforce that the new slot time does not overlap with any other slot linked to this interview, and that status transitions are allowed per business policy (e.g., pending→confirmed, pending→cancelled).\n\nSecurity enforcement ensures that only participants (HR, related applicant, techReviewer) associated with the interview or system administrators may invoke this update. All updates are recorded in the audit trail for compliance and subsequent event notification. Related operations are POST (create slot), DELETE (cancel slot), and PATCH (list schedules).\n\nIf the operation fails due to validation, proper error messages are returned to guide the user (e.g., \"proposed time conflicts with another confirmed slot“).","summary":"Update an existing interview schedule slot for a given interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"Unique identifier of the schedule slot to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the interview schedule slot, such as timing, timezone, source, or status change.","typeName":"IAtsRecruitmentInterviewSchedule.IUpdate"},"responseBody":{"description":"The updated interview schedule slot record with all new values after modification.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"update","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/schedules/{scheduleId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation updates an existing interview schedule slot (time proposal) for a given interview. Supported updates include adjusting start/end times, changing timezone, or modifying the status (confirmed, rescheduled, cancelled, etc.). It is associated with the ats_recruitment_interview_schedules table and supports only users assigned to the interview (HR, applicant, techReviewer). Business logic validates that updates do not create overlapping slots and that only modifiable fields are altered. All actions are audit-logged.","description":"This API operation updates details of an existing schedule slot for a particular interview. Updatable fields include start_at, end_at, timezone, schedule source, and schedule status or cancellation reason. It requires checking that the interview and schedule both exist, are not deleted, and are eligible for update according to the current status (e.g., slots that are already confirmed as completed or cancelled cannot be updated).\n\nValidation rules enforce that the new slot time does not overlap with any other slot linked to this interview, and that status transitions are allowed per business policy (e.g., pending→confirmed, pending→cancelled).\n\nSecurity enforcement ensures that only participants (HR, related applicant, techReviewer) associated with the interview or system administrators may invoke this update. All updates are recorded in the audit trail for compliance and subsequent event notification. Related operations are POST (create slot), DELETE (cancel slot), and PATCH (list schedules).\n\nIf the operation fails due to validation, proper error messages are returned to guide the user (e.g., \"proposed time conflicts with another confirmed slot“).","summary":"Update an existing interview schedule slot for a given interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"Unique identifier of the schedule slot to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the interview schedule slot, such as timing, timezone, source, or status change.","typeName":"IAtsRecruitmentInterviewSchedule.IUpdate"},"responseBody":{"description":"The updated interview schedule slot record with all new values after modification.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"update","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/schedules/{scheduleId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation updates an existing interview schedule slot (time proposal) for a given interview. Supported updates include adjusting start/end times, changing timezone, or modifying the status (confirmed, rescheduled, cancelled, etc.). It is associated with the ats_recruitment_interview_schedules table and supports only users assigned to the interview (HR, applicant, techReviewer). Business logic validates that updates do not create overlapping slots and that only modifiable fields are altered. All actions are audit-logged.","description":"This API operation updates details of an existing schedule slot for a particular interview. Updatable fields include start_at, end_at, timezone, schedule source, and schedule status or cancellation reason. It requires checking that the interview and schedule both exist, are not deleted, and are eligible for update according to the current status (e.g., slots that are already confirmed as completed or cancelled cannot be updated).\n\nValidation rules enforce that the new slot time does not overlap with any other slot linked to this interview, and that status transitions are allowed per business policy (e.g., pending→confirmed, pending→cancelled).\n\nSecurity enforcement ensures that only participants (HR, related applicant, techReviewer) associated with the interview or system administrators may invoke this update. All updates are recorded in the audit trail for compliance and subsequent event notification. Related operations are POST (create slot), DELETE (cancel slot), and PATCH (list schedules).\n\nIf the operation fails due to validation, proper error messages are returned to guide the user (e.g., \"proposed time conflicts with another confirmed slot“).","summary":"Update an existing interview schedule slot for a given interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"Unique identifier of the schedule slot to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the interview schedule slot, such as timing, timezone, source, or status change.","typeName":"IAtsRecruitmentInterviewSchedule.IUpdate"},"responseBody":{"description":"The updated interview schedule slot record with all new values after modification.","typeName":"IAtsRecruitmentInterviewSchedule"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"update","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/schedules/{scheduleId}","method":"put","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation cancels or deletes an existing interview schedule slot for a specific interview. It marks the entry as deleted or cancelled in the ats_recruitment_interview_schedules table. Only system administrators, authorized HR recruiters, or technical reviewers/participants associated with the interview can invoke this operation. Business logic checks that the slot is not already completed or cancelled before deletion. Audited for compliance tracking.","description":"This API operation removes or cancels a schedule entry for an interview, marking it as deleted or cancelled in the database. The operation first validates that the interview and associated schedule exist and are in a modifiable state (not completed, not already cancelled). The operation retains a soft-deletion pattern by setting the deleted_at field for audit recovery; hard delete is not performed so that all schedule changes remain traceable. A cancellation reason can be recorded as part of the process.\n\nThis is restricted to HR recruiters, technical reviewers, or system administrators linked to the interview. Any attempt to delete a non-existent or already-completed/cancelled slot results in a business rule error, with details returned to the caller.\n\nAll cancellations/deletions are logged to audit trails for compliance and event notification to participants. Common related operations are POST (create slot) and PUT (update slot).","summary":"Delete (cancel) a specific interview schedule slot for a given interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose schedule should be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"Unique identifier of the schedule slot to delete (cancel).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"erase","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/schedules/{scheduleId}","method":"delete","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation cancels or deletes an existing interview schedule slot for a specific interview. It marks the entry as deleted or cancelled in the ats_recruitment_interview_schedules table. Only system administrators, authorized HR recruiters, or technical reviewers/participants associated with the interview can invoke this operation. Business logic checks that the slot is not already completed or cancelled before deletion. Audited for compliance tracking.","description":"This API operation removes or cancels a schedule entry for an interview, marking it as deleted or cancelled in the database. The operation first validates that the interview and associated schedule exist and are in a modifiable state (not completed, not already cancelled). The operation retains a soft-deletion pattern by setting the deleted_at field for audit recovery; hard delete is not performed so that all schedule changes remain traceable. A cancellation reason can be recorded as part of the process.\n\nThis is restricted to HR recruiters, technical reviewers, or system administrators linked to the interview. Any attempt to delete a non-existent or already-completed/cancelled slot results in a business rule error, with details returned to the caller.\n\nAll cancellations/deletions are logged to audit trails for compliance and event notification to participants. Common related operations are POST (create slot) and PUT (update slot).","summary":"Delete (cancel) a specific interview schedule slot for a given interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose schedule should be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"Unique identifier of the schedule slot to delete (cancel).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"erase","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/schedules/{scheduleId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation cancels or deletes an existing interview schedule slot for a specific interview. It marks the entry as deleted or cancelled in the ats_recruitment_interview_schedules table. Only system administrators, authorized HR recruiters, or technical reviewers/participants associated with the interview can invoke this operation. Business logic checks that the slot is not already completed or cancelled before deletion. Audited for compliance tracking.","description":"This API operation removes or cancels a schedule entry for an interview, marking it as deleted or cancelled in the database. The operation first validates that the interview and associated schedule exist and are in a modifiable state (not completed, not already cancelled). The operation retains a soft-deletion pattern by setting the deleted_at field for audit recovery; hard delete is not performed so that all schedule changes remain traceable. A cancellation reason can be recorded as part of the process.\n\nThis is restricted to HR recruiters, technical reviewers, or system administrators linked to the interview. Any attempt to delete a non-existent or already-completed/cancelled slot results in a business rule error, with details returned to the caller.\n\nAll cancellations/deletions are logged to audit trails for compliance and event notification to participants. Common related operations are POST (create slot) and PUT (update slot).","summary":"Delete (cancel) a specific interview schedule slot for a given interview (ats_recruitment_interview_schedules).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose schedule should be deleted.","schema":{"type":"string","format":"uuid"}},{"name":"scheduleId","description":"Unique identifier of the schedule slot to delete (cancel).","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer"],"name":"erase","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/schedules/{scheduleId}","method":"delete","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of all Google Calendar sync attempts for a given interview. It queries the ats_recruitment_interview_calendar_syncs table, allowing search by sync_status, sync_type, and sync_time ranges. Only authorized interview participants (applicant, HR, tech reviewer, or admin) may access this listing. Use this to audit synchronization events, check failures or successes, and troubleshoot calendar issues related to interviews.","description":"This API operation returns a paginated, filterable collection of all calendar synchronization attempt records for a specific interview. Records include sync type (e.g., google_calendar), status, external event ids, and error messages where applicable. The operation supports advanced filtering by sync_status (success, failed, pending), sync_type, and time range (sync_time_from/to) to enable troubleshooting and compliance review by HR and technical staff.\n\nOnly authorized interview participants or system administrators may view this information. Results are fully auditable, and read operations are tracked for compliance and privacy. Integration with failure handling allows users to quickly identify failed syncs and examine error details. Related operations are POST (initiate new calendar sync) and GET/PUT for managing interview core data.","summary":"List and search all calendar sync attempts for a given interview (ats_recruitment_interview_calendar_syncs).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose calendar sync events are being listed or searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for retrieving calendar sync events (optional filters for status, type, time, pagination info).","typeName":"IAtsRecruitmentInterviewCalendarSync.IRequest"},"responseBody":{"description":"Paginated result set of calendar sync attempt records, with status, provider, and error details.","typeName":"IPageIAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer","applicant"],"name":"index","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/calendarSyncs","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of all Google Calendar sync attempts for a given interview. It queries the ats_recruitment_interview_calendar_syncs table, allowing search by sync_status, sync_type, and sync_time ranges. Only authorized interview participants (applicant, HR, tech reviewer, or admin) may access this listing. Use this to audit synchronization events, check failures or successes, and troubleshoot calendar issues related to interviews.","description":"This API operation returns a paginated, filterable collection of all calendar synchronization attempt records for a specific interview. Records include sync type (e.g., google_calendar), status, external event ids, and error messages where applicable. The operation supports advanced filtering by sync_status (success, failed, pending), sync_type, and time range (sync_time_from/to) to enable troubleshooting and compliance review by HR and technical staff.\n\nOnly authorized interview participants or system administrators may view this information. Results are fully auditable, and read operations are tracked for compliance and privacy. Integration with failure handling allows users to quickly identify failed syncs and examine error details. Related operations are POST (initiate new calendar sync) and GET/PUT for managing interview core data.","summary":"List and search all calendar sync attempts for a given interview (ats_recruitment_interview_calendar_syncs).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose calendar sync events are being listed or searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for retrieving calendar sync events (optional filters for status, type, time, pagination info).","typeName":"IAtsRecruitmentInterviewCalendarSync.IRequest"},"responseBody":{"description":"Paginated result set of calendar sync attempt records, with status, provider, and error details.","typeName":"IPageIAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer","applicant"],"name":"index","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/calendarSyncs","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of all Google Calendar sync attempts for a given interview. It queries the ats_recruitment_interview_calendar_syncs table, allowing search by sync_status, sync_type, and sync_time ranges. Only authorized interview participants (applicant, HR, tech reviewer, or admin) may access this listing. Use this to audit synchronization events, check failures or successes, and troubleshoot calendar issues related to interviews.","description":"This API operation returns a paginated, filterable collection of all calendar synchronization attempt records for a specific interview. Records include sync type (e.g., google_calendar), status, external event ids, and error messages where applicable. The operation supports advanced filtering by sync_status (success, failed, pending), sync_type, and time range (sync_time_from/to) to enable troubleshooting and compliance review by HR and technical staff.\n\nOnly authorized interview participants or system administrators may view this information. Results are fully auditable, and read operations are tracked for compliance and privacy. Integration with failure handling allows users to quickly identify failed syncs and examine error details. Related operations are POST (initiate new calendar sync) and GET/PUT for managing interview core data.","summary":"List and search all calendar sync attempts for a given interview (ats_recruitment_interview_calendar_syncs).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose calendar sync events are being listed or searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for retrieving calendar sync events (optional filters for status, type, time, pagination info).","typeName":"IAtsRecruitmentInterviewCalendarSync.IRequest"},"responseBody":{"description":"Paginated result set of calendar sync attempt records, with status, provider, and error details.","typeName":"IPageIAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer","applicant"],"name":"index","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/calendarSyncs","method":"patch","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a filtered, paginated list of all Google Calendar sync attempts for a given interview. It queries the ats_recruitment_interview_calendar_syncs table, allowing search by sync_status, sync_type, and sync_time ranges. Only authorized interview participants (applicant, HR, tech reviewer, or admin) may access this listing. Use this to audit synchronization events, check failures or successes, and troubleshoot calendar issues related to interviews.","description":"This API operation returns a paginated, filterable collection of all calendar synchronization attempt records for a specific interview. Records include sync type (e.g., google_calendar), status, external event ids, and error messages where applicable. The operation supports advanced filtering by sync_status (success, failed, pending), sync_type, and time range (sync_time_from/to) to enable troubleshooting and compliance review by HR and technical staff.\n\nOnly authorized interview participants or system administrators may view this information. Results are fully auditable, and read operations are tracked for compliance and privacy. Integration with failure handling allows users to quickly identify failed syncs and examine error details. Related operations are POST (initiate new calendar sync) and GET/PUT for managing interview core data.","summary":"List and search all calendar sync attempts for a given interview (ats_recruitment_interview_calendar_syncs).","parameters":[{"name":"interviewId","description":"Unique identifier of the interview whose calendar sync events are being listed or searched.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search, filtering, and pagination criteria for retrieving calendar sync events (optional filters for status, type, time, pagination info).","typeName":"IAtsRecruitmentInterviewCalendarSync.IRequest"},"responseBody":{"description":"Paginated result set of calendar sync attempt records, with status, provider, and error details.","typeName":"IPageIAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","systemAdmin","techReviewer","applicant"],"name":"index","path":"/atsRecruitment/applicant/interviews/{interviewId}/calendarSyncs","method":"patch","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation retrieves a single interview question assigned to an interview in the ATS system. It is based on the ats_recruitment_interview_questions table, which stores the set of questions associated with each interview for a given applicant. The path accesses a specific question by its ID and references the interview it belongs to. It is designed for use by HR recruiters and technical reviewers when viewing the content and details of a single interview session question, including ordering, type, template status, and content details.\n\nThis operation requires both the interviewId (parent resource) and the questionId to identify the specific interview question. The operation strictly enforces access control consistent with interview participation and role requirements, ensuring that only authorized recruiters, tech reviewers, or the involved applicant can retrieve question content.\n\nTypical use cases include: displaying an interview question for review or preparation, checking order and content before the interview, or auditing which questions were used. This endpoint is protected by role-based access control and returns all properties of the question entity, including custom/manual questions and those originating from a template.","description":"Retrieve a specific interview question assigned to a particular interview. This operation is used by HR recruiters, tech reviewers, or an applicant participant (when permitted) to access the detailed content and properties of an interview question as configured for a scheduled or historical interview in the recruitment process.\n\nThe endpoint validates both the interviewId and questionId path parameters, ensuring correct association (questionId must belong to interviewId). Content includes question order, type (e.g., behavioral, technical, coding), actual question text, and template/manual status. Role-based authorization is enforced (\nonly hrRecruiter and techReviewer can access any interview's questions, while applicants may only view their assigned interview's questions, subject to further security policies).\n\nThe implementation must ensure secure handling, as some questions may contain sensitive assessment information or AI-generated content. Related operations include listing all questions for an interview, creating additional questions (for HR/techReviewer only), and updating interview question content (where permitted).","summary":"Retrieve a specific interview question for a given interview from ats_recruitment_interview_questions.","parameters":[{"name":"interviewId","description":"UUID of the interview containing the question.","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"UUID of the interview question to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The interview question entity including all content, order, type, and template metadata.","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer","applicant"],"name":"at","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/questions/{questionId}","method":"get","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a single interview question assigned to an interview in the ATS system. It is based on the ats_recruitment_interview_questions table, which stores the set of questions associated with each interview for a given applicant. The path accesses a specific question by its ID and references the interview it belongs to. It is designed for use by HR recruiters and technical reviewers when viewing the content and details of a single interview session question, including ordering, type, template status, and content details.\n\nThis operation requires both the interviewId (parent resource) and the questionId to identify the specific interview question. The operation strictly enforces access control consistent with interview participation and role requirements, ensuring that only authorized recruiters, tech reviewers, or the involved applicant can retrieve question content.\n\nTypical use cases include: displaying an interview question for review or preparation, checking order and content before the interview, or auditing which questions were used. This endpoint is protected by role-based access control and returns all properties of the question entity, including custom/manual questions and those originating from a template.","description":"Retrieve a specific interview question assigned to a particular interview. This operation is used by HR recruiters, tech reviewers, or an applicant participant (when permitted) to access the detailed content and properties of an interview question as configured for a scheduled or historical interview in the recruitment process.\n\nThe endpoint validates both the interviewId and questionId path parameters, ensuring correct association (questionId must belong to interviewId). Content includes question order, type (e.g., behavioral, technical, coding), actual question text, and template/manual status. Role-based authorization is enforced (\nonly hrRecruiter and techReviewer can access any interview's questions, while applicants may only view their assigned interview's questions, subject to further security policies).\n\nThe implementation must ensure secure handling, as some questions may contain sensitive assessment information or AI-generated content. Related operations include listing all questions for an interview, creating additional questions (for HR/techReviewer only), and updating interview question content (where permitted).","summary":"Retrieve a specific interview question for a given interview from ats_recruitment_interview_questions.","parameters":[{"name":"interviewId","description":"UUID of the interview containing the question.","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"UUID of the interview question to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The interview question entity including all content, order, type, and template metadata.","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer","applicant"],"name":"at","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/questions/{questionId}","method":"get","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a single interview question assigned to an interview in the ATS system. It is based on the ats_recruitment_interview_questions table, which stores the set of questions associated with each interview for a given applicant. The path accesses a specific question by its ID and references the interview it belongs to. It is designed for use by HR recruiters and technical reviewers when viewing the content and details of a single interview session question, including ordering, type, template status, and content details.\n\nThis operation requires both the interviewId (parent resource) and the questionId to identify the specific interview question. The operation strictly enforces access control consistent with interview participation and role requirements, ensuring that only authorized recruiters, tech reviewers, or the involved applicant can retrieve question content.\n\nTypical use cases include: displaying an interview question for review or preparation, checking order and content before the interview, or auditing which questions were used. This endpoint is protected by role-based access control and returns all properties of the question entity, including custom/manual questions and those originating from a template.","description":"Retrieve a specific interview question assigned to a particular interview. This operation is used by HR recruiters, tech reviewers, or an applicant participant (when permitted) to access the detailed content and properties of an interview question as configured for a scheduled or historical interview in the recruitment process.\n\nThe endpoint validates both the interviewId and questionId path parameters, ensuring correct association (questionId must belong to interviewId). Content includes question order, type (e.g., behavioral, technical, coding), actual question text, and template/manual status. Role-based authorization is enforced (\nonly hrRecruiter and techReviewer can access any interview's questions, while applicants may only view their assigned interview's questions, subject to further security policies).\n\nThe implementation must ensure secure handling, as some questions may contain sensitive assessment information or AI-generated content. Related operations include listing all questions for an interview, creating additional questions (for HR/techReviewer only), and updating interview question content (where permitted).","summary":"Retrieve a specific interview question for a given interview from ats_recruitment_interview_questions.","parameters":[{"name":"interviewId","description":"UUID of the interview containing the question.","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"UUID of the interview question to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The interview question entity including all content, order, type, and template metadata.","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer","applicant"],"name":"at","path":"/atsRecruitment/applicant/interviews/{interviewId}/questions/{questionId}","method":"get","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation lists and searches interview questions assigned to a specific interview based on the ats_recruitment_interview_questions table. It allows HR recruiters and technical reviewers to query, filter, and paginate the full set of questions configured for one interview session. It supports sorting (e.g., by 'order'), filtering by type (technical/behavioral/coding), and is used for preparing, auditing, and managing interview forms and their content.","description":"Retrieve a paginated and filterable list of all interview questions for a given interview. This is useful for HR recruiters or tech reviewers needing to review, audit, or edit the sequence and composition of interview questions prior to the interview taking place, as well as to support interview evaluation processes. \n\nThe operation validates the interviewId path parameter to return only valid questions for the interview entity. In addition, it applies any complex search/filter/pagination criteria provided in the request body (such as question type, template/manual filter, keyword searching within question text, or order-based sorting). The endpoint enforces proper access control so that only authorized HR/techReviewer roles (and, in some contexts, applicants) can retrieve the question sets.\n\nReturned data includes all properties from ats_recruitment_interview_questions, such as question text, type, template/manual status, and ordering. Related operations are single-question retrieval, creation, and update of interview questions.","summary":"Search and retrieve all questions assigned to a specific interview.","parameters":[{"name":"interviewId","description":"UUID of the interview whose questions will be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filters for question content, type, ordering, and pagination.","typeName":"IAtsRecruitmentInterviewQuestion.IRequest"},"responseBody":{"description":"Paginated list of all interview questions configured for the interview, with content and metadata.","typeName":"IPageIAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"index","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/questions","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation lists and searches interview questions assigned to a specific interview based on the ats_recruitment_interview_questions table. It allows HR recruiters and technical reviewers to query, filter, and paginate the full set of questions configured for one interview session. It supports sorting (e.g., by 'order'), filtering by type (technical/behavioral/coding), and is used for preparing, auditing, and managing interview forms and their content.","description":"Retrieve a paginated and filterable list of all interview questions for a given interview. This is useful for HR recruiters or tech reviewers needing to review, audit, or edit the sequence and composition of interview questions prior to the interview taking place, as well as to support interview evaluation processes. \n\nThe operation validates the interviewId path parameter to return only valid questions for the interview entity. In addition, it applies any complex search/filter/pagination criteria provided in the request body (such as question type, template/manual filter, keyword searching within question text, or order-based sorting). The endpoint enforces proper access control so that only authorized HR/techReviewer roles (and, in some contexts, applicants) can retrieve the question sets.\n\nReturned data includes all properties from ats_recruitment_interview_questions, such as question text, type, template/manual status, and ordering. Related operations are single-question retrieval, creation, and update of interview questions.","summary":"Search and retrieve all questions assigned to a specific interview.","parameters":[{"name":"interviewId","description":"UUID of the interview whose questions will be searched/listed.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filters for question content, type, ordering, and pagination.","typeName":"IAtsRecruitmentInterviewQuestion.IRequest"},"responseBody":{"description":"Paginated list of all interview questions configured for the interview, with content and metadata.","typeName":"IPageIAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"index","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/questions","method":"patch","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation creates a new interview question for a given interview. It inserts a new row into ats_recruitment_interview_questions, associating the question with an interview by interviewId, and supports assignment of order, type, question content, and template/manual status. The endpoint is restricted to HR recruiters and technical reviewers as only they can configure interviews.","description":"Create a new question for a specific interview. This is used by HR recruiters or technical reviewers to customize or augment the set of questions for an interview session. New questions can be derived from templates, generated by AI, or written manually (depending on business rules), and all properties of the ats_recruitment_interview_questions schema can be populated.\n\nThe operation strictly enforces interviewId matching and sequence constraints—e.g., assigning correct order among questions, marking as template/manual, and choosing type/category. Role-based access is mandatory: only HR or technical reviewers assigned to the interview should be able to create questions. \n\nAfter creation, the system may log this action in the audit trail for compliance. Related functions include updating question content, listing, and retrieving single questions for an interview.","summary":"Create a new interview question for a specified interview.","parameters":[{"name":"interviewId","description":"UUID of the interview to which this question will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Interview question creation data (content, order, type, etc.)","typeName":"IAtsRecruitmentInterviewQuestion.ICreate"},"responseBody":{"description":"The newly created interview question, with details of all relevant fields.","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"create","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/questions","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation creates a new interview question for a given interview. It inserts a new row into ats_recruitment_interview_questions, associating the question with an interview by interviewId, and supports assignment of order, type, question content, and template/manual status. The endpoint is restricted to HR recruiters and technical reviewers as only they can configure interviews.","description":"Create a new question for a specific interview. This is used by HR recruiters or technical reviewers to customize or augment the set of questions for an interview session. New questions can be derived from templates, generated by AI, or written manually (depending on business rules), and all properties of the ats_recruitment_interview_questions schema can be populated.\n\nThe operation strictly enforces interviewId matching and sequence constraints—e.g., assigning correct order among questions, marking as template/manual, and choosing type/category. Role-based access is mandatory: only HR or technical reviewers assigned to the interview should be able to create questions. \n\nAfter creation, the system may log this action in the audit trail for compliance. Related functions include updating question content, listing, and retrieving single questions for an interview.","summary":"Create a new interview question for a specified interview.","parameters":[{"name":"interviewId","description":"UUID of the interview to which this question will be added.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Interview question creation data (content, order, type, etc.)","typeName":"IAtsRecruitmentInterviewQuestion.ICreate"},"responseBody":{"description":"The newly created interview question, with details of all relevant fields.","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"create","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/questions","method":"post","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a specific calendar sync record for an interview, allowing authorized participants or system administrators to audit or verify synchronization with external services (e.g., Google Calendar). This is based on the ats_recruitment_interview_calendar_syncs table, which logs all attempts to sync interview events to calendar platforms, including sync type, status, time, error messages, and external event identifiers.","description":"Retrieve a single calendar synchronization record for a specific interview. This operation is typically used by HR recruiters, system admins, or technical reviewers to check the details and result of an attempt to sync an interview schedule with an external calendar provider (such as Google Calendar).\n\nThe endpoint validates both the interviewId (parent resource) and calendarSyncId (target record), confirming they match and ensuring that only authorized roles can access the data. Returned information includes sync type, time, status (pending, success, failed), error messages for diagnostics, and tokens as permitted by security policy.\n\nRole-based security ensures that only interview participants (HR recruiter, tech reviewer, applicant) or system admins may access the sync log. Related endpoints include listing all sync attempts and handling manual sync retries or failure audits.","summary":"Get a specific interview calendar sync record by ID.","parameters":[{"name":"interviewId","description":"UUID of the interview whose calendar sync is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"calendarSyncId","description":"UUID of the calendar synchronization record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed calendar sync record, including status, type, token, time, and error context.","typeName":"IAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/calendarSyncs/{calendarSyncId}","method":"get","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves a specific calendar sync record for an interview, allowing authorized participants or system administrators to audit or verify synchronization with external services (e.g., Google Calendar). This is based on the ats_recruitment_interview_calendar_syncs table, which logs all attempts to sync interview events to calendar platforms, including sync type, status, time, error messages, and external event identifiers.","description":"Retrieve a single calendar synchronization record for a specific interview. This operation is typically used by HR recruiters, system admins, or technical reviewers to check the details and result of an attempt to sync an interview schedule with an external calendar provider (such as Google Calendar).\n\nThe endpoint validates both the interviewId (parent resource) and calendarSyncId (target record), confirming they match and ensuring that only authorized roles can access the data. Returned information includes sync type, time, status (pending, success, failed), error messages for diagnostics, and tokens as permitted by security policy.\n\nRole-based security ensures that only interview participants (HR recruiter, tech reviewer, applicant) or system admins may access the sync log. Related endpoints include listing all sync attempts and handling manual sync retries or failure audits.","summary":"Get a specific interview calendar sync record by ID.","parameters":[{"name":"interviewId","description":"UUID of the interview whose calendar sync is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"calendarSyncId","description":"UUID of the calendar synchronization record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed calendar sync record, including status, type, token, time, and error context.","typeName":"IAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/calendarSyncs/{calendarSyncId}","method":"get","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves a specific calendar sync record for an interview, allowing authorized participants or system administrators to audit or verify synchronization with external services (e.g., Google Calendar). This is based on the ats_recruitment_interview_calendar_syncs table, which logs all attempts to sync interview events to calendar platforms, including sync type, status, time, error messages, and external event identifiers.","description":"Retrieve a single calendar synchronization record for a specific interview. This operation is typically used by HR recruiters, system admins, or technical reviewers to check the details and result of an attempt to sync an interview schedule with an external calendar provider (such as Google Calendar).\n\nThe endpoint validates both the interviewId (parent resource) and calendarSyncId (target record), confirming they match and ensuring that only authorized roles can access the data. Returned information includes sync type, time, status (pending, success, failed), error messages for diagnostics, and tokens as permitted by security policy.\n\nRole-based security ensures that only interview participants (HR recruiter, tech reviewer, applicant) or system admins may access the sync log. Related endpoints include listing all sync attempts and handling manual sync retries or failure audits.","summary":"Get a specific interview calendar sync record by ID.","parameters":[{"name":"interviewId","description":"UUID of the interview whose calendar sync is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"calendarSyncId","description":"UUID of the calendar synchronization record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed calendar sync record, including status, type, token, time, and error context.","typeName":"IAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","path":"/atsRecruitment/systemAdmin/interviews/{interviewId}/calendarSyncs/{calendarSyncId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a specific calendar sync record for an interview, allowing authorized participants or system administrators to audit or verify synchronization with external services (e.g., Google Calendar). This is based on the ats_recruitment_interview_calendar_syncs table, which logs all attempts to sync interview events to calendar platforms, including sync type, status, time, error messages, and external event identifiers.","description":"Retrieve a single calendar synchronization record for a specific interview. This operation is typically used by HR recruiters, system admins, or technical reviewers to check the details and result of an attempt to sync an interview schedule with an external calendar provider (such as Google Calendar).\n\nThe endpoint validates both the interviewId (parent resource) and calendarSyncId (target record), confirming they match and ensuring that only authorized roles can access the data. Returned information includes sync type, time, status (pending, success, failed), error messages for diagnostics, and tokens as permitted by security policy.\n\nRole-based security ensures that only interview participants (HR recruiter, tech reviewer, applicant) or system admins may access the sync log. Related endpoints include listing all sync attempts and handling manual sync retries or failure audits.","summary":"Get a specific interview calendar sync record by ID.","parameters":[{"name":"interviewId","description":"UUID of the interview whose calendar sync is being retrieved.","schema":{"type":"string","format":"uuid"}},{"name":"calendarSyncId","description":"UUID of the calendar synchronization record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed calendar sync record, including status, type, token, time, and error context.","typeName":"IAtsRecruitmentInterviewCalendarSync"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin","applicant"],"name":"at","path":"/atsRecruitment/applicant/interviews/{interviewId}/calendarSyncs/{calendarSyncId}","method":"get","authorizationRole":"applicant","authorizationType":null},{"specification":"This operation updates an individual interview question associated with a specific interview session in the ATS platform. It operates on the ats_recruitment_interview_questions table, which holds the details and content for each interview question assigned to an interview. HR recruiters or technical reviewers with proper authorization can use this endpoint to modify the question text, type, order, or template status for a given interview. The path parameters require the unique identifiers for the interview session and the question. Update logic is fully auditable and changes are tracked for compliance and consistency throughout the recruitment workflow.","description":"This API endpoint allows HR recruiters or authorized users to update the content or metadata of a specific interview question, given its unique question ID and parent interview ID. The target table is ats_recruitment_interview_questions, which stores individual questions assigned to an interview instance for an applicant.\n\nUpdates can include the question text, its type (such as technical or behavioral), template status, or its display order during the interview. The operation checks user roles to ensure only permitted HR or technical reviewers can modify questions. Each update is automatically logged for traceability and audit trail compliance, which is essential for ATS systems that must support audit-ready processes.\n\nAppropriate validation is performed to ensure the referenced interview and question IDs exist, the user has the correct permissions, and no state constraints (e.g., interview already completed) are violated. Related endpoints, such as assigning new questions or retrieving the interview's full question list, may be used together with this operation to provide a comprehensive interview workflow.\n\nError responses are returned if the requested question or interview do not exist, if the user lacks authorization, or if the update would violate business rules (such as editing a locked/completed interview). All changes are tracked for audit and rollback if necessary.","summary":"Update a specific interview question for a given interview session (ats_recruitment_interview_questions)","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview session","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"Unique identifier of the interview question to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the interview question, including text, order, type, etc","typeName":"IAtsRecruitmentInterviewQuestion.IUpdate"},"responseBody":{"description":"The updated interview question record after modification","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"update","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/questions/{questionId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation updates an individual interview question associated with a specific interview session in the ATS platform. It operates on the ats_recruitment_interview_questions table, which holds the details and content for each interview question assigned to an interview. HR recruiters or technical reviewers with proper authorization can use this endpoint to modify the question text, type, order, or template status for a given interview. The path parameters require the unique identifiers for the interview session and the question. Update logic is fully auditable and changes are tracked for compliance and consistency throughout the recruitment workflow.","description":"This API endpoint allows HR recruiters or authorized users to update the content or metadata of a specific interview question, given its unique question ID and parent interview ID. The target table is ats_recruitment_interview_questions, which stores individual questions assigned to an interview instance for an applicant.\n\nUpdates can include the question text, its type (such as technical or behavioral), template status, or its display order during the interview. The operation checks user roles to ensure only permitted HR or technical reviewers can modify questions. Each update is automatically logged for traceability and audit trail compliance, which is essential for ATS systems that must support audit-ready processes.\n\nAppropriate validation is performed to ensure the referenced interview and question IDs exist, the user has the correct permissions, and no state constraints (e.g., interview already completed) are violated. Related endpoints, such as assigning new questions or retrieving the interview's full question list, may be used together with this operation to provide a comprehensive interview workflow.\n\nError responses are returned if the requested question or interview do not exist, if the user lacks authorization, or if the update would violate business rules (such as editing a locked/completed interview). All changes are tracked for audit and rollback if necessary.","summary":"Update a specific interview question for a given interview session (ats_recruitment_interview_questions)","parameters":[{"name":"interviewId","description":"Unique identifier of the target interview session","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"Unique identifier of the interview question to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the interview question, including text, order, type, etc","typeName":"IAtsRecruitmentInterviewQuestion.IUpdate"},"responseBody":{"description":"The updated interview question record after modification","typeName":"IAtsRecruitmentInterviewQuestion"},"authorizationRoles":["hrRecruiter","techReviewer"],"name":"update","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/questions/{questionId}","method":"put","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation permanently removes a specific interview question record from an interview session in the ATS platform. It operates on the ats_recruitment_interview_questions table, where each record links a question to an interview. Only HR recruiters or technical reviewers with appropriate permissions may perform deletions, ensuring process integrity in the platform. Deleted records are not recoverable unless soft delete is used; refer to the schema to determine actual deletion modality.","description":"This API endpoint enables removal of an interview question from an interview session, based on the provided interview ID and question ID path parameters. The system accesses the ats_recruitment_interview_questions database table, which links individual questions to interview instances.\n\nWhen a valid deletion request is issued, the targeted question is permanently deleted from the database, meaning it will no longer appear in candidate or interviewer workflows for the designated interview. Authorization checks are performed to ensure that only HR recruiters or technical reviewers assigned to the interview, or with system permission, may remove a question.\n\nBusiness logic prevents deletion if the question is associated with a completed or locked interview session. All delete actions are logged for audit compliance, and errors are returned in cases where the specified interview or question does not exist, or if the requester lacks privileges. The deletion is a hard delete as there is no dedicated soft delete column for questions in the schema—once deleted, recovery is not possible.","summary":"Delete a specific interview question from an interview session (ats_recruitment_interview_questions)","parameters":[{"name":"interviewId","description":"Unique identifier of the interview session","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"Unique identifier of the interview question to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer"],"name":"erase","path":"/atsRecruitment/hrRecruiter/interviews/{interviewId}/questions/{questionId}","method":"delete","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation permanently removes a specific interview question record from an interview session in the ATS platform. It operates on the ats_recruitment_interview_questions table, where each record links a question to an interview. Only HR recruiters or technical reviewers with appropriate permissions may perform deletions, ensuring process integrity in the platform. Deleted records are not recoverable unless soft delete is used; refer to the schema to determine actual deletion modality.","description":"This API endpoint enables removal of an interview question from an interview session, based on the provided interview ID and question ID path parameters. The system accesses the ats_recruitment_interview_questions database table, which links individual questions to interview instances.\n\nWhen a valid deletion request is issued, the targeted question is permanently deleted from the database, meaning it will no longer appear in candidate or interviewer workflows for the designated interview. Authorization checks are performed to ensure that only HR recruiters or technical reviewers assigned to the interview, or with system permission, may remove a question.\n\nBusiness logic prevents deletion if the question is associated with a completed or locked interview session. All delete actions are logged for audit compliance, and errors are returned in cases where the specified interview or question does not exist, or if the requester lacks privileges. The deletion is a hard delete as there is no dedicated soft delete column for questions in the schema—once deleted, recovery is not possible.","summary":"Delete a specific interview question from an interview session (ats_recruitment_interview_questions)","parameters":[{"name":"interviewId","description":"Unique identifier of the interview session","schema":{"type":"string","format":"uuid"}},{"name":"questionId","description":"Unique identifier of the interview question to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["hrRecruiter","techReviewer"],"name":"erase","path":"/atsRecruitment/techReviewer/interviews/{interviewId}/questions/{questionId}","method":"delete","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation provides advanced search, filtering, and pagination over the notifications (ats_recruitment_notifications) in the ATS platform. It allows authorized users such as system administrators, HR recruiters, and tech reviewers to find and review relevant notification events by event type, recipient, status, reference table, and business context. The system supports granular audit, delivery status tracking, and notification workflow compliance. Filters may include recipient user ID, notification event type, status, date range, and related business object references.","description":"This endpoint enables advanced querying and paginated retrieval of notification records, drawing from the ats_recruitment_notifications table. Users can specify a variety of search and filter criteria, such as event type (e.g., status updates, system alerts), delivery status (pending, sent, failed), recipient roles (applicant, HR recruiter, tech reviewer, systemAdmin), creation/update time ranges, and references to associated business context (application, interview, export job, etc.).\n\nAuthenticated users—admins, HR recruiters, and tech reviewers—use this operation to manage, audit, or troubleshoot notification workflows. Granular permission checks ensure users see only notifications relevant to their role or those they are authorized to view. The API supports sorting, field selection, and efficient pagination for large datasets, optimizing admin and support workflows in large-scale recruitment operations.\n\nError handling covers invalid filter requests, permissions issues, and server failures. Related APIs include notification detail retrieval and raw notification delivery logs, as part of comprehensive notification management capabilities.","summary":"Search, filter, and paginate notification records in the ATS (ats_recruitment_notifications)","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for notifications","typeName":"IAtsRecruitmentNotification.IRequest"},"responseBody":{"description":"Paginated notification records matching the search criteria","typeName":"IPageIAtsRecruitmentNotification.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"index","path":"/atsRecruitment/systemAdmin/notifications","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation provides advanced search, filtering, and pagination over the notifications (ats_recruitment_notifications) in the ATS platform. It allows authorized users such as system administrators, HR recruiters, and tech reviewers to find and review relevant notification events by event type, recipient, status, reference table, and business context. The system supports granular audit, delivery status tracking, and notification workflow compliance. Filters may include recipient user ID, notification event type, status, date range, and related business object references.","description":"This endpoint enables advanced querying and paginated retrieval of notification records, drawing from the ats_recruitment_notifications table. Users can specify a variety of search and filter criteria, such as event type (e.g., status updates, system alerts), delivery status (pending, sent, failed), recipient roles (applicant, HR recruiter, tech reviewer, systemAdmin), creation/update time ranges, and references to associated business context (application, interview, export job, etc.).\n\nAuthenticated users—admins, HR recruiters, and tech reviewers—use this operation to manage, audit, or troubleshoot notification workflows. Granular permission checks ensure users see only notifications relevant to their role or those they are authorized to view. The API supports sorting, field selection, and efficient pagination for large datasets, optimizing admin and support workflows in large-scale recruitment operations.\n\nError handling covers invalid filter requests, permissions issues, and server failures. Related APIs include notification detail retrieval and raw notification delivery logs, as part of comprehensive notification management capabilities.","summary":"Search, filter, and paginate notification records in the ATS (ats_recruitment_notifications)","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for notifications","typeName":"IAtsRecruitmentNotification.IRequest"},"responseBody":{"description":"Paginated notification records matching the search criteria","typeName":"IPageIAtsRecruitmentNotification.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"index","path":"/atsRecruitment/hrRecruiter/notifications","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation provides advanced search, filtering, and pagination over the notifications (ats_recruitment_notifications) in the ATS platform. It allows authorized users such as system administrators, HR recruiters, and tech reviewers to find and review relevant notification events by event type, recipient, status, reference table, and business context. The system supports granular audit, delivery status tracking, and notification workflow compliance. Filters may include recipient user ID, notification event type, status, date range, and related business object references.","description":"This endpoint enables advanced querying and paginated retrieval of notification records, drawing from the ats_recruitment_notifications table. Users can specify a variety of search and filter criteria, such as event type (e.g., status updates, system alerts), delivery status (pending, sent, failed), recipient roles (applicant, HR recruiter, tech reviewer, systemAdmin), creation/update time ranges, and references to associated business context (application, interview, export job, etc.).\n\nAuthenticated users—admins, HR recruiters, and tech reviewers—use this operation to manage, audit, or troubleshoot notification workflows. Granular permission checks ensure users see only notifications relevant to their role or those they are authorized to view. The API supports sorting, field selection, and efficient pagination for large datasets, optimizing admin and support workflows in large-scale recruitment operations.\n\nError handling covers invalid filter requests, permissions issues, and server failures. Related APIs include notification detail retrieval and raw notification delivery logs, as part of comprehensive notification management capabilities.","summary":"Search, filter, and paginate notification records in the ATS (ats_recruitment_notifications)","parameters":[],"requestBody":{"description":"Search, filtering, and pagination parameters for notifications","typeName":"IAtsRecruitmentNotification.IRequest"},"responseBody":{"description":"Paginated notification records matching the search criteria","typeName":"IPageIAtsRecruitmentNotification.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"index","path":"/atsRecruitment/techReviewer/notifications","method":"patch","authorizationRole":"techReviewer","authorizationType":null},{"specification":"This operation retrieves the detailed information of a single notification event from the ATS platform, identified by its unique notificationId. It operates on the ats_recruitment_notifications table, which stores metadata and content for notifications directed to applicants, HR recruiters, tech reviewers, or system admins. The response includes all relevant information such as event type, status, recipient, related business references, and the template-rendered payload.","description":"This endpoint provides a detailed view of an individual notification record, returning all metadata and payload information associated with the given notification ID. The API targets the ats_recruitment_notifications table and is accessible to authorized users including system administrators, HR recruiters, and tech reviewers.\n\nInformation returned includes recipient (by user role and ID), event type, reference entity (such as application, interview, export job), full notification template payload, delivery status, timestamps, and any relevant audit or system fields. Permission checks ensure a user can only access notifications relevant to their role and privileges, in compliance with privacy and business policies.\n\nThis detailed retrieval operation supports notification management, troubleshooting, and auditing workflows. Errors are returned for non-existent records or permission violations. Used with the search (index) endpoint to review and drill into system notification events.","summary":"Retrieve detail for a specific notification event (ats_recruitment_notifications)","parameters":[{"name":"notificationId","description":"Unique identifier of the notification to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full notification entity detail including payload, status, and references","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"at","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the detailed information of a single notification event from the ATS platform, identified by its unique notificationId. It operates on the ats_recruitment_notifications table, which stores metadata and content for notifications directed to applicants, HR recruiters, tech reviewers, or system admins. The response includes all relevant information such as event type, status, recipient, related business references, and the template-rendered payload.","description":"This endpoint provides a detailed view of an individual notification record, returning all metadata and payload information associated with the given notification ID. The API targets the ats_recruitment_notifications table and is accessible to authorized users including system administrators, HR recruiters, and tech reviewers.\n\nInformation returned includes recipient (by user role and ID), event type, reference entity (such as application, interview, export job), full notification template payload, delivery status, timestamps, and any relevant audit or system fields. Permission checks ensure a user can only access notifications relevant to their role and privileges, in compliance with privacy and business policies.\n\nThis detailed retrieval operation supports notification management, troubleshooting, and auditing workflows. Errors are returned for non-existent records or permission violations. Used with the search (index) endpoint to review and drill into system notification events.","summary":"Retrieve detail for a specific notification event (ats_recruitment_notifications)","parameters":[{"name":"notificationId","description":"Unique identifier of the notification to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full notification entity detail including payload, status, and references","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"at","path":"/atsRecruitment/hrRecruiter/notifications/{notificationId}","method":"get","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves the detailed information of a single notification event from the ATS platform, identified by its unique notificationId. It operates on the ats_recruitment_notifications table, which stores metadata and content for notifications directed to applicants, HR recruiters, tech reviewers, or system admins. The response includes all relevant information such as event type, status, recipient, related business references, and the template-rendered payload.","description":"This endpoint provides a detailed view of an individual notification record, returning all metadata and payload information associated with the given notification ID. The API targets the ats_recruitment_notifications table and is accessible to authorized users including system administrators, HR recruiters, and tech reviewers.\n\nInformation returned includes recipient (by user role and ID), event type, reference entity (such as application, interview, export job), full notification template payload, delivery status, timestamps, and any relevant audit or system fields. Permission checks ensure a user can only access notifications relevant to their role and privileges, in compliance with privacy and business policies.\n\nThis detailed retrieval operation supports notification management, troubleshooting, and auditing workflows. Errors are returned for non-existent records or permission violations. Used with the search (index) endpoint to review and drill into system notification events.","summary":"Retrieve detail for a specific notification event (ats_recruitment_notifications)","parameters":[{"name":"notificationId","description":"Unique identifier of the notification to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full notification entity detail including payload, status, and references","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["systemAdmin","hrRecruiter","techReviewer"],"name":"at","path":"/atsRecruitment/techReviewer/notifications/{notificationId}","method":"get","authorizationRole":"techReviewer","authorizationType":null},{"specification":"Create a new notification event in the ATS platform for delivery to applicants, HR, tech reviewers, or admins. This operation is based on the ats_recruitment_notifications table, which stores all logical notification events with business context but does not itself trigger delivery. Supports various notification types such as application status, interview scheduling, export completion, or system alerts. Notification records are referenced in all notification workflows and compliance logs, and notifications may be associated with related application, interview, or export job entities. The creation request should include references to relevant recipients and business entities.","description":"This API allows authorized system actors to create a notification intent for delivery to users. Each notification consists of business context (type, related entity), recipients (by role and user id), reference to the business table and entity (such as an application or interview), and payload parameters for template rendering.\n\nThis operation does not directly deliver or send the notification but creates a business event that will then be processed by the notification service and delivery system. Only users with roles that have privilege to create notifications may invoke this operation; in general, hrRecruiter, techReviewer, and systemAdmin may generate notifications relevant to business workflow. Applicant-facing notifications should typically be system-triggered, not user-triggered.\n\nSecurity and privacy are enforced by checking both the callers' authentication/authorization context and the validity of reference ids. All creation events are captured for audit and compliance. Certain types may require business validation (e.g., disallowing HR to send notifications on behalf of systemAdmin). Field and template references must be valid and reference permissible entity types according to business rules.","summary":"Create a new notification event in the ATS notification system (ats_recruitment_notifications table).","parameters":[],"requestBody":{"description":"Notification creation data: recipient, event type, reference business entity, and payload.","typeName":"IAtsRecruitmentNotification.ICreate"},"responseBody":{"description":"Created notification event, with its unique ID and all business fields.","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"create","path":"/atsRecruitment/hrRecruiter/notifications","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Create a new notification event in the ATS platform for delivery to applicants, HR, tech reviewers, or admins. This operation is based on the ats_recruitment_notifications table, which stores all logical notification events with business context but does not itself trigger delivery. Supports various notification types such as application status, interview scheduling, export completion, or system alerts. Notification records are referenced in all notification workflows and compliance logs, and notifications may be associated with related application, interview, or export job entities. The creation request should include references to relevant recipients and business entities.","description":"This API allows authorized system actors to create a notification intent for delivery to users. Each notification consists of business context (type, related entity), recipients (by role and user id), reference to the business table and entity (such as an application or interview), and payload parameters for template rendering.\n\nThis operation does not directly deliver or send the notification but creates a business event that will then be processed by the notification service and delivery system. Only users with roles that have privilege to create notifications may invoke this operation; in general, hrRecruiter, techReviewer, and systemAdmin may generate notifications relevant to business workflow. Applicant-facing notifications should typically be system-triggered, not user-triggered.\n\nSecurity and privacy are enforced by checking both the callers' authentication/authorization context and the validity of reference ids. All creation events are captured for audit and compliance. Certain types may require business validation (e.g., disallowing HR to send notifications on behalf of systemAdmin). Field and template references must be valid and reference permissible entity types according to business rules.","summary":"Create a new notification event in the ATS notification system (ats_recruitment_notifications table).","parameters":[],"requestBody":{"description":"Notification creation data: recipient, event type, reference business entity, and payload.","typeName":"IAtsRecruitmentNotification.ICreate"},"responseBody":{"description":"Created notification event, with its unique ID and all business fields.","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"create","path":"/atsRecruitment/techReviewer/notifications","method":"post","authorizationRole":"techReviewer","authorizationType":null},{"specification":"Create a new notification event in the ATS platform for delivery to applicants, HR, tech reviewers, or admins. This operation is based on the ats_recruitment_notifications table, which stores all logical notification events with business context but does not itself trigger delivery. Supports various notification types such as application status, interview scheduling, export completion, or system alerts. Notification records are referenced in all notification workflows and compliance logs, and notifications may be associated with related application, interview, or export job entities. The creation request should include references to relevant recipients and business entities.","description":"This API allows authorized system actors to create a notification intent for delivery to users. Each notification consists of business context (type, related entity), recipients (by role and user id), reference to the business table and entity (such as an application or interview), and payload parameters for template rendering.\n\nThis operation does not directly deliver or send the notification but creates a business event that will then be processed by the notification service and delivery system. Only users with roles that have privilege to create notifications may invoke this operation; in general, hrRecruiter, techReviewer, and systemAdmin may generate notifications relevant to business workflow. Applicant-facing notifications should typically be system-triggered, not user-triggered.\n\nSecurity and privacy are enforced by checking both the callers' authentication/authorization context and the validity of reference ids. All creation events are captured for audit and compliance. Certain types may require business validation (e.g., disallowing HR to send notifications on behalf of systemAdmin). Field and template references must be valid and reference permissible entity types according to business rules.","summary":"Create a new notification event in the ATS notification system (ats_recruitment_notifications table).","parameters":[],"requestBody":{"description":"Notification creation data: recipient, event type, reference business entity, and payload.","typeName":"IAtsRecruitmentNotification.ICreate"},"responseBody":{"description":"Created notification event, with its unique ID and all business fields.","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"create","path":"/atsRecruitment/systemAdmin/notifications","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Update an existing notification event in the ATS system, identified by its ID (ats_recruitment_notifications) to modify its business context, status, or payload information. Most often used for correction or workflow progression (e.g., status changes), not for ordinary message edits. Only allowed by privileged actors and subject to audit trails and validation. Edits may trigger downstream delivery or cancellation in accordance with system logic.","description":"This API allows privileged actors (such as systemAdmin, techReviewer, or hrRecruiter depending on notification type) to update an existing notification event, changing status or payload if needed for workflow continuity or correction. Notification records are immutable for certain statuses (e.g., after delivery), and audit trails are mandatory for compliance.\n\nTypical use cases include adjusting notification status (e.g., from pending to cancelled), correcting related entity references, or updating template payload before final delivery. Attempting to update notifications already processed (delivered or failed) will result in an error. Only system-level roles and privileged notification creators should use this endpoint.\n\nAll changes are logged and subject to business/process validation. Proper permission checks and entity existence validation are performed for every update request. This endpoint does not directly manage delivery attempts or channel-level logs; it only updates notification record metadata and status.","summary":"Update a notification event's metadata/status/payload by notificationId (ats_recruitment_notifications).","parameters":[{"name":"notificationId","description":"Target notification's unique identifier.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating notification record: can include status, payload, or references.","typeName":"IAtsRecruitmentNotification.IUpdate"},"responseBody":{"description":"Updated notification event, reflecting all changes.","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"update","path":"/atsRecruitment/hrRecruiter/notifications/{notificationId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Update an existing notification event in the ATS system, identified by its ID (ats_recruitment_notifications) to modify its business context, status, or payload information. Most often used for correction or workflow progression (e.g., status changes), not for ordinary message edits. Only allowed by privileged actors and subject to audit trails and validation. Edits may trigger downstream delivery or cancellation in accordance with system logic.","description":"This API allows privileged actors (such as systemAdmin, techReviewer, or hrRecruiter depending on notification type) to update an existing notification event, changing status or payload if needed for workflow continuity or correction. Notification records are immutable for certain statuses (e.g., after delivery), and audit trails are mandatory for compliance.\n\nTypical use cases include adjusting notification status (e.g., from pending to cancelled), correcting related entity references, or updating template payload before final delivery. Attempting to update notifications already processed (delivered or failed) will result in an error. Only system-level roles and privileged notification creators should use this endpoint.\n\nAll changes are logged and subject to business/process validation. Proper permission checks and entity existence validation are performed for every update request. This endpoint does not directly manage delivery attempts or channel-level logs; it only updates notification record metadata and status.","summary":"Update a notification event's metadata/status/payload by notificationId (ats_recruitment_notifications).","parameters":[{"name":"notificationId","description":"Target notification's unique identifier.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating notification record: can include status, payload, or references.","typeName":"IAtsRecruitmentNotification.IUpdate"},"responseBody":{"description":"Updated notification event, reflecting all changes.","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"update","path":"/atsRecruitment/techReviewer/notifications/{notificationId}","method":"put","authorizationRole":"techReviewer","authorizationType":null},{"specification":"Update an existing notification event in the ATS system, identified by its ID (ats_recruitment_notifications) to modify its business context, status, or payload information. Most often used for correction or workflow progression (e.g., status changes), not for ordinary message edits. Only allowed by privileged actors and subject to audit trails and validation. Edits may trigger downstream delivery or cancellation in accordance with system logic.","description":"This API allows privileged actors (such as systemAdmin, techReviewer, or hrRecruiter depending on notification type) to update an existing notification event, changing status or payload if needed for workflow continuity or correction. Notification records are immutable for certain statuses (e.g., after delivery), and audit trails are mandatory for compliance.\n\nTypical use cases include adjusting notification status (e.g., from pending to cancelled), correcting related entity references, or updating template payload before final delivery. Attempting to update notifications already processed (delivered or failed) will result in an error. Only system-level roles and privileged notification creators should use this endpoint.\n\nAll changes are logged and subject to business/process validation. Proper permission checks and entity existence validation are performed for every update request. This endpoint does not directly manage delivery attempts or channel-level logs; it only updates notification record metadata and status.","summary":"Update a notification event's metadata/status/payload by notificationId (ats_recruitment_notifications).","parameters":[{"name":"notificationId","description":"Target notification's unique identifier.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields for updating notification record: can include status, payload, or references.","typeName":"IAtsRecruitmentNotification.IUpdate"},"responseBody":{"description":"Updated notification event, reflecting all changes.","typeName":"IAtsRecruitmentNotification"},"authorizationRoles":["hrRecruiter","techReviewer","systemAdmin"],"name":"update","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Permanently deletes (hard-delete) a notification event from the ats_recruitment_notifications table, identified by notificationId. This operation removes the notification record from the system, including references to business context and payload. Only allowed for systemAdmin and privileged actors; fully audited for compliance. Hard delete is only permissible if business rules (such as undelivered/unused status or compliance expiry) permit deletion.","description":"This API allows a system administrator or privileged user to completely remove a notification event record from the ATS system, based on its ID. The operation is audited with complete before/after snapshot and rationale to maintain compliance with notification audit and delivery policies.\n\nNotification deletion is subject to business validation: only undelivered, failed, or cancelled notifications are usually permitted for deletion. Delivered notifications may be subject to retention policies, and attempts to delete them may be rejected by the API. Deletion not only removes the business event metadata but also breaks any future processing for the referenced business entity. The operation should be limited to administrative and incident scenarios (e.g., removal of erroneous, misaddressed, or privacy-violating notifications), not for routine workflow cleanup.\n\nThis is a hard delete according to the table schema, not a soft delete; deleted records are irrecoverable outside of system backup.","summary":"Hard delete a notification event by notificationId from ats_recruitment_notifications (irreversible).","parameters":[{"name":"notificationId","description":"Unique identifier of the notification event to be deleted.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve or search for notification delivery attempts associated with a single notification (ats_recruitment_notification_deliveries) by notificationId. Supports filtering, pagination, and sorting of delivery attempts (channels, addresses, delivery state, etc.) for compliance, troubleshooting, and audit use cases. Downstream delivery records can be analyzed to track delivery results and failure patterns.","description":"This operation fetches a paginated, filterable list of delivery attempts for a specified notification event (identified by notificationId). Return results include delivery channel, recipient address, status, result detail, and timestamp fields. Filtering and pagination support troubleshooting of failed/cancelled deliveries, compliance auditing, and analytics of notification reliability and recipient reachability.\n\nOnly authorized system roles (systemAdmin, hrRecruiter) can view delivery logs for notifications, with proper checks on both notification existence and caller privilege. The operation is business-read-only: it does not modify delivery state but supports cross-channel history review. Results may be sorted by delivered_at, channel, or attempt number. Response is a paged container of delivery records (summaries).\n\nSensitive delivery result details are included only for users with systemAdmin role, and logs are subject to business data retention and privacy policies. Access is audited for incident and compliance tracing. Downstream investigation of failed notifications can be triggered by analyzing the returned data.","summary":"List/search delivery attempts for a notification by notificationId (ats_recruitment_notification_deliveries).","parameters":[{"name":"notificationId","description":"ID of target notification for which to retrieve delivery logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Criteria for filtering, sorting, and paging notification delivery logs.","typeName":"IAtsRecruitmentNotificationDelivery.IRequest"},"responseBody":{"description":"Paged, filterable list of delivery attempts for specified notification.","typeName":"IPageIAtsRecruitmentNotificationDelivery"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/deliveries","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Retrieve or search for notification delivery attempts associated with a single notification (ats_recruitment_notification_deliveries) by notificationId. Supports filtering, pagination, and sorting of delivery attempts (channels, addresses, delivery state, etc.) for compliance, troubleshooting, and audit use cases. Downstream delivery records can be analyzed to track delivery results and failure patterns.","description":"This operation fetches a paginated, filterable list of delivery attempts for a specified notification event (identified by notificationId). Return results include delivery channel, recipient address, status, result detail, and timestamp fields. Filtering and pagination support troubleshooting of failed/cancelled deliveries, compliance auditing, and analytics of notification reliability and recipient reachability.\n\nOnly authorized system roles (systemAdmin, hrRecruiter) can view delivery logs for notifications, with proper checks on both notification existence and caller privilege. The operation is business-read-only: it does not modify delivery state but supports cross-channel history review. Results may be sorted by delivered_at, channel, or attempt number. Response is a paged container of delivery records (summaries).\n\nSensitive delivery result details are included only for users with systemAdmin role, and logs are subject to business data retention and privacy policies. Access is audited for incident and compliance tracing. Downstream investigation of failed notifications can be triggered by analyzing the returned data.","summary":"List/search delivery attempts for a notification by notificationId (ats_recruitment_notification_deliveries).","parameters":[{"name":"notificationId","description":"ID of target notification for which to retrieve delivery logs.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Criteria for filtering, sorting, and paging notification delivery logs.","typeName":"IAtsRecruitmentNotificationDelivery.IRequest"},"responseBody":{"description":"Paged, filterable list of delivery attempts for specified notification.","typeName":"IPageIAtsRecruitmentNotificationDelivery"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","path":"/atsRecruitment/hrRecruiter/notifications/{notificationId}/deliveries","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves details of a specific notification delivery attempt for a given notification event. The operation is mapped to the ats_recruitment_notification_deliveries table, which logs each attempt to deliver a notification (such as email, SMS, push) to a user, including delivery channel, recipient address, status, provider result, and audit timestamps. This endpoint is essential for troubleshooting, compliance review, or analytics about how and when a particular notification was (or was not) delivered. It also enables investigation into delivery errors or duplicate delivery events, as each delivery attempt (including retries, failures, or fallback methods) is uniquely identified. The operation ensures that only authorized actors (systemAdmin or HR roles) can access individual delivery records containing recipient contact details. If the referenced delivery or notification does not exist, or the user is not authorized, proper error handling and access control are enforced.","description":"This operation retrieves a single delivery attempt record associated with a notification from the notification delivery audit log. It returns all primary fields from the ats_recruitment_notification_deliveries table, including delivery_channel, recipient_address, delivery_status, delivery_attempt, completion/failure times, provider result details, and all audit timestamps for analytics and compliance review.\n\nOnly authorized users (system administrators or recruitment HRs) should be allowed to invoke this operation, as the delivery logs may contain recipient contact data and sensitive status about delivery attempts (such as email, SMS, or phone numbers). Secure access control, masking, and error handling are critical.\n\nThe operation references the notificationId and deliveryId as unique UUID path parameters, which together identify a specific delivery attempt tied to a notification event. It ensures data is fetched safely, with audit/compliance in mind, and provides a foundation for troubleshooting failed or undelivered notifications—showing full traceability of the notification lifecycle for business and legal purposes.\n\nRelated endpoints include the notification list and notification delivery POST/PUT to initiate or update a delivery attempt. If an invalid notificationId or deliveryId is provided, or if access is denied, detailed error messages are returned following system compliance guidelines.","summary":"Retrieve details for a specific notification delivery attempt (ats_recruitment_notification_deliveries table) by notification and delivery ID.","parameters":[{"name":"notificationId","description":"Unique identifier for the target notification event","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Unique identifier for the specific delivery attempt record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Delivery audit log details for this notification delivery attempt","typeName":"IAtsRecruitmentNotificationDelivery"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/deliveries/{deliveryId}","method":"get"},{"specification":"This operation retrieves details of a specific notification delivery attempt for a given notification event. The operation is mapped to the ats_recruitment_notification_deliveries table, which logs each attempt to deliver a notification (such as email, SMS, push) to a user, including delivery channel, recipient address, status, provider result, and audit timestamps. This endpoint is essential for troubleshooting, compliance review, or analytics about how and when a particular notification was (or was not) delivered. It also enables investigation into delivery errors or duplicate delivery events, as each delivery attempt (including retries, failures, or fallback methods) is uniquely identified. The operation ensures that only authorized actors (systemAdmin or HR roles) can access individual delivery records containing recipient contact details. If the referenced delivery or notification does not exist, or the user is not authorized, proper error handling and access control are enforced.","description":"This operation retrieves a single delivery attempt record associated with a notification from the notification delivery audit log. It returns all primary fields from the ats_recruitment_notification_deliveries table, including delivery_channel, recipient_address, delivery_status, delivery_attempt, completion/failure times, provider result details, and all audit timestamps for analytics and compliance review.\n\nOnly authorized users (system administrators or recruitment HRs) should be allowed to invoke this operation, as the delivery logs may contain recipient contact data and sensitive status about delivery attempts (such as email, SMS, or phone numbers). Secure access control, masking, and error handling are critical.\n\nThe operation references the notificationId and deliveryId as unique UUID path parameters, which together identify a specific delivery attempt tied to a notification event. It ensures data is fetched safely, with audit/compliance in mind, and provides a foundation for troubleshooting failed or undelivered notifications—showing full traceability of the notification lifecycle for business and legal purposes.\n\nRelated endpoints include the notification list and notification delivery POST/PUT to initiate or update a delivery attempt. If an invalid notificationId or deliveryId is provided, or if access is denied, detailed error messages are returned following system compliance guidelines.","summary":"Retrieve details for a specific notification delivery attempt (ats_recruitment_notification_deliveries table) by notification and delivery ID.","parameters":[{"name":"notificationId","description":"Unique identifier for the target notification event","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"Unique identifier for the specific delivery attempt record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Delivery audit log details for this notification delivery attempt","typeName":"IAtsRecruitmentNotificationDelivery"},"authorizationType":null,"authorizationRole":"hrRecruiter","name":"at","path":"/atsRecruitment/hrRecruiter/notifications/{notificationId}/deliveries/{deliveryId}","method":"get"},{"specification":"This operation creates a new delivery attempt log for a given notification. It is mapped to the ats_recruitment_notification_deliveries table, which tracks every attempt to deliver a notification event to a user by a specific channel (email, SMS, app push, etc). The operation requires notificationId as the reference and allows the creation of a delivery record with initial status, recipient address, delivery channel, and other key fields. It is used by system processes or HR tools to record each delivery (or retry/fallback), ensuring all attempts are auditable and traceable for compliance. Only systemAdmin or hrRecruiter roles should have access to create these logs, and the operation validates input, such as channel name, address, and delivery status per business rules.","description":"This API creates a new notification delivery attempt entry for a specific notification, logging the delivery channel, recipient address, initial status, and other relevant details into the ats_recruitment_notification_deliveries table. Business logic enforces channel type validation, address format checks (e.g., valid email/phone), and proper initial status, with all attempts indexed for compliance.\n\nOnly authorized users—system administrators or HR recruiters—can record a delivery attempt, preventing unauthorized audits or spoofing of delivery results. Full details are recorded in accordance with business and audit requirements, and each attempt is tracked with a delivery_attempt counter for retry logic.\n\nRelated endpoints include GET/PUT/DELETE for individual delivery attempts and listing or searching notification deliveries. Errors for invalid references, duplicate entries, or broken business rules are returned with descriptive, actionable messages.","summary":"Create a new log entry for a notification delivery attempt (ats_recruitment_notification_deliveries table) under a notification event.","parameters":[{"name":"notificationId","description":"UUID for the parent notification to which this delivery is linked","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data describing the new notification delivery attempt, including channel, address, and current status.","typeName":"IAtsRecruitmentNotificationDelivery.ICreate"},"responseBody":{"description":"The created notification delivery attempt object, as stored in the delivery audit log.","typeName":"IAtsRecruitmentNotificationDelivery"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"create","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/deliveries","method":"post","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation creates a new delivery attempt log for a given notification. It is mapped to the ats_recruitment_notification_deliveries table, which tracks every attempt to deliver a notification event to a user by a specific channel (email, SMS, app push, etc). The operation requires notificationId as the reference and allows the creation of a delivery record with initial status, recipient address, delivery channel, and other key fields. It is used by system processes or HR tools to record each delivery (or retry/fallback), ensuring all attempts are auditable and traceable for compliance. Only systemAdmin or hrRecruiter roles should have access to create these logs, and the operation validates input, such as channel name, address, and delivery status per business rules.","description":"This API creates a new notification delivery attempt entry for a specific notification, logging the delivery channel, recipient address, initial status, and other relevant details into the ats_recruitment_notification_deliveries table. Business logic enforces channel type validation, address format checks (e.g., valid email/phone), and proper initial status, with all attempts indexed for compliance.\n\nOnly authorized users—system administrators or HR recruiters—can record a delivery attempt, preventing unauthorized audits or spoofing of delivery results. Full details are recorded in accordance with business and audit requirements, and each attempt is tracked with a delivery_attempt counter for retry logic.\n\nRelated endpoints include GET/PUT/DELETE for individual delivery attempts and listing or searching notification deliveries. Errors for invalid references, duplicate entries, or broken business rules are returned with descriptive, actionable messages.","summary":"Create a new log entry for a notification delivery attempt (ats_recruitment_notification_deliveries table) under a notification event.","parameters":[{"name":"notificationId","description":"UUID for the parent notification to which this delivery is linked","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data describing the new notification delivery attempt, including channel, address, and current status.","typeName":"IAtsRecruitmentNotificationDelivery.ICreate"},"responseBody":{"description":"The created notification delivery attempt object, as stored in the delivery audit log.","typeName":"IAtsRecruitmentNotificationDelivery"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"create","path":"/atsRecruitment/hrRecruiter/notifications/{notificationId}/deliveries","method":"post","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Update an existing notification delivery attempt in ats_recruitment_notification_deliveries. This operation allows authorized users (systemAdmin or hrRecruiter) to modify the delivery status, recipient address, result details, or timing fields for a specific delivery attempt (such as marking a delivery as completed, recording provider feedback, or updating the delivery channel if a fallback was used). Referenced by both notificationId and deliveryId as unique identifiers. Enforces input validation, logs changes for compliance, and rejects unauthorized access.","description":"Allows privileged actors to update the audit log record of a notification delivery attempt, specifically fields such as delivery_status, recipient_address, delivery_result_detail, delivery_attempt count, and actual delivered/failed timestamps. Used both for business-side manual corrections and automated update flows (such as provider callback updates).\n\nSecurity and access restrictions are enforced, so only systemAdmin and hrRecruiter roles may modify these delivery records. All changes are logged for full auditing, and only mutable fields are editable. Nonexistent or deleted notifications/deliveries result in descriptive error responses, as do failed authentication or rule violations.","summary":"Update the parameters or status of a notification delivery attempt (ats_recruitment_notification_deliveries table) for a specific deliveryId.","parameters":[{"name":"notificationId","description":"UUID of the parent notification event","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"UUID of the delivery attempt log to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the notification delivery attempt, such as status, channel, address, and timestamps.","typeName":"IAtsRecruitmentNotificationDelivery.IUpdate"},"responseBody":{"description":"The updated notification delivery attempt record (full details).","typeName":"IAtsRecruitmentNotificationDelivery"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"update","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/deliveries/{deliveryId}","method":"put","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"Update an existing notification delivery attempt in ats_recruitment_notification_deliveries. This operation allows authorized users (systemAdmin or hrRecruiter) to modify the delivery status, recipient address, result details, or timing fields for a specific delivery attempt (such as marking a delivery as completed, recording provider feedback, or updating the delivery channel if a fallback was used). Referenced by both notificationId and deliveryId as unique identifiers. Enforces input validation, logs changes for compliance, and rejects unauthorized access.","description":"Allows privileged actors to update the audit log record of a notification delivery attempt, specifically fields such as delivery_status, recipient_address, delivery_result_detail, delivery_attempt count, and actual delivered/failed timestamps. Used both for business-side manual corrections and automated update flows (such as provider callback updates).\n\nSecurity and access restrictions are enforced, so only systemAdmin and hrRecruiter roles may modify these delivery records. All changes are logged for full auditing, and only mutable fields are editable. Nonexistent or deleted notifications/deliveries result in descriptive error responses, as do failed authentication or rule violations.","summary":"Update the parameters or status of a notification delivery attempt (ats_recruitment_notification_deliveries table) for a specific deliveryId.","parameters":[{"name":"notificationId","description":"UUID of the parent notification event","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"UUID of the delivery attempt log to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update for the notification delivery attempt, such as status, channel, address, and timestamps.","typeName":"IAtsRecruitmentNotificationDelivery.IUpdate"},"responseBody":{"description":"The updated notification delivery attempt record (full details).","typeName":"IAtsRecruitmentNotificationDelivery"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"update","path":"/atsRecruitment/hrRecruiter/notifications/{notificationId}/deliveries/{deliveryId}","method":"put","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"Remove (hard-delete, non-recoverable) a notification delivery attempt record from the ats_recruitment_notification_deliveries table. This operation is reserved for system administrators for legal compliance or error correction; it is NOT for normal business data deletion and should be used only with clear audit rationale. The operation targets a delivery attempt identified by notificationId and deliveryId, verifies existence, performs audit-logged deletion, and returns no content. This is a true removal as there is no soft-delete field, ensuring records are completely purged from the database.","description":"This API permanently deletes a notification delivery attempt record, as identified by the notificationId and deliveryId. This operation should only be available to systemAdmin users, and is primarily used for compliance situations, legacy error correction, or data retention management—not for routine workflow. All such deletions should be accompanied by audit trail updates, and, if required, be justified with an outcome note.\n\nNo response body is returned for this operation. Any attempt to erase a non-existent or already-removed record will generate an error message in line with system error and compliance guidelines. Standard security and authorization practices are in place, requiring appropriate system-level permissions.","summary":"Hard-delete a notification delivery attempt record (ats_recruitment_notification_deliveries) by notification and delivery IDs. Permanent removal—no soft delete logic applies.","parameters":[{"name":"notificationId","description":"UUID reference for the related notification event","schema":{"type":"string","format":"uuid"}},{"name":"deliveryId","description":"UUID of the notification delivery attempt to permanently delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/deliveries/{deliveryId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves a paginated, filterable list of notification templates for the ATS recruitment system. The endpoint operates on the ats_recruitment_notification_templates table from the Prisma schema, allowing system administrators to search, filter, and sort through reusable templates used for notifications (such as SMS, email, and app push) sent to applicants, HR recruiters, and other system actors. The operation is intended to support template management workflows including localization, message customization, and maintenance of active/inactive templates. Pagination and advanced search on template code, channel, body content, and title are supported to facilitate quick navigation and maintenance in high-volume environments.","description":"Fetches a list of notification templates from the ats_recruitment_notification_templates table, allowing clients to apply filters, sorting, and pagination. This is designed to aid administrators in managing notification templates by channel or message type.\n\nTemplates can be searched by code, channel, title, and message body using full-text and partial match search. The filter parameters allow system admins to locate templates needing updates, review message content for compliance, or deactivate obsolete templates.\n\nOnly systemAdmin users have access to this operation, as notification template editing is a privileged administrative function. The response returns template summary data (including IDs, codes, channels, and activation status) for UI listing. Detailed read/edit should use the single-resource endpoint by templateId.\n\nValidation includes checking that filtering and sorting fields align with existing template columns, and that pagination parameters remain within service bounds. Error responses return detailed reasons for misconfiguration or excessive result set requests.","summary":"Retrieve a paginated and filterable list of notification templates for system-wide notifications (ats_recruitment_notification_templates).","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for notification template retrieval.","typeName":"IAtsRecruitmentNotificationTemplate.IRequest"},"responseBody":{"description":"Paginated summary list of notification templates matching the criteria.","typeName":"IPageIAtsRecruitmentNotificationTemplate.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/notificationTemplates","method":"patch"},{"specification":"This operation retrieves detailed information about a single notification template from the ats_recruitment_notification_templates table, specified by its unique templateId. It is used by system administrators to view content, status, and configuration details of a notification template before editing or reviewing its usage in the ATS. It supports auditing of template content, channel configuration, and allows for inspection prior to update or deactivation workflows.","description":"Fetches all available details for a specific notification template, identified by templateId, from the underlying ats_recruitment_notification_templates table. The details include template code, channel, title, subject, message body, status (active/inactive), and creation or update timestamps.\n\nAccess is restricted to users with systemAdmin role, in support of editorial and compliance responsibilities for outbound communication. The operation is crucial for regulatory audits, reviewing localized or channel-specific content, and preparing template updates.\n\nParameter validation ensures the templateId matches an existing record and is a valid UUID. If the record is not found or access is denied, an appropriate error is returned.","summary":"Retrieve detailed content and configuration for a specific notification template (ats_recruitment_notification_templates).","parameters":[{"name":"templateId","description":"Unique identifier of the notification template to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed definition of the notification template, including all configuration, content, and metadata fields.","typeName":"IAtsRecruitmentNotificationTemplate"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/notificationTemplates/{templateId}","method":"get"},{"specification":"This operation creates a new notification template in the ats_recruitment_notification_templates table. System administrators use this endpoint to define message templates (for SMS, email, app push, etc.) that will be used for system-generated notifications to applicants, HR, and reviewers throughout ATS business workflows. It supports specifying template code, channel, title, subject, body content, and active status. All creation actions are auditable for compliance and support purposes.","description":"Registers a new notification template in the ATS system, mapping to the ats_recruitment_notification_templates model in the Prisma schema. The required fields include the template_code (unique business key), channel (e.g., email, sms, app_push), title, subject, message body, and is_active flag. This enables flexible control over outgoing communication formats for various business events, such as application status updates, interview scheduling, or export confirmations.\n\nOnly users with the systemAdmin role are authorized to perform this operation, given the sensitivity of outbound message content. Validation logic ensures the template_code/channel combination is unique, all required fields are present, and content complies with open text input policies.\n\nUpon success, the API returns the full created notification template record, which is immediately available for use in notification workflows. Errors return explanatory messages for uniqueness conflicts or content validation issues.","summary":"Create a new notification template for ATS notification workflows (ats_recruitment_notification_templates).","parameters":[],"requestBody":{"description":"Information for creating a new notification template, including required business logic fields.","typeName":"IAtsRecruitmentNotificationTemplate.ICreate"},"responseBody":{"description":"The newly created notification template including all stored fields.","typeName":"IAtsRecruitmentNotificationTemplate"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"create","path":"/atsRecruitment/systemAdmin/notificationTemplates","method":"post"},{"specification":"This operation updates an existing notification template in the ats_recruitment_notification_templates table, specified by templateId. It allows system administrators to edit the template code, channel, message body, activation status, and related content fields as notification requirements change. This supports routine template maintenance, compliance updates, localization changes, or correction of prior errors. All update actions are fully auditable for compliance.","description":"Updates the configuration and message content of a specific notification template identified by templateId, using data provided in the request body. Editable fields include template_code, channel, title, subject, body content, and is_active status, as defined in the Prisma schema. Only systemAdmin users have access to this operation, in line with audit and compliance requirements for outbound communication.\n\nThe endpoint validates that the specified templateId exists and that proposed changes do not violate field constraints or unique business keys (template_code/channel uniqueness). Content is checked for format, completeness, and compliance with notification delivery standards.\n\nErrors during processing provide detailed feedback on why updates failed, especially for uniqueness, field validation, or missing templates. Upon success, returns the fully updated notification template entity.","summary":"Update the content and configuration of an existing notification template (ats_recruitment_notification_templates).","parameters":[{"name":"templateId","description":"Unique identifier of the notification template to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields and content to update, following business rules and attribute constraints. Partial or full update is supported.","typeName":"IAtsRecruitmentNotificationTemplate.IUpdate"},"responseBody":{"description":"Fully updated notification template including all configured values.","typeName":"IAtsRecruitmentNotificationTemplate"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"update","path":"/atsRecruitment/systemAdmin/notificationTemplates/{templateId}","method":"put"},{"specification":"This operation permanently deletes a notification template from the ats_recruitment_notification_templates table. It is a hard delete action, removing the template identified by 'templateId' and all its data, such as the template code, channel, title, subject, body, and state (is_active). Only system administrators are authorized to perform this operation because notification templates may affect system-wide notification delivery and compliance. All deletions are logged in the audit trail and cannot be undone.","description":"This endpoint enables system administrators to delete a notification template record, identified by 'templateId', from the notification templates table in the ATS system. Notification templates define the structure and content for various business notifications (email, SMS, etc.), and can only be managed at the system level for traceability and compliance.\n\nA successful DELETE operation fully removes the template, its metadata, and disables further use across notification workflows. This may affect linked notifications if the template is still actively referenced.\n\nDeleting a template is a privileged operation restricted to system administrators, requiring authentication and full trace logging. Errors may occur if the template does not exist or has already been deleted. The action is also recorded in the audit log for compliance. Associated templates are not recoverable after this operation.","summary":"Delete a notification template (ats_recruitment_notification_templates) by ID","parameters":[{"name":"templateId","description":"Unique identifier of the notification template to delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["systemAdmin"],"name":"erase","path":"/atsRecruitment/systemAdmin/notificationTemplates/{templateId}","method":"delete","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This API retrieves a filtered and paginated list of notification failure events associated with a specific notification, as stored in the ats_recruitment_notification_failures table. Notification failures track unsuccessful delivery attempts and provide context for post-mortem analysis and troubleshooting. The operation supports advanced search, sorting, and pagination to help administrators analyze frequent failure causes and recipients. Data fields include failure type, message, occurred_at, and related delivery identifiers.","description":"This endpoint allows authorized users (primarily system administrators and possibly HR recruiters) to search and view the history of notification delivery failures for a given notification. Notification failures record each case where a notification could not be delivered through its intended channel, including details such as failure type, error message, timestamp, and associated delivery attempts.\n\nThe operation supports search and filtering by various attributes such as failure type, recipient channel, delivery status, message pattern, and date ranges. Results are paginated for efficient review. This enables analysis of recurring notification issues, tracking compliance with alerting policies, and facilitating remediation—such as resending or escalation.\n\nAccess to failure records is typically restricted to admin roles due to sensitivity around notification content and error data, and all queries are logged for compliance.","summary":"Search and view paginated list of notification failure records (ats_recruitment_notification_failures) for a notification","parameters":[{"name":"notificationId","description":"Unique identifier of the notification whose failures are being queried.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search/filter and pagination parameters for notification failure records.","typeName":"IAtsRecruitmentNotificationFailure.IRequest"},"responseBody":{"description":"Paginated list of notification failure record summaries matching search/filter criteria.","typeName":"IPageIAtsRecruitmentNotificationFailure.ISummary"},"authorizationRoles":["systemAdmin"],"name":"index","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/failures","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This operation retrieves the detailed information of a specific notification failure record from the ats_recruitment_notification_failures table, using both notificationId and failureId as path parameters. Each notification failure record logs an unsuccessful delivery attempt, providing error type, message, timestamps, and associated delivery identifiers for audit and troubleshooting. Only accessible by system administrators for compliance and error analysis.","description":"This endpoint fetches the complete detail of a particular notification failure event that occurred for a notification, as indexed by 'notificationId' and the specific failure's 'failureId'. The record includes information such as the failure mode (e.g., provider error, invalid address, user opt-out), detailed error message from the provider or system, event timestamp, and related delivery.\n\nThe data is used to conduct compliance reviews, debug notification delivery issues, and document problem trends. Access is restricted to system administrators due to the sensitivity and potential for exposure of recipient contact or operational error details.\n\nError scenarios include non-existent notification/failureId or unauthorized access. The operation is trace-logged for audit purposes. No request body is required for this GET operation, and the result is a structured object with full failure context.","summary":"Get details of a notification failure record (ats_recruitment_notification_failures) by notificationId and failureId","parameters":[{"name":"notificationId","description":"Unique identifier for the parent notification event.","schema":{"type":"string","format":"uuid"}},{"name":"failureId","description":"Unique identifier for the failure record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full notification failure record details, including error message, failure type, and timestamps.","typeName":"IAtsRecruitmentNotificationFailure"},"authorizationRoles":["systemAdmin"],"name":"at","path":"/atsRecruitment/systemAdmin/notifications/{notificationId}/failures/{failureId}","method":"get","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This API provides a paginated list of export job records (ats_recruitment_export_jobs), supporting advanced filtering, searching, and sorting based on export type, status, initiator, date ranges, and other criteria. Each export job represents a batch data extraction (e.g., applicant data, resume, job postings) for audit, compliance, analytics, or user self-service. The export jobs table records metadata, initiator identity, filter criteria, file URI, and status, restricting access to authorized HR, admin, or applicant actors.","description":"This endpoint allows authorized users such as HR recruiters or system administrators to search, filter, and retrieve a paginated list of export job records. Export jobs track system- or user-initiated requests to extract business data from the ATS platform into downloadable files, including export type (applicants, resumes, applications), request status, initiator IDs, and delivery details.\n\nThe PATCH method supports advanced querying and filtering for export job metadata: job status, type, filename, actor details, date intervals, and custom query via filter JSON. Results are paginated for efficiency as export jobs may number in the hundreds or thousands.\n\nExport jobs include sensitive business and personal data, so access is strictly limited to system admins and HR. All queries are trace-audited. This operation enables review, monitoring, and troubleshooting of all historical data exports for compliance and data governance.","summary":"Search, filter, and paginate export job records (ats_recruitment_export_jobs)","parameters":[],"requestBody":{"description":"Search, filter, or pagination parameters for export job search.","typeName":"IAtsRecruitmentExportJob.IRequest"},"responseBody":{"description":"Paginated list of export job summaries matching the query/filter.","typeName":"IPageIAtsRecruitmentExportJob.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","path":"/atsRecruitment/systemAdmin/exportJobs","method":"patch","authorizationRole":"systemAdmin","authorizationType":null},{"specification":"This API provides a paginated list of export job records (ats_recruitment_export_jobs), supporting advanced filtering, searching, and sorting based on export type, status, initiator, date ranges, and other criteria. Each export job represents a batch data extraction (e.g., applicant data, resume, job postings) for audit, compliance, analytics, or user self-service. The export jobs table records metadata, initiator identity, filter criteria, file URI, and status, restricting access to authorized HR, admin, or applicant actors.","description":"This endpoint allows authorized users such as HR recruiters or system administrators to search, filter, and retrieve a paginated list of export job records. Export jobs track system- or user-initiated requests to extract business data from the ATS platform into downloadable files, including export type (applicants, resumes, applications), request status, initiator IDs, and delivery details.\n\nThe PATCH method supports advanced querying and filtering for export job metadata: job status, type, filename, actor details, date intervals, and custom query via filter JSON. Results are paginated for efficiency as export jobs may number in the hundreds or thousands.\n\nExport jobs include sensitive business and personal data, so access is strictly limited to system admins and HR. All queries are trace-audited. This operation enables review, monitoring, and troubleshooting of all historical data exports for compliance and data governance.","summary":"Search, filter, and paginate export job records (ats_recruitment_export_jobs)","parameters":[],"requestBody":{"description":"Search, filter, or pagination parameters for export job search.","typeName":"IAtsRecruitmentExportJob.IRequest"},"responseBody":{"description":"Paginated list of export job summaries matching the query/filter.","typeName":"IPageIAtsRecruitmentExportJob.ISummary"},"authorizationRoles":["systemAdmin","hrRecruiter"],"name":"index","path":"/atsRecruitment/hrRecruiter/exportJobs","method":"patch","authorizationRole":"hrRecruiter","authorizationType":null},{"specification":"This operation retrieves detailed information about a specific export job from the ats_recruitment_export_jobs table. Each export job represents a request to export sensitive recruitment system data (such as applicants, applications, resumes, audit logs, or interview records) for compliance or business analytics. The operation returns all properties related to the export job, including initiator, status, filter criteria, delivery method, and file URI, if available.","description":"This API operation is designed to return the complete record for a single export job as modeled in the ats_recruitment_export_jobs Prisma schema. Each export job represents a request initiated by an authorized user (HR, admin, or applicant) to extract tabular data to CSV or Excel for compliance, reporting, or data portability.\n\nThe endpoint requires the export job's unique identifier (exportJobId) as a path parameter. On success, it will deliver current status, export type, filter and delivery configuration, initiator and contextual metadata, and—if available—a URI to download the exported file. Fields such as file_uri or delivered_at may be null if the job is in progress or has failed. Desensitized representation is used for sensitive fields where compliance is necessary.\n\nSecurity and permission controls ensure only authorized actors (usually the export initiator or users with sufficient privileges) may access this endpoint and sensitive data exposure is prevented by business logic. This operation is critical for user self-service data export tracking and administrator oversight.\n","summary":"Get detailed information about a specific export job from the ats_recruitment_export_jobs table.","parameters":[{"name":"exportJobId","description":"Unique identifier of the export job to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete export job information for the specified exportJobId, including status, metadata, filter, delivery status, and file URI if available.","typeName":"IAtsRecruitmentExportJob"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"at","path":"/atsRecruitment/hrRecruiter/exportJobs/{exportJobId}","method":"get"},{"specification":"This operation retrieves detailed information about a specific export job from the ats_recruitment_export_jobs table. Each export job represents a request to export sensitive recruitment system data (such as applicants, applications, resumes, audit logs, or interview records) for compliance or business analytics. The operation returns all properties related to the export job, including initiator, status, filter criteria, delivery method, and file URI, if available.","description":"This API operation is designed to return the complete record for a single export job as modeled in the ats_recruitment_export_jobs Prisma schema. Each export job represents a request initiated by an authorized user (HR, admin, or applicant) to extract tabular data to CSV or Excel for compliance, reporting, or data portability.\n\nThe endpoint requires the export job's unique identifier (exportJobId) as a path parameter. On success, it will deliver current status, export type, filter and delivery configuration, initiator and contextual metadata, and—if available—a URI to download the exported file. Fields such as file_uri or delivered_at may be null if the job is in progress or has failed. Desensitized representation is used for sensitive fields where compliance is necessary.\n\nSecurity and permission controls ensure only authorized actors (usually the export initiator or users with sufficient privileges) may access this endpoint and sensitive data exposure is prevented by business logic. This operation is critical for user self-service data export tracking and administrator oversight.\n","summary":"Get detailed information about a specific export job from the ats_recruitment_export_jobs table.","parameters":[{"name":"exportJobId","description":"Unique identifier of the export job to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Complete export job information for the specified exportJobId, including status, metadata, filter, delivery status, and file URI if available.","typeName":"IAtsRecruitmentExportJob"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}","method":"get"},{"specification":"This operation creates a new export job (ats_recruitment_export_jobs record) to request a batch export of recruitment system data, such as applicants, applications, resumes, or audit logs, to CSV/Excel. The operation records initiator, targeted data, filters, delivery method, and status. The job's result and file URI are generated asynchronously and can be polled with a detail API.","description":"This API operation enables authorized users (typically HR recruiters or system administrators) to initiate an export job by specifying the target data type (job_type), filter criteria, selected columns, and delivery method. Upon creation, the operation stores configuration and meta-information in the ats_recruitment_export_jobs table, marking job status as pending or generating.\n\nThe client provides configuration in the request body (such as filters, job_type, delivery method, and optional description), and the backend schedules background processing for the export. The export file itself is produced asynchronously; users can later poll the export job record to check the status and download the resulting file once available.\n\nAppropriate permission checks ensure that export operations are only available to authorized users, and sensitive data can only be requested and delivered within business rules. All operation details and context are included for audit and compliance logging.\n","summary":"Create an export job to request system data export to CSV/Excel, storing configuration, purpose, and initiator metadata.","parameters":[],"requestBody":{"description":"Export job creation parameters, including job_type, filter criteria, delivery method, and description as appropriate to IAtsRecruitmentExportJob.ICreate.","typeName":"IAtsRecruitmentExportJob.ICreate"},"responseBody":{"description":"The newly created export job record, reflecting initial status and configuration. May be pending or generating.","typeName":"IAtsRecruitmentExportJob"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"create","path":"/atsRecruitment/hrRecruiter/exportJobs","method":"post"},{"specification":"This operation creates a new export job (ats_recruitment_export_jobs record) to request a batch export of recruitment system data, such as applicants, applications, resumes, or audit logs, to CSV/Excel. The operation records initiator, targeted data, filters, delivery method, and status. The job's result and file URI are generated asynchronously and can be polled with a detail API.","description":"This API operation enables authorized users (typically HR recruiters or system administrators) to initiate an export job by specifying the target data type (job_type), filter criteria, selected columns, and delivery method. Upon creation, the operation stores configuration and meta-information in the ats_recruitment_export_jobs table, marking job status as pending or generating.\n\nThe client provides configuration in the request body (such as filters, job_type, delivery method, and optional description), and the backend schedules background processing for the export. The export file itself is produced asynchronously; users can later poll the export job record to check the status and download the resulting file once available.\n\nAppropriate permission checks ensure that export operations are only available to authorized users, and sensitive data can only be requested and delivered within business rules. All operation details and context are included for audit and compliance logging.\n","summary":"Create an export job to request system data export to CSV/Excel, storing configuration, purpose, and initiator metadata.","parameters":[],"requestBody":{"description":"Export job creation parameters, including job_type, filter criteria, delivery method, and description as appropriate to IAtsRecruitmentExportJob.ICreate.","typeName":"IAtsRecruitmentExportJob.ICreate"},"responseBody":{"description":"The newly created export job record, reflecting initial status and configuration. May be pending or generating.","typeName":"IAtsRecruitmentExportJob"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"create","path":"/atsRecruitment/systemAdmin/exportJobs","method":"post"},{"specification":"This operation updates an existing export job (ats_recruitment_export_jobs record) in the ATS system. Typically allowed only before a job is completed or delivered, it lets privileged users adjust description, selection filters, or configuration parameters, as permitted by business logic. Changes are recorded for compliance and audit trail.","description":"This API updates properties of a specific export job, such as job metadata, filter configuration, purpose description, or status, as allowed by system rules. The operation receives the export job's unique identifier (exportJobId) as a path parameter, and the new configuration attributes are provided in the request body according to the IAtsRecruitmentExportJob.IUpdate schema. Updates may only be permitted before export is finalized or delivered and should be subject to business constraints (e.g., status must permit changes).\n\nAll modifications are securely tracked and logged in audit records for compliance, and authorization is checked such that only the export initiator or system administrators can make updates. Attempts to modify completed/locked export jobs are handled gracefully with clear error messaging.\n","summary":"Update an export job's configuration or metadata if allowed by business policy and job status.","parameters":[{"name":"exportJobId","description":"Unique identifier of the export job to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update parameters for the export job, matching IAtsRecruitmentExportJob.IUpdate. Only permitted fields may be included.","typeName":"IAtsRecruitmentExportJob.IUpdate"},"responseBody":{"description":"The updated export job record, reflecting all successful changes. Includes full configuration and status.","typeName":"IAtsRecruitmentExportJob"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"update","path":"/atsRecruitment/hrRecruiter/exportJobs/{exportJobId}","method":"put"},{"specification":"This operation updates an existing export job (ats_recruitment_export_jobs record) in the ATS system. Typically allowed only before a job is completed or delivered, it lets privileged users adjust description, selection filters, or configuration parameters, as permitted by business logic. Changes are recorded for compliance and audit trail.","description":"This API updates properties of a specific export job, such as job metadata, filter configuration, purpose description, or status, as allowed by system rules. The operation receives the export job's unique identifier (exportJobId) as a path parameter, and the new configuration attributes are provided in the request body according to the IAtsRecruitmentExportJob.IUpdate schema. Updates may only be permitted before export is finalized or delivered and should be subject to business constraints (e.g., status must permit changes).\n\nAll modifications are securely tracked and logged in audit records for compliance, and authorization is checked such that only the export initiator or system administrators can make updates. Attempts to modify completed/locked export jobs are handled gracefully with clear error messaging.\n","summary":"Update an export job's configuration or metadata if allowed by business policy and job status.","parameters":[{"name":"exportJobId","description":"Unique identifier of the export job to update.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update parameters for the export job, matching IAtsRecruitmentExportJob.IUpdate. Only permitted fields may be included.","typeName":"IAtsRecruitmentExportJob.IUpdate"},"responseBody":{"description":"The updated export job record, reflecting all successful changes. Includes full configuration and status.","typeName":"IAtsRecruitmentExportJob"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"update","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}","method":"put"},{"specification":"This operation permanently removes (hard delete) an export job record from the ats_recruitment_export_jobs table. Hard deletion is only allowed by system policy when a job is not needed for compliance/audit. Affected relations may be cascade-deleted or require manual pruning. All deletion actions are tracked in audit logs.","description":"This API permanently deletes a specific export job from the database. Deletion is performed by supplying the export job's UUID as a path parameter. The system enforces that only users with appropriate privileges (system administrators or the original HR initiator) may execute this operation, and certain jobs may be protected against deletion for compliance reasons (e.g., completed exports may be retained).\n\nDeletion actions are recorded in audit logs and are irreversible; once deleted, the export job and all its child relations (such as export details, failures, etc.) are permanently removed from the active system, and only audit traces persist. Error handling includes graceful responses if the export job cannot be deleted due to business policy.\n\nNote: This is a hard delete action, not a soft delete. All compliance and regulatory requirements for data deletion should be enforced as part of the business logic.","summary":"Permanently delete an export job record (hard delete) from the ats_recruitment_export_jobs table.","parameters":[{"name":"exportJobId","description":"Unique identifier of the export job to permanently delete.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"systemAdmin","authorizationType":null,"name":"erase","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}","method":"delete"},{"specification":"This operation retrieves a paginated list of export job detail records for a particular export job. The detail records represent individual exported data items (e.g., applicant, application, resume, etc.) included in a downloadable batch for compliance tracking and auditing. It works on the ats_recruitment_export_job_details table, providing auditability and visibility into which records were exported under a given export job. Supports filtering and pagination based on search criteria, status, fields, and timestamps. Used by HR or administrative actors to monitor, review, or reprocess export data delivery.","path":"/atsRecruitment/hrRecruiter/exportJobs/{exportJobId}/details","method":"patch","summary":"Search and retrieve a paginated list of export job detail records for a specific export job (ats_recruitment_export_job_details).","description":"Fetch a paginated, filterable list of export job details for a specific export job. Each detail represents an individual item that was included in a previously requested data export (such as an applicant, application, or related entity). This function provides HR administrators with the ability to audit exported datasets, verify delivery completeness, and review which data records were delivered.\n\nSecurity: Only HR recruiters or system administrators associated with the export may access these details. Access is controlled by both the export job's initiator and organizational policies—system admins may audit all jobs. Details include key metadata such as the exported entity type, the data row's identifying information, and the inclusion timestamp.\n\nThis operation leverages the ats_recruitment_export_job_details table and its relations, including references to export_job_id, data_row_id, and summary fields.\n\nFiltering and pagination supports large-scale exports with thousands of included items. Error and edge cases include export jobs with no delivered records or in a failed state; in these cases, the response will return an empty dataset with relevant status information. Related APIs include export job status summaries and specific export job retrieval endpoints.","parameters":[{"name":"exportJobId","description":"Unique identifier for the parent export job to fetch details for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for export job detail records, including pagination and sorting options.","typeName":"IAtsRecruitmentExportJobDetail.IRequest"},"responseBody":{"description":"A paginated list of export job detail summary results for the given export job, including metadata, entity references, and inclusion timestamps.","typeName":"IPageIAtsRecruitmentExportJobDetail.ISummary"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"index"},{"specification":"This operation retrieves a paginated list of export job detail records for a particular export job. The detail records represent individual exported data items (e.g., applicant, application, resume, etc.) included in a downloadable batch for compliance tracking and auditing. It works on the ats_recruitment_export_job_details table, providing auditability and visibility into which records were exported under a given export job. Supports filtering and pagination based on search criteria, status, fields, and timestamps. Used by HR or administrative actors to monitor, review, or reprocess export data delivery.","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}/details","method":"patch","summary":"Search and retrieve a paginated list of export job detail records for a specific export job (ats_recruitment_export_job_details).","description":"Fetch a paginated, filterable list of export job details for a specific export job. Each detail represents an individual item that was included in a previously requested data export (such as an applicant, application, or related entity). This function provides HR administrators with the ability to audit exported datasets, verify delivery completeness, and review which data records were delivered.\n\nSecurity: Only HR recruiters or system administrators associated with the export may access these details. Access is controlled by both the export job's initiator and organizational policies—system admins may audit all jobs. Details include key metadata such as the exported entity type, the data row's identifying information, and the inclusion timestamp.\n\nThis operation leverages the ats_recruitment_export_job_details table and its relations, including references to export_job_id, data_row_id, and summary fields.\n\nFiltering and pagination supports large-scale exports with thousands of included items. Error and edge cases include export jobs with no delivered records or in a failed state; in these cases, the response will return an empty dataset with relevant status information. Related APIs include export job status summaries and specific export job retrieval endpoints.","parameters":[{"name":"exportJobId","description":"Unique identifier for the parent export job to fetch details for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for export job detail records, including pagination and sorting options.","typeName":"IAtsRecruitmentExportJobDetail.IRequest"},"responseBody":{"description":"A paginated list of export job detail summary results for the given export job, including metadata, entity references, and inclusion timestamps.","typeName":"IPageIAtsRecruitmentExportJobDetail.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index"},{"specification":"This operation retrieves a specific export job detail record by its unique identifier within a given export job. It provides auditors or HR admins with per-row summary information, including row summary JSON, inclusion timestamp, and referenced data entity. Operates on ats_recruitment_export_job_details, enforcing parent-child exportJobId/detailId for access control and hierarchical auditing.","path":"/atsRecruitment/hrRecruiter/exportJobs/{exportJobId}/details/{detailId}","method":"get","summary":"Retrieve a specific export job detail record by exportJobId and detailId (ats_recruitment_export_job_details).","description":"Get a specific export job detail record by providing both the export job's unique ID and the detail row's unique ID. The returned record provides audit-level detail, including entity identity (e.g., applicant, application, resume), summarized record fields, and the timestamp when this data item was exported.\n\nThis endpoint is used by HR recruiters and system administrators to trace which data rows were included in a particular export, validate data delivery integrity, and support compliance reporting.\n\nAccess control ensures only the relevant export job initiator, administrative staff, or authorized compliance officers may perform this operation. Underlying access control checks both the export job's permissions and the export job detail's parent-child relationship.\n\nIf the specified detail does not exist for the given export job, the system returns a not found or forbidden error.\n\nRelated APIs include export job detail listing and export summary endpoints.","parameters":[{"name":"exportJobId","description":"Unique identifier for the export job this detail belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"detailId","description":"Unique identifier for the export job detail row to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The unique export job detail record matching the provided IDs, with all summary fields and identity properties.","typeName":"IAtsRecruitmentExportJobDetail"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"at"},{"specification":"This operation retrieves a specific export job detail record by its unique identifier within a given export job. It provides auditors or HR admins with per-row summary information, including row summary JSON, inclusion timestamp, and referenced data entity. Operates on ats_recruitment_export_job_details, enforcing parent-child exportJobId/detailId for access control and hierarchical auditing.","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}/details/{detailId}","method":"get","summary":"Retrieve a specific export job detail record by exportJobId and detailId (ats_recruitment_export_job_details).","description":"Get a specific export job detail record by providing both the export job's unique ID and the detail row's unique ID. The returned record provides audit-level detail, including entity identity (e.g., applicant, application, resume), summarized record fields, and the timestamp when this data item was exported.\n\nThis endpoint is used by HR recruiters and system administrators to trace which data rows were included in a particular export, validate data delivery integrity, and support compliance reporting.\n\nAccess control ensures only the relevant export job initiator, administrative staff, or authorized compliance officers may perform this operation. Underlying access control checks both the export job's permissions and the export job detail's parent-child relationship.\n\nIf the specified detail does not exist for the given export job, the system returns a not found or forbidden error.\n\nRelated APIs include export job detail listing and export summary endpoints.","parameters":[{"name":"exportJobId","description":"Unique identifier for the export job this detail belongs to.","schema":{"type":"string","format":"uuid"}},{"name":"detailId","description":"Unique identifier for the export job detail row to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The unique export job detail record matching the provided IDs, with all summary fields and identity properties.","typeName":"IAtsRecruitmentExportJobDetail"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at"},{"specification":"This operation retrieves a paginated list of export job failure records tied to the given export job. Failures represent incidents during export processes including filtering, generating, delivering, or emailing, for compliance, debugging, and post-mortem tracking. It provides HR and administrative staff with business context (stage, reason, timestamp) for each failure. Operates on ats_recruitment_export_failures table, with export_job_id as the parent reference, and supports filtering and search for incident management.","path":"/atsRecruitment/hrRecruiter/exportJobs/{exportJobId}/failures","method":"patch","summary":"Search and retrieve paginated export job failure records tied to a specific export job (ats_recruitment_export_failures).","description":"Fetch a paginated, filterable list of export job failure records for a specific export job. Each failure record documents a process error or exception that occurred during export generation, delivery, or data assembly. This allows HR recruiters and system administrators to monitor for incidents, perform root-cause analysis, and maintain regulatory audit trails on all failed or exceptional export behaviors.\n\nOperation references the ats_recruitment_export_failures table, including fields for stage, failure reason, timestamp, export job reference, and internal messages. Filtering and searching is available by failure stage, timestamp, message, or other process metadata. Security is enforced so only actors associated with the export job or system admins can access this failure history.\n\nEmpty result sets are expected in the event of fully successful export jobs. Error scenarios include parent export job not found or no matching failures for the filters applied.","parameters":[{"name":"exportJobId","description":"Unique identifier for the parent export job to fetch failure records for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for export job failure records, including pagination, stage filtering, or keyword search.","typeName":"IAtsRecruitmentExportFailure.IRequest"},"responseBody":{"description":"Paginated list of export job failure records with stage, reason, and audit metadata for each failure event.","typeName":"IPageIAtsRecruitmentExportFailure"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"index"},{"specification":"This operation retrieves a paginated list of export job failure records tied to the given export job. Failures represent incidents during export processes including filtering, generating, delivering, or emailing, for compliance, debugging, and post-mortem tracking. It provides HR and administrative staff with business context (stage, reason, timestamp) for each failure. Operates on ats_recruitment_export_failures table, with export_job_id as the parent reference, and supports filtering and search for incident management.","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}/failures","method":"patch","summary":"Search and retrieve paginated export job failure records tied to a specific export job (ats_recruitment_export_failures).","description":"Fetch a paginated, filterable list of export job failure records for a specific export job. Each failure record documents a process error or exception that occurred during export generation, delivery, or data assembly. This allows HR recruiters and system administrators to monitor for incidents, perform root-cause analysis, and maintain regulatory audit trails on all failed or exceptional export behaviors.\n\nOperation references the ats_recruitment_export_failures table, including fields for stage, failure reason, timestamp, export job reference, and internal messages. Filtering and searching is available by failure stage, timestamp, message, or other process metadata. Security is enforced so only actors associated with the export job or system admins can access this failure history.\n\nEmpty result sets are expected in the event of fully successful export jobs. Error scenarios include parent export job not found or no matching failures for the filters applied.","parameters":[{"name":"exportJobId","description":"Unique identifier for the parent export job to fetch failure records for.","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Search and filter criteria for export job failure records, including pagination, stage filtering, or keyword search.","typeName":"IAtsRecruitmentExportFailure.IRequest"},"responseBody":{"description":"Paginated list of export job failure records with stage, reason, and audit metadata for each failure event.","typeName":"IPageIAtsRecruitmentExportFailure"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index"},{"specification":"This operation retrieves a specific export job failure record by its unique identifier within a given export job. The response contains detailed information about the stage where the failure happened, root-cause error reason, and a precise timestamp—essential for compliance, debugging, and post-mortem analysis. Direct access by system admin or the HR staff who initiated the job is enforced. Relates to ats_recruitment_export_failures with hierarchical access (exportJobId/failureId).","path":"/atsRecruitment/hrRecruiter/exportJobs/{exportJobId}/failures/{failureId}","method":"get","summary":"Retrieve a specific export job failure record by exportJobId and failureId (ats_recruitment_export_failures).","description":"Get a specific export job failure record for a given export job by providing both the unique export job ID and the failure record's ID. The operation returns detailed fields covering failure stage, processing context, root-cause message, and timestamp, allowing for deep incident analysis and compliance reporting.\n\nThis function is available to HR recruiters or system administrators who own or manage the export job. Access control verifies both job ownership and administrative privilege. If the export job or failure record does not exist or access is not permitted, a not found or forbidden error will result. Used together with list/search operations for analytics or troubleshooting export pipeline issues.","parameters":[{"name":"exportJobId","description":"Unique identifier for the associated export job.","schema":{"type":"string","format":"uuid"}},{"name":"failureId","description":"Unique identifier of the failure record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The export job failure record containing full context, root-cause explanation, and compliance metadata.","typeName":"IAtsRecruitmentExportFailure"},"authorizationRole":"hrRecruiter","authorizationType":null,"name":"at"},{"specification":"This operation retrieves a specific export job failure record by its unique identifier within a given export job. The response contains detailed information about the stage where the failure happened, root-cause error reason, and a precise timestamp—essential for compliance, debugging, and post-mortem analysis. Direct access by system admin or the HR staff who initiated the job is enforced. Relates to ats_recruitment_export_failures with hierarchical access (exportJobId/failureId).","path":"/atsRecruitment/systemAdmin/exportJobs/{exportJobId}/failures/{failureId}","method":"get","summary":"Retrieve a specific export job failure record by exportJobId and failureId (ats_recruitment_export_failures).","description":"Get a specific export job failure record for a given export job by providing both the unique export job ID and the failure record's ID. The operation returns detailed fields covering failure stage, processing context, root-cause message, and timestamp, allowing for deep incident analysis and compliance reporting.\n\nThis function is available to HR recruiters or system administrators who own or manage the export job. Access control verifies both job ownership and administrative privilege. If the export job or failure record does not exist or access is not permitted, a not found or forbidden error will result. Used together with list/search operations for analytics or troubleshooting export pipeline issues.","parameters":[{"name":"exportJobId","description":"Unique identifier for the associated export job.","schema":{"type":"string","format":"uuid"}},{"name":"failureId","description":"Unique identifier of the failure record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"The export job failure record containing full context, root-cause explanation, and compliance metadata.","typeName":"IAtsRecruitmentExportFailure"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at"},{"specification":"This operation retrieves a paginated and filtered list of access log records for the ATS recruitment system. The access log provides an audit trail of all sensitive data access events, including which user or system actor accessed which data, when, and from where. The endpoint supports advanced search, filtering, and pagination criteria, allowing security officers and compliance personnel to query logs by actor, date ranges, target data class, or access reasons. It operates on the ats_recruitment_access_logs table in the Prisma schema, supporting business functions such as compliance audits, forensic security investigation, and regulatory reporting. The response delivers a paginated list of detailed log records, each containing actor, data type, timestamps, IP/device context, and reason metadata. Only system administrators and audit-approved users are authorized. Related endpoints include single log detail retrieval and export operations.","description":"This API operation enables authorized administrators and auditors to query the complete access history of sensitive recruitment data within the ATS system. It supports complex filtering and search on actor type (applicant, recruiter, reviewer, admin, system), access target (resume, application, interview, credentials, etc.), access reason (normal operation, audit, compliance, incident investigation), and flexible date range queries. Full pagination and sorting are supported for high-volume log review.\n\nAuthorization controls restrict this endpoint to users with explicit audit/compliance roles, as log data can expose sensitive system behavior. Data returned is read-only and cannot be manipulated via this endpoint. Each access log entry adheres to the normalized schema field definitions, including target IDs, timestamps, and contextual device/network information.\n\nThe access logs table is foundational for regulatory compliance (e.g., GDPR, internal policy, client audits), fraud detection, and breach investigation. This endpoint is typically used in concert with other admin tools such as single log record lookup, export, and audit attestation workflows. All returned data is subject to redaction/masking policies where required.","summary":"Search and retrieve paginated access logs for ATS data access audit (ats_recruitment_access_logs table)","parameters":[],"requestBody":{"description":"Query, filter, and pagination criteria for searching access logs (by actor, data type, time range, access reason, etc.)","typeName":"IAtsRecruitmentAccessLog.IRequest"},"responseBody":{"description":"Paginated list of access log entries matching search and filter criteria.","typeName":"IPageIAtsRecruitmentAccessLog.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/atsRecruitment/systemAdmin/accessLogs","method":"patch"},{"specification":"This operation retrieves detailed information for a single access log record from the ATS access log system. The endpoint provides granular audit details, showing the actor, accessed data type and record, exact timestamp, IP/device context, and access reason for the individual event. It serves as the core forensic and compliance record for sensitive data access review, supporting regulatory and incident investigation. Only system administrators (systemAdmin role) and approved compliance staff can access this endpoint. The source is the ats_recruitment_access_logs Prisma table, with each record identified by its unique accessLogId (UUID).","description":"Use this API to obtain the complete details of a single data access event for security, audit, or compliance review purposes. The payload includes the actor who accessed the data, their role, the specific data type and record accessed, when and from where the access occurred, and any provided business/system reason. Data is returned as a read-only, immutable record for audit trail purposes. The accessLogId provided must match an existing record; attempts to access logs without sufficient permission or for deleted/invalid IDs will result in error.\n\nAccess is strictly limited to system administrators or explicitly authorized compliance auditors. The endpoint integrates with monitoring dashboards, incident response playbooks, and audit reconciliation tools. Combined with list endpoints and export workflows, it supports full compliance lifecycle and business policy enforcement for data usage transparency.","summary":"Get detailed single access log record for audit/compliance (ats_recruitment_access_logs table)","parameters":[{"name":"accessLogId","description":"Unique identifier (UUID) of the access log record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full access log record matching the given accessLogId, containing event and actor metadata.","typeName":"IAtsRecruitmentAccessLog"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/atsRecruitment/systemAdmin/accessLogs/{accessLogId}","method":"get"},{"specification":"This operation retrieves a paginated, filtered list of data deletion logs from the ATS security and compliance module. Each record documents a data deletion event (including GDPR requests, admin removals, and automated purges) and supports advanced searching and export for compliance officers. The endpoint targets the ats_recruitment_data_deletion_logs table in the Prisma schema. Filtering options include date ranges, requestor/initiator, deletion reason, target data class, and outcome. The operation is limited to system administrators and authorized compliance staff, and the response provides a paged result of normalized log summaries. Other endpoints provide single log detail retrieval and export. This endpoint is essential for demonstrating regulatory compliance and supporting audits.","description":"System administrators and compliance officers use this API operation to query and review the history of all sensitive data deletion events, such as user account removal, GDPR 'right to be forgotten' processing, admin-initiated purges, and policy-driven automated deletions. Logs indicate the actor/requestor, data class, deletion reason, timestamp, and the specific data ID affected. Full search, filtering, and pagination are supported to meet business, audit, and regulatory needs. Only users with the systemAdmin role or compliance approval can access this data.\n\nReturned data is exportable to support audit evidence and reporting duties. Log detail includes any retention/anonymization notes as mandated by internal and external policy. The endpoint is commonly used alongside data deletion details endpoints, compliance dashboards, and export mechanisms. Redaction is enforced if required by policy.","summary":"Search and retrieve paginated data deletion logs for compliance audit (ats_recruitment_data_deletion_logs table)","parameters":[],"requestBody":{"description":"Search, filter, and pagination parameters for deletion log retrieval (by actor, target data, date, reason, etc.)","typeName":"IAtsRecruitmentDataDeletionLog.IRequest"},"responseBody":{"description":"Paginated list of data deletion log entries as summaries.","typeName":"IPageIAtsRecruitmentDataDeletionLog.ISummary"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"index","path":"/atsRecruitment/systemAdmin/dataDeletionLogs","method":"patch"},{"specification":"This operation retrieves details of an individual data deletion event from the ATS data deletion log. The endpoint provides a complete record of the deletion, including requestor, data class/type, deletion reason, timestamp, and outcome annotation for full compliance review. Each deletion log is uniquely identified by dataDeletionLogId (UUID). Only system administrators and authorized compliance/compliance staff may access log details, supporting regulatory and customer audit requirements. The data source is the ats_recruitment_data_deletion_logs Prisma table, and this endpoint supports root-cause, audit, and legal reporting workflows.","description":"Use this API endpoint to obtain a detailed, immutable snapshot of a specific data deletion event within the ATS. Details include the user/system that initiated the deletion, what data type and record was deleted, when it occurred, for what reason, and any final note about the deletion outcome (e.g., full removal, anonymization, archiving). This is critical for confirming GDPR and internal compliance, incident investigation, and providing external audit evidence.\n\nRead access is limited to systemAdmin users or authorized auditors; retrieval by unauthorized roles is denied. Typical workflow: query/filter using the list endpoint, then inspect this detailed event. The record is read-only; no update or deletion is permitted through this endpoint. Combined with list and export APIs, it provides a complete audit trail for all regulated deletion activity.","summary":"Get details for a specific data deletion log event (ats_recruitment_data_deletion_logs table)","parameters":[{"name":"dataDeletionLogId","description":"Unique identifier (UUID) for the target data deletion log record.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detailed data deletion log record for the specified dataDeletionLogId.","typeName":"IAtsRecruitmentDataDeletionLog"},"authorizationRole":"systemAdmin","authorizationType":null,"name":"at","path":"/atsRecruitment/systemAdmin/dataDeletionLogs/{dataDeletionLogId}","method":"get"},{"specification":"This operation retrieves a paginated, filterable list of masking log records, enabling security, privacy, and compliance teams to review, audit, and analyze data masking events within the ATS recruitment system. It acts on the ats_recruitment_masking_logs table, supporting search by masked data type, actor, reason, and date range. The operation is crucial for demonstrating compliance with data privacy laws and investigating past masking activity.","description":"Query the system's ats_recruitment_masking_logs table to retrieve a paginated, filterable list of all data masking events. Each log entry includes metadata such as the actor who performed masking, the type and ID of masked data (e.g., resume, contact info), timestamp, and masking reason. This allows administrators and compliance officers to efficiently audit which data has been masked, by whom, and for what purpose, as required for privacy regulations such as GDPR.\n\nOnly users with system administrator (systemAdmin) privileges may access this API endpoint, ensuring sensitive data masking activity is not exposed to unauthorized actors. The operation supports advanced filtering (by reason, actor, type, date range) and sorting to allow rapid investigative or compliance reporting. Proper validation ensures only authorized access and input parameters are enforced to avoid leaking sensitive audit information. Detailed error handling should return appropriate messages for authorization errors or invalid queries.\n\nThe API uses the IAtsRecruitmentMaskingLog.IRequest DTO for search/filtering input and responds with a paginated summary list using the IPageIAtsRecruitmentMaskingLog.ISummary DTO.","summary":"Retrieve a paginated, filterable list of data masking log records from the ats_recruitment_masking_logs table.","parameters":[],"requestBody":{"description":"Query criteria and pagination options for masking log search. Supports filtering by type, actor, masking reason, and date range.","typeName":"IAtsRecruitmentMaskingLog.IRequest"},"responseBody":{"description":"Paginated list of masking log summaries matching the query criteria, for audit/compliance purposes.","typeName":"IPageIAtsRecruitmentMaskingLog.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/maskingLogs","method":"patch"},{"specification":"This operation retrieves a single data masking log record by its unique identifier, providing detailed audit information about a specific masking action. It accesses the ats_recruitment_masking_logs table and is used for compliance, audit, and investigatory scenarios that require granular view of a masking event's details.","description":"Given a unique maskingLogId, this API looks up and returns the complete detail of a specific masking log entry from the ats_recruitment_masking_logs table. The response includes masking timestamp, masked_by_id and type, target data type and ID, masking reason, and all relevant metadata.\n\nAccess is strictly restricted to system administrators (systemAdmin) because masking log data may reveal sensitive information about data privacy events and actors. This operation supports audit investigations and compliance reviews, providing a full historical record necessary for regulatory documentation or privacy incident response. Proper validation checks that the maskingLogId exists and the requester is authorized before returning details. If no such log entry exists, an appropriate error message is returned.\n\nRelated operations include the paginated masking log list (PATCH /maskingLogs) and similar audit endpoints for deletion and access logs.","summary":"Retrieve detailed information about a specific data masking log record.","parameters":[{"name":"maskingLogId","description":"Unique identifier of the masking log record to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full detail view of the requested masking log entry, for compliance and forensic tracing.","typeName":"IAtsRecruitmentMaskingLog"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/maskingLogs/{maskingLogId}","method":"get"},{"specification":"This operation retrieves a paginated and filterable list of authentication failure records, enabling system administrators and security officers to monitor and audit failed login attempts within the ATS system. Operating on the ats_recruitment_authentication_failures table, it supports security incident response and brute-force detection. Search criteria include attempted user, IP, failure reason, and time window.","description":"Query the ats_recruitment_authentication_failures table for a paginated list of failed authentication attempts, including failure reason, attempted user identifier, IP address, user agent, timestamp, and lockout status. This is critical for security teams to identify account abuse, brute-force patterns, and to comply with audit obligations.\n\nOnly system administrators (systemAdmin) may access this endpoint to prevent exposure of security-sensitive authentication failure data. Supported search filters include attempted username/email, time range, failure reason, and lockout events. The API validates input queries, restricts outputs to authorized users, and provides clear error messaging in case of invalid access or results.\n\nThis endpoint is related to authentication success logs, access logs, and masking/data deletion logs for a complete security audit picture.","summary":"Retrieve paginated, filterable list of authentication failure logs from ats_recruitment_authentication_failures.","parameters":[],"requestBody":{"description":"Filtering and pagination criteria for authentication failure logs, such as user, IP, failure reason, or time window.","typeName":"IAtsRecruitmentAuthenticationFailure.IRequest"},"responseBody":{"description":"Paginated list of summarized authentication failure records matching the filter criteria.","typeName":"IPageIAtsRecruitmentAuthenticationFailure.ISummary"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"index","path":"/atsRecruitment/systemAdmin/authenticationFailures","method":"patch"},{"specification":"This operation retrieves the details of a specific authentication failure log by its unique identifier, enabling security teams to investigate individual failed login attempts for forensics and compliance. It acts on the ats_recruitment_authentication_failures table and returns all relevant context for the identified event.","description":"Given a unique authenticationFailureId, this API returns the complete detail of a specific authentication failure event from the ats_recruitment_authentication_failures table, including timestamp, attempted user identity, failure reason, originating IP and user agent, and lockout trigger status. This information is vital for security incident investigation, brute-force analysis, and regulatory compliance.\n\nAccess is strictly limited to system administrators (systemAdmin) due to the sensitive nature of authentication failure contexts. The API ensures that the provided identifier is valid, that the record exists, and that response details are only delivered to authorized actors. This endpoint supports deep forensic audit scenarios as well as proactive security review. If the identifier does not correspond to an existing failure record, an appropriate error is returned with no sensitive information leakage.\n\nThis operation is related to the authentication failure list (PATCH /authenticationFailures) and other security/audit endpoints within the system.","summary":"Retrieve detailed view of a specific authentication failure log by ID.","parameters":[{"name":"authenticationFailureId","description":"Unique identifier for the authentication failure log to retrieve.","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Full details for the corresponding authentication failure event, including user/agent, failure reason, IP, and timestamp.","typeName":"IAtsRecruitmentAuthenticationFailure"},"authorizationType":null,"authorizationRole":"systemAdmin","name":"at","path":"/atsRecruitment/systemAdmin/authenticationFailures/{authenticationFailureId}","method":"get"}],"components":{"authorization":[{"name":"hrRecruiter","description":"채용 공고 등록, 지원자 목록 확인 및 관리, 이력서 평가, 면접 예약, 지원자 상태 추적, Google Calendar 연동, 합격/불합격 알림 처리 권한이 있습니다.","kind":"member"},{"name":"applicant","description":"이력서 업로드, 직무별 채용공고 확인, 지원 내역 및 상태 조회, 면접 일정 확인, 코딩테스트 응시 권한이 있습니다.","kind":"member"},{"name":"techReviewer","description":"지원자의 코딩테스트 검토, 기술 평가 및 코멘트 작성, 기술 스택 자동 분석 결과 확인 권한이 있습니다.","kind":"member"},{"name":"systemAdmin","description":"ATS 전체 시스템 환경설정, 사용자/권한 관리, 외부 API 연동 관리에 대한 권한이 있습니다.","kind":"admin"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIAtsRecruitmentSystemSetting":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentSystemSetting"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentExternalApiCredential.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentExternalApiCredential.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentEnum":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentEnum"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentAuditTrails":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentAuditTrails"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentApplicant.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentApplicant.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentHrRecruiter.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentHrRecruiter.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentTechReviewer.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentTechReviewer.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentSystemAdmin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentSystemAdmin.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentJobPosting.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentJobPosting.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentJobSkill.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentJobSkill.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentJobEmploymentType.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentJobEmploymentType.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentJobPostingState.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentJobPostingState.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentApplication":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentApplication"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentApplicationStatusHistory.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentApplicationStatusHistory.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentApplicationFeedback.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentApplicationFeedback.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentApplicationSkillMatch.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentApplicationSkillMatch.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentResume.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentResume.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentResumeUploadHistory":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentResumeUploadHistory"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentResumeAiAnalysis":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentResumeAiAnalysis"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentCodingTest":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentCodingTest"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentCodingTestSubmission":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentCodingTestSubmission"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentCodingTestResult":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentCodingTestResult"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentCodingTestReviewComment":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentCodingTestReviewComment"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentCodingTestExternalLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentCodingTestExternalLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentInterview.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentInterview.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentInterviewParticipant":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentInterviewParticipant"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentInterviewSchedule":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentInterviewSchedule"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentInterviewCalendarSync":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentInterviewCalendarSync"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentInterviewQuestion":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentInterviewQuestion"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentNotification.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentNotification.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentNotificationDelivery":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentNotificationDelivery"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentNotificationTemplate.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentNotificationTemplate.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentNotificationFailure.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentNotificationFailure.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentExportJob.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentExportJob.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentExportJobDetail.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentExportJobDetail.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentExportFailure":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentExportFailure"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentAccessLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentAccessLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentDataDeletionLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentDataDeletionLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentMaskingLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentMaskingLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentAuthenticationFailure.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentAuthenticationFailure.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IAtsRecruitmentHrRecruiter.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Unique email address for HR recruiter registration.\n\nThe email is used as the primary login credential, uniquely identifies an HR recruiter in the system, and must not be already registered in the platform. Format must be valid per RFC5322 (e.g., hruser@company.com).\n\nReferenced from the ats_recruitment_hrrecruiters Prisma schema's 'email' column."},"password":{"type":"string","minLength":8,"description":"Password in plain text to be provided for HR recruiter registration.\n\nThis will be securely hashed and never returned in any response. Minimum length enforcement as per security policy; must avoid weak dictionary passwords.\n\nReferenced from the registration business flow. Not stored directly, but mapped to 'password_hash' in the database."},"name":{"type":"string","description":"Full name of the HR recruiter to be displayed and used for business identification.\n\nMapped to the 'name' column in the ats_recruitment_hrrecruiters table."},"department":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional department or division the HR recruiter belongs to.\n\nImproves business process and reporting segmentation. Can be omitted or null for organizations without departmental separation. Referenced from the ats_recruitment_hrrecruiters schema's 'department' column."}},"required":["email","password","name"],"description":"HR recruiter registration payload, as used during onboarding (join) for the ATS. Matches core business/user registration fields from the ats_recruitment_hrrecruiters schema. Sensitive values like password are only accepted in this request and are not returned anywhere in responses."},"IAtsRecruitmentHrRecruiter.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Email address used to authenticate HR recruiter accounts (login credential).\n\nValue must match an existing registered account. References the 'email' field of the ats_recruitment_hrrecruiters table."},"password":{"type":"string","minLength":8,"description":"Plain text password for login authentication.\n\nMust correspond to the original password registered and is hashed for credential checking. \n\nNever returned in any response and never stored in responses, only checked for login validation."}},"required":["email","password"],"description":"Credential-based login request for an HR recruiter user. Accepts email/password, as mapped to the ats_recruitment_hrrecruiters table. Both fields are required; login attempts with missing or incorrect credentials will fail. Password is never returned or stored in clear text."},"IAtsRecruitmentHrRecruiter.IRefresh":{"type":"object","properties":{"refreshToken":{"type":"string","description":"JWT refresh token to be used for renewing the session's access token.\n\nIssued during successful join or login. Required to obtain new JWT credentials upon access token expiration. Never persisted in HR recruiter table; transmitted as opaque string to the backend.\n\nThe client must supply the latest refresh token value. Referenced from IAuthorizationToken.refresh_token."}},"required":["refreshToken"],"description":"Refresh request allowing client to obtain a new JWT access token. The only required field is the valid refreshToken previously issued by the authentication system."},"IAtsRecruitmentHrRecruiter.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated HR recruiter.\n\nMatches primary key (id) of the ats_recruitment_hrrecruiters table."},"email":{"type":"string","format":"email","description":"Business authentication email address of the HR recruiter.\n\nUniquely identifies the user for system login, notification, and display. Not modifiable after registration.\n\nReferences ats_recruitment_hrrecruiters.email."},"name":{"type":"string","description":"Full name of the authenticated HR recruiter.\n\nDisplays in system UI and notifications. Copied from the 'name' field in ats_recruitment_hrrecruiters."},"department":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional department assigned to the HR recruiter for business or reporting purposes.\n\nCan be null if not assigned. Maps to the 'department' column in ats_recruitment_hrrecruiters."},"is_active":{"type":"boolean","description":"Boolean status indicating whether the HR recruiter account is currently enabled.\n\nIf false, user is locked out from system operations. References ats_recruitment_hrrecruiters.is_active."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601, UTC) when the HR recruiter account was created.\n\nEnables traceability for audit/compliance. From ats_recruitment_hrrecruiters.created_at."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601, UTC) when the account was last modified.\n\nReference: ats_recruitment_hrrecruiters.updated_at."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Deletion timestamp if soft deleted, else null."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","name","is_active","created_at","updated_at","token"],"description":"Successful session authorization/identity return for an HR recruiter user. Provides user profile plus valid authorization tokens for secure API access.\n\nDerived from the authenticated ats_recruitment_hrrecruiters record and token issuing system. NEVER includes password or credential information in response. Ensures secure session setup for ATS recruitment platform operations."},"IAtsRecruitmentApplicant.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Applicant's email address for authentication and notification. Must be unique within the system as enforced by business logic and schema. This is a required field."},"password":{"type":"string","format":"password","description":"Plaintext password for initial applicant registration. This field is used for credential validation and is not persisted as-is; it is always stored as a one-way hash. Passwords must meet system policy for complexity and minimum length."},"name":{"type":"string","description":"Full name of the applicant, as entered on registration or parsed from resume data. Used for identification, searching, and context in the applicant's profile."},"phone":{"oneOf":[{"type":"string","description":"Optional phone number of the applicant for contact or notification. May be null if applicant chooses not to provide during registration."},{"type":"null"}],"description":"Optional phone number of the applicant for contact or notification. May be null if applicant chooses not to provide during registration."}},"required":["email","password","name"],"description":"Registration payload for creating a new applicant account.\n\nThis schema is used for incoming user registration requests for the ATS platform. It enforces all required profile fields for new applicants, including unique email, plaintext password (which will be hashed), the applicant's name, and optionally a phone number for contact and notifications. The password field is never returned in any response or resource representation. Security and business logic ensure proper account activation, uniqueness constraints, and audit trail for compliance.\n\nThis type directly maps to the ats_recruitment_applicants schema specification and is foundational for onboarding new users."},"IAtsRecruitmentApplicant.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the applicant account (UUID). Generated by the database. Used for all relationships and authenticated operations within the ATS system."},"email":{"type":"string","format":"email","description":"Applicant's primary authentication and notification email address. This field is always unique as per business and schema constraints."},"name":{"type":"string","description":"Full name of the applicant as stored in their registration profile."},"phone":{"oneOf":[{"type":"string","description":"Optional phone number used for contact and notification."},{"type":"null"}],"description":"Optional phone number used for contact and notification. May be null if not set by applicant."},"is_active":{"type":"boolean","description":"Indicates whether the applicant's account is currently active. True for permitted to log in and use services, false if blocked/disabled."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the applicant profile was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last profile update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp (null if active); for GDPR/trace purposes."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","name","is_active","created_at","updated_at","token"],"description":"Authorization response returned to the applicant after successful registration, login, or token refresh.\n\nContains applicant profile information and a token object (JWT and refresh token) for use in subsequent authenticated actions. Never includes password or hash. This type is compliant with the standardized IAuthorized contract and is used for all authentication flows as per ATS authentication specification."},"IAtsRecruitmentApplicant.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Applicant's unique email address. Used as the authentication credential for login. Must match an existing registered and active applicant in the system (case-insensitive unique constraint)."},"password":{"type":"string","format":"password","description":"Plaintext password for applicant authentication. Not persisted or returned outside the login request. Backend will validate this against the stored password_hash securely."}},"required":["email","password"],"description":"Login request body for ATS applicant authentication.\n\nIncludes email address and plaintext password as required properties to initiate a login attempt. The email is checked for existence and activity status; the password is verified against the securely stored hash. Invalid or inactive accounts are rejected by business logic. The password field is never returned in any response or resource body."},"IAtsRecruitmentApplicant.IRefresh":{"type":"object","properties":{"token":{"type":"string","description":"Valid refresh token previously issued to the applicant. Used to request a new access/refresh token pair without re-entering credentials. Must not be expired or revoked."}},"required":["token"],"description":"Token refresh operation schema for ATS applicant accounts.\n\nRequest payload for renewing a JWT access token using a previously issued refresh token. This schema supports the secure extension of authenticated sessions without requiring password login, as per business and authentication policy. Only a valid and unexpired refresh token is accepted."},"IAtsRecruitmentTechReviewer.ICreate":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"The unique email address for technical reviewer registration. Used for authentication and notification. Must be unique across the system. According to the Prisma schema, this field must be unique and is required."},"password":{"type":"string","description":"The plain text password for technical reviewer login, which should be securely hashed by the backend. Only provided during registration and never stored or returned in plaintext."},"name":{"type":"string","description":"Full name of the technical reviewer. Used for communication, indexing, and display."},"specialization":{"type":"string","description":"Optional field specifying the reviewer's key technology area or specialty. Used by HR to assign reviewers based on skill. Can be omitted if not relevant."}},"required":["email","password","name"],"description":"Payload for registering a new technical reviewer in the ATS system. Aligns with the Prisma model 'ats_recruitment_techreviewers'. Contains authentication, profile, and specialization information."},"IAtsRecruitmentTechReviewer.IAuthorized":{"type":"object","description":"Authorization response containing JWT token for technical reviewer login, join, and refresh flows. Follows required structure for authentication. Contains issued token and minimal reviewer identity. No sensitive password or proprietary profile info is exposed.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of the authenticated tech reviewer."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"]},"IAtsRecruitmentTechReviewer.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Technical reviewer’s email address for login authentication, linked to unique profile in ats_recruitment_techreviewers."},"password":{"type":"string","description":"Reviewer’s raw password (will be hashed for comparison). Only accepted in login, never returned in responses."}},"required":["email","password"],"description":"Request payload for technical reviewer credential authentication. Used in the login flow to obtain JWT tokens."},"IAtsRecruitmentSystemAdmin.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Administrator's login email address, unique in the system; referenced in 'ats_recruitment_systemadmins'. Required for authentication and notification."},"password":{"type":"string","description":"Plain text password to be hashed and stored for authentication. Only provided during registration, never returned in plaintext or responses."},"name":{"type":"string","description":"Full name of the administrator. Displayed in management interfaces and audit logs."},"super_admin":{"type":"boolean","description":"Optional flag to mark this account as a super administrator, providing full write/control privilege. Defaults to false if omitted."}},"required":["email","password","name"],"description":"Payload for registering a new system administrator (ats_recruitment_systemadmins) account, used for onboarding admin users with associated privilege level."},"IAtsRecruitmentTechReviewer":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the technical reviewer. Primary key from the ats_recruitment_techreviewers table."},"email":{"type":"string","format":"email","description":"Reviewer login and notification email (unique). Used for identity, authentication, and communication."},"name":{"type":"string","description":"Full name of the technical reviewer. Used in assignment, notifications, and profile display."},"specialization":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reviewer area of technical expertise (nullable). Used for reviewer assignment and skill-matching."},"is_active":{"type":"boolean","description":"Active status flag. true if the reviewer can log in and receive assignments, false if account is disabled."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (UTC ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Last modified timestamp (UTC ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-deletion timestamp. Null if the reviewer is active, otherwise ISO 8601 string for deletion time."}},"required":["id","email","name","is_active","created_at","updated_at"],"description":"Technical reviewer user account entity. Contains all profile information, system status, and audit fields for assignment, authentication and compliance."},"IAtsRecruitmentSystemAdmin.IAuthorized":{"type":"object","description":"Authorization response containing JWT token for system administrator login, join, and refresh flows. Follows standard authentication response requirements. Contains issued token and minimal user identity for session context establishment. Does not expose any password, hash, or internal admin record. See documentation for authentication schema compliance.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of the authenticated systemAdmin."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","token"]},"IAtsRecruitmentSystemAdmin.ILogin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Login identifier for the system administrator (ats_recruitment_systemadmins). The email address must be unique and registered in the platform."},"password":{"type":"string","description":"Raw password for system admin authentication (will be hashed for storage and comparison). Only accepted in requests, never returned in responses."}},"required":["email","password"],"description":"Request payload for authenticating a system administrator (login), based on registered email and password. Used for initial credential-based authentication prior to token issuance."},"IAtsRecruitmentSystemAdmin.IRefresh":{"type":"object","description":"Request to refresh JWT access token for an authenticated system administrator, using a valid refresh token. Returned after join/login is successful to extend admin session.","properties":{"refresh_token":{"type":"string","description":"Valid JWT refresh token assigned to the session for token renewal."}},"required":["refresh_token"]},"IAtsRecruitmentSystemSetting.IRequest":{"type":"object","description":"Request schema for searching and paginating ATS system settings. Used in admin UI and backends for advanced platform configuration workflows. All properties are optional for flexible filtering.","properties":{"setting_name":{"type":"string","description":"(Optional) Filter by exact setting name"},"setting_type":{"type":"string","description":"(Optional) Filter by configuration value type"},"created_after":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Restrict to system settings created after this UTC timestamp"},"created_before":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Restrict to system settings created before this UTC timestamp"},"is_active":{"type":"boolean","description":"(Optional) If true, only returns active (not soft-deleted) settings"},"page":{"type":"integer","description":"Page number for result set pagination, 1-based, default 1"},"limit":{"type":"integer","description":"Page size/limit for pagination, must be positive"}},"required":[]},"IAtsRecruitmentSystemSetting":{"type":"object","title":"ATS System Setting (Entity)","description":"Represents a single global system configuration setting for the ATS platform. Each setting controls a specific system-wide option, with a unique key (`setting_name`), a value in string format (`setting_value`), the data type of the value (`setting_type`), detailed documentation (`description`), and audit trail fields. Soft-deletion is supported via `deleted_at`, and timestamps track creation and modification.\n\nProperties are derived from the `ats_recruitment_system_settings` Prisma table; all fields must match database schema column types and business rules. This entity is used for get/find/detail API output and for administrative UIs showing and updating system configuration. All properties except `description` and `deleted_at` are required.","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique system-generated UUID for the system setting record."},"setting_name":{"type":"string","description":"The unique name/key for this configuration setting. Names must be unique across all settings and correspond to a platform-wide option."},"setting_value":{"type":"string","description":"The current value of the setting as a string. How this value is interpreted depends on `setting_type`."},"setting_type":{"type":"string","description":"Data type for interpreting `setting_value` (e.g., 'string', 'int', 'boolean', 'json')."},"description":{"oneOf":[{"type":"string","description":"Long-form free text documentation and maintenance notes for this setting. (optional)"},{"type":"null"}],"description":"Long-form free text documentation and maintenance notes for this setting. (optional)"},"created_at":{"type":"string","format":"date-time","description":"Timestamp of creation for this system setting record (ISO8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for this record (ISO8601 UTC)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for this configuration record (null if active)."}},"required":["id","setting_name","setting_value","setting_type","created_at","updated_at"]},"IAtsRecruitmentSystemSetting.ICreate":{"type":"object","properties":{"setting_name":{"type":"string","description":"Unique key/name for the new system setting to create. Must not conflict with existing setting_name values for data integrity."},"setting_value":{"type":"string","description":"Initial value of the setting in string format. Must be compatible with the provided setting_type, and must follow business validation logic."},"setting_type":{"type":"string","description":"Type of the setting (e.g., 'string', 'int', 'boolean', 'json'). Used to control how the setting_value is interpreted at runtime."},"description":{"oneOf":[{"type":"string","description":"Optional long-form documentation for the new setting (reason, context, or usage policy)."},{"type":"null","description":"Optional long-form documentation for the new setting (reason, context, or usage policy)."}],"description":"Optional long-form documentation for the new setting (reason, context, or usage policy)."}},"required":["setting_name","setting_value","setting_type"],"description":"Payload schema for creating a new ATS system setting. Used in system admin UI for platform configuration. Optional description provides business context/documentation for future maintainers."},"IAtsRecruitmentSystemSetting.IUpdate":{"type":"object","properties":{"setting_name":{"type":"string","description":"(Optional) Updated key/name for the setting. Used for renaming, but must retain global uniqueness."},"setting_value":{"type":"string","description":"(Optional) Updated value for the setting, must match setting_type constraints."},"setting_type":{"type":"string","description":"(Optional) Alternative type for the setting, used in migrations or policy changes."},"description":{"oneOf":[{"type":"string","description":"Optional updated description for the setting. Used to clarify new context or behavior."},{"type":"null","description":"Optional updated description for the setting. Used to clarify new context or behavior."}],"description":"Optional updated description for the setting. Used to clarify new context or behavior."}},"required":[],"description":"Payload schema for updating an existing ATS system setting. All properties are individually optional and used to patch fields without replacing the entire object. Used in granular configuration editing and management interfaces."},"IAtsRecruitmentExternalApiCredential.IRequest":{"type":"object","properties":{"credential_key":{"type":"string","description":"(Optional) Filter for records whose credential_key exactly matches this value. Used to search for a specific integration credential key (e.g., 'google_calendar_main')."},"service_name":{"type":"string","description":"(Optional) Filter to restrict to credentials with a given service_name (e.g., 'Google Calendar', 'SendGrid')."},"is_active":{"type":"boolean","description":"(Optional) If true, restrict to active credentials (not soft-deleted and not expired). If false, returns all records regardless of status."},"expires_after":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Restrict to credentials expiring after this timestamp (ISO8601 formatted). Used for filtering soon-to-expire or valid tokens."},{"type":"null","description":"(Optional) Restrict to credentials expiring after this timestamp (ISO8601 formatted). Used for filtering soon-to-expire or valid tokens."}],"description":"(Optional) Restrict to credentials expiring after this timestamp (ISO8601 formatted). Used for filtering soon-to-expire or valid tokens."},"expires_before":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Restrict to credentials expiring before this timestamp (ISO8601 formatted). Used for filtering already expired or soon-to-expire credentials."},{"type":"null","description":"(Optional) Restrict to credentials expiring before this timestamp (ISO8601 formatted). Used for filtering already expired or soon-to-expire credentials."}],"description":"(Optional) Restrict to credentials expiring before this timestamp (ISO8601 formatted). Used for filtering already expired or soon-to-expire credentials."},"page":{"type":"integer","description":"(Optional, 1-based) Page number for pagination. Default to 1 if omitted. Used when result sets are large."},"limit":{"type":"integer","description":"(Optional) Maximum number of results per page for pagination. Must be positive. Used to control result set size and page count."},"sort_by":{"type":"string","description":"(Optional) Field by which to sort results (e.g., 'created_at', 'service_name')."},"sort_order":{"oneOf":[{"const":"asc","description":"(Optional) Sort order direction. One of 'asc' (ascending) or 'desc' (descending)."},{"const":"desc","description":"(Optional) Sort order direction. One of 'asc' (ascending) or 'desc' (descending)."}],"description":"(Optional) Sort order direction. One of 'asc' (ascending) or 'desc' (descending)."}},"required":[],"description":"Request schema for searching/filtering/paginating ATS external API credentials (ats_recruitment_external_api_credentials). Used in admin UI or backend logic for secret management and audit."},"IAtsRecruitmentExternalApiCredential":{"type":"object","description":"Represents secure storage and metadata for an external API credential used by the ATS platform to integrate with third-party services. Fields mirror the corresponding Prisma schema. Contains encrypted credential data, expiration, and system-managed audit information. Passwords or tokens are never exposed via API endpoints. Used for admin and configuration management workflows only.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. System-generated UUID identifier for the credential entry (must match DB schema requirements)."},"credential_key":{"type":"string","description":"A globally unique, system-friendly key for referencing this credential configuration (e.g., 'google_calendar_main', 'sendgrid_email_default')."},"service_name":{"type":"string","description":"The human-readable name of the external service that this credential is for (e.g., 'Google Calendar', 'SendGrid', 'CodeSignal'). This is for display and administrative lookup."},"credential_json":{"type":"string","description":"The serialized credential data, typically a JSON object string holding third-party secrets/tokens/keys as returned by the provider. This is always encrypted at rest. Never exposed in responses by default."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional ISO 8601 expiration timestamp after which the credential should be considered invalid. Used for token rotation and lifecycle management."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business/context documentation explaining where or why this credential is used. Markdown/text allowed. Not PII."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp (in UTC) for the credential record."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the last update/change to this credential record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete marker used for credential removal/rotation operations. Null if credential is active. Read-only for business logic."}},"required":["id","credential_key","service_name","credential_json","created_at","updated_at"]},"IAtsRecruitmentExternalApiCredential.ICreate":{"type":"object","description":"Request body for registering a new external API credential. Used by admin users to register a new integration credential for third-party services. Mirrors all required columns from Prisma schema except system-managed audit fields. credential_json is required and holds the encrypted credential payload. expires_at and description are optional.","properties":{"credential_key":{"type":"string","description":"Globally unique key for this credential (must not clash with other entries)."},"service_name":{"type":"string","description":"Name of the third-party integration service for which this credential is valid."},"credential_json":{"type":"string","description":"Encrypted credential configuration in JSON stringified format as expected by client/provider. (Not literally plain text secret.)"},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Expiration date-time for this credential (optional). Null (or omitted) means no fixed expiration."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional documentation or comments for credential usage."}},"required":["credential_key","service_name","credential_json"]},"IAtsRecruitmentExternalApiCredential.IUpdate":{"type":"object","description":"Request body to update fields on an existing external API credential. Supports partial updates (PATCH semantics). At least one of the updatable fields must be provided. Never allows direct update of system audit fields or credential id. Used for key rotation, description changes, or service name update. Respects the same constraints and validation logic as the create DTO.","properties":{"credential_key":{"type":"string","description":"New unique credential key if changing the logical key. Must not duplicate another credential's key."},"service_name":{"type":"string","description":"New service name if changing the integrated service."},"credential_json":{"type":"string","description":"New encrypted credential payload (JSON string)."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional new expiration timestamp (null to clear)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Documentation or business rationale update."}},"required":[]},"IAtsRecruitmentEnum.IRequest":{"type":"object","description":"Request type for searching and paginating global enum registry values in the system. Allows advanced filter criteria by enum_type (e.g., 'application_status'), code, label, or other search values. Supports pagination via page/limit options.","properties":{"enum_type":{"type":"string","description":"Enum category/group to filter by (e.g., 'application_status', 'employment_type')."},"enum_code":{"type":"string","description":"Specific business code to search for within the enum type."},"label":{"type":"string","description":"Label text for searching matches in the UI/localized field."},"description":{"type":"string","description":"Text search on the enum value's description field (partial match)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter by deleted state: null = active only, or date-time = include soft-deleted records."},"page":{"type":"integer","minimum":1,"description":"Page number for paginated search (1-based index)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Maximum records to return per page for result set (default per system policy)."}},"required":[]},"IAtsRecruitmentEnum":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for this enum value. References the field 'id' in the ats_recruitment_enums Prisma table.\n\nThis value is system-generated upon creation and used for internal lookups and relationships throughout the ATS platform."},"enum_type":{"type":"string","description":"The type or namespace for this enum set, such as 'application_status', 'employment_type', or 'notification_channel'. Codes of the same type are grouped for central business validation and for lookup selector population (e.g., status dropdowns).\n\nThis field is required and must match the business grouping as managed within the platform and data dictionary."},"enum_code":{"type":"string","description":"Platform-wide business code (case-sensitive string) uniquely identifying a value within its enum_type. For example, 'APPLIED', 'INTERVIEWED', or 'EMAIL'. Used for system logic, API, and business rule matching.\n\nMust be unique in combination with enum_type."},"label":{"type":"string","description":"Human-friendly label for this code, used for UI displays, reports, and notifications. This string should be localized where appropriate.\n\nFor example: '서류 지원', '면접 대상', or '이메일 알림'."},"extended_data":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional JSON string or opaque value containing additional display or business metadata for the enum value. May include icon references, color codes, sort order, or other business attributes relevant for UI and workflow.\n\nField is nullable and JSON-encoded by convention."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional documentation or reference notes describing semantic usage of this enum code. Intended as developer/business documentation and may appear in platform admin screens."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this enum value was created in the system (ISO 8601). Used for auditing, management, or reporting purposes."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp showing when this enum entity was last updated (ISO 8601). Must be updated on every modification for compliance and traceability."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for the enum. Null if the code is currently active. If set to a date, this value was soft-deleted and is not in normal business use. Ensures compliance with business recovery, undo, and error handling policies."}},"required":["id","enum_type","enum_code","label","created_at","updated_at"],"description":"A global enumeration entry as defined in the ats_recruitment_enums Prisma table for business logic and UI value-set management.\n\nEach enum code is uniquely defined within its enum_type and associated with labels and optional metadata. Used for standardizing select options, status codes, business constants, and system-wide code management."},"IAtsRecruitmentEnums.ICreate":{"type":"object","properties":{"enum_type":{"type":"string","description":"The type or namespace to which this enum value belongs. Must match an agreed enum group (such as 'application_status', 'employment_type'). Required, non-null."},"enum_code":{"type":"string","description":"Unique code for this value within its enum_type (e.g., 'APPLIED', 'EMAIL', 'ADMIN'). Required, non-null. Used by both API and system logic."},"label":{"type":"string","description":"The user-facing label string for this enum value, for display in UIs, print, or notifications. Must be provided and should be human-readable and localized as needed."},"extended_data":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional field holding structured JSON (as string) or any display metadata to enrich the business representation for this enum value. May contain color, icon, or order info."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional field with documentation or business reference for this enum code. Intended for platform admin documentation or business analyst consumption."}},"required":["enum_type","enum_code","label"],"description":"Request body schema for creating a new enum value in ATS platform. All fields except extended_data and description are required."},"IAtsRecruitmentEnums":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for this enum value, per ats_recruitment_enums.id."},"enum_type":{"type":"string","description":"Grouping/namespace for this enum value (e.g., 'application_status', 'employment_type', etc.)."},"enum_code":{"type":"string","description":"Business code representing this value in its enum_type. Must be unique per type."},"label":{"type":"string","description":"Display label for this code, shown in UIs and reports."},"extended_data":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional JSON string with business or display metadata, such as UI colors, ordering, or custom attributes."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-readable notes for this code, used for documentation or admin screens."},"created_at":{"type":"string","format":"date-time","description":"Timestamp for creation of the enum value (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null if active; date-time if deleted."}},"required":["id","enum_type","enum_code","label","created_at","updated_at"],"description":"Full enum entity as used in the ats_recruitment_enums table and API response objects. Contains all admin/audit fields and business metadata."},"IAtsRecruitmentEnums.IUpdate":{"type":"object","properties":{"label":{"type":"string","description":"Updated display label for the enum value. Should be localized and user-facing."},"extended_data":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional update to extended metadata, encoded as JSON string if present. Allows storage of business, UI, or workflow metadata."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"An updated documentation string for this code, used for platform maintenance or admin reference."}},"required":[],"description":"Update schema for modifying an existing enum value in ATS. Only label, extended_data, and description can be updated; immutable fields such as enum_type and enum_code are not changeable after creation."},"IAtsRecruitmentAuditTrails.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"The page number for pagination (defaults to 1 if not present).","minimum":1},"limit":{"type":"integer","description":"Number of results per page.","minimum":1},"actor_id":{"type":"string","format":"uuid","description":"Filter logs where actor_id matches this UUID."},"actor_role":{"type":"string","description":"Filter by actor role string (e.g. hrRecruiter, applicant, systemAdmin, techReviewer)."},"operation_type":{"type":"string","description":"Filter by operation type (e.g. CREATE, UPDATE, DELETE, ACCESS, EXPORT, etc)."},"target_type":{"type":"string","description":"Filter by type of target object (e.g. application, enum, system_setting, user, audit_policy, etc)."},"target_id":{"type":"string","format":"uuid","description":"Filter by target object's ID."},"since":{"type":"string","format":"date-time","description":"Optional ISO8601 - only logs since this date/time."},"until":{"type":"string","format":"date-time","description":"Optional ISO8601 - only logs until this date/time."},"search":{"type":"string","description":"Full-text search on event_detail field, supports partial match."},"sort_by":{"type":"string","description":"Field to sort by (e.g. event_timestamp, actor_id, operation_type, etc)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction (asc/desc)."},{"const":"desc","description":"Sort direction (asc/desc)."}],"description":"Sort direction (asc/desc)."}},"required":[],"description":"Search and filtering criteria for ATS system audit trail records. Not all fields need to be set; filters are applied as provided. Supports full pagination, text search, and advanced field filtering for compliance review and traceability."},"IAtsRecruitmentAuditTrail":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique audit event identifier (@db.Uuid)."},"event_timestamp":{"type":"string","format":"date-time","description":"Timestamp when the audit event occurred."},"actor_id":{"type":"string","format":"uuid","description":"ID of the user/admin/system process performing the event (references actor tables)."},"actor_role":{"type":"string","description":"Role of the actor at time of event (e.g., systemAdmin, hrRecruiter, applicant, techReviewer, etc)."},"operation_type":{"type":"string","description":"Nature/type of operation (e.g., CREATE, UPDATE, DELETE, ACCESS, EXPORT, AUTH_FAILURE, etc)."},"target_type":{"type":"string","description":"Category/class of object/entity affected (e.g., system_setting, api_credential, enum, user, audit_policy, application, etc)."},"target_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"ID of the object/entity affected by this event (may be null if N/A)."},"event_detail":{"type":"string","description":"Plain text (or JSON serialized) containing full details/context of the event (e.g., before/after, request detail, error detail, meta)."},"ip_address":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address of event originator (for security tracking/incident investigation); nullable."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User agent or process context string (for human/system/integration tracking); nullable."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of audit record creation."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of audit record last update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if active. Used for recovery/audit trace."}},"required":["id","event_timestamp","actor_id","actor_role","operation_type","target_type","event_detail","created_at","updated_at"],"description":"ATS system audit trail record, tracking sensitive changes/access events. Used for compliance, incident analysis, and full system auditability. Directly reflects ats_recruitment_audit_trails table, including all meta fields. Sensitive user/actor and origin data included for traceability. May include recovery/audit soft delete data for regulatory compliance."},"IAtsRecruitmentApplicant.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"The requested page number for pagination. Optional."},"limit":{"type":"integer","description":"Maximum number of records per page. Optional, system max enforced."},"name":{"type":"string","description":"Filter by applicant full name (partial match, case-insensitive)."},"email":{"type":"string","format":"email","description":"Filter by applicant email address (exact match or partial, depending on implementation)."},"phone":{"type":"string","description":"Filter by applicant phone number (partial match)."},"is_active":{"type":"boolean","description":"Show only active (true) or inactive (false) accounts."},"created_since":{"type":"string","format":"date-time","description":"Find applicants created since this date/time (ISO8601)."},"created_until":{"type":"string","format":"date-time","description":"Find applicants created until this date/time (ISO8601)."},"sort_by":{"type":"string","description":"Field to sort by (e.g. created_at, name, email)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort direction: asc or desc."},{"const":"desc","description":"Sort direction: asc or desc."}],"description":"Sort direction: asc or desc."},"search":{"type":"string","description":"General search across name, email, and possibly other fields (full-text)."}},"required":[],"description":"Search and filtering object for querying ats_recruitment_applicants for HR/admin applicant overview. Allows advanced filters, text search, and paginated browsing."},"IAtsRecruitmentApplicant":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Applicant's unique identifier (primary key)."},"email":{"type":"string","format":"email","description":"Applicant's unique login/notification email. Must be business-usable and non-shared."},"name":{"type":"string","description":"Full name of the applicant (from resume or direct input)."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Applicant's phone number for contact/notifications. Optional."},"is_active":{"type":"boolean","description":"Indicates if the account is active (not suspended/inactive)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the applicant profile was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last profile update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp (null if active); for GDPR/trace purposes."}},"required":["id","email","name","is_active","created_at","updated_at"],"description":"Applicant user account/profile as stored in ats_recruitment_applicants. Excludes password_hash and authentication secret fields for security. Soft deletion and activity state control lifecycle. Returned in profile (GET) and index/result sets. Sensitive fields masked from response as appropriate."},"IAtsRecruitmentApplicant.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Full name of the applicant. Matches 'name' field in ats_recruitment_applicants."},"phone":{"type":"string","description":"Applicant's phone number (mobile). Corresponds to 'phone' field; optional contact info."},"is_active":{"type":"boolean","description":"If true, enables the account; false disables access (soft lockout). Maps to 'is_active' field in ATS applicant table."},"password":{"type":"string","description":"Password update (raw password to be securely hashed by backend). Not present in Prisma, for password reset only. Omit unless explicitly supported by flows."}},"required":[],"description":"Update payload for ATS applicant (ats_recruitment_applicants table).\n\nAll properties optional; only included if updating those fields. For password resets, use separate endpoint or supply 'password'. Not all systems support direct password update via this payload."},"IAtsRecruitmentHrRecruiter.IRequest":{"type":"object","properties":{"name":{"type":"string","description":"Filter by recruiter name (partial match, optional)."},"email":{"type":"string","description":"Filter by recruiter email (partial/exact match, optional)."},"department":{"type":"string","description":"Filter by HR department name (optional)."},"is_active":{"type":"boolean","description":"Only include enabled accounts if true; disabled if false."},"created_from":{"type":"string","format":"date-time","description":"Filter by creation timestamp range (from). ISO 8601 string."},"created_to":{"type":"string","format":"date-time","description":"Filter by creation timestamp range (to). ISO 8601 string."},"search":{"type":"string","description":"Advanced partial search (applies to multiple columns)."},"page":{"type":"integer","description":"Page number for pagination (1-based)."},"limit":{"type":"integer","description":"Number of records per page (page size)."},"sort":{"type":"string","description":"Sort field and direction, e.g. 'created_at:desc'."}},"required":[],"description":"Filtering and pagination payload for HR recruiter search/index operations. All fields are optional and only included as specified by request. Used for /index and list APIs for ats_recruitment_hrrecruiters."},"IAtsRecruitmentHrRecruiter":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key (UUID) of HR recruiter."},"email":{"type":"string","format":"email","description":"Login and notification email (unique)."},"name":{"type":"string","description":"Recruiter's real name."},"department":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Department or business group (nullable)."},"is_active":{"type":"boolean","description":"Indicates account enablement for login and system access."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of creation (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Deletion timestamp if soft deleted, else null."}},"required":["id","email","name","is_active","created_at","updated_at"],"description":"ATS HR recruiter resource entity as stored in ats_recruitment_hrrecruiters. Returned by detail API, index listings, and search responses. Fields refer directly to Prisma table or DTO transformations. 'deleted_at' is present as null for active, or timestamp for soft deleted records."},"IAtsRecruitmentHrRecruiter.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Optionally update name."},"department":{"type":"string","description":"Optionally update department."},"is_active":{"type":"boolean","description":"Optionally set account as active/inactive."}},"required":[],"description":"Update payload for HR recruiter profile (ats_recruitment_hrrecruiters table). All fields are optional; only provided fields will be updated. No password accepted via this channel."},"IAtsRecruitmentTechReviewer.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination (optional). If provided, must be a positive integer. Used for fetching specific pages of reviewer results."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Records limit per page (optional). If set, must be a positive integer. Used to control the number of records returned in each paginated page."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Keyword search across reviewer properties (name/email/specialization). Used for fuzzy/full-text search in reviewer queries."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reviewer full name filter (optional). Allows partial or exact name filtering in search criteria."},"email":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reviewer email address filter (optional). Enables precise filtering by unique email value."},"specialization":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reviewer specialization (optional). Used to filter reviewers by their domain/technology expertise."},"is_active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Active status filter (optional). When specified, filters reviewers by current activation state."},"created_after":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"UTC ISO 8601 timestamp filter for earliest created_at. Only reviewers created after this timestamp are returned if set."},"created_before":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"UTC ISO 8601 timestamp filter for latest created_at. Only reviewers created before this timestamp are shown if set."},"order_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sorting column name (optional). Specifies which property to sort reviewer results by."},"order_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sorting direction (asc/desc, optional). Direction for sorting results, must be 'asc' or 'desc' or null."}},"description":"Advanced search and filtering request for tech reviewers in the recruitment system. Supports pagination, keyword and property filtering, and sorting. All fields are optional. Null values mean not filtering by that property.","required":[]},"IAtsRecruitmentTechReviewer.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Full name of the technical reviewer. Used for display and notifications."},"specialization":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reviewer specialty or technology focus (nullable). Allows assignment and skill-based queries."},"is_active":{"type":"boolean","description":"Reviewer account activation flag (true = enabled, false = disabled)."}},"required":[],"description":"Fields permitted for updating a tech reviewer account. At least one field must be present in a valid update request."},"IAtsRecruitmentSystemAdmin.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination (optional). If specified, must be a positive integer."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Maximum number of records per page (optional). Positive integer or null."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Keyword search across system admin properties (name/email). Full-text/fuzzy search on admin directory."},"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"System admin name filter (optional). Allows partial or full name matches in queries."},"email":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"System admin email filter. Enables unique admin identity filtering."},"is_active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Active status filter (optional). Selects admins based on current activation state."},"super_admin":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Super admin privilege flag (optional). Enables filtering of super admin vs regular administrative accounts."},"created_after":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Earliest creation date filter (optional). Only admins created after this UTC ISO 8601 timestamp are included."},"created_before":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Latest creation date filter (optional). Only admins created before this UTC ISO 8601 timestamp are included."},"order_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sorting property/column name (optional). Determines ordering of admin listing by chosen property."},"order_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction for ordering (asc or desc). Optional; must be one of enum or null."}},"required":[],"description":"Advanced search, filter, and pagination request for system administrators. Applies to admin directory listing in the recruitment platform."},"IAtsRecruitmentSystemAdmin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique system admin user identifier (UUID primary key)."},"email":{"type":"string","description":"Email address used for login and notifications. Must be unique per admin."},"name":{"type":"string","description":"Full name of the administrator, for display, audit, and action tracking."},"super_admin":{"type":"boolean","description":"Indicates full super admin privileges for managing other admins or all system settings."},"is_active":{"type":"boolean","description":"Account active/enabled status (false disables logins and privileges)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp, ISO 8601 format."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp, ISO 8601 format."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null if not deleted; set if account ~ deactivated for audit/GDPR compliance."}},"required":["id","email","name","super_admin","is_active","created_at","updated_at"],"description":"System admin account entity for the ATS. Includes all core fields from the ats_recruitment_systemadmins table except password_hash for security. Used for system admin list views, detail, and account management screens. Provides audit, privilege, and compliance mapping for administrative actors.\n\nAlways exclude password hashes/sensitive authentication credentials from API responses. For create/update/patch payloads, refer to the IUpdate or ICreate types as appropriate."},"IAtsRecruitmentSystemAdmin.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Update full name of the system admin (display and audit purposes)."},"super_admin":{"type":"boolean","description":"Upgrade/downgrade to super admin status (hierarchical privilege escalation)."},"is_active":{"type":"boolean","description":"Set admin's account activity. False disables privilege/login; true enables."}},"required":[],"description":"Patch (update) request payload for modifying selectable properties of an ATS system administrator. Supports change to name, privilege (super admin), and activation status. password_hash changes are supported only in dedicated password reset endpoints. Partial update—properties omitted are left unchanged. Used for account maintenance, role escalation, and lifecycle event management by privileged system admin users."},"IAtsRecruitmentJobPosting.IRequest":{"type":"object","properties":{"title":{"type":"string","description":"Job title (partial match/fulltext for search filtering)."},"hr_recruiter_id":{"type":"string","format":"uuid","description":"Filter by assigned HR recruiter (UUID)."},"job_employment_type_id":{"type":"string","format":"uuid","description":"Employment type filter (full-time/part-time etc)."},"job_posting_state_id":{"type":"string","format":"uuid","description":"Current posting state filter (open, closed, paused, etc)."},"is_visible":{"type":"boolean","description":"Visibility filter (true returns only visible public postings)."},"location":{"type":"string","description":"Search jobs by location/city/onsite/remote specification."},"salary_range_min":{"type":"number","description":"Lower-bound filter for salary offers."},"salary_range_max":{"type":"number","description":"Upper-bound filter for salary offers."},"application_deadline_from":{"type":"string","format":"date","description":"Earliest application deadline to include (ISO date)."},"application_deadline_to":{"type":"string","format":"date","description":"Latest application deadline to include (ISO date)."},"created_from":{"type":"string","format":"date","description":"Start of created_at interval for filtering results by posting date."},"created_to":{"type":"string","format":"date","description":"End of created_at interval for filtering results by posting date."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (starts at 1; optional)."},"limit":{"type":"integer","minimum":1,"description":"Max results per page for pagination (optional)."},"sort":{"type":"string","description":"Property by which to sort results (title, created_at, etc)."},"direction":{"oneOf":[{"const":"asc","description":"Sort direction (ascending/descending)."},{"const":"desc","description":"Sort direction (ascending/descending)."}],"description":"Sort direction (ascending/descending)."}},"required":[],"description":"Search and page request for job posting index. Allows advanced filtering by job attributes, posting metadata, HR assignment, windowing (created, deadline), salaries, and control of sort/paging. Used for admin/HR dashboards, application funnel analytics, candidate search, and business intelligence."},"IAtsRecruitmentJobPosting":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Job posting unique identifier (UUID, PK)."},"hr_recruiter_id":{"type":"string","format":"uuid","description":"Assigned HR recruiter for this job (UUID FK to hr_recruiters table)."},"job_employment_type_id":{"type":"string","format":"uuid","description":"Employment type code (FK to job_employment_types table; full-time, etc.)."},"job_posting_state_id":{"type":"string","format":"uuid","description":"Current workflow state of the posting (open, closed, paused, etc.; FK to job_posting_states table)."},"title":{"type":"string","description":"Job posting title/position."},"description":{"type":"string","description":"Full posting and requirements description body."},"location":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Location info (city, remote/flexible/onsite etc; nullable for postings with undefined location)."},"salary_range_min":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Min allowed/advertised salary (nullable if not disclosed)."},"salary_range_max":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Max allowed/advertised salary (nullable if not disclosed)."},"application_deadline":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Application closing date/time (ISO8601), nullable for open-ended postings."},"is_visible":{"type":"boolean","description":"Posting visibility toggle (if false, posting is hidden from applicant/public search)."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp. Null if record is live; date-time if record is deleted (GDPR/compliance)."}},"required":["id","hr_recruiter_id","job_employment_type_id","job_posting_state_id","title","description","is_visible","created_at","updated_at"],"description":"Full job posting entity for the ATS. Maps one-to-one to ats_recruitment_job_postings schema entity. All core business data fields—such as title, recruiter, employment type, workflow state, full description, salary, deadlines, and visibility—are included. Used for read/detail DTOs for job posting view/edit logic.\n\nNOTE: Any related lookup data (recruiter display, type label, state label) must be resolved by business logic outside this DTO—these references are represented by FK UUIDs. For list/summary, a reduced ISummary DTO should be used."},"IAtsRecruitmentJobPosting.ICreate":{"type":"object","properties":{"hr_recruiter_id":{"type":"string","format":"uuid","description":"ID of the HR recruiter responsible for this job posting. References ats_recruitment_hrrecruiters.id. Required."},"job_employment_type_id":{"type":"string","format":"uuid","description":"ID of the employment type for this posting. References ats_recruitment_job_employment_types.id."},"job_posting_state_id":{"type":"string","format":"uuid","description":"ID of the initial state for this posting. References ats_recruitment_job_posting_states.id."},"title":{"type":"string","description":"Job title or position being recruited for. Required."},"description":{"type":"string","description":"Detailed job description and requirements. Required."},"location":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Location for the job posting (e.g., onsite, remote, city, etc). Optional."},"salary_range_min":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Minimum offered salary for this role. Optional."},"salary_range_max":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Maximum offered salary for this role. Optional."},"application_deadline":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Application closing date/time for the posting. Optional. ISO 8601 format."},"is_visible":{"type":"boolean","description":"Whether this posting is visible to applicants."}},"required":["hr_recruiter_id","job_employment_type_id","job_posting_state_id","title","description","is_visible"],"description":"Information required to create a new job posting in the ATS. Follows the Prisma model for ats_recruitment_job_postings."},"IAtsRecruitmentJobSkill.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Skill/technology name to update."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description for the skill; null to remove."},"is_active":{"type":"boolean","description":"Whether this skill is currently active/inactive."}},"required":[],"description":"DTO to update fields of a job skill in the skill dictionary."},"IAtsRecruitmentJobSkill":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for job skill record."},"name":{"type":"string","description":"Skill or technology name (e.g., Python, React, AWS). Unique in system."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional description (scope, context, etc) for this skill."},"is_active":{"type":"boolean","description":"Whether this skill is currently active for recruitment."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when skill was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when skill was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp or null if not deleted."}},"required":["id","name","is_active","created_at","updated_at"],"description":"Job skill/technology record used for job posting requirement matching. Follows schema ats_recruitment_job_skills."},"IAtsRecruitmentJobSkill.IRequest":{"type":"object","properties":{"name":{"type":"string","description":"Filter by (partial) skill name."},"is_active":{"type":"boolean","description":"Filter by active/inactive skills status."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (uint32)."},"limit":{"type":"integer","minimum":1,"description":"Limit per page for pagination (uint32)."},"sort":{"type":"string","description":"Sort field/direction, e.g., 'name,asc' or 'created_at,desc'."}},"required":[],"description":"Search and filter criteria for job skills listing, supporting name, status, pagination, and sort."},"IAtsRecruitmentJobSkill.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"Skill or technology name (e.g., Python, React, AWS). Must be globally unique within the skills dictionary."},"description":{"oneOf":[{"type":"string","description":"Optional description providing clarification about the skill, its scope, or context of use. May be used to explain business meaning, references, or nuances relevant for job posting and candidate evaluation."},{"type":"null"}],"description":"Optional description providing clarification about the skill, its scope, or context of use. May be used to explain business meaning, references, or nuances relevant for job posting and candidate evaluation."},"is_active":{"type":"boolean","description":"Indicates whether the skill is currently in use for job postings and recruitment evaluation. Set to false if deprecating or not actively assigned to job roles."}},"required":["name","is_active"],"description":"DTO for creating a new job skill in the ats_recruitment_job_skills table, supporting business registration of technologies, tools, or competencies for use in recruitment workflow. Enforces name uniqueness and activity state. Optional description helps with clarity and business context."},"IAtsRecruitmentJobEmploymentType.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional, defaults to 1).","format":"int32"},{"type":"null"}],"description":"Page number for pagination, if paged search is used."},"limit":{"oneOf":[{"type":"integer","description":"Row limit per page for pagination (optional, defaults to 100).","format":"int32"},{"type":"null"}],"description":"Maximum number of records per page (optional, defaults to 100)."},"name":{"type":"string","description":"Optional filter for the employment type name (case-insensitive, partial match supported)."},"is_active":{"type":"boolean","description":"Optional filter: true - only active types, false - only inactive types."},"created_at_from":{"type":"string","description":"Filter for employment types created since this timestamp (ISO 8601 format).","format":"date-time"},"created_at_to":{"type":"string","description":"Filter for employment types created up to this timestamp (ISO 8601 format).","format":"date-time"},"deleted_at":{"type":"boolean","description":"If true, includes soft-deleted employment types; if false or omitted, returns only active types."},"sort_by":{"oneOf":[{"const":"name","description":"Sorting field. Supports: 'name', 'created_at'."},{"const":"created_at","description":"Sorting field. Supports: 'name', 'created_at'."}],"description":"Sorting field. Supports: 'name', 'created_at'."},"order":{"oneOf":[{"const":"asc","description":"Sorting order. 'asc' for ascending, 'desc' for descending. Defaults to 'asc'."},{"const":"desc","description":"Sorting order. 'asc' for ascending, 'desc' for descending. Defaults to 'asc'."}],"description":"Sorting order. 'asc' for ascending, 'desc' for descending. Defaults to 'asc'."}},"required":[],"description":"Criteria for searching and paginating job employment types in ats_recruitment_job_employment_types. Allows querying by name, activity status, creation date interval, and sort order."},"IAtsRecruitmentJobEmploymentType":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) for this job employment type, globally unique and immutable."},"name":{"type":"string","description":"Human-readable label of the employment type (e.g., 'Full-time', 'Part-time', 'Contract', 'Internship'). Must be unique within the master list."},"description":{"oneOf":[{"type":"string","description":"Optional detailed explanation or terms/conditions related to this employment type, such as contract duration, benefits, or job nature."},{"type":"null"}],"description":"Optional detailed explanation or terms/conditions related to this employment type, such as contract duration, benefits, or job nature."},"is_active":{"type":"boolean","description":"Controls whether this employment type can be used in newly created job postings. Set to false when deprecated or unavailable."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when this employment type was registered in the system (ISO 8601 date-time)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update to this employment type (ISO 8601 date-time)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft deletion timestamp (null if active, otherwise ISO 8601 date-time). Allows compliance and recovery handling."},{"type":"null"}],"description":"Soft deletion timestamp (null if active, otherwise ISO 8601 date-time). Allows compliance and recovery handling."}},"required":["id","name","is_active","created_at","updated_at"],"description":"Master record for ATS job employment types (permanent, contract, part-time, internship, etc.), including usage auditing and activation/deprecation lifecycle. Referenced in job posting records as employment type."},"IAtsRecruitmentJobEmploymentType.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"Human-readable label for the new employment type (e.g., 'Full-time', 'Contract'). Must be unique within the employment types master table."},"description":{"oneOf":[{"type":"string","description":"Optional details explaining contract terms, eligibility, or other business context for this employment type."},{"type":"null"}],"description":"Optional details explaining contract terms, eligibility, or other business context for this employment type."},"is_active":{"type":"boolean","description":"New type active state: true if available for immediate job posting use; false if initially hidden or in pending/archived state."}},"required":["name","is_active"],"description":"DTO for creating a new employment type option in the job posting system. Supplied by HR or system admin when expanding the catalog of recognized employment schemes."},"IAtsRecruitmentJobEmploymentType.IUpdate":{"type":"object","properties":{"name":{"type":"string","description":"Employment type label to update (unique in master list)."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description for this employment type, or null to clear."},"is_active":{"type":"boolean","description":"Whether this employment type is currently selectable in job postings."}},"required":[],"description":"DTO to update selected fields of an employment type (e.g., rename, description, or active/inactive status)."},"IAtsRecruitmentJobPostingState.IRequest":{"type":"object","properties":{"state_code":{"type":"string","description":"Machine friendly code for the job posting state. Example: 'open', 'closed', 'draft'."},"label":{"type":"string","description":"Human-friendly state label for UI display or configuration."},"is_active":{"type":"boolean","description":"Whether this state is active and available for new postings."},"sort_order":{"type":"integer","description":"Integer sort ordering index for listing or display."},"page":{"type":"integer","description":"Page number for pagination (optional)."},"limit":{"type":"integer","description":"Number of records per page (optional)."},"from_created_at":{"type":"string","format":"date","description":"Start date for filtering by creation date (ISO 8601, optional)."},"to_created_at":{"type":"string","format":"date","description":"End date for filtering by creation date (ISO 8601, optional)."}},"required":[],"description":"Search/filter/pagination object for job posting state index/listing API. All fields optional."},"IAtsRecruitmentJobPostingState":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier for the job posting state entity."},"state_code":{"type":"string","description":"Machine-friendly state code (e.g., open, closed, paused, draft). Must be unique within the system."},"label":{"type":"string","description":"Human-readable label used for presentation and admin UI."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed business/policy description for this state. Explains workflow effect, constraints, or historical notes."},"is_active":{"type":"boolean","description":"Whether this posting state is selectable when creating or updating a job posting."},"sort_order":{"type":"integer","description":"Ordering index for display and business rules. Lower number means higher in lists."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this job posting state was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last modification."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when this state was deleted (soft deleted), or null if active."}},"required":["id","state_code","label","is_active","sort_order","created_at","updated_at"],"description":"Job Posting State entity representing a single state used in the ATS job posting workflow. Includes metadata for admin/configuration and business logic."},"IAtsRecruitmentJobPostingState.ICreate":{"type":"object","properties":{"state_code":{"type":"string","description":"Machine-friendly unique code to identify this job posting state (e.g., 'open', 'paused'). Must be unique."},"label":{"type":"string","description":"Human-readable label for the job posting state, as displayed in admin and user UIs."},"is_active":{"type":"boolean","description":"Whether the state is selectable and available for workflow use."},"sort_order":{"type":"integer","description":"Integer index for preferred ordering in UI or process logic."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional details/business description associated with the state."}},"required":["state_code","label","is_active","sort_order"],"description":"Object to create a new job posting state. All required except description. Used in the master data management of job posting state workflows."},"IAtsRecruitmentJobPostingState.IUpdate":{"type":"object","properties":{"state_code":{"type":"string","description":"Machine-friendly state code for the job posting state (e.g., open, closed, paused, draft). Must match business rules and be unique among active records."},"label":{"type":"string","description":"Human-readable label for the job posting state. Displayed in administration UIs and dropdowns."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business or technical description for context and audit. Null permitted."},"is_active":{"type":"boolean","description":"Whether the state is currently selectable and available for new job postings."},"sort_order":{"type":"integer","description":"Numeric ordering index for display and evaluation sequence."}},"required":[],"description":"Update record for ats_recruitment_job_posting_states entity. Fields optional and can be updated independently. Refer to business rules for allowed state transitions and uniqueness constraints, as well as display order."},"IAtsRecruitmentApplication.IRequest":{"type":"object","properties":{"applicant_id":{"type":"string","format":"uuid","description":"Optionally filter to applicant_id (UUID)."},"job_posting_id":{"type":"string","format":"uuid","description":"Optionally filter to specific job_posting_id (UUID)."},"resume_id":{"type":"string","format":"uuid","description":"Optionally filter by submitted resume_id (UUID)."},"current_status":{"type":"string","description":"Filter applications by current_status (e.g. submitted, screening, code_test, interview, accepted, rejected, ...)."},"submitted_at_from":{"type":"string","format":"date-time","description":"ISO date string for filtering applications created after or at this datetime."},"submitted_at_to":{"type":"string","format":"date-time","description":"ISO date string for filtering applications created before or at this datetime."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination. Defaults to 1."},"limit":{"type":"integer","minimum":1,"description":"Result count per page. System default or upper bound may apply."},"order_by":{"type":"string","description":"Column name to use for sorting results."},"order_direction":{"oneOf":[{"const":"asc","description":"Sorting direction (ascending or descending)."},{"const":"desc","description":"Sorting direction (ascending or descending)."}],"description":"Sorting direction (ascending or descending)."}},"required":[],"description":"Search, filter, sort, and pagination parameters for listing ats_recruitment_applications records. Each parameter is optional for flexible query construction."},"IAtsRecruitmentApplication":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique application ID."},"applicant_id":{"type":"string","format":"uuid","description":"ID of applicant (ats_recruitment_applicants) who submitted this application."},"job_posting_id":{"type":"string","format":"uuid","description":"ID of job posting (ats_recruitment_job_postings) to which this application was submitted."},"resume_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Submitted resume file ID (ats_recruitment_resumes) used for this application, if any."},"current_status":{"type":"string","description":"Current business status for the application (e.g., submitted, screening, code_test, interview, accepted, rejected)."},"submitted_at":{"type":"string","format":"date-time","description":"Timestamp when the application was created/submitted (ISO 8601)."},"last_state_change_at":{"type":"string","format":"date-time","description":"Timestamp for last status change event (ISO 8601 time)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created (ISO 8601 time)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for last update to this record (ISO 8601 time)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for GDPR and business retention. Null if not deleted."}},"required":["id","applicant_id","job_posting_id","current_status","submitted_at","last_state_change_at","created_at","updated_at"],"description":"Full ATS job application entity. Maps to ats_recruitment_applications. Use for business processing, audit, candidate evaluation and workflow tracking. All primary columns included. Sensitive references (applicant, job, resume IDs) and audit/soft delete included."},"IAtsRecruitmentApplication.ICreate":{"type":"object","properties":{"job_posting_id":{"type":"string","format":"uuid","description":"ID of job posting (ats_recruitment_job_postings) being applied to. Required."},"resume_id":{"type":"string","format":"uuid","description":"ID of the resume being submitted (optional)."}},"required":["job_posting_id"],"description":"Payload for creating a new job application, as submitted by an authenticated applicant. CRITICAL: Do NOT include applicant_id in this request type—actor identity must be set by the backend from the authentication/session context ONLY. Attempting to submit applicant_id will be rejected for security reasons. Only job_posting_id (target) and optionally resume_id may be submitted by the client."},"IAtsRecruitmentApplication.IUpdate":{"type":"object","properties":{"resume_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the resume to be associated with the application. May be changed to update the document backing the application record. Optional property, null value to clear the association."},"current_status":{"type":"string","description":"The new state or phase for the application. For example: 'screening', 'interview', 'offer', 'rejected', etc. Should reflect a valid business-defined status. Optional."},"last_state_change_at":{"type":"string","format":"date-time","description":"The ISO8601 date/time when the application status last changed. Used for audit/history and business workflow. Optional."}},"required":[],"description":"Updateable properties for a job application, as supported by the ats_recruitment_applications table. Use only to update mutable fields; system-managed IDs and timestamps may not be altered. All values must conform to business and schema rules. Partial updates allowed; only provided fields are changed."},"IAtsRecruitmentApplicationStatusHistory.IRequest":{"type":"object","properties":{"application_id":{"type":"string","format":"uuid","description":"Application ID for filtering status events."},"from_status":{"type":"string","description":"(Optional) Filter for previous status."},"to_status":{"type":"string","description":"(Optional) Filter for next status."},"changed_at_after":{"type":"string","format":"date-time","description":"(Optional) Minimum timestamp."},"changed_at_before":{"type":"string","format":"date-time","description":"(Optional) Maximum timestamp."}},"required":[],"description":"Request shape for paginated/filter queries on application status history."},"IAtsRecruitmentApplicationStatusHistory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of this status change event."},"application_id":{"type":"string","format":"uuid","description":"ID of the related job application."},"actor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Actor ID (HR, reviewer, or null for system) who enacted the status change."},"from_status":{"type":"string","description":"Previous status of the application."},"to_status":{"type":"string","description":"New status of the application after the transition."},"changed_at":{"type":"string","format":"date-time","description":"Time when the status change occurred (ISO8601 date/time, UTC)."},"change_comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional note/comment describing the reason for the change or context for the status transition."},"created_at":{"type":"string","format":"date-time","description":"Timestamp the status event was created (ISO8601 date/time, UTC)."}},"required":["id","application_id","from_status","to_status","changed_at","created_at"],"description":"Captures a single status change for an application, recording actor, transition states, time, and optional reason. Used for audit/compliance and business workflow tracking."},"IAtsRecruitmentApplicationStatusHistory.ICreate":{"type":"object","properties":{"from_status":{"type":"string","description":"The application's previous status/state before the transition. Should match the current_status field in the application table at time of change."},"to_status":{"type":"string","description":"The new, updated status/state of the application after this transition. Should be a valid business status."},"actor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the HR/reviewer performing this status change. Optional if system-automated."},"change_comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional comment/reason/memo for status transition, as provided by the HR or reviewer actor."}},"required":["from_status","to_status"],"description":"Payload to create a new application status history event. All status transitions must specify from_status and to_status. actor_id and comment are optional."},"IAtsRecruitmentApplicationStatusHistory.IUpdate":{"type":"object","properties":{"from_status":{"type":"string","description":"(Optional) Update previous status."},"to_status":{"type":"string","description":"(Optional) Update new status."},"change_comment":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update the comment if provided."}},"required":[],"description":"Partial update structure for an application status history record."},"IAtsRecruitmentApplicationFeedback.IRequest":{"type":"object","properties":{"application_id":{"type":"string","format":"uuid","description":"Application ID to filter feedback records."},"reviewer_id":{"type":"string","format":"uuid","description":"Restrict to feedback by this reviewer."},"created_after":{"type":"string","format":"date-time","description":"Filter: feedback created after this ISO date."},"created_before":{"type":"string","format":"date-time","description":"Filter: feedback created before this ISO date."},"is_final_recommendation":{"type":"boolean","description":"Restrict to final recommendation entries."}},"required":[],"description":"Query filter input for searching feedback entries on application reviews."},"IAtsRecruitmentApplicationFeedback":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the feedback record."},"application_id":{"type":"string","format":"uuid","description":"Reference to job application on which this feedback was left (links to ats_recruitment_applications.id)."},"reviewer_id":{"type":"string","format":"uuid","description":"UUID of HR recruiter or tech reviewer who submitted the feedback."},"feedback_body":{"type":"string","description":"Full textual feedback content, may include structured interview comments or free-form remarks as per business rules."},"rating":{"type":"number","description":"Optional numerical rating (e.g., 4.5, 3). Null if no explicit score was given."},"is_final_recommendation":{"type":"boolean","description":"True if this feedback represents a final recommendation/decision (e.g., final pass/fail, required by business policy)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this feedback entry was created (ISO 8601 format)."}},"required":["id","application_id","reviewer_id","feedback_body","is_final_recommendation","created_at"],"description":"Represents a feedback entry (review/comment/rating) left by an HR recruiter or technical reviewer on a job application during the process. Includes required and optional attributes for audit, decision, and analytics purposes."},"IAtsRecruitmentApplicationFeedback.ICreate":{"type":"object","properties":{"reviewer_id":{"type":"string","format":"uuid","description":"UUID of reviewer creating this feedback (HR recruiter or tech reviewer). Required; corresponds to account id in actors."},"feedback_body":{"type":"string","description":"Main feedback text content. Required, structured or free-form depending on interview type and feedback convention."},"rating":{"type":"number","description":"Optional numeric rating (float, e.g., 4.0/5.0, 75/100 etc.) provided by the reviewer where applicable."},"is_final_recommendation":{"type":"boolean","description":"Required. Indicates whether this feedback is the reviewer's final recommendation (pass/fail/next step)."}},"required":["reviewer_id","feedback_body","is_final_recommendation"],"description":"Required request body format to create a new feedback on a job application (by HR recruiter or technical reviewer). Feedback must include reviewer, main body content, and a final recommendation flag; rating is optional."},"IAtsRecruitmentApplicationFeedback.IUpdate":{"type":"object","properties":{"feedback_body":{"type":"string","description":"Updated feedback text."},"rating":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Override or update the numeric rating."},"is_final_recommendation":{"type":"boolean","description":"Set if this update is marking as recommendation."}},"required":[],"description":"Partial update shape for feedback records."},"IAtsRecruitmentApplicationSkillMatch.IRequest":{"type":"object","properties":{"application_id":{"type":"string","format":"uuid","description":"Application ID for filtering."},"skill_id":{"type":"string","format":"uuid","description":"Filter for a particular skill ID across applications."},"is_manually_verified":{"type":"boolean","description":"Filter by manual verification status."},"match_type":{"type":"string","description":"Match code/class to filter by (e.g., 'required', 'extra')."}},"required":[],"description":"Search/filter input for skill match query pagination and filtering."},"IAtsRecruitmentApplicationSkillMatch":{"type":"object","description":"Represents a unique skill (technology/tool) matching outcome for an application. Ties to a job-required or parsed skill, with match type and AI/manual verification. Used to show skill alignment between resume and job requirements.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier of this skill match record."},"application_id":{"type":"string","format":"uuid","description":"Application UUID this match belongs to."},"skill_id":{"type":"string","format":"uuid","description":"Referenced skill UUID."},"match_type":{"type":"string","description":"AI/human-inferred match type (e.g., 'required', 'preferred', 'missing', 'extra', etc)."},"ai_score":{"type":"number","description":"AI-based match confidence (0-1 floating point or similarity %)."},"is_manually_verified":{"type":"boolean","description":"Flag indicating if match is human-validated."},"created_at":{"type":"string","format":"date-time","description":"Record creation time."}},"required":["id","application_id","skill_id","match_type","created_at"]},"IAtsRecruitmentApplicationSkillMatch.ICreate":{"type":"object","description":"Request type for creating a new skill match record for an application. Must specify skill_id, match_type, ai_score (optional), and is_manually_verified.","properties":{"skill_id":{"type":"string","format":"uuid","description":"Referenced skill ID to match (JobSkill UUID)."},"match_type":{"type":"string","description":"Match type (e.g., required, preferred, missing, extra, etc)."},"ai_score":{"type":"number","description":"AI/NLP matching confidence score (0-1 or similarity percentage, optional)."},"is_manually_verified":{"type":"boolean","description":"Flag to indicate if this match is manually verified (default: false)."}},"required":["skill_id","match_type","is_manually_verified"]},"IAtsRecruitmentResume":{"type":"object","description":"Detailed structured information about an applicant's resume/CV in the ATS system. Includes metadata, parsed/entered fields (name, contact, education, experience), skills (JSON array as string), and links to applicant and file records. Based on the ats_recruitment_resumes Prisma schema.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier (UUID) of this resume record."},"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Referenced applicant's UUID. Uniquely identifies the owner of this resume."},"title":{"type":"string","description":"Resume title (user-defined or system-generated), such as '2023 Software CV'."},"parsed_name":{"type":"string","description":"Parsed/entered full name for query/filtering."},"parsed_email":{"type":"string","description":"Parsed/entered email for structured search."},"parsed_mobile":{"type":"string","description":"Parsed/entered phone number from resume."},"parsed_birthdate":{"type":"string","description":"Parsed/entered birthdate from uploaded resume. Flexible string format."},"parsed_education_summary":{"type":"string","description":"Summary of parsed education (school/major/degree)."},"parsed_experience_summary":{"type":"string","description":"Summary of parsed experience (last job/experience string)."},"skills_json":{"type":"string","description":"JSON array (stringified) of normalized skills parsed from resume (e.g., '[\"Node.js\",\"Python\"]')."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last modification timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp. Null if active, date string if deleted (GDPR/trace)."}},"required":["id","ats_recruitment_applicant_id","title","created_at","updated_at"]},"IAtsRecruitmentResume.ICreate":{"type":"object","properties":{"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"ID of the applicant to whom this resume record belongs.\n\nReferences `ats_recruitment_applicants.id`."},"title":{"type":"string","description":"Resume title (user-defined or default label) for display and distinction."},"parsed_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Parsed or entered full name from resume content."},"parsed_email":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Parsed or entered email from resume file."},"parsed_mobile":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Parsed or entered phone number from the resume."},"parsed_birthdate":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Parsed or entered birthdate (string form for flexible parsing)."},"parsed_education_summary":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Summary (string) of education parsed from resume."},"parsed_experience_summary":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Summary (string) of experience parsed from resume."},"skills_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"JSON string with parsed/normed technical skills array."}},"required":["ats_recruitment_applicant_id","title"],"description":"Creation DTO for registering a new applicant resume. Allows for providing structured resume data and parsed attributes extracted from file upon upload. All optional fields correspond to columns in `ats_recruitment_resumes`."},"IAtsRecruitmentResume.IRequest":{"type":"object","properties":{"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Filter resumes belonging to this applicant."},"title":{"type":"string","description":"Resume title filter."},"parsed_name":{"type":"string","description":"Parsed name for search."},"created_after":{"type":"string","format":"date-time","description":"Created after this date."},"created_before":{"type":"string","format":"date-time","description":"Created before this date."}},"required":[],"description":"Query filter form for searching/paginating resumes."},"IAtsRecruitmentApplicationSkillMatch.IUpdate":{"type":"object","properties":{"match_type":{"type":"string","description":"Update the classification of this match."},"ai_score":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Override confidence/score if necessary."},"is_manually_verified":{"type":"boolean","description":"Update verification flag as needed."}},"required":[],"description":"Update struct for in-place changes to a skill match record."},"IAtsRecruitmentResume.IUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Update resume title."},"parsed_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Revise parsed name."},"parsed_email":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update parsed email."},"parsed_mobile":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update parsed mobile."},"parsed_birthdate":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update parsed DoB."},"parsed_education_summary":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update education summary."},"parsed_experience_summary":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update experience summary."},"skills_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update parsed skills JSON."}},"required":[],"description":"Payload for partial update on an applicant resume record."},"IAtsRecruitmentResumeUploadHistory.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"uint32","description":"Page number for pagination."},"limit":{"type":"integer","format":"uint32","description":"Limit of records per page."},"upload_timestamp_from":{"type":"string","format":"date-time","description":"Beginning of upload timestamp search range (inclusive). ISO8601 date-time string."},"upload_timestamp_to":{"type":"string","format":"date-time","description":"End of upload timestamp search range (inclusive). ISO8601 date-time string."},"file_ext":{"type":"string","description":"File extension to filter by (e.g., 'pdf', 'docx')."},"file_name":{"type":"string","description":"Uploaded file name, partial or full, to search."},"applicant_id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) of applicant to filter upload histories."}},"required":[],"description":"Request filter for searching and paginating resume upload history events. Allows search by page, limit, upload time range, file ext, file name, applicant id. All fields are optional. Used on ats_recruitment_resume_upload_histories."},"IAtsRecruitmentResumeFile":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key. Unique identifier (UUID) for the resume file record."},"ats_recruitment_resume_id":{"type":"string","format":"uuid","description":"Foreign key. Resume this file is attached to."},"original_filename":{"type":"string","description":"Original uploaded filename."},"file_storage_uri":{"type":"string","description":"Permanent URI/location of the file in storage."},"file_ext":{"type":"string","description":"File extension (e.g., pdf, docx)."},"file_size":{"type":"integer","description":"File size in bytes."},"uploaded_at":{"type":"string","format":"date-time","description":"Timestamp the file was uploaded."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of soft deletion. Nullable. If present, file is deleted."}},"required":["id","ats_recruitment_resume_id","original_filename","file_storage_uri","file_ext","file_size","uploaded_at"],"description":"Metadata for a resume file uploaded/attached to an applicant's resume.\nAll fields are as defined in the ats_recruitment_resume_files Prisma model, including original filename, storage URI, extension, file size, upload timestamp, and (if applicable) soft-delete time."},"IAtsRecruitmentResumeFile.ICreate":{"type":"object","properties":{"original_filename":{"type":"string","description":"Original uploaded file name."},"file_storage_uri":{"type":"string","description":"Permanent URI/location for the file (object storage URL, etc)."},"file_ext":{"type":"string","description":"File extension (e.g., pdf, docx)."},"file_size":{"type":"integer","description":"File size in bytes."}},"required":["original_filename","file_storage_uri","file_ext","file_size"],"description":"Payload for creating/uploading a new resume file (ats_recruitment_resume_files).\nFields are required for uploading: original filename, file storage URI, file extension, and file size. These are mapped directly from file upload handler and used to create the resume file record."},"IAtsRecruitmentResumeFile.IUpdate":{"type":"object","properties":{"original_filename":{"type":"string","description":"The new file name to display or reference for the uploaded resume file. Used for display or search after the file is updated. Reference: ats_recruitment_resume_files.original_filename"},"file_ext":{"type":"string","description":"Updated file extension for the resume file, e.g., \"pdf\", \"docx\". Used if changing the file or correcting file type information. Reference: ats_recruitment_resume_files.file_ext"},"file_size":{"type":"integer","description":"The size of the resume file in bytes after update, e.g., adjusted after replacement or correction. Reference: ats_recruitment_resume_files.file_size"}},"required":[],"description":"Updates descriptive metadata (but not binary content) for a previously uploaded applicant resume file. Only permitted fields are original filename, extension, and size. File content changes require file upload endpoint. Based on ats_recruitment_resume_files Prisma model."},"IAtsRecruitmentResumeAiAnalysis.IRequest":{"type":"object","properties":{"analysis_type":{"type":"string","description":"Type of analysis to filter for. Example values: basic_ocr, ai_skill_match, ner_parse. Matches ats_recruitment_resume_ai_analyses.analysis_type"},"analysis_status":{"type":"string","description":"Status code to filter by (e.g., pending, completed, failed). Matches ats_recruitment_resume_ai_analyses.analysis_status"},"started_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower bound datetime (ISO8601) for filtering AI analysis records by when they were started."},"started_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper bound datetime (ISO8601) for filtering by analysis started_at."},"completed_at_from":{"type":"string","format":"date-time","description":"(Optional) Lower bound (ISO8601) for completed_at filtering."},"completed_at_to":{"type":"string","format":"date-time","description":"(Optional) Upper bound (ISO8601) for completed_at filtering."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination, 1-based."},"limit":{"type":"integer","minimum":1,"description":"Maximum number of results per page."},"sort_by":{"type":"string","description":"Field name to sort by (e.g., started_at, completed_at, analysis_type)."},"order":{"oneOf":[{"const":"asc","description":"Sort order direction: 'asc' for ascending, 'desc' for descending."},{"const":"desc","description":"Sort order direction: 'asc' for ascending, 'desc' for descending."}],"description":"Sort order direction: 'asc' for ascending, 'desc' for descending."}},"required":[],"description":"Advanced filter, search, and pagination parameters for retrieving resume AI analysis jobs. Supports query by analysis type, status, time and ordering. Used with PATCH on AI analysis listing endpoints."},"IAtsRecruitmentResumeAiAnalysis":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique identifier for the AI analysis job. ats_recruitment_resume_ai_analyses.id"},"ats_recruitment_resume_id":{"type":"string","format":"uuid","description":"Foreign key. Identifier of the parent resume analyzed. ats_recruitment_resume_ai_analyses.ats_recruitment_resume_id"},"analysis_type":{"type":"string","description":"The type/class of the analysis performed (e.g., basic_ocr, ai_skill_match, ner_parse). ats_recruitment_resume_ai_analyses.analysis_type"},"analysis_status":{"type":"string","description":"Current analysis state: e.g., pending, completed, failed. ats_recruitment_resume_ai_analyses.analysis_status"},"input_payload_json":{"oneOf":[{"type":"string","description":"Optional. JSON string with AI/automation job input. May include extracted resume info, parser settings, or API parameters. ats_recruitment_resume_ai_analyses.input_payload_json"},{"type":"null"}],"description":"Optional. JSON string with AI/automation job input. May include extracted resume info, parser settings, or API parameters. ats_recruitment_resume_ai_analyses.input_payload_json"},"result_payload_json":{"oneOf":[{"type":"string","description":"Optional. JSON string with detailed AI/automation analysis results (parsed fields, tags, comments). ats_recruitment_resume_ai_analyses.result_payload_json"},{"type":"null"}],"description":"Optional. JSON string with detailed AI/automation analysis results (parsed fields, tags, comments). ats_recruitment_resume_ai_analyses.result_payload_json"},"confidence_score":{"oneOf":[{"type":"number","description":"Optional. AI-derived confidence score for the analysis or extracted information, 0-1 scale. ats_recruitment_resume_ai_analyses.confidence_score"},{"type":"null"}],"description":"Optional. AI-derived confidence score for the analysis or extracted information, 0-1 scale. ats_recruitment_resume_ai_analyses.confidence_score"},"started_at":{"type":"string","format":"date-time","description":"Timestamp when the analysis job was started. ats_recruitment_resume_ai_analyses.started_at"},"completed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when analysis completed. Null if never finished. ats_recruitment_resume_ai_analyses.completed_at"},{"type":"null"}],"description":"Timestamp when analysis completed. Null if never finished. ats_recruitment_resume_ai_analyses.completed_at"}},"required":["id","ats_recruitment_resume_id","analysis_type","analysis_status","started_at"],"description":"Represents a single AI/automation analysis job for a resume, as recorded in ats_recruitment_resume_ai_analyses. Includes type, status, start/finish times, result payload, and confidence."},"IAtsRecruitmentResumeAiAnalysis.ICreate":{"type":"object","properties":{"analysis_type":{"type":"string","description":"Type of analysis/job to be created (e.g., 'basic_ocr', 'ai_skill_match', 'ner_parse'). Must match an allowed/expected pipeline configured in the business logic. Linked to ats_recruitment_resume_ai_analyses.analysis_type."},"input_payload_json":{"oneOf":[{"type":"string","description":"Optional JSON string with parameters, settings, or data used to drive the AI analysis. E.g., parsed resume fields, custom parser parameters. Linked to ats_recruitment_resume_ai_analyses.input_payload_json."},{"type":"null"}],"description":"Optional JSON string with parameters, settings, or data used to drive the AI analysis. E.g., parsed resume fields, custom parser parameters. Linked to ats_recruitment_resume_ai_analyses.input_payload_json."}},"required":["analysis_type"],"description":"Request to create a new AI/automation analysis job for a resume. Provide the analysis_type and, if needed, input parameters for downstream AI/ML or OCR pipeline. This DTO does NOT start the job directly, but registers it for the resume."},"IAtsRecruitmentResumeAiAnalysis.IUpdate":{"type":"object","properties":{"analysis_status":{"type":"string","description":"Status of analysis: e.g., 'pending', 'completed', 'failed'."},"input_payload_json":{"type":"string","description":"JSON string of request/input sent to AI/analysis API."},"result_payload_json":{"type":"string","description":"JSON string with result/response from AI (structured fields, tags, comments)."},"confidence_score":{"type":"number","description":"Optional confidence score/result assigned by analysis result. Null if not provided."},"completed_at":{"type":"string","format":"date-time","description":"Timestamp when analysis job finished (success or fail). Null if never completed."}},"required":[],"description":"Update payload for resume AI analysis. Optional fields for completed analysis: status, input/result JSON, confidence score, and completion time."},"IAtsRecruitmentResumeUploadHistory":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key (UUID) of this upload history record."},"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Applicant ID from ats_recruitment_applicants.id. The user who performed this upload."},"resume_title":{"type":"string","description":"Resume title (at time of upload) for recovery/display."},"file_name":{"type":"string","description":"Uploaded file name/upload snapshot. Used for audit and trace recovery."},"file_size":{"type":"integer","description":"Size of uploaded file in bytes (snapshot at time of upload)."},"file_ext":{"type":"string","description":"File extension/format at time of upload."},"resume_json_snapshot":{"type":"string","description":"Full text or JSON snapshot of parsed resume at upload. Archival purpose for audit/forensics."},"upload_timestamp":{"type":"string","format":"date-time","description":"Timestamp of upload event. Immutable record."},"source_ip":{"type":"string","description":"IP address (when known) of actor uploading. Security/audit context."}},"required":["id","ats_recruitment_applicant_id","resume_title","file_name","file_size","file_ext","upload_timestamp"],"description":"Snapshot table for recording the full history of applicant resume uploads (including replacements and repeated uploads)."},"IAtsRecruitmentCodingTest.IRequest":{"type":"object","properties":{"page":{"type":"integer","description":"Current page for pagination."},"limit":{"type":"integer","description":"Number of records per page."},"applicant_id":{"type":"string","format":"uuid","description":"Filter by applicant UUID."},"job_posting_id":{"type":"string","format":"uuid","description":"Filter by job posting UUID."},"status":{"type":"string","description":"Current delivery/test state. Example: 'scheduled', 'delivered', 'in_progress', 'completed', 'failed', 'cancelled'."},"test_provider":{"type":"string","description":"Provider type: 'internal', 'programmers', 'codesignal', etc."},"scheduled_at_start":{"type":"string","format":"date-time","description":"Filter: scheduled_at range start."},"scheduled_at_end":{"type":"string","format":"date-time","description":"Filter: scheduled_at range end."},"order_by":{"type":"string","description":"Field to order results by."},"order_dir":{"oneOf":[{"const":"asc","description":"Direction of ordering: asc or desc."},{"const":"desc","description":"Direction of ordering: asc or desc."}],"description":"Direction of ordering: asc or desc."}},"required":[],"description":"Search/filter and pagination query for coding test assignments."},"IAtsRecruitmentCodingTest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"ats_recruitment_application_id":{"type":"string","format":"uuid","description":"Belonged application's ats_recruitment_applications.id"},"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Belonged applicant's ats_recruitment_applicants.id"},"ats_recruitment_hrrecruiter_id":{"type":"string","format":"uuid","description":"Belonged HR recruiter who assigned/triggered this test. ats_recruitment_hrrecruiters.id"},"test_provider":{"type":"string","description":"Provider type: 'internal' (platform written), or 3rd party like 'programmers', 'codesignal'."},"test_external_id":{"type":"string","description":"ID returned by external provider system, if external. Required for callback. Use null if in-house."},"test_url":{"type":"string","description":"Test access URL (if generated by external provider or for applicant's direct access)."},"scheduled_at":{"type":"string","format":"date-time","description":"Datetime when test is scheduled."},"delivered_at":{"type":"string","format":"date-time","description":"Datetime when invitation/test was actually delivered to applicant."},"status":{"type":"string","description":"Current delivery/test state. Example: 'scheduled', 'delivered', 'in_progress', 'completed', 'failed', 'cancelled'."},"expiration_at":{"type":"string","format":"date-time","description":"Last time applicant is allowed to take test (nullable for open-ended or instant tests)."},"callback_received_at":{"type":"string","format":"date-time","description":"Timestamp when API callback received from external system (null if not applicable)."},"closed_at":{"type":"string","format":"date-time","description":"Datetime test is definitively closed for submission."},"created_at":{"type":"string","format":"date-time","description":"Canonical creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Canonical update timestamp."},"deleted_at":{"type":"string","format":"date-time","description":"Soft-delete. Set on logical delete for audit reasons."}},"required":["id","ats_recruitment_application_id","ats_recruitment_applicant_id","ats_recruitment_hrrecruiter_id","test_provider","scheduled_at","status","created_at","updated_at"],"description":"Represents individual coding test instances assigned to applications. Tracks type (internal or external), scheduling, delivery channel, and test meta. Linked to application, applicant, and HR/recruiter."},"IAtsRecruitmentCodingTest.ICreate":{"type":"object","properties":{"test_provider":{"type":"string","description":"Name/type of coding test provider. Example: 'internal', 'programmers', 'codesignal'. Indicates whether the test is delivered through the internal platform or an external service."},"test_external_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional external test ID if the test is managed by an external provider. Used for callback correlation and provider troubleshooting."},"test_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional direct URL to access the coding test if such is provided by the test provider or used in the internal delivery workflow."},"scheduled_at":{"type":"string","format":"date-time","description":"Datetime when the coding test is scheduled to be available to the applicant. Must be in ISO8601 DateTime format (e.g., 2025-03-23T11:00:00Z)."},"expiration_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Datetime after which the test is no longer available for access or submission. ISO8601 format or null if open-ended."},"status":{"type":"string","description":"Current status of the coding test assignment. Examples: 'scheduled', 'delivered', 'in_progress', 'completed', 'failed', 'cancelled'. Used to control progression and audit trail. Must match system's allowed status values."}},"required":["test_provider","scheduled_at","status"],"description":"Input contract for creating a new coding test assignment in the recruitment platform, intended for client-facing API operations. Applicant, recruiter, and application associations are injected from the authenticated server-side request context, not directly accepted from client input. Only relevant scheduling and provider information should be submitted here. Any business keys/IDs for actor associations must be ignored if received from the client and set by server logic."},"IAtsRecruitmentCodingTest.IUpdate":{"type":"object","properties":{"scheduled_at":{"type":"string","format":"date-time","description":"(Optional) New datetime for when the coding test is scheduled to start. ISO8601 format."},"expiration_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) New expiration datetime for the test, after which the applicant can no longer access or submit. Null if removing or clearing the expiration."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Timestamp for when the invitation/test was actually delivered to the applicant. Used to track delivery events, may be set by system."},"callback_received_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Timestamp for when a callback/response was received from an external coding test provider. Used for synchronizing state on integration events."},"closed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Datetime when the test is definitively closed for submission. Used in audit reporting and business process enforcement."},"status":{"type":"string","description":"(Optional) New status value for the coding test assignment. Ex: 'delivered', 'in_progress', 'completed', 'failed', 'cancelled'. Must be in allowed status set."},"test_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Update to the test URL (internal or external) for applicant access."},"test_external_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Update to the external test provider's unique test ID for this assignment."}},"required":[],"description":"Input contract for updating an existing coding test record. All fields are optional; use partial updates to patch scheduling, status, delivery, or provider references as needed. Intended for system, HR, or provider integrations to update progress and audit accurately."},"IAtsRecruitmentCodingTestSubmission.IRequest":{"type":"object","properties":{"status":{"type":"string","description":"(Optional) Filter by submission status value. System values: 'valid', 'invalid', 'timeout', 'canceled', 'pending'."},"review_status":{"type":"string","description":"(Optional) Filter by review status. E.g.: 'pending', 'needs_review', 'reviewed', 'flagged'."},"review_comment_summary":{"type":"string","description":"(Optional) Search filter for submissions with this summary present in the review_comment_summary field."},"submitted_at_from":{"type":"string","format":"date-time","description":"(Optional) Retrieve submissions with submitted_at at or after this ISO8601 timestamp."},"submitted_at_to":{"type":"string","format":"date-time","description":"(Optional) Retrieve submissions with submitted_at before or equal to this ISO8601 timestamp."},"page":{"type":"integer","minimum":1,"description":"(Optional) Page number for result pagination. Default: 1."},"limit":{"type":"integer","minimum":1,"description":"(Optional) Number of records per page. Default: 20."},"sort_field":{"type":"string","description":"(Optional) Field name to sort by. E.g., 'submitted_at', 'reviewed_at'."},"sort_order":{"oneOf":[{"const":"asc","description":"(Optional) Sort direction: 'asc' or 'desc'. Default: 'desc'."},{"const":"desc","description":"(Optional) Sort direction: 'asc' or 'desc'. Default: 'desc'."}],"description":"(Optional) Sort direction: 'asc' or 'desc'. Default: 'desc'."}},"required":[],"description":"Query, filter, and pagination object for listing or searching coding test submissions on a given coding test. All fields optional for flexible search UX. See schema for allowed enum values and business logic."},"IAtsRecruitmentCodingTestSubmission":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this coding test submission. Primary key."},"ats_recruitment_coding_test_id":{"type":"string","format":"uuid","description":"Reference to the coding test instance (ats_recruitment_coding_tests.id) for this submission."},"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Reference to the applicant who submitted (ats_recruitment_applicants.id)."},"ats_recruitment_application_id":{"type":"string","format":"uuid","description":"Reference to parent application for the context of this test submission (ats_recruitment_applications.id)."},"submitted_at":{"type":"string","format":"date-time","description":"Timestamp when this solution was submitted. ISO8601 format."},"answer_file_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. URL in object storage for submitted code/file answer. Used for download/scoring; null if not present."},"answer_text":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional. Inline code/text answer provided as direct input. Used for review/download if no file given."},"status":{"type":"string","description":"Current validity state of the submission. Possible values: 'valid', 'invalid', 'timeout', 'canceled', 'pending'."},"received_external_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional. Timestamp if created/received via external service webhook/API. ISO8601."},"review_status":{"type":"string","description":"Current review workflow state for this submission (e.g., 'pending', 'needs_review', 'reviewed', 'flagged')."},"reviewed_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when technical reviewer review was completed, if applicable. ISO8601, null if unreviewed."},"review_comment_summary":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Text summary of the reviewer's comment if available. Nullable; used in report/audit/summary views."},"created_at":{"type":"string","format":"date-time","description":"When the submission record was created (audit field). ISO8601."},"updated_at":{"type":"string","format":"date-time","description":"Last modification time for the submission record. ISO8601."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft-delete timestamp for this submission. Null if not deleted. ISO8601."}},"required":["id","ats_recruitment_coding_test_id","ats_recruitment_applicant_id","ats_recruitment_application_id","submitted_at","status","review_status","created_at","updated_at"],"description":"A coding test submission record, representing one candidate solution file or answer. Linked to coding test, applicant, and business application context. All main state fields and review trace included for compliance and operational reporting. Mutable by system based on workflow edits and compliance policy."},"IAtsRecruitmentCodingTestSubmission.ICreate":{"type":"object","description":"Create request for a coding test submission. This type is used by applicants when submitting an answer to a coding test (file or text) for a given coding test and application.\n\nThe record must reference the coding test, parent application, and applicant, and include either an answer_text (code written inline) or answer_file_url (file blob uploaded, e.g. .zip, .py). One of these is required for a valid submission. The backend will enforce uniqueness and check that the user is permitted to submit. Refer to the Prisma model for column constraints.\n\nNever include fields for reviewer or system-only metadata: only applicant-controlled fields are accepted here.","properties":{"ats_recruitment_coding_test_id":{"type":"string","format":"uuid","description":"Unique identifier of the coding test being submitted. Must be a valid UUID referencing the coding test entity."},"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Unique identifier of the applicant making the submission. Must align with authentication context. UUID."},"ats_recruitment_application_id":{"type":"string","format":"uuid","description":"Unique identifier of the application this submission is attached to. Must refer to the application entity and be validated for submission legitimacy."},"answer_file_url":{"oneOf":[{"type":"string","description":"Permanent object storage URI of the uploaded file, if the answer is a file upload (e.g., .zip, .py, .js). May be null if not provided."},{"type":"null"}],"description":"Permanent object storage URI of the uploaded file (e.g. presigned blob URI for answer files). Only populate if the answer is submitted as a file rather than inline answer_text. Nullable."},"answer_text":{"oneOf":[{"type":"string","description":"Text content of the coding answer, if submitted inline (e.g., Python code, SQL answer, etc)."},{"type":"null"}],"description":"Text code/answer submitted inline (e.g. written directly into a coding editor). Nullable, present only if using this method."}},"required":["ats_recruitment_coding_test_id","ats_recruitment_applicant_id","ats_recruitment_application_id"]},"IAtsRecruitmentCodingTestSubmission.IUpdate":{"type":"object","description":"Update request for a coding test submission. Used to modify a submission's answer file, text answer, status, or reviewer fields as permitted by the workflow. Only populated fields are updated; other properties retain current values.\n\nReviewers set review_status, status may advance due to business rules. System-only/protected fields must not be set by clients. Refer to the ATS submission workflow and business rules for allowed field transitions.","properties":{"answer_file_url":{"oneOf":[{"type":"string","description":"Updated file URI if a new file is uploaded for the submission (nullable if not changed)."},{"type":"null"}],"description":"Permanent object storage URI of a newly uploaded file, if applicable. May be updated when replacing/correcting an answer file. Nullable."},"answer_text":{"oneOf":[{"type":"string","description":"Updated text for code/answer, if answering inline."},{"type":"null"}],"description":"Text answer/code for inline submission, only if permitted for modification by applicant or reviewer. Nullable."},"status":{"type":"string","description":"Updated status for the submission (e.g. 'valid', 'invalid', 'timeout', etc.). Must conform to allowed business statuses as per ATS requirements."},"review_status":{"type":"string","description":"Updated reviewer pipeline status (examples: 'pending', 'needs_review', 'reviewed'). Only settable by reviewer or system, not applicant."},"review_comment_summary":{"oneOf":[{"type":"string","description":"Short summary of reviewer comment."},{"type":"null"}],"description":"(Optional, nullable) Summary of the reviewer comments relating to this submission. Nullable."}},"required":[]},"IAtsRecruitmentCodingTestResult.IRequest":{"type":"object","description":"Filter/search conditions for listing coding test result records associated with coding test or submission. Used by technical reviewers and administrators to analyze/test result pipelines, including score/range, evaluation method, flags, ranking, and pagination controls.","properties":{"codingTestId":{"type":"string","format":"uuid","description":"Unique identifier of the parent coding test for which to list results."},"submissionId":{"type":"string","format":"uuid","description":"Optional: restrict to results for a given coding test submission."},"evaluation_method":{"type":"string","description":"Optional: filter by evaluation method (auto/manual/external/admin_override)."},"plagiarism_flag":{"type":"boolean","description":"Optional: restrict to results flagged/unflagged for plagiarism."},"score_gte":{"type":"number","description":"Optional: restrict to results with score >= this value."},"score_lte":{"type":"number","description":"Optional: restrict to results with score <= this value."},"ranking_percentile_gte":{"type":"number","description":"Optional: restrict to results with ranking_percentile >= this value."},"ranking_percentile_lte":{"type":"number","description":"Optional: restrict to results with ranking_percentile <= this value."},"page":{"type":"integer","description":"Optional: page number for pagination, default is 1."},"limit":{"type":"integer","description":"Optional: page size for pagination, typically 20/50/100."},"sort":{"type":"string","description":"Optional: sort field and direction, e.g. '-score', 'score', '-finalized_at'."}},"required":["codingTestId"]},"IAtsRecruitmentCodingTestResult":{"type":"object","description":"An immutable record of a coding test result for an applicant's submission in the ATS. One record represents one evaluation snapshot, whether automatic (system), manual (reviewer), or override (admin). Records point to both submission and coding test, and include evaluation metadata, scoring, reviewer flags, ranking, and finalized timestamps. Result payloads for automatic scores/stats are included in result_json, and result records are never updated but only appended as new evaluation events for test result audits.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the coding test result record (UUID)."},"ats_recruitment_coding_test_submission_id":{"type":"string","format":"uuid","description":"Reference to the coding test submission that was evaluated (UUID, FK)."},"ats_recruitment_coding_test_id":{"type":"string","format":"uuid","description":"Reference to the coding test instance this result belongs to (UUID, FK)."},"evaluation_method":{"type":"string","description":"String label of the evaluation method: 'auto', 'manual', 'external', 'rerun', 'admin_override' (see ATS documentation for allowed values). Required, must match business logic."},"score":{"type":"number","description":"Normalized or raw score assigned by evaluation system. Required."},"maximum_score":{"type":"number","description":"Maximum achievable score for this test/submission. Used for normalization, reporting, and ranking."},"plagiarism_flag":{"type":"boolean","description":"If true, result was flagged by system or reviewer as plagiarism/error. Used for reporting, denial, or compliance."},"ranking_percentile":{"type":"number","description":"Ranking percentile for this candidate in this test cohort (0-100, higher is better). Required."},"result_json":{"oneOf":[{"type":"string","description":"Raw evaluation-outcome json payload: testcases, errors, runtime, details as per provider."},{"type":"null"}],"description":"(Optional, nullable) JSON-serialized detail of evaluation result. Used for downstream analysis, performance reporting, or error trace. Nullable."},"finalized_at":{"type":"string","format":"date-time","description":"ISO8601 UTC timestamp when evaluation was finalized and snapshot created."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 UTC timestamp when the result record was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 UTC timestamp when the result record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft-delete marker for retention/purge (ISO8601 UTC, nullable)."},{"type":"null"}],"description":"Soft delete timestamp. Null if not deleted; set when purged for GDPR/compliance reasons. Nullable."}},"required":["id","ats_recruitment_coding_test_submission_id","ats_recruitment_coding_test_id","evaluation_method","score","maximum_score","plagiarism_flag","ranking_percentile","finalized_at","created_at","updated_at"]},"IAtsRecruitmentCodingTestResult.ICreate":{"type":"object","properties":{"ats_recruitment_coding_test_submission_id":{"type":"string","format":"uuid","description":"Unique identifier referencing the related coding test submission. Must match an ID present in ats_recruitment_coding_test_submissions for analytics and traceability."},"ats_recruitment_coding_test_id":{"type":"string","format":"uuid","description":"Unique identifier referencing the parent coding test instance. Used for reporting, grouping results, and cross-reference in audits."},"evaluation_method":{"type":"string","description":"Method of result evaluation (e.g., 'auto', 'manual', 'external', 'rerun', 'admin_override'). Ensures clarity in tracking how scores were assigned."},"score":{"type":"number","description":"Numeric score achieved by the applicant in this test attempt. Must be between 0 and the value given in maximum_score."},"maximum_score":{"type":"number","description":"Maximum possible score for the test; used for normalization and analytic reporting."},"plagiarism_flag":{"type":"boolean","description":"True if the submission is flagged as abnormal or plagiarized (usually by AI or a human reviewer check). Used for fraud prevention and audit."},"ranking_percentile":{"type":"number","description":"Applicant's ranking percentile for this test (0~100, where 100=top performer). Used for analytics and leaderboard reporting."},"result_json":{"type":"string","description":"Serialized (JSON string) automated evaluation details (e.g., testcases, logs, error messages). Optional."},"finalized_at":{"type":"string","format":"date-time","description":"Timestamp when this result was finalized and recorded for audit compliance."}},"required":["ats_recruitment_coding_test_submission_id","ats_recruitment_coding_test_id","evaluation_method","score","maximum_score","plagiarism_flag","ranking_percentile","finalized_at"],"description":"Payload for creating a new coding test result record. References the submission, coding test, and scores per evaluation method. Follows audit requirements for test assessment traceability."},"IAtsRecruitmentCodingTestResult.IUpdate":{"type":"object","properties":{"evaluation_method":{"type":"string","description":"(Optional) Updated evaluation method; must remain consistent with system's allowed values."},"score":{"type":"number","description":"(Optional) New/recalculated numeric score for the submission."},"maximum_score":{"type":"number","description":"(Optional) New or adjusted maximum score for normalization."},"plagiarism_flag":{"type":"boolean","description":"(Optional) Update on plagiarism/irregularity status."},"ranking_percentile":{"type":"number","description":"(Optional) New percentile ranking reflecting re-evaluation or updated group statistics."},"result_json":{"type":"string","description":"(Optional) (Possibly corrected) serialized result JSON or error context."},"finalized_at":{"type":"string","format":"date-time","description":"(Optional) Update for the timestamp marking when the result was finalized or re-finalized."}},"required":[],"description":"Patch/partial update schema for a coding test result record. Only allowed fields may be changed; primary relationships remain immutable."},"IAtsRecruitmentCodingTestReviewComment":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the review comment entity (UUID). Uniquely identifies the immutable comment for all further analytics, audit, or reply operations."},"ats_recruitment_coding_test_submission_id":{"type":"string","format":"uuid","description":"UUID referencing the specific coding test submission this comment is associated with. Required for traceability and index relationship."},"ats_recruitment_techreviewer_id":{"type":"string","format":"uuid","description":"UUID referencing the technical reviewer who authored this comment. Direct FK to reviewers for audit and compliance."},"comment_text":{"type":"string","description":"Content of the review comment (markdown or plain text). May contain reviewer assessment, recommendations, or explanations. Never null or empty."},"comment_type":{"type":"string","description":"Type/role/source of the comment: allowed values include 'manual', 'auto', 'system', 'plagiarism_flag'. Controls semantic meaning in analytics."},"started_at":{"type":"string","format":"date-time","description":"Timestamp when reviewer began preparing this comment; for performance/analytics purposes."},"commented_at":{"type":"string","format":"date-time","description":"Timestamp when comment was finally submitted/committed (immutable for audit)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this comment entity was created in the DB."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this comment entity was last updated (should not change except for rare admin correction)."},"deleted_at":{"type":"string","format":"date-time","description":"If set, time when comment was deleted/removed for compliance. Null if comment is active."}},"required":["id","ats_recruitment_coding_test_submission_id","ats_recruitment_techreviewer_id","comment_text","comment_type","started_at","commented_at","created_at","updated_at"],"description":"Represents an immutable review comment made by a tech reviewer (or automated agent/system) for a coding test submission. Includes audit and analytics fields, author identity, and lifecycle timestamps."},"IAtsRecruitmentCodingTestReviewComment.ICreate":{"type":"object","properties":{"ats_recruitment_coding_test_submission_id":{"type":"string","format":"uuid","description":"UUID referencing the associated coding test submission. Required—must point to a valid existing submission."},"ats_recruitment_techreviewer_id":{"type":"string","format":"uuid","description":"UUID referencing the technical reviewer creating this comment. Must match an authorized reviewer for the job/test."},"comment_text":{"type":"string","description":"Content of the review comment to be submitted (markdown or plain text). Cannot be empty or null."},"comment_type":{"type":"string","description":"Source/classification of the comment. Permitted values include 'manual', 'auto', 'system', 'plagiarism_flag' (case-sensitive)."},"started_at":{"type":"string","format":"date-time","description":"Timestamp when reviewer started the review process for this comment; set at comment creation for business analytics."},"commented_at":{"type":"string","format":"date-time","description":"Timestamp when this review comment is finalized/submitted; set for audit and analytics."}},"required":["ats_recruitment_coding_test_submission_id","ats_recruitment_techreviewer_id","comment_text","comment_type","started_at","commented_at"],"description":"Payload for creating a review comment on a coding test submission. Captures reviewer context, timings, and immutable comment content for the audit trail."},"IAtsRecruitmentCodingTestReviewComment.IRequest":{"type":"object","properties":{"comment_type":{"type":"string","description":"Type of the review comment for filtering (e.g., manual, auto, system)."},"ats_recruitment_techreviewer_id":{"type":"string","description":"UUID of the reviewer for filtering review comments."},"started_at_from":{"type":"string","format":"date-time","description":"Filter for comments started at or after this ISO 8601 datetime."},"started_at_to":{"type":"string","format":"date-time","description":"Filter for comments started at or before this ISO 8601 datetime."},"commented_at_from":{"type":"string","format":"date-time","description":"Filter for comments commented at or after this ISO 8601 datetime."},"commented_at_to":{"type":"string","format":"date-time","description":"Filter for comments commented at or before this ISO 8601 datetime."},"page":{"type":"integer","description":"Page number for pagination."},"limit":{"type":"integer","description":"Maximum number of items per page."},"sort_by":{"type":"string","description":"Field to sort results by (e.g., 'commented_at', 'started_at')."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order: asc for ascending, desc for descending."},{"const":"desc","description":"Sort order: asc for ascending, desc for descending."}],"description":"Sort order: asc for ascending, desc for descending."}},"required":[],"description":"Request schema for searching and paginating coding test review comments.\n\nThis object allows advanced filtering, sorting, and paging for all review comments associated with coding test submissions. Fields correspond to the review comment metadata and support complex business filtering scenarios for HR and technical reviewers."},"IAtsRecruitmentCodingTestReviewComment.IUpdate":{"type":"object","properties":{"comment_text":{"type":"string","description":"Updated text of the review comment. May include markdown or plain text."},"comment_type":{"type":"string","description":"Type of the review comment, e.g., 'manual', 'auto', or 'system'."},"started_at":{"type":"string","format":"date-time","description":"Timestamp when reviewer started the comment (ISO 8601)."},"commented_at":{"type":"string","format":"date-time","description":"Timestamp when comment was finalized (ISO 8601)."}},"required":[],"description":"Update schema for a coding test review comment.\n\nAllows updates to the comment text, type, and relevant timestamps by authorized technical reviewers or system administrators. Only fields explicitly present in the payload are updated; all others remain unchanged, following PATCH semantics."},"IAtsRecruitmentCodingTestExternalLog.IRequest":{"type":"object","properties":{"event_type":{"type":"string","description":"Type of event (e.g., api_request, api_response, callback, error)."},"external_id":{"type":"string","description":"External system/entity identifier for filtering logs."},"occurred_at_from":{"type":"string","format":"date-time","description":"Logs occurred at or after this ISO 8601 datetime."},"occurred_at_to":{"type":"string","format":"date-time","description":"Logs occurred at or before this ISO 8601 datetime."},"message":{"type":"string","description":"(Substring) pattern to search within the message body."},"page":{"type":"integer","description":"Page number for pagination."},"limit":{"type":"integer","description":"Page size / number of records to return."},"sort_by":{"type":"string","description":"Field to sort logs by, typically 'occurred_at'."},"sort_order":{"oneOf":[{"const":"asc","description":"Sort order: asc or desc."},{"const":"desc","description":"Sort order: asc or desc."}],"description":"Sort order: asc or desc."}},"required":[],"description":"Request schema for searching coding test external integration logs.\n\nProvides filter/search criteria with support for pagination and sorting to review events, errors, or callbacks captured during coding test provider integrations. Used by HR and system administrators for troubleshooting and compliance review."},"IAtsRecruitmentCodingTestExternalLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the coding test external log entry."},"ats_recruitment_coding_test_id":{"type":"string","format":"uuid","description":"UUID of the coding test this log is associated with."},"event_type":{"type":"string","description":"Log event type (API request/response, error, callback, etc.)."},"event_payload":{"type":"string","description":"Raw JSON or stringified event payload content."},"external_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"External reference, such as provider ID or callback token. May be null for internal events."},"message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional message or error context (may be null if not set)."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when external log event occurred."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last log update."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if not deleted."}},"required":["id","ats_recruitment_coding_test_id","event_type","event_payload","occurred_at","created_at","updated_at"],"description":"Represents a record of an external log event for a coding test.\n\nIncludes event metadata, raw event payload, optional provider/external identifiers, timestamp, and audit information. Used for provider troubleshooting, event forensics, compliance, and integration support."},"IAtsRecruitmentInterview.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for pagination (optional, defaults to 1)."},{"type":"null"}],"description":"Page number for pagination - starts from 1. Optional. Used with limit for paginated listings."},"limit":{"oneOf":[{"type":"integer","description":"Limit of records per page (optional, defaults to 20-100)."},{"type":"null"}],"description":"Maximum number of records per page. Optional. Default is usually 20-100, set by API."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Keyword text to search interview title or notes (optional)."},"stage":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Interview pipeline stage to filter (e.g., 'first_phase', 'tech_round'). Optional."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by interview status (e.g., 'scheduled', 'completed', 'cancelled'). Optional."},"ats_recruitment_application_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the application related to the interview for filtering. Optional."},"date_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Start datetime (inclusive), filters interviews created after this value. Optional, ISO8601 timestamp."},"date_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End datetime (inclusive), filters interviews created before this value. Optional, ISO8601 timestamp."},"order_by":{"oneOf":[{"const":"created_at"},{"const":"updated_at"},{"const":"title"},{"const":"stage"},{"type":"null"}],"description":"Sorting target field. One of 'created_at', 'updated_at', 'title', 'stage'. Optional."},"order_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sorting direction, 'asc' (ascending) or 'desc' (descending). Optional."}},"description":"Request structure for searching/paginating interview records.\n\nIncludes filters for stage, status, application ID, date, and keyword search. Pagination and sorting supported.","required":[]},"IAtsRecruitmentInterview":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the interview record."},"ats_recruitment_application_id":{"type":"string","format":"uuid","description":"UUID of the linked job application (ats_recruitment_applications)."},"title":{"type":"string","description":"Interview event title/label assigned by HR, shown in calendar/events."},"stage":{"type":"string","description":"Pipeline stage label (e.g., 'first_phase', 'tech_round', 'hr', 'final')."},"status":{"type":"string","description":"Current status ('scheduled', 'cancelled', 'completed', 'failed', etc.)"},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional free-form notes or details for interview process/logs."},"created_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp representing when the interview record was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO8601 timestamp for the last time this interview record was modified."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp if the interview is removed; null if not deleted. Used for GDPR and undo tracking."}},"description":"Interview record representing a single interview scheduled for a job application. Contains business and scheduling metadata, status, and event audit fields.\n\nDirectly maps to the ats_recruitment_interviews table in the Prisma schema.","required":["id","ats_recruitment_application_id","title","stage","status","created_at","updated_at"]},"IAtsRecruitmentInterview.ICreate":{"type":"object","properties":{"ats_recruitment_application_id":{"type":"string","format":"uuid","description":"UUID of the job application for which interview is created (required)."},"title":{"type":"string","description":"Interview event title, used in notifications and scheduling."},"stage":{"type":"string","description":"Label for the interview stage (e.g., 'first_phase', 'tech_round')."},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional preparatory or background notes for the interview event or interviewer."}},"description":"Structure for creating a new interview record. Used by HR to schedule a new interview for an application. All main business fields must be supplied except notes (which is optional).","required":["ats_recruitment_application_id","title","stage"]},"IAtsRecruitmentInterview.IUpdate":{"type":"object","properties":{"title":{"type":"string","description":"Updated title for the interview (optional)."},"stage":{"type":"string","description":"Updated interview stage label (optional)."},"status":{"type":"string","description":"New interview status such as 'scheduled', 'cancelled', 'completed'. Optional."},"notes":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated notes or additional details for the interview (optional; can be null to clear notes)."}},"description":"Fields for updating interview information. All properties optional; only included fields are updated. HR and admin may update interview details, notes, or status as workflow changes. Used by endpoints supporting PATCH/PUT for interview records.","required":[]},"IAtsRecruitmentInterviewParticipant.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number for result set, required for pagination."},{"type":"null"}],"description":"Page number for result set, required for pagination."},"limit":{"oneOf":[{"type":"integer","description":"Maximum number of results per page."},{"type":"null"}],"description":"Maximum number of results per page."},"sort":{"oneOf":[{"type":"string","description":"Sort order or comma-separated columns (e.g., 'invitedAt desc,role asc'). Required if sorting is used."},{"type":"null"}],"description":"Sort order or comma-separated columns (e.g., 'invitedAt desc,role asc'). Required if sorting is used."},"interviewId":{"oneOf":[{"type":"string","format":"uuid","description":"Interview record UUID; filter participants for a specific interview."},{"type":"null"}],"description":"Interview record UUID; filter participants for a specific interview."},"applicantId":{"oneOf":[{"type":"string","format":"uuid","description":"Applicant UUID; filter by participant applicant actor. Optional."},{"type":"null"}],"description":"Applicant UUID; filter by participant applicant actor. Optional."},"hrRecruiterId":{"oneOf":[{"type":"string","format":"uuid","description":"HR recruiter UUID; filter by participant recruiter actor. Optional."},{"type":"null"}],"description":"HR recruiter UUID; filter by participant recruiter actor. Optional."},"techReviewerId":{"oneOf":[{"type":"string","format":"uuid","description":"Tech reviewer UUID; filter by participant reviewer actor. Optional."},{"type":"null"}],"description":"Tech reviewer UUID; filter by participant reviewer actor. Optional."},"role":{"oneOf":[{"type":"string","description":"Role for the participant (applicant, recruiter, reviewer, observer, etc.). Optional, case-sensitive on implementation."},{"type":"null"}],"description":"Role for the participant (applicant, recruiter, reviewer, observer, etc.). Optional, case-sensitive on implementation."},"confirmationStatus":{"oneOf":[{"type":"string","description":"Status of confirmation (pending, accepted, declined, tentative). Optional. Filtering on this allows review of RSVP status for each participant in an interview. Typical values: 'pending','accepted','declined','tentative'."},{"type":"null"}],"description":"Status of confirmation (pending, accepted, declined, tentative). Optional. Filtering on this allows review of RSVP status for each participant in an interview. Typical values: 'pending','accepted','declined','tentative'."}},"required":[],"description":"Filter/search request for paginated listing of interview participants. Use to find all, or a subset by various filters like interviewId, actor role, or confirmation status."},"IAtsRecruitmentInterviewParticipant":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the interview participant record."},"interviewId":{"type":"string","format":"uuid","description":"ID of the parent interview associated with the participant (ats_recruitment_interviews.id)."},"applicantId":{"oneOf":[{"type":"string","format":"uuid","description":"UUID of an applicant actor for participant row."},{"type":"null"}],"description":"UUID of an applicant actor for participant row. Nullable; only one of applicantId, hrRecruiterId, or techReviewerId should be set."},"hrRecruiterId":{"oneOf":[{"type":"string","format":"uuid","description":"UUID for HR recruiter actor in participant row."},{"type":"null"}],"description":"UUID for HR recruiter actor in participant row. Nullable; only one of applicantId, hrRecruiterId, or techReviewerId."},"techReviewerId":{"oneOf":[{"type":"string","format":"uuid","description":"UUID for tech reviewer actor in this participant row."},{"type":"null"}],"description":"UUID for tech reviewer actor in this participant row. Nullable; only one of applicantId, hrRecruiterId, or techReviewerId."},"role":{"type":"string","description":"Role string for this participant (such as 'applicant', 'recruiter', 'reviewer', 'observer', etc.)"},"invitedAt":{"type":"string","format":"date-time","description":"Timestamp in ISO 8601 when the invitation/assignment to interview was made. Required."},"confirmationStatus":{"type":"string","description":"Current confirmation status for the interview participant (e.g. 'pending','accepted','declined','tentative'). Required."},"createdAt":{"type":"string","format":"date-time","description":"Record creation timestamp in ISO 8601 format (audit/history)."}},"required":["id","interviewId","role","invitedAt","confirmationStatus","createdAt"],"description":"Represents a participant associated with a specific interview. Handles applicant, HR recruiter, tech reviewer, or observer as identified by actor fields. Relationship entry in ats_recruitment_interview_participants. Only one actor type is present per row (applicantId, hrRecruiterId, techReviewerId)."},"IAtsRecruitmentInterviewParticipant.ICreate":{"type":"object","properties":{"applicantId":{"oneOf":[{"type":"string","format":"uuid","description":"UUID for the applicant to assign as participant."},{"type":"null"}],"description":"UUID for the applicant to assign as participant. Nullable; one of applicantId/hrRecruiterId/techReviewerId is required."},"hrRecruiterId":{"oneOf":[{"type":"string","format":"uuid","description":"UUID for the HR recruiter to assign as participant."},{"type":"null"}],"description":"UUID for the HR recruiter to assign as participant. Nullable; one of applicantId/hrRecruiterId/techReviewerId is required."},"techReviewerId":{"oneOf":[{"type":"string","format":"uuid","description":"UUID for the tech reviewer assigned as participant."},{"type":"null"}],"description":"UUID for the tech reviewer assigned as participant. Nullable; one of applicantId/hrRecruiterId/techReviewerId is required."},"role":{"type":"string","description":"Participant role for this interview (applicant, recruiter, reviewer, observer, etc.). Required. Single actor/role per participant row."},"confirmationStatus":{"oneOf":[{"type":"string","description":"Confirmation status on create (pending, accepted, declined, tentative). Optional — default varies by workflow. Typical: 'pending' on create."},{"type":"null"}],"description":"Confirmation status on create (pending, accepted, declined, tentative). Optional — default varies by workflow. Typical: 'pending' on create."}},"required":["role"],"description":"DTO for creating a new interview participant for an interview. Only one actor type should be supplied; role defines actor's relationship to interview (applicant, recruiter, reviewer, observer, etc.). confirmationStatus can be supplied or defaults as per business logic."},"IAtsRecruitmentInterviewParticipant.IUpdate":{"type":"object","properties":{"confirmationStatus":{"oneOf":[{"type":"string","description":"New confirmation status for the interview participant (pending, accepted, declined, tentative). Optional."},{"type":"null"}],"description":"New confirmation status for the interview participant (pending, accepted, declined, tentative). Optional."},"role":{"type":"string","description":"(Optional) Role for participant, such as applicant, recruiter, reviewer, observer, etc. Usually not modified but permitted if business logic allows role reassignment. Nullable."}},"required":[],"description":"DTO for updating (patching) confirmation status or role for an interview participant. Used in attendance management and scheduling operations."},"IAtsRecruitmentInterviewSchedule.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Page number for pagination (optional).\n\nSpecifies which page of results to retrieve."},"limit":{"type":"integer","format":"int32","description":"Maximum number of records to return in a single response (optional).\n\nFor server-side paging."},"sort":{"type":"string","description":"Column or property to sort results by (optional).\n\nUsually matches a column like 'start_at' or 'created_at'."},"order":{"oneOf":[{"const":"asc","description":"Order of sorting: ascending ('asc') or descending ('desc') (optional)."},{"const":"desc","description":"Order of sorting: ascending ('asc') or descending ('desc') (optional)."}],"description":"Order of sorting: ascending ('asc') or descending ('desc') (optional)."},"schedule_status":{"type":"string","description":"Filter by schedule status (optional).\n\nExamples: 'proposed', 'confirmed', 'cancelled', 'rescheduled', 'sync_failed'."},"schedule_source":{"type":"string","description":"Filter by the source of schedule creation (optional).\n\nExamples: 'manual', 'google_calendar', 'auto', etc."},"start_at_from":{"type":"string","format":"date-time","description":"Start filtering interval for 'start_at' field (ISO 8601, optional).\n\nReturn only schedules with start_at after or equal this time."},"start_at_to":{"type":"string","format":"date-time","description":"End filtering interval for 'start_at' field (ISO 8601, optional).\n\nReturn only schedules with start_at before or equal this time."},"timezone":{"type":"string","description":"Filter by timezone for interview schedule (optional).\n\nExamples: 'Asia/Seoul', 'UTC', etc."},"created_at_from":{"type":"string","format":"date-time","description":"Start range filter for created_at (optional)."},"created_at_to":{"type":"string","format":"date-time","description":"End range filter for created_at (optional)."}},"required":[],"description":"Request type for searching, filtering, paginating, and sorting interview schedules.\n\nAllows specifying criteria such as schedule status, source, time ranges, and paging."},"IAtsRecruitmentInterviewSchedule":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Interview schedule slot unique identifier (UUID).\n\nPrimary key for the ats_recruitment_interview_schedules table."},"ats_recruitment_interview_id":{"type":"string","format":"uuid","description":"Interview entity this schedule is attached to (UUID).\n\nForeign key to ats_recruitment_interviews.id."},"start_at":{"type":"string","format":"date-time","description":"Scheduled interview start time (UTC, ISO 8601)."},"end_at":{"type":"string","format":"date-time","description":"Scheduled interview end time (UTC, ISO 8601)."},"timezone":{"type":"string","description":"Timezone of the scheduled interview slot.\n\nIANA TZ database format, e.g., 'Asia/Seoul', 'UTC'."},"schedule_source":{"type":"string","description":"How this schedule was created: e.g., 'manual', 'google_calendar', 'auto', 'rescheduled'."},"schedule_status":{"type":"string","description":"Status of schedule slot: e.g., 'proposed', 'confirmed', 'cancelled', 'rescheduled', 'sync_failed'."},"cancellation_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional human-friendly explanation added when the schedule is cancelled.\n\nPresent only if cancelled."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (UTC, ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp (UTC, ISO 8601)."}},"required":["id","ats_recruitment_interview_id","start_at","end_at","timezone","schedule_source","schedule_status","created_at","updated_at"],"description":"Interview schedule slot.\n\nRepresents an individual interview slot/option with timing, timezone, source, status, and audit metadata. See ats_recruitment_interview_schedules Prisma model."},"IAtsRecruitmentInterviewSchedule.ICreate":{"type":"object","properties":{"start_at":{"type":"string","format":"date-time","description":"UTC start datetime for the scheduled interview (ISO 8601)."},"end_at":{"type":"string","format":"date-time","description":"UTC end datetime for the scheduled interview (ISO 8601)."},"timezone":{"type":"string","description":"IANA format timezone for the slot, e.g. 'Asia/Seoul', 'UTC'."},"schedule_source":{"type":"string","description":"Who/how the schedule was entered: 'manual', 'google_calendar', 'auto', etc."},"schedule_status":{"type":"string","description":"Slot's initial status (optional, may default to 'proposed' or business rule): e.g., 'proposed', 'confirmed'."},"cancellation_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Set reason if slot creation includes an immediate cancellation.\n\nOtherwise leave null/omitted."}},"required":["start_at","end_at","timezone","schedule_source"],"description":"Type for creating a new interview schedule slot for an interview (ats_recruitment_interview_schedules)."},"IAtsRecruitmentInterviewSchedule.IUpdate":{"type":"object","properties":{"start_at":{"type":"string","format":"date-time","description":"Update start datetime for the schedule (optional, ISO 8601 UTC)."},"end_at":{"type":"string","format":"date-time","description":"Update end datetime for the schedule (optional, ISO 8601 UTC)."},"timezone":{"type":"string","description":"Change timezone for schedule slot (optional, IANA TZ)."},"schedule_source":{"type":"string","description":"Update schedule source (optional: manual, google_calendar, auto, etc.)."},"schedule_status":{"type":"string","description":"Schedule status/state to transition to (optional, e.g., from 'proposed' → 'confirmed')."},"cancellation_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update the cancellation reason if changing to a cancelled state (optional)."}},"required":[],"description":"Type for updating an existing interview schedule slot (ats_recruitment_interview_schedules).\n\nPartial updates supported; only include properties to modify."},"IAtsRecruitmentInterviewCalendarSync.IRequest":{"type":"object","properties":{"sync_type":{"type":"string","description":"Filter by calendar integration type (e.g., 'google_calendar', 'outlook', 'manual'). Refers to sync_type column of interview calendar syncs."},"sync_status":{"type":"string","description":"Filter by calendar sync result/status value. Should match valid values in enum registry."},"sync_time_from":{"type":"string","format":"date-time","description":"Start of calendar sync event filter window (inclusive). ISO 8601 format."},"sync_time_to":{"type":"string","format":"date-time","description":"End of calendar sync event filter window (inclusive). ISO 8601 format."},"page":{"type":"integer","minimum":1,"description":"Results page number (pagination)."},"limit":{"type":"integer","minimum":1,"description":"Number of records per page (pagination)."}},"required":[],"description":"Request model for searching/paginating interview calendar sync records."},"IAtsRecruitmentInterviewQuestion":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of interview question."},"ats_recruitment_interview_id":{"type":"string","format":"uuid","description":"ID of the parent interview this question is attached to."},"order":{"type":"integer","description":"Display order/index for this question among interview questions."},"question_text":{"type":"string","description":"Full content of the question shown to candidate/reviewer."},"question_type":{"type":"string","description":"Type/area of the question (e.g., 'coding', 'behavioral', 'technical')."},"is_template":{"type":"boolean","description":"Whether the question is derived from a template (true) or custom."},"created_at":{"type":"string","format":"date-time","description":"Timestamp (ISO8601) when assigned."}},"required":["id","ats_recruitment_interview_id","order","question_text","question_type","is_template","created_at"],"description":"Interview session question entry used for structured, auditable interviewing."},"IAtsRecruitmentInterviewQuestion.IRequest":{"type":"object","properties":{"question_type":{"type":"string","description":"Filter: question type (e.g., 'coding', 'behavioral')."},"keyword":{"type":"string","description":"Filter: search for text in question."},"is_template":{"type":"boolean","description":"Filter: show template-based (true) or custom (false) only."},"order":{"type":"integer","description":"Filter: specific ordinal position in interview."},"page":{"type":"integer","minimum":1,"description":"Pagination: result page number."},"limit":{"type":"integer","minimum":1,"description":"Pagination: results per page."}},"required":[],"description":"Filter/search model for interview question list queries."},"IAtsRecruitmentInterviewQuestion.ICreate":{"type":"object","properties":{"order":{"type":"integer","description":"Position/order for new question in interview. Unique within parent."},"question_text":{"type":"string","description":"Full interview question text."},"question_type":{"type":"string","description":"Type/category for reporting/matching."},"is_template":{"type":"boolean","description":"Whether this is a template-derived question or custom/manual."}},"required":["order","question_text","question_type","is_template"],"description":"Request schema for creating a new interview question for an interview."},"IAtsRecruitmentInterviewCalendarSync":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the interview calendar sync record. UUID format."},"ats_recruitment_interview_id":{"type":"string","format":"uuid","description":"Foreign key to ats_recruitment_interviews.id; references the interview this calendar sync record is linked to."},"sync_type":{"type":"string","description":"Type of external calendar sync. Example: 'google_calendar', 'outlook', 'manual', etc."},"sync_time":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the sync was attempted/requested."},"sync_status":{"type":"string","description":"Status of the sync attempt; e.g., 'pending', 'success', 'failed', 'fallback_manual', 'double_booked'."},"external_event_id":{"oneOf":[{"type":"string","description":"External calendar system event ID (if available or populated by the provider). Optional."},{"type":"null"}],"description":"External calendar system event ID (if available or populated by the provider). Optional."},"sync_token":{"oneOf":[{"type":"string","description":"Access token or sync credential (hashed or partial display for PII). Optional, security restricted."},{"type":"null"}],"description":"Access token or sync credential (hashed or partial display for PII). Optional, security restricted."},"error_message":{"oneOf":[{"type":"string","description":"Failure message returned from the external API if an error occurred. Optional."},{"type":"null"}],"description":"Failure message returned from the external API if an error occurred. Optional."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp (audit/compliance trace). ISO 8601 format."}},"required":["id","ats_recruitment_interview_id","sync_type","sync_time","sync_status","created_at"],"description":"ATS Interview Calendar Sync - ATS model for tracking all Google Calendar or external calendar sync attempts associated with interviews. Includes sync metadata, event/time, status, provider keys, and failure diagnostics. Used for compliance, troubleshooting, and operational audit."},"IAtsRecruitmentInterviewQuestion.IUpdate":{"type":"object","properties":{"order":{"type":"integer","description":"Display or asking order of this question in the interview (0-based, integer). Optional."},"question_text":{"type":"string","description":"The interview question content. May be template, AI-generated, or manually provided."},"question_type":{"type":"string","description":"Type/classification of the question: e.g., 'coding', 'behavioral', 'personality', 'situational', etc. Optional, used for categorization."},"is_template":{"type":"boolean","description":"True if the question is derived from a predefined template. False for custom/manual questions. Optional."}},"required":[],"description":"Partial update payload for an interview question entity in the ATS. Used to update text, order, type, or template status in the interview flow. All properties optional for PATCH-like semantics."},"IAtsRecruitmentNotification.IRequest":{"type":"object","properties":{"event_type":{"type":"string","description":"Notification event type key (e.g., application_status_update, interview_scheduled, export_complete, system_alert)."},"recipient_applicant_id":{"type":"string","format":"uuid","description":"Target applicant's id who receives the notification."},"recipient_hrrecruiter_id":{"type":"string","format":"uuid","description":"Target HR recruiter's id who receives the notification."},"recipient_techreviewer_id":{"type":"string","format":"uuid","description":"Target tech reviewer's id who receives the notification."},"recipient_systemadmin_id":{"type":"string","format":"uuid","description":"Target system admin's id who receives the notification."},"status":{"type":"string","description":"Current business status for notification event (e.g., pending, sent, delivered, failed, cancelled)."},"reference_table":{"type":"string","description":"Business table this notification is related to (e.g., ats_recruitment_applications, ats_recruitment_interviews)."},"reference_id":{"type":"string","format":"uuid","description":"ID of the referenced business entity."},"created_at_from":{"type":"string","format":"date-time","description":"Filter: creation datetime from (inclusive). ISO 8601."},"created_at_to":{"type":"string","format":"date-time","description":"Filter: creation datetime to (inclusive). ISO 8601."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (default: 1)."},"limit":{"type":"integer","minimum":1,"maximum":200,"description":"Page size/row limit per page (default, max: 200)."},"sort":{"type":"string","description":"Sort order for search results (e.g., created_at desc, status asc)."}},"required":[],"description":"Request body object for searching/filtering/paginating ATS notification records. Supports search by event type, recipient, reference entity, date range, status, and sorting/pagination controls."},"IAtsRecruitmentNotification":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification record."},"recipient_applicant_id":{"oneOf":[{"type":"string","format":"uuid","description":"Target applicant's id for this notification. Nullable."},{"type":"null"}],"description":"Target applicant's id for this notification. Nullable."},"recipient_hrrecruiter_id":{"oneOf":[{"type":"string","format":"uuid","description":"Target HR recruiter's id for this notification. Nullable."},{"type":"null"}],"description":"Target HR recruiter's id for this notification. Nullable."},"recipient_techreviewer_id":{"oneOf":[{"type":"string","format":"uuid","description":"Target tech reviewer's id for this notification. Nullable."},{"type":"null"}],"description":"Target tech reviewer's id for this notification. Nullable."},"recipient_systemadmin_id":{"oneOf":[{"type":"string","format":"uuid","description":"Target system admin's id for this notification. Nullable."},{"type":"null"}],"description":"Target system admin's id for this notification. Nullable."},"event_type":{"type":"string","description":"Notification event type key."},"reference_table":{"type":"string","description":"Reference to business data table (e.g., ats_recruitment_applications, ats_recruitment_interviews)."},"reference_id":{"type":"string","format":"uuid","description":"Reference ID of target entity in business context."},"payload_json":{"oneOf":[{"type":"string","description":"JSON parameters used to fill the dynamic template rendered for the notification event. Large field, may not always be shown."},{"type":"null"}],"description":"JSON parameters used to fill the dynamic template rendered for the notification event. Large field, may not always be shown."},"status":{"type":"string","description":"Current status for the notification event: (pending, sent, delivered, failed, cancelled, etc.)"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the notification event record was created (ISO 8601)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the notification event was last updated (ISO 8601)."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp, null if active."},{"type":"null"}],"description":"Soft delete timestamp, null if active."}},"required":["id","event_type","reference_table","reference_id","status","created_at","updated_at"],"description":"Notification event entity in the ATS recruitment platform (ats_recruitment_notifications table). Stores metadata for a business event to be sent to applicants, HR, tech reviewers, or admins. Supports reference linkage, delivery auditing, status, and compliance. Payload_json may include arbitrary data for notification template rendering."},"IAtsRecruitmentNotification.ICreate":{"type":"object","properties":{"recipient_applicant_id":{"oneOf":[{"type":"string","format":"uuid","description":"The applicant recipient of this notification event. Nullable if not for an applicant."},{"type":"null"}],"description":"The applicant recipient of this notification event. Nullable if not for an applicant."},"recipient_hrrecruiter_id":{"oneOf":[{"type":"string","format":"uuid","description":"The HR recruiter recipient of this notification event. Nullable if not for HR."},{"type":"null"}],"description":"The HR recruiter recipient of this notification event. Nullable if not for HR."},"recipient_techreviewer_id":{"oneOf":[{"type":"string","format":"uuid","description":"The tech reviewer recipient of this notification event. Nullable if not for tech reviewer."},{"type":"null"}],"description":"The tech reviewer recipient of this notification event. Nullable if not for tech reviewer."},"recipient_systemadmin_id":{"oneOf":[{"type":"string","format":"uuid","description":"The system admin recipient of this notification event. Nullable if not for admin."},{"type":"null"}],"description":"The system admin recipient of this notification event. Nullable if not for admin."},"event_type":{"type":"string","description":"Notification event type key (e.g., application_status_update, interview_scheduled, system_alert, etc.)."},"reference_table":{"type":"string","description":"The business table this notification is related to (e.g., ats_recruitment_applications, ats_recruitment_interviews)."},"reference_id":{"type":"string","format":"uuid","description":"ID of the referenced business entity (e.g., application, interview, export job record)."},"payload_json":{"oneOf":[{"type":"string","description":"JSON for dynamic template rendering, may be omitted."},{"type":"null"}],"description":"JSON for dynamic template rendering, may be omitted."},"status":{"oneOf":[{"type":"string","description":"Current status for the notification event (pending/designated value)."},{"type":"null"}],"description":"Current status for the notification event (pending/designated value)."}},"required":["event_type","reference_table","reference_id"],"description":"Notification creation request to store a logical notification business event. Follows the ats_recruitment_notifications schema."},"IAtsRecruitmentNotification.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"Current status for the notification event. E.g., pending, sent, failed, delivered, cancelled, etc."},"payload_json":{"oneOf":[{"type":"string","description":"Updated JSON payload for dynamic template rendering (optional)."},{"type":"null"}],"description":"Updated JSON payload for dynamic template rendering (optional)."}},"required":[],"description":"Update for notification status, payload, or delivery state."},"IAtsRecruitmentNotificationDelivery.IRequest":{"type":"object","properties":{"delivery_channel":{"type":"string","description":"Channel/medium used to send the notification (e.g., email, sms, app_push, webhook)."},"recipient_address":{"type":"string","description":"Recipient contact (email, phone number, etc.) for a delivery attempt."},"delivery_status":{"type":"string","description":"Result status for the specific delivery attempt (e.g., sent, delivered, failed, retried, etc.)."},"delivered_at_from":{"type":"string","format":"date-time","description":"Beginning of delivered_at filter window (ISO 8601)."},"delivered_at_to":{"type":"string","format":"date-time","description":"End of delivered_at filter window (ISO 8601)."},"failed_at_from":{"type":"string","format":"date-time","description":"Beginning of failed_at filter window (ISO 8601)."},"failed_at_to":{"type":"string","format":"date-time","description":"End of failed_at filter window (ISO 8601)."},"page":{"type":"integer","minimum":1,"description":"Page number for pagination (start at 1)."},"limit":{"type":"integer","minimum":1,"maximum":100,"description":"Maximum number of records per page (recommended ≤ 50)."},"sort":{"type":"string","description":"Sort field and direction for result ordering, e.g., delivered_at desc."}},"required":[],"description":"Search/filter for notification delivery logs with paginated options."},"IAtsRecruitmentNotificationDelivery":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification delivery attempt."}},"required":[],"description":"A notification delivery attempt record, summary view. This schema must be completed with all fields present in the delivery entity. Used in paginated delivery lists."},"IAtsRecruitmentNotificationDelivery.ICreate":{"type":"object","properties":{"delivery_channel":{"type":"string","description":"Delivery channel used (e.g., 'email', 'sms', 'app_push', 'webhook'). Must follow notification business context and maps to the delivery_channel of the notification delivery entity."},"recipient_address":{"type":"string","description":"Recipient address for this delivery attempt (email for email, phone for sms, etc). Full addressing format is expected (validate input); must match the channel's requirements."},"delivery_status":{"type":"string","description":"Status of the delivery attempt, such as 'initiated', 'sent', 'delivered', 'failed', 'bounced', 'retried', 'cancelled'. Must reflect current delivery workflow."},"delivery_result_detail":{"oneOf":[{"type":"string","description":"Detailed provider/service result message/code, such as SMTP result, SMS error, webhook error, etc. Optional."},{"type":"null"}],"description":"Detailed provider/service result message/code, such as SMTP result, SMS error, webhook error, etc. Optional."},"delivery_attempt":{"type":"integer","description":"Attempt number, for audit and retry logic (first send: 1, retried: 2, etc.)"},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when delivery was successful (null if not delivered); RFC 3339 datetime."},{"type":"null"}],"description":"Timestamp when delivery was successful (null if not delivered); RFC 3339 datetime."},"failed_at":{"oneOf":[{"type":"string","format":"date-time","description":"Timestamp when delivery failed (null if never failed); RFC 3339 datetime."},{"type":"null"}],"description":"Timestamp when delivery failed (null if never failed); RFC 3339 datetime."}},"required":["delivery_channel","recipient_address","delivery_status","delivery_attempt"],"description":"Create request for a notification delivery attempt as defined in ats_recruitment_notification_deliveries."},"IAtsRecruitmentNotificationDelivery.IUpdate":{"type":"object","properties":{"delivery_status":{"type":"string","description":"(Optional) Status change for the delivery attempt. Use notification delivery status values."},"delivery_result_detail":{"oneOf":[{"type":"string","description":"(Optional) Updated result message or detailed status from provider or delivery system."},{"type":"null"}],"description":"(Optional) Updated result message or detailed status from provider or delivery system."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Timestamp when delivery succeeded. Use RFC 3339 format or null to clear."},{"type":"null"}],"description":"(Optional) Timestamp when delivery succeeded. Use RFC 3339 format or null to clear."},"failed_at":{"oneOf":[{"type":"string","format":"date-time","description":"(Optional) Timestamp when delivery failed or was marked failed. Use RFC 3339 format or null."},{"type":"null"}],"description":"(Optional) Timestamp when delivery failed or was marked failed. Use RFC 3339 format or null."},"delivery_attempt":{"type":"integer","description":"(Optional) Updated attempt number, if retried."},"delivery_channel":{"type":"string","description":"(Optional) Updated delivery channel (e.g., for fallback or multi-channel delivery logic)."},"recipient_address":{"type":"string","description":"(Optional) Updated recipient address for re-delivery or correction."}},"required":[],"description":"Patch/update request for a notification delivery entity in ats_recruitment_notification_deliveries. All fields optional."},"IAtsRecruitmentNotificationTemplate.IRequest":{"type":"object","properties":{"template_code":{"type":"string","description":"(Optional) Search or filter by template business code. Partial or full match accepted."},"channel":{"type":"string","description":"(Optional) Notification channel to filter (e.g., 'email', 'sms', 'app_push', 'webhook')."},"title":{"type":"string","description":"(Optional) Search or filter by template title (internal reference name)."},"subject":{"type":"string","description":"(Optional) Search or filter by subject line (email templates and some channels)."},"body":{"type":"string","description":"(Optional) Full-text search in template body (text or markup)."},"is_active":{"type":"boolean","description":"(Optional) Filter for active/inactive states; true: enabled, false: disabled."},"page":{"type":"integer","description":"(Optional) Page number for pagination (default: 1)."},"limit":{"type":"integer","description":"(Optional) Maximum page size for pagination (default: 15/20)."},"sort":{"type":"string","description":"(Optional) Sorting field and direction. E.g., 'created_at:desc', 'title:asc'. Has no effect if not specified."}},"required":[],"description":"Notification template search/filter/pagination request (ats_recruitment_notification_templates). All fields optional."},"IAtsRecruitmentNotificationTemplate":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the notification template record in ats_recruitment_notification_templates."},"template_code":{"type":"string","description":"Globally unique template code for business logic mapping and reference (e.g., 'INTERVIEW_SCHEDULED', 'APPLICATION_REJECTED')."},"channel":{"type":"string","description":"Notification channel for delivery (e.g., 'email', 'sms', 'app_push', 'webhook')."},"title":{"type":"string","description":"Admin-facing title for the template, used in management UIs, not sent to recipients."},"subject":{"oneOf":[{"type":"string","description":"(Nullable) Subject line for email/notification; applies only to channels supporting subject. Null for others."},{"type":"null"}],"description":"(Nullable) Subject line for email/notification; applies only to channels supporting subject. Null for others."},"body":{"type":"string","description":"Template body content (text, markup, or format string). May include placeholders for merge fields."},"is_active":{"type":"boolean","description":"Whether the template is active/enabled (true) or disabled/deprecated (false)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the template record."},"updated_at":{"type":"string","format":"date-time","description":"Last modified/update timestamp for the template record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time","description":"Soft delete timestamp (null if active). Populated if template was deleted but not hard removed."},{"type":"null"}],"description":"Soft delete timestamp (null if active). Populated if template was deleted but not hard removed."}},"required":["id","template_code","channel","title","body","is_active","created_at","updated_at"],"description":"Business entity for notification templates (ats_recruitment_notification_templates). Includes all configuration, status, and meta fields."},"IAtsRecruitmentNotificationTemplate.ICreate":{"type":"object","description":"Create notification template object for ATS system-wide event messaging, based on ats_recruitment_notification_templates schema. All required fields must be present.","properties":{"template_code":{"type":"string","description":"Unique business key for this notification template (e.g., INTERVIEW_SCHEDULED, APPLICATION_RESULT_EMAIL). Determines event/template matching. References ats_recruitment_notification_templates.template_code. Required."},"channel":{"type":"string","description":"Delivery channel for this template such as 'email', 'sms', 'app_push', 'webhook'. References ats_recruitment_notification_templates.channel. Required."},"title":{"type":"string","description":"Title for the template, used in admin UIs. Not shown to notification recipients. References ats_recruitment_notification_templates.title. Required."},"subject":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Subject line for emails/channels supporting subject, or null for others. Optional in template. References ats_recruitment_notification_templates.subject."},"body":{"type":"string","description":"Message body template, used for notification rendering. May use placeholders (e.g., {{applicantName}}). References ats_recruitment_notification_templates.body. Required."},"is_active":{"type":"boolean","description":"Indicates if this template is available for notification use. References ats_recruitment_notification_templates.is_active. Required."}},"required":["template_code","channel","title","body","is_active"]},"IAtsRecruitmentNotificationTemplate.IUpdate":{"type":"object","description":"Update/patch for notification template entity. All fields are optional, only provided fields are updated.","properties":{"template_code":{"type":"string","description":"Updated business key, must remain unique within channel if changed."},"channel":{"type":"string","description":"Updated delivery channel (e.g., email, sms, app_push) if changed."},"title":{"type":"string","description":"Updated template admin title if changed."},"subject":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update email/notification subject. Set null to remove subject."},"body":{"type":"string","description":"Update the template message body content."},"is_active":{"type":"boolean","description":"Indicate if template becomes active/inactive."}},"required":[]},"IAtsRecruitmentNotificationFailure.IRequest":{"type":"object","description":"Filtering, search, and pagination criteria for querying notification delivery failure records, supports all relevant query fields from ats_recruitment_notification_failures for audit panels and troubleshooting.","properties":{"notification_id":{"type":"string","description":"Filter by notification event id (UUID)."},"delivery_id":{"type":"string","description":"Filter by delivery log record id (UUID)."},"failure_type":{"type":"string","description":"Type of failure filter (e.g., api_rejected, provider_bounce, invalid_address, user_optout, permanent_error, etc.)."},"occurred_at_from":{"type":"string","format":"date-time","description":"Lower bound for occurred_at ISO timestamp for time range filtering."},"occurred_at_to":{"type":"string","format":"date-time","description":"Upper bound for occurred_at ISO timestamp for time range filtering."},"page":{"type":"integer","description":"Page number, starting from 1."},"limit":{"type":"integer","description":"Records per page (pagination limit)."},"sort_by":{"type":"string","description":"Sort field (e.g., occurred_at, failure_type, etc.)."},"sort_order":{"oneOf":[{"const":"asc","description":"Sorting order: asc or desc."},{"const":"desc","description":"Sorting order: asc or desc."}],"description":"Sorting order: asc or desc."}},"required":[]},"IAtsRecruitmentNotificationFailure":{"type":"object","description":"Representation of an individual notification delivery failure audit event (ats_recruitment_notification_failures). Tracks failed notification attempts for compliance, troubleshooting, and management.","properties":{"id":{"type":"string","description":"Primary key (UUID) of the failure record."},"notification_id":{"type":"string","description":"ID (UUID) of the notification event to which this failure log relates."},"delivery_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Delivery attempt record id, if related to a specific delivery channel attempt (UUID), or null."},"failure_type":{"type":"string","description":"Failure mode code for the notification delivery attempt. (e.g., provider_bounce, permanent_error, invalid_address, api_rejected, user_optout)."},"failure_message":{"type":"string","description":"Provider/system error message for troubleshooting."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp of the failure event, ISO8601/RFC3339 format."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of creation for this failure log record."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update for this record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp, or null if active. Maintains logical retention compliance."}},"required":["id","notification_id","failure_type","failure_message","occurred_at","created_at","updated_at"]},"IAtsRecruitmentExportJob.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","description":"Page number. 1-based index for pagination.","minimum":1},{"type":"null"}],"description":"Page number. Optional 1-based index for pagination. If not specified, defaults to 1."},"limit":{"oneOf":[{"type":"integer","description":"How many items per page to return. Default value defined by service.","minimum":1},{"type":"null"}],"description":"How many items per page to return. Optional. Typical default is 20 or 50."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Sort order, e.g. \"created_at desc\", \"job_type asc\"."},"job_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Filter by export job type (e.g. \"applicants\", \"applications\", \"resumes\", \"audit_logs\")."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Filter by export job status (e.g. \"pending\", \"generating\", \"delivering\", \"complete\", \"failed\", \"cancelled\")."},"initiator_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Filter by initiator account UUID."},"target_job_posting_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Filter by target job posting UUID."},"target_application_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"(Optional) Filter by target application UUID."},"delivered_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Filter for jobs delivered since this ISO 8601 datetime."},"delivered_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Filter for jobs delivered up to this ISO 8601 datetime."},"created_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Filter for jobs created since this ISO 8601 datetime."},"created_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"(Optional) Filter for jobs created up to this ISO 8601 datetime."},"keyword":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Search keyword for description or filter JSON content."}},"required":[],"description":"Request structure for searching/filtering export jobs. All fields optional. Supports pagination, filtering on job_type, status, initiator id, target posting/application, delivered timeframe, created timeframe, and free-text keyword search."},"IAtsRecruitmentExportJob":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for the export job."},"initiator_id":{"type":"string","format":"uuid","description":"UUID of the user (HR/admin/applicant) initiating this export job."},"target_job_posting_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If this export is for a specific job posting, its UUID. Nullable if not restricted to a posting."},"target_application_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If this export is for a specific application, UUID. Nullable if not restricted to an application."},"job_type":{"type":"string","description":"Type of export job (e.g. \"applicants\", \"applications\", \"resumes\", \"audit_logs\", \"interviews\")"},"status":{"type":"string","description":"Current status of the export job (e.g. \"pending\", \"generating\", \"delivering\", \"complete\", \"failed\", \"cancelled\"). Business logic uses this to support workflow and error handling."},"request_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional free-text description of export purpose, filters, or business context."},"filter_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) JSON-formatted filter specification for exact records to export."},"delivery_method":{"type":"string","description":"How the export file will be delivered to the requestor (e.g. 'download', 'email', 'object_storage')."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"When export file was delivered/available (ISO 8601 UTC datetime). Nullable if not yet delivered."},"file_uri":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Object storage URI, download URL, or email attachment pointer to the file (if delivered, else null)."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of this export job (ISO 8601 UTC)."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the most recent update to this export job (ISO 8601 UTC)."}},"required":["id","initiator_id","job_type","status","delivery_method","created_at","updated_at"],"description":"Represents an export job for batch extraction of ATS platform data (e.g. applicants, resumes, logs). Includes all business, filter, delivery, and status fields per ats_recruitment_export_jobs schema."},"IAtsRecruitmentExportJob.ICreate":{"type":"object","properties":{"target_job_posting_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If restricting export to a specific job posting, provide its UUID. Else null."},"target_application_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"If restricting export to a specific application, provide UUID. Else null."},"job_type":{"type":"string","description":"Required: Type of export (e.g. 'applicants', 'applications', 'resumes', 'audit_logs', 'interviews', etc.). Must be supported by export logic."},"request_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) Free-text description of export job and context for audit/compliance."},"filter_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"(Optional) JSON-encoded filter/selection config for identifying records to be exported."},"delivery_method":{"type":"string","description":"Required: Method of export file delivery (e.g. 'download', 'email', 'object_storage')."}},"required":["job_type","delivery_method"],"description":"Request body for creating a new ATS data export job. References export job type, target entities, and filter/delivery config."},"IAtsRecruitmentExportJob.IUpdate":{"type":"object","properties":{"status":{"type":"string","description":"If updating the status of the export job (e.g., from pending to complete, failed, etc)."},"request_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update description/context for the export job."},"filter_json":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update the filter criteria JSON for exported records."},"delivery_method":{"type":"string","description":"Update the delivery method for the export file (e.g. download, email, object_storage)."},"delivered_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Update the delivery completion timestamp (typically set on finish). Nullable if not applicable."},"file_uri":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Update the location or pointer to the delivered export file."}},"required":[],"description":"Partial update request for an ATS export job. All fields optional. Allows selectively patching status, description, filter config, delivery method, delivered timestamp, and file URI as job progresses."},"IAtsRecruitmentExportJobDetail.IRequest":{"type":"object","properties":{"export_job_id":{"type":"string","format":"uuid","description":"Filter by the parent export job's unique identifier (UUID). Optional. Used for querying details within a specific export job context."},"data_row_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by a specific exported data row (UUID), or null for summary/aggregate queries."},"included_at_from":{"type":"string","format":"date-time","description":"Start of date/time range (inclusive) for when data was included in export. Filter for records included after this time. ISO8601."},"included_at_to":{"type":"string","format":"date-time","description":"End of date/time range (inclusive) for when data was included in export. Filter for records included before this time. ISO8601."},"page":{"type":"integer","description":"Pagination parameter: which page of results to return. 1-based index."},"limit":{"type":"integer","description":"Pagination parameter: number of records to return per page."},"sort":{"type":"string","description":"Sorting field and direction. Example: \"included_at desc\" or \"row_summary_json asc\"."}},"description":"Request body schema for searching and listing export job detail records. Supports filtering by job, data row, inclusion date range, and allows pagination/sorting. All fields are optional, enabling flexible search for compliance and audit purposes.","required":[]},"IAtsRecruitmentExportJobDetail":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this export job detail record. Primary key for audit and reference purposes."},"export_job_id":{"type":"string","format":"uuid","description":"Foreign key linking to the parent export job record. Used to reconstruct export batch lineage."},"data_row_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Entity ID (applicant, application, resume, etc.) for the exported record. Null if summary or parent-only details."},"row_summary_json":{"type":"string","description":"JSON string snapshot summarizing the exported data row at the time of export. May contain partial entity data, references, anonymized fields, or compliance reductions. Used for audit and traceability of exported content."},"included_at":{"type":"string","format":"date-time","description":"Timestamp when this record was included in the export file (UTC, ISO8601). Used for compliance and process tracking."}},"required":["id","export_job_id","row_summary_json","included_at"],"description":"Export job detail record for a single exported data item (applicant, application, resume, etc.). Stores summary, references, and timestamp for audit, download, and compliance forensics."},"IAtsRecruitmentExportFailure.IRequest":{"type":"object","properties":{"export_job_id":{"type":"string","format":"uuid","description":"Required: ID of the export job whose failures are to be queried."},"failure_stage":{"type":"string","description":"Filter by process stage where the failure occurred (e.g., 'filtering', 'generating', 'delivering'). Optional."},"failed_at_from":{"type":"string","format":"date-time","description":"Start of failure time window (inclusive, UTC ISO8601). Optional."},"failed_at_to":{"type":"string","format":"date-time","description":"End of failure time window (inclusive, UTC ISO8601). Optional."},"failure_reason":{"type":"string","description":"Search within failure reason/description. Supports partial matches for diagnostics or compliance."},"page":{"type":"integer","description":"Pagination control: which page to retrieve. Optional."},"limit":{"type":"integer","description":"Pagination control: number of records per page. Optional."},"sort":{"type":"string","description":"Sort field and direction (e.g., 'failed_at desc'). Optional."}},"required":["export_job_id"],"description":"Request schema for searching export job failure records. Supports filtering by job, failure stage, time range, and keyword search—used for error audit, analytics, and remediation flows."},"IAtsRecruitmentExportFailure":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this export failure record. Used for compliance and operational audit."},"export_job_id":{"type":"string","format":"uuid","description":"Foreign key linking to the parent export job experiencing the failure."},"failure_stage":{"type":"string","description":"Stage of the export job at which the failure occurred (e.g., 'filtering', 'generating', 'delivering')."},"failure_reason":{"type":"string","description":"Detailed description of the error or exception that caused the export failure. May include raw error message or system explanation."},"failed_at":{"type":"string","format":"date-time","description":"UTC timestamp of when the failure event was recorded. Used for SLA, compliance, and incident response."}},"required":["id","export_job_id","failure_stage","failure_reason","failed_at"],"description":"Export job failure record, capturing a specific error or exception during the batch export process. Used for compliance, diagnostics, and remediation auditing."},"IAtsRecruitmentAccessLog.IRequest":{"type":"object","properties":{"actor_type":{"type":"string","description":"The actor type (e.g. applicant, hrRecruiter, techReviewer, systemAdmin, or system). Can be used for filtering logs per user class."},"accessed_at_from":{"type":"string","format":"date-time","description":"Start of date/time range for filtering (ISO8601 date-time string)."},"accessed_at_to":{"type":"string","format":"date-time","description":"End of date/time range for filtering (ISO8601 date-time string)."},"target_type":{"type":"string","description":"Target data type (e.g. resume, application, interview, api_credential) to filter log scope."},"actor_id":{"type":"string","description":"String to match against actor_id (UUID format) for direct user lookup."},"ip_address":{"type":"string","description":"String to match against IP (partial or exact)."},"device_info":{"type":"string","description":"String to match device_info field (partial or full text)."},"access_reason":{"type":"string","description":"Search in access_reason field (for audit context, event purpose)."},"page":{"type":"integer","description":"Page of results to retrieve (for pagination). Starts at 1.","minimum":1},"limit":{"type":"integer","description":"Max records per page (limit); typically up to 100.","minimum":1}},"required":[],"description":"Request DTO for searching and paginating access logs in the ATS system.\nUsed to query system-wide or actor-specific access events in a compliant, auditable manner."},"IAtsRecruitmentAccessLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for the access log entry."},"actor_id":{"type":"string","format":"uuid","description":"Actor/user (applicant, HR, reviewer, admin, or system) performing access (UUID).\n\nReferenced but not strictly FK-constrained (for audit resilience)"},"actor_type":{"type":"string","description":"Role of actor at time of access (applicant, hrRecruiter, techReviewer, systemAdmin, system component)."},"target_type":{"type":"string","description":"Target data class (e.g. resume, application, interview, notification, credentials, etc)."},"target_id":{"type":"string","format":"uuid","description":"UUID of the business data record being accessed."},"accessed_at":{"type":"string","format":"date-time","description":"Timestamp when access event occurred (ISO8601, UTC, precise to seconds or milliseconds)."},"ip_address":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address of the requester (may be null if unknown)."},"device_info":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Device information/user-agent for the accessor (may be null if not captured)."},"access_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reason/purpose for access (normal operation, audit, compliance, support)."}},"required":["id","actor_id","actor_type","target_type","target_id","accessed_at"],"description":"ATS Data Access/Audit Log Record.\nCaptures a single event of sensitive data access for audit and regulatory traceability."},"IAtsRecruitmentDataDeletionLog.IRequest":{"type":"object","properties":{"requestor_type":{"type":"string","description":"Actor type or initiator type (e.g. applicant, hrRecruiter, techReviewer, systemAdmin, system component)."},"target_type":{"type":"string","description":"The business class/type of data deleted (e.g. resume, application, interview)."},"deleted_at_from":{"type":"string","format":"date-time","description":"Range filter: start date/time (ISO8601 format)."},"deleted_at_to":{"type":"string","format":"date-time","description":"Range filter: end date/time (ISO8601 format)."},"deletion_reason":{"type":"string","description":"String to match against deletion reason (e.g. GDPR, admin removal, scheduled expiry)."},"requestor_id":{"type":"string","description":"String to filter by actor/requestor ID (UUID, exact or partial)."},"page":{"type":"integer","description":"Pagination: which page number to fetch (starts from 1).","minimum":1},"limit":{"type":"integer","description":"Pagination: how many records per query (default 50, max 100).","minimum":1}},"required":[],"description":"Request DTO for searching, filtering, and paginating data deletion logs.\nUsed in compliance export, GDPR trace, and legal reporting tools."},"IAtsRecruitmentDataDeletionLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key for the deletion log record."},"deleted_at":{"type":"string","format":"date-time","description":"Timestamp of deletion (ISO8601 format; precise to seconds or ms, UTC)."},"requestor_id":{"type":"string","format":"uuid","description":"Deletion actor/requestor identity (UUID), not always FK-enforced."},"requestor_type":{"type":"string","description":"Role or type of requester (applicant, hrRecruiter, techReviewer, systemAdmin, system, etc)."},"target_type":{"type":"string","description":"Data type/class deleted (e.g. resume, application, interview, notification)."},"target_id":{"type":"string","format":"uuid","description":"UUID for data deleted (may be soft-deleted or purged from business table)."},"deletion_reason":{"type":"string","description":"Stated compliance, business, or legal reason for deletion."},"outcome_note":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional note on the outcome (e.g. \"data anonymized\", \"full deletion\", \"archived by policy\")."}},"required":["id","deleted_at","requestor_id","requestor_type","target_type","target_id","deletion_reason"],"description":"ATS Data Deletion Log Record.\nEach record describes a data deletion in the system for audit and regulatory reporting."},"IAtsRecruitmentMaskingLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this data masking log record. Each log entry captures a singular masking event for audit and compliance."},"masked_at":{"type":"string","format":"date-time","description":"The timestamp at which the masking event was performed, in ISO8601 format. This indicates the moment data masking occurred, facilitating chronological audits."},"masked_by_id":{"type":"string","format":"uuid","description":"UUID of the actor (user or system) who performed masking. Helps in tracing accountability for compliance and security teams."},"masked_by_type":{"type":"string","description":"The actor role/type who performed masking. Typical values include 'applicant', 'hrRecruiter', 'techReviewer', 'systemAdmin', 'automated', or 'compliance'. This clarifies the source of masking action for regulatory context."},"target_type":{"type":"string","description":"The class/type of data that was masked—e.g., 'resume', 'application', 'contact info', etc. Enables quick filtering of masking events by data category for compliance reviews."},"target_id":{"type":"string","format":"uuid","description":"UUID of the entity that was masked. This points to the specific record for audit, forensics, or data recovery verification."},"masking_reason":{"type":"string","description":"Stated business or compliance reason for masking (e.g., user request, automated policy, privacy complaint, scheduled expiry, etc.). This property records the motivation for masking for regulatory examination."}},"required":["id","masked_at","masked_by_id","masked_by_type","target_type","target_id","masking_reason"],"description":"Audit log record for a data masking event in the ATS system. Each record captures when, who, why, and what data was masked, enabling transparent compliance tracking for privacy regulations such as GDPR."},"IAtsRecruitmentMaskingLog.IRequest":{"type":"object","properties":{"masked_by_type":{"type":"string","description":"Filter for the role/type of masking actor. Typically 'applicant', 'hrRecruiter', 'techReviewer', 'systemAdmin', etc. Optional."},"target_type":{"type":"string","description":"Filter for masking events by data class/type, e.g., 'resume', 'application'. Optional."},"masking_reason":{"type":"string","description":"Filter for logs by specific masking reason, such as 'user request', 'policy', 'GDPR', 'privacy'. Optional."},"masked_at_from":{"type":"string","format":"date-time","description":"Start datetime (inclusive, ISO8601) for filtering masking events."},"masked_at_to":{"type":"string","format":"date-time","description":"End datetime (inclusive, ISO8601) for filtering masking events."},"page":{"type":"integer","minimum":1,"description":"Page number to return for pagination. Defaults to 1 if omitted."},"limit":{"type":"integer","minimum":1,"description":"Maximum number of records per page for pagination. Defaults to system standard if omitted."}},"required":[],"description":"Request object for querying/filtering paginated masking log entries. Allows advanced filtering by actor type, target data type, masking reason, and date range with pagination controls."},"IAtsRecruitmentAuthenticationFailure":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for this authentication failure log. Used to reference or audit specific authentication incidents for forensics and compliance."},"attempted_at":{"type":"string","format":"date-time","description":"Timestamp (ISO 8601) when the failed authentication event occurred. Supports precise incident reporting."},"attempted_user_identifier":{"type":"string","description":"User-provided identifier (may be email, username, or ID) used during the failed authentication attempt. Captures what the actor tried to use for access."},"ip_address":{"oneOf":[{"type":"string","format":"ipv4"},{"type":"string","format":"ipv6"}],"description":"IP address (IPv4 or IPv6) of the device or origin making the failed login attempt. Useful for security monitoring and brute-force attack detection."},"device_info":{"type":"string","description":"Browser user-agent or system context information at the time of login attempt. Used for device fingerprinting and suspicious device detection."},"failure_reason":{"type":"string","description":"Detailed technical/business reason for authentication failure (e.g., 'wrong password', 'locked account', 'user not found', 'expired token'). Granular error context for incident handling."},"lockout_triggered":{"type":"boolean","description":"Whether this failure contributed to or triggered an account lockout as per security policy. Used for compliance tracking, account lockout policy enforcement, and forensic audits."}},"required":["id","attempted_at","attempted_user_identifier","failure_reason","lockout_triggered"],"description":"Detailed log record for a failed authentication event in the ATS system. Includes timestamp, user identifier attempted, failure reason, IP/device context, and lockout state. Supports compliance, fraud investigation, and brute-force attack detection."},"IAtsRecruitmentAuthenticationFailure.IRequest":{"type":"object","properties":{"attempted_user_identifier":{"type":"string","description":"Optional filter for failed attempts by specific user email, username, or identifier."},"ip_address":{"type":"string","description":"Optional filter for login attempts by specific IP address. Accepts both IPv4 and IPv6 as string."},"failure_reason":{"type":"string","description":"Optional filter by authentication error reason (e.g. 'wrong password', 'user not found')."},"lockout_triggered":{"type":"boolean","description":"Optional filter—set true to query only lockout-triggering attempts."},"attempted_at_from":{"type":"string","format":"date-time","description":"Start datetime (inclusive, ISO8601) for filtering authentication failure events."},"attempted_at_to":{"type":"string","format":"date-time","description":"End datetime (inclusive, ISO8601) for filtering authentication failure events."},"page":{"type":"integer","minimum":1,"description":"Pagination page number to return. Defaults to 1 if omitted."},"limit":{"type":"integer","minimum":1,"description":"Maximum number of records per page for pagination. Uses system default if omitted."}},"required":[],"description":"Request object for searching and retrieving paginated authentication failure logs. Supports advanced filter options by user identifier, IP address, failure reason, lockout trigger, date range, and pagination."},"IAtsRecruitmentExternalApiCredential.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the external API credential.\n\nThis field is the primary key for the credential record as defined in the Prisma schema. It is used to reference, update, or delete this credential."},"credential_key":{"type":"string","description":"A unique logical key for the external credential. Used for in-application reference, credential rotation, and service lookups.\n\nMatches the 'credential_key' field in the Prisma table."},"service_name":{"type":"string","description":"Name of the third-party service the credential is for, e.g. Google Calendar, SendGrid, etc. Used for display and filter."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Indicates when the credential will expire, or null for non-expiring entries.\n\nPulled from the 'expires_at' column in Prisma. Allows for rotation and expiring credential management."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional business/contextual description for what this credential is used for.\n\nCorresponds to 'description' field in schema. Shown in audit, search UI, or documentation screens."},"created_at":{"type":"string","format":"date-time","description":"Timestamp of when the credential record was created.\n\nCorresponds to 'created_at' in schema. Used for auditing and change management."},"updated_at":{"type":"string","format":"date-time","description":"The last update timestamp for the credential entry.\n\nField is managed by system and allows for audit trace history."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion marker; null if active, set if this credential is logically deleted.\n\nImportant for audit recovery and for excluding from production integration logic."}},"required":["id","credential_key","service_name","created_at","updated_at"],"description":"Summary representation of an external API credential as used by the ATS platform for auditing, rotation dashboards, and administration. Key fields include identity, logical key, service name, optional expiration, and soft deletion flag. Uniqueness is enforced at 'credential_key'. This type is used in search results and list displays."},"IAtsRecruitmentAuditTrails":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the audit trail record (primary key).\n\nFrom the 'id' field in the Prisma table."},"event_timestamp":{"type":"string","format":"date-time","description":"Timestamp when the event occurred (UTC, ISO8601 string).\n\nCorresponds to 'event_timestamp'."},"actor_id":{"type":"string","format":"uuid","description":"ID of the user, admin, or system component that performed the operation.\n\nReferences actor tables. Used for security investigation and audit linking."},"actor_role":{"type":"string","description":"Role or identity of the actor at the time the event occurred.\n\nTypical values: systemAdmin, hrRecruiter, applicant, techReviewer, backgroundJob."},"operation_type":{"type":"string","description":"Type of operation recorded ('CREATE', 'UPDATE', 'DELETE', 'ACCESS', etc.).\n\nTracks the nature of the event for reporting and forensics."},"target_type":{"type":"string","description":"Type of entity/object impacted by this event.\n\nExamples: 'system_setting', 'api_credential', 'enum', 'user', etc."},"target_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Identifier of the affected object/entity (may be null).\n\nMay reference any primary key in the business tables. Used for traceability."},"event_detail":{"type":"string","description":"Serialized JSON or free-form text describing the event in detail. Includes before/after, error messages, request metadata, etc.\n\nAllows for compliance review and incident reconstruction."},"ip_address":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"IP address of the actor for this event (nullable).\n\nUsed in security forensics and threat analysis. Optional."},"user_agent":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"User agent, device fingerprint, or context string.\n\nUsed for fraud analysis and device attribution."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the audit trail was created (system managed).\n\nCorresponds to 'created_at' field in Prisma."},"updated_at":{"type":"string","format":"date-time","description":"The most recent time this audit trail was updated.\n\nSupports traceability, correction records, etc."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion marker: null if active, set if this audit trail is logically deleted (enables recovery/audit suppression).\n\nMatches 'deleted_at' field in schema."}},"required":["id","event_timestamp","actor_id","actor_role","operation_type","target_type","event_detail","created_at","updated_at"],"description":"Complete audit trail record as defined in the ats_recruitment_audit_trails table. Used as a base for audit log detail, compliance investigations, and reporting APIs. Every record is uniquely identified and contains full event/actor/entity/audit metadata."},"IAtsRecruitmentApplicant.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the applicant record (primary key).\n\nThis field is 'id' in the Prisma table."},"email":{"type":"string","format":"email","description":"Applicant's unique email address for login and notification.\n\nUsed for authentication as per 'email' field in schema."},"name":{"type":"string","description":"Full name of the applicant for search and display.\n\nReferences the 'name' field in schema."},"phone":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Applicant's contact phone number, if provided (nullable).\n\nMatches 'phone' in schema. Used for notification, privacy filtered in summaries."},"is_active":{"type":"boolean","description":"Boolean indicating if account is active and allowed to login.\n\nMaps to 'is_active' in Prisma model."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the applicant record was created.\n\nField 'created_at' in schema."},"updated_at":{"type":"string","format":"date-time","description":"Latest update timestamp for the applicant record (UTC ISO8601 string).\n\nReferences 'updated_at'."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp for GDPR compliance and audit recovery.\n\nNull if not deleted."}},"required":["id","email","name","is_active","created_at","updated_at"],"description":"Summary view of an applicant (ats_recruitment_applicants) for search, administration, and overview panels. Contains primary identifiers, contact info (optional), and audit metadata. Does not include password or sensitive internal data. Used primarily for list and search result display."},"IAtsRecruitmentHrRecruiter.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the HR recruiter record (primary key).\n\nThis is the 'id' field in the table."},"email":{"type":"string","format":"email","description":"Email address for HR recruiter, used for login and notifications.\n\nRequired and unique as per schema 'email'."},"name":{"type":"string","description":"Full name of the HR recruiter as displayed in business operations (e.g., assignment, notifications, search).\n\nField 'name' in schema."},"department":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Department name/identifier for the HR recruiter (optional field for reporting line organization).\n\nThis is an optional field in the schema."},"is_active":{"type":"boolean","description":"Indicates if the account is enabled and permitted to operate.\n\nSet from the 'is_active' boolean field in table."},"created_at":{"type":"string","format":"date-time","description":"Date when the HR recruiter account was created.\n\nUsed in audit, reporting, and compliance."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the account was last updated (UTC ISO8601 string).\n\nDirectly maps to 'updated_at' in schema."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion marker for deactivated or removed HR recruiter accounts (GDPR, reporting).\n\nNull means active."}},"required":["id","email","name","is_active","created_at","updated_at"],"description":"Summary view of an HR recruiter for administrative and search UIs. Drawn from the ats_recruitment_hrrecruiters schema type. Does not include password or authentication fields. Contains identifying, contact, department (optional), and audit timestamps. Used for list and lookup screens."},"IAtsRecruitmentTechReviewer.ISummary":{"type":"object","description":"Summary representation of a technical reviewer for ATS. Used for listing, dropdowns, assignment, or summary panels. Excludes password and full audit data. Properties correspond to the tech reviewer account, specialization, and active state.\n\nBased on Prisma model: ats_recruitment_techreviewers.\n\nAll date/time values are in ISO 8601 format (e.g., '2025-09-14T11:29:22.564Z').","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the tech reviewer (UUID)."},"email":{"type":"string","format":"email","description":"Reviewer email address used for authentication, system notification, and filtering/listing."},"name":{"type":"string","description":"The reviewer's full legal name for display and filtering."},"specialization":{"oneOf":[{"type":"string","description":"Primary technology stack, subject area, or key reviewer specialty (e.g., 'Backend', 'Cloud', 'Security')."},{"type":"null"}],"description":"Optional key technology/specialty for assignment matching, or null if not specified."},"is_active":{"type":"boolean","description":"Whether this tech reviewer is currently allowed to access and perform review operations."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when the tech reviewer account was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of last update to the tech reviewer account."}},"required":["id","email","name","is_active","created_at","updated_at"]},"IAtsRecruitmentSystemAdmin.ISummary":{"type":"object","description":"Summary for system administrator in the ATS platform. Used in list, directory UI, or assignment scenarios.\n\nExcludes sensitive system fields (e.g., password hash).\n\nBased on Prisma model: ats_recruitment_systemadmins.\n\nAll date/time values are in ISO 8601 format (e.g., '2025-09-14T11:29:22.564Z').","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the system admin account (UUID)."},"email":{"type":"string","format":"email","description":"System admin email address (unique for login and system notices)."},"name":{"type":"string","description":"Admin's full name."},"super_admin":{"type":"boolean","description":"Whether this account is a super administrator (can manage all configuration, other admins)."},"is_active":{"type":"boolean","description":"Current enable state. False if account is disabled and cannot log in."},"created_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp when admin account was created."},"updated_at":{"type":"string","format":"date-time","description":"ISO 8601 timestamp of last admin profile update."}},"required":["id","email","name","super_admin","is_active","created_at","updated_at"]},"IAtsRecruitmentJobPosting.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Job posting unique identifier (UUID, PK)."},"title":{"type":"string","description":"Job posting title/position."},"location":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Location of the job, such as city, remote, or onsite. Optional."},"job_posting_state_id":{"type":"string","format":"uuid","description":"Current posting state (open, closed, paused, etc., UUID referencing job_posting_states)."},"is_visible":{"type":"boolean","description":"Whether this posting is visible to applicants (true) or hidden (false)."},"application_deadline":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Application closing date/time (ISO8601), nullable for open-ended postings."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp."}},"required":["id","title","job_posting_state_id","is_visible","created_at"],"description":"Summary view for job posting list results. Excludes details and focuses on identifying, status, and headline fields only. Used for fast listing and pagination."},"IAtsRecruitmentJobSkill.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Job skill unique identifier."},"name":{"type":"string","description":"Skill/technology name for this entry."},"is_active":{"type":"boolean","description":"Whether this skill is currently in active use."}},"required":["id","name","is_active"],"description":"Summary DTO for job skill/technology, used in list/paged results. Contains minimal fields required for list views and selection components."},"IAtsRecruitmentJobEmploymentType.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the employment type."},"name":{"type":"string","description":"Human-readable label for employment type (e.g., 'Full-time')."},"is_active":{"type":"boolean","description":"Whether this employment type is currently available for selection."}},"required":["id","name","is_active"],"description":"Summary DTO for job employment type with principal display and business fields, for table or selection UI."},"IAtsRecruitmentJobPostingState.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the job posting state. This is the primary key from the posting state entity in the Prisma schema."},"state_code":{"type":"string","description":"Machine-friendly unique state code (e.g., 'open', 'closed', 'paused'). Must be unique within the ATS job states. This corresponds to 'state_code' in the Prisma schema."},"label":{"type":"string","description":"Human-readable label for the workflow status (e.g., 'Open', 'Paused'). Used for UI display. Sourced from the Prisma schema."},"is_active":{"type":"boolean","description":"Indicates whether this job state is currently selectable. The same as 'is_active' in the Prisma schema."}},"required":["id","state_code","label","is_active"],"description":"Summary DTO for job posting workflow states in the ATS system. Used for populating dropdowns and validating job posting status transitions. Fields match the main key columns in the Prisma model.\n\n- id: Primary key for the state.\n- state_code: Internal workflow code.\n- label: UI display name.\n- is_active: Current active/inactive status."},"IAtsRecruitmentApplicationStatusHistory.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key for the application status history row. Sourced from the Prisma model."},"from_status":{"type":"string","description":"Previous status of the application before this change. This matches the 'from_status' field in the application status history table."},"to_status":{"type":"string","description":"The new status after this change event. As in the model."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp when the status change occurred. The 'changed_at' field in the Prisma schema, ISO 8601 format."},"actor_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"ID of the actor (HR/reviewer) who performed the transition, if applicable. Nullable as in the schema."}},"required":["id","from_status","to_status","changed_at"],"description":"Summary DTO for each status change instance in a job application's workflow. Useful for timeline display and high-level audit. Maps to the status change audit row from the application status history table.\n\n- id: Unique row identifier.\n- from_status: Previous application status.\n- to_status: Resulting application status.\n- changed_at: ISO datetime of the change.\n- actor_id: HR/reviewer, if present."},"IAtsRecruitmentApplicationFeedback.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique feedback identifier, primary key from feedback table."},"feedback_body":{"type":"string","description":"Free-form or structured feedback content. Required, as in the schema."},"rating":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Optional numeric rating (e.g., interview score or application rank). Nullable field in the schema."},"is_final_recommendation":{"type":"boolean","description":"Indicates if this feedback represents the final HR or reviewer recommendation. Matches the schema's required field."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for the feedback. ISO 8601, from the schema."},"reviewer_id":{"type":"string","format":"uuid","description":"ID of the reviewer (HR or tech reviewer) who submitted this feedback. The 'reviewer_id' field in the feedback table."}},"required":["id","feedback_body","is_final_recommendation","created_at","reviewer_id"],"description":"Summary representation of feedback entries for a job application. Used for timelines, list views, and HR/reviewer decision audit. Matches primary fields from the ats_recruitment_application_feedback table.\n\n- id: Row PK for the feedback.\n- feedback_body: Required feedback text.\n- rating: Optional score.\n- is_final_recommendation: True if this is the decisive recommendation for the application.\n- created_at: Timestamp of feedback submission.\n- reviewer_id: HR or tech reviewer actor UUID."},"IAtsRecruitmentApplicationSkillMatch.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the skill match record. This value uniquely identifies each application-skill matching record and is generated by the database.\n\nReferences ats_recruitment_application_skill_matches.id"},"skill_id":{"type":"string","format":"uuid","description":"Unique identifier of the skill entity. Refers to ats_recruitment_job_skills.id. Indicates which skill (technology/competency) was evaluated for this match record."},"match_type":{"type":"string","description":"Match type code (e.g., required, preferred, missing, extra, etc). This string indicates the matching class (AI algorithm or HR rules) used for present skill. Result is used for applicant fit reporting and evaluation dashboards."},"ai_score":{"oneOf":[{"type":"number","description":"Matching confidence score (0~1, 0 is lowest, 1 is perfect match) or similarity percentage. If not available (not assessed), this value may be null."},{"type":"null"}],"description":"AI or algorithmic skill matching confidence score. Represents the numerical evaluation (0~1, or null if not scored). Used for analytics or detailed review."},"is_manually_verified":{"type":"boolean","description":"Indicates if the skill match result has been manually reviewed, confirmed, or overridden by HR or tech reviewer. True if a human verified/edited; false if only by algorithm."}},"required":["id","skill_id","match_type","is_manually_verified"],"description":"Summary of a skill-to-application match (ats_recruitment_application_skill_matches).\n\nContains enough information for list view, reporting, or analytics on which skills are matched for an application. Used for skill evaluation dashboards, AI/HR review, and compliance checks."},"IAtsRecruitmentResume.ISummary":{"type":"object","description":"Summary view of a resume/CV for list/paginated displays. Contains id, title, owner, and key metadata. For use in IPage responses or concise resume search listings.","properties":{"id":{"type":"string","format":"uuid","description":"Primary key. Unique resume identifier (UUID)."},"ats_recruitment_applicant_id":{"type":"string","format":"uuid","description":"Resume owner (applicant) UUID."},"title":{"type":"string","description":"Resume title or user label."},"parsed_name":{"type":"string","description":"Parsed name for listing/search."},"created_at":{"type":"string","format":"date-time","description":"When the resume was originally created."}},"required":["id","ats_recruitment_applicant_id","title","created_at"]},"IAtsRecruitmentCodingTestExternalLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of the external log entry.\nReferences ats_recruitment_coding_test_external_logs.id"},"event_type":{"type":"string","description":"Type of external integration event (api_request, callback, error, status, etc). Categorizes log entry for troubleshooting."},"message":{"oneOf":[{"type":"string","description":"Human-readable event or error message, if applicable."},{"type":"null"}],"description":"Short message or summary about the log event or external interaction. Can be null for types without user-facing message."},"occurred_at":{"type":"string","format":"date-time","description":"UTC ISO 8601 timestamp when the external log event occurred. Used for audit/log ordering."}},"required":["id","event_type","occurred_at"],"description":"Summary object representing one entry in the coding test external log (ats_recruitment_coding_test_external_logs).\n\nEnumerates one integration-related event for troubleshooting, external trace audit, or status history."},"IAtsRecruitmentInterview.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the interview entity. References ats_recruitment_interviews.id"},"ats_recruitment_application_id":{"type":"string","format":"uuid","description":"The job application to which this interview applies. FK to ats_recruitment_applications.id"},"title":{"type":"string","description":"Interview title/label, as entered by HR or defaulted by the system. Used for dashboard and summary listing."},"stage":{"type":"string","description":"Interview stage or round (e.g. 'tech_round', 'hr', 'final'). Required for business process and analytics."},"status":{"type":"string","description":"Current/aggregate interview status: scheduled, completed, cancelled, pending, etc. Required for interview tracking."},"created_at":{"type":"string","format":"date-time","description":"UTC ISO 8601 date-time of interview creation."}},"required":["id","ats_recruitment_application_id","title","stage","status","created_at"],"description":"Summary representation of one interview (ats_recruitment_interviews) for list/dashboard/reporting views.\n\nIncludes most salient fields for filtering, assignments, and quick review in HR/TechReviewer UI."},"IAtsRecruitmentNotification.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification event. Referenced in all notification delivery and audit contexts."},"event_type":{"type":"string","description":"Business event key indicating the type of notification, e.g. 'application_status_update', 'interview_scheduled', etc."},"status":{"type":"string","description":"Current delivery or business status for the notification event (e.g. pending, delivered, failed, cancelled)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the notification was initially created or scheduled."},"recipient_applicant_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Applicant recipient identifier (if this notification is targeted at a specific applicant), otherwise null."},"recipient_hrrecruiter_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"HR recruiter recipient identifier (if targeted at a specific HR staff), otherwise null."},"recipient_techreviewer_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Technical reviewer recipient identifier (if targeted at a specific reviewer), otherwise null."},"recipient_systemadmin_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"System administrator recipient identifier (if for an admin), otherwise null."},"reference_table":{"type":"string","description":"Name of the business table related to this notification (e.g. ats_recruitment_applications, ats_recruitment_interviews, etc.)."},"reference_id":{"type":"string","format":"uuid","description":"UUID of the referenced business entity associated with this notification."}},"required":["id","event_type","status","created_at","reference_table","reference_id"],"description":"Summary view of a notification event. Suitable for notification list or preview in ATS dashboards. Omits payload, template, or delivery details."},"IAtsRecruitmentNotificationTemplate.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification template."},"template_code":{"type":"string","description":"The business key for this template."},"channel":{"type":"string","description":"Notification channel (e.g., email, sms, app_push)."},"title":{"type":"string","description":"Template title for admin viewing."},"is_active":{"type":"boolean","description":"Is this template active and available for new notifications?"}},"required":["id","template_code","channel","title","is_active"],"description":"Summary information for notification template records. For use in paginated listings and administrative template browsing."},"IAtsRecruitmentNotificationFailure.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the notification failure record."},"failure_type":{"type":"string","description":"Nature or category of failure (e.g., permanent_error, provider_bounce, user_optout)."},"failure_message":{"type":"string","description":"Detailed failure message from notification provider or system."},"occurred_at":{"type":"string","format":"date-time","description":"Timestamp when the failure occurred."}},"required":["id","failure_type","failure_message","occurred_at"],"description":"Summary of a notification delivery failure for listing and audit purposes."},"IAtsRecruitmentExportJob.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the export job."},"job_type":{"type":"string","description":"Type of export job (e.g., applicants, applications, resumes, audit logs)."},"status":{"type":"string","description":"Current export status (pending, generating, delivering, complete, failed, cancelled)."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when export job was created."},"initiator_id":{"type":"string","format":"uuid","description":"Who initiated this export job."}},"required":["id","job_type","status","created_at","initiator_id"],"description":"Summary record for export job used in paginated export listings and status tracking."},"IAtsRecruitmentExportJobDetail.ISummary":{"type":"object","description":"Summary information about an individual entry in the export job details table (ats_recruitment_export_job_details). Each record logs a data row (such as applicant, application, etc.) included in a given export job, allowing compliance, confirmation, and item-by-item tracking. All core identifiers are always present. This summary omits full deserialized data, focusing on audit linkage and row metadata.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the export job detail row. Primary key of the record."},"export_job_id":{"type":"string","format":"uuid","description":"Reference to the parent export job (ats_recruitment_export_jobs.id) this detail is associated with."},"data_row_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"ID of the exported entity (applicant, application, etc.) if available, otherwise null for summary rows or audit-only entries."},"row_summary_json":{"type":"string","description":"Stringified minimal snapshot of exported data item (not the full business object) to support reproducibility of historical export."},"included_at":{"type":"string","format":"date-time","description":"Timestamp when this row was included in the export batch. Used for audit, debugging, and compliance confirmation."}},"required":["id","export_job_id","row_summary_json","included_at"]},"IAtsRecruitmentAccessLog.ISummary":{"type":"object","description":"Summary information about a single access-log event for sensitive data access in the ATS. Used by compliance and forensic audit tools to track who, when, and why key system records were accessed. Includes timeline, actor, resource identifiers, minimal device/network context, and optional access reason.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID) for the access log record."},"actor_id":{"type":"string","format":"uuid","description":"ID of the actor (user/admin/system) who accessed the data (may point to deleted actors for audit resilience)."},"actor_type":{"type":"string","description":"Role or system process that performed the access (applicant, hrRecruiter, techReviewer, systemAdmin, system process, etc)."},"target_type":{"type":"string","description":"Resource/data class or entity type being accessed (e.g., resume, application, interview, notification, export job, credentials, etc.)."},"target_id":{"type":"string","format":"uuid","description":"Primary identifier (UUID) of the sensitive ATS data record that was accessed."},"accessed_at":{"type":"string","format":"date-time","description":"Timestamp of the access event in UTC (audit field, never null)."},"ip_address":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional IP address of the actor/device from which the access originated. Used for access trace and breach investigations."},"device_info":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional device/browser or system user agent string, if available."},"access_reason":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Reason for access, system or business context (normal operation, compliance audit, anomaly investigation, etc.), if provided."}},"required":["id","actor_id","actor_type","target_type","target_id","accessed_at"]},"IAtsRecruitmentDataDeletionLog.ISummary":{"type":"object","description":"Summary for a single data deletion event as recorded in the ats_recruitment_data_deletion_logs table. Used for compliance, right-to-be-forgotten audit trails, and security incident documentation. Provides direct linkage between deletion and actor, data class, subject, root reason, and audit/retention annotations.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier (UUID primary key) for the data deletion log record."},"deleted_at":{"type":"string","format":"date-time","description":"Timestamp when deletion was executed."},"requestor_id":{"type":"string","format":"uuid","description":"Actor (user/admin/system) who requested deletion, not a strict FK for audit resilience."},"requestor_type":{"type":"string","description":"Type/category of actor: applicant, hrRecruiter, techReviewer, systemAdmin, or automated system."},"target_type":{"type":"string","description":"Resource or entity class that was deleted (resume, application, interview, etc.)."},"target_id":{"type":"string","format":"uuid","description":"UUID of the specific data record that was deleted."},"deletion_reason":{"type":"string","description":"Reason for deletion (GDPR request, admin action, scheduled purge, legal compliance, etc.)."},"outcome_note":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional notes recording outcome of deletion (anonymized, full removal, archived, etc.), can be null."}},"required":["id","deleted_at","requestor_id","requestor_type","target_type","target_id","deletion_reason"]},"IAtsRecruitmentMaskingLog.ISummary":{"type":"object","description":"Summary for a single data masking operation captured in the ats_recruitment_masking_logs table. Used to trace privacy/encryption workflow events (e.g., field masking, PII anonymization) for compliance needs. Contains all direct identifiers for the masking/batch, actor, reason, and affected resource.","properties":{"id":{"type":"string","format":"uuid","description":"Unique primary key (UUID) for this masking log entry."},"masked_at":{"type":"string","format":"date-time","description":"Timestamp when this masking event occurred (UTC)."},"masked_by_id":{"type":"string","format":"uuid","description":"UUID of the actor (user/system/admin) who performed masking; not strict FK for audit resilience."},"masked_by_type":{"type":"string","description":"Role/type of the actor (applicant, hrRecruiter, techReviewer, systemAdmin, automated, etc.)."},"target_type":{"type":"string","description":"Resource/entity type that was masked (resume, contact info, application, etc.)."},"target_id":{"type":"string","format":"uuid","description":"UUID of the specifically masked record."},"masking_reason":{"type":"string","description":"Reason for masking (GDPR request, privacy incident, automated policy, etc.)."}},"required":["id","masked_at","masked_by_id","masked_by_type","target_type","target_id","masking_reason"]},"IAtsRecruitmentAuthenticationFailure.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authentication failure log event.\n\nThis property is the primary key for referencing and retrieving detailed information about a specific authentication failure attempt, supporting audit and compliance tracking."},"attempted_at":{"type":"string","format":"date-time","description":"Timestamp of when the failed authentication attempt occurred (ISO 8601, UTC).\n\nThis represents the moment the login, token exchange, or authentication workflow was attempted and denied."},"attempted_user_identifier":{"type":"string","description":"The username, email, or identifier supplied by the entity attempting authentication.\n\nThis field is used for tracing which user/account generated the failure—may reference inactive/deleted/nonexistent users."},"ip_address":{"oneOf":[{"type":"string","description":"IP address from which the failed authentication was attempted.\n\nMay contain IPv4 or IPv6 address in string form for audit, fraud detection, and compliance. Null if not recorded."},{"type":"null"}],"description":"IP address from which the failed authentication was attempted (can be null).\n\nMay include IPv4 or IPv6, or null if not provided by the system or API."},"failure_reason":{"type":"string","description":"Human-readable or coded failure reason for the authentication denial.\n\nExamples: 'wrong password', 'user not found', 'account locked', 'token expired', 'invalid credential', etc. Used for analytics, fraud detection, and audit review."},"lockout_triggered":{"type":"boolean","description":"Indicates whether this failure contributed to triggering an account lockout policy.\n\nTrue if the failed attempt incremented a lockout counter or caused account suspension for security."}},"required":["id","attempted_at","attempted_user_identifier","failure_reason","lockout_triggered"],"description":"Summary view of an authentication failure event for audit and security monitoring.\n\nIncludes key fields required for analytics, investigation, and compliance reporting. Mirrors audit record for authentication failure. Nullable fields omitted or set as null when not captured. Excludes device_info and user agent for privacy in summary context."},"IPageIAtsRecruitmentCodingTestExternalLogISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentCodingTestExternalLogISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAtsRecruitmentInterviewISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAtsRecruitmentInterviewISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IAtsRecruitmentTechReviewer.IJoin":{"type":"object","properties":{"email":{"type":"string","format":"email","description":"Technical reviewer’s login identifier, must be a unique email in the system."},"password":{"type":"string","description":"Plain text password (will be hashed in storage); only accepted at registration."},"name":{"type":"string","description":"Full name of the technical reviewer for display in review workflows and audit logs."},"specialization":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Area of technical expertise; optional and nullable, used for reviewer assignment and skill matching."}},"required":["email","password","name"],"description":"Registration request payload for a technical reviewer (join endpoint), as defined by ats_recruitment_techreviewers schema. Provides the minimum properties required to onboard a reviewer into the platform authentication system. Password only accepted here, never returned in responses."},"IAtsRecruitmentSystemSetting.ISummary":{"type":"object","description":"Summary DTO for listing ATS system settings in paginated/search responses. Contains subset of IAtsRecruitmentSystemSetting entity fields for efficient table/list reporting. Excludes large descriptions or unused audit fields.","properties":{"id":{"type":"string","format":"uuid","description":"Record UUID"},"setting_name":{"type":"string","description":"Unique name/key for the setting"},"setting_value":{"type":"string","description":"Current value (in string form)"},"setting_type":{"type":"string","description":"Data type of the value"},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp"},"updated_at":{"type":"string","format":"date-time","description":"Last updated timestamp"}},"required":["id","setting_name","setting_value","setting_type","created_at","updated_at"]},"IAtsRecruitmentJobPosting.IUpdate":{"type":"object","properties":{"job_employment_type_id":{"type":"string","format":"uuid","description":"Employment type for the posting. Optional change."},"job_posting_state_id":{"type":"string","format":"uuid","description":"Workflow state for the posting. Optional change."},"title":{"type":"string","description":"Job title (if changing, must remain unique per recruiter)."},"description":{"type":"string","description":"Detailed job posting description (update permitted)."},"location":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Location (onsite/city/remote etc; may update to null if removing location)."},"salary_range_min":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Optional new minimum salary for the posting."},"salary_range_max":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Optional new maximum salary for the posting."},"application_deadline":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional new closing deadline for applications."},"is_visible":{"type":"boolean","description":"Visibility toggle (true = public, false = hidden)."}},"required":[],"description":"Update object for partial or full editing of job posting entity. All fields are optional; only provided fields are updated. Follows Partial<T> semantics."}}}}