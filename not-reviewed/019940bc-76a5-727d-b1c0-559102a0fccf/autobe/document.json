{"operations":[{"specification":"This API operation allows unauthenticated guest users to register an account with limited access and obtain temporary tokens for accessing public information. It is associated with the auction_platform_guests table, which stores guest user identities including email and optional nickname along with timestamps and soft deletion. This operation creates a new guest record with a unique email and optional nickname, generating initial temporary JWT tokens to manage guest sessions. Access is public, requiring no prior authentication.\n\nThe join operation requires the email field for uniqueness and optional nickname for display purposes. The created_at, updated_at, and deleted_at fields manage lifecycle states but are handled internally. The join operation ensures that the email is unique and valid for guest identification.\n\nRelated operations include refresh token renewal to extend guest sessions using valid refresh tokens.\n\nSecurity considerations include ensuring that the operation does not allow privilege escalation beyond guest access and protects against duplicate registrations with the same email.\n\nThis operation is intended as a registration and initial token issuance point for guests, part of the role-specific authentication flow for guests, in line with the role kind \"guest\".","authorizationType":"join","description":"Creates a new guest account for unauthenticated users with limited access rights. Stores guest email and optional nickname, with lifecycle timestamps. Issues temporary JWT tokens to manage guest sessions and access levels. Uniqueness of email is enforced to prevent duplicate guest registrations.\n\nThis operation corresponds to the auction_platform_guests table, referencing fields: email (unique), nickname (optional), created_at, updated_at, deleted_at.\n\nGuest users cannot perform login as they do not authenticate with credentials but can refresh tokens for continued access.\n\nRelated: refresh operation to renew token access.\n\nEnsures security by restricting guest token scope to limited permissions only.\n\nThe endpoint is public and does not require authentication.\n\nIt is part of the essential operations for the guest role kind.\n","summary":"Create new guest account and issue temporary tokens (auction_platform_guests)","parameters":[],"requestBody":{"description":"Information required to create a guest account","typeName":"IAuctionPlatformGuest.ICreate"},"responseBody":{"description":"Authorized guest account information with tokens","typeName":"IAuctionPlatformGuest.IAuthorized"},"authorizationRole":"guest","name":"joinGuest","path":"/auth/guest/join","method":"post"},{"specification":"This API operation allows guests to refresh their temporary access JWT tokens using a valid refresh token. It is based on the auction_platform_guests context, extending guest session validity without requiring full re-authentication.\n\nFunctionally, the operation receives a valid refresh token from the guest user and issues new temporary access tokens with extended expiration. It corresponds to the authentication flow for guests who do not have login capabilities but require continued access via token renewal.\n\nThis operation maintains security by validating the refresh token and limiting token scope appropriately to guest access levels.\n\nThe endpoint is accessible only to guests presenting a valid refresh token.\n\nRelated to the join operation where the initial tokens are issued.\n\nThe role kind \"guest\" strictly forbids login operations, so refresh is the primary token renewal mechanism.\n\nRequest and response bodies conform to the standard pattern for refresh token operations in this context.\n\nThis operation is essential for the guest role kind authentication lifecycle.","authorizationType":"refresh","description":"Refreshes temporary access tokens for guest users by validating the provided refresh token. Issues new access and refresh tokens with updated expirations. Ensures session continuity for guests without requiring login credentials.\n\nReferences auction_platform_guests context for token validation and claims.\n\nAccessible only to authenticated guests holding valid refresh tokens.\n\nRelated to the join operation for initial registration and token issuance.\n\nSecurity enforced by token validation and guest access scope limitations.\n\nEssential for maintaining guest session lifecycle.\n","summary":"Refresh tokens to renew guest access (auction_platform_guests)","parameters":[],"requestBody":{"description":"Refresh token information for guests","typeName":"IAuctionPlatformGuest.IRefresh"},"responseBody":{"description":"New authorized token information for guest","typeName":"IAuctionPlatformGuest.IAuthorized"},"authorizationRole":"guest","name":"refreshGuest","path":"/auth/guest/refresh","method":"post"},{"specification":"This API operation enables member users (team leaders) to register for an account by providing the necessary registration data, resulting in the creation of a new member record in the auction_platform_members table with hashed password storage. Upon successful registration, the system issues JWT authorization tokens for authenticated access. The registration requires unique email addresses and optionally a nickname. Passwords are never stored in plaintext. The operation is public and supports account lifecycle management including soft deletion via deleted_at field.","authorizationType":"join","description":"Member registration operation creates new records in auction_platform_members with email, password hash, and optional nickname. Upon registration, JWT tokens are issued for authentication. The system enforces unique emails and securely hashes passwords. Deleted_at field enables soft deletion and auditing. This operation is public and initiates member access workflow including login and token refresh.","summary":"Register new member user and issue authorization tokens","parameters":[],"requestBody":{"description":"New member registration request data","typeName":"IAuctionPlatformMember.ICreate"},"responseBody":{"description":"Authorization response containing JWT tokens for member user","typeName":"IAuctionPlatformMember.IAuthorized"},"authorizationRole":"member","name":"join","path":"/auth/member/join","method":"post"},{"specification":"This API operation enables member users (team leaders) to authenticate by providing valid credentials, typically email and password, for verifying their identity. Upon successful authentication against auction_platform_members table records, JWT authorization tokens are issued for secure API access. This operation supports session initiation, with token-based access control and refresh workflows. Passwords are securely verified using stored password hashes. The endpoint is public to allow user login flows.","authorizationType":"login","description":"Member login operation authenticates credentials of auction_platform_members and, if valid, issues JWT tokens. This operation supports secure access control and session management, ensuring only authenticated members gain system entry. Password verification utilizes hashed password comparisons. Related operations include join registration and token refresh for session continuity.","summary":"Authenticate member user and issue authorization tokens","parameters":[],"requestBody":{"description":"Member login credentials","typeName":"IAuctionPlatformMember.ILogin"},"responseBody":{"description":"Authorization response containing JWT tokens for member user","typeName":"IAuctionPlatformMember.IAuthorized"},"authorizationRole":"member","name":"login","path":"/auth/member/login","method":"post"},{"specification":"This API operation allows member users to refresh their JWT tokens, enabling session renewal without re-authentication. It validates the provided refresh tokens and issues new access and refresh tokens consistent with current user roles and permissions as stored in auction_platform_members. This ensures seamless session management while maintaining security. Refresh tokens have limited scope and lifetime. The operation requires authenticated member role access to submit valid tokens.","authorizationType":"refresh","description":"Member token refresh operation validates the existing refresh token and issues new JWT tokens for session continuity. This operation maintains user session state in auction_platform_members, supporting secure token lifecycle management. Related operations include join for registration and login for initial authentication.","summary":"Refresh member user authorization tokens for session renewal","parameters":[],"requestBody":{"description":"Member refresh token request data","typeName":"IAuctionPlatformMember.IRefresh"},"responseBody":{"description":"Authorization response containing refreshed JWT tokens for member user","typeName":"IAuctionPlatformMember.IAuthorized"},"authorizationRole":"member","name":"refresh","path":"/auth/member/refresh","method":"post"},{"specification":"This API operation enables admin users to register a new admin account by submitting necessary registration details, creating records in auction_platform_admins table with secure password hash storage. Upon successful creation, JWT authorization tokens are issued for admin access. Unique email enforcement and optional nickname storage are included. Soft deletion is supported through deleted_at timestamp. This endpoint is public to allow new admin account creation.","authorizationType":"join","description":"Admin account registration creates new auction_platform_admins records with email, hashed password, and optional nickname. JWT tokens are issued upon success to facilitate secure admin access. Soft deletion via deleted_at field allows account lifecycle management. Related operations include admin login and token refresh processes.","summary":"Register new admin user and issue authorization tokens","parameters":[],"requestBody":{"description":"Admin registration request payload","typeName":"IAuctionPlatformAdmin.ICreate"},"responseBody":{"description":"Authorization response containing JWT tokens for admin user","typeName":"IAuctionPlatformAdmin.IAuthorized"},"authorizationRole":"member","name":"join","path":"/auth/admin/join","method":"post"},{"specification":"This API operation authenticates admin users by validating credentials such as email and password stored in auction_platform_admins table. Successful authentication results in issuance of JWT authorization tokens for secure admin-level API access. Password verification is done against secure password hashes. This endpoint facilitates initial login and supports token refresh workflows for admins.","authorizationType":"login","description":"Admin login operation authenticates credentials of auction_platform_admins users and issues JWT tokens upon success. The operation ensures secure access control for administrative functions by validated login and token issuance. It supports integration with admin join registration and token refresh operations.","summary":"Authenticate admin user and issue authorization tokens","parameters":[],"requestBody":{"description":"Admin login credentials","typeName":"IAuctionPlatformAdmin.ILogin"},"responseBody":{"description":"Authorization response containing JWT tokens for admin user","typeName":"IAuctionPlatformAdmin.IAuthorized"},"authorizationRole":"member","name":"login","path":"/auth/admin/login","method":"post"},{"specification":"This API operation enables admin users to refresh their JWT authorization tokens by validating submitted refresh tokens and issuing new access and refresh tokens. It maintains secure session continuity for admin role users as represented in auction_platform_admins table. The operation requires authenticated roles and valid tokens, supporting admin account session lifecycle management.","authorizationType":"refresh","description":"Admin token refresh operation verifies refresh tokens and issues new JWT tokens for admin session continuity. It ensures secure token lifecycle management consistent with admin privileges. Related operations include admin join for registration and login for authentication.","summary":"Refresh admin user authorization tokens for session continuation","parameters":[],"requestBody":{"description":"Admin token refresh request payload","typeName":"IAuctionPlatformAdmin.IRefresh"},"responseBody":{"description":"Authorization response containing refreshed JWT tokens for admin user","typeName":"IAuctionPlatformAdmin.IAuthorized"},"authorizationRole":"member","name":"refresh","path":"/auth/admin/refresh","method":"post"},{"specification":"This operation provides a paginated and filtered list retrieval for Auction Platform API Integration configurations. It is associated with the auction_platform_api_integrations table in the Prisma schema. Users can use this endpoint to search the configurations for external API keys, endpoints, and status entries. This supports administrative browsing and management of third-party integrations relevant to the auction platform.","path":"/auctionPlatform/admin/auctionPlatformApiIntegrations","method":"patch","summary":"Retrieve paginated list of auction platform API integration configurations","description":"Retrieve a filtered, paginated list of auction platform external API integration configurations. This endpoint enables administrative users to manage the external APIs connected to the platform, including keys and URLs.\n\nAccess is typically restricted to authorized administrative roles to protect API credentials.\n\nThis operation references the auction_platform_api_integrations table that stores API integration details. The response includes summaries suitable for management interfaces.\n\nRequest parameters allow searching by component names, filtering by active status, and applying pagination controls.\n\nNo modification is performed by this endpoint; it is read-only and safe for repeated use by authorized users.","parameters":[],"requestBody":{"description":"Search filters and pagination parameters for API integrations","typeName":"IAuctionPlatformApiIntegrations.IRequest"},"responseBody":{"description":"Paginated list of auction platform API integration configurations","typeName":"IPageIAuctionPlatformApiIntegrations.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves detailed information for a specific Auction Platform API Integration configuration identified by its unique UUID. It relates directly to the auction_platform_api_integrations table in the Prisma schema. This endpoint returns credentials, endpoint URLs, and metadata about the integration.\n\nThis endpoint is secured for admin roles due to sensitive information exposure and allows detailed view on configuration for management purposes.","path":"/auctionPlatform/admin/auctionPlatformApiIntegrations/{id}","method":"get","summary":"Retrieve detailed API integration configuration by ID","description":"Retrieve detailed information of a specific API integration configuration by its UUID. Useful for administration and configuration management.\n\nSecure access is enforced for users with admin privileges due to the sensitivity of API keys and integration details.\n\nThe operation returns full integration details including API key, URLs, and status.\n\nErrors occur if the ID does not exist or if the user lacks proper authorization.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the target API integration configuration","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed API integration configuration data","typeName":"IAuctionPlatformApiIntegrations"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation allows creation of a new Auction Platform API Integration configuration record. It operates on the auction_platform_api_integrations table, allowing authorized admins to add new third-party API integration credentials and settings.\n\nThe request must include mandatory fields such as name, API key, endpoint URL, and active status. The system will generate the UUID and timestamps upon creation.\n\nSuccessful response returns the created integration record details.\n\nAccess control is mandatory, limited to admins to prevent unauthorized API key storage.","path":"/auctionPlatform/admin/auctionPlatformApiIntegrations","method":"post","summary":"Create a new auction platform API integration configuration","description":"Create a new API integration configuration for the auction platform. Requires administrative privileges.\n\nThe request body must contain all required fields for creation including unique name, API key credentials, endpoint URL, and active flag.\n\nThis operation is critical for expanding platform connectivity to external services.\n\nEnsures secure and controlled addition of API configurations.","parameters":[],"requestBody":{"description":"Information required to create a new API integration configuration","typeName":"IAuctionPlatformApiIntegrations.ICreate"},"responseBody":{"description":"Created API integration configuration details","typeName":"IAuctionPlatformApiIntegrations"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"This operation updates an existing Auction Platform API Integration configuration identified by UUID. It relates to the auction_platform_api_integrations table and allows authorized administrators to modify API keys, endpoint URLs, and active status.\n\nRequest must provide updated fields, and if inactive, the system should ensure no active use occurs.\n\nThis endpoint provides controlled configuration management to maintain live API credentials accuracy.","path":"/auctionPlatform/admin/auctionPlatformApiIntegrations/{id}","method":"put","summary":"Update auction platform API integration configuration by ID","description":"Update an existing API integration configuration. Requires admin role authorization.\n\nSupports modification of API keys, endpoint URL, and the integration's active status.\n\nSafeguards for security and consistency are managed at the business logic layer.\n\nErrors result from invalid IDs or authorization failures.","parameters":[{"name":"id","description":"Unique identifier (UUID) of the API integration configuration to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated information for the API integration configuration","typeName":"IAuctionPlatformApiIntegrations.IUpdate"},"responseBody":{"description":"Updated API integration configuration details","typeName":"IAuctionPlatformApiIntegrations"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation deletes an auction platform API integration by its unique ID from the auction_platform_api_integrations table within the AuctionPlatform service. It removes the specified external API configuration (such as API keys and endpoint URLs) permanently, ensuring it no longer is active or used. Appropriate authorization is required to prevent accidental or malicious deletion. Deletion is a hard delete operation in this case, as the schema shows a nullable deleted_at column but this operation is designed to remove the record permanently.\n\nThe ID parameter uniquely identifies the API integration record to remove. The operation does not require a request body and returns no content upon success. The user must have admin role authorization to perform this sensitive operation.","path":"/auctionPlatform/admin/auctionPlatformApiIntegrations/{id}","method":"delete","summary":"Delete a specific auction platform API integration by ID","description":"This operation permanently removes the specified auction platform API integration record from the database using its unique ID. The API integration contains critical configuration data including API keys and endpoint URLs, so this operation should only be accessible to administrators. The requested resource is identified by the `id` path parameter which must be a valid UUID.\n\nAdministrators use this endpoint to deactivate and delete API integrations when they are no longer needed or have been compromised. Proper authentication and authorization checks are mandatory to secure this operation.\n\nThe operation performs a hard delete, removing the record fully without retaining a soft deletion flag. No request body is necessary, and no response body is returned to confirm deletion; HTTP status codes indicate success or failure.\n\nErrors such as invalid IDs or auth failures should be returned according to the API error handling policy.","parameters":[{"name":"id","description":"Unique identifier of the target auction platform API integration record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRole":"admin","authorizationType":null,"name":"erase"},{"specification":"This operation retrieves a paginated list of rate limit configurations from the auction_platform_rate_limits table associated with the AuctionPlatform service. Clients can search, filter, and paginate rate limit policies configured per system component to control API request frequency and prevent abuse.\n\nSearch parameters support filtering by component name and numeric limits. Response includes pagination info and a list of matching rate limit settings with component details and thresholds.\n\nThis operation is typically accessible to admin users managing system-wide rate limiting and monitoring rate limit configurations.","path":"/auctionPlatform/admin/auctionPlatformRateLimits","method":"patch","summary":"Search and retrieve auction platform rate limit configurations","description":"Retrieve a filtered, paginated list of auction platform rate limit configurations. These rate limits govern request frequency to components of the auction platform, such as API endpoints or services, to protect system stability and prevent abuse.\n\nThe patch request body contains search criteria including component name and maximum requests per time intervals. The response body contains a paginated list of rate limit configurations matching the criteria.\n\nOnly authorized admin users can access this endpoint due to sensitivity of rate limit configurations.\n\nErrors may occur if the request body is malformed or authorization fails.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for rate limit filtering","typeName":"IAuctionPlatformRateLimit.IRequest"},"responseBody":{"description":"Paginated list of auction platform rate limit configurations matching search criteria","typeName":"IPageIAuctionPlatformRateLimit"},"authorizationRole":"admin","authorizationType":null,"name":"index"},{"specification":"This operation retrieves detailed information about a specific auction platform rate limit policy from the auction_platform_rate_limits table given its unique ID. It returns full configuration details such as component names and maximum request thresholds per minute, hour, and day.\n\nThis endpoint supports administrators monitoring and verifying system rate limits. Authorization is restricted to admins.\n\nIf the specified ID does not correspond to an existing record, an appropriate error is returned.","path":"/auctionPlatform/admin/auctionPlatformRateLimits/{id}","method":"get","summary":"Retrieve an auction platform rate limit configuration by ID","description":"Retrieve detailed auction platform rate limit configuration by ID. The rate limit policies specify how many requests per unit time are allowed to components or services, protecting system stability.\n\nThis operation requires `id` path parameter identifying the target rate limit policy record by UUID.\n\nAdmin authorization is required.\n\nErrors include not found or unauthorized access.\n\nSuccessful response returns the rate limit record details including component name and thresholds.","parameters":[{"name":"id","description":"Unique identifier of the target auction platform rate limit record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Auction platform rate limit configuration details","typeName":"IAuctionPlatformRateLimit"},"authorizationRole":"admin","authorizationType":null,"name":"at"},{"specification":"This operation creates a new auction platform rate limit configuration record in the auction_platform_rate_limits table. It allows administrators to define request frequency limits for components and services in the auction platform to maintain system performance and prevent abuse.\n\nThe request body provides component name and maximum requests per minute, hour and day. Upon creation, the new rate limit configuration is stored with creation and update timestamps.\n\nAdmins must authenticate to use this endpoint. The response returns the newly created rate limit policy details.\n\nErrors can include validation failures or auth errors.","path":"/auctionPlatform/admin/auctionPlatformRateLimits","method":"post","summary":"Create a new auction platform rate limit configuration","description":"Create a new auction platform rate limit configuration. Components or services can have specified max requests per minute, hour, and day.\n\nRequest body must include component name and numeric request limits.\n\nAdmin role required for creation.\n\nResponse contains the created rate limit details including timestamps.\n\nValidation errors or permission errors are returned as needed.","parameters":[],"requestBody":{"description":"Information to create a new rate limit configuration","typeName":"IAuctionPlatformRateLimit.ICreate"},"responseBody":{"description":"Created auction platform rate limit configuration details","typeName":"IAuctionPlatformRateLimit"},"authorizationRole":"admin","authorizationType":null,"name":"create"},{"specification":"This operation updates the auctionPlatformRateLimits entity by its ID. It modifies the rate limiting policy defined for a specific component in the auction platform. It allows updating properties like the component name, maximum requests per minute, hour, day, and timestamps. This entity is critical for protecting the system from abuse and ensuring service stability by controlling the frequency of requests to various components. The update needs full authorization and validation to prevent misconfiguration that could result in service denial or overload.","description":"Update the specified auction platform rate limit record identified by its UUID. The operation accepts full updates to the rate limiting parameters such as maximum requests per minute, hour, and day for the specified component. \n\nSecurity considerations require that only authorized administrators can perform this operation to prevent misuse or accidental service disruptions. The API enforces data validation to ensure all request values comply with expected ranges.\n\nThe underlying database entity is defined in the auction_platform_rate_limits table with unique component_name constraints.\n\nSuccessful updates return the updated rate limit record with all relevant details including creation and last modified timestamps.\n\nErrors will be returned for invalid IDs, unauthorized access, or malformed requests.","summary":"Update an existing auction platform rate limit by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the rate limit record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for auctionPlatformRateLimits record","typeName":"IAuctionPlatformAuctionPlatformRateLimit.IUpdate"},"responseBody":{"description":"Updated auctionPlatformRateLimits record","typeName":"IAuctionPlatformAuctionPlatformRateLimit"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/auctionPlatform/admin/auctionPlatformRateLimits/{id}","method":"put"},{"specification":"This operation deletes the auctionPlatformRateLimits entity identified by its unique ID from the database permanently. It removes the specified rate limiting policy and ensures that the component will no longer have any request frequency constraints managed by this record. Deletion is irreversible and must be protected by administrator access controls to prevent accidental service impact or abuse.\n\nThis entity represents the rate limit policies configured for different components of the auction platform, stored in the auction_platform_rate_limits table.\n\nThe operation does not return any response body as the deletion is final.","description":"Permanently remove the auction platform rate limit with the specified ID. This action deletes the rate limit policy from the system, removing any restrictions on request frequency for the associated component. \n\nThis operation requires administrator privileges due to its potential impact on system stability.\n\nThere is no response body as the record is fully removed from the database.","summary":"Delete an auction platform rate limit by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the rate limit record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/auctionPlatform/admin/auctionPlatformRateLimits/{id}","method":"delete"},{"specification":"This operation searches and retrieves a paginated list of auction platform audit logs from the system. It supports filtering, searching, and sorting capabilities based on criteria such as user ID, action type, date ranges, and other metadata contained in the logs. Audit logs capture significant system operations, user actions, and state changes, providing an essential tool for monitoring, troubleshooting, and compliance auditing.\n\nThis API operates on the auction_platform_audit_logs table which stores user actions and system events with time stamps and optional user references.\n\nResponse includes audit log details such as action descriptions, user references, creation timestamps, and any associated metadata.","description":"Retrieve a filtered and paginated list of auction platform audit logs. This operation allows searching through the audit logs using provided criteria such as user ID, action type, and date ranges.\n\nAudit logs provide essential insight into critical system operations, user activities, and compliance monitoring.\n\nAuthorization ensures only authorized personnel with admin role can access comprehensive audit details.\n\nSupports pagination and sorting to handle large volumes of log data efficiently.","summary":"Search and retrieve auction platform audit logs","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for audit log filtering","typeName":"IAuctionPlatformAuctionPlatformAuditLog.IRequest"},"responseBody":{"description":"Paginated list of audit logs matching search criteria","typeName":"IPageIAuctionPlatformAuctionPlatformAuditLog"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/auctionPlatform/admin/auctionPlatformAuditLogs","method":"patch"},{"specification":"This operation retrieves details of a single auctionPlatformAuditLog record by its unique ID. It returns detailed information about the system event or user action stored in the audit log, including the action description, user reference, and timestamps.\n\nThe audit log entity is critical for monitoring system behavior, auditing user activities, and ensuring compliance with security policies.\n\nAccess to this operation requires administrative privileges to protect sensitive audit information.\n\nErrors are returned if the specified audit log ID does not exist or the requesting user lacks sufficient privileges.","description":"Retrieve detailed information for a specific auction platform audit log entry identified by its UUID. This operation returns comprehensive data including the performed action, user involved, detailed context, and creation timestamp.\n\nAccess is restricted to administrators to ensure data confidentiality and integrity.\n\nError handling includes responses for invalid or non-existent IDs.","summary":"Retrieve detailed auction platform audit log by ID","parameters":[{"name":"id","in":"path","description":"Unique identifier of the audit log entry","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed audit log entry information","typeName":"IAuctionPlatformAuctionPlatformAuditLog"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/auctionPlatform/admin/auctionPlatformAuditLogs/{id}","method":"get"},{"specification":"This operation performs a filtered search and paginated retrieval of auction platform guest users from the auction_platform_guests table in the Prisma schema. It supports searching guests by criteria such as email or nickname, and paginates the results with sorting capabilities. This facilitates browsing guest users with view-only access, aiding system administrators or authorized users to manage or review guest accounts effectively.","description":"Retrieve a filtered, paginated list of guest users registered in the auction platform system. Guest users are allowed limited view-only access without login credentials, and their records contain email, optional nickname, creation and update timestamps.\n\nThis operation supports advanced filtering based on email and nickname, with pagination and sorting to handle large datasets. Only users with appropriate reading permissions should invoke this endpoint to ensure guest data privacy and control.\n\nThe underlying data is maintained in the auction_platform_guests table as defined in the Prisma schema, leveraging its unique email constraint and full-text indexing on nickname to optimize search functionality. The returned data provides necessary fields for display and management while keeping sensitive login information out, as guests do not have credentials.\n\nTypical use cases include administrative consoles listing guest users, monitoring system usage by non-registered visitors, and enabling compliance reviews.","summary":"Search and retrieve a paginated list of auction platform guests","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering guest users","typeName":"IAuctionPlatformGuest.IRequest"},"responseBody":{"description":"Paginated list of auction platform guests matching search criteria","typeName":"IPageIAuctionPlatformGuest.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/auctionPlatform/admin/guests","method":"patch"},{"specification":"This operation retrieves detailed information about a specific guest user in the auction platform system from the auction_platform_guests table. Guests have limited view-only access and are primarily identified by their unique email and nickname.\n\nThe guests are identified by their unique UUID primary key. The API supports retrieval of a single guest record with its creation, update, and optional deletion timestamps.\n\nAccess should be controlled and limited to authorized roles such as administrators to protect guest information.","description":"Retrieve detailed information of a single auction platform guest user identified by their unique guestId. Guests have limited privileges and no authentication credentials. This operation provides all available guest record fields including email, nickname, creation and update timestamps for audit purposes.\n\nSecurity must ensure only authorized admins can access detailed guest information. Data returned contains no sensitive authentication data as guests are not registered members.\n\nThis operation accesses the auction_platform_guests table as reflected in the Prisma schema, matching the guestId path parameter to the primary key UUID of the guest record.","summary":"Retrieve detailed information of an auction platform guest by ID","parameters":[{"name":"guestId","description":"Unique identifier of the auction platform guest","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed guest information","typeName":"IAuctionPlatformGuest"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/auctionPlatform/admin/guests/{guestId}","method":"get"},{"specification":"This operation updates an existing guest user record in the auction platform system in the auction_platform_guests table. It allows modifying properties such as nickname and email, enabling administrators to maintain accurate and current guest user information.\n\nThe guest user is identified by their UUID primary key provided in the path parameter guestId. This secured update operation requires appropriate authorization roles to prevent unauthorized modifications.\n\nFields like deleted_at are not directly modifiable via this operation to ensure proper audit trails and compliance with soft deletion policies.\n\nValidation rules should enforce unique email constraints and proper email formatting as per the database schema.","description":"Update an existing auction platform guest's information identified by guestId. This operation supports modifying guest properties such as email and nickname while enforcing uniqueness constraints.\n\nOnly authorized users such as admins can perform this update. The operation does not allow modifying audit timestamps or soft deletion flags directly.\n\nThe underlying data entity is auction_platform_guests as modeled in the Prisma schema.","summary":"Update auction platform guest information","parameters":[{"name":"guestId","description":"Unique identifier of the auction platform guest","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated guest information","typeName":"IAuctionPlatformGuest.IUpdate"},"responseBody":{"description":"Updated guest information","typeName":"IAuctionPlatformGuest"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/auctionPlatform/admin/guests/{guestId}","method":"put"},{"specification":"This operation permanently deletes a guest user record from the auction platform guests table. It performs a hard delete as there is no soft delete management in this operation.\n\nThe guest user is identified solely by the UUID guestId path parameter. This destructive operation requires strict admin authorization and should be used cautiously as deleted records cannot be recovered.\n\nDeleting guest records may be necessary for compliance or data retention policies, or to remove obsolete guest accounts.","description":"Permanently remove an auction platform guest user identified by guestId from the database. This operation is irreversible and will delete all associated guest data.\n\nOnly authorized admins should execute this action. Proper logging and audit trails should accompany this operation to ensure compliance.\n\nThis operation targets the auction_platform_guests table as defined in the Prisma schema and matches guestId as the UUID primary key.","summary":"Delete an auction platform guest user by ID","parameters":[{"name":"guestId","description":"Unique identifier of the auction platform guest","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/auctionPlatform/admin/guests/{guestId}","method":"delete"},{"specification":"This operation retrieves a paginated and searchable list of auction platform members, also known as team leaders or bidders, allowing for advanced filtering, sorting, and pagination functionality. It operates on the 'auction_platform_members' table from the Prisma schema, which stores registered members authorized to bid in auctions. Users can search by email or nickname and receive summaries appropriate for listings.\n\nThis operation supports authenticated users with the 'member' role, enabling team leaders to query member lists. The response includes summary information with essential member attributes, excluding sensitive data such as password hashes.\n\nThe API supports pagination and filtering parameters for efficient browsing and management of member data, but does not allow creation or modification of members through this endpoint.","path":"/auctionPlatform/member/members","method":"patch","summary":"Search and retrieve a filtered, paginated list of auction platform members","description":"Retrieve a filtered and paginated list of registered auction platform members (team leaders) with search and sorting support. This endpoint allows authenticated users to obtain summaries of member information relevant to auction participation.\n\nThis operation integrates with the 'auction_platform_members' Prisma table, utilizing fields such as email and nickname for filtering and display.\n\nSecurity is enforced by requiring authentication with role 'member'. Returned data excludes sensitive information like password hashes.\n\nThis operation is useful for UI components listing team leaders and supports pagination controls to handle large datasets.\n\nError handling includes validation of request parameters and appropriate response for unauthorized access.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for member filtering","typeName":"IAuctionPlatformMember.IRequest"},"responseBody":{"description":"Paginated list of member summary information matching search criteria","typeName":"IPageIAuctionPlatformMember.ISummary"},"authorizationType":null,"authorizationRole":"member","name":"index"},{"specification":"This operation retrieves detailed information of a specific auction platform member identified by memberId. It operates on the 'auction_platform_members' table from the Prisma schema, which stores registered team leaders authorized to bid.\n\nThe endpoint returns comprehensive member data except sensitive fields such as password_hash. It supports authenticated access for users with the 'member' role.\n\nPath parameters enforce correct UUID format for member identification. The operation facilitates detailed member profile viewing for management or client UI.\n\nError scenarios include member not found and unauthorized access handled appropriately.","path":"/auctionPlatform/member/members/{memberId}","method":"get","summary":"Retrieve detailed information of a specific auction platform member","description":"Retrieves full details about a specific registered member (team leader) using a unique member ID.\n\nThis operation queries the 'auction_platform_members' Prisma table, pulling fields such as email, nickname, and audit timestamps.\n\nAuthentication is required with role 'member'.\n\nErrors are returned if the member does not exist or if access is unauthorized.\n\nUseful for detailed member profile views in client applications.","parameters":[{"name":"memberId","description":"Unique identifier of the target member","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed member information","typeName":"IAuctionPlatformMember"},"authorizationType":null,"authorizationRole":"member","name":"at"},{"specification":"This operation updates information of an existing auction platform member identified by memberId. It operates on the 'auction_platform_members' table and supports modification of mutable member fields such as nickname.\n\nThe endpoint requires authentication with role 'member' and validates the memberId path parameter as a UUID.\n\nRequest body follows IAuctionPlatformMember.IUpdate schema to allow partial updates. Responses include the updated member data.\n\nError handling includes validation failures, unauthorized access, and non-existent member cases.","path":"/auctionPlatform/member/members/{memberId}","method":"put","summary":"Update a specific auction platform member's information","description":"Update mutable fields of a specific registered member (team leader) identified by memberId.\n\nThis operation updates the 'auction_platform_members' Prisma table fields such as nickname.\n\nAuthentication with role 'member' is required.\n\nIncludes validation of UUID memberId path parameter and input data.\n\nUpdates result in returning the modified member info.\n\nErrors include access denied and invalid member ID.\n\nUseful for profile update forms or administrative tools.","parameters":[{"name":"memberId","description":"Unique identifier of the target member","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated member data for modification","typeName":"IAuctionPlatformMember.IUpdate"},"responseBody":{"description":"Updated member information","typeName":"IAuctionPlatformMember"},"authorizationType":null,"authorizationRole":"member","name":"update"},{"specification":"This operation permanently deletes a specific auction platform member identified by memberId from the system. It operates on the 'auction_platform_members' table, which stores registered team leaders.\n\nAuthentication is required with role 'member'. The memberId is validated as UUID.\n\nThe deletion operation performs a hard delete, removing all member data and associations permanently.\n\nError handling covers cases where the member does not exist or the user is unauthorized.\n\nUse with caution as members cannot be restored after deletion.","path":"/auctionPlatform/member/members/{memberId}","method":"delete","summary":"Delete a specific auction platform member","description":"Permanently removes the specified member (team leader) from the auction platform database.\n\nThis operation deletes the member record in the 'auction_platform_members' Prisma table.\n\nAuthentication with role 'member' is required.\n\nDeletes are hard and irreversible; all associated data is removed.\n\nErrors are returned if the member ID is invalid or not found.\n\nIntended for administrative or self-service account deletion scenarios.","parameters":[{"name":"memberId","description":"Unique identifier of the target member","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"member","name":"erase"},{"specification":"This operation retrieves a filtered and paginated list of administrator accounts in the auction platform system. It allows searching and filtering of admin users based on fields such as email, nickname, creation date, and update timestamp. This operation corresponds to the auction_platform_admins table in the Prisma schema, which stores administrative user identities, including secure password hashes and auditing timestamps. The results support pagination and sorting to facilitate efficient admin user management in backend tools and consoles.","description":"Retrieve a filtered and paginated list of administrator user accounts. The list supports search criteria such as email, nickname, and creation/update dates, enabling efficient management of admins by authorized users.\n\nSecurity considerations ensure that only authenticated users with admin role access this endpoint. Returned admin data excludes sensitive password hashes to maintain security.\n\nThis operation interfaces with the auction_platform_admins table in the database and returns summarized data suitable for user management views.\n\nFor detailed administration, use the specific admin retrieval endpoint by ID. Pagination parameters control response size for performance optimization.","summary":"Search and retrieve a paginated list of admin users","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for admin user filtering","typeName":"IAuctionPlatformAdmin.IRequest"},"responseBody":{"description":"Paginated list of administrators matching search criteria","typeName":"IPageIAuctionPlatformAdmin.ISummary"},"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/admins","method":"patch","name":"index","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves detailed information of a specific administrator user identified by adminId. It fetches data from the auction_platform_admins table, which stores admin emails, hashed passwords, nicknames, and audit timestamps.\n\nThis endpoint requires admin-level authorization to ensure data confidentiality and integrity. The password hash is returned but should be handled securely by the client.\n\nThe adminId is a UUID string identifying the target admin user record.","description":"Retrieve detailed information of a specific administrator user by their unique ID. This includes email, nickname, and audit timestamps.\n\nOnly authenticated admin users may access this endpoint. The data is retrieved from the auction_platform_admins table.\n\nThis operation supports administrative interfaces requiring full admin account details for management or audit purposes.","summary":"Get detailed information of a specific admin user","parameters":[{"name":"adminId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the target admin"}],"requestBody":null,"responseBody":{"description":"Admin user detailed information","typeName":"IAuctionPlatformAdmin"},"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/admins/{adminId}","method":"get","name":"at","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates an existing administrator user record identified by adminId. It allows modifying editable fields such as nickname and potentially the password hash.\n\nThis operation interfaces with the auction_platform_admins table which stores admin account credentials and profile data.\n\nOnly authorized admin users may perform updates to ensure security. The adminId path parameter is the primary key UUID of the admin record to update.","description":"Update details of an existing administrator user by their unique ID. Supports modification of profile fields including nickname and password hash.\n\nAdmin-level authentication is mandatory. The operation returns the updated admin record.\n\nEnsure secure handling of password hashes during updates to maintain data protection.","summary":"Update an admin user's information","parameters":[{"name":"adminId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the admin to update"}],"requestBody":{"description":"Admin user update information","typeName":"IAuctionPlatformAdmin.IUpdate"},"responseBody":{"description":"Updated admin user information","typeName":"IAuctionPlatformAdmin"},"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/admins/{adminId}","method":"put","name":"update","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently deletes an administrator user record identified by adminId. It completely removes the admin data from the auction_platform_admins table without using soft delete.\n\nOnly authorized admin users may perform this operation for security and auditing reasons.\n\nThe adminId path parameter is the UUID of the admin record to be deleted. No response body is returned upon success.","description":"Delete an administrator user permanently from the system by their unique ID.\n\nThis operation removes all associated admin user data from the database.\n\nOnly admins with appropriate permissions are authorized to execute this request.\n\nNo content is returned after deletion.","summary":"Delete an admin user","parameters":[{"name":"adminId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the admin to delete"}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/admins/{adminId}","method":"delete","name":"erase","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a filtered and paginated list of auction rooms, supporting complex search, filtering, sorting, and pagination functionalities. It operates on the auction_platform_auction_rooms table, which stores information about auction rooms managed per streamer, including schedule data and various auction lifecycle statuses. The search can be based on streamer name, status, start and end times, and other relevant fields to facilitate effective auction room management.","description":"Retrieve a filtered, paginated list of auction rooms from the system. This operation allows clients to perform complex queries including filtering by streamer name, auction status, and date ranges for scheduled auctions. Pagination parameters support efficient data retrieval and sorting options allow ordering by start time, status, or update timestamps.\n\nSecurity is enforced through role-based access control ensuring only authorized users, such as administrators, can access detailed auction room data.\n\nThis operation corresponds to the auction_platform_auction_rooms table in the Prisma schema, utilizing all pertinent fields including streamer_name, status, start_time, and end_time. The response consists of summary information optimized for list views. Error handling includes validation of filter parameters and proper pagination boundaries.","summary":"Search and list auction rooms with filtering, sorting, and pagination","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for filtering auction rooms","typeName":"IAuctionPlatformAuctionRoom.IRequest"},"responseBody":{"description":"Paginated list of auction room summary data matching search criteria","typeName":"IPageIAuctionPlatformAuctionRoom.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index","path":"/auctionPlatform/admin/auctionRooms","method":"patch"},{"specification":"This operation retrieves detailed information about a specific auction room identified by its UUID. It accesses the auction_platform_auction_rooms table, returning all relevant details such as the streamer name, schedule with start and optional end times, status, and timestamps.\n\nThe operation is intended for administrators or authorized users who require full details of a particular auction room. It includes proper validations for the UUID parameter and returns the full entity details if found.","description":"Retrieve detailed information of a specific auction room by its unique identifier. The auction room represents a scheduled live auction managed per streamer with metadata including start and end times, status, and audit timestamps.\n\nSecurity is enforced via role-based authentication ensuring that only users with appropriate admin privileges can access this information.\n\nThe response includes all fields of the auction_platform_auction_rooms table for the specified auction room ID. If the auction room is not found, a suitable error response is expected.","summary":"Get details of a specific auction room","parameters":[{"name":"auctionRoomId","description":"Unique identifier (UUID) of the target auction room","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed auction room information","typeName":"IAuctionPlatformAuctionRoom"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/auctionPlatform/admin/auctionRooms/{auctionRoomId}","method":"get"},{"specification":"This operation creates a new auction room entry in the system. It accepts details such as streamer name, scheduled start time (mandatory), optional end time, and initial status. It operates on the auction_platform_auction_rooms table, ensuring that streamer names and scheduled start times are unique to avoid conflicts.\n\nInput data must include valid timestamps in ISO 8601 format and a status string reflecting the current state of the auction room (e.g., open, closed, pending).\n\nSecurity considerations mandate that only administrators can create new auction rooms. The response returns the newly created auction room entity with all its details.","description":"Create a new auction room that represents a scheduled live auction event. Required fields include streamer name, start time, optional end time, and status.\n\nOnly users with the admin role are authorized to perform this operation.\n\nThe operation validates uniqueness of streamer name with the scheduled start time and proper ISO date-time formats for temporal fields.\n\nUpon successful creation, the full auction room entity is returned.","summary":"Create a new auction room","parameters":[],"requestBody":{"description":"Details required for creating an auction room","typeName":"IAuctionPlatformAuctionRoom.ICreate"},"responseBody":{"description":"Created auction room detailed information","typeName":"IAuctionPlatformAuctionRoom"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/auctionPlatform/admin/auctionRooms","method":"post"},{"specification":"This operation updates an existing auction room identified by its UUID. It allows modifications to fields such as streamer name, start time, optional end time, and current status. The operation validates input data for uniqueness constraints and correct temporal formats.\n\nAssociated with the auction_platform_auction_rooms table, this endpoint ensures partial or full updates to an auction room entry and returns the updated entity upon success.\n\nSecurity enforces that only authorized admins can modify auction rooms. If the specified auction room does not exist, an appropriate error is returned.","description":"Update an existing auction room identified by its unique UUID. Input data may include streamer name, schedule start time, optional end time, and status.\n\nAuthorization is restricted to admin users.\n\nThe operation validates the uniqueness of streamer name and start time combination, input formats, and enforces proper update semantics.\n\nThe updated auction room entity is returned on success.","summary":"Update an existing auction room","parameters":[{"name":"auctionRoomId","description":"Unique identifier (UUID) of the auction room to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for updating an auction room","typeName":"IAuctionPlatformAuctionRoom.IUpdate"},"responseBody":{"description":"Updated auction room detailed information","typeName":"IAuctionPlatformAuctionRoom"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/auctionPlatform/admin/auctionRooms/{auctionRoomId}","method":"put"},{"specification":"This operation permanently deletes a specific auction room from the auction_platform_auction_rooms table by the given UUID identifier. The auction_platform_auction_rooms entity records auction room metadata including streamer name, scheduled start and optional end times, status, and audit timestamps. This hard delete operation removes the database record fully and cannot be undone. Access control restricts this operation to users with the 'admin' role to ensure only authorized personnel may delete auction rooms.","path":"/auctionPlatform/admin/auctionRooms/{auctionRoomId}","method":"delete","summary":"Delete an auction room by its unique ID","description":"Permanently delete an auction room identified by auctionRoomId from the system. The auction room holds metadata such as streamer name, schedule, and status.\n\nThis deletion permanently removes the record from the database along with any dependent data due to cascading rules.\n\nOnly authorized admin users may perform this operation.\n\nNo request body is needed as the deletion is identified solely by the path parameter.\n\nNo content is returned upon successful deletion.","parameters":[{"name":"auctionRoomId","description":"Unique identifier of the auction room to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"This operation retrieves a paginated list of auction candidates for display or search purposes. It accesses the auction_platform_auction_candidates table which contains registered users marked as auction candidates with profile data and optional seasonal statistics. The request body allows complex filtering, sorting, and pagination passed through IAuctionPlatformAuctionCandidates.IRequest. The response returns a paginated list encapsulated in IPageIAuctionPlatformAuctionCandidates.ISummary to optimize list rendering. This operation is authorized for authenticated members with role 'member'.","path":"/auctionPlatform/member/auctionCandidates","method":"patch","summary":"Search and retrieve paginated auction candidates list","description":"Retrieve a paginated, filtered list of auction candidates registered in the system. This supports advanced queries including search and sorting, leveraging request body parameters.\n\nAccess is restricted to authenticated members with the 'member' role to maintain data privacy.\n\nThe response includes summary information about each candidate optimized for listing.\n\nNo path parameters are required.","parameters":[],"requestBody":{"description":"Filter, search, and pagination parameters for auction candidates","typeName":"IAuctionPlatformAuctionCandidates.IRequest"},"responseBody":{"description":"Paginated auction candidate summaries matching criteria","typeName":"IPageIAuctionPlatformAuctionCandidates.ISummary"},"authorizationType":null,"authorizationRole":"member","name":"index"},{"specification":"This operation retrieves detailed information of a specific auction candidate identified by auctionCandidateId from the auction_platform_auction_candidates table. The entity contains user reference, nickname, seasonal stats, and timestamps. Access control requires authenticated members with role 'member'. There is no request body. The response returns full auction candidate details for UI presentation.","path":"/auctionPlatform/member/auctionCandidates/{auctionCandidateId}","method":"get","summary":"Retrieve auction candidate details by ID","description":"Get detailed auction candidate information by unique ID auctionCandidateId provided as path parameter.\n\nOnly authenticated members with role 'member' may access this data.\n\nThe response returns the full detailed candidate entity.\n\nNo request body is required.","parameters":[{"name":"auctionCandidateId","description":"Unique identifier of the auction candidate","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed auction candidate information","typeName":"IAuctionPlatformAuctionCandidate"},"authorizationType":null,"authorizationRole":"member","name":"at"},{"specification":"This operation creates a new auction candidate by registering a member user as a candidate for auctions. The auction_platform_auction_candidates table stores candidate info referencing member user ID and profile data. This operation requires the user to hold 'member' role authorization. The request body follows IAuctionPlatformAuctionCandidate.ICreate schema and the response returns the newly created auction candidate record.","path":"/auctionPlatform/member/auctionCandidates","method":"post","summary":"Create a new auction candidate entry","description":"Register an existing member as a new auction candidate with required profile data.\n\nOnly authenticated members may perform this creation.\n\nThe request body must include all mandatory candidate creation properties.\n\nThe response returns the newly created candidate entity with all details.\n\nNo path parameters are needed.","parameters":[],"requestBody":{"description":"Data required to create a new auction candidate","typeName":"IAuctionPlatformAuctionCandidate.ICreate"},"responseBody":{"description":"Created auction candidate record","typeName":"IAuctionPlatformAuctionCandidate"},"authorizationType":null,"authorizationRole":"member","name":"create"},{"specification":"This operation updates the details of a specific auction candidate. It allows modification of the auction candidate's record identified by the auctionCandidateId path parameter. According to the Prisma schema for auction_platform_auction_candidates, the candidate entity includes fields such as user_id, nickname, season_stats, created_at, updated_at, and deleted_at. The API expects a request body adhering to the IAuctionPlatformAuctionCandidate.IUpdate schema, which typically includes updatable fields like nickname and season_stats, as user_id is usually immutable after creation. This operation requires administrative or authorized user roles to ensure proper control over auction candidates. The auction_candidate_id path parameter uniquely identifies the candidate being updated, and the response returns the updated auction candidate record. Proper validation of the input data ensures the consistency and integrity of auction candidate information.","description":"Update the information of an existing auction candidate identified by auctionCandidateId. This operation modifies properties such as nickname and season statistics, ensuring that the candidate data remains consistent and up-to-date.\n\nOnly authorized users with appropriate permissions can perform this update. The unique auctionCandidateId identifies which candidate record to modify.\n\nThe operation interfaces directly with the auction_platform_auction_candidates table, respecting all schema constraints and relations. Updated timestamp is managed by the system to reflect changes.\n\nValidation includes checking uniqueness of nickname, proper JSON formatting of stats if supplied, and prevention of updates to immutable fields.\n\nThe response returns the fully updated auction candidate entity after successful modification.","summary":"Update an auction candidate's details","parameters":[{"name":"auctionCandidateId","description":"Unique identifier of the auction candidate to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Information required to update an auction candidate","typeName":"IAuctionPlatformAuctionCandidate.IUpdate"},"responseBody":{"description":"Updated auction candidate entity","typeName":"IAuctionPlatformAuctionCandidate"},"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/auctionCandidates/{auctionCandidateId}","method":"put","name":"update","authorizationRoles":["admin"]},{"specification":"This operation fully deletes an auction candidate record identified by auctionCandidateId from the database. The auction_platform_auction_candidates table supports soft deletion via the deleted_at timestamp. This operation performs a hard delete, permanently removing the candidate record from the system. This endpoint requires an admin role due to potential irrecoverable data loss and audit implications. The unique auctionCandidateId path parameter identifies the candidate to delete. No request body is required, and the response does not return any content. Callers should ensure related bidding or auction data is handled appropriately before deletion to maintain referential integrity.","description":"Permanently remove an auction candidate from the system by specifying their unique auctionCandidateId.\n\nThis operation performs a hard delete; the record is removed entirely and cannot be recovered.\n\nOnly users with administrative privileges may perform this operation to prevent accidental data loss.\n\nThe system ensures that all cascading relationships and dependencies are handled appropriately during deletion.\n\nNo response content is returned upon successful deletion.","summary":"Delete an auction candidate permanently","parameters":[{"name":"auctionCandidateId","description":"Unique identifier of the auction candidate to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/auctionCandidates/{auctionCandidateId}","method":"delete","name":"erase","authorizationRoles":["admin"]},{"specification":"This operation retrieves a filtered and paginated list of team leaders authorized to participate in auctions. It supports complex queries including filtering, searching, sorting, and pagination of the auction_platform_team_leaders table. Filters may include available_points, member nickname, and other relevant criteria. The request body follows the IAuctionPlatformTeamLeader.IRequest schema defining search parameters. The response returns paginated summaries of team leaders in the IAuctionPlatformTeamLeader.ISummary format. This endpoint typically requires user authentication to respect privacy and data security. It helps admin or members monitor team leader point balances and participation status.","description":"Retrieve a paginated, filtered list of team leaders participating in auctions. Supports complex search and sorting parameters.\n\nThe results include summary details to aid in managing point allocations and auction participation.\n\nThis operation reads from the auction_platform_team_leaders table and returns a paginated result set.\n\nOnly authenticated users with valid roles may access this data.\n\nFiltering on available points and member nicknames is supported.","summary":"Search and list auction team leaders","parameters":[],"requestBody":{"description":"Search criteria and pagination options for team leaders","typeName":"IAuctionPlatformTeamLeader.IRequest"},"responseBody":{"description":"Paginated list of team leader summaries matching search criteria","typeName":"IPageIAuctionPlatformTeamLeader.ISummary"},"authorizationType":null,"authorizationRole":"member","path":"/auctionPlatform/member/teamLeaders","method":"patch","name":"index","authorizationRoles":["member"]},{"specification":"This operation retrieves detailed information about a single team leader identified by teamLeaderId. It fetches the full team leader record from the auction_platform_team_leaders table, including available points, related member information, and timestamps. The teamLeaderId path parameter uniquely identifies the target team leader. Typically accessible to authenticated users to review their own or others' team leader profiles. The response includes the IAuctionPlatformTeamLeader entity with comprehensive data necessary for client display or administrative review.","description":"Retrieve detailed information of a specific team leader by their unique identifier teamLeaderId.\n\nThis operation returns all relevant data including current points and membership linkage.\n\nThe teamLeaderId path parameter identifies which team leader to fetch.\n\nAccess is restricted to authenticated users based on role/ownership.\n\nThe response contains the full team leader record as defined in the Prisma schema.","summary":"Retrieve a specific team leader's details","parameters":[{"name":"teamLeaderId","description":"Unique identifier of the team leader to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed team leader information","typeName":"IAuctionPlatformTeamLeader"},"authorizationType":null,"authorizationRole":"member","path":"/auctionPlatform/member/teamLeaders/{teamLeaderId}","method":"get","name":"at","authorizationRoles":["member"]},{"specification":"This operation allows creating a new team leader record in the auction platform system. The team leader entity represents authenticated members authorized to participate in auctions by bidding with allocated points. Creating a team leader involves specifying the member user ID to associate the team leader with the registered member profile. The system will allocate initial auction points and track creation timestamps accordingly. Authorization ensures only administrative roles can create team leaders.","path":"/auctionPlatform/admin/teamLeaders","method":"post","summary":"Create a new auction team leader associated with a member account","description":"Create a new auction team leader, representing an authenticated member user authorized to participate in auctions by bidding. The operation requires a member ID that associates the team leader to a user account in the system.\n\nThis API enforces role-based access controls, allowing only users with the 'admin' role to perform this action.\n\nThe team leader record holds data including point balances used for bidding and timestamps for creation and updates.\n\nRelated operations include updating or deleting team leader records.\n\nOn success, the created team leader entity is returned, including the assigned available points and member association.\n\nErrors may occur if the member ID is invalid or already assigned as a team leader.","parameters":[],"requestBody":{"description":"Data required to create a team leader including member association","typeName":"IAuctionPlatformTeamLeaders.ICreate"},"responseBody":{"description":"Created team leader entity returned with associated member information","typeName":"IAuctionPlatformTeamLeaders"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"This operation updates an existing auction team leader record identified by the teamLeaderId. It modifies properties such as available points or other mutable fields defined in the update DTO. This enables management of point balances and team leader info.\n\nIt performs validation on the teamLeaderId parameter and ensures only authorized roles like admins are allowed to perform updates.\n\nThe updated team leader entity is returned after applying changes. Errors are returned if the teamLeaderId is invalid or the update fails.","path":"/auctionPlatform/admin/teamLeaders/{teamLeaderId}","method":"put","summary":"Update auction team leader details by ID","description":"Update an auction team leader by ID. This operation updates mutable fields such as available points, enabling adjustment of bidding power.\n\nAuthorization is restricted to administrators.\n\nThe operation validates the target team leader ID and returns the updated entity.\n\nRelated to create and delete operations on team leaders.\n\nErrors include invalid ID or data validation failures.","parameters":[{"name":"teamLeaderId","description":"Unique identifier of the target team leader","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data used to update the team leader's properties","typeName":"IAuctionPlatformTeamLeaders.IUpdate"},"responseBody":{"description":"Updated team leader entity information","typeName":"IAuctionPlatformTeamLeaders"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation permanently removes an auction team leader record specified by the teamLeaderId. It performs a hard delete as no soft delete column is specified for this entity.\n\nAuthorization is limited to administrative roles.\n\nNo response body is returned upon successful deletion.\n\nErrors may occur if the teamLeaderId is not found or deletion fails due to constraints.\n\nUse with caution as deletion removes all related bid and point balance associations.","path":"/auctionPlatform/admin/teamLeaders/{teamLeaderId}","method":"delete","summary":"Permanently delete an auction team leader by ID","description":"Delete an auction team leader by ID. This operation performs a permanent removal of the team leader record and associated data.\n\nAuthorization is required (admin roles).\n\nNo response is returned upon success.\n\nRelated operations include create and update team leader endpoints.\n\nErrors include invalid ID and deletion violations.","parameters":[{"name":"teamLeaderId","description":"Unique identifier of the target team leader","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase"},{"specification":"Search and retrieve a filtered, paginated list of auction bids across auction rooms. This operation supports complex query parameters including filtering by auction room, team leader, bid time, and winning status.\n\nThe result is paginated to handle large datasets efficiently.\n\nAuthorization allows any authenticated member user to query bids.\n\nErrors occur for invalid query parameters or unauthorized access.","path":"/auctionPlatform/member/bids","method":"patch","summary":"Search and list paginated auction bids with filters","description":"Retrieve a paginated list of auction bids applying filtering, sorting, and pagination as per request criteria.\n\nSupports filtering by auction room, candidate, team leader, time ranges, and winning status.\n\nThis operation returns summary information including bid amounts, times, and bidder details.\n\nAuthorization requires authenticated member access.\n\nRelated operations include single bid retrieval and bid creation (via chat/sponsorship).\n\nErrors may include invalid filters or access denial.","parameters":[],"requestBody":{"description":"Bid filtering and pagination criteria","typeName":"IAuctionPlatformBids.IRequest"},"responseBody":{"description":"Paginated list of auction bid summaries matching criteria","typeName":"IPageIAuctionPlatformBids.ISummary"},"authorizationType":null,"authorizationRole":"member","name":"index"},{"specification":"This operation retrieves detailed information about a specific bid record from the auction platform's 'auction_platform_bids' table. It allows clients to obtain all relevant data for the bid identified by its unique UUID 'bidId', including the auction room association, candidate, team leader, bid points, timestamps, and whether the bid is currently winning. This endpoint is designed for authenticated users to view bid information.","description":"Retrieve detailed information for a specific bid by its unique identifier from the auction system. This includes details such as the auction room the bid belongs to, the auction candidate targeted, the bidding team leader, the number of points bid, the bid timestamp, and the winning status.\n\nThe operation requires authentication and is typically accessible to authorized users like team leaders and administrators. It allows monitoring and analyzing individual bid records.\n\nThis operation directly maps to the 'auction_platform_bids' table in the Prisma schema, utilizing the unique bid identifier. It returns a comprehensive set of fields representing the bid state.\n\nThe endpoint returns the bid data or a not found error if the specified bid does not exist. No request body is required. Path parameter 'bidId' must be a valid UUID representing the bid's unique id.","summary":"Retrieve a bid by its unique ID","parameters":[{"name":"bidId","description":"Unique identifier of the bid to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed bid information","typeName":"IAuctionPlatformBid"},"authorizationType":null,"authorizationRole":"member","name":"at","path":"/auctionPlatform/member/bids/{bidId}","method":"get"},{"specification":"This operation allows authenticated users to create a new bid record in the auction platform. It inserts a new entry into the 'auction_platform_bids' table with fields such as auction room id, auction candidate id, team leader id, bid points, and bid timestamp. The bid must be validated externally to ensure points sufficiency and business rules before calling this API.\n\nThis endpoint supports creation of bids reflecting user participation in live auctions. It ensures data integrity by requiring all necessary bid information in the request body. The created bid record is returned upon success.\n\nThe request body is expected to conform to the 'IAuctionPlatformBid.ICreate' schema, corresponding to the database fields exclusive of system-generated fields like 'id', 'created_at', and 'updated_at'.\n\nResponse returns the full bid entity including generated fields like 'id' and timestamps.","description":"Create a new auction bid record for a team leader bidding on an auction candidate within a specific auction room. The request must include the auction room ID, candidate ID, team leader ID, bid points, and the bid time.\n\nThis operation is restricted to authenticated users authorized to participate in bidding. Server-side business logic should validate bidding rules such as point availability and bid validity.\n\nUpon success, the created bid record with all associated fields is returned.\n\nThe API expects a JSON request body conforming to the IAuctionPlatformBid.ICreate interface, without requiring fields generated by the system like bid ID or timestamps.","summary":"Create a new auction bid","parameters":[],"requestBody":{"description":"Bid creation data including auction room, candidate, team leader, points, and time","typeName":"IAuctionPlatformBid.ICreate"},"responseBody":{"description":"Created bid record with full details","typeName":"IAuctionPlatformBid"},"authorizationType":null,"authorizationRole":"member","name":"create","path":"/auctionPlatform/member/bids","method":"post"},{"specification":"This operation updates an existing bid record identified by its unique ID with new data. The update may modify fields such as auction room ID, auction candidate ID, team leader ID, bid points, bid timestamp, and winning status.\n\nThis endpoint corresponds to the 'auction_platform_bids' table and is intended for authorized users to update bid details. The request body must conform to the IAuctionPlatformBid.IUpdate schema, which includes fields permissible for updates except system-managed fields like 'id', 'created_at', and 'updated_at'.\n\nThe operation verifies the existence of the bid by 'bidId' path parameter and applies the update, returning the updated bid entity.\n\nThe response reflects the current state of the bid after modification.","description":"Update details of an existing bid identified by its unique ID. This allows changing bid attributes including auction room, candidate, team leader, bid point amount, timestamp, and whether it is the winning bid.\n\nOnly authorized users may update bids. Proper validation of input data is required.\n\nThe request body must comply with IAuctionPlatformBid.IUpdate interface. No partial updates are implied; the full update object is expected.\n\nResponse returns the updated bid record reflecting applied changes.","summary":"Update a bid by its unique ID","parameters":[{"name":"bidId","description":"Unique identifier of the bid to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Bid update data conforming to IAuctionPlatformBid.IUpdate","typeName":"IAuctionPlatformBid.IUpdate"},"responseBody":{"description":"Updated bid record information","typeName":"IAuctionPlatformBid"},"authorizationType":null,"authorizationRole":"member","name":"update","path":"/auctionPlatform/member/bids/{bidId}","method":"put"},{"specification":"This operation deletes a bid record identified by its unique UUID from the auction system. As the 'auction_platform_bids' table does not define soft deletion columns, this deletion is a hard delete removing the record permanently.\n\nThe operation requires the 'bidId' path parameter to specify the target bid. Authorization is required to ensure that only permitted users or administrators can perform deletions.\n\nNo request body or response body is involved. Successful execution returns an empty success status.\n\nDeleting bids helps maintain auction integrity and cleanup obsolete or erroneous entries.","description":"Permanently remove an existing bid record identified by its unique ID from the auction platform database.\n\nThis operation performs a hard delete as no soft deletion mechanism is defined. The bid and all its data will be irreversibly deleted.\n\nOnly authorized users or administrators can invoke this operation.\n\nNo request body is required. No response body is returned after successful deletion.\n\nAttempting to delete a non-existent bid should result in an appropriate error response.","summary":"Delete a bid by its unique ID","parameters":[{"name":"bidId","description":"Unique identifier of the bid to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"member","name":"erase","path":"/auctionPlatform/member/bids/{bidId}","method":"delete"},{"specification":"This operation retrieves a paginated list of auction platform point balance records, allowing complex filtering, sorting, and pagination. It operates on the auction_platform_point_balances table from the Prisma schema. This endpoint enables querying point allocation and usage details for team leaders within specific auction rooms, supporting detailed point management views.","path":"/auctionPlatform/admin/pointBalances","method":"patch","summary":"Search and retrieve a paginated list of auction platform point balances","description":"Retrieve a filtered and paginated list of point balance records from the auction platform. This operation supports searching by team leader, auction room, points allocated, and points used.\n\nSecurity considerations require that this endpoint is accessible only by users with admin privileges due to sensitive point management data.\n\nThe auction_platform_point_balances table stores allocation and usage of auction points for team leaders per auction room. Each record tracks total allocated points and points spent.\n\nValidation ensures pagination parameters are respected. The response includes pagination metadata and a list of point balance summaries.","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for point balances filtering","typeName":"IAuctionPlatformPointBalances.IRequest"},"responseBody":{"description":"Paginated list of auction platform point balance summaries matching search criteria","typeName":"IPageIAuctionPlatformPointBalances.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"index"},{"specification":"This operation retrieves detailed information of a specific auction platform point balance record by its unique ID, referencing the auction_platform_point_balances table in the Prisma schema. It provides access to allocation and spending data for a particular team leader in a given auction room.","path":"/auctionPlatform/admin/pointBalances/{pointBalanceId}","method":"get","summary":"Retrieve detailed auction platform point balance information by ID","description":"Retrieve detailed auction platform point balance information by its unique identifier. The record includes points allocated, points used, and associations to the team leader and auction room.\n\nSecurity requires admin role due to sensitivity of point balance management.\n\nThe operation validates the format of the pointBalanceId parameter and returns the full entity representation.","parameters":[{"name":"pointBalanceId","description":"Unique identifier of the target point balance record","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the auction platform point balance record","typeName":"IAuctionPlatformPointBalance"},"authorizationType":null,"authorizationRole":"admin","name":"at"},{"specification":"This operation creates a new auction platform point balance record, representing allocation of auction points for a team leader within an auction room. It writes to the auction_platform_point_balances table in the Prisma schema.\n\nThe operation requires data including team leader ID, auction room ID, points allocated, and points used.\n\nSecurity is restricted to admin users who manage point allocations.\n\nValidation includes checking referential integrity with team leader and auction room records and ensuring point values are non-negative.","path":"/auctionPlatform/admin/pointBalances","method":"post","summary":"Create a new auction platform point balance record","description":"Create a new auction platform point balance record assigning auction points to a team leader in a specific auction room.\n\nAdmin authorization is required to modify sensitive point allocation data.\n\nThe request body must specify all necessary data fields. On success, returns the created point balance record.","parameters":[],"requestBody":{"description":"Creation data for a new auction platform point balance","typeName":"IAuctionPlatformPointBalance.ICreate"},"responseBody":{"description":"The created auction platform point balance record","typeName":"IAuctionPlatformPointBalance"},"authorizationType":null,"authorizationRole":"admin","name":"create"},{"specification":"This operation updates an existing auction platform point balance record identified by its unique ID. It modifies fields such as points allocated and points used in the auction_platform_point_balances table.\n\nAdmin authorization is mandatory for this sensitive operation.\n\nRequest validation verifies the provided pointBalanceId exists and that the update data conforms to schema constraints.\n\nOn success, the operation returns the updated point balance record.","path":"/auctionPlatform/admin/pointBalances/{pointBalanceId}","method":"put","summary":"Update auction platform point balance record by ID","description":"Update an existing auction platform point balance record by ID with new allocation and usage data.\n\nOnly admin users may perform this update.\n\nThe endpoint requires the pointBalanceId path parameter and an update request body. Returns the updated entity on success.","parameters":[{"name":"pointBalanceId","description":"Unique identifier of the point balance record to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for an existing auction platform point balance","typeName":"IAuctionPlatformPointBalance.IUpdate"},"responseBody":{"description":"The updated auction platform point balance record","typeName":"IAuctionPlatformPointBalance"},"authorizationType":null,"authorizationRole":"admin","name":"update"},{"specification":"This operation deletes a specific auction platform point balance record identified by pointBalanceId from the database. It is associated with the auction_platform_point_balances table, which tracks allocated and used points for team leaders in auction rooms to manage bidding capacity. Deleting a point balance permanently removes the record, impacting any point tracking for that team leader in the associated auction room. Access is restricted to authenticated users with role 'member' to ensure only authorized members can perform this action.","description":"This operation permanently deletes the point balance record identified by the provided pointBalanceId from the auction platform's point balances. The point balance represents the allocated and used auction points for a team leader within a specific auction room, crucial for managing bidding limits.\n\nAccess is limited to authenticated members to prevent unauthorized modifications. Deleting this record removes all information about the user's point allocation and usage in the corresponding auction.\n\nThe operation requires a valid UUID identifying the point balance record and responds with no content upon successful deletion.","summary":"Delete specific point balance record by ID","parameters":[{"name":"pointBalanceId","description":"Unique identifier of the point balance record to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["member"],"path":"/auctionPlatform/member/pointBalances/{pointBalanceId}","method":"delete","name":"erasePointBalance","authorizationRole":"member","authorizationType":null},{"specification":"This operation retrieves a paginated and filtered list of chat messages from auction platform chat messages, enabling search capabilities based on various criteria. It corresponds to the auction_platform_chat_messages table, which stores chat messages collected via Chijijik API for auction rooms associated with team leaders. The operation supports advanced filtering, pagination, and sorting to handle potentially large chat volumes in real time during auctions.","description":"Retrieve a paginated list of chat messages for auction platforms. This search operation allows filtering, sorting, and pagination to efficiently manage large volumes of chat messages associated with auction rooms and team leaders.\n\nChat messages are sourced from the auction_platform_chat_messages table, where each message stores the unique Chijijik message ID, content, sender information, and timestamps. Filtering criteria may include auction room, team leader, date ranges, and message contents for comprehensive search capabilities.\n\nAccess is restricted to authenticated members to protect chat data privacy.\n\nThis operation is essential for monitoring, auditing, and displaying chat data in real time and historical reviews.","summary":"Search and retrieve auction platform chat messages with filters and pagination","parameters":[],"requestBody":{"description":"Filter and pagination properties to search auction platform chat messages","typeName":"IAuctionPlatformChatMessage.IRequest"},"responseBody":{"description":"Paginated results containing auction platform chat messages matching the filters","typeName":"IPageIAuctionPlatformChatMessage"},"authorizationRoles":["member"],"path":"/auctionPlatform/member/chat/messages","method":"patch","name":"indexChatMessages","authorizationRole":"member","authorizationType":null},{"specification":"This operation retrieves a single chat message by its unique ID from the auction platform chat messages. It is mapped to the auction_platform_chat_messages table which records messages made during auction chats via the Chijijik API. The retrieved data includes details such as message content, the sender’s name, associated auction room and team leader, timestamps, and unique external message ID.","description":"Retrieve detailed information about a specific chat message identified by its ID. The chat message includes content, sender name, timestamp, auction room association, and team leader association.\n\nThis single-entity retrieval supports detailed audit and display requirements for chat messages collected from the auction platform's chat system.\n\nAccess to this operation requires member authentication to protect sensitive communication data.\n\nIf the ID does not match any message, the response would typically return a not found error.\n\nThis operation is vital for displaying specific chat message details within auction administrative or monitoring tools.","summary":"Get auction platform chat message by ID","parameters":[{"name":"id","description":"Unique identifier of the chat message to retrieve","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed information of the requested auction platform chat message","typeName":"IAuctionPlatformChatMessage"},"authorizationRoles":["member"],"path":"/auctionPlatform/member/chat/messages/{id}","method":"get","name":"atChatMessage","authorizationRole":"member","authorizationType":null},{"specification":"This operation creates a new chat message record in the auction platform's chat messages table, which captures chat inputs from auction rooms and team leaders through the Chijijik API integration. The input includes message content, sender details, associated auction room and team leader IDs, and unique external Chijijik message identifier. The operation returns the created record with all details including timestamps.","description":"Create a new chat message for the auction platform. The message includes the unique external message ID from Chijijik, the content, sender name, and references to the auction room and team leader.\n\nThis operation enables real-time chat functionalities by storing incoming chat messages into the platform's persistent storage.\n\nAccess is restricted to authenticated members to ensure messages are properly attributed and authorized.\n\nThe response contains the complete chat message entity created, allowing immediate confirmation and display.\n\nMessage ID uniqueness is enforced to prevent duplicates.","summary":"Create a new auction platform chat message record","parameters":[],"requestBody":{"description":"Data needed to create a new chat message","typeName":"IAuctionPlatformChatMessage.ICreate"},"responseBody":{"description":"Details of the created chat message","typeName":"IAuctionPlatformChatMessage"},"authorizationRoles":["member"],"path":"/auctionPlatform/member/chat/messages","method":"post","name":"createChatMessage","authorizationRole":"member","authorizationType":null},{"specification":"This operation updates a chat message record identified by its unique ID in the auction_platform_chat_messages table. It allows modification of the message content and sender details while ensuring existing message ID integrity. This supports correcting or moderating chat messages collected from the Chijijik API associated with specific auction rooms and team leaders.","path":"/auctionPlatform/member/chat/messages/{id}","method":"put","description":"Update an existing chat message by its unique ID. This operation allows modifying the content and sender's name of a chat message collected from the Chijijik API. It relates to the auction_platform_chat_messages table where each message is linked to an auction room and a team leader.\n\nThe update requires authentication with appropriate user roles. Only authorized members can update message content to correct or moderate messages.\n\nParameters include the message UUID path parameter. The request body accepts fields for updating message content and sender details.\n\nThe response provides the updated chat message with all its properties including message ID and timestamps.\n\nValidation includes ensuring the uniqueness of chijijik_message_id and integrity of foreign keys.\n\nNo deletion is performed by this operation; it strictly updates existing messages.","summary":"Update a chat message by ID","parameters":[{"name":"id","description":"Unique identifier of the chat message to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Data for updating the chat message","typeName":"IAuctionPlatformChatMessage.IUpdate"},"responseBody":{"description":"The updated chat message record","typeName":"IAuctionPlatformChatMessage"},"authorizationType":null,"authorizationRole":"member","name":"updateChatMessage"},{"specification":"This operation deletes a chat message from the auction_platform_chat_messages table permanently by its ID. There is a soft delete column deleted_at, so this operation marks the message as deleted by setting deleted_at timestamp, rather than removing the record physically. This preserves audit trails and prevents data loss.\n\nDeleting chat messages require authorization, ensuring only specified roles can perform deletion for moderation or compliance reasons.","path":"/auctionPlatform/admin/chat/messages/{id}","method":"delete","description":"Delete a chat message by its unique ID.\n\nThis performs a soft delete by setting the deleted_at timestamp on the auction_platform_chat_messages record. The record remains in the database for auditing but is treated as deleted.\n\nOnly authorized personnel can perform delete operations on chat messages.\n\nParameters include the message ID path parameter. No request body is needed.\n\nResponse does not return data, only confirmation of deletion.","summary":"Soft delete a chat message by ID","parameters":[{"name":"id","description":"Unique identifier of the chat message to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"eraseChatMessage"},{"specification":"This operation retrieves a paginated list of sponsorship event records with filtering and pagination. It queries the auction_platform_sponsorship_events table, including details like donor name, donation amount, associated auction room and member, and timestamp data.\n\nUsers can filter by date ranges, donor names, or auction rooms, and paginate through large data sets. The operation supports admin-level authorization for monitoring and reporting sponsorship activities.","path":"/auctionPlatform/admin/sponsorshipEvents","method":"patch","description":"Search and retrieve paginated sponsorship event records.\n\nThis operation supports filtering by donor name, auction room, date ranges, and more to allow administrators to monitor sponsorship activities within the auction platform.\n\nResponse provides a paginated list of sponsorship event summaries including donor, amount, message, and timestamps.\n\nAuthorization is restricted to admin roles due to sensitivity of sponsorship financial data.\n\nRequest body defines filtering and pagination parameters to efficiently query the dataset.","summary":"Search sponsorship events with filters and pagination","parameters":[],"requestBody":{"description":"Filtering and pagination criteria for sponsorship events","typeName":"IAuctionPlatformSponsorshipEvent.IRequest"},"responseBody":{"description":"Paginated sponsorship event summary list","typeName":"IPageIAuctionPlatformSponsorshipEvent.ISummary"},"authorizationType":null,"authorizationRole":"admin","name":"searchSponsorshipEvents"},{"specification":"This operation retrieves detailed information about a specific sponsorship event identified by its unique ID from the auction_platform_sponsorship_events table.\n\nIt includes donor details, auction room association, donation amount, message content, animation flag, and timestamps. This is useful for auditing, reporting, and detailed review by administrators.\n\nAuthorization is limited to admin roles due to the sensitive financial nature of the sponsorship data.","path":"/auctionPlatform/admin/sponsorshipEvents/{id}","method":"get","description":"Get detailed information about a specific sponsorship event by its unique ID.\n\nThis operation returns all relevant fields including donor name, donation amount, message, animation status, related auction room and member references, and timestamps.\n\nOnly admins are authorized to access this financial and personally identifiable information.\n\nPath parameter includes the sponsorship event UUID.","summary":"Retrieve a sponsorship event by ID","parameters":[{"name":"id","description":"Unique identifier of the sponsorship event","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed sponsorship event data","typeName":"IAuctionPlatformSponsorshipEvent"},"authorizationType":null,"authorizationRole":"admin","name":"atSponsorshipEvent"},{"specification":"This operation creates a new sponsorship event record in the auction platform system, allowing the recording of donation details such as donor name, donation amount, associated auction room id, optional member id (team leader), optional message, and whether an animation is triggered. This is linked to the auction_platform_sponsorship_events table in the Prisma schema. The creation timestamp is automatically recorded, but not set by the client. The system enforces uniqueness of the sponsorship event by its chijijik_sponsorship_id preventing duplicate processing from Chijijik API.","description":"Creates a new sponsorship event record capturing donation information during an auction room. The record includes donor name, donation amount, optional message, and linkage to the auction room and optionally the donating member (team leader). The unique Chijijik sponsorship ID prevents duplication. Animations triggered by the sponsorship can be flagged.\n\nSecurity considerations revolve around appropriate authorization for creating sponsorship events, usually limited to system components or admin roles interfacing with the Chijijik API or authenticated processes.\n\nThis operation interacts with the auction_platform_sponsorship_events table, and successful creation results in immediate availability for real-time auction bid updates and overlay broadcasts.\n\nValidation rules require the chijijik_sponsorship_id to be unique and donation_amount to be a positive float.\n\nRelated operations include updating or deleting sponsorship events.\n\nError handling includes rejecting duplicates or invalid donation amounts.","summary":"Create a new sponsorship event record","parameters":[],"requestBody":{"description":"Sponsorship event creation data","typeName":"IAuctionPlatformSponsorshipEvent.ICreate"},"responseBody":{"description":"Created sponsorship event record","typeName":"IAuctionPlatformSponsorshipEvent"},"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/sponsorshipEvents","method":"post","name":"createSponsorshipEvent"},{"specification":"This operation updates an existing sponsorship event identified by its UUID in the auction platform system. Modification fields include donor name, donation amount, message, animation flag, and references to the auction room and member. The system manages updated_at timestamp, but the client provides the id path parameter for targeting and the request body with update fields.\n\nIt operates on the auction_platform_sponsorship_events table in the Prisma schema. Updating the sponsorship event ensures data consistency and allows corrections in bid processes or display animations.\n\nValidation ensures the existence of the targeted record and correctness of updated fields.\n\nRelated operations include creation and deletion of sponsorship events.\n\nSecurity requires admin role authorization to protect data integrity.","description":"Updates an existing sponsorship event by id. Allows modification of donor name, donation amount, message, animation status, and links to auction room and member. The record's updated_at timestamp is managed automatically.\n\nSecurity enforces admin role restriction.\n\nThis operation works on the auction_platform_sponsorship_events database table, ensuring auction sponsorship data remains consistent and up to date.\n\nErrors include targeting non-existent records or violating uniqueness constraints.","summary":"Update a sponsorship event by ID","parameters":[{"name":"id","description":"Unique identifier of the sponsorship event to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Sponsorship event update data","typeName":"IAuctionPlatformSponsorshipEvent.IUpdate"},"responseBody":{"description":"Updated sponsorship event record","typeName":"IAuctionPlatformSponsorshipEvent"},"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/sponsorshipEvents/{id}","method":"put","name":"updateSponsorshipEvent"},{"specification":"This operation deletes a sponsorship event from the auction platform system by its unique UUID identifier. The deletion is a hard delete as no soft delete field is specified in the requirements; the record is removed permanently from the auction_platform_sponsorship_events table.\n\nSecurity requires admin authorization to prevent unauthorized data removal.\n\nDeleting a sponsorship event removes it from auction bid calculations and real-time display overlays. It cannot be undone.\n\nRelated operations include creating and updating sponsorship events.","description":"Deletes a sponsorship event record permanently identified by the given unique ID.\n\nSecurity is enforced to limit this operation to admin users.\n\nOnce deleted, the sponsorship event data is removed from all auction state and overlays permanently. There is no recovery.\n\nErrors include attempts to delete non-existent IDs.","summary":"Permanently delete a sponsorship event by ID","parameters":[{"name":"id","description":"Unique identifier of the sponsorship event to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/sponsorshipEvents/{id}","method":"delete","name":"eraseSponsorshipEvent"},{"specification":"This operation lists sponsorship animation metadata records in a paginated manner supporting filtering, searching, and sorting. It operates on the auction_platform_sponsorship_animations table. The animations include metadata such as animation name, file URI, description, uploader member id and timestamps. This list operation supports flexible client queries for managing custom animation assets.\n\nSecurity permissions restrict this operation to admin roles.\n\nResponse provides paginated sets of sponsorship animation metadata suitable for management UI display or batch processing.","description":"Retrieve a paginated list of sponsorship animation metadata records with filtering, searching, and sorting capabilities. This operation facilitates management of custom sponsorship animations used in auction overlays.\n\nSecurity is restricted to admin users.\n\nThis operation returns paginated results optimized for administrative browsing.\n\nSupports complex search parameters in request body facilitating flexible client querying.","summary":"List sponsorship animations with pagination and filtering","parameters":[],"requestBody":{"description":"Search parameters and pagination for sponsorship animations","typeName":"IAuctionPlatformSponsorshipAnimation.IRequest"},"responseBody":{"description":"Paginated sponsorship animation metadata list","typeName":"IPageIAuctionPlatformSponsorshipAnimation"},"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/sponsorshipAnimations","method":"patch","name":"searchSponsorshipAnimations"},{"specification":"This operation retrieves detailed information about a specific sponsorship animation used in the auction platform for notification enhancements. It accesses the auction_platform_sponsorship_animations table in the Prisma schema, which contains metadata including animation name, file URI, optional description, and uploader information. The GET method requires the unique animation ID as a path parameter. The response returns the detailed sponsorship animation record, including all metadata fields and timestamps, allowing clients to display or manage this animation asset appropriately.","description":"Retrieve detailed information for a specific sponsorship animation by its unique ID.\n\nThis API endpoint operates on the auction_platform_sponsorship_animations table, which stores metadata about custom animations used in sponsorship notifications during auctions. The record includes the animation's name, file URI, optional description, the member who uploaded it, and audit timestamps.\n\nUsers with appropriate permissions can query this resource to obtain full details about an animation asset for display or management purposes.\n\nSecurity considerations require proper authentication and authorization to access this animation data since it pertains to sponsorship notification customization.\n\nThis GET operation supports retrieval by the unique animation identifier passed as a path parameter, which must be a valid UUID corresponding to an existing record.\n\nErrors may include 404 for missing animation IDs or 401/403 for unauthorized access.\n\nRelated APIs include creating, updating, and deleting sponsorship animations, which modify this resource.\n\nThe response body contains the full auction_platform_sponsorship_animations entity as defined in the Prisma schema including all its columns and properties.","summary":"Get detailed information of a specific auction platform sponsorship animation","parameters":[{"name":"id","description":"Unique identifier of the sponsorship animation","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Sponsorship animation details","typeName":"IAuctionPlatformSponsorshipAnimation"},"authorizationType":null,"authorizationRole":"admin","name":"at","path":"/auctionPlatform/admin/sponsorshipAnimations/{id}","method":"get"},{"specification":"This operation creates a new sponsorship animation record in the auction platform, allowing administrators to upload and register custom animation metadata for sponsorship notifications. The underlying Prisma table is auction_platform_sponsorship_animations, which stores animation name, file URI, optional description, and uploader member ID along with audit timestamps. This POST endpoint accepts a request body with the animation metadata to be created, ensuring the new animation complies with all validation rules including file URI length constraints. Upon success, it returns the created animation record with its generated ID and timestamps.","description":"Create a new sponsorship animation record for the auction platform.\n\nThis operation allows administrators to register a new custom animation used to enhance sponsorship notifications during auctions. The input includes animation name, file URI pointing to the animation file (e.g., S3 URL), optional description, and uploader member ID.\n\nThe auction_platform_sponsorship_animations table stores these records with audit metadata including creation and update timestamps and supports soft deletion.\n\nSecurity restrictions require admin role authorization.\n\nErrors may arise from validation failures such as missing required fields or invalid file URI.\n\nThe endpoint returns the full created animation record.\n\nComplementary API operations include retrieving, updating, and deleting sponsorship animations.","summary":"Create a new auction platform sponsorship animation","parameters":[],"requestBody":{"description":"Data to create a new sponsorship animation","typeName":"IAuctionPlatformSponsorshipAnimation.ICreate"},"responseBody":{"description":"The created sponsorship animation object","typeName":"IAuctionPlatformSponsorshipAnimation"},"authorizationType":null,"authorizationRole":"admin","name":"create","path":"/auctionPlatform/admin/sponsorshipAnimations","method":"post"},{"specification":"This operation updates an existing sponsorship animation identified by its unique ID in the auction platform. The underlying Prisma model auction_platform_sponsorship_animations contains metadata such as animation name, file URI, optional description, and uploader info. This PUT endpoint accepts an update request body allowing modification of any updatable fields in the animation record. Successful updates return the updated animation record with all metadata fields refreshed. Proper authorization for administrators is mandatory to secure this operation.","description":"Update an existing sponsorship animation's details by its unique ID.\n\nThis API modifies records in the auction_platform_sponsorship_animations table, permitting admins to change animation metadata such as name, file URI, description, and uploader member ID. The endpoint requires the animation ID as a path parameter and a request body with updated fields.\n\nAuthorization enforcement ensures only admins can perform updates.\n\nFailures may be due to invalid IDs, missing records, or validation errors on input fields.\n\nOn success, the full updated sponsorship animation entity is returned.\n\nRelated endpoints include creation and deletion of sponsorship animations.","summary":"Update an existing auction platform sponsorship animation","parameters":[{"name":"id","description":"Unique identifier of the sponsorship animation to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Updated data for the sponsorship animation","typeName":"IAuctionPlatformSponsorshipAnimation.IUpdate"},"responseBody":{"description":"The updated sponsorship animation object","typeName":"IAuctionPlatformSponsorshipAnimation"},"authorizationType":null,"authorizationRole":"admin","name":"update","path":"/auctionPlatform/admin/sponsorshipAnimations/{id}","method":"put"},{"specification":"This operation deletes an existing sponsorship animation record in the auction platform permanently by its unique ID. The auction_platform_sponsorship_animations table holds metadata for these animation files used in sponsorship notifications. This DELETE endpoint requires the animation ID as a path parameter and performs hard deletion without returning a response body. Administrative role authorization is required to execute this removal. This deletion operation is irreversible and removes all associated data from the database.","description":"Delete a sponsorship animation permanently using its unique ID.\n\nThis API removes the auction_platform_sponsorship_animations record identified by the given UUID. It performs a hard delete, completely removing the record and all associated metadata.\n\nOnly users with admin role authorization can delete sponsorship animations.\n\nNo response body is returned upon success.\n\nError cases may include attempting to delete a non-existent ID or lacking proper authorization.\n\nComplementary endpoints allow reading, creating, and updating sponsorship animations.","summary":"Delete an auction platform sponsorship animation by ID","parameters":[{"name":"id","description":"Unique identifier of the sponsorship animation to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","name":"erase","path":"/auctionPlatform/admin/sponsorshipAnimations/{id}","method":"delete"},{"specification":"This operation provides the capability to retrieve a filtered and paginated list of calendar events representing scheduled auction rooms managed in the system. It operates on the auction_platform_calendar_events table defined in the Prisma schema. The calendar events include mandatory start timestamps and optional end timestamps corresponding to auction room schedules. Business logic includes supporting search filters, pagination, and sorting of calendar events to enable efficient querying of scheduled auctions. This enables clients to display upcoming and past auction schedules filtered by streaming room or date ranges.","path":"/auctionPlatform/member/calendarEvents","method":"patch","summary":"Search and retrieve a filtered, paginated list of auction calendar events","description":"Retrieve a filtered and paginated list of auction platform calendar events from the system. Each calendar event is linked to an auction room and contains vital scheduling information such as start date (mandatory) and end date (optional).\n\nThe API supports advanced filtering, searching, and sorting capabilities to help clients find auction events based on streamer names, dates, or other criteria. Pagination parameters control the volume of data per query for efficient network usage.\n\nSecurity considerations restrict access to authorized users only, ensuring sensitive schedule information is protected. The operation integrates directly with the auction_platform_calendar_events table from the Prisma schema, leveraging all its columns and relationships.\n\nThe response consists of a paginated list of calendar event summaries optimized for calendar display with essential metadata.","parameters":[],"requestBody":{"description":"Filter criteria and pagination parameters for calendar event retrieval","typeName":"IAuctionPlatformCalendarEvents.IRequest"},"responseBody":{"description":"Paginated list of calendar event summaries matching search criteria","typeName":"IPageIAuctionPlatformCalendarEvents.ISummary"},"authorizationType":null,"authorizationRole":"member","name":"index"},{"specification":"This operation fetches detailed information about a specific calendar event by its unique identifier. It queries the auction_platform_calendar_events table using the calendarEventId path parameter, returning full details of the calendar event including its linked auction room, title, scheduled start and optional end times.\n\nThis detailed fetch operation is intended for clients that require full information about a single auction schedule. Access is controlled to authorized users to protect schedule confidentiality.","path":"/auctionPlatform/member/calendarEvents/{calendarEventId}","method":"get","summary":"Retrieve detailed information of a specific auction calendar event","description":"Fetch detailed information of an auction calendar event by its ID. The operation returns a single calendar event entity that includes all pertinent scheduling data, such as the auction room linkage, title, start time, and optional end time.\n\nOnly authorized users may retrieve calendar event details to ensure sensitive auction scheduling information remains secure.\n\nErrors such as invalid or non-existent IDs result in appropriate error responses.\n\nThis operation corresponds to the auction_platform_calendar_events table in the Prisma schema.","parameters":[{"name":"calendarEventId","description":"Unique identifier of the target calendar event","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Detailed calendar event information","typeName":"IAuctionPlatformCalendarEvent"},"authorizationType":null,"authorizationRole":"member","name":"at"},{"specification":"This operation creates a new calendar event record in the system, linking an auction room schedule with an optional end time. It writes to the auction_platform_calendar_events table in the Prisma schema. Incoming data must contain valid references to existing auction rooms, along with the event title, start time (mandatory), and optional end time.\n\nBusiness validation includes checking that the referenced auction room exists and that the start date is earlier than the end date when provided. The creation timestamp is recorded automatically.\n\nThis endpoint is restricted to authenticated users who have permission to register new auction schedules.","path":"/auctionPlatform/member/calendarEvents","method":"post","summary":"Create a new auction calendar event","description":"Create a new auction calendar event to schedule an auction room. The operation requires the auction room ID, a descriptive title, and a mandatory start time. Optionally, an end time can be specified to denote auction conclusion.\n\nThe system validates references and temporal consistency before persisting the event.\n\nOnly authorized users can create new calendar events.\n\nUpon success, the newly created event details are returned.","parameters":[],"requestBody":{"description":"Data for new calendar event creation","typeName":"IAuctionPlatformCalendarEvent.ICreate"},"responseBody":{"description":"Newly created calendar event details","typeName":"IAuctionPlatformCalendarEvent"},"authorizationType":null,"authorizationRole":"member","name":"create"},{"specification":"This operation updates an existing calendar event identified by calendarEventId path parameter. It modifies event attributes such as the linked auction room, title, start time, and optionally, the end time. The update applies to the auction_platform_calendar_events table in the Prisma schema.\n\nBusiness rules require validating that the new start and end times maintain chronological correctness and the specified auction room exists. Auditing timestamps are updated accordingly.\n\nClients must provide the full update payload ensuring all required fields are included. The operation restricts access to authorized users only.\n\nSuccessful updates return the updated calendar event entity.","path":"/auctionPlatform/member/calendarEvents/{calendarEventId}","method":"put","summary":"Update an existing auction calendar event","description":"Update details of an existing auction calendar event identified by ID. The operation accepts new values for the auction room linkage, title, start time, and optional end time.\n\nAll updates are validated and audited for consistency.\n\nAccess is limited to authorized users.\n\nUpon success, the updated calendar event data is returned.","parameters":[{"name":"calendarEventId","description":"Unique identifier of the calendar event to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for the calendar event","typeName":"IAuctionPlatformCalendarEvent.IUpdate"},"responseBody":{"description":"Updated calendar event details","typeName":"IAuctionPlatformCalendarEvent"},"authorizationType":null,"authorizationRole":"member","name":"update"},{"specification":"This operation deletes a specific calendar event from the auction platform calendar_events table, which manages scheduled auction rooms linked to streaming auction activities. The calendar event represents an auction schedule with mandatory start time and optional end time, identified by calendarEventId. Deleting a calendar event is a hard delete operation removing the record permanently from the database. This operation requires the calendarEventId path parameter to uniquely identify the calendar event. No request body is needed, and no response body is returned after deletion.","description":"This DELETE operation removes a calendar event identified by calendarEventId from the auction platform's calendar_events data store. The calendar event is linked to a specific auction room and contains event details such as title, start and optional end times.\n\nOnly authorized users with admin roles may perform this delete to prevent unauthorized data removal. This operation permanently deletes the calendar event from the database, ensuring the auction schedule is no longer listed or active.\n\nThis operation involves the auction_platform_calendar_events table in the database and enforces referential integrity with the related auction rooms through cascading deletes or similar strategies.\n\nProper validation ensures calendarEventId corresponds to a valid record. If not found, an error response should be returned.\n\nNo request body is required since the only input is the calendarEventId path parameter. No response body is returned; the successful deletion is indicated by HTTP status code.\n\nThis endpoint is typically invoked as part of schedule management features by administrators managing auction rooms and events.","summary":"Delete a calendar event by ID (hard delete)","parameters":[{"name":"calendarEventId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the calendar event to delete"}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/calendarEvents/{calendarEventId}","method":"delete","name":"erase"},{"specification":"This operation retrieves a filtered and paginated list of schedule audit logs associated with a specific calendar event, which records calendar event changes for compliance and troubleshooting purposes. The calendarEventId path parameter specifies the related calendar event for which audit logs are requested.\n\nThe operation accepts advanced search criteria as a request body, supporting pagination, sorting, and filtering based on change type, changed by user, and timestamp ranges.\n\nThe response returns a paginated list of auction_platform_schedule_audit_logs summary records including details of changes, user info, and timestamps.\n\nThis endpoint supports administrators or auditors who need to review the change history of calendar events for governance and auditing.\n\nStrict role-based access control limits this operation to admin users.","description":"Retrieve a paginated list of schedule audit logs for a specific calendar event identified by calendarEventId. Audit logs capture changes made to auction schedule records, including who made the change, what was changed, and when.\n\nThis operation supports advanced search and filtering capabilities via the request body, enabling queries by change types, users, and date ranges, with pagination parameters.\n\nSecurity policies restrict access to authorized admin users only to maintain data privacy and audit integrity.\n\nThe response contains a paginated collection of audit log summaries providing essential metadata about schedule changes.\n\nUse cases include auditing schedule modifications, compliance reporting, and troubleshooting calendar event issues.","summary":"List schedule audit logs for a calendar event","parameters":[{"name":"calendarEventId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the calendar event"}],"requestBody":{"description":"Search criteria and pagination parameters for schedule audit logs filtering","typeName":"IAuctionPlatformScheduleAuditLog.IRequest"},"responseBody":{"description":"Paginated list of schedule audit log summaries","typeName":"IPageIAuctionPlatformScheduleAuditLog.ISummary"},"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/calendarEvents/{calendarEventId}/scheduleAuditLogs","method":"patch","name":"index"},{"specification":"This operation retrieves detailed information about a single schedule audit log entry identified by scheduleAuditLogId, linked to a specific calendar event identified by calendarEventId. It returns metadata about the calendar changes, including who made the change, the type of change, description, and timestamps.\n\nThis is a read-only operation intended for administrators or auditors to inspect individual schedule audit logs for compliance, troubleshooting, or system monitoring.\n\nAccess is restricted to admin roles to protect sensitive audit information.\n\nThe response body contains detailed information about the specific audit log entry.\n\nNo request body is required as all input is via path parameters.","description":"Retrieve details of a single schedule audit log entry by scheduleAuditLogId for a calendar event identified by calendarEventId. Provides comprehensive audit data such as change type, user responsible, and timestamps.\n\nAccess restricted to admin users to ensure audit data confidentiality.\n\nUseful for detailed examination of specific schedule changes in the auction platform.","summary":"Get details of a schedule audit log entry","parameters":[{"name":"calendarEventId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the calendar event"},{"name":"scheduleAuditLogId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the schedule audit log entry"}],"requestBody":null,"responseBody":{"description":"Detailed information of a schedule audit log entry","typeName":"IAuctionPlatformScheduleAuditLog"},"authorizationType":null,"authorizationRole":"admin","path":"/auctionPlatform/admin/calendarEvents/{calendarEventId}/scheduleAuditLogs/{scheduleAuditLogId}","method":"get","name":"at"},{"specification":"This operation creates a new schedule audit log entry linked to a specified calendar event identified by calendarEventId. The audit log records changes made to auction schedule records, supporting compliance, troubleshooting, and system monitoring.\n\nThe POST request body includes detailed information about the change, user responsible, change type, and optional description.\n\nOnly admin users may create audit log entries, typically invoked by system processes or admin interfaces.\n\nThe response returns the newly created audit log with full details.\n\nProper validation ensures that the calendar event exists and the input data complies with schema requirements.","description":"Create a new schedule audit log entry for a specific calendar event identified by calendarEventId. Audit logs capture who made changes, what changes occurred, and when.\n\nThis API is intended for administrative use to maintain an audit trail of schedule modifications.\n\nAuthorization restricted to admin users to protect audit data integrity.\n\nReturns the created audit log record with comprehensive details for confirmation and further processing.","summary":"Create a schedule audit log entry","parameters":[{"name":"calendarEventId","in":"path","schema":{"type":"string","format":"uuid"},"description":"Unique identifier of the calendar event"}],"requestBody":{"description":"Creation information of the schedule audit log entry","typeName":"IAuctionPlatformScheduleAuditLog.ICreate"},"responseBody":{"description":"Newly created schedule audit log entry information","typeName":"IAuctionPlatformScheduleAuditLog"},"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/calendarEvents/{calendarEventId}/scheduleAuditLogs","method":"post","name":"create","authorizationRole":"admin","authorizationType":null},{"specification":"This operation updates the details of a specific schedule audit log entry identified by its unique scheduleAuditLogId within a calendar event specified by calendarEventId. This entity is associated with the auction_platform_schedule_audit_logs table in the Prisma schema. The operation allows modification of the change_type and change_description fields of the audit log. It requires both calendarEventId and scheduleAuditLogId as path parameters to locate the precise audit log to update. The update request body follows the IAuctionPlatformScheduleAuditLog.IUpdate schema and the response returns the updated audit log entity IAuctionPlatformScheduleAuditLog. Authorization is limited to users with the 'admin' role, reflecting the sensitive nature of audit logs and their management.","description":"Update the details of a schedule audit log entry belonging to a specific calendar event. This allows administrators to correct or augment audit information such as the type of change (e.g., create, update, delete) and descriptive details about the change.\n\nSecurity and permission controls restrict this operation to users with administrative privileges to ensure audit trail integrity.\n\nThis operation directly updates records in the auction_platform_schedule_audit_logs table, which logs modifications on calendar events. It supports operational transparency and compliance by enabling controlled edits to audit logs.\n\nCorrect usage involves specifying valid calendarEventId and scheduleAuditLogId path parameters and providing update data. Failure to provide sufficient identification or authorization results in access denial or record not found errors.","summary":"Update a schedule audit log by ID within a calendar event","parameters":[{"name":"calendarEventId","description":"Unique identifier of the target calendar event","schema":{"type":"string","format":"uuid"}},{"name":"scheduleAuditLogId","description":"Unique identifier of the target schedule audit log","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Update data for the schedule audit log entry","typeName":"IAuctionPlatformScheduleAuditLog.IUpdate"},"responseBody":{"description":"Updated schedule audit log information","typeName":"IAuctionPlatformScheduleAuditLog"},"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/calendarEvents/{calendarEventId}/scheduleAuditLogs/{scheduleAuditLogId}","method":"put","name":"updateScheduleAuditLog","authorizationRole":"admin","authorizationType":null},{"specification":"This operation permanently removes a schedule audit log entry from a specific calendar event, identified by calendarEventId and scheduleAuditLogId. It directly deletes records from the auction_platform_schedule_audit_logs table in the Prisma schema. The deletion is hard, indicated by the absence of soft delete column handling in this operation's design.\n\nPath parameters include calendarEventId and scheduleAuditLogId for precise resource targeting. As audit log entries record critical change history, this operation is restricted to users with the 'admin' role to prevent unauthorized deletions.\n\nNo request body or response body is required as the deletion is definitive with no return content. Proper error handling for non-existent entries and authorization failures is expected in implementation.","description":"Delete a specific schedule audit log entry permanently from a calendar event. This removal is irreversible and removes all trace of the audit log from the system.\n\nDue to the sensitive nature of audit logs, only administrators are permitted to perform this operation.\n\nEnsure that the calendarEventId and scheduleAuditLogId uniquely identify the audit log entry to avoid unintended data loss. Attempting deletion of non-existent entries should return appropriate errors.\n\nThis operation corresponds to a DELETE on the auction_platform_schedule_audit_logs table with no soft delete implemented here.","summary":"Permanently delete a schedule audit log by ID within a calendar event","parameters":[{"name":"calendarEventId","description":"Unique identifier of the target calendar event","schema":{"type":"string","format":"uuid"}},{"name":"scheduleAuditLogId","description":"Unique identifier of the target schedule audit log","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationRoles":["admin"],"path":"/auctionPlatform/admin/calendarEvents/{calendarEventId}/scheduleAuditLogs/{scheduleAuditLogId}","method":"delete","name":"eraseScheduleAuditLog","authorizationRole":"admin","authorizationType":null},{"specification":"This operation retrieves a paginated, filtered list of icon purchase records associated with the auction platform. Operates on the auction_platform_icon_purchases table and supports complex request bodies for search, filtering, and pagination parameters stated in IAuctionPlatformIconPurchase.IRequest type. Responses include paginated summaries of icon purchases as IAuctionPlatformPageIAuctionPlatformIconPurchase.ISummary.\n\nThis endpoint is public (no authorization roles required). Query parameters may include user ownership filters or other criteria within the request body.","description":"Retrieve a filtered and paginated list of icon purchase records. Supports advanced search conditions such as filtering by user, date ranges, or specific icon codes.\n\nPagination parameters allow clients to control page sizes, navigate pages, and sort results.\n\nThis operation connects with auction_platform_icon_purchases entities, returning concise summary views optimized for list displays. It is useful for administrative reporting and user history views.\n\nNo authorization required as this is a public facing operation though sensitive user filtering should be handled carefully in business logic.","summary":"Search and retrieve paginated icon purchase records","parameters":[],"requestBody":{"description":"Search criteria and pagination parameters for icon purchases","typeName":"IAuctionPlatformIconPurchase.IRequest"},"responseBody":{"description":"Paginated list of icon purchase summaries matching search criteria","typeName":"IAuctionPlatformPageIAuctionPlatformIconPurchase.ISummary"},"authorizationRoles":[],"path":"/auctionPlatform/iconPurchases","method":"patch","name":"searchIconPurchases","authorizationRole":null,"authorizationType":null},{"specification":"This operation fetches a single icon purchase record by its unique iconPurchaseId from the auction_platform_icon_purchases table. It provides detailed information about the purchase including user details, icon code, purchase points, and timestamps.\n\nThe iconPurchaseId path parameter uniquely identifies the purchase record.\n\nThis is a public operation with no authorization roles required, allowing general retrieval of icon purchase details for display or auditing.\n\nReturns IAuctionPlatformIconPurchase as the data schema in the response body.","description":"Fetch detailed information for a specific icon purchase by its ID.\n\nProvides complete purchase details including purchasing user, icon code, points spent, and timestamps.\n\nThis operation supports user or administrative interfaces requiring detailed purchase views.\n\nThe iconPurchaseId must be valid to avoid not found errors.","summary":"Retrieve an icon purchase record by ID","parameters":[{"name":"iconPurchaseId","description":"Unique identifier of the icon purchase","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":{"description":"Icon purchase detailed information","typeName":"IAuctionPlatformIconPurchase"},"authorizationRoles":[],"path":"/auctionPlatform/iconPurchases/{iconPurchaseId}","method":"get","name":"atIconPurchase","authorizationRole":null,"authorizationType":null},{"specification":"This operation creates a new calendar icon purchase record in the Auction Platform system. It stores details about a user's purchase of a calendar icon, including the user ID, the icon code, the purchase points spent, and timestamps for creation and update. This operation operates on the auction_platform_icon_purchases table in the Prisma schema.","description":"Create a new calendar icon purchase record associating a purchased icon with a registered member. This enables users to customize their calendar event appearance by buying icons using platform points.\n\nThe operation inserts a validated record into the auction_platform_icon_purchases table with user ID, icon code, and points spent.\n\nThe authorization requires authenticated member access to ensure only valid users can make purchases.\n\nProper error handling includes checks for user existence, sufficient points, and valid icon codes.\n\nReturns the created icon purchase record with its details for client display and confirmation.","summary":"Create a new calendar icon purchase record","parameters":[],"requestBody":{"description":"Payload containing user ID, icon code, and purchase points for the new icon purchase","typeName":"IAuctionPlatformIconPurchase.ICreate"},"responseBody":{"description":"Newly created icon purchase record","typeName":"IAuctionPlatformIconPurchase"},"authorizationType":null,"authorizationRole":"member","name":"create","path":"/auctionPlatform/member/iconPurchases","method":"post"},{"specification":"This operation updates an existing calendar icon purchase by its unique iconPurchaseId. It modifies icon code or purchase points and updates timestamps. This corresponds to updating records in the auction_platform_icon_purchases table.","description":"Update an existing calendar icon purchase record identified by the iconPurchaseId path parameter. Allows modification of icon purchase details.\n\nEnsures that the icon purchase exists and that the requesting member has authorization to modify it.\n\nReflects updated fields and timestamps in the response.\n\nRelates to user customization workflows for calendar event icons.\n\nThis operation requires authenticated member access.","summary":"Update an existing calendar icon purchase record","parameters":[{"name":"iconPurchaseId","description":"Unique identifier of the icon purchase to update","schema":{"type":"string","format":"uuid"}}],"requestBody":{"description":"Fields to update in the icon purchase record","typeName":"IAuctionPlatformIconPurchase.IUpdate"},"responseBody":{"description":"Updated icon purchase details","typeName":"IAuctionPlatformIconPurchase"},"authorizationType":null,"authorizationRole":"member","name":"update","path":"/auctionPlatform/member/iconPurchases/{iconPurchaseId}","method":"put"},{"specification":"This operation deletes a calendar icon purchase record permanently by its iconPurchaseId. The record is fully removed from the auction_platform_icon_purchases table with no recovery possible.\n\nIt requires authorization to ensure only the owner or authorized admin can delete the record.\n\nThis deletion is a hard delete operation, erasing data rather than soft removal.\n\nThis functionality supports user management of calendar icon purchases.","description":"Permanently delete a calendar icon purchase record by its unique identifier. This removes user customization of calendar icons.\n\nAuthorization checks prevent unauthorized deletion.\n\nNo response body is returned upon successful deletion.\n\nThis operation corresponds to the auction_platform_icon_purchases table in the database schema.","summary":"Delete a calendar icon purchase permanently","parameters":[{"name":"iconPurchaseId","description":"Unique identifier of the icon purchase to delete","schema":{"type":"string","format":"uuid"}}],"requestBody":null,"responseBody":null,"authorizationType":null,"authorizationRole":"member","name":"erase","path":"/auctionPlatform/member/iconPurchases/{iconPurchaseId}","method":"delete"}],"components":{"authorization":[{"name":"guest","description":"Unauthenticated users with limited access to public information and registration features.","kind":"guest"},{"name":"member","description":"Authenticated users who can participate as team leaders in auctions with assigned points.","kind":"member"},{"name":"admin","description":"System administrators who manage auctions, users, schedules, and integration settings.","kind":"admin"}],"schemas":{"IPage.IPagination":{"type":"object","properties":{"current":{"type":"integer","minimum":0,"description":"Current page number."},"limit":{"type":"integer","minimum":0,"description":"Limitation of records per a page."},"records":{"type":"integer","minimum":0,"description":"Total records in the database."},"pages":{"type":"integer","minimum":0,"description":"Total pages.\n\nEqual to {@link records} / {@link limit} with ceiling."}},"required":["current","limit","records","pages"],"description":"Page information."},"IAuthorizationToken":{"type":"object","properties":{"access":{"type":"string","description":"JWT access token for authenticated requests.\n\nThis token should be included in the Authorization header for subsequent\nauthenticated API requests as `Bearer {token}`."},"refresh":{"type":"string","description":"Refresh token for obtaining new access tokens.\n\nThis token can be used to request new access tokens when the current access\ntoken expires, extending the user's session."},"expired_at":{"type":"string","format":"date-time","description":"Access token expiration timestamp.\n\nISO 8601 date-time string indicating when the access token will expire and\ncan no longer be used for authentication."},"refreshable_until":{"type":"string","format":"date-time","description":"Refresh token expiration timestamp.\n\nISO 8601 date-time string indicating the latest time until which the\nrefresh token can be used to obtain new access tokens."}},"required":["access","refresh","expired_at","refreshable_until"],"description":"Authorization token response structure.\n\nThis interface defines the structure of the authorization token response\nreturned after successful user authentication. It contains both access and\nrefresh tokens along with their expiration information.\n\nThis token structure is automatically included in API schemas when the system\ndetects authorization roles in the requirements analysis phase. It provides a\nstandard format for JWT-based authentication across the generated backend\napplications."},"IPageIAuctionPlatformApiIntegrations.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformApiIntegrations.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformRateLimit":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformRateLimit"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformAuctionPlatformAuditLog":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformAuctionPlatformAuditLog"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformGuest.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformGuest.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformMember.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformMember.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformAdmin.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformAdmin.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformAuctionRoom.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformAuctionRoom.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformAuctionCandidates.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformAuctionCandidates.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformTeamLeader.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformTeamLeader.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformBids.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformBids.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformPointBalances.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformPointBalances.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformChatMessage":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformChatMessage"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformSponsorshipEvent.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformSponsorshipEvent.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformSponsorshipAnimation":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformSponsorshipAnimation"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformCalendarEvents.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformCalendarEvents.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IPageIAuctionPlatformScheduleAuditLog.ISummary":{"type":"object","properties":{"pagination":{"$ref":"#/components/schemas/IPage.IPagination","description":"Page information."},"data":{"type":"array","items":{"$ref":"#/components/schemas/IAuctionPlatformScheduleAuditLog.ISummary"},"description":"List of records."}},"required":["pagination","data"],"description":"A page.\n\nCollection of records with pagination information."},"IAuctionPlatformGuest":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key unique identifier for the guest user."},"email":{"type":"string","description":"Guest user's email address for identification and notifications. Unique to ensure no duplicate guest records."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Guest display nickname visible on platform chats and leaderboards. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp for auditing purposes."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the latest update of the guest record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp; null if active."}},"required":["id","email","created_at","updated_at"],"description":"Guest user identities allowing limited view-only access without login credentials; primarily tracked by email and nickname. Includes timestamps for creation and soft deletion enabling audit and recovery."},"IAuctionPlatformGuest.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Guest user's email address for identification and notifications. Unique to ensure no duplicate guest records."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Guest display nickname visible on platform chats and leaderboards."}},"required":["email"],"description":"Request body schema to create a guest user account with unique email and optional nickname.\n\nFields id, created_at, updated_at, and deleted_at are managed internally and not provided in the request."},"IAuctionPlatformGuest.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token used to obtain new access tokens. Required for token renewal."}},"required":["refresh_token"],"description":"Request body schema for refreshing guest user tokens using a valid refresh token."},"IAuctionPlatformGuest.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the authenticated guest user."},"email":{"type":"string","description":"Guest user's email address for identification and notifications. Unique to ensure no duplicate guest records."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Guest display nickname visible on platform chats and leaderboards. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp for auditing purposes."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp for the latest update of the guest record."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp; null if active."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","created_at","updated_at","token"],"description":"Authorization response containing JWT tokens for the guest user after successful authentication or registration."},"IAuctionPlatformMember":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key unique identifier for the member user."},"email":{"type":"string","description":"Member's unique email address used for login and notifications."},"password_hash":{"type":"string","description":"Hashed password for secure authentication processes. Not stored in plaintext."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Member's display nickname on platform and auction chats. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Account creation timestamp for audit trail."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for account data."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp indicating account deactivation; null if active."}},"required":["id","email","password_hash","created_at","updated_at"],"description":"Registered members (team leaders) authorized to bid in auctions. Stores authentication data including password hash and unique email. Maintains point of contact and display nickname. Includes timestamps and soft deletion to enable auditing and account lifecycle management."},"IAuctionPlatformMember.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Member's unique email address used for login and notifications."},"password":{"type":"string","description":"Password in plaintext for initial registration, will be hashed by the system."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Member's display nickname on platform and auction chats."}},"required":["email","password"],"description":"Request body schema for new member registration including email, plaintext password, and optional nickname.\n\nThe password field must be provided by the client in plaintext and will be hashed by the server."},"IAuctionPlatformMember.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Member's unique identifier."},"email":{"type":"string","description":"Member's unique email address used for login and notifications."},"password_hash":{"type":"string","description":"Hashed password for secure authentication processes. Not stored in plaintext."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Member's display nickname on platform and auction chats. Nullable."},"created_at":{"type":"string","format":"date-time","description":"Account creation timestamp for audit trail."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for account data."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp indicating account deactivation; null if active."},"access_token":{"type":"string","description":"JWT access token string for authenticated API calls."},"refresh_token":{"type":"string","description":"Refresh token string allowing token renewal."},"expires_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional token expiration timestamp in ISO 8601 date-time."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","password_hash","created_at","updated_at","token"],"description":"Authorization response containing JWT tokens.\n\nReturned upon successful login or token refresh."},"IAuctionPlatformMember.ILogin":{"type":"object","properties":{"email":{"type":"string","description":"Member's email address for authentication.","format":"email"},"password":{"type":"string","description":"Plaintext password for authentication."}},"required":["email","password"],"description":"Request body for member login operation."},"IAuctionPlatformMember.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token string for obtaining new access token."}},"required":["refresh_token"],"description":"Request body for member token refresh."},"IAuctionPlatformAdmin.ICreate":{"type":"object","properties":{"email":{"type":"string","description":"Admin's unique email.","format":"email"},"password":{"type":"string","description":"Plaintext password for registration."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional nickname for display."}},"required":["email","password"],"description":"Request body for creating a new admin user (registration)."},"IAuctionPlatformAdmin":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique ID of the admin user.\n\n@format uuid"},"email":{"type":"string","description":"Admin's unique email address used for authentication and notifications.\n\nMust be a valid email format."},"password_hash":{"type":"string","description":"Secure hashed password for administrator login.\n\nThis is stored securely and should never be exposed in responses."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Admin display nickname for identification in admin tools and logs.\n\nNullable, may be null if not set."},"created_at":{"type":"string","description":"Timestamp when the admin record was created for auditing.\n\nISO 8601 datetime format.","format":"date-time"},"updated_at":{"type":"string","description":"Timestamp of last update on the admin record for audit tracking.\n\nISO 8601 datetime format.","format":"date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp indicating admin deactivation; null if active.\n\nNullable to represent active status.\nISO 8601 datetime format or null."}},"required":["id","email","password_hash","created_at","updated_at"],"description":"Admin user entity with secure credentials and audit timestamps. Stores unique email, hashed password, optional nickname, and soft deletion status."},"IAuctionPlatformAdmin.ILogin":{"type":"object","properties":{"email":{"type":"string","description":"Admin email for login purpose"},"password":{"type":"string","description":"Admin password for login purpose"}},"required":["email","password"],"description":"Login request for administrator user containing email and password for authentication."},"IAuctionPlatformAdmin.IRefresh":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token string used to obtain new JWT tokens"}},"required":["refresh_token"],"description":"Request structure for refreshing administrator JWT tokens using a valid refresh token."},"IAuctionPlatformAdmin.IAuthorized":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the admin"},"email":{"type":"string","description":"Admin's unique email address used for authentication and notifications.\n\nMust be a valid email format."},"password_hash":{"type":"string","description":"Secure hashed password for administrator login.\n\nThis is stored securely and should never be exposed in responses."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Admin display nickname for identification in admin tools and logs.\n\nNullable, may be null if not set."},"created_at":{"type":"string","description":"Timestamp when the admin record was created for auditing.\n\nISO 8601 datetime format.","format":"date-time"},"updated_at":{"type":"string","description":"Timestamp of last update on the admin record for audit tracking.\n\nISO 8601 datetime format.","format":"date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp indicating admin deactivation; null if active.\n\nNullable to represent active status.\nISO 8601 datetime format or null."},"token":{"$ref":"#/components/schemas/IAuthorizationToken","description":"JWT token information for authentication"}},"required":["id","email","password_hash","created_at","updated_at","token"],"description":"Authorization response containing JWT token for administrator user."},"IAuctionPlatformApiIntegrations.IRequest":{"type":"object","properties":{"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter string to search API integrations"},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter active status of the API integration"},"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number for pagination"},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Number of items per page"},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort order parameters"}},"required":[],"description":"Parameters for filtering, sorting, and paginating auction platform API integration records."},"IAuctionPlatformApiIntegrations":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID of the API integration record.\n\nUniquely identifies the integration configuration."},"name":{"type":"string","description":"Unique name of the external API integration.\n\nThis name identifies the integration."},"api_key":{"type":"string","description":"API key or token used for authentication with the external service.\n\nThis field should be kept secure and not exposed in responses."},"endpoint_url":{"type":"string","description":"Base URL endpoint of the external API service.\n\nCan be very long (up to 80000 characters)."},"active":{"type":"boolean","description":"Flag indicating if this integration is currently active.\n\nTrue means integration is enabled."},"created_at":{"type":"string","format":"date-time","description":"Timestamp representing when this integration was created.\n\nISO 8601 formatted date-time string with timezone."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp representing when this integration was last updated.\n\nISO 8601 formatted date-time string with timezone."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional timestamp for soft deletion.\n\nNull if the record is active and not deleted."}},"required":["id","name","api_key","endpoint_url","active","created_at","updated_at"],"description":"Represents an external API integration configuration for the auction platform.\n\nIncludes API keys, endpoint URLs, and activation status. Supports auditing timestamps and soft deletion for lifecycle management."},"IAuctionPlatformApiIntegrations.ICreate":{"type":"object","properties":{"name":{"type":"string","description":"Unique name for the new API integration."},"api_key":{"type":"string","description":"API key or secret token for accessing the external service."},"endpoint_url":{"type":"string","description":"Endpoint URL of the external API."},"active":{"type":"boolean","description":"Boolean flag to mark the integration as active or inactive."}},"required":["name","api_key","endpoint_url","active"],"description":"Request schema for creating a new Auction Platform API integration.\n\nClients must provide all required fields: unique name, api key, endpoint URL, and active status.\n\nThis schema excludes auditing timestamps and IDs as those are generated by the system."},"IAuctionPlatformApiIntegrations.IUpdate":{"type":"object","properties":{"name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated name of the API integration.\nOptional and nullable for partial updates."},"api_key":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated API key or token.\nOptional and nullable to allow unsetting."},"endpoint_url":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated endpoint URL.\nOptional and nullable for partial updates."},"active":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Updated active status flag.\nOptional and nullable."}},"required":[],"description":"Request schema for updating an existing Auction Platform API integration.\n\nAll fields are optional and nullable to support partial updates.\n\nIncludes properties for name, api_key, endpoint_url, and active status with null allowed to unset or indicate no change."},"IAuctionPlatformRateLimit.IRequest":{"type":"object","properties":{"component_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional filter for component name search."},"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional page number for pagination."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional limit of records per page."},"min_requests_per_minute":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional minimum requests per minute filter."},"max_requests_per_minute":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional maximum requests per minute filter."}},"required":[],"description":"Request schema for searching and filtering Auction Platform rate limits.\n\nSupports pagination and filtering by component name and requests per minute range.\n\nAll properties are optional to allow flexible query criteria."},"IAuctionPlatformRateLimit":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier for this rate limit record."},"component_name":{"type":"string","description":"Name of the component this rate limit applies to, unique across the system."},"max_requests_per_minute":{"type":"integer","format":"int32","description":"Maximum number of requests allowed per minute for the component."},"max_requests_per_hour":{"type":"integer","format":"int32","description":"Maximum number of requests allowed per hour for the component."},"max_requests_per_day":{"type":"integer","format":"int32","description":"Maximum number of requests allowed per day for the component."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp; null if not deleted."}},"required":["id","component_name","max_requests_per_minute","max_requests_per_hour","max_requests_per_day","created_at","updated_at"],"description":"Auction Platform Rate Limit interface represents a policy defining limits on request frequency to various components. It includes unique component name and maximum request thresholds per minute, hour, and day. This interface corresponds to the 'auction_platform_rate_limits' table in the database."},"IAuctionPlatformRateLimit.ICreate":{"type":"object","properties":{"component_name":{"type":"string","description":"Name of the component to assign the rate limit to."},"max_requests_per_minute":{"type":"integer","format":"int32","description":"Maximum requests per minute allowed for component."},"max_requests_per_hour":{"type":"integer","format":"int32","description":"Maximum requests per hour allowed for component."},"max_requests_per_day":{"type":"integer","format":"int32","description":"Maximum requests per day allowed for component."}},"required":["component_name","max_requests_per_minute","max_requests_per_hour","max_requests_per_day"],"description":"Data required to create a new auction platform rate limit record. Must include component_name and max request thresholds. Created and updated timestamps managed by the system; id and deleted_at are omitted here."},"IAuctionPlatformAuctionPlatformRateLimit":{"type":"object","properties":{"id":{"type":"string","description":"Unique identifier of the rate limit record."},"component_name":{"type":"string","description":"Component name governed by this rate limit."},"max_requests_per_minute":{"type":"integer","format":"int32","description":"Max requests per minute allowed."},"max_requests_per_hour":{"type":"integer","format":"int32","description":"Max requests per hour allowed."},"max_requests_per_day":{"type":"integer","format":"int32","description":"Max requests per day allowed."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp; null if record is active."}},"required":["id","component_name","max_requests_per_minute","max_requests_per_hour","max_requests_per_day","created_at","updated_at"],"description":"Update payload for the auction platform rate limits entity. Allows modifying component name and max request thresholds. Does not include create timestamps or soft delete field."},"IAuctionPlatformAuctionPlatformRateLimit.IUpdate":{"type":"object","properties":{"component_name":{"type":"string","description":"Component name to update."},"max_requests_per_minute":{"type":"integer","format":"int32","description":"Max requests per minute allowed after update."},"max_requests_per_hour":{"type":"integer","format":"int32","description":"Max requests per hour allowed after update."},"max_requests_per_day":{"type":"integer","format":"int32","description":"Max requests per day allowed after update."}},"required":["component_name","max_requests_per_minute","max_requests_per_hour","max_requests_per_day"],"description":"Properties allowed for updating a rate limit record. All fields except id and timestamps are required for update."},"IAuctionPlatformAuctionPlatformAuditLog.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Limitation of records per a page."},"user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reference to system user performing the action, if applicable."},"action":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Description of the performed action or event."},"date_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Start datetime filter for audit logs."},"date_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End datetime filter for audit logs."},"sort_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sorting field name."}},"required":[],"description":"Search criteria and pagination parameters for audit log filtering."},"IAuctionPlatformAuctionPlatformAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reference to system user performing the action, if applicable."},"action":{"type":"string","description":"Description of the performed action or event."},"details":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed context or metadata associated with the action."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this audit log entry was created."}},"required":["id","action","created_at"],"description":"Records system audit logs capturing significant operations, state changes, and administrative actions across the auction platform. Supports monitoring, analytics, and compliance requirements."},"IAuctionPlatformGuest.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Page number."},"limit":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Limitation of records per a page."},"email":{"oneOf":[{"type":"string","format":"email"},{"type":"null"}],"description":"Guest user's email address for identification and notifications. Unique to ensure no duplicate guest records."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Guest display nickname visible on platform chats and leaderboards."},"sort_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sorting field name."}},"required":[],"description":"Search criteria and pagination parameters for filtering guest users."},"IAuctionPlatformGuest.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"Guest user's email address for identification and notifications. Unique to ensure no duplicate guest records."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Guest display nickname visible on platform chats and leaderboards. Nullable."}},"required":[],"description":"Request body to update existing guest user details such as email and nickname."},"IAuctionPlatformMember.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"integer","format":"uint32"},{"type":"null"}],"description":"Page number."},"limit":{"oneOf":[{"type":"integer","format":"uint32"},{"type":"null"}],"description":"Limitation of records per a page."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search keyword for member filtering."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sorting criteria."}},"required":[],"description":"Request type for searching and paginating auction platform members."},"IAuctionPlatformMember.IUpdate":{"type":"object","properties":{"email":{"type":"string","description":"Member's unique email address used for login and notifications."},"password_hash":{"type":"string","description":"Hashed password for secure authentication processes. Not stored in plaintext."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Member's display nickname on platform and auction chats. Nullable."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp indicating account deactivation; null if active."}},"required":[],"description":"Request body for updating member user details; supports partial updates."},"IAuctionPlatformAdmin.IRequest":{"type":"object","properties":{"email":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search filter: optional partial or full match by email.\n\nNullable for optional filtering."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search filter: optional partial or full match by nickname.\n\nNullable if no filter is applied."},"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Optional paging: page number,\nunsigned 32-bit integer."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Optional paging: number of records per page,\nunsigned 32-bit integer."}},"required":[],"description":"Request schema for filtering and paginating auction platform admin users."},"IAuctionPlatformAdmin.IUpdate":{"type":"object","properties":{"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Admin display nickname for identification in admin tools and logs.\n\nNullable to allow removing or changing it."}},"required":[],"description":"Update schema for auction platform admin user profile."},"IAuctionPlatformAuctionRoom":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the auction room in UUID format."},"streamer_name":{"type":"string","description":"Name of the streamer who owns this auction room.\n\nUsed to identify the auction room by streamer's unique name."},"start_time":{"type":"string","format":"date-time","description":"Scheduled start time of the auction room.\n\nISO 8601 date-time string representing when the auction begins."},"end_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional scheduled end time of the auction room.\n\nISO 8601 date-time string or null if no end time is specified."},"status":{"type":"string","description":"Status of the auction room.\n\nA value such as \"open\", \"closed\", \"pending\" representing auction lifecycle state."},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp.\n\nISO 8601 date-time string when the record was created."},"updated_at":{"type":"string","format":"date-time","description":"Record last updated timestamp.\n\nISO 8601 date-time string when the record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for marking deletion.\n\nISO 8601 date-time string or null if not deleted."}},"required":["id","streamer_name","start_time","status","created_at","updated_at"],"description":"Auction room information managed per streamer with schedule data and\nauction lifecycle status. This entity tracks start/end times, status, and\nauditing timestamps."},"IAuctionPlatformAuctionRoom.IRequest":{"type":"object","properties":{"streamer_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by streamer name substring search.\n\nNullable for optional filtering."},"status":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by status substring search.\n\nNullable for optional filtering."},"start_time_gte":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter by start time minimum (inclusive).\n\nISO 8601 date-time format.\nNullable to allow no lower bound."},"start_time_lte":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter by start time maximum (inclusive).\n\nISO 8601 date-time format.\nNullable to allow no upper bound."},"end_time_gte":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter by end time minimum (inclusive).\n\nISO 8601 date-time format.\nNullable for optional filtering."},"end_time_lte":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter by end time maximum (inclusive).\n\nISO 8601 date-time format.\nNullable."},"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination parameters: page number.\n\nUnsigned 32-bit integer.\nNullable."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Pagination parameters: number of records per page.\n\nUnsigned 32-bit integer.\nNullable."},"sort":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort by multiple fields with direction - can be comma separated list.\nNullable. Example: \"start_time:desc,status:asc\""}},"required":[],"description":"Request schema for filtering, searching, pagination and sorting auction rooms."},"IAuctionPlatformAuctionRoom.ICreate":{"type":"object","properties":{"streamer_name":{"type":"string","description":"Name of the streamer who owns this auction room.\n\nMandatory for creating a new auction room."},"start_time":{"type":"string","format":"date-time","description":"Scheduled start time of the auction room.\n\nMandatory ISO 8601 date-time string."},"end_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional scheduled end time of the auction room.\n\nISO 8601 date-time string or null if no end time is specified."},"status":{"type":"string","description":"Status of the auction room.\n\nMandatory string state such as \"open\", \"closed\", or \"pending\"."}},"required":["streamer_name","start_time","status"],"description":"Request body for creating a new auction room."},"IAuctionPlatformAuctionRoom.IUpdate":{"type":"object","properties":{"streamer_name":{"type":"string","description":"Name of the streamer who owns this auction room.\n\nOptional for update. If not provided, value remains unchanged."},"start_time":{"type":"string","format":"date-time","description":"Scheduled start time of the auction room.\n\nOptional ISO 8601 date-time string."},"end_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional scheduled end time of the auction room.\n\nISO 8601 date-time string or null."},"status":{"type":"string","description":"Status of the auction room.\n\nOptional string state such as \"open\", \"closed\", or \"pending\"."}},"required":[],"description":"Request body for updating an auction room."},"IAuctionPlatformAuctionCandidates.IRequest":{"type":"object","properties":{"page":{"type":"number","format":"float","minimum":0,"description":"Page number.\n\nPagination page index, unsigned integer."},"limit":{"type":"number","format":"float","minimum":1,"description":"Limitation of records per a page.\n\nDefault is 100 if not specified."},"search":{"type":"string","description":"Search keyword to filter auction candidates by nickname or other fields."},"sort_by":{"type":"string","description":"Sorting option.\n\nPossible values might be: \"nickname_asc\", \"nickname_desc\", \"created_at_asc\", \"created_at_desc\"."}},"required":[],"description":"Request body for searching auction candidates with pagination, filtering and sorting."},"IAuctionPlatformAuctionCandidate":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for the auction candidate."},"user_id":{"type":"string","format":"uuid","description":"Identifier referencing the member user who is the auction candidate.\n\nReferences auction_platform_members.id."},"nickname":{"type":"string","description":"Candidate's display nickname in auctions."},"season_stats":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Serialized or JSON string holding game season statistics.\n\nNullable; may be omitted if not available."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when candidate record was created.\n\nISO 8601 date-time string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when candidate record was last updated.\n\nISO 8601 date-time string."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp to mark record removal.\n\nNullable; if not null, candidate is considered deleted."}},"required":["id","user_id","nickname","created_at","updated_at"],"description":"Auction candidate entity representing registered users as auction candidates.\n\nIncludes user association, nickname, performance stats, and audit timestamps."},"IAuctionPlatformAuctionCandidate.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Identifier referencing the member user who is the auction candidate.\n\nRequired for creation; must be a valid UUID."},"nickname":{"type":"string","description":"Candidate's display nickname in auctions.\n\nRequired for creation."},"season_stats":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Serialized or JSON string holding game season statistics.\n\nOptional; can be null."}},"required":["user_id","nickname"],"description":"Request schema for creating a new auction candidate.\n\nRequires user_id and nickname, optional season stats."},"IAuctionPlatformAuctionCandidate.IUpdate":{"type":"object","properties":{"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Candidate's display nickname in auctions.\n\nOptional; can be null."},"season_stats":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Serialized or JSON string holding game season statistics.\n\nOptional; can be null."}},"required":[],"description":"Request schema for updating an auction candidate.\n\nOnly nickname and season stats can be modified."},"IAuctionPlatformTeamLeader.IRequest":{"type":"object","properties":{"page":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Page number for pagination.\n\nOptional; if null, the default page is 1."},"limit":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Limit of records per page.\n\nOptional; if null, default limit is applied."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Search keyword for filtering team leaders based on member nickname.\n\nOptional; can be null for no filtering."},"minAvailablePoints":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Minimum available points filter.\n\nOptional; can be null."},"maxAvailablePoints":{"oneOf":[{"type":"number"},{"type":"null"}],"description":"Maximum available points filter.\n\nOptional; can be null."}},"required":[],"description":"Request schema for querying auction team leaders.\n\nIncludes pagination and filtering by nickname and available points."},"IAuctionPlatformTeamLeader":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for the team leader."},"member_id":{"type":"string","format":"uuid","description":"References the member user who is the team leader.\n\nMaps to auction_platform_members.id."},"available_points":{"type":"integer","description":"Points currently available for auction bidding by the team leader.\n\nThis value represents the total points the team leader can allocate for bidding in auctions."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for team leader record."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for team leader record."}},"required":["id","member_id","available_points","created_at","updated_at"],"description":"Represents a team leader participating in auctions with point allocation and profile linkage to member users.\n\nCorresponds to the auction_platform_team_leaders table in the database.\n\nProperties include unique ID, member linkage, available bidding points, and audit timestamps."},"IAuctionPlatformTeamLeaders.ICreate":{"type":"object","properties":{"member_id":{"type":"string","format":"uuid","description":"References the member user who is the team leader. Must link to existing member.\n\nRequired for team leader creation."},"available_points":{"type":"integer","description":"Points initially available for bidding when creating the team leader.\n\nThis field is typically initialized by the system."}},"required":["member_id","available_points"],"description":"Request type for creating a new auction team leader with required member association and initial bidding points. Does not accept IDs or timestamps as these are auto-generated."},"IAuctionPlatformTeamLeaders.IUpdate":{"type":"object","properties":{"member_id":{"type":"string","format":"uuid","description":"References the member user who is the team leader.\n\nUsually not updatable, included as optional."},"available_points":{"type":"integer","description":"Points currently available for auction bidding by the team leader.\n\nOptional for update operations."}},"required":[],"description":"Request type for updating an existing auction team leader record. Fields are optional to allow partial updates. Member association is generally immutable but can be optionally updated as per business rules."},"IAuctionPlatformTeamLeaders":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for the team leader."},"member_id":{"type":"string","format":"uuid","description":"References the member user who is the team leader.\n\nMaps to auction_platform_members.id."},"available_points":{"type":"integer","description":"Points currently available for auction bidding by the team leader.\n\nThis value represents the total points the team leader can allocate for bidding in auctions."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp for team leader record."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for team leader record."}},"required":["id","member_id","available_points","created_at","updated_at"],"description":"Represents a team leader participating in auctions with point allocation and profile linkage to member users.\n\nCorresponds to the auction_platform_team_leaders table in the database.\n\nProperties include unique ID, member linkage, available bidding points, and audit timestamps."},"IAuctionPlatformBids.IRequest":{"type":"object","properties":{"page":{"type":"integer","format":"int32","description":"Page number for pagination"},"limit":{"type":"integer","format":"int32","description":"Max items per page"},"auction_room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the auction room to filter"},"auction_candidate_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the auction candidate to filter"},"team_leader_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the team leader to filter"},"bid_time_start":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Start timestamp for bid time filtering"},"bid_time_end":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"End timestamp for bid time filtering"},"is_winning":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Filter bids that are currently winning"},"order_by":{"oneOf":[{"const":"bid_time"},{"const":"bid_points"},{"type":"null"}],"description":"Field to order by"},"order_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Direction of ordering"}},"description":"Request parameters for filtering and paginating auction bids.","required":[]},"IAuctionPlatformBid":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary key UUID of the bid"},"auction_room_id":{"type":"string","format":"uuid","description":"UUID of the auction room"},"auction_candidate_id":{"type":"string","format":"uuid","description":"UUID of the auction candidate"},"team_leader_id":{"type":"string","format":"uuid","description":"UUID of the team leader making the bid"},"bid_points":{"type":"integer","format":"int32","description":"Points bid"},"bid_time":{"type":"string","format":"date-time","description":"Bid timestamp in ISO8601 format"},"is_winning":{"type":"boolean","description":"Whether this bid is currently winning"},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp"},"updated_at":{"type":"string","format":"date-time","description":"Record last update timestamp"}},"required":["id","auction_room_id","auction_candidate_id","team_leader_id","bid_points","bid_time","is_winning","created_at","updated_at"],"description":"Auction bid entity representing bids made by team leaders on auction candidates within specific auction rooms."},"IAuctionPlatformBid.ICreate":{"type":"object","properties":{"auction_room_id":{"type":"string","format":"uuid","description":"UUID of the auction room"},"auction_candidate_id":{"type":"string","format":"uuid","description":"UUID of the auction candidate"},"team_leader_id":{"type":"string","format":"uuid","description":"UUID of the team leader making the bid"},"bid_points":{"type":"integer","format":"int32","description":"Points bid, positive integer"},"bid_time":{"type":"string","format":"date-time","description":"Bid timestamp in ISO8601 format"}},"required":["auction_room_id","auction_candidate_id","team_leader_id","bid_points","bid_time"],"description":"Parameters required to create a new auction bid record."},"IAuctionPlatformBid.IUpdate":{"type":"object","properties":{"auction_room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the auction room"},"auction_candidate_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the auction candidate"},"team_leader_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"UUID of the team leader making the bid"},"bid_points":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Points bid, positive integer"},"bid_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Bid timestamp in ISO8601 format"},"is_winning":{"oneOf":[{"type":"boolean"},{"type":"null"}],"description":"Whether this bid is currently winning"}},"required":[],"description":"Parameters for updating an existing auction bid record. All fields optional to allow partial updates."},"IAuctionPlatformPointBalances.IRequest":{"type":"object","description":"Request type for searching and paginating auction platform point balances.\nSupports optional pagination, search text, complex filter conditions, and sorting options.\n\nIncludes:\n- `page`: pagination page number, zero or positive integer\n- `limit`: number of records per page, positive integer\n- `search`: general text search, nullable to disable\n- `filter`: detailed conditions on team leader ID, auction room ID, points allocated and used range\n- `orderBy`: specification of field and direction for sorting\n\nAll properties are optional and nullable to allow flexible queries.","properties":{"page":{"oneOf":[{"type":"integer","minimum":0},{"type":"null"}],"description":"Page number for pagination; zero or positive integer."},"limit":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Limit of records per page; positive integer."},"search":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"General search text; can be null to disable."},"filter":{"oneOf":[{"type":"object","description":"Filter conditions for auction platform point balances.","properties":{"team_leader_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by team leader UUID."},"auction_room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by auction room UUID."},"min_points_allocated":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Filter minimal allocated points."},"max_points_allocated":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Filter maximal allocated points."},"min_points_used":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Filter minimal used points."},"max_points_used":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Filter maximal used points."}},"required":[]},{"type":"null"}],"description":"Filter conditions for auction platform point balances."},"orderBy":{"oneOf":[{"type":"object","description":"Sort order for results.","properties":{"field":{"oneOf":[{"const":"points_allocated","description":"Field name for ordering."},{"const":"points_used","description":"Field name for ordering."},{"const":"created_at","description":"Field name for ordering."},{"const":"updated_at","description":"Field name for ordering."}],"description":"Field name for ordering."},"direction":{"oneOf":[{"const":"asc","description":"Order direction."},{"const":"desc","description":"Order direction."}],"description":"Order direction."}},"required":["field","direction"]},{"type":"null"}],"description":"Sort order for results."}},"required":[]},"IAuctionPlatformPointBalance":{"type":"object","description":"Detailed record representing auction points allocated and used by a team leader within a specific auction room.","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for auction platform point balance record."},"team_leader_id":{"type":"string","format":"uuid","description":"UUID of the team leader this point balance belongs to."},"auction_room_id":{"type":"string","format":"uuid","description":"UUID of the auction room associated with this point balance."},"points_allocated":{"type":"integer","description":"Total auction points allocated to the team leader."},"points_used":{"type":"integer","description":"Total auction points that the team leader has spent."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the point balance was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the point balance record was last updated."}},"required":["id","team_leader_id","auction_room_id","points_allocated","points_used","created_at","updated_at"]},"IAuctionPlatformPointBalance.ICreate":{"type":"object","description":"Request body for creating a new auction platform point balance record.","properties":{"team_leader_id":{"type":"string","format":"uuid","description":"UUID reference to the team leader to allocate points to."},"auction_room_id":{"type":"string","format":"uuid","description":"UUID reference to the auction room associated with the allocation."},"points_allocated":{"type":"integer","description":"Number of auction points allocated to the team leader for bidding."},"points_used":{"type":"integer","description":"Number of auction points already used by the team leader."}},"required":["team_leader_id","auction_room_id","points_allocated","points_used"]},"IAuctionPlatformPointBalance.IUpdate":{"type":"object","description":"Request body for updating an existing auction platform point balance record. All fields are optional and nullable.","properties":{"team_leader_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional updated UUID reference to a team leader."},"auction_room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional updated UUID reference to an auction room."},"points_allocated":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional updated total of auction points allocated."},"points_used":{"oneOf":[{"type":"integer"},{"type":"null"}],"description":"Optional updated total of auction points used."}},"required":[]},"IAuctionPlatformChatMessage.IRequest":{"type":"object","properties":{"auction_platform_auction_room_id":{"type":"string","format":"uuid","description":"Auction room ID to filter messages.\n\n@format uuid\n@nullable"},"auction_platform_team_leader_id":{"type":"string","format":"uuid","description":"Team leader ID filter.\n\n@format uuid\n@nullable"},"message_search":{"type":"string","description":"Filter chat messages containing this substring.\n\n@nullable"},"created_at_start":{"type":"string","format":"date-time","description":"Start timestamp for filtering messages.\n\n@format date-time\n@nullable"},"created_at_end":{"type":"string","format":"date-time","description":"End timestamp for filtering messages.\n\n@format date-time\n@nullable"},"page":{"type":"number","description":"Page number for pagination.\n\n@nullable"},"limit":{"type":"number","description":"Number of records per page.\n\n@nullable"},"order_by":{"type":"string","description":"Sort order string, e.g., 'created_at desc'.\n\n@nullable"}},"required":[],"description":"Request schema for searching and paginating chat messages.\n\nIncludes filters by auction room, team leader, message content, date ranges, etc."},"IAuctionPlatformChatMessage":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the chat message.\n\n@format uuid\n@example \"123e4567-e89b-12d3-a456-426614174000\""},"auction_platform_auction_room_id":{"type":"string","format":"uuid","description":"Foreign key to auction room id where the chat is posted.\n\n@format uuid"},"auction_platform_team_leader_id":{"type":"string","format":"uuid","description":"Foreign key to team leader posting this message.\n\n@format uuid"},"chijijik_message_id":{"type":"string","description":"Unique ID from Chijijik API for this chat message."},"message":{"type":"string","description":"The actual chat message content."},"sender_name":{"type":"string","description":"Name of the message sender."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp of the message.\n\n@format date-time\n@example \"2025-09-15T12:34:56.789Z\""},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp for the message.\n\n@format date-time"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp - null if active.\n\n@format date-time\n@nullable"}},"required":["id","auction_platform_auction_room_id","auction_platform_team_leader_id","chijijik_message_id","message","sender_name","created_at","updated_at","deleted_at"],"description":"Auction platform chat message interface types.\n\nCore entity representing chat messages collected via Chijijik API, linked to auction rooms and team leaders.\nIncludes immutable fields managed by the system and mutable fields for chat content.\n\n@namespace IAuctionPlatformChatMessage\n@author AutoBE\n"},"IAuctionPlatformChatMessage.ICreate":{"type":"object","properties":{"auction_platform_auction_room_id":{"type":"string","format":"uuid","description":"Auction room ID where this chat message belongs.\n\n@format uuid"},"auction_platform_team_leader_id":{"type":"string","format":"uuid","description":"Team leader ID posting this message.\n\n@format uuid"},"chijijik_message_id":{"type":"string","description":"Unique chat message ID from Chijijik system."},"message":{"type":"string","description":"Chat message content."},"sender_name":{"type":"string","description":"Sender's display name."}},"required":["auction_platform_auction_room_id","auction_platform_team_leader_id","chijijik_message_id","message","sender_name"],"description":"Payload to create a new chat message.\n\nContains necessary foreign keys and message content.\nFields id, created_at, updated_at, deleted_at are system managed."},"IAuctionPlatformChatMessage.IUpdate":{"type":"object","properties":{"auction_platform_auction_room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Updated auction room ID.\n\n@format uuid\n@nullable"},"auction_platform_team_leader_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Updated team leader ID.\n\n@format uuid\n@nullable"},"chijijik_message_id":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated Chijijik message ID.\n\n@nullable"},"message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated chat message content.\n\n@nullable"},"sender_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Updated sender name.\n\n@nullable"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Updated deletion timestamp to soft delete or restore message.\n\n@format date-time\n@nullable"}},"required":[],"description":"Payload to update existing chat message.\n\nAll fields optional to allow partial update except id which is path param."},"IAuctionPlatformSponsorshipEvent.IRequest":{"type":"object","properties":{"auction_room_id":{"oneOf":[{"type":"string","description":"Filter by auction room ID."},{"type":"null"}],"description":"Filter by auction room ID."},"member_id":{"oneOf":[{"type":"string","description":"Filter by member ID."},{"type":"null"}],"description":"Filter by member ID."},"donor_name":{"oneOf":[{"type":"string","description":"Filter by donor name (partial match supported)."},{"type":"null"}],"description":"Filter by donor name (partial match supported)."},"min_donation_amount":{"oneOf":[{"type":"number","description":"Filter by min donation amount."},{"type":"null"}],"description":"Filter by min donation amount."},"max_donation_amount":{"oneOf":[{"type":"number","description":"Filter by max donation amount."},{"type":"null"}],"description":"Filter by max donation amount."},"page":{"oneOf":[{"type":"number","description":"Pagination: page number (uint32).","format":"uint32"},{"type":"null"}],"description":"Pagination: page number (uint32)."},"limit":{"oneOf":[{"type":"number","description":"Pagination: items per page (uint32).","format":"uint32"},{"type":"null"}],"description":"Pagination: items per page (uint32)."},"order_by":{"oneOf":[{"type":"string","description":"Sort order: e.g. \"created_at DESC\" or \"donation_amount ASC\"."},{"type":"null"}],"description":"Sort order: e.g. \"created_at DESC\" or \"donation_amount ASC\"."}},"required":[],"description":"Filter parameters for paginated retrieval of sponsorship events."},"IAuctionPlatformSponsorshipEvent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier for the sponsorship event record."},"auction_room_id":{"type":"string","format":"uuid","description":"Related auction room ID.\n\nReferences auction_platform_auction_rooms.id. Identifies the auction room where the event occurred."},"member_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Associated member (team leader) ID.\n\nReferences auction_platform_members.id, nullable if not associated with a member."},"donor_name":{"type":"string","description":"Name of the donor or sponsor.\n\nMay be a display name or anonymous."},"donation_amount":{"type":"number","format":"double","description":"Amount donated in this sponsorship event.\n\nStored as a double precision float representing donation value."},"message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional message included with the sponsorship."},"chijijik_sponsorship_id":{"type":"string","description":"Unique identifier for this sponsorship event from the Chijijik API.\n\nUsed to prevent duplicate records."},"animated":{"type":"boolean","description":"Flag indicating if an animation was triggered for this sponsorship."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp marking soft deletion; null if active."}},"required":["id","auction_room_id","donor_name","donation_amount","chijijik_sponsorship_id","animated","created_at","updated_at"],"description":"Represents a sponsorship event record capturing details of donations during auctions. Includes donor info, amounts, messages, associated auction room and member, and state flags."},"IAuctionPlatformSponsorshipEvent.ICreate":{"type":"object","properties":{"auction_room_id":{"type":"string","format":"uuid","description":"Related auction room ID."},"member_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Associated member (team leader) ID, optional."},"donor_name":{"type":"string","description":"Donor or sponsor name."},"donation_amount":{"type":"number","format":"double","description":"Donation amount."},"message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional sponsorship message."},"chijijik_sponsorship_id":{"type":"string","description":"Unique Chijijik sponsorship ID."},"animated":{"type":"boolean","description":"Flag for animation triggered."}},"required":["auction_room_id","donor_name","donation_amount","chijijik_sponsorship_id","animated"],"description":"Data required to create a new sponsorship event record."},"IAuctionPlatformSponsorshipEvent.IUpdate":{"type":"object","properties":{"auction_room_id":{"type":"string","format":"uuid","description":"Related auction room ID."},"member_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Associated member (team leader) ID, optional."},"donor_name":{"type":"string","description":"Donor or sponsor name."},"donation_amount":{"type":"number","format":"double","description":"Donation amount."},"message":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional sponsorship message."},"chijijik_sponsorship_id":{"type":"string","description":"Unique Chijijik sponsorship ID."},"animated":{"type":"boolean","description":"Flag for animation triggered."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when this record was created."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when this record was last updated."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp marking soft deletion; null if active."}},"required":[],"description":"Data structure for updating an existing sponsorship event record. All fields are optional except timestamps and deletion flag."},"IAuctionPlatformSponsorshipAnimation":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the sponsorship animation.\n\nPrimary key UUID."},"animation_name":{"type":"string","description":"Name of the animation file.\n\nExample: \"fireworks.json\""},"file_uri":{"type":"string","description":"URI location of the animation file, e.g., S3 URL or CDN.\n\nMax length 80000 characters."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the animation."},"uploaded_by_member_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional UUID of the member who uploaded the animation."},"created_at":{"type":"string","format":"date-time","description":"Creation timestamp in ISO 8601 date-time format with timezone."},"updated_at":{"type":"string","format":"date-time","description":"Last update timestamp in ISO 8601 date-time format with timezone."},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft deletion timestamp; null if active."}},"required":["id","animation_name","file_uri","created_at","updated_at"],"description":"Sponsorship animation metadata for auction platform.\n\nThis entity captures metadata about custom animations used\nin sponsorship notifications to enhance auction user experience.\nIt includes properties such as animation name, file URI, optional\ndescription, uploader information, and timestamps for audit purposes."},"IAuctionPlatformSponsorshipAnimation.IRequest":{"type":"object","properties":{"search":{"oneOf":[{"type":"string","description":"Optional search keyword to filter animations by name or description."},{"type":"null"}],"description":"Optional search keyword to filter animations by name or description."},"page":{"oneOf":[{"type":"number","description":"Page number to retrieve; must be a non-negative integer.\n\n@default 1"},{"type":"null"}],"description":"Page number to retrieve; must be a non-negative integer.\n\n@default 1"},"limit":{"oneOf":[{"type":"number","description":"Number of records per page.\n\n@default 20"},{"type":"null"}],"description":"Number of records per page.\n\n@default 20"},"orderBy":{"oneOf":[{"type":"string","description":"Optional sort criteria, e.g. \"created_at\", \"animation_name\"."},{"type":"null"}],"description":"Optional sort criteria, e.g. \"created_at\", \"animation_name\"."},"orderDirection":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction.\nAllowed values: \"asc\", \"desc\"."}},"required":[],"description":"Paginated request for retrieving sponsorship animations with filtering, sorting, and pagination."},"IAuctionPlatformSponsorshipAnimation.ICreate":{"type":"object","properties":{"animation_name":{"type":"string","description":"Name of the animation file.\n\nExample: \"fireworks.json\""},"file_uri":{"type":"string","description":"URI location of the animation file, e.g., S3 URL or CDN.\n\nMax length 80000 characters."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the animation."},"uploaded_by_member_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional UUID of the member who uploaded the animation."}},"required":["animation_name","file_uri"],"description":"Request type for creating a new sponsorship animation.\n\nRequires animation_name and file_uri.\nOptional description and uploaded_by_member_id."},"IAuctionPlatformSponsorshipAnimation.IUpdate":{"type":"object","properties":{"animation_name":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Name of the animation file.\n\nExample: \"fireworks.json\""},"file_uri":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"URI location of the animation file, e.g., S3 URL or CDN.\n\nMax length 80000 characters."},"description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Optional detailed description of the animation."},"uploaded_by_member_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Optional UUID of the member who uploaded the animation."}},"required":[],"description":"Request type for updating an existing sponsorship animation.\n\nAll fields optional except id is not a member here."},"IAuctionPlatformCalendarEvents.IRequest":{"type":"object","properties":{"search_text":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter criteria to search and paginate auction platform calendar events.\n\nAllows filtering by fields such as streamer name, date ranges, and pagination\nsupport for efficient retrieval."},"page":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Pagination: page number."},"limit":{"oneOf":[{"type":"integer","format":"int32"},{"type":"null"}],"description":"Pagination: amount of records per page.\n\n@default 100"},"sort_by":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Sort field for listing calendar events.\n\nAllowed values typically include 'start_at', 'title', 'updated_at'."},"sort_direction":{"oneOf":[{"const":"asc"},{"const":"desc"},{"type":"null"}],"description":"Sort direction, either ascending or descending.\n\nEnum: 'asc', 'desc'"}},"required":[],"description":"Filter criteria and pagination parameters for calendar event retrieval"},"IAuctionPlatformCalendarEvent":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier for the calendar event"},"auction_platform_auction_room_id":{"type":"string","format":"uuid","description":"Reference to the linked auction room"},"title":{"type":"string","maxLength":255,"description":"Title or name of the calendar event"},"start_at":{"type":"string","format":"date-time","description":"Mandatory start date/time in ISO 8601 format"},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end date/time in ISO 8601 format; null if event ongoing"},"created_at":{"type":"string","format":"date-time","description":"Record creation timestamp"},"updated_at":{"type":"string","format":"date-time","description":"Last record update timestamp"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp, null if active"}},"required":["id","auction_platform_auction_room_id","title","start_at","created_at","updated_at"],"description":"Detailed information about a single auction calendar event."},"IAuctionPlatformCalendarEvent.ICreate":{"type":"object","properties":{"auction_platform_auction_room_id":{"type":"string","format":"uuid","description":"Reference to the linked auction room"},"title":{"type":"string","maxLength":255,"description":"Title or name of the calendar event"},"start_at":{"type":"string","format":"date-time","description":"Mandatory start date/time in ISO 8601 format"},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end date/time in ISO 8601 format; null if event ongoing"}},"required":["auction_platform_auction_room_id","title","start_at"],"description":"Properties required to create a new auction calendar event."},"IAuctionPlatformCalendarEvent.IUpdate":{"type":"object","properties":{"auction_platform_auction_room_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Reference to the linked auction room"},"title":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Title or name of the calendar event"},"start_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Mandatory start date/time in ISO 8601 format"},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end date/time in ISO 8601 format; null if event ongoing"}},"required":[],"description":"Properties allowed for updating an auction calendar event."},"IAuctionPlatformScheduleAuditLog.IRequest":{"type":"object","properties":{"schedule_event_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by specific calendar event ID."},"changed_by_user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Filter by user ID who made the changes."},"change_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Filter by change type string."},"changed_at_from":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter changes occurred on or after this timestamp."},"changed_at_to":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Filter changes occurred on or before this timestamp."},"page":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Page number for pagination. Defaults to 1 if not specified."},"limit":{"oneOf":[{"type":"integer","minimum":1},{"type":"null"}],"description":"Number of records per page. Defaults to 100 if not specified."}},"required":[],"description":"Search criteria and pagination parameters for filtering schedule audit logs."},"IAuctionPlatformScheduleAuditLog":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"schedule_event_id":{"type":"string","format":"uuid","description":"Referenced calendar event. Links audit log to auction_platform_calendar_events.id."},"changed_by_user_id":{"type":"string","format":"uuid","description":"User who made the change. Links to auction_platform_members.id."},"change_type":{"type":"string","description":"Type of change (e.g., create, update, delete)."},"change_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the change made."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp when the change occurred."}},"required":["id","schedule_event_id","changed_by_user_id","change_type","changed_at"],"description":"Audit logs capturing changes made to schedule records, providing a historical trail for compliance and troubleshooting.\n\nEach log entry records what was changed, who changed it, and when."},"IAuctionPlatformScheduleAuditLog.ICreate":{"type":"object","properties":{"schedule_event_id":{"type":"string","format":"uuid","description":"Referenced calendar event. Links audit log to auction_platform_calendar_events.id."},"changed_by_user_id":{"type":"string","format":"uuid","description":"User who made the change. Links to auction_platform_members.id."},"change_type":{"type":"string","description":"Type of change (e.g., create, update, delete)."},"change_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the change made."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp when the change occurred."}},"required":["schedule_event_id","changed_by_user_id","change_type","changed_at"],"description":"Information required to create a new schedule audit log entry, including references, change type and timestamp."},"IAuctionPlatformScheduleAuditLog.IUpdate":{"type":"object","properties":{"change_type":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Type of change (e.g., create, update, delete)."},"change_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the change made."}},"required":[],"description":"Fields that can be updated for a schedule audit log entry."},"IAuctionPlatformIconPurchase.IRequest":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Purchasing user. {@link auction_platform_members.id}.\n\nOptional filter on user who made the icon purchase."},"icon_code":{"type":"string","description":"Icon code used to filter purchases.\n\nOptional filter by icon code."},"page":{"oneOf":[{"type":"integer","format":"int32","description":"Pagination parameter: page number.\n\nOptional. Defaults to 1 if omitted."},{"type":"null"}],"description":"Pagination parameter: page number.\n\nOptional. Defaults to 1 if omitted."},"limit":{"oneOf":[{"type":"integer","format":"int32","description":"Pagination parameter: number of records per page.\n\nOptional. Defaults to 100 if omitted."},{"type":"null"}],"description":"Pagination parameter: number of records per page.\n\nOptional. Defaults to 100 if omitted."}},"description":"Search criteria and pagination parameters for icon purchases","required":[]},"IAuctionPlatformPageIAuctionPlatformIconPurchase.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nIdentifier of the icon purchase summary record."},"icon_code":{"type":"string","description":"Icon code representing the purchased icon."}},"required":["id","icon_code"],"description":"Summary view for auction platform icon purchase records. Contains essential identifier and icon code."},"IAuctionPlatformIconPurchase":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key.\n\nUnique identifier of the icon purchase record."},"user_id":{"type":"string","format":"uuid","description":"Purchasing user. {@link auction_platform_members.id}.\n\nThe user who made this icon purchase."},"icon_code":{"type":"string","description":"Code identifying the purchased icon for calendar display.\n\nRepresents the icon chosen by the user."},"purchase_points":{"type":"integer","format":"int32","description":"Points spent for this icon purchase.\n\nThe amount of points used to purchase the icon."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the purchase was made.\n\nDate and time when the record was created.\nISO 8601 format string."},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of the last update to the purchase record.\n\nDate and time when the record was last updated.\nISO 8601 format string."}},"required":["id","user_id","icon_code","purchase_points","created_at","updated_at"],"description":"Auction platform calendar icon purchase record linking users with purchased icons. Tracks points spent and timestamps."},"IAuctionPlatformIconPurchase.ICreate":{"type":"object","properties":{"user_id":{"type":"string","format":"uuid","description":"Purchasing user. {@link auction_platform_members.id}.\n\nThe user making the icon purchase."},"icon_code":{"type":"string","description":"Code identifying the purchased icon for calendar display.\n\nThe icon selected for purchase."},"purchase_points":{"type":"integer","format":"int32","description":"Points spent for this icon purchase.\n\nNumber of points deducted for the purchase."}},"required":["user_id","icon_code","purchase_points"],"description":"Data required to create a new auction platform icon purchase entry."},"IAuctionPlatformIconPurchase.IUpdate":{"type":"object","properties":{"user_id":{"oneOf":[{"type":"string","format":"uuid"},{"type":"null"}],"description":"Purchasing user. {@link auction_platform_members.id}."},"icon_code":{"type":"string","description":"Code identifying the purchased icon for calendar display."},"purchase_points":{"type":"integer","description":"Points spent for this icon purchase."},"created_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp when the purchase was made."},"updated_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Timestamp of the last update to the purchase record."}},"required":[],"description":"Update fields for an icon purchase record. All fields optional."},"IAuctionPlatformApiIntegrations.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"name":{"type":"string","description":"Name of the external API integration, unique identifier."},"active":{"type":"boolean","description":"Indicates whether this integration is currently active and should be used."}},"required":["id","name","active"],"description":"Summary of auction platform API integration configuration including essential identifiers."},"IAuctionPlatformGuest.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"email":{"type":"string","description":"Guest user's email address for identification and notifications. Unique to ensure no duplicate guest records."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Guest display nickname visible on platform chats and leaderboards."}},"required":["id","email"],"description":"Summary information for a guest user including unique identifier and email. Nickname may be null."},"IAuctionPlatformMember.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"email":{"type":"string","description":"Member's unique email address used for login and notifications."},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Member's display nickname on platform and auction chats."}},"required":["id","email"],"description":"Summary information for a member user (team leader) with unique email and display nickname."},"IAuctionPlatformAdmin.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the administrator user"},"email":{"type":"string","description":"Administrator's unique email address"},"nickname":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Admin display nickname for identification in admin tools and logs"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the admin record was created for auditing"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp of last update on the admin record for audit tracking"}},"required":["id","email","created_at","updated_at"],"description":"Summary view of an administrative user excluding sensitive authentication data.\n\nIncludes unique ID, email, optional nickname, and audit timestamps.\n\nUsed for display in paginated lists and administrative dashboards."},"IAuctionPlatformAuctionRoom.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the auction room"},"streamer_name":{"type":"string","description":"Name of the streamer who owns this auction room"},"start_time":{"type":"string","format":"date-time","description":"Scheduled start time of the auction room"},"end_time":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional scheduled end time of the auction room"},"status":{"type":"string","description":"Status of the auction room, e.g., open, closed, pending"},"updated_at":{"type":"string","format":"date-time","description":"Record last updated timestamp"},"deleted_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Soft delete timestamp for marking deletion"}},"required":["id","streamer_name","start_time","status","updated_at"],"description":"Summary information of an auction room.\n\nIncludes unique ID, streamer name, auction status, schedule times, and last update time.\n\nUsed for listing auctions with essential metadata."},"IAuctionPlatformAuctionCandidates.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the auction candidate"},"nickname":{"type":"string","description":"Candidate's display nickname in auctions"}},"required":["id","nickname"],"description":"Summary view of an auction candidate.\n\nIncludes unique ID and nickname.\n\nUsed for listing auction candidates in UI or API responses."},"IAuctionPlatformTeamLeader.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the team leader"},"member_id":{"type":"string","format":"uuid","description":"Reference to the member user who is the team leader"},"available_points":{"type":"integer","description":"Points currently available for auction bidding by the team leader"}},"required":["id","member_id","available_points"],"description":"Summary information of a team leader participating in auctions.\n\nIncludes unique ID, linked member user ID, and current available auction points.\n\nUsed for listing team leaders and managing bidding capacities."},"IAuctionPlatformBids.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the auction bid record."},"auction_room_id":{"type":"string","format":"uuid","description":"Unique identifier of the auction room where the bid was placed."},"bid_points":{"type":"integer","description":"The number of points used in this bid."},"bid_time":{"type":"string","format":"date-time","description":"Timestamp when the bid was placed in ISO 8601 format."},"is_winning":{"type":"boolean","description":"Indicates if this bid is the current winning bid."}},"required":["id","auction_room_id","bid_points","bid_time","is_winning"],"description":"Summary information for auction bids, including essential properties for listing and quick reference."},"IAuctionPlatformPointBalances.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the point balance record."},"team_leader_id":{"type":"string","format":"uuid","description":"Unique identifier of the team leader associated with this point balance."},"points_allocated":{"type":"integer","description":"Total auction points allocated to the team leader."},"points_used":{"type":"integer","description":"Total auction points used by the team leader."}},"required":["id","team_leader_id","points_allocated","points_used"],"description":"Summary data for point balances of team leaders, representing their allocated and used points in auctions."},"IAuctionPlatformSponsorshipEvent.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the sponsorship event."},"auction_room_id":{"type":"string","format":"uuid","description":"Unique identifier of the auction room associated with the sponsorship event."},"donor_name":{"type":"string","description":"Name of the donor or sponsor."},"donation_amount":{"type":"number","format":"double","description":"Amount donated in the sponsorship event."},"animated":{"type":"boolean","description":"Flag indicating if an animation was played for this sponsorship event."},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the sponsorship event was created."}},"required":["id","auction_room_id","donor_name","donation_amount","animated","created_at"],"description":"Summary information for sponsorship events including key donation details and status."},"IAuctionPlatformCalendarEvents.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Unique identifier of the calendar event."},"auction_platform_auction_room_id":{"type":"string","format":"uuid","description":"Identifier of the auction room linked to this calendar event."},"title":{"type":"string","description":"Title or name of the calendar event representing the auction."},"start_at":{"type":"string","format":"date-time","description":"Start date and time of the calendar event."},"end_at":{"oneOf":[{"type":"string","format":"date-time"},{"type":"null"}],"description":"Optional end date and time of the calendar event."}},"required":["id","auction_platform_auction_room_id","title","start_at"],"description":"Summary information for calendar events with essential scheduling properties."},"IAuctionPlatformScheduleAuditLog.ISummary":{"type":"object","properties":{"id":{"type":"string","format":"uuid","description":"Primary Key."},"change_type":{"type":"string","description":"Type of change (e.g., create, update, delete)."},"change_description":{"oneOf":[{"type":"string"},{"type":"null"}],"description":"Detailed description of the change made."},"changed_at":{"type":"string","format":"date-time","description":"Timestamp when the change occurred."}},"required":["id","change_type","changed_at"],"description":"Summary information of schedule audit logs for list views, including identifier, type of change, optional description, and timestamp."}}}}