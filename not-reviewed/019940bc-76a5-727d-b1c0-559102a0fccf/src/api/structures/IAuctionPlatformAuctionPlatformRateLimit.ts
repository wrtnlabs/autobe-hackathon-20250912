import { tags } from "typia";

/**
 * Update payload for the auction platform rate limits entity. Allows modifying
 * component name and max request thresholds. Does not include create timestamps
 * or soft delete field.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuctionPlatformAuctionPlatformRateLimit = {
  /** Unique identifier of the rate limit record. */
  id: string;

  /** Component name governed by this rate limit. */
  component_name: string;

  /** Max requests per minute allowed. */
  max_requests_per_minute: number & tags.Type<"int32">;

  /** Max requests per hour allowed. */
  max_requests_per_hour: number & tags.Type<"int32">;

  /** Max requests per day allowed. */
  max_requests_per_day: number & tags.Type<"int32">;

  /** Creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if record is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAuctionPlatformAuctionPlatformRateLimit {
  /**
   * Properties allowed for updating a rate limit record. All fields except id
   * and timestamps are required for update.
   */
  export type IUpdate = {
    /** Component name to update. */
    component_name: string;

    /** Max requests per minute allowed after update. */
    max_requests_per_minute: number & tags.Type<"int32">;

    /** Max requests per hour allowed after update. */
    max_requests_per_hour: number & tags.Type<"int32">;

    /** Max requests per day allowed after update. */
    max_requests_per_day: number & tags.Type<"int32">;
  };
}
