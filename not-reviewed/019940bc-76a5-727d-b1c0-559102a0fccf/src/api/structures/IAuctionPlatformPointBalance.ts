import { tags } from "typia";

/**
 * Detailed record representing auction points allocated and used by a team
 * leader within a specific auction room.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuctionPlatformPointBalance = {
  /** Unique identifier for auction platform point balance record. */
  id: string & tags.Format<"uuid">;

  /** UUID of the team leader this point balance belongs to. */
  team_leader_id: string & tags.Format<"uuid">;

  /** UUID of the auction room associated with this point balance. */
  auction_room_id: string & tags.Format<"uuid">;

  /** Total auction points allocated to the team leader. */
  points_allocated: number & tags.Type<"int32">;

  /** Total auction points that the team leader has spent. */
  points_used: number & tags.Type<"int32">;

  /** Timestamp when the point balance was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the point balance record was last updated. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAuctionPlatformPointBalance {
  /** Request body for creating a new auction platform point balance record. */
  export type ICreate = {
    /** UUID reference to the team leader to allocate points to. */
    team_leader_id: string & tags.Format<"uuid">;

    /** UUID reference to the auction room associated with the allocation. */
    auction_room_id: string & tags.Format<"uuid">;

    /** Number of auction points allocated to the team leader for bidding. */
    points_allocated: number & tags.Type<"int32">;

    /** Number of auction points already used by the team leader. */
    points_used: number & tags.Type<"int32">;
  };

  /**
   * Request body for updating an existing auction platform point balance
   * record. All fields are optional and nullable.
   */
  export type IUpdate = {
    /** Optional updated UUID reference to a team leader. */
    team_leader_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional updated UUID reference to an auction room. */
    auction_room_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional updated total of auction points allocated. */
    points_allocated?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional updated total of auction points used. */
    points_used?: (number & tags.Type<"int32">) | null | undefined;
  };
}
