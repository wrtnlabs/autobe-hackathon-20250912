import { tags } from "typia";

/**
 * Auction Platform Rate Limit interface represents a policy defining limits on
 * request frequency to various components. It includes unique component name
 * and maximum request thresholds per minute, hour, and day. This interface
 * corresponds to the 'auction_platform_rate_limits' table in the database.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuctionPlatformRateLimit = {
  /** Unique identifier for this rate limit record. */
  id: string;

  /**
   * Name of the component this rate limit applies to, unique across the
   * system.
   */
  component_name: string;

  /** Maximum number of requests allowed per minute for the component. */
  max_requests_per_minute: number & tags.Type<"int32">;

  /** Maximum number of requests allowed per hour for the component. */
  max_requests_per_hour: number & tags.Type<"int32">;

  /** Maximum number of requests allowed per day for the component. */
  max_requests_per_day: number & tags.Type<"int32">;

  /** Timestamp when this record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when this record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp; null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAuctionPlatformRateLimit {
  /**
   * Request schema for searching and filtering Auction Platform rate limits.
   *
   * Supports pagination and filtering by component name and requests per
   * minute range.
   *
   * All properties are optional to allow flexible query criteria.
   */
  export type IRequest = {
    /** Optional filter for component name search. */
    component_name?: string | null | undefined;

    /** Optional page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional limit of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional minimum requests per minute filter. */
    min_requests_per_minute?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional maximum requests per minute filter. */
    max_requests_per_minute?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Data required to create a new auction platform rate limit record. Must
   * include component_name and max request thresholds. Created and updated
   * timestamps managed by the system; id and deleted_at are omitted here.
   */
  export type ICreate = {
    /** Name of the component to assign the rate limit to. */
    component_name: string;

    /** Maximum requests per minute allowed for component. */
    max_requests_per_minute: number & tags.Type<"int32">;

    /** Maximum requests per hour allowed for component. */
    max_requests_per_hour: number & tags.Type<"int32">;

    /** Maximum requests per day allowed for component. */
    max_requests_per_day: number & tags.Type<"int32">;
  };
}
