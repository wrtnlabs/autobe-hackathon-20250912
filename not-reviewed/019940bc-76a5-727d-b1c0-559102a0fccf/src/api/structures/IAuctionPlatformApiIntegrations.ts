import { tags } from "typia";

/**
 * Represents an external API integration configuration for the auction
 * platform.
 *
 * Includes API keys, endpoint URLs, and activation status. Supports auditing
 * timestamps and soft deletion for lifecycle management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuctionPlatformApiIntegrations = {
  /**
   * Primary key UUID of the API integration record.
   *
   * Uniquely identifies the integration configuration.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique name of the external API integration.
   *
   * This name identifies the integration.
   */
  name: string;

  /**
   * API key or token used for authentication with the external service.
   *
   * This field should be kept secure and not exposed in responses.
   */
  api_key: string;

  /**
   * Base URL endpoint of the external API service.
   *
   * Can be very long (up to 80000 characters).
   */
  endpoint_url: string;

  /**
   * Flag indicating if this integration is currently active.
   *
   * True means integration is enabled.
   */
  active: boolean;

  /**
   * Timestamp representing when this integration was created.
   *
   * ISO 8601 formatted date-time string with timezone.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp representing when this integration was last updated.
   *
   * ISO 8601 formatted date-time string with timezone.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Optional timestamp for soft deletion.
   *
   * Null if the record is active and not deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAuctionPlatformApiIntegrations {
  /**
   * Parameters for filtering, sorting, and paginating auction platform API
   * integration records.
   */
  export type IRequest = {
    /** Filter string to search API integrations */
    search?: string | null | undefined;

    /** Filter active status of the API integration */
    active?: boolean | null | undefined;

    /** Page number for pagination */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of items per page */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort order parameters */
    sort?: string | null | undefined;
  };

  /**
   * Request schema for creating a new Auction Platform API integration.
   *
   * Clients must provide all required fields: unique name, api key, endpoint
   * URL, and active status.
   *
   * This schema excludes auditing timestamps and IDs as those are generated
   * by the system.
   */
  export type ICreate = {
    /** Unique name for the new API integration. */
    name: string;

    /** API key or secret token for accessing the external service. */
    api_key: string;

    /** Endpoint URL of the external API. */
    endpoint_url: string;

    /** Boolean flag to mark the integration as active or inactive. */
    active: boolean;
  };

  /**
   * Request schema for updating an existing Auction Platform API integration.
   *
   * All fields are optional and nullable to support partial updates.
   *
   * Includes properties for name, api_key, endpoint_url, and active status
   * with null allowed to unset or indicate no change.
   */
  export type IUpdate = {
    /**
     * Updated name of the API integration. Optional and nullable for
     * partial updates.
     */
    name?: string | null | undefined;

    /** Updated API key or token. Optional and nullable to allow unsetting. */
    api_key?: string | null | undefined;

    /** Updated endpoint URL. Optional and nullable for partial updates. */
    endpoint_url?: string | null | undefined;

    /** Updated active status flag. Optional and nullable. */
    active?: boolean | null | undefined;
  };

  /**
   * Summary of auction platform API integration configuration including
   * essential identifiers.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** Name of the external API integration, unique identifier. */
    name: string;

    /**
     * Indicates whether this integration is currently active and should be
     * used.
     */
    active: boolean;
  };
}
