import { tags } from "typia";

/**
 * Represents a team leader participating in auctions with point allocation and
 * profile linkage to member users.
 *
 * Corresponds to the auction_platform_team_leaders table in the database.
 *
 * Properties include unique ID, member linkage, available bidding points, and
 * audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuctionPlatformTeamLeaders = {
  /**
   * Primary Key.
   *
   * Unique identifier for the team leader.
   */
  id: string & tags.Format<"uuid">;

  /**
   * References the member user who is the team leader.
   *
   * Maps to auction_platform_members.id.
   */
  member_id: string & tags.Format<"uuid">;

  /**
   * Points currently available for auction bidding by the team leader.
   *
   * This value represents the total points the team leader can allocate for
   * bidding in auctions.
   */
  available_points: number & tags.Type<"int32">;

  /** Creation timestamp for team leader record. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp for team leader record. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IAuctionPlatformTeamLeaders {
  /**
   * Request type for creating a new auction team leader with required member
   * association and initial bidding points. Does not accept IDs or timestamps
   * as these are auto-generated.
   */
  export type ICreate = {
    /**
     * References the member user who is the team leader. Must link to
     * existing member.
     *
     * Required for team leader creation.
     */
    member_id: string & tags.Format<"uuid">;

    /**
     * Points initially available for bidding when creating the team leader.
     *
     * This field is typically initialized by the system.
     */
    available_points: number & tags.Type<"int32">;
  };

  /**
   * Request type for updating an existing auction team leader record. Fields
   * are optional to allow partial updates. Member association is generally
   * immutable but can be optionally updated as per business rules.
   */
  export type IUpdate = {
    /**
     * References the member user who is the team leader.
     *
     * Usually not updatable, included as optional.
     */
    member_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Points currently available for auction bidding by the team leader.
     *
     * Optional for update operations.
     */
    available_points?: (number & tags.Type<"int32">) | undefined;
  };
}
