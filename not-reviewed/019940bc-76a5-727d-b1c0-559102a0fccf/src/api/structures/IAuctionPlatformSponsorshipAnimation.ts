import { tags } from "typia";

/**
 * Sponsorship animation metadata for auction platform.
 *
 * This entity captures metadata about custom animations used in sponsorship
 * notifications to enhance auction user experience. It includes properties such
 * as animation name, file URI, optional description, uploader information, and
 * timestamps for audit purposes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IAuctionPlatformSponsorshipAnimation = {
  /**
   * Unique identifier of the sponsorship animation.
   *
   * Primary key UUID.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Name of the animation file.
   *
   * Example: "fireworks.json"
   */
  animation_name: string;

  /**
   * URI location of the animation file, e.g., S3 URL or CDN.
   *
   * Max length 80000 characters.
   */
  file_uri: string;

  /** Optional detailed description of the animation. */
  description?: string | null | undefined;

  /** Optional UUID of the member who uploaded the animation. */
  uploaded_by_member_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Creation timestamp in ISO 8601 date-time format with timezone. */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp in ISO 8601 date-time format with timezone. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IAuctionPlatformSponsorshipAnimation {
  /**
   * Paginated request for retrieving sponsorship animations with filtering,
   * sorting, and pagination.
   */
  export type IRequest = {
    /** Optional search keyword to filter animations by name or description. */
    search?: string | null | undefined;

    /**
     * Page number to retrieve; must be a non-negative integer.
     *
     * @default 1
     */
    page?: number | null | undefined;

    /**
     * Number of records per page.
     *
     * @default 20
     */
    limit?: number | null | undefined;

    /** Optional sort criteria, e.g. "created_at", "animation_name". */
    orderBy?: string | null | undefined;

    /** Sort direction. Allowed values: "asc", "desc". */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Request type for creating a new sponsorship animation.
   *
   * Requires animation_name and file_uri. Optional description and
   * uploaded_by_member_id.
   */
  export type ICreate = {
    /**
     * Name of the animation file.
     *
     * Example: "fireworks.json"
     */
    animation_name: string;

    /**
     * URI location of the animation file, e.g., S3 URL or CDN.
     *
     * Max length 80000 characters.
     */
    file_uri: string;

    /** Optional detailed description of the animation. */
    description?: string | null | undefined;

    /** Optional UUID of the member who uploaded the animation. */
    uploaded_by_member_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /**
   * Request type for updating an existing sponsorship animation.
   *
   * All fields optional except id is not a member here.
   */
  export type IUpdate = {
    /**
     * Name of the animation file.
     *
     * Example: "fireworks.json"
     */
    animation_name?: string | null | undefined;

    /**
     * URI location of the animation file, e.g., S3 URL or CDN.
     *
     * Max length 80000 characters.
     */
    file_uri?: string | null | undefined;

    /** Optional detailed description of the animation. */
    description?: string | null | undefined;

    /** Optional UUID of the member who uploaded the animation. */
    uploaded_by_member_id?: (string & tags.Format<"uuid">) | null | undefined;
  };
}
