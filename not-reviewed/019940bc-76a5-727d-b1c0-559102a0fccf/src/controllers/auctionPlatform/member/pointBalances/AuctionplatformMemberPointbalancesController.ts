import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";

@Controller("/auctionPlatform/member/pointBalances/:pointBalanceId")
export class AuctionplatformMemberPointbalancesController {
  /**
   * Delete specific point balance record by ID.
   *
   * This operation permanently deletes the point balance record identified by
   * the provided pointBalanceId from the auction platform's point balances.
   * The point balance represents the allocated and used auction points for a
   * team leader within a specific auction room, crucial for managing bidding
   * limits.
   *
   * Access is limited to authenticated members to prevent unauthorized
   * modifications. Deleting this record removes all information about the
   * user's point allocation and usage in the corresponding auction.
   *
   * The operation requires a valid UUID identifying the point balance record
   * and responds with no content upon successful deletion.
   *
   * @param connection
   * @param pointBalanceId Unique identifier of the point balance record to
   *   delete
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Delete()
  public async erasePointBalance(
    @TypedParam("pointBalanceId")
    pointBalanceId: string & tags.Format<"uuid">,
  ): Promise<void> {
    pointBalanceId;
    return typia.random<void>();
  }
}
