[{"id":"01994223-0208-727f-b4c0-64ab7c812683","type":"userMessage","contents":[{"type":"text","text":"나는 보상 데이터를 업로드 하면 Pay Band  그림을 그려서 화면에 보여주고, Min, Max 값을 변화시켜 그림이 달라지는 모습을 동적으로 보여주는 서비스가 필요해.\n\n인원 수와 금액을 합쳐져서 Budget이 변경되는 것도 시뮬레이션이 되었으면 좋겠어."}],"created_at":"2025-09-13T08:13:34.600Z"},{"id":"01994223-0729-7318-9226-b3687fd43967","type":"assistantMessage","text":"안녕하세요! 보상 데이터를 업로드하면 Pay Band 그래프를 시각화하고, Min/Max 값을 변경해 동적으로 그래프가 변하는 기능, 그리고 인원 수와 금액에 따라 Budget이 변화하는 시뮬레이션을 제공하는 서비스를 원하시는군요. 매우 흥미로운 요구사항입니다!\n\n이 서비스를 설계하기 위해 몇 가지 추가 질문을 드릴게요. 사용자 경험을 최적화하기 위해 구체적인 세부사항을 정리하면 better한 시스템을 만들 수 있어요.\n\n---\n\n### 🔍 **필요한 추가 정보 질문**\n\n#### 1. **사용자 역할**\n- 이 시스템을 사용하는 사용자는 어떤 역할인가요? (예: 인사팀, 재무팀, 경영진 등)\n- 사용자는 **데이터를 업로드만**하나요? 아니면 **그래프를 조정**하거나 **Budget을 직접 수정**할 수 있나요?\n\n#### 2. **보상 데이터 업로드 형식**\n- 업로드하는 보상 데이터는 어떤 형식인가요?  \n  예: `.csv`, `.xlsx`, 또는 API로 JSON 데이터를 보내나요?\n- 데이터는 어떤 필드를 포함해야 하나요?  \n  (예: 사원ID, 직급, 연봉, 팀, Pay Band 등)\n\n#### 3. **Pay Band 정의**\n- Pay Band는 일반적으로 **Min**, **Mid**, **Max** 급여 범위로 정의되는데,  \n  = 이 범위는 **직급별로 고정**되어 있나요? (예: 매니저: 60,000~100,000)  \n  아니면 **팀/지역/경력**에 따라 동적으로 정의되나요?\n\n#### 4. **동적 변화 시뮬레이션**\n- “Min/Max 값을 변화시켜 그래프가 달라지는 모습”을 보고 싶다는데,  \n  = 사용자는 **직접 슬라이더로 Min/Max를 조정**하며 실시간으로 변화를 보고 싶나요?  \n  = 아니면 **조건부 시뮬레이션**(예: 인원 +5명, 평균 연봉 +10%)을 입력하면 자동으로 바뀌기를 원하나요?\n\n#### 5. **Budget 시뮬레이션 로직**\n- Budget = 인원 수 × 평균 연봉 이라고 가정해도 괜찮나요?\n- 혹은 더 복잡한 계산이 필요한가요?  \n  (예: 기본급 + 보너스 + 혜택으로 구성, 또는 Pay Band 상한선 초과 여부 고려 등)\n\n#### 6. **시각화 요구사항**\n- 그래프는 어떤 형태가 좋으신가요?  \n  (예: 막대 그래프, 박스 플롯, 스캐터 플롯, Pay Band별 분포 히스토그램 등)\n- 최소한으로 원하시는 기능은?  \n  - Pay Band별 인원 수 분포  \n  - 현재 연봉 vs Pay Band Min/Max 위치 표시  \n  - Budget 변화에 따른 전체 지출 추이 그래프\n\n---\n\n이 질문들에 답변해 주시면, **‘업로드 → 시각화 → 동적 시뮬레이션’**이라는 전체 흐름을 정확히 이해하고, 구조화된 요구사항 문서로 변환할 수 있어요.  \n그 후에 자동으로 **데이터베이스 설계 → API 생성 → 테스트코드 작성 → 실제 로직 구현**까지 전 과정을 자동으로 생성해 드릴 수 있습니다.\n\n> 💡 **Tip**: “아직 잘 모르겠어, 그냥 내가 원하는 건 ‘보상 데이터 넣으면 그래프 보여주고, 인원이나 금액 바꾸면 바로 바뀌는 게 보이면 되지’” 라고 해도 괜찮아요.  \n> 그런 말만 있어도 제가 세세하게 설계해 드릴게요!\n\n어떤 방식으로 시스템을 만들고 싶으신가요? 😊","created_at":"2025-09-13T08:13:35.913Z","completed_at":"2025-09-13T08:13:45.188Z"},{"id":"01994228-dc3e-76cd-bd78-a5112e11ad09","type":"userMessage","contents":[{"type":"text","text":"#### 1. **사용자 역할**\n사용자는 2가지 계층으로 구분 될 것 같아.\n\n인사팀 담당자는 데이터를 업로드하고 그래프를 조정하거나 Budget을 직접 수정해\n인사팀 이외 직원들은 결과를 조회할 수 만 있어.\n\n2. 보상 데이터 업로드 형식\n- `.xlsl`로 하면 됨\n- 데이터는 사원ID, 직급, 연봉, 팀, Pay Band\n\n3. Pay Band 정의\n- Min, Mid, Max는 직급별, 직무그룹별로 고정되어 있어.\n- 직무그룹은 여러 개의 직무를 Pay Band Group 별로 구분해 놓은 것이고, 매년 조정될 수도 있어.\n\n 4. **동적 변화 시뮬레이션\n- “Min/Max 값을 변화시켜 그래프가 달라지는 모습”을 보고 싶다는데,  \n  = 사용자는 **직접 슬라이더로 Min/Max를 조정**하며 실시간으로 변화도 보고\n  =  **조건부 시뮬레이션**(예: 인원 +5명, 평균 연봉 +10%)을 입력하면 자동으로 바뀌는 기능도 있었으면 좋겠어.\n\n#### 5. **Budget 시뮬레이션 로직**\n- Budget = 인원 수 × 평균 연봉 이라고 가정해도 괜찮나요?\n- 혹은 더 복잡한 계산이 필요해 \n  (예: 기본급 + 보너스 + 혜택으로 구성, 또는 Pay Band 상한선 초과 여부 고려 등)\n\n\n#### 6. **시각화 요구사항**\n- 그래프는 어떤 형태는 수직축은 금액, 수평축은 직급으로 구성\n- 각 직급별 Min, Mid, Max가 외곽선으로 둘러싸고, 실제 분포된 금액은 짧은 선 형태로 Pay Band 박스 안에 분포  \n  \n- 최소한으로 원하시는 기능은 \n  - Pay Band별 인원 수 분포  \n  - 현재 연봉 vs Pay Band Min/Max 위치 표시  \n  - Budget 변화에 따른 전체 지출 추이 그래프"}],"created_at":"2025-09-13T08:19:58.142Z"},{"id":"01994228-e0d8-7518-90e0-617941a7d559","type":"assistantMessage","text":"감사합니다! 매우 명확하고 구체적인 요구사항을 제공해 주셔서 정말 좋습니다.  \n이제 사용자 분의 비즈니스 목표와 시스템 작동 방식을 완벽히 이해했고, 다음 단계로 넘어가 **구조화된 요구사항 특성 문서**(Specification)를 생성할 준비가 되었습니다.\n\n---\n\n### ✅ **요구사항 요약 및 확인**\n\n| 항목 | 내용 |\n|------|------|\n| **시스템 목적** | 보상 데이터를 업로드하여 Pay Band 시각화, Min/Max 조정 및 Budget 시뮬레이션 기능 제공 |\n| **사용자 역할** | - **인사팀**: 데이터 업로드, Min/Max 슬라이더 조정, 시뮬레이션 입력 <br> - **일반 직원**: 결과 조회 전용 |\n| **데이터 입력** | `.xlsx` 파일 (필드: 사원ID, 직급, 연봉, 팀, Pay Band) |\n| **Pay Band 정의** | - 직급 및 직무그룹에 고정된 Min/Mid/Max 범위 <br> - 직무그룹별로 구성, 매년 조정 가능 |\n| **주요 기능** | 1. **시각화**: 직급(수평) vs 금액(수직) 그래프 <br>  → 각 직급 내 Pay Band 박스 (Min-Mid-Max) <br>  → 실제 연봉은 박스 내 수직 선으로 분포 <br>2. **동적 조정**: 슬라이더로 Min/Max 변경 → 실시간 그래프 반영 <br>3. **시뮬레이션**: <br>  ▪ 인원 +5명, 평균 연봉 +10% 입력 시 자동 재계산 <br>  ▪ Budget = 인원 수 × 평균 연봉 (기본 모델) |\n| **예외처리** | 연봉이 Pay Band Max를 초과하는 경우 경고 표시 가능 (추후 확장 가능) |\n| **출력** | - Pay Band별 인원 분포 <br> - 현재 연봉 대비 Min/Mid/Max 위치 <br> - Budget 변화 추이 그래프 |\n\n---\n\n### 🚀 다음 단계 진행 제안\n\n이제 **Analyze Agent**를 실행하여 위의 요구사항을 **기반으로 구조화된 시스템 사양서**(Spec Document)로 변환하겠습니다.  \n이 사양서는 다음과 같은 내용을 포함할 예정입니다:\n\n- **시스템 아키텍처** (사용자 역할 기반 권한 분리)\n- **데이터 모델** (Employees, PayBandGroup, PayBandRange 등)\n- **API 엔드포인트** (업로드, 그래프 조회, 시뮬레이션 실행)\n- **비즈니스 로직 규칙** (예: 인원 증가 시 Budget 자동 재계산)\n- **UI/UX 요구사항** (슬라이더, 시각화 유형, 상호작용 방식)\n\n> ✅ **확인**: 위 요약이 맞다면, **Analyze Agent를 실행**해 주시겠어요?  \n> 이후 Prisma (DB 설계) → Interface (API) → Test (테스트) → Realize (로직) 순서로 자동 생성됩니다.  \n> 각 단계마다 결과를 보여드리고, 확인 후 다음 단계로 넘어가겠습니다.\n\n---\n\n**▶ 다음을 실행하시겠습니까?**  \n`analyze()` - 사용자 요구사항을 기반으로 시스템 사양서 생성\n\n> 💬 *“네, 이 내용으로 진행해주세요.”라고만 답해 주세요. 나머지는 제가 전부 수행해 드립니다.*","created_at":"2025-09-13T08:19:59.320Z","completed_at":"2025-09-13T08:20:16.024Z"},{"id":"0199422c-76d0-727b-92ac-aeefdc3bef2e","type":"userMessage","contents":[{"type":"text","text":"네 진행해 주세요"}],"created_at":"2025-09-13T08:23:54.320Z"},{"type":"analyze","id":"01994241-4306-749c-95e6-c39dd6972275","reason":"User has provided comprehensive requirements for a compensation visualization system with Pay Band graphing, dynamic Min/Max adjustment via sliders, and budget simulation based on headcount and salary changes. The system has two user roles (HR team with edit access, general employees with view-only access), requires .xlsx upload of employee data (employee ID, position, salary, team, pay band), and demands visualizations showing salary distribution within fixed pay band ranges. Budget calculation is defined as headcount × average salary. All core features, data models, and interaction flows are sufficiently defined to generate a structured specification document.","prefix":"payBandSystem","roles":[{"name":"hrOperator","description":"HR team members who can upload compensation data in Excel format, adjust Pay Band Min/Mid/Max values through interactive sliders, and run budget simulations by modifying headcount or average salary. This role has full control over data input and system configuration.","kind":"admin"},{"name":"employeeViewer","description":"General employees who can only view the Pay Band visualization and budget simulation results. They have read-only access and cannot modify any data, settings, or parameters.","kind":"member"}],"files":[{"reason":"To define the core purpose, business objectives, and value proposition of the Pay Band System before diving into functional details.","filename":"00-toc.md","documentType":"service-overview","outline":["Service Overview","Business Objectives","Target Audience","Document Structure","Key Features Summary"],"audience":"general","keyQuestions":["What problem does this system solve for HR and employees?","Why is dynamic Pay Band visualization valuable?","How does budget simulation support compensation planning?"],"detailLevel":"high-level overview","constraints":["Must clearly separate HR operator and employee viewer roles","Must emphasize visual feedback and real-time simulation","Must not reference any technical implementation details"],"content":"# Service Overview\n\nThe Pay Band System is a decision-support platform designed to transform static, manual compensation analysis into an interactive, data-driven experience for HR teams. This system empowers HR operators to visualize salary distributions against corporate pay bands, dynamically adjust band boundaries, simulate budget impacts, and communicate compensation strategy with clarity—replacing spreadsheets, static charts, and back-and-forth emails with real-time, visual insight.\n\n## Business Objectives\n\n### 1. Increase Pay Equity and Transparency\nTHE Pay Band System SHALL enable HR operators to visually identify employees whose salaries fall outside predefined pay band ranges, reducing unintended pay disparities by 30% within the first year.\n\n### 2. Accelerate Compensation Planning Cycles\nWHEN an HR operator uploads a new compensation dataset, THE Pay Band System SHALL generate a complete pay band visualization in under 5 seconds, reducing time spent on manual charting and analysis from 4–8 hours per cycle to under 15 minutes.\n\n### 3. Improve Budget Forecasting Accuracy\nWHEN an HR operator adjusts headcount or average salary in the budget simulation tool, THE Pay Band System SHALL recalculate total compensation cost in real time and display the change as both percentage and absolute value, improving forecast accuracy to within ±5% of actual spend.\n\n### 4. Enhance Cross-Functional Alignment\nWHERE the finance team requests compensation cost projections, THE Pay Band System SHALL provide HR with a shareable, visual report that communicates pay structure, headcount impact, and budget risk without technical jargon.\n\n## Target Audience\n\nThis system serves two distinct user groups:\n\n- **HR Operators**: Members of the Human Resources team responsible for compensation planning, salary review, and budget forecasting. They upload data, adjust pay bands, and run simulations. This role requires full editing and modification rights.\n- **Employee Viewers**: All other employees across the organization who need to understand the company’s compensation framework. They can only view the visualized pay bands and simulation outcomes—never edit or export data. This role ensures transparency without risk of data tampering.\n\nThis role separation ensures data integrity while promoting organizational trust.\n\n## Key Features Summary\n\nThe system delivers three core capabilities:\n\n1. **Interactive Pay Band Visualization**\n   - X-axis: Job Level (ordered from junior to senior)\n   - Y-axis: Annual Salary (in currency)\n   - Each job level displays a Pay Band as a shaded box with Min, Mid, and Max boundaries\n   - Individual salaries appear as short vertical bars inside the band, clearly showing alignment with pay structure\n\n2. **Real-Time Pay Band Adjustment**\n   - HR Operators can drag sliders to adjust Min, Mid, and Max values for any pay band group\n   - The visualization updates within 300 milliseconds to reflect changes\n   - Any salary falling outside the new band boundaries is highlighted to indicate potential misalignment\n\n3. **Dynamic Budget Simulation**\n   - HR Operators can simulate changes to:\n     - Headcount: ±10% adjustment via numeric input\n     - Average Salary: ±20% adjustment via numeric input\n   - The system recalculates Budget = Total Headcount × Average Salary (based on uploaded data)\n   - Changes are displayed in real time as:\n     - Percentage change (e.g., “+7.2%”)\n     - Absolute value change (e.g., “+€1,240,000”)\n\n## Document Structure\n\nThis document serves as the foundational overview. To implement the system, refer to the following companion documents:\n\n- [User Roles and Access Control](./02-user-roles.md) — Defines what HR Operators and Employee Viewers can and cannot do.\n- [Data Upload Specification](./04-data-upload-spec.md) — Details the required columns and format for the .xlsx file upload.\n- [Pay Band Structure](./05-pay-band-structure.md) — Explains how pay bands are defined by job family and adjusted annually.\n- [Visualization Requirements](./06-visualization-requirements.md) — Specifies how the pay band chart must be rendered.\n- [Budget Simulation](./07-budget-simulation.md) — Defines the calculation logic and simulation inputs.\n- [User Workflow](./08-user-workflow.md) — Walks through the complete sequence of actions an HR Operator takes.\n- [Non-Functional Requirements](./09-non-functional-requirements.md) — Specifies performance, accessibility, and reliability thresholds.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# User Roles and Access Control\n\n## Role Overview\n\nThe Pay Band System supports two distinct user roles with clearly defined, non-overlapping responsibilities. These roles are designed to separate data control from information consumption, ensuring security, accountability, and operational efficiency. One role is empowered to manage and adjust compensation data and simulation parameters, while the other is restricted to viewing results only. There are no shared capabilities or ambiguous permission overlaps between these roles.\n\n## HR Operator Responsibilities\n\nHR operators are the only users authorized to initiate, modify, and control the core compensation data and simulation parameters of the Pay Band System. They are responsible for ensuring the accuracy, timeliness, and strategic alignment of compensation planning.\n\n- HR operators SHALL upload compensation data files in .xlsx format to populate the Pay Band visualization.\n- HR operators SHALL adjust the Min, Mid, and Max salary values for any Pay Band group using interactive sliders.\n- HR operators SHALL simulate changes to total compensation budget by increasing or decreasing headcount and modifying average salary.\n- HR operators SHALL review the real-time impact of their adjustments on Pay Band distribution and total budget.\n- HR operators SHALL export the current visualization state as PNG or PDF for reporting purposes.\n- HR operators SHALL be notified when uploaded data contains missing or invalid values and SHALL correct the file before continuing.\n\n## HR Operator Permissions\n\nHR operators are granted full operational authority over all data inputs and simulation controls. These permissions are defined in business terms and are not limited by interface controls alone.\n\n- WHEN an HR operator accesses the system, THE system SHALL recognize their role and enable all data entry and simulation tools.\n- THE system SHALL NOT display any data manipulation controls to users who are not HR operators.\n- WHEN a data upload is initiated, THE system SHALL accept the file only if the user has HR operator privileges.\n- WHERE a user attempts to adjust a Pay Band slider, THE system SHALL prevent the action if the user is not an HR operator.\n- IF a user attempts to modify headcount or average salary in the simulation panel, THEN THE system SHALL deny the request and display a message that only HR operators may adjust these values.\n- THE system SHALL ensure that HR operator actions cannot be performed by an Employee Viewer, even if the Employee Viewer attempts to manipulate the interface manually.\n\n## Employee Viewer Responsibilities\n\nEmployee viewers are authorized to consume and understand the compensation framework of their organization. Their role is strictly observational, supporting transparency and trust without granting any influence over data or strategy.\n\n- Employee viewers SHALL view the current Pay Band distribution and salary alignment across job levels.\n- Employee viewers SHALL view the simulated total compensation budget under different headcount and salary adjustment scenarios.\n- Employee viewers SHALL not make any modifications to data, sliders, or simulation inputs.\n- Employee viewers SHALL access the system immediately after authentication, without requiring request approval or waiting period.\n- Employee viewers SHALL receive visual feedback indicating that their access is limited to viewing only.\n\n## Employee Viewer Permissions\n\nEmployee viewers are granted read-only access to all visualization and simulation outputs. No input, adjustment, or export capability is permitted.\n\n- WHEN an employee viewer logs in, THE system SHALL display only the Pay Band visualization and simulated budget results.\n- THE system SHALL hide all upload buttons, slider controls, and simulation input fields from employee viewers.\n- IF an employee viewer attempts to trigger a form submission or drag a slider, THEN THE system SHALL prevent the action and display a message: \"You have read-only access. Only HR operators can modify Pay Band values or run simulations.\"\n- WHERE an employee viewer attempts to export the chart, THEN THE system SHALL disable the export button and not respond to the action.\n- THE system SHALL not allow an employee viewer to access or trigger any backend process related to data upload, simulation calculation, or Pay Band adjustment.\n- THE system SHALL treat any attempt by an employee viewer to bypass interface restrictions as a security violation.\n\n## Access Control Philosophy\n\nThe user access model of the Pay Band System is based on the principle of least privilege: each user is granted only the minimum permissions necessary to fulfill their business function. This model prevents accidental or intentional misuse of sensitive compensation data.\n\n- HR operators and employee viewers SHALL have completely separate access paths within the system.\n- There SHALL be no overlap, shared functionality, or role escalation between HR operators and employee viewers.\n- The system SHALL ensure that permission boundaries are enforced at the application level, regardless of interface design or client-side manipulation.\n- Every action taken by an HR operator SHALL be contextually available only to the HR operator role.\n- Every view displayed to an employee viewer SHALL be stripped of any editing, simulation, or data control capability.\n- THE system SHALL not rely on client-side visibility alone to restrict access; server-side permission checks SHALL be mandatory for every request that triggers data modification or simulation logic.\n- BETWEEN roles, there SHALL be no ability to mimic the permissions of the other.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# Authentication Flow for Pay Band System\n\nThe Pay Band System enables two distinct user roles: hrOperator (admin) and employeeViewer (member). Authentication must enforce strict separation of access rights while providing a seamless, secure entry experience. This document defines the complete authentication flow in business language, ensuring developers understand WHAT the system must do — not HOW to build it.\n\n\n## Authentication Goals\n\nTHE Pay Band System SHALL enable secure, role-based access for human resources operators and general employees, ensuring that only authorized users can interact with the system and that each user can only perform actions permitted by their role. The system SHALL prevent unauthorized access to sensitive data or configuration tools, and SHALL automatically terminate inactive sessions to protect compensation information.\n\n\n## Login Process\n\nWHEN a user visits the Pay Band System, THE system SHALL display a unified login page accepting email and password.\n\nWHEN the user submits valid credentials, THE system SHALL authenticate the user against the central user directory and determine the assigned role (hrOperator or employeeViewer).\n\nWHEN authentication succeeds, THE system SHALL redirect the user to the appropriate home view based on role: HR operators to the data upload and simulation interface, and employees to the read-only visualization dashboard.\n\nWHEN authentication fails due to incorrect email or password, THE system SHALL display a clear message: \"Invalid email or password. Please try again.\"\n\nWHEN authentication fails due to an inactive or disabled account, THE system SHALL display: \"Your account is currently inactive. Please contact your HR department.\"\n\nWHILE the user is unauthenticated, THE system SHALL NOT display any Pay Band data, simulation controls, or upload options.\n\n\n## Session Management\n\nWHEN a user successfully logs in, THE system SHALL create a secure session and issue a JSON Web Token (JWT).\n\nWHILE the user is active (i.e., making requests or interacting with the interface), THE system SHALL extend the session validity by resetting the inactivity timer.\n\nWHEN the user remains inactive for more than 30 minutes, THE system SHALL automatically terminate the session and clear all session state.\n\nWHEN the user initiates any action after session expiry, THE system SHALL redirect the user to the login page with a message: \"Your session has expired. Please log in again.\"\n\nWHEN a new login occurs for a user who already has an active session, THE system SHALL invalidate the previous session token and issue a new one.\n\n\n## Token Usage (JWT)\n\nTHE Pay Band System SHALL use JSON Web Tokens (JWT) for stateless authentication.\n\nTHE JWT payload SHALL contain at minimum:\n- userId: unique alphanumeric identifier of the user (e.g., \"usr_abc123\")\n- role: string value matching exactly one of: \"hrOperator\" or \"employeeViewer\"\n\nTHE JWT SHALL NOT contain:\n- Email address\n- Password\n- Personal identifiers (e.g., social security number)\n- Any data not required for role-based access control\n\nTHE system SHALL validate each incoming request using the JWT signature and role claim.\n\nWHEN a request contains an invalid or expired JWT, THE system SHALL reject the request with HTTP 401 Unauthorized and clear any client-side session state.\n\nWHEN a request contains a valid JWT but the role does not match the requested action (e.g., employeeViewer attempts to upload data), THE system SHALL reject the request with HTTP 403 Forbidden.\n\n\n## Logout and Session Expiry\n\nWHEN the user selects \"Log Out\", THE system SHALL clear the JWT from client storage, terminate the server-side session, and redirect the user to the login page with the message: \"You have been logged out successfully.\"\n\nWHEN the session expires due to inactivity, THE system SHALL behave as if the user manually logged out: all data is cleared, and navigation to protected pages shall redirect to login.\n\nTHE system SHALL NOT automatically attempt to refresh a token without user interaction.\n\n\n## Security Requirements\n\nTHE system SHALL require all traffic to use HTTPS.\n\nTHE system SHALL reject any request lacking a valid JWT.\n\nTHE system SHALL NOT allow JWTs to be passed through URL parameters.\n\nTHE system SHALL NOT expose the JWT payload to frontend code in plain text beyond what is necessary for role-based UI rendering (e.g., showing/hiding buttons).\n\nWHERE the user is a hrOperator, THE system SHALL enforce that no simulation or upload functionality is accessible without a validated JWT containing role: \"hrOperator\".\n\nWHERE the user is an employeeViewer, THE system SHALL enforce that all data displayed is read-only, and no interface controls for modification are rendered or enabled.\n\nIF a JWT is tampered with, modified, or signed with an unauthorized key, THEN THE system SHALL immediately invalidate the token and display an error message to the user: \"Your session is no longer valid. Please log in again.\"\n\nWHILE a session is active, THE system SHALL protect against session riding and CSRF attacks by requiring consistent token usage and validating origin context on sensitive operations such as uploads and simulation triggers.\n\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# Data Upload Specification\n\nThe Pay Band System requires users to upload compensation data in a specific Excel (.xlsx) format. The system processes this data to generate dynamic Pay Band visualizations and budget simulations. The structure of the uploaded file is critical to system functionality and must be strictly enforced.\n\n### Upload Format\n\nTHE system SHALL accept only .xlsx files for compensation data uploads. All other file formats (including .csv, .xls, .ods, .txt) SHALL be rejected with a clear error message.\n\n### Required Columns\n\nWHEN a user uploads an Excel file, THE system SHALL require exactly five (5) columns with the exact following names, in any order:\n\n- 사원ID\n- 직급\n- 연봉\n- 팀\n- Pay Band\n\nIF any of these five columns are missing, THE system SHALL reject the upload and display a specific error message listing the missing column names.\n\n### Data Validation Rules\n\nWHEN the system processes each row of the uploaded Excel file, THE system SHALL validate the following rules:\n\n1. 사원ID: \n   - SHALL be a non-empty string or number\n   - SHALL NOT be null or blank\n   - SHALL be unique across all uploaded rows (if duplicate, the system SHALL flag the duplicate for review)\n   - Optional alphanumeric format: may contain hyphens, underscores, or numbers\n\n2. 직급:\n   - SHALL be a non-empty string\n   - SHALL NOT be null or blank\n   - SHALL be treated as a textual job level designation (e.g., \"Manager\", \"Senior Engineer\", \"Analyst\")\n\n3. 연봉:\n   - SHALL be a positive number greater than zero\n   - SHALL NOT be zero, negative, null, or blank\n   - SHALL be interpretable as a numeric value (e.g., 52000, 75000.50, 98000)\n   - SHALL be treated as Korean Won (KRW) without currency symbols\n   - IF value is non-numeric or ≤ 0, THE system SHALL reject the entire row and notify user of invalid entry\n\n4. 팀:\n   - SHALL be a non-empty string\n   - SHALL NOT be null or blank\n   - MAY contain alphanumeric characters, spaces, or special symbols (e.g., \"Sales - APAC\", \"R&D/Innovation\")\n\n5. Pay Band:\n   - SHALL be a non-empty string\n   - SHALL NOT be null or blank\n   - SHALL reference a pre-defined Pay Band Group name (e.g., \"Band B\", \"Director Level\", \"Research Tier 3\")\n   - The system SHALL NOT validate whether the Pay Band name exists in a master list during upload — it shall be treated as a free-text label for later system alignment\n\nAll other columns found in the uploaded Excel file SHALL be ignored and not stored or processed.\n\n### Error Handling for Uploads\n\nIF the uploaded file:\n- Is not a valid .xlsx format, THEN THE system SHALL display: \"Please upload a valid Excel (.xlsx) file.\"\n- Contains fewer than the five required columns, THEN THE system SHALL display: \"Upload failed: Missing required columns: [list of missing column names]. Please ensure all required columns are present.\"\n- Contains a null/blank value in 사원ID, 직급, 팀, or Pay Band, THEN THE system SHALL display: \"Upload failed: Row [row number] contains missing data in required field [column name].\"\n- Contains a zero, negative, or non-numeric value in 연봉, THEN THE system SHALL display: \"Upload failed: Row [row number] has invalid salary value: [value]. Salary must be a positive number.\"\n- Contains duplicate 사원ID values, THEN THE system SHALL display: \"Upload warning: [count] duplicate employee IDs found. The system will use the last occurrence of each duplicate. Review data for accuracy.\"\n\nWHEN any error occurs, THE system SHALL NOT partially process the file. All rows SHALL be rejected if any row violates validation rules.\n\n### Expected Data Formats\n\nTHE system SHALL interpret all fields according to the following format conventions:\n\n| Column | Input Type | Example Valid Values | Example Invalid Values |\n|--------|------------|----------------------|------------------------|\n| 사원ID | Text/Number | \"EMP12345\", \"12345\", \"e-9987\" | \"\", \"null\", \"-\" |\n| 직급 | Text | \"Senior Developer\", \"Team Lead\" | \"\", \"  \", \"null\" |\n| 연봉 | Positive Number | 68000, 89500.50 | 0, -10000, \"\", \"N/A\" |\n| 팀 | Text | \"Marketing\", \"Product - Mobile\" | \"\", \"CLUSTER\" (if empty) |\n| Pay Band | Text | \"Band C\", \"Executive Tier\", \"Mid-Level\" | \"\", \"none\", \"BANDA\" (if blank) |\n\nWHILE any column value is empty, blank, or contains no printable characters, THE system SHALL treat it as invalid and reject the upload.\n\nWHEN the file is successfully validated, THE system SHALL store the data for visualization and simulation and clear any existing previous upload data.\n\nWHERE Pay Band value does not match any system-defined Pay Band Group, THE system SHALL still accept the upload and use the provided text as-is — the matching to official Pay Band Groups HARVESTED during the annual review process. This allows HR to upload provisional or new band names before formal approval.\n\nIF multiple employees from the same 팀 have identical 직급 and 연봉, THE system SHALL still process them as individual records — aggregation is performed at visualization stage, not upload stage.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# Pay Band Structure\n\n### Pay Band Definition\n\nPay Bands are predefined salary ranges that correspond to job families and levels within the organization. Each Pay Band represents a structured compensation band that ensures internal equity and external competitiveness. Pay Bands are not tailored to individual roles but are assigned to groups of similar jobs based on responsibilities, required skills, and market benchmarks.\n\nTHE Pay Band System SHALL define each Pay Band by three fixed monetary values: Min, Mid, and Max. These values represent the minimum, mid-point, and maximum salary allowable for any position assigned to that Pay Band.\n\nWHEN a job level is assigned to a Pay Band, THE system SHALL enforce that all salaries for positions within that job level remain within the Min and Max boundaries, except in cases of approved exceptions (e.g., exceptional retention or market override).\n\n### Pay Band Grouping by Job Family\n\nPay Bands are organized by Job Family, which groups similar roles based on functional domain (e.g., Engineering, Sales, Marketing, Operations, Finance).\n\nTHE Pay Band System SHALL group Pay Bands exclusively by Job Family, ensuring that all roles within the same Job Family share the same set of Pay Band structures.\n\nWHEN a new role is added to the system, THE system SHALL assign it to a single Job Family, and therefore inherit the Pay Band structure defined for that Job Family.\n\nWHERE multiple job levels exist within a Job Family, THE system SHALL assign a unique Pay Band to each level (e.g., Level 1, Level 2, Level 3), with each level having its own Min, Mid, and Max values.\n\n### Min/Mid/Max Value Logic\n\nThe Min, Mid, and Max values for each Pay Band are determined based on market salary surveys, internal pay equity analysis, and organizational compensation philosophy.\n\nTHE system SHALL maintain fixed Min, Mid, and Max values for each Pay Band and job level combination.\n\nTHE system SHALL define Mid as the 50th percentile of market value for the job level, Min as 80% of Mid, and Max as 120% of Mid.\n\nWHEN a Pay Band is first defined, THE system SHALL calibrate its Min, Mid, and Max values based on the most recent compensation benchmark data available to HR.\n\nIF a position’s salary falls below Min, THE system SHALL flag the position as \"Below Pay Band\" for HR review.\n\nIF a position’s salary exceeds Max, THE system SHALL flag the position as \"Above Pay Band\" for HR review.\n\n### Annual Adjustment Process\n\nPay Band Min/Mid/Max values are not static and are adjusted annually to reflect market changes, inflation, and organizational strategy.\n\nWHEN the fiscal year ends, THE HR Operator SHALL review and propose adjustments to one or more Pay Bands based on external market data, internal pay compression, and budget constraints.\n\nWHEN HR Operator submits proposed Pay Band adjustments, THE system SHALL require approval from the Compensation Committee before applying changes to the live structure.\n\nWHILE Pay Band values are under review or pending approval, THE system SHALL continue to display and use the current approved version for visualization and simulation.\n\nWHERE an adjustment is approved, THE system SHALL archive the old Pay Band values and activate the new values on January 1st of the following year.\n\n### Relationship Between Job Level and Pay Band\n\nEach job level (e.g., Junior, Associate, Senior, Lead, Manager) within a Job Family is mapped to a specific Pay Band.\n\nTHE system SHALL ensure a one-to-one mapping between each job level and one Pay Band within its Job Family.\n\nWHEN a job level is promoted or regraded, THE system SHALL reassign the employee automatically to the Pay Band corresponding to the new level.\n\nWHERE an employee's job level does not directly correspond to a known level in the Pay Band hierarchy, THE system SHALL default to the nearest higher or lower Pay Band based on historical usage and compensation policy.\n\nTHE Pay Band System SHALL maintain a lookup table that links every job level title (e.g., \"Software Engineer I\", \"Sales Director\") to its assigned Pay Band and corresponding Min, Mid, and Max values.\n\nWHEN HR Operator uploads compensation data, THE system SHALL validate each employee’s assigned job level against the active Pay Band structure and alert for any mismatched levels not found in the Pay Band hierarchy.\n\nWHEN a Pay Band is modified, THE system SHALL recalculate all employee positions mapped to that Pay Band and update their position within the visual Pay Band box accordingly.\n\nWHEN an employee's job level is changed, THE system SHALL display their salary movement against both the old and new Pay Band ranges to enable analysis of promotion impact.\n\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# Pay Band Visualization Requirements\n\nThis document defines the business-level visualization requirements for the Pay Band System. It specifies exactly how compensation data should be rendered on screen to support HR decision-making through intuitive, real-time feedback. This document is strictly focused on what the visualization must show and how it must respond to user input — not on implementation, libraries, or code structure.\n\n### Visualization Objective\n\nTHE Pay Band System SHALL enable HR operators to visually assess the distribution of employee salaries against established Pay Band ranges for each job level. The visualization SHALL provide immediate, accurate, and interpretable feedback so that HR can confidently evaluate compensation alignment, identify outliers, and simulate the impact of adjustments on overall pay equity and budget.\n\nWHEN a user uploads compensation data, THE system SHALL render a visualization that makes it instantly clear whether salaries are below, within, or above defined Pay Band boundaries.\n\nWHILE a user interacts with sliders to adjust Min, Mid, or Max values, THE system SHALL update the visualization in real time to reflect the new Pay Band structure without requiring page reload or manual refresh.\n\n### Axes Definition\n\nTHE X-axis SHALL represent job level, ordered from lowest to highest seniority (e.g., Intern → Junior → Mid-Level → Senior → Manager → Director → Executive). Job level SHALL be derived from the \"직급\" column in the uploaded Excel data.\n\nTHE Y-axis SHALL represent annual salary amount in currency units (e.g., KRW, USD), scaled logarithmically if necessary to accommodate wide salary ranges. The scale SHALL be determined automatically based on the minimum and maximum salary values in the uploaded dataset.\n\n### Pay Band Box Representation\n\nFOR EACH job level, THE system SHALL display a vertical Pay Band box that spans from its defined Min to Max salary value, with a horizontal marker at the Mid point.\n\nTHE Pay Band box SHALL be drawn as a solid outline rectangle with a light fill (e.g., 10% opacity) to distinguish it from individual salary markers.\n\nTHE Mid-point SHALL be indicated with a solid horizontal line across the box, visually separating the lower and upper halves of the Pay Band.\n\nWHEN Pay Band values are adjusted via sliders, THE system SHALL instantaneously move the top (Max), bottom (Min), and middle (Mid) boundary lines of the box to reflect the new values.\n\nIF a Pay Band group does not have defined Min/Mid/Max values for a given job level, THE system SHALL display a placeholder message: \"Pay Band not defined for this job level\" and render the box as a dashed outline with no fill.\n\n### Individual Salary Display\n\nFOR EACH employee in the uploaded dataset, THE system SHALL display a single short vertical line (1–2 pixels wide) at the precise Y-coordinate corresponding to their annual salary on the respective job level X-position.\n\nTHE salary line SHALL be positioned within the boundaries of the Pay Band box for its job level. If the salary falls outside the Pay Band, the line SHALL extend beyond the box boundary.\n\nTHE salary lines SHALL be displayed in a neutral color (e.g., dark gray) to ensure clarity without drawing undue attention.\n\nIF an employee's salary exceeds the defined Max value for their job level, THE system SHALL highlight their salary line with a red tint.\n\nIF an employee's salary is below the defined Min value for their job level, THE system SHALL highlight their salary line with a blue tint.\n\nWHEN a user hovers over a salary line, THE system SHALL display a tooltip containing: the employee’s ID, job level, salary amount, and comparison to Pay Band (e.g., \"Salary: 78,000,000 KRW | Pay Band: 60M–100M | Below Min\").\n\n### Interactive Controls (Sliders)\n\nTHE system SHALL provide three interactive sliders for adjusting the Pay Band values: Min, Mid, and Max.\n\nTHE Min slider SHALL allow the user to adjust the lower bound of the Pay Band from 0% to 90% of the current Max value.\n\nTHE Max slider SHALL allow the user to adjust the upper bound of the Pay Band from 110% of the current Min value to 300% of the current Min value.\n\nTHE Mid slider SHALL allow the user to adjust the midpoint value between Min and Max but SHALL NOT allow it to go below Min or above Max.\n\nWHEN any slider is moved, THE system SHALL update the corresponding boundary line in real time and immediately reflect the new Pay Band box in the visualization.\n\nWHEN a user moves a slider, THE system SHALL automatically recalculate the percentage of employees falling within each Pay Band segment:\n- Below Min\n- Between Min and Mid\n- Between Mid and Max\n- Above Max\n\nAND SHALL display these percentages in a small summary panel beside the chart.\n\n### Visual Feedback Rules\n\nWHEN the user uploads new compensation data, THE system SHALL clear all previous visualizations and sliders, then render the new dataset and initial Pay Bands.\n\nWHEN sliders are moved, THE system SHALL animate the movement of Min, Mid, and Max lines with a smooth transition lasting 400 milliseconds for perceptual continuity. No transitions SHALL be applied to individual salary lines.\n\nWHEN an employee’s salary crosses a Pay Band boundary due to a slider adjustment, THE system SHALL flash their salary line once in the appropriate highlight color (red/blue) and then revert to default color.\n\nWHERE multiple employees share the same job level and salary, THE system SHALL stack their vertical lines side-by-side (with small horizontal offsets) to ensure all individual markers remain visible.\n\nWHEN a Pay Band box becomes empty (no employees assigned to a job level), THE system SHALL render the box in a light gray with no fill, and display the text \"No employees\" centered inside the box.\n\nTHE visualization SHALL be responsive to window resizing. The chart SHALL maintain its aspect ratio and reflow its elements without loss of clarity when the browser window is resized.\n\nTHE system SHALL use only color, position, and shape to convey information — no text or labels shall be embedded directly within the Pay Band box except for the Min, Mid, and Max labels placed briefly to the left of each boundary line.\n\nWHEN a HR operator exports the visualization, THE system SHALL generate a PNG or PDF file that preserves all visual elements (Pay Band boxes, salary lines, labels, and tooltip information in a static format). Only the current view shall be exported.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# Budget Simulation Requirements\n\n### Simulation Purpose\n\nThe Pay Band System enables HR operators to simulate the financial impact of compensation adjustments before implementation. This simulation tool supports data-driven decision-making by modeling how changes in headcount or average salary affect total compensation costs. The system does not apply changes to actual payroll data — it provides a safe, interactive environment for forecasting, scenario planning, and budget alignment with organizational goals.\n\nThis simulation capability is critical for:\n- Evaluating hiring freezes or expansion plans\n- Assessing the cost of salary increases during performance cycles\n- Aligning compensation strategy with departmental budgets\n- Demonstrating ROI of retention initiatives\n\n### Adjustable Parameters\n\nHR operators may simulate compensation changes using two input parameters:\n\n1. **Headcount Change**\n   - User may increase or decrease total headcount by up to ±10%\n   - Changes are applied proportionally across all job levels\n   - Simulated headcount must remain ≥ 1 (minimum one employee)\n\n2. **Average Salary Change**\n   - User may increase or decrease average salary by up to ±20%\n   - Changes are applied uniformly to all employees in the dataset\n   - Salary adjustments do not alter individual Pay Band boundaries or salary distribution\n\nInputs are provided via dual slider controls in the UI:\n- Headcount slider: -10% to +10%, in 1% increments\n- Average salary slider: -20% to +20%, in 1% increments\n\nThe system shall disable simulation beyond these bounds and shall display a warning message if manual input exceeds these ranges.\n\n### Budget Calculation Formula\n\nTHE system SHALL calculate total compensation budget using the following formula:\n\n**Budget = Total Headcount × Average Salary**\n\nWhere:\n- **Total Headcount** = Number of employees in the uploaded dataset\n- **Average Salary** = Sum of all employees' salaries ÷ Total Headcount\n\nTHE system SHALL calculate these values directly from the most recently successfully uploaded `.xlsx` file.\n\nWHEN a simulation is initiated, THE system SHALL:\n- Multiply the original headcount by (1 + headcount adjustment percentage)\n- Multiply the original average salary by (1 + salary adjustment percentage)\n- Recalculate budget using the modified values\n- Display both the original and simulated budget values for comparison\n\nWHERE headcount adjustment is set to 0%, THEN THE system SHALL use the original headcount from the upload.\nWHERE salary adjustment is set to 0%, THEN THE system SHALL use the original average salary calculated from the upload.\n\n### Real-Time Update Requirements\n\nWHEN a user adjusts either the headcount or average salary slider, THE system SHALL:\n- Recalculate the simulated budget in real time\n- Update the displayed budget value within 300 milliseconds of slider movement\n- Display both the absolute value (e.g., ₩5.2B) and percentage change (e.g., +8.7%) relative to the original budget\n\nTHE system SHALL not require the user to click a separate ‘Apply’ or ‘Calculate’ button — all changes shall update immediately as the slider is moved.\n\nWHILE the simulation is in progress, THE system SHALL:\n- Display the modified headcount and average salary values below the sliders\n- Highlight the current budget value with a visual indicator (e.g., bold, color-coded)\n- Maintain the original budget reference value for direct comparison\n\n### Display Format for Budget Changes\n\nTHE system SHALL display budget change results using the following format:\n\n> **Original Budget**: ₩5,120,000,000\n> **Simulated Budget**: ₩5,450,000,000 (+6.4%) \n> - Headcount: 97 (↑3.2%) \n> - Average Salary: ₩56,185,567 (↑3.2%)\n\nTHE system SHALL use the local currency symbol (₩) for all displayed values.\n\nWHEN the simulation results exceed the department’s approved budget ceiling (if defined in a future enhancement), THE system SHALL display a warning message: \n\n> ‘Simulated budget exceeds current departmental ceiling. Review alignment with fiscal plan.’\n\nTHE system SHALL NOT display unit costs per employee in the result summary.\n\nTHE system SHALL preserve the original budget calculation regardless of simulation input and SHALL always allow the user to reset to original values with one click.\n\nWHEN the user uploads new compensation data, THE system SHALL immediately reset all simulation parameters to 0% and recalculate the original budget based on the new dataset.\n\nWHILE the chart visualization is being updated, THE system SHALL not mutate the underlying uploaded dataset. All simulations are in-memory overlays and do not alter source data.\n\nNOTE: The simulation is a predictive model based on the current dataset. It does not account for bonuses, allowances, recruitment costs, or regional salary differentials. These may be added in future releases.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# HR Operator Workflow for Pay Band System\n\nThe Pay Band System enables HR operators to dynamically analyze and simulate compensation structures based on uploaded employee data. This document defines the complete sequence of user actions and system responses that shape the operational workflow. The flow is linear and gated — users cannot proceed to downstream functions without completing upstream steps. This ensures data integrity, usability, and predictable system behavior.\n\n### HR Operator Starting Point\n\nHR operators begin their session on the Pay Band System dashboard. The interface displays a prominent \"Upload Compensation Data\" button and a placeholder visualization area labeled \"Data not loaded. Please upload an Excel file to begin.\" Only the \"Upload Compensation Data\" button is actionable. All other interactive controls — including sliders, simulation inputs, and export buttons — are disabled and visually grayed out. No visualization or data summary is shown until the user successfully uploads valid compensation data.\n\n### Step 1: Upload Compensation Data\n\nWHEN an HR operator selects the \"Upload Compensation Data\" button, THE system SHALL display a standard file browser dialog.\n\nWHEN an HR operator selects a file, THE system SHALL validate that:\n- The file name ends with .xlsx\n- The file contains exactly five columns: 사원ID, 직급, 연봉, 팀, Pay Band\n- Every value in the 연봉 column is a positive number (greater than 0)\n- Every value in the 사원ID column is non-empty\n- Every value in the 직급 and Pay Band columns is non-empty text\n\nIF any validation rule fails, THEN THE system SHALL display a clear, specific error message detailing the failure (e.g., \"Column '연봉' contains invalid values. All salaries must be positive numbers.\") and return the user to the upload screen with no data loaded.\n\nWHERE the file passes validation, THE system SHALL read and load all data into memory, then automatically proceed to Step 2.\n\nWHILE the upload is processing (typically under 2 seconds), THE system SHALL display a progress spinner next to the upload button with the text \"Loading data...\".\n\n### Step 2: View Initial Pay Band Visualization\n\nWHEN the system successfully loads compensation data, THE system SHALL generate and display a Pay Band visualization.\n\nTHE visualization SHALL show:\n- X-axis: Job levels (직급), sorted in ascending order of seniority\n- Y-axis: Salary amount in KRW (드러너)\n- For each job level, a horizontal box representing its Pay Band, with three horizontal lines marking Min, Mid, and Max values\n- Each employee’s salary as a short, vertical line positioned along the Y-axis within the corresponding job level’s Pay Band box\n\nTHE system SHALL sort job levels by a predefined internal hierarchy (e.g., Intern, Associate, Senior, Manager, Director, VP, Executive) and group multiple records with the same 직급 into one bar.\n\nTHE system SHALL display total headcount and the overall average salary above the visualization. The Pay Band box colors shall be neutral (e.g., light gray borders), with no highlighting until interaction.\n\n### Step 3: Adjust Min/Mid/Max Using Sliders\n\nWHEN data is successfully loaded, THE system SHALL enable three interactive sliders below the visualization:\n- One slider for Min value of the selected Pay Band\n- One slider for Mid value of the selected Pay Band\n- One slider for Max value of the selected Pay Band\n\nWHEN an HR operator selects a Pay Band group from a dropdown labeled \"Select Pay Band Group to Adjust\", THE system SHALL populate the sliders with the current Min, Mid, and Max values for that group.\n\nWHILE an HR operator drags a slider, THE system SHALL immediately (within ≤ 300 milliseconds) update the visualization to reflect the new Min, Mid, or Max boundary for the selected Pay Band group. Other Pay Band groups shall remain unchanged.\n\nWHEN a slider value is changed, THE system SHALL display a live counter next to each slider showing the new absolute value in KRW (e.g., \"Min: 68,500,000 KRW\").\n\nIF an HR operator attempts to set Min > Mid or Mid > Max, THEN THE system SHALL prevent the adjustment, snap the value back to the nearest valid configuration, and display a tooltip: \"Min must be ≤ Mid ≤ Max. Adjust values accordingly.\"\n\nWHEN an HR operator selects a different Pay Band group, THE system SHALL update all three sliders to reflect the values of the newly selected group. The visualization shall instantly repopulate with updated band boundaries for the selected group.\n\n### Step 4: Run Budget Simulation with Inputs\n\nWHEN data is loaded, THE system SHALL enable the \"Run Budget Simulation\" panel below the sliders.\n\nTHE panel SHALL contain:\n- A numeric input for \"Adjust Headcount\" with range [−10% to +10%], default 0%\n- A numeric input for \"Adjust Average Salary\" with range [−20% to +20%], default 0%\n- A \"Run Simulation\" button\n\nWHEN an HR operator enters a value into one of the simulation inputs, THE system SHALL calculate the new budget in real time using the formula:\n\n**New Budget = (Current Headcount × (1 + Headcount Adjustment)) × (Current Average Salary × (1 + Salary Adjustment))**\n\nWHILE the HR operator modifies the inputs, THE system SHALL update the simulation output display immediately:\n- Current Budget: [value] KRW\n- New Budget: [value] KRW\n- Delta: [±value] KRW ([±percentage]%) \n\nWHEN the \"Run Simulation\" button is clicked, THE system SHALL overlay the simulation result on the Pay Band visualization:\n- Dashed lines shall appear on the Y-axis, showing the new average salary level\n- The total headcount and budget numbers shall be displayed in a highlighted box with green (increase) or red (decrease) background\n- The unchanged Pay Band boundaries shall remain visible for comparison\n\nWHEN a simulation has been run, THE system SHALL persist the simulation state until the user either uploads new data or explicitly clears the simulation.\n\n### Step 5: Review Combined Impact\n\nWHEN HR operators combine slider adjustments with manual budget simulations, THE system SHALL display all changes simultaneously on the visualization.\n\nTHE visualization SHALL show:\n- Original Pay Band boundaries (solid lines)\n- Modified Pay Band boundaries (dashed lines or highlighted color if changed)\n- Actual employee salary distribution\n- Simulation-adjusted average salary (dashed horizontal line)\n\nTHE system SHALL provide a summary panel labeled \"Combined Impact\" that lists:\n- Pay Band Change: \"Min increased by 5%, Max decreased by 3%\"\n- Headcount Change: \"+7%\"\n- Salary Change: \"+12%\"\n- Total Budget Impact: \"+19.3% (₩2.87B)\"\n\nTHIS panel SHALL update in real time as any input changes. There shall be no delay between user action and feedback.\n\n### Step 6: Save or Export Results\n\nWHEN an HR operator is satisfied with the current state of the visualization and simulation, THE system SHALL enable an \"Export as PNG\" button and a \"Export as PDF\" button below the visualization.\n\nWHEN an HR operator clicks either button, THE system SHALL generate a static image of the current visualization, including:\n- All Pay Band boundaries (original and modified)\n- All employee salary markers\n- Simulation summary box\n- Axes, labels, and legend\n- Any active simulation overlays or percentage deltas\n\nTHE system SHALL default to PNG format, but offer PDF as an alternative for printing or formal reporting.\n\nTHE exported file SHALL be named: \"PayBandAnalysis_[YYYYMMDD]_[HHMMSS].png\" or \".pdf\"\n\nIF the export fails due to system error, THEN THE system SHALL display: \"Export failed. Please refresh and try again.\"\n\nWHERE export succeeds, THE system SHALL prompt: \"File saved to your downloads folder.\"\n\nNOT: HR operators cannot export until data has been uploaded and at least one adjustment or simulation has been applied. The export buttons shall remain disabled if the system is showing only the initial, unmodified visualization.\n\n------------------------------\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*\n\n# Non-Functional Requirements\n\nThe Pay Band System must deliver an intuitive, responsive, and reliable experience for HR operators and employee viewers alike. While functional requirements define what the system does, non-functional requirements define how well it does it — under real-world conditions. This document specifies measurable, testable standards for performance, reliability, and accessibility that directly impact user satisfaction and system trustworthiness.\n\n## Performance Expectations\n\nTHE Pay Band System SHALL process Excel uploads and render the initial Pay Band visualization within 5 seconds when the file contains up to 100 rows of compensation data. This threshold ensures HR operators do not experience perceptible delays during routine data onboarding, maintaining productivity and workflow continuity.\n\nWHEN an HR operator modifies a Pay Band Min, Mid, or Max value using an interactive slider, THE system SHALL update the visualization and associated budget metrics within 300 milliseconds. This ensures a seamless, real-time feedback loop that supports rapid iterative analysis without lag or disorientation.\n\nWHEN a budget simulation is triggered (e.g., +5% headcount, +10% average salary), THE system SHALL recalculate and display the new budget estimate and distribution impact within 500 milliseconds. This rapid response preserves the cognitive flow of strategic compensation planning and enables confident scenario exploration.\n\n## Data Load Time\n\nWHEN an HR operator uploads an .xlsx file with fewer than 100 rows, THE system SHALL complete validation, parsing, and internal state update within 5 seconds. This requirement ensures data ingestion remains efficient even on moderate network conditions and does not introduce bottlenecks during daily HR operations.\n\nIF the uploaded .xlsx file exceeds 100 rows, THE system SHALL display a warning message informing the user that processing time may increase beyond 5 seconds, but SHALL still process the file to completion. The system SHALL NOT reject or truncate data based on file size alone. This ensures flexibility for larger teams while managing user expectations.\n\n## UI Responsiveness\n\nWHILE an HR operator is dragging a slider to adjust Pay Band Min/Mid/Max values, THE system SHALL throttle updates to no less than 10 frames per second (equivalent to one update every 100 milliseconds). This guarantees fluid, natural interaction even during rapid adjustments, preventing a \"jittery\" or unresponsive appearance.\n\nWHEN a simulation parameter changes (headcount, average salary), THE system SHALL highlight the changed value and display the new budget result with a visual accent (e.g., color shift or animation) to reinforce causality and improve user comprehension.\n\n## Concurrency Support\n\nTHE Pay Band System SHALL support a minimum of 10 concurrent HR operators performing simultaneous actions, including data upload, slider manipulation, and simulation execution. Each user session SHALL be fully isolated — modifications made by one HR operator SHALL NOT affect the data, visualization, or simulation state visible to another user. This ensures secure, independent use in organizational settings with multiple HR teams.\n\n## Data Integrity\n\nIF an uploaded .xlsx file contains invalid or malformed data (e.g., non-numeric salary, missing required column, improper date format), THE system SHALL reject the upload and display a clear, actionable error message listing each specific issue. The system SHALL NOT alter, corrupt, or overwrite existing compensation data already loaded and visualized.\n\nWHILE simulation parameters are being adjusted or a new upload is in progress, THE system SHALL preserve the last valid state of the Pay Band visualization and budget calculation. This allows the user to recover gracefully from failed actions without losing prior work.\n\nIF the system encounters an internal error (e.g., timeout, memory exhaustion) during processing, THE system SHALL revert to the last known safe state and display a generic notification: \"An unexpected error occurred. Your last valid configuration has been restored.\" This prevents state corruption and maintains user trust.\n\n## Browser Compatibility\n\nTHE Pay Band System SHALL fully support the latest two versions of the following browsers on desktop platforms:\n- Google Chrome\n- Microsoft Edge\n- Apple Safari\n\nThe system SHALL NOT degrade functionality or layout in any of the supported browsers. All visualizations, sliders, and data displays SHALL render correctly and remain fully interactive.\n\n## Accessibility\n\nTHE Pay Band System SHALL be fully navigable using keyboard-only input, allowing HR operators to tab through all interactive controls (upload button, sliders, simulation inputs) and activate them using the Enter or Space keys.\n\nWHEN the Pay Band visualization renders, THE system SHALL generate equivalent textual ARIA labels for each job level band, specifying the Min, Mid, Max values and number of employees in each group. This enables screen readers to accurately convey the visualization content to users with visual impairments.\n\nWHENEVER an error message is displayed, THE system SHALL ensure it is programmatically announced by screen readers using an appropriate ARIA live region. This ensures all users, regardless of ability, are aware of system feedback and can respond appropriately.\n\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To establish the business context and justification for why this system exists, including strategic goals, market needs, and how it differentiates from manual compensation analysis.","filename":"01-service-vision.md","documentType":"service-overview","outline":["Why This System Exists","Current Pain Points in Compensation Planning","Value to HR and the Organization","Competitive Advantage","Future Vision and Scalability"],"audience":"business stakeholders","keyQuestions":["What inefficiencies exist in current compensation analysis?","How does this system improve decision-making?","What long-term impact will it have on talent retention?"],"detailLevel":"moderate detail","constraints":["Must quantify current manual process limitations","Must link system to strategic HR goals","Must avoid any mention of data structures or APIs"],"content":"## Why This System Exists\n\nThe Pay Band System was created to address the inefficiencies, delays, and inaccuracies inherent in traditional, manual approaches to compensation analysis. Historically, HR teams relied on spreadsheets, static PDF reports, and time-consuming manual aggregation to understand pay distribution, identify inequities, and forecast budget impacts. This process was reactive, slow, and incapable of supporting real-time decision-making. With compensation as one of the largest line items in any organization’s budget, the inability to rapidly assess how changes in pay bands or headcount affect total spending leads to poor talent decisions, delayed promotions, unintended pay inequities, and budget overruns.\n\nThis system transforms compensation planning from a quarterly reporting exercise into a proactive, interactive, and data-driven strategic process. By visualizing pay bands in real time and simulating the financial impact of workforce changes, HR operators gain unprecedented insight into how their decisions directly affect organizational spend and fairness. The system enables HR to move beyond answering \"What is our current pay structure?\" to answering critical strategic questions like: \"What happens if we promote 5 analysts next quarter?\" or \"If we adjust the manager pay band’s maximum by 15%, how does that impact total compensation across the organization?\"\n\n## Current Pain Points in Compensation Planning\n\nCurrent manual compensation analysis suffers from five critical failures:\n\n1. **Delayed Insights**: HR teams wait weeks to receive compensation data from payroll systems, compile it into Excel, and then manually create charts. By the time a review is complete, the data is already outdated. HR cannot act on insights until it's too late.\n\n2. **Static Visualizations**: Spreadsheets produce flat, static charts that cannot be manipulated. HR is unable to explore \"what-if\" scenarios. For example, if an HR operator suspects a pay band is too narrow, they cannot adjust its Max value on the fly to see how many employees would be affected.\n\n3. **Disconnected Budget Modeling**: Pay band changes and headcount projections are calculated separately. An HR operator might know they plan to hire 10 new engineers but doesn’t know the combined financial effect of those hires *and* an intended 10% increase to the engineer pay band’s Mid-point. This leads to inaccurate budget forecasts.\n\n4. **Inability to Identify Outliers**: In spreadsheets, individual salaries are buried in rows. It is impossible to quickly see which employees are at or beyond the Max of their pay band — a key risk for retention and compliance. HR cannot visually flag potential overpayment or underpayment without manual cross-referencing.\n\n5. **Lack of Transparency for Leadership**: Compensating executives or finance partners with PDF reports and raw Excel files is not actionable. Decision-makers cannot explore the data themselves. They must request new reports for even minor adjustments, creating bottlenecks and eroding trust.\n\n## Value to HR and the Organization\n\nThe Pay Band System delivers substantial strategic and operational value:\n\n- **Real-Time Pay Gap Identification**: HR operators can immediately see which job levels have employees clustered near the Pay Band Max — indicating potential retention risks — or far below the Min — indicating possible underpayment or misclassification. This visual clarity replaces hours of manual analysis.\n- **Budget Forecasting Agility**: The ability to swiftly simulate the impact of headcount changes (+5, +15%) or salary adjustment thresholds (+10%, +20%) allows HR to align compensation strategy with recruitment plans and financial constraints before fiscal planning cycles begin.\n- **Data-Driven Advocacy**: HR can demonstrate the fiscal impact of proposed pay changes using compelling visualizations. Instead of saying, \"We need to adjust the Senior Engineer band,\" HR can show, \"Raising the Max from $160K to $180K will increase our total annual compensation cost by $2.3M, impacting 17 individuals. This aligns with our market data and budget projections for 2026.\"\n- **Reduced Risk and Legal Exposure**: By making pay outliers visible and quantifiable, the system proactively surfaces potential bias or inequity before it leads to claims or audits.\n- **Improved Talent Retention**: When HR can proactively identify employees nearing pay band ceilings, they can initiate career path discussions or targeted bonuses before those individuals become disengaged and start looking elsewhere.\n- **Unified Communication Platform**: Both HR operators and senior leaders (who have read-only access) view the same authoritative data. This eliminates confusion and aligns organizational understanding.\n\n## Competitive Advantage\n\nMost competitors offer rigid dashboards with fixed reports. Some provide static pay band heat maps. None offer the integrated combination of: 1) immediate Excel upload, 2) dynamic Pay Band slider manipulation, and 3) linked headcount/salary simulation — all rendered in real time on a single, unified visual.\n\nThis system’s competitive advantage is its **orchestrated interactivity**. The moment an HR operator moves the \"Max\" slider from $160K to $175K, they instantly see which employees cross into a new tier, how many are affected, and how the budget total changes. This fusion of data input, adjustment, and financial impact — happening simultaneously — is unprecedented in compensation software.\n\nNo other system delivers this level of empowerment to the HR operator to act as a strategic financial partner, blending compensation expertise with business acumen in real time.\n\n## Future Vision and Scalability\n\nThis system is designed as a foundational platform for compensation intelligence. The core vision extends beyond the Pay Band visualization:\n\n- **Let’s say in 2026, the HR team wants to correlate compensation data with employee engagement scores from their survey platform.** The architecture is already built to layer new data sources — the Pay Band structure is the first layer. The system can expand to overlay retention risk scores, promotion velocity, or performance ratings onto each employee dot.\n\n- In 2027, the system will integrate with the ERP’s inventory of open roles. When a hiring manager submits a request, the system will immediately warn, \"Promoting this candidate to Senior Analyst will exceed the pay band Max. Consider adjusting the band by 8% or delaying the promotion.\" This makes the tool predictive, not just descriptive.\n\n- Long-term, this will become the central hub for compensation strategy. The \"HR Operator\" role can extend to include external market data feeds, allowing automatic Pay Band adjustments tied to third-party salary benchmarks — all while preserving the manual override capability for nuanced local decisions.\n\n- Eventually, the \"Employee Viewer\" role can be extended to all managers, empowering them to understand how their team’s pay distribution ranks against company norms — improving transparency and trust across the organization.\n\nThe system is not just a visualization tool — it is the first step toward turning compensation into a real-time, predictive, and strategic lever for organizational performance. The current implementation is the visible tip of a much larger iceberg of intelligence that will grow over time, driven by the data and insights it generates today."},{"reason":"To define the core user roles, their responsibilities, permissions, and access levels in business terms, forming the foundation of the authentication framework.","filename":"02-user-roles.md","documentType":"user-story","outline":["Role Overview","HR Operator Responsibilities","HR Operator Permissions","Employee Viewer Responsibilities","Employee Viewer Permissions","Access Control Philosophy"],"audience":"development team","keyQuestions":["Who can upload and modify data?","Who can only view results?","How are access boundaries enforced?","Are there any shared or overlapping capabilities?"],"detailLevel":"detailed specification","constraints":["Must explicitly state HR Operator as admin-level, Employee Viewer as member-level","Must use business language for permissions, not technical controls","Must specify no cross-role access permissions"],"content":"# User Roles Specification\n\n## Role Overview\n\nThe Pay Band System supports two distinct user roles with clearly defined, non-overlapping responsibilities. These roles are designed to separate data control from information consumption, ensuring security, accountability, and operational efficiency. One role is empowered to manage and adjust compensation data and simulation parameters, while the other is restricted to viewing results only. There are no shared capabilities or ambiguous permission overlaps between these roles.\n\n## HR Operator Responsibilities\n\nHR operators are the only users authorized to initiate, modify, and control the core compensation data and simulation parameters of the Pay Band System. They are responsible for ensuring the accuracy, timeliness, and strategic alignment of compensation planning.\n\n- HR operators SHALL upload compensation data files in .xlsx format to populate the Pay Band visualization.\n- HR operators SHALL adjust the Min, Mid, and Max salary values for any Pay Band group using interactive sliders.\n- HR operators SHALL simulate changes to total compensation budget by increasing or decreasing headcount and modifying average salary.\n- HR operators SHALL review the real-time impact of their adjustments on Pay Band distribution and total budget.\n- HR operators SHALL export the current visualization state as PNG or PDF for reporting purposes.\n- HR operators SHALL be notified when uploaded data contains missing or invalid values and SHALL correct the file before continuing.\n\n## HR Operator Permissions\n\nHR operators are granted full operational authority over all data inputs and simulation controls. These permissions are defined in business terms and are not limited by interface controls alone.\n\n- WHEN an HR operator accesses the system, THE system SHALL recognize their role and enable all data entry and simulation tools.\n- THE system SHALL NOT display any data manipulation controls to users who are not HR operators.\n- WHEN a data upload is initiated, THE system SHALL accept the file only if the user has HR operator privileges.\n- WHERE a user attempts to adjust a Pay Band slider, THE system SHALL prevent the action if the user is not an HR operator.\n- IF a user attempts to modify headcount or average salary in the simulation panel, THEN THE system SHALL deny the request and display a message that only HR operators may adjust these values.\n- THE system SHALL ensure that HR operator actions cannot be performed by an Employee Viewer, even if the Employee Viewer attempts to manipulate the interface manually.\n\n## Employee Viewer Responsibilities\n\nEmployee viewers are authorized to consume and understand the compensation framework of their organization. Their role is strictly observational, supporting transparency and trust without granting any influence over data or strategy.\n\n- Employee viewers SHALL view the current Pay Band distribution and salary alignment across job levels.\n- Employee viewers SHALL view the simulated total compensation budget under different headcount and salary adjustment scenarios.\n- Employee viewers SHALL not make any modifications to data, sliders, or simulation inputs.\n- Employee viewers SHALL access the system immediately after authentication, without requiring request approval or waiting period.\n- Employee viewers SHALL receive visual feedback indicating that their access is limited to viewing only.\n\n## Employee Viewer Permissions\n\nEmployee viewers are granted read-only access to all visualization and simulation outputs. No input, adjustment, or export capability is permitted.\n\n- WHEN an employee viewer logs in, THE system SHALL display only the Pay Band visualization and simulated budget results.\n- THE system SHALL hide all upload buttons, slider controls, and simulation input fields from employee viewers.\n- IF an employee viewer attempts to trigger a form submission or drag a slider, THEN THE system SHALL prevent the action and display a message: \"You have read-only access. Only HR operators can modify Pay Band values or run simulations.\"\n- WHERE an employee viewer attempts to export the chart, THEN THE system SHALL disable the export button and not respond to the action.\n- THE system SHALL not allow an employee viewer to access or trigger any backend process related to data upload, simulation calculation, or Pay Band adjustment.\n- THE system SHALL treat any attempt by an employee viewer to bypass interface restrictions as a security violation.\n\n## Access Control Philosophy\n\nThe user access model of the Pay Band System is based on the principle of least privilege: each user is granted only the minimum permissions necessary to fulfill their business function. This model prevents accidental or intentional misuse of sensitive compensation data.\n\n- HR operators and employee viewers SHALL have completely separate access paths within the system.\n- There SHALL be no overlap, shared functionality, or role escalation between HR operators and employee viewers.\n- The system SHALL ensure that permission boundaries are enforced at the application level, regardless of interface design or client-side manipulation.\n- Every action taken by an HR operator SHALL be contextually available only to the HR operator role.\n- Every view displayed to an employee viewer SHALL be stripped of any editing, simulation, or data control capability.\n- THE system SHALL not rely on client-side visibility alone to restrict access; server-side permission checks SHALL be mandatory for every request that triggers data modification or simulation logic.\n- BETWEEN roles, there SHALL be no ability to mimic the permissions of the other.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To document the complete authentication flow and security expectations for both user roles, ensuring developers understand how users enter the system and maintain session integrity.","filename":"03-authentication-flow.md","documentType":"requirement","outline":["Authentication Goals","Login Process","Session Management","Token Usage (JWT)","Logout and Session Expiry","Security Requirements"],"audience":"development team","keyQuestions":["How do users authenticate?","What happens when a session expires?","How are tokens structured for each role?","Where should tokens be stored?","How is unauthorized access prevented?"],"detailLevel":"detailed specification","constraints":["Must specify JWT as the token type","Must define role claims in payload (e.g., role: 'hrOperator')","Must describe user flow, not API endpoints or header values","Must state session timeout expectations in business terms"],"content":"## Authentication Flow for Pay Band System\n\nThe Pay Band System enables two distinct user roles: hrOperator (admin) and employeeViewer (member). Authentication must enforce strict separation of access rights while providing a seamless, secure entry experience. This document defines the complete authentication flow in business language, ensuring developers understand WHAT the system must do — not HOW to build it.\n\n\n## Authentication Goals\n\nTHE Pay Band System SHALL enable secure, role-based access for human resources operators and general employees, ensuring that only authorized users can interact with the system and that each user can only perform actions permitted by their role. The system SHALL prevent unauthorized access to sensitive data or configuration tools, and SHALL automatically terminate inactive sessions to protect compensation information.\n\n\n## Login Process\n\nWHEN a user visits the Pay Band System, THE system SHALL display a unified login page accepting email and password.\n\nWHEN the user submits valid credentials, THE system SHALL authenticate the user against the central user directory and determine the assigned role (hrOperator or employeeViewer).\n\nWHEN authentication succeeds, THE system SHALL redirect the user to the appropriate home view based on role: HR operators to the data upload and simulation interface, and employees to the read-only visualization dashboard.\n\nWHEN authentication fails due to incorrect email or password, THE system SHALL display a clear message: \"Invalid email or password. Please try again.\"\n\nWHEN authentication fails due to an inactive or disabled account, THE system SHALL display: \"Your account is currently inactive. Please contact your HR department.\"\n\nWHILE the user is unauthenticated, THE system SHALL NOT display any Pay Band data, simulation controls, or upload options.\n\n\n## Session Management\n\nWHEN a user successfully logs in, THE system SHALL create a secure session and issue a JSON Web Token (JWT).\n\nWHILE the user is active (i.e., making requests or interacting with the interface), THE system SHALL extend the session validity by resetting the inactivity timer.\n\nWHEN the user remains inactive for more than 30 minutes, THE system SHALL automatically terminate the session and clear all session state.\n\nWHEN a user initiates any action after session expiry, THE system SHALL redirect the user to the login page with a message: \"Your session has expired. Please log in again.\"\n\nWHEN a new login occurs for a user who already has an active session, THE system SHALL invalidate the previous session token and issue a new one.\n\n\n## Token Usage (JWT)\n\nTHE Pay Band System SHALL use JSON Web Tokens (JWT) for stateless authentication.\n\nTHE JWT payload SHALL contain at minimum:\n- userId: unique alphanumeric identifier of the user (e.g., \"usr_abc123\")\n- role: string value matching exactly one of: \"hrOperator\" or \"employeeViewer\"\n\nTHE JWT SHALL NOT contain:\n- Email address\n- Password\n- Personal identifiers (e.g., social security number)\n- Any data not required for role-based access control\n\nTHE system SHALL validate each incoming request using the JWT signature and role claim.\n\nWHEN a request contains an invalid or expired JWT, THE system SHALL reject the request with HTTP 401 Unauthorized and clear any client-side session state.\n\nWHEN a request contains a valid JWT but the role does not match the requested action (e.g., employeeViewer attempts to upload data), THE system SHALL reject the request with HTTP 403 Forbidden.\n\n\n## Logout and Session Expiry\n\nWHEN the user selects \"Log Out\", THE system SHALL clear the JWT from client storage, terminate the server-side session, and redirect the user to the login page with the message: \"You have been logged out successfully.\"\n\nWHEN the session expires due to inactivity, THE system SHALL behave as if the user manually logged out: all data is cleared, and navigation to protected pages shall redirect to login.\n\nTHE system SHALL NOT automatically attempt to refresh a token without user interaction.\n\n\n## Security Requirements\n\nTHE system SHALL require all traffic to use HTTPS.\n\nTHE system SHALL reject any request lacking a valid JWT.\n\nTHE system SHALL NOT allow JWTs to be passed through URL parameters.\n\nTHE system SHALL NOT expose the JWT payload to frontend code in plain text beyond what is necessary for role-based UI rendering (e.g., showing/hiding buttons).\n\nWHERE the user is a hrOperator, THE system SHALL enforce that no simulation or upload functionality is accessible without a validated JWT containing role: \"hrOperator\".\n\nWHERE the user is an employeeViewer, THE system SHALL enforce that all data displayed is read-only, and no interface controls for modification are rendered or enabled.\n\nIF a JWT is tampered with, modified, or signed with an unauthorized key, THEN THE system SHALL immediately invalidate the token and display an error message to the user: \"Your session is no longer valid. Please log in again.\"\n\nWHILE a session is active, THE system SHALL protect against session riding and CSRF attacks by requiring consistent token usage and validating origin context on sensitive operations such as uploads and simulation triggers."},{"reason":"To specify the required data schema for the Excel upload, ensuring alignment between data input and system processing logic without exposing technical storage details.","filename":"04-data-upload-spec.md","documentType":"requirement","outline":["Upload Format","Required Columns","Data Validation Rules","Error Handling for Uploads","Expected Data Formats"],"audience":"development team","keyQuestions":["What are the mandatory fields in the Excel file?","How should missing or invalid data be handled?","Are there format rules for columns (e.g., salary as number)?","What user feedback should be shown when upload fails?"],"detailLevel":"detailed specification","constraints":["Must list exact column names: 사원ID, 직급, 연봉, 팀, Pay Band","Must specify .xlsx file format only","Must define numerical validation for 연봉 (e.g., must be > 0)","Must avoid any reference to database tables or storage engines"],"content":"The Pay Band System requires users to upload compensation data in a specific Excel (.xlsx) format. The system processes this data to generate dynamic Pay Band visualizations and budget simulations. The structure of the uploaded file is critical to system functionality and must be strictly enforced.\n\n### Upload Format\n\nTHE system SHALL accept only .xlsx files for compensation data uploads. All other file formats (including .csv, .xls, .ods, .txt) SHALL be rejected with a clear error message.\n\n### Required Columns\n\nWHEN a user uploads an Excel file, THE system SHALL require exactly five (5) columns with the exact following names, in any order:\n\n- 사원ID\n- 직급\n- 연봉\n- 팀\n- Pay Band\n\nIF any of these five columns are missing, THE system SHALL reject the upload and display a specific error message listing the missing column names.\n\n### Data Validation Rules\n\nWHEN the system processes each row of the uploaded Excel file, THE system SHALL validate the following rules:\n\n1. 사원ID: \n   - SHALL be a non-empty string or number\n   - SHALL NOT be null or blank\n   - SHALL be unique across all uploaded rows (if duplicate, the system SHALL flag the duplicate for review)\n   - Optional alphanumeric format: may contain hyphens, underscores, or numbers\n\n2. 직급:\n   - SHALL be a non-empty string\n   - SHALL NOT be null or blank\n   - SHALL be treated as a textual job level designation (e.g., \"Manager\", \"Senior Engineer\", \"Analyst\")\n\n3. 연봉:\n   - SHALL be a positive number greater than zero\n   - SHALL NOT be zero, negative, null, or blank\n   - SHALL be interpretable as a numeric value (e.g., 52000, 75000.50, 98000)\n   - SHALL be treated as Korean Won (KRW) without currency symbols\n   - IF value is non-numeric or ≤ 0, THE system SHALL reject the entire row and notify user of invalid entry\n\n4. 팀:\n   - SHALL be a non-empty string\n   - SHALL NOT be null or blank\n   - MAY contain alphanumeric characters, spaces, or special symbols (e.g., \"Sales - APAC\", \"R&D/Innovation\")\n\n5. Pay Band:\n   - SHALL be a non-empty string\n   - SHALL NOT be null or blank\n   - SHALL reference a pre-defined Pay Band Group name (e.g., \"Band B\", \"Director Level\", \"Research Tier 3\")\n   - The system SHALL NOT validate whether the Pay Band name exists in a master list during upload — it shall be treated as a free-text label for later system alignment\n\nAll other columns found in the uploaded Excel file SHALL be ignored and not stored or processed.\n\n### Error Handling for Uploads\n\nIF the uploaded file:\n- Is not a valid .xlsx format, THEN THE system SHALL display: \"Please upload a valid Excel (.xlsx) file.\"\n- Contains fewer than the five required columns, THEN THE system SHALL display: \"Upload failed: Missing required columns: [list of missing column names]. Please ensure all required columns are present.\"\n- Contains a null/blank value in 사원ID, 직급, 팀, or Pay Band, THEN THE system SHALL display: \"Upload failed: Row [row number] contains missing data in required field [column name].\"\n- Contains a zero, negative, or non-numeric value in 연봉, THEN THE system SHALL display: \"Upload failed: Row [row number] has invalid salary value: [value]. Salary must be a positive number.\"\n- Contains duplicate 사원ID values, THEN THE system SHALL display: \"Upload warning: [count] duplicate employee IDs found. The system will use the last occurrence of each duplicate. Review data for accuracy.\"\n\nWHEN any error occurs, THE system SHALL NOT partially process the file. All rows SHALL be rejected if any row violates validation rules.\n\n### Expected Data Formats\n\nTHE system SHALL interpret all fields according to the following format conventions:\n\n| Column | Input Type | Example Valid Values | Example Invalid Values |\n|--------|------------|----------------------|------------------------|\n| 사원ID | Text/Number | \"EMP12345\", \"12345\", \"e-9987\" | \"\", \"null\", \"-\" |\n| 직급 | Text | \"Senior Developer\", \"Team Lead\" | \"\", \"  \", \"null\" |\n| 연봉 | Positive Number | 68000, 89500.50 | 0, -10000, \"\", \"N/A\" |\n| 팀 | Text | \"Marketing\", \"Product - Mobile\" | \"\", \"CLUSTER\" (if empty) |\n| Pay Band | Text | \"Band C\", \"Executive Tier\", \"Mid-Level\" | \"\", \"none\", \"BANDA\" (if blank) |\n\nWHILE any column value is empty, blank, or contains no printable characters, THE system SHALL treat it as invalid and reject the upload.\n\nWHEN the file is successfully validated, THE system SHALL store the data for visualization and simulation and clear any existing previous upload data.\n\nWHERE Pay Band value does not match any system-defined Pay Band Group, THE system SHALL still accept the upload and use the provided text as-is — the matching to official Pay Band Groups HARVESTED during the annual review process. This allows HR to upload provisional or new band names before formal approval.\n\nIF multiple employees from the same 팀 have identical 직급 and 연봉, THE system SHALL still process them as individual records — aggregation is performed at visualization stage, not upload stage."},{"reason":"To define the Pay Band structure, how it's organized by job group, and how its Min/Mid/Max values relate to job levels and compensation strategy.","filename":"05-pay-band-structure.md","documentType":"business-model","outline":["Pay Band Definition","Pay Band Grouping by Job Family","Min/Mid/Max Value Logic","Annual Adjustment Process","Relationship Between Job Level and Pay Band"],"audience":"business stakeholders","keyQuestions":["How are Pay Bands assigned to job levels?","Can different job families share the same Pay Band?","How often are Min/Mid/Max values updated?","Who approves adjustments to Pay Bands?"],"detailLevel":"moderate detail","constraints":["Must clarify Pay Band is defined by job family, not individual roles","Must state values are fixed per group but adjustable annually","Must not specify how values are stored or queried"],"content":"## Pay Band Structure\n\n### Pay Band Definition\n\nPay Bands are predefined salary ranges that correspond to job families and levels within the organization. Each Pay Band represents a structured compensation band that ensures internal equity and external competitiveness. Pay Bands are not tailored to individual roles but are assigned to groups of similar jobs based on responsibilities, required skills, and market benchmarks.\n\nTHE Pay Band System SHALL define each Pay Band by three fixed monetary values: Min, Mid, and Max. These values represent the minimum, mid-point, and maximum salary allowable for any position assigned to that Pay Band.\n\nWHEN a job level is assigned to a Pay Band, THE system SHALL enforce that all salaries for positions within that job level remain within the Min and Max boundaries, except in cases of approved exceptions (e.g., exceptional retention or market override).\n\n### Pay Band Grouping by Job Family\n\nPay Bands are organized by Job Family, which groups similar roles based on functional domain (e.g., Engineering, Sales, Marketing, Operations, Finance).\n\nTHE Pay Band System SHALL group Pay Bands exclusively by Job Family, ensuring that all roles within the same Job Family share the same set of Pay Band structures.\n\nWHEN a new role is added to the system, THE system SHALL assign it to a single Job Family, and therefore inherit the Pay Band structure defined for that Job Family.\n\nWHERE multiple job levels exist within a Job Family, THE system SHALL assign a unique Pay Band to each level (e.g., Level 1, Level 2, Level 3), with each level having its own Min, Mid, and Max values.\n\n### Min/Mid/Max Value Logic\n\nThe Min, Mid, and Max values for each Pay Band are determined based on market salary surveys, internal pay equity analysis, and organizational compensation philosophy.\n\nTHE system SHALL maintain fixed Min, Mid, and Max values for each Pay Band and job level combination.\n\nTHE system SHALL define Mid as the 50th percentile of market value for the job level, Min as 80% of Mid, and Max as 120% of Mid.\n\nWHEN a Pay Band is first defined, THE system SHALL calibrate its Min, Mid, and Max values based on the most recent compensation benchmark data available to HR.\n\nIF a position’s salary falls below Min, THE system SHALL flag the position as \"Below Pay Band\" for HR review.\n\nIF a position’s salary exceeds Max, THE system SHALL flag the position as \"Above Pay Band\" for HR review.\n\n### Annual Adjustment Process\n\nPay Band Min/Mid/Max values are not static and are adjusted annually to reflect market changes, inflation, and organizational strategy.\n\nWHEN the fiscal year ends, THE HR Operator SHALL review and propose adjustments to one or more Pay Bands based on external market data, internal pay compression, and budget constraints.\n\nWHEN HR Operator submits proposed Pay Band adjustments, THE system SHALL require approval from the Compensation Committee before applying changes to the live structure.\n\nWHILE Pay Band values are under review or pending approval, THE system SHALL continue to display and use the current approved version for visualization and simulation.\n\nWHERE an adjustment is approved, THE system SHALL archive the old Pay Band values and activate the new values on January 1st of the following year.\n\n### Relationship Between Job Level and Pay Band\n\nEach job level (e.g., Junior, Associate, Senior, Lead, Manager) within a Job Family is mapped to a specific Pay Band.\n\nTHE system SHALL ensure a one-to-one mapping between each job level and one Pay Band within its Job Family.\n\nWHEN a job level is promoted or regraded, THE system SHALL reassign the employee automatically to the Pay Band corresponding to the new level.\n\nWHERE an employee's job level does not directly correspond to a known level in the Pay Band hierarchy, THE system SHALL default to the nearest higher or lower Pay Band based on historical usage and compensation policy.\n\nTHE Pay Band System SHALL maintain a lookup table that links every job level title (e.g., \"Software Engineer I\", \"Sales Director\") to its assigned Pay Band and corresponding Min, Mid, and Max values.\n\nWHEN HR Operator uploads compensation data, THE system SHALL validate each employee’s assigned job level against the active Pay Band structure and alert for any mismatched levels not found in the Pay Band hierarchy.\n\nWHEN a Pay Band is modified, THE system SHALL recalculate all employee positions mapped to that Pay Band and update their position within the visual Pay Band box accordingly.\n\nWHEN an employee's job level is changed, THE system SHALL display their salary movement against both the old and new Pay Band ranges to enable analysis of promotion impact."},{"reason":"To describe the visualization requirements in business and user experience terms, specifying how Pay Bands and individual salaries are displayed without dictating UI frameworks or chart libraries.","filename":"06-visualization-requirements.md","documentType":"user-story","outline":["Visualization Objective","Axes Definition","Pay Band Box Representation","Individual Salary Display","Interactive Controls (Sliders)","Visual Feedback Rules"],"audience":"development team","keyQuestions":["What does the X and Y axis represent?","How should Min/Mid/Max be visually represented?","How are individual salaries shown within the band?","What kind of visual feedback should users see when sliders change?","Are there color or size indicators for outliers?"],"detailLevel":"detailed specification","constraints":["X-axis must be job level, Y-axis must be salary amount","Pay Band must be displayed as a box with Min-Mid-Max boundaries","Individual salaries must be shown as short vertical lines inside the box","Sliders for Min/Mid/Max must update visualization in real time","Must not specify charting library (e.g., D3.js, Chart.js)"],"content":"# Pay Band Visualization Requirements\n\nThis document defines the business-level visualization requirements for the Pay Band System. It specifies exactly how compensation data should be rendered on screen to support HR decision-making through intuitive, real-time feedback. This document is strictly focused on what the visualization must show and how it must respond to user input — not on implementation, libraries, or code structure.\n\n### Visualization Objective\n\nTHE Pay Band System SHALL enable HR operators to visually assess the distribution of employee salaries against established Pay Band ranges for each job level. The visualization SHALL provide immediate, accurate, and interpretable feedback so that HR can confidently evaluate compensation alignment, identify outliers, and simulate the impact of adjustments on overall pay equity and budget.\n\nWHEN a user uploads compensation data, THE system SHALL render a visualization that makes it instantly clear whether salaries are below, within, or above defined Pay Band boundaries.\n\nWHILE a user interacts with sliders to adjust Min, Mid, or Max values, THE system SHALL update the visualization in real time to reflect the new Pay Band structure without requiring page reload or manual refresh.\n\n### Axes Definition\n\nTHE X-axis SHALL represent job level, ordered from lowest to highest seniority (e.g., Intern → Junior → Mid-Level → Senior → Manager → Director → Executive). Job level SHALL be derived from the \"직급\" column in the uploaded Excel data.\n\nTHE Y-axis SHALL represent annual salary amount in currency units (e.g., KRW, USD), scaled logarithmically if necessary to accommodate wide salary ranges. The scale SHALL be determined automatically based on the minimum and maximum salary values in the uploaded dataset.\n\n### Pay Band Box Representation\n\nFOR EACH job level, THE system SHALL display a vertical Pay Band box that spans from its defined Min to Max salary value, with a horizontal marker at the Mid point.\n\nTHE Pay Band box SHALL be drawn as a solid outline rectangle with a light fill (e.g., 10% opacity) to distinguish it from individual salary markers.\n\nTHE Mid-point SHALL be indicated with a solid horizontal line across the box, visually separating the lower and upper halves of the Pay Band.\n\nWHEN Pay Band values are adjusted via sliders, THE system SHALL instantaneously move the top (Max), bottom (Min), and middle (Mid) boundary lines of the box to reflect the new values.\n\nIF a Pay Band group does not have defined Min/Mid/Max values for a given job level, THE system SHALL display a placeholder message: \"Pay Band not defined for this job level\" and render the box as a dashed outline with no fill.\n\n### Individual Salary Display\n\nFOR EACH employee in the uploaded dataset, THE system SHALL display a single short vertical line (1–2 pixels wide) at the precise Y-coordinate corresponding to their annual salary on the respective job level X-position.\n\nTHE salary line SHALL be positioned within the boundaries of the Pay Band box for its job level. If the salary falls outside the Pay Band, the line SHALL extend beyond the box boundary.\n\nTHE salary lines SHALL be displayed in a neutral color (e.g., dark gray) to ensure clarity without drawing undue attention.\n\nIF an employee's salary exceeds the defined Max value for their job level, THE system SHALL highlight their salary line with a red tint.\n\nIF an employee's salary is below the defined Min value for their job level, THE system SHALL highlight their salary line with a blue tint.\n\nWHEN a user hovers over a salary line, THE system SHALL display a tooltip containing: the employee’s ID, job level, salary amount, and comparison to Pay Band (e.g., \"Salary: 78,000,000 KRW | Pay Band: 60M–100M | Below Min\").\n\n### Interactive Controls (Sliders)\n\nTHE system SHALL provide three interactive sliders for adjusting the Pay Band values: Min, Mid, and Max.\n\nTHE Min slider SHALL allow the user to adjust the lower bound of the Pay Band from 0% to 90% of the current Max value.\n\nTHE Max slider SHALL allow the user to adjust the upper bound of the Pay Band from 110% of the current Min value to 300% of the current Min value.\n\nTHE Mid slider SHALL allow the user to adjust the midpoint value between Min and Max but SHALL NOT allow it to go below Min or above Max.\n\nWHEN any slider is moved, THE system SHALL update the corresponding boundary line in real time and immediately reflect the new Pay Band box in the visualization.\n\nWHEN a user moves a slider, THE system SHALL automatically recalculate the percentage of employees falling within each Pay Band segment:\n- Below Min\n- Between Min and Mid\n- Between Mid and Max\n- Above Max\n\nAND SHALL display these percentages in a small summary panel beside the chart.\n\n### Visual Feedback Rules\n\nWHEN the user uploads new compensation data, THE system SHALL clear all previous visualizations and sliders, then render the new dataset and initial Pay Bands.\n\nWHEN sliders are moved, THE system SHALL animate the movement of Min, Mid, and Max lines with a smooth transition lasting 400 milliseconds for perceptual continuity. No transitions SHALL be applied to individual salary lines.\n\nWHEN an employee’s salary crosses a Pay Band boundary due to a slider adjustment, THE system SHALL flash their salary line once in the appropriate highlight color (red/blue) and then revert to default color.\n\nWHERE multiple employees share the same job level and salary, THE system SHALL stack their vertical lines side-by-side (with small horizontal offsets) to ensure all individual markers remain visible.\n\nWHEN a Pay Band box becomes empty (no employees assigned to a job level), THE system SHALL render the box in a light gray with no fill, and display the text \"No employees\" centered inside the box.\n\nTHE visualization SHALL be responsive to window resizing. The chart SHALL maintain its aspect ratio and reflow its elements without loss of clarity when the browser window is resized.\n\nTHE system SHALL use only color, position, and shape to convey information — no text or labels shall be embedded directly within the Pay Band box except for the Min, Mid, and Max labels placed briefly to the left of each boundary line.\n\nWHEN a HR operator exports the visualization, THE system SHALL generate a PNG or PDF file that preserves all visual elements (Pay Band boxes, salary lines, labels, and tooltip information in a static format). Only the current view shall be exported.\n\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To define the budget simulation scenarios and logic, including how changes to headcount and average salary impact total compensation cost, without dictating calculation algorithms or data models.","filename":"07-budget-simulation.md","documentType":"requirement","outline":["Simulation Purpose","Adjustable Parameters","Budget Calculation Formula","Real-Time Update Requirements","Display Format for Budget Changes"],"audience":"business stakeholders","keyQuestions":["What inputs drive budget changes?","Is budget = headcount × average salary?","How is average salary computed?","How are simulation results displayed?","Are there limits on how much parameters can be adjusted?"],"detailLevel":"detailed specification","constraints":["Budget = Total Headcount × Average Salary","Average salary must be calculated from uploaded data","Users can simulate ±10% change in headcount and ±20% in average salary","Must display budget change as a percentage and absolute value","Must not specify database queries or memory state management"],"content":"## Budget Simulation Requirements\n\n### Simulation Purpose\n\nThe Pay Band System enables HR operators to simulate the financial impact of compensation adjustments before implementation. This simulation tool supports data-driven decision-making by modeling how changes in headcount or average salary affect total compensation costs. The system does not apply changes to actual payroll data — it provides a safe, interactive environment for forecasting, scenario planning, and budget alignment with organizational goals.\n\nThis simulation capability is critical for:\n- Evaluating hiring freezes or expansion plans\n- Assessing the cost of salary increases during performance cycles\n- Aligning compensation strategy with departmental budgets\n- Demonstrating ROI of retention initiatives\n\n### Adjustable Parameters\n\nHR operators may simulate compensation changes using two input parameters:\n\n1. **Headcount Change**\n   - User may increase or decrease total headcount by up to ±10%\n   - Changes are applied proportionally across all job levels\n   - Simulated headcount must remain ≥ 1 (minimum one employee)\n\n2. **Average Salary Change**\n   - User may increase or decrease average salary by up to ±20%\n   - Changes are applied uniformly to all employees in the dataset\n   - Salary adjustments do not alter individual Pay Band boundaries or salary distribution\n\nInputs are provided via dual slider controls in the UI:\n- Headcount slider: -10% to +10%, in 1% increments\n- Average salary slider: -20% to +20%, in 1% increments\n\nThe system shall disable simulation beyond these bounds and shall display a warning message if manual input exceeds these ranges.\n\n### Budget Calculation Formula\n\nTHE system SHALL calculate total compensation budget using the following formula:\n\n**Budget = Total Headcount × Average Salary**\n\nWhere:\n- **Total Headcount** = Number of employees in the uploaded dataset\n- **Average Salary** = Sum of all employees' salaries ÷ Total Headcount\n\nTHE system SHALL calculate these values directly from the most recently successfully uploaded `.xlsx` file.\n\nWHEN a simulation is initiated, THE system SHALL:\n- Multiply the original headcount by (1 + headcount adjustment percentage)\n- Multiply the original average salary by (1 + salary adjustment percentage)\n- Recalculate budget using the modified values\n- Display both the original and simulated budget values for comparison\n\nWHERE headcount adjustment is set to 0%, THEN THE system SHALL use the original headcount from the upload.\nWHERE salary adjustment is set to 0%, THEN THE system SHALL use the original average salary calculated from the upload.\n\n### Real-Time Update Requirements\n\nWHEN a user adjusts either the headcount or average salary slider, THE system SHALL:\n- Recalculate the simulated budget in real time\n- Update the displayed budget value within 300 milliseconds of slider movement\n- Display both the absolute value (e.g., ₩5.2B) and percentage change (e.g., +8.7%) relative to the original budget\n\nTHE system SHALL not require the user to click a separate ‘Apply’ or ‘Calculate’ button — all changes shall update immediately as the slider is moved.\n\nWHILE the simulation is in progress, THE system SHALL:\n- Display the modified headcount and average salary values below the sliders\n- Highlight the current budget value with a visual indicator (e.g., bold, color-coded)\n- Maintain the original budget reference value for direct comparison\n\n### Display Format for Budget Changes\n\nTHE system SHALL display budget change results using the following format:\n\n> **Original Budget**: ₩5,120,000,000\n> **Simulated Budget**: ₩5,450,000,000 (+6.4%) \n> - Headcount: 97 (↑3.2%) \n> - Average Salary: ₩56,185,567 (↑3.2%)\n\nTHE system SHALL use the local currency symbol (₩) for all displayed values.\n\nWHEN the simulation results exceed the department’s approved budget ceiling (if defined in a future enhancement), THE system SHALL display a warning message: \n\n> ‘Simulated budget exceeds current departmental ceiling. Review alignment with fiscal plan.’\n\nTHE system SHALL NOT display unit costs per employee in the result summary.\n\nTHE system SHALL preserve the original budget calculation regardless of simulation input and SHALL always allow the user to reset to original values with one click.\n\nWHEN the user uploads new compensation data, THE system SHALL immediately reset all simulation parameters to 0% and recalculate the original budget based on the new dataset.\n\nWHILE the chart visualization is being updated, THE system SHALL not mutate the underlying uploaded dataset. All simulations are in-memory overlays and do not alter source data.\n\nNOTE: The simulation is a predictive model based on the current dataset. It does not account for bonuses, allowances, recruitment costs, or regional salary differentials. These may be added in future releases.\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To document the dynamic interaction workflows for HR operators, capturing the full sequence of actions from upload to simulation, ensuring a seamless user experience path.","filename":"08-user-workflow.md","documentType":"user-flow","outline":["HR Operator Starting Point","Step 1: Upload Compensation Data","Step 2: View Initial Pay Band Visualization","Step 3: Adjust Min/Mid/Max Using Sliders","Step 4: Run Budget Simulation with Inputs","Step 5: Review Combined Impact","Step 6: Save or Export Results"],"audience":"product management","keyQuestions":["What is the exact sequence of user actions?","When does the system respond to changes?","Are there dependencies between steps?","What happens if data is re-uploaded during simulation?","Is export functionality mandatory?"],"detailLevel":"detailed specification","constraints":["Users must upload before viewing any visualization","Sliders only become active after successful upload","Simulation inputs are only available after data upload","Changing sliders must immediately update the chart","Export must be a download of the current view in PNG or PDF"],"content":"## HR Operator Workflow for Pay Band System\n\nThe Pay Band System enables HR operators to dynamically analyze and simulate compensation structures based on uploaded employee data. This document defines the complete sequence of user actions and system responses that shape the operational workflow. The flow is linear and gated — users cannot proceed to downstream functions without completing upstream steps. This ensures data integrity, usability, and predictable system behavior.\n\n### HR Operator Starting Point\n\nHR operators begin their session on the Pay Band System dashboard. The interface displays a prominent \"Upload Compensation Data\" button and a placeholder visualization area labeled \"Data not loaded. Please upload an Excel file to begin.\" Only the \"Upload Compensation Data\" button is actionable. All other interactive controls — including sliders, simulation inputs, and export buttons — are disabled and visually grayed out. No visualization or data summary is shown until the user successfully uploads valid compensation data.\n\n### Step 1: Upload Compensation Data\n\nWHEN an HR operator selects the \"Upload Compensation Data\" button, THE system SHALL display a standard file browser dialog.\n\nWHEN an HR operator selects a file, THE system SHALL validate that:\n- The file name ends with .xlsx\n- The file contains exactly five columns: 사원ID, 직급, 연봉, 팀, Pay Band\n- Every value in the 연봉 column is a positive number (greater than 0)\n- Every value in the 사원ID column is non-empty\n- Every value in the 직급 and Pay Band columns is non-empty text\n\nIF any validation rule fails, THEN THE system SHALL display a clear, specific error message detailing the failure (e.g., \"Column '연봉' contains invalid values. All salaries must be positive numbers.\") and return the user to the upload screen with no data loaded.\n\nWHERE the file passes validation, THE system SHALL read and load all data into memory, then automatically proceed to Step 2.\n\nWHILE the upload is processing (typically under 2 seconds), THE system SHALL display a progress spinner next to the upload button with the text \"Loading data...\".\n\n### Step 2: View Initial Pay Band Visualization\n\nWHEN the system successfully loads compensation data, THE system SHALL generate and display a Pay Band visualization.\n\nTHE visualization SHALL show:\n- X-axis: Job levels (직급), sorted in ascending order of seniority\n- Y-axis: Salary amount in KRW (원)\n- For each job level, a horizontal box representing its Pay Band, with three horizontal lines marking Min, Mid, and Max values\n- Each employee’s salary as a short, vertical line positioned along the Y-axis within the corresponding job level’s Pay Band box\n\nTHE system SHALL sort job levels by a predefined internal hierarchy (e.g., Intern, Associate, Senior, Manager, Director, VP, Executive) and group multiple records with the same 직급 into one bar.\n\nTHE system SHALL display total headcount and the overall average salary above the visualization. The Pay Band box colors shall be neutral (e.g., light gray borders), with no highlighting until interaction.\n\n### Step 3: Adjust Min/Mid/Max Using Sliders\n\nWHEN data is successfully loaded, THE system SHALL enable three interactive sliders below the visualization:\n- One slider for Min value of the selected Pay Band\n- One slider for Mid value of the selected Pay Band\n- One slider for Max value of the selected Pay Band\n\nWHEN an HR operator selects a Pay Band group from a dropdown labeled \"Select Pay Band Group to Adjust\", THE system SHALL populate the sliders with the current Min, Mid, and Max values for that group.\n\nWHILE an HR operator drags a slider, THE system SHALL immediately (within ≤ 300 milliseconds) update the visualization to reflect the new Min, Mid, or Max boundary for the selected Pay Band group. Other Pay Band groups shall remain unchanged.\n\nWHEN a slider value is changed, THE system SHALL display a live counter next to each slider showing the new absolute value in KRW (e.g., \"Min: 68,500,000 KRW\").\n\nIF an HR operator attempts to set Min > Mid or Mid > Max, THEN THE system SHALL prevent the adjustment, snap the value back to the nearest valid configuration, and display a tooltip: \"Min must be ≤ Mid ≤ Max. Adjust values accordingly.\"\n\nWHEN an HR operator selects a different Pay Band group, THE system SHALL update all three sliders to reflect the values of the newly selected group. The visualization shall instantly repopulate with updated band boundaries for the selected group.\n\n### Step 4: Run Budget Simulation with Inputs\n\nWHEN data is loaded, THE system SHALL enable the \"Run Budget Simulation\" panel below the sliders.\n\nTHE panel SHALL contain:\n- A numeric input for \"Adjust Headcount\" with range [−10% to +10%], default 0%\n- A numeric input for \"Adjust Average Salary\" with range [−20% to +20%], default 0%\n- A \"Run Simulation\" button\n\nWHEN an HR operator enters a value into one of the simulation inputs, THE system SHALL calculate the new budget in real time using the formula:\n\n**New Budget = (Current Headcount × (1 + Headcount Adjustment)) × (Current Average Salary × (1 + Salary Adjustment))**\n\nWHILE the HR operator modifies the inputs, THE system SHALL update the simulation output display immediately:\n- Current Budget: [value] KRW\n- New Budget: [value] KRW\n- Delta: [±value] KRW ([±percentage]%) \n\nWHEN the \"Run Simulation\" button is clicked, THE system SHALL overlay the simulation result on the Pay Band visualization:\n- Dashed lines shall appear on the Y-axis, showing the new average salary level\n- The total headcount and budget numbers shall be displayed in a highlighted box with green (increase) or red (decrease) background\n- The unchanged Pay Band boundaries shall remain visible for comparison\n\nWHEN a simulation has been run, THE system SHALL persist the simulation state until the user either uploads new data or explicitly clears the simulation.\n\n### Step 5: Review Combined Impact\n\nWHEN HR operators combine slider adjustments with manual budget simulations, THE system SHALL display all changes simultaneously on the visualization.\n\nTHE visualization SHALL show:\n- Original Pay Band boundaries (solid lines)\n- Modified Pay Band boundaries (dashed lines or highlighted color if changed)\n- Actual employee salary distribution\n- Simulation-adjusted average salary (dashed horizontal line)\n\nTHE system SHALL provide a summary panel labeled \"Combined Impact\" that lists:\n- Pay Band Change: \"Min increased by 5%, Max decreased by 3%\"\n- Headcount Change: \"+7%\"\n- Salary Change: \"+12%\"\n- Total Budget Impact: \"+19.3% (₩2.87B)\"\n\nTHIS panel SHALL update in real time as any input changes. There shall be no delay between user action and feedback.\n\n### Step 6: Save or Export Results\n\nWHEN an HR operator is satisfied with the current state of the visualization and simulation, THE system SHALL enable an \"Export as PNG\" button and a \"Export as PDF\" button below the visualization.\n\nWHEN an HR operator clicks either button, THE system SHALL generate a static image of the current visualization, including:\n- All Pay Band boundaries (original and modified)\n- All employee salary markers\n- Simulation summary box\n- Axes, labels, and legend\n- Any active simulation overlays or percentage deltas\n\nTHE system SHALL default to PNG format, but offer PDF as an alternative for printing or formal reporting.\n\nTHE exported file SHALL be named: \"PayBandAnalysis_[YYYYMMDD]_[HHMMSS].png\" or \".pdf\"\n\nIF the export fails due to system error, THEN THE system SHALL display: \"Export failed. Please refresh and try again.\"\n\nWHERE export succeeds, THE system SHALL prompt: \"File saved to your downloads folder.\"\n\nNOT: HR operators cannot export until data has been uploaded and at least one adjustment or simulation has been applied. The export buttons shall remain disabled if the system is showing only the initial, unmodified visualization.\n\n------------------------------\n\n> *Developer Note: This document defines **business requirements only**. All technical implementations (architecture, APIs, database design, etc.) are at the discretion of the development team.*"},{"reason":"To define non-functional requirements and system constraints that define system behavior under different conditions, ensuring developers prioritize performance, reliability, and usability.","filename":"09-non-functional-requirements.md","documentType":"requirement","outline":["Performance Expectations","Data Load Time","UI Responsiveness","Concurrency Support","Data Integrity","Browser Compatibility","Accessibility"],"audience":"development team","keyQuestions":["How quickly should Excel uploads process?","How fast should sliders update the chart?","Can multiple HR users use the system simultaneously?","What happens if data is corrupted during upload?","Which browsers must be supported?","Is keyboard navigation required?"],"detailLevel":"detailed specification","constraints":["Excel upload must complete within 5 seconds for files under 100 rows","Slider adjustments must update visualization within 300 milliseconds","System must support at least 10 concurrent HR operators","Invalid data must be rejected without corrupting existing state","Must support Chrome, Edge, and Safari latest versions","Chart must be accessible via screen readers"],"content":"The Pay Band System must deliver an intuitive, responsive, and reliable experience for HR operators and employee viewers alike. While functional requirements define what the system does, non-functional requirements define how well it does it — under real-world conditions. This document specifies measurable, testable standards for performance, reliability, and accessibility that directly impact user satisfaction and system trustworthiness.\n\n## Performance Expectations\n\nTHE Pay Band System SHALL process Excel uploads and render the initial Pay Band visualization within 5 seconds when the file contains up to 100 rows of compensation data. This threshold ensures HR operators do not experience perceptible delays during routine data onboarding, maintaining productivity and workflow continuity.\n\nWHEN an HR operator modifies a Pay Band Min, Mid, or Max value using an interactive slider, THE system SHALL update the visualization and associated budget metrics within 300 milliseconds. This ensures a seamless, real-time feedback loop that supports rapid iterative analysis without lag or disorientation.\n\nWHEN a budget simulation is triggered (e.g., +5% headcount, +10% average salary), THE system SHALL recalculate and display the new budget estimate and distribution impact within 500 milliseconds. This rapid response preserves the cognitive flow of strategic compensation planning and enables confident scenario exploration.\n\n## Data Load Time\n\nWHEN an HR operator uploads an .xlsx file with fewer than 100 rows, THE system SHALL complete validation, parsing, and internal state update within 5 seconds. This requirement ensures data ingestion remains efficient even on moderate network conditions and does not introduce bottlenecks during daily HR operations.\n\nIF the uploaded .xlsx file exceeds 100 rows, THE system SHALL display a warning message informing the user that processing time may increase beyond 5 seconds, but SHALL still process the file to completion. The system SHALL NOT reject or truncate data based on file size alone. This ensures flexibility for larger teams while managing user expectations.\n\n## UI Responsiveness\n\nWHILE an HR operator is dragging a slider to adjust Pay Band Min/Mid/Max values, THE system SHALL throttle updates to no less than 10 frames per second (equivalent to one update every 100 milliseconds). This guarantees fluid, natural interaction even during rapid adjustments, preventing a \"jittery\" or unresponsive appearance.\n\nWHEN a simulation parameter changes (headcount, average salary), THE system SHALL highlight the changed value and display the new budget result with a visual accent (e.g., color shift or animation) to reinforce causality and improve user comprehension.\n\n## Concurrency Support\n\nTHE Pay Band System SHALL support a minimum of 10 concurrent HR operators performing simultaneous actions, including data upload, slider manipulation, and simulation execution. Each user session SHALL be fully isolated — modifications made by one HR operator SHALL NOT affect the data, visualization, or simulation state visible to another user. This ensures secure, independent use in organizational settings with multiple HR teams.\n\n## Data Integrity\n\nIF an uploaded .xlsx file contains invalid or malformed data (e.g., non-numeric salary, missing required column, improper date format), THE system SHALL reject the upload and display a clear, actionable error message listing each specific issue. The system SHALL NOT alter, corrupt, or overwrite existing compensation data already loaded and visualized.\n\nWHILE simulation parameters are being adjusted or a new upload is in progress, THE system SHALL preserve the last valid state of the Pay Band visualization and budget calculation. This allows the user to recover gracefully from failed actions without losing prior work.\n\nIF the system encounters an internal error (e.g., timeout, memory exhaustion) during processing, THE system SHALL revert to the last known safe state and display a generic notification: \"An unexpected error occurred. Your last valid configuration has been restored.\" This prevents state corruption and maintains user trust.\n\n## Browser Compatibility\n\nTHE Pay Band System SHALL fully support the latest two versions of the following browsers on desktop platforms:\n- Google Chrome\n- Microsoft Edge\n- Apple Safari\n\nThe system SHALL NOT degrade functionality or layout in any of the supported browsers. All visualizations, sliders, and data displays SHALL render correctly and remain fully interactive.\n\n## Accessibility\n\nTHE Pay Band System SHALL be fully navigable using keyboard-only input, allowing HR operators to tab through all interactive controls (upload button, sliders, simulation inputs) and activate them using the Enter or Space keys.\n\nWHEN the Pay Band visualization renders, THE system SHALL generate equivalent textual ARIA labels for each job level band, specifying the Min, Mid, Max values and number of employees in each group. This enables screen readers to accurately convey the visualization content to users with visual impairments.\n\nWHENEVER an error message is displayed, THE system SHALL ensure it is programmatically announced by screen readers using an appropriate ARIA live region. This ensures all users, regardless of ability, are aware of system feedback and can respond appropriately."}],"created_at":"2025-09-13T08:24:10.698Z","completed_at":"2025-09-13T08:46:37.318Z","step":0},{"id":"01994254-6149-7403-99ea-e6ecd483546a","type":"userMessage","contents":[{"type":"text","text":"계속 해줘"}],"created_at":"2025-09-13T09:07:30.249Z"}]