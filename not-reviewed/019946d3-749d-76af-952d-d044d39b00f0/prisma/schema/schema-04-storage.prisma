/// Stores metadata and references for raw political news data collected from
/// various crawling sources. Ensures durable and consistent storage links to
/// cloud object storage. Tracks source information, crawl job association,
/// and data integrity validations. Includes audit timestamps for
/// traceability.
///
/// @namespace Storage
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model political_news_crawler_raw_data_storage {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Belonged crawl source's political_news_crawler_crawl_sources.id.
  crawl_source_id String
  
  /// Optional crawl job reference to political_news_crawler_crawl_jobs.id.
  crawl_job_id String?
  
  /// Unique key or path identifying storage location in cloud object storage
  /// (e.g., GCP or AWS S3).
  storage_key String
  
  /// Format of the raw data file such as JSON or XML for processing
  /// compatibility.
  file_format String
  
  /// Size of the raw data file in bytes.
  file_size_bytes Int
  
  /// Checksum hash to verify file integrity.
  checksum String?
  
  /// Timestamp when the raw data was crawled, used for data freshness and
  /// scheduling.
  crawl_timestamp DateTime
  
  /// Creation timestamp record.
  created_at DateTime
  
  /// Last update timestamp record.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  crawlSource political_news_crawler_crawl_sources @relation(fields: [crawl_source_id], references: [id], onDelete: Cascade)
  crawlJob political_news_crawler_crawl_jobs? @relation(fields: [crawl_job_id], references: [id], onDelete: Cascade)
  
  political_news_crawler_crawl_attempts political_news_crawler_crawl_attempts[]
  political_news_crawler_local_cache_files political_news_crawler_local_cache_files[]
  political_news_crawler_processed_content political_news_crawler_processed_content[]
  
  @@index([crawl_job_id])
  
  @@unique([storage_key])
  @@index([crawl_source_id, crawl_timestamp], map: "political_news_crawler_raw_data_storage_crawl_source_i_a4e59727")
}

/// Tracks local file cache copies of raw crawled political news data with
/// TTL enforcement and deletion status. Enables fast retrieval during cloud
/// storage outages and manages file lifecycle with audit timestamps.
///
/// @namespace Storage
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model political_news_crawler_local_cache_files {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Reference to related raw data storage record,
  /// political_news_crawler_raw_data_storage.id.
  raw_data_storage_id String
  
  /// Filesystem path or identifier for the local cached file copy.
  local_file_path String
  
  /// Size of the local cached file in bytes.
  file_size_bytes Int
  
  /// Datetime when the cached file expires and is due for deletion under TTL
  /// policy.
  ttl_expiration_at DateTime
  
  /// Soft delete timestamp indicating when the cached file was deleted, if
  /// applicable.
  deleted_at DateTime?
  
  /// Creation timestamp record.
  created_at DateTime
  
  /// Last update timestamp record.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  rawDataStorage political_news_crawler_raw_data_storage @relation(fields: [raw_data_storage_id], references: [id], onDelete: Cascade)
  
  @@index([raw_data_storage_id], map: "political_news_crawler_local_cache_files_raw_data_stor_e96143ec")
  
  @@unique([local_file_path])
  @@index([ttl_expiration_at])
}

/// Stores processed political news content generated by LLM post-processing,
/// including summaries, highlights, and analysis. Links content to raw data
/// storage and optionally to the LLM job that generated it. Contains content
/// type, full text body, generation timestamp, and audit timestamps.
/// Supports text search through GIN index on content body.
///
/// @namespace Storage
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model political_news_crawler_processed_content {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Foreign key to the raw data storage record,
  /// political_news_crawler_raw_data_storage.id.
  raw_data_storage_id String
  
  /// Foreign key to associated LLM job, political_news_crawler_llm_jobs.id.
  llm_job_id String?
  
  /// Type of processed content, e.g., summary, highlight, or analysis.
  content_type String
  
  /// Full textual content produced by LLM processing.
  content_body String
  
  /// Timestamp when this content was generated.
  generation_timestamp DateTime
  
  /// Record creation timestamp, typically same or near generation time.
  created_at DateTime
  
  /// Last update timestamp record.
  updated_at DateTime
  
  //----
  // RELATIONS
  //----
  rawDataStorage political_news_crawler_raw_data_storage @relation(fields: [raw_data_storage_id], references: [id], onDelete: Cascade)
  llmJob political_news_crawler_llm_jobs? @relation(fields: [llm_job_id], references: [id], onDelete: Cascade)
  
  @@index([llm_job_id])
  
  @@unique([raw_data_storage_id, content_type], map: "political_news_crawler_processed_content_raw_data_stor_910af992")
  @@index([content_type])
}