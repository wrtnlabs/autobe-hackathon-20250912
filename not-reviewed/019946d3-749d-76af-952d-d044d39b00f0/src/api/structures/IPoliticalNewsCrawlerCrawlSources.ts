import { tags } from "typia";

/**
 * Political News Crawler Crawl Sources entity stores the configuration of each
 * news source that the system can crawl. This includes the source's unique
 * code, URL, active status, optional description, and audit timestamps.
 *
 * This entity is fundamental for managing the variety of external sites and
 * APIs from which political news is retrieved. Managing these sources centrally
 * allows the crawler to operate on diverse data feeds efficiently and safely.
 *
 * Security note: This entity does not contain sensitive details and is
 * generally exposed publicly.
 *
 * Business logic includes ensuring uniqueness of source_code and source_url and
 * that inactive sources are excluded from crawling cycles.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerCrawlSources = {
  /**
   * Primary Key.
   *
   * Unique identifier of the crawl source.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique identifier code for the crawl source.
   *
   * This code uniquely identifies each crawl source within the system.
   */
  source_code: string;

  /**
   * The base URL of the crawl source website or API.
   *
   * The URL serves as the source location for crawling news data.
   */
  source_url: string;

  /**
   * Flag indicating whether the crawl source is active and enabled for
   * crawling.
   *
   * When true, crawling operations are allowed for this source.
   */
  is_active: boolean;

  /**
   * Optional description of the crawl source.
   *
   * Provides additional contextual information about the source.
   */
  description?: string | null | undefined;

  /**
   * Record creation timestamp.
   *
   * Timestamp when this crawl source record was created.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Record last update timestamp.
   *
   * Timestamp when this record was last modified.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp, if record is deleted.
   *
   * Nullable field indicating if the record was deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IPoliticalNewsCrawlerCrawlSources {
  /**
   * Request interface for crawl sources listing with filtering and
   * pagination. Supports criteria to search and paginate crawl sources.
   */
  export type IRequest = {
    /** Optional search keyword to filter source code or URL. */
    search_keyword?: string | null | undefined;

    /**
     * Filter active sources only if true, inactive if false, or both if
     * null.
     */
    is_active?: boolean | null | undefined;

    /** Pagination page number, starting at 1. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Records per page limit. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Sort by field name, e.g., "source_code" or "created_at". */
    order_by?: string | null | undefined;

    /** Sort order direction: "asc" or "desc". */
    direction?: string | null | undefined;
  };

  /** Input type for creating a new political news crawler crawl source. */
  export type ICreate = {
    /**
     * Unique identifier code for the crawl source.
     *
     * Required during creation to uniquely identify the source.
     */
    source_code: string;

    /**
     * The base URL of the crawl source website or API.
     *
     * This field is mandatory for crawl source creation.
     */
    source_url: string;

    /**
     * Flag indicating whether the crawl source is active and enabled for
     * crawling.
     *
     * Defaults to true when creating a new source.
     */
    is_active: boolean;

    /**
     * Optional description of the crawl source.
     *
     * Can be null if no description is provided.
     */
    description?: string | null | undefined;
  };

  /** Input type for updating an existing political news crawler crawl source. */
  export type IUpdate = {
    /**
     * Unique identifier code for the crawl source.
     *
     * Updatable field for renaming or correcting source code.
     */
    source_code?: string | null | undefined;

    /**
     * The base URL of the crawl source website or API.
     *
     * Can be updated to change the crawl target.
     */
    source_url?: string | null | undefined;

    /**
     * Flag indicating whether the crawl source is active and enabled for
     * crawling.
     *
     * Allows enabling or disabling crawling for this source.
     */
    is_active?: boolean | undefined;

    /**
     * Optional description of the crawl source.
     *
     * Can be updated or cleared by setting null explicitly.
     */
    description?: string | null | undefined;
  };

  /**
   * Summary view of the politicalNewsCrawler crawl source for listing
   * purposes.
   */
  export type ISummary = {
    /** Record creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /**
     * Flag indicating whether the crawl source is active and enabled for
     * crawling.
     */
    is_active: boolean;

    /** Unique identifier code for the crawl source. */
    source_code: string;

    /** The base URL of the crawl source website or API. */
    source_url: string;
  };
}
