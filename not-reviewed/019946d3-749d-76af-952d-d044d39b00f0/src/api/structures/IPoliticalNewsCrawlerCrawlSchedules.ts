import { tags } from "typia";

import { IPoliticalNewsCrawlerCrawlSchedule } from "./IPoliticalNewsCrawlerCrawlSchedule";

/**
 * Response structure for paginated crawl schedules.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerCrawlSchedules = {
  /** Primary Key identifier of the crawl schedule. */
  id: string & tags.Format<"uuid">;

  /** List of crawl schedule records. */
  data: IPoliticalNewsCrawlerCrawlSchedule[];

  /** Pagination information for the result set. */
  pagination: {
    /** Current page number. */
    current: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Number of records per page. */
    limit: number & tags.Type<"int32"> & tags.Minimum<1>;

    /** Total number of records matching the criteria. */
    records: number & tags.Type<"int32"> & tags.Minimum<0>;

    /** Total number of pages available. */
    pages: number & tags.Type<"int32"> & tags.Minimum<1>;
  };
};
export namespace IPoliticalNewsCrawlerCrawlSchedules {
  /** Creation info of the crawl schedules */
  export type ICreate = {
    /**
     * Reference to Crawling Source.
     *
     * Required foreign key UUID string.
     */
    crawl_source_id: string & tags.Format<"uuid">;

    /**
     * Reference to Crawl Policy.
     *
     * Required foreign key UUID string.
     */
    crawl_policy_id: string & tags.Format<"uuid">;

    /**
     * Cron expression defining the crawl schedule timing.
     *
     * Required string with cron format.
     */
    schedule_expression: string;

    /**
     * Flag indicating if this schedule is enabled.
     *
     * Required boolean.
     */
    is_enabled: boolean;
  };

  /** Update info of the crawl schedules */
  export type IUpdate = {
    /**
     * Reference to Crawling Source.
     *
     * Optional foreign key UUID string.
     */
    crawl_source_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Reference to Crawl Policy.
     *
     * Optional foreign key UUID string.
     */
    crawl_policy_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Cron expression defining the crawl schedule timing.
     *
     * Optional string with cron format.
     */
    schedule_expression?: string | null | undefined;

    /**
     * Timestamp when the crawl last occurred.
     *
     * Optional ISO 8601 date-time string.
     */
    last_crawled_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Timestamp for the next scheduled crawl.
     *
     * Optional ISO 8601 date-time string.
     */
    next_crawl_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Flag indicating if this schedule is enabled.
     *
     * Optional boolean.
     */
    is_enabled?: boolean | undefined;

    /**
     * Soft delete timestamp, if record is deleted.
     *
     * Optional ISO 8601 date-time string.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
