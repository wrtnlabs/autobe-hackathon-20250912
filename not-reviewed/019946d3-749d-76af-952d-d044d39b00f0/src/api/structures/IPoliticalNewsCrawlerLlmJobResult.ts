import { tags } from "typia";

/**
 * LLM results store the output content generated by LLM jobs, including
 * summaries, highlights, and analyses. This model links back to the originating
 * LLM job and preserves output details for retrieval and audit purposes.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @namespace Processing
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerLlmJobResult = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Associated LLM job's political_news_crawler_llm_jobs.id.
   *
   * UUID format as per Prisma schema.
   */
  llm_job_id: string & tags.Format<"uuid">;

  /**
   * Type of generated content, e.g., 'summary', 'highlight', 'analysis'.
   *
   * Indicates the nature of the processed content.
   */
  content_type: string;

  /**
   * Generated content text by the LLM.
   *
   * Contains the full textual data of the processed content.
   */
  content_text: string;

  /**
   * Timestamp when the output was created.
   *
   * DateTime in RFC 3339 / ISO 8601 format with timezone.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the output was last updated.
   *
   * DateTime in RFC 3339 / ISO 8601 format with timezone.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp, null if not deleted.
   *
   * Optional timestamp indicating logical deletion.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IPoliticalNewsCrawlerLlmJobResult {
  /** Request type for searching LLM job results with filters and pagination. */
  export type IRequest = {
    /**
     * Filter by content type for the results to return.
     *
     * Optional string filter.
     */
    content_type?: string | null | undefined;

    /**
     * Filter by creation date; results created after this timestamp are
     * included.
     *
     * Optional ISO 8601 date-time string.
     */
    created_after?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Filter by creation date; results created before this timestamp are
     * included.
     *
     * Optional ISO 8601 date-time string.
     */
    created_before?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Pagination: current page number.
     *
     * Default: 1
     */
    page?: (number & tags.Minimum<1>) | null | undefined;

    /**
     * Pagination: number of items per page.
     *
     * Default: 20
     */
    limit?: (number & tags.Minimum<1>) | null | undefined;
  };

  /** Create request schema for new LLM job result record. */
  export type ICreate = {
    /**
     * Associated LLM job's political_news_crawler_llm_jobs.id.
     *
     * UUID format required.
     */
    llm_job_id: string & tags.Format<"uuid">;

    /**
     * Type of generated content, e.g., 'summary', 'highlight', 'analysis'.
     *
     * Mandatory content type string.
     */
    content_type: string;

    /**
     * Generated content text by the LLM.
     *
     * Full text content to store.
     */
    content_text: string;

    /**
     * Timestamp when the content is generated.
     *
     * ISO 8601 date-time string format.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp when the content was last updated.
     *
     * ISO 8601 date-time string format.
     */
    updated_at: string & tags.Format<"date-time">;
  };

  /** Update request schema for LLM job result record. */
  export type IUpdate = {
    /**
     * Associated LLM job's political_news_crawler_llm_jobs.id.
     *
     * UUID format, optional for update.
     */
    llm_job_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Type of generated content.
     *
     * Optional string for update.
     */
    content_type?: string | undefined;

    /**
     * Generated content text.
     *
     * Optional full text for update.
     */
    content_text?: string | undefined;

    /**
     * Timestamp when the content is generated.
     *
     * Optional ISO 8601 string.
     */
    created_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Timestamp when the content was last updated.
     *
     * Optional ISO 8601 string.
     */
    updated_at?: (string & tags.Format<"date-time">) | undefined;
  };
}
