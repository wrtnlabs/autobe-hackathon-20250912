import { tags } from "typia";

/**
 * Subsidiary table recording mentions of political topics within news articles.
 * Establishes many-to-one relationships with both topics and crawled news
 * records. Supports detailed traceability of topic references and feeds data
 * for popularity calculations. Managed as supporting entity for topic
 * analytics.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerTopicMentions = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Referenced popular topic's Identifier. */
  political_news_crawler_popular_topic_id: string & tags.Format<"uuid">;

  /** Referenced crawled news item's Identifier. */
  political_news_crawler_crawled_news_id: string & tags.Format<"uuid">;

  /**
   * Optional text snippet or context where the topic is mentioned within the
   * article.
   */
  mention_context?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp if applicable, otherwise null. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IPoliticalNewsCrawlerTopicMentions {
  /**
   * Request parameters for querying topic mentions with filtering, searching,
   * and pagination.
   */
  export type IRequest = {
    /** Number of items to retrieve in the page. */
    limit?: (number & tags.Type<"int32">) | undefined;

    /** Pagination offset for items. */
    offset?: (number & tags.Type<"int32">) | undefined;

    /** Search string to filter mentions context. */
    search?: string | undefined;

    /** Foreign key to the popular topic entity. */
    political_news_crawler_popular_topic_id?:
      | (string & tags.Format<"uuid">)
      | undefined;

    /** Foreign key to the crawled news entity. */
    political_news_crawler_crawled_news_id?:
      | (string & tags.Format<"uuid">)
      | undefined;
  };

  /**
   * Used for updating a topic mention's content snippet. All fields are
   * optional and nullable.
   */
  export type IUpdate = {
    /** Text snippet of the mention to update. */
    mention_context?: string | null | undefined;
  };

  /**
   * A summary type for topic mentions containing minimal identification and
   * context.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /**
     * Optional text snippet or context where the topic is mentioned within
     * the article.
     */
    mention_context?: string | null | undefined;
  };
}
