import { tags } from "typia";

/**
 * Representation of a popular political topic as recorded in the
 * political_news_crawler_popular_topics table.
 *
 * This entity includes unique identifiers such as UUID and topic code,
 * descriptive title and optional description, and audit timestamps for
 * creation, update, and optional soft deletion.
 *
 * Popular topics serve as reference points for aggregating popularity scores
 * and news mentions relevant to South Korean political news.
 *
 * Soft delete capability allows logical removal while preserving historical
 * correctness.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerPopularTopics = {
  /**
   * A unique identifier for the popular political topic.
   *
   * This ID uniquely distinguishes each popular political topic within the
   * system and is used to reliably reference topics in relationships.
   *
   * Format: UUID string.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique code for the political topic.
   *
   * This code serves as an alternate unique identifier for the topic and must
   * be unique across all topics. Used for indexing and quick lookups.
   */
  topic_code: string;

  /**
   * The official title of the popular political topic.
   *
   * Titles should clearly identify the topic content and must be provided.
   */
  title: string;

  /**
   * Optional description for the popular political topic.
   *
   * Provides additional context or detailed information about the topic.
   *
   * Nullable to allow brief or minimal entries.
   */
  description?: string | null | undefined;

  /**
   * Timestamp marking when the topic record was created.
   *
   * Records audit information about data creation times. Format: ISO 8601
   * date-time string.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp marking when the topic record was last updated.
   *
   * Tracks changes for concurrency and audit. Format: ISO 8601 date-time
   * string.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft delete timestamp. Null if not deleted.
   *
   * Marks logical removal status. Format: ISO 8601 date-time string or null.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IPoliticalNewsCrawlerPopularTopics {
  /** Request payload for searching popular political topics. */
  export type IRequest = {
    /**
     * Pagination page number.
     *
     * Optional. If null, default pagination applies.
     */
    page?: number | null | undefined;

    /**
     * Pagination limit per page.
     *
     * Optional. Default value is determined by server.
     */
    limit?: number | null | undefined;

    /**
     * Search keyword for filtering topics by title.
     *
     * Optional.
     */
    search_term?: string | null | undefined;

    /**
     * Sorting criterion for the list.
     *
     * Possible values: 'createdAt', 'popularityScore'
     *
     * Optional.
     */
    order_by?: "createdAt" | "popularityScore" | null | undefined;

    /**
     * Order direction.
     *
     * Possible values: 'asc' or 'desc'
     *
     * Optional.
     */
    order_direction?: "asc" | "desc" | null | undefined;
  };
}
