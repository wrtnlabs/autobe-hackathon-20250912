import { tags } from "typia";

/**
 * Captures detailed records of API errors, including the API path, error code,
 * error message, client IP, user agent, occurrence timestamp, and update
 * timestamp. Enables error analysis and system troubleshooting for API
 * endpoints.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerApiErrorLog = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** API endpoint path where the error occurred. */
  path: string;

  /** Error code identifying the type of API error. */
  error_code: string;

  /** Descriptive error message to assist debugging. */
  error_message: string;

  /** IP address of the client causing the error. */
  client_ip: string;

  /** User agent string of the client application. */
  user_agent: string;

  /** Timestamp when the error log was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the error log was last updated. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IPoliticalNewsCrawlerApiErrorLog {
  /** Request type for filtering and paginating API error logs. */
  export type IRequest = {
    /** Filter by API path pattern for the error logs. */
    path?: string | null | undefined;

    /** Filter errors by error code. */
    error_code?: string | null | undefined;

    /** Filter logs within this start time (inclusive). */
    start_date?: string | null | undefined;

    /** Filter logs within this end time (inclusive). */
    end_date?: string | null | undefined;

    /** Pagination page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Number of items per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Sort order for returned items. */
    sort_order?: string | null | undefined;
  };

  /** A summary type providing brief error log info for listing and monitoring. */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** API endpoint path where the error occurred. */
    path: string;

    /** Error code identifying the type of API error. */
    error_code: string;

    /** Timestamp when the error log was created. */
    created_at: string & tags.Format<"date-time">;
  };
}
