import { tags } from "typia";

/**
 * Records individual execution attempts of crawl jobs, tracking start and
 * completion times, success status, errors, and associated raw data references
 * to enable detailed auditing and failure analysis.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IPoliticalNewsCrawlerCrawlAttempt = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Associated crawl job identifier. */
  crawl_job_id: string & tags.Format<"uuid">;

  /** Reference to raw data storage entry for the crawl result. */
  raw_data_storage_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Timestamp when this crawl attempt started. */
  started_at: string & tags.Format<"date-time">;

  /** Timestamp when this crawl attempt ended; null if still running. */
  completed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Indicator whether this crawl attempt was successful. */
  success: boolean;

  /** Error message details if the crawl attempt failed. */
  error_message?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IPoliticalNewsCrawlerCrawlAttempt {
  /** Request schema for filtering and pagination of crawl attempts. */
  export type IRequest = {
    /**
     * Filters for crawl job ID to restrict crawl attempts to a specific
     * job. Optional filter.
     */
    crawl_job_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Filter for success status of the crawl attempt. Optional. */
    success?: boolean | null | undefined;

    /**
     * Start timestamp to filter crawl attempts that started after this
     * time. Optional, nullable.
     */
    started_after?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * End timestamp to filter crawl attempts that started before this time.
     * Optional, nullable.
     */
    started_before?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Pagination page number. Optional. Must be positive integer if
     * provided.
     */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /**
     * Pagination page size limit. Optional. Must be positive integer if
     * provided.
     */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;
  };

  /**
   * Input data for creating a new crawl attempt record.
   *
   * Includes crawl job association, start time, success indicator, and
   * optionally raw data reference, completion time, and error message.
   */
  export type ICreate = {
    /**
     * Associated crawl job identifier.
     * {@link political_news_crawler_crawl_jobs.id}
     */
    crawl_job_id: string & tags.Format<"uuid">;

    /**
     * Optional reference to raw data storage entry for the crawl result.
     * {@link political_news_crawler_raw_data_storage.id}
     */
    raw_data_storage_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Timestamp when this crawl attempt started. */
    started_at: string & tags.Format<"date-time">;

    /**
     * Optional timestamp when this crawl attempt ended; null if still
     * running.
     */
    completed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Indicator whether this crawl attempt was successful. */
    success: boolean;

    /** Optional error message details if the crawl attempt failed. */
    error_message?: string | null | undefined;
  };

  /**
   * Partial update data for modifying an existing crawl attempt record.
   *
   * Allows updating any combination of crawl job ID, raw data storage
   * reference, start and end timestamps, success flag, and error message.
   */
  export type IUpdate = {
    /**
     * Associated crawl job identifier.
     * {@link political_news_crawler_crawl_jobs.id}
     */
    crawl_job_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Optional reference to raw data storage entry for the crawl result.
     * {@link political_news_crawler_raw_data_storage.id}
     */
    raw_data_storage_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Timestamp when this crawl attempt started. */
    started_at?: (string & tags.Format<"date-time">) | undefined;

    /**
     * Optional timestamp when this crawl attempt ended; null if still
     * running.
     */
    completed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Indicator whether this crawl attempt was successful. */
    success?: boolean | undefined;

    /** Optional error message details if the crawl attempt failed. */
    error_message?: string | null | undefined;
  };

  /**
   * Summary records of crawl attempts containing essential identifiers and
   * status.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** Associated crawl job identifier. */
    crawl_job_id: string & tags.Format<"uuid">;

    /** Timestamp when this crawl attempt started. */
    started_at: string & tags.Format<"date-time">;

    /** Indicator whether this crawl attempt was successful. */
    success: boolean;
  };
}
