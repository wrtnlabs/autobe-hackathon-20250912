import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";

@Controller("/politicalNewsCrawler/guest/politicalNewsCrawler/crawlSources/:id")
export class PoliticalnewscrawlerGuestPoliticalnewscrawlerCrawlsourcesController {
  /**
   * Delete a crawl source by ID.
   *
   * Deletes a crawl source identified by its UUID from the system's database.
   * This will permanently remove the crawl source and all of its associations
   * including crawl schedules, crawl jobs, raw data, and related processing
   * linked to this source.
   *
   * Only users with the admin role are authorized to perform this destructive
   * operation.
   *
   * Errors for non-existent or invalid UUIDs are handled with proper HTTP
   * error codes.
   *
   * No request body is required. No response content is returned on
   * successful deletion.
   *
   * @param connection
   * @param id Unique identifier of the crawl source to delete
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Delete()
  public async erase(
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<void> {
    id;
    return typia.random<void>();
  }
}
