import { Controller } from "@nestjs/common";
import { TypedRoute, TypedParam, TypedBody } from "@nestia/core";
import typia, { tags } from "typia";

import { IPageIPoliticalNewsCrawlerPopularityScore } from "../../../../../api/structures/IPageIPoliticalNewsCrawlerPopularityScore";
import { IPoliticalNewsCrawlerPopularityScore } from "../../../../../api/structures/IPoliticalNewsCrawlerPopularityScore";

@Controller(
  "/politicalNewsCrawler/guest/popularTopics/:popularTopicId/popularityScores",
)
export class PoliticalnewscrawlerGuestPopulartopicsPopularityscoresController {
  /**
   * List popularity score snapshots for a popular topic.
   *
   * Retrieve a paginated list of popularity score snapshots for a given
   * popular topic ID. Provides historical and current popularity scores with
   * decay factors applied based on snapshot timestamps.
   *
   * Security considerations include read-only access for authenticated users,
   * ensuring information is not exposed to unauthorized parties.
   *
   * This operation links directly to the primary topic entity and supports UI
   * features like time-trend charts or score evolution tracking. Results are
   * paginated to manage potentially large histories.
   *
   * Expected behavior includes returning summary entries with score, decay,
   * and snapshot time, ordered by snapshot_at descending.
   *
   * @param connection
   * @param popularTopicId Identifier of the popular topic whose popularity
   *   scores are queried
   * @param body Request parameters for popularity scores list with filtering,
   *   sorting, and pagination
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Patch()
  public async index(
    @TypedParam("popularTopicId")
    popularTopicId: string & tags.Format<"uuid">,
    @TypedBody()
    body: IPoliticalNewsCrawlerPopularityScore.IRequest,
  ): Promise<IPageIPoliticalNewsCrawlerPopularityScore.ISummary> {
    popularTopicId;
    body;
    return typia.random<IPageIPoliticalNewsCrawlerPopularityScore.ISummary>();
  }
}
