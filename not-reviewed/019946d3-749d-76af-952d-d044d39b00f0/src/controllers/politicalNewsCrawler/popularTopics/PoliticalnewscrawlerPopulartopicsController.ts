import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody, TypedParam } from "@nestia/core";
import typia, { tags } from "typia";

import { IPageIPoliticalNewsCrawlerPopularTopics } from "../../../api/structures/IPageIPoliticalNewsCrawlerPopularTopics";
import { IPoliticalNewsCrawlerPopularTopics } from "../../../api/structures/IPoliticalNewsCrawlerPopularTopics";

@Controller("/politicalNewsCrawler/popularTopics")
export class PoliticalnewscrawlerPopulartopicsController {
  /**
   * Retrieve a list of popular political topics with filters and pagination.
   *
   * Retrieve a filtered and paginated list of popular political topics.
   * Supports filtering parameters for title keywords and sorting by creation
   * dates or popularity metrics.
   *
   * This API endpoint is public and requires no authentication.
   *
   * Data is sourced from the political_news_crawler_popular_topics model,
   * ensuring relevance, currency, and accuracy.
   *
   * Supports efficient pagination and search to facilitate frontend
   * consumption.
   *
   * @param connection
   * @param body Search and pagination parameters for popular topics
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Patch()
  public async searchPopularTopics(
    @TypedBody()
    body: IPoliticalNewsCrawlerPopularTopics.IRequest,
  ): Promise<IPageIPoliticalNewsCrawlerPopularTopics> {
    body;
    return typia.random<IPageIPoliticalNewsCrawlerPopularTopics>();
  }

  /**
   * Retrieve a specific popular political topic by ID.
   *
   * Get detailed information for a single popular political topic by
   * specifying its unique ID in the path parameter.
   *
   * The response includes topic code, title, description, and timestamps.
   *
   * This API endpoint is public and requires no authentication.
   *
   * Supports frontend client needs for detailed topic information display.
   *
   * @param connection
   * @param id Unique identifier of the popular political topic
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Get(":id")
  public async atPopularTopic(
    @TypedParam("id")
    id: string & tags.Format<"uuid">,
  ): Promise<IPoliticalNewsCrawlerPopularTopics> {
    id;
    return typia.random<IPoliticalNewsCrawlerPopularTopics>();
  }
}
