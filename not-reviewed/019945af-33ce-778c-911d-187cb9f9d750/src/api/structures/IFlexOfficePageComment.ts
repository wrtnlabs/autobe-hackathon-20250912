import { tags } from "typia";

/**
 * Represents a comment made by an editor on a UI page within FlexOffice system.
 *
 * This entity stores author and content info, timestamps, and soft-deletion
 * status.
 *
 * Supports collaboration and editorial workflows through comment records.
 *
 * Security: Access restricted to authorized roles for viewing or editing
 * comments.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficePageComment = {
  /** Primary key. */
  id: string & tags.Format<"uuid">;

  /** Belonged page's ID. */
  page_id: string & tags.Format<"uuid">;

  /** Belonged editor user's ID. */
  editor_id: string & tags.Format<"uuid">;

  /** The text content of the comment. */
  content: string;

  /** Timestamp when the comment was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the comment was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the comment was soft deleted or moderated. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficePageComment {
  /** Parameters to filter and paginate page comments in a search. */
  export type IRequest = {
    /** Optional filter for page ID. */
    page_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional filter for editor ID. */
    editor_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Free-text search term applied to content or related fields. Set to
     * null if no search is desired.
     */
    search?: string | null | undefined;

    /**
     * Page number for paginated query. Optional; if not provided, default
     * pagination logic applies.
     */
    page?: (number & tags.Minimum<0>) | null | undefined;

    /**
     * Number of items per page in pagination. Optional; default limit
     * applies if omitted.
     */
    limit?: (number & tags.Minimum<0>) | null | undefined;
  };

  /** Data required to create a new comment on a page. */
  export type ICreate = {
    /** The UI page id this comment belongs to. */
    page_id: string & tags.Format<"uuid">;

    /** The editor user id who authors the comment. */
    editor_id: string & tags.Format<"uuid">;

    /** The textual comment content. */
    content: string;
  };

  /**
   * Defines updatable fields for an editor's comment on a page.
   *
   * Allows modifying content text and soft deletion timestamps.
   *
   * Timestamps are used for audit and concurrency control.
   *
   * Only authorized users can perform updates.
   */
  export type IUpdate = {
    /** The text content of the comment. */
    content?: string | undefined;

    /** Timestamp when the comment was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the comment was soft deleted or moderated. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of a FlexOffice page comment for list views. Includes
   * essential comment ID, content snippet, creation timestamp, and editor
   * reference.
   */
  export type ISummary = {
    /** Unique identifier of the page comment. */
    id: string & tags.Format<"uuid">;

    /** The text content of the comment. */
    content: string;

    /** Timestamp when the comment was created. */
    created_at: string & tags.Format<"date-time">;

    /** Referenced editor user's ID. */
    editor_id: string & tags.Format<"uuid">;
  };
}
