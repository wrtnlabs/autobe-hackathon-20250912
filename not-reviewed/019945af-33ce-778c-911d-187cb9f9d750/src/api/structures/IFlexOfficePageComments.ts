import { tags } from "typia";

/**
 * Represents a comment record in the FlexOffice system, supporting
 * collaboration.
 *
 * Contains identification, authorship, content, and audit fields.
 *
 * Security and soft deletion are handled appropriately.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficePageComments = {
  /** Primary key. */
  id: string & tags.Format<"uuid">;

  /** Belonged page's ID. */
  page_id: string & tags.Format<"uuid">;

  /** Belonged editor user's ID. */
  editor_id: string & tags.Format<"uuid">;

  /** The text content of the comment. */
  content: string;

  /** Timestamp when the comment was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the comment was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the comment was soft deleted or moderated. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficePageComments {
  /**
   * Request body schema for updating a page comment.
   *
   * Allows partial updates of comment content and audit fields.
   *
   * Enables soft delete management and concurrency tracking.
   */
  export type IUpdate = {
    /** The text content of the comment. */
    content?: string | undefined;

    /** Timestamp when the comment was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the comment was soft deleted or moderated. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
