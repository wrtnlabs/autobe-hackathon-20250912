import { tags } from "typia";

/**
 * FlexOffice UI theme entity representing a named theme with optional CSS
 * styles.
 *
 * Each theme enables customization of the UI/Page Builder appearance across the
 * platform.
 *
 * Maintains audit timestamps and uniqueness constraints on name.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeTheme = {
  /**
   * Primary Key.
   *
   * Unique identifier for a FlexOffice UI theme.
   *
   * Uses UUID string format.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique name of the theme.
   *
   * Must be unique across all themes. Useful for identification in UI/Page
   * Builder.
   */
  name: string;

  /**
   * Optional CSS content defining the theme styles.
   *
   * Represents custom styling for UI pages. May be null if no CSS is
   * specified.
   */
  css?: string | null | undefined;

  /**
   * Timestamp when the theme was created.
   *
   * Stored in ISO 8601 date-time string format. Immutable once set.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the theme was last updated.
   *
   * Stored in ISO 8601 date-time string format. Changes on modification.
   */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IFlexOfficeTheme {
  /**
   * Request parameters for searching and paginating FlexOffice UI themes.
   *
   * Includes optional filters for name, pagination controls, and sorting
   * options.
   */
  export type IRequest = {
    /**
     * Optional filter string to search theme names.
     *
     * Used to filter the list of themes.
     *
     * Nullable to allow no filter.
     */
    name?: string | null | undefined;

    /**
     * Optional page number for pagination.
     *
     * Unsigned 32-bit integer. Nullable to use default paging.
     */
    page?: number | null | undefined;

    /**
     * Optional limit of items per page.
     *
     * Unsigned 32-bit integer. Nullable to use default limit.
     */
    limit?: number | null | undefined;

    /**
     * Optional sort order.
     *
     * Can be 'asc' or 'desc'. Nullable for default sorting.
     */
    sortOrder?: "asc" | "desc" | null | undefined;
  };

  /**
   * Request body for creating a new FlexOffice UI theme.
   *
   * Includes required 'name' and optional 'css' properties.
   */
  export type ICreate = {
    /**
     * Unique name of the theme to create.
     *
     * Required for creation.
     */
    name: string;

    /**
     * Optional CSS content defining the theme's styles.
     *
     * If omitted, theme defaults to no CSS customization.
     */
    css?: string | null | undefined;
  };

  /**
   * Request body for updating an existing FlexOffice UI theme.
   *
   * Properties are optional and may be null for no change.
   *
   * Maintains uniqueness constraints on 'name'.
   */
  export type IUpdate = {
    /**
     * Optional updated name of the theme.
     *
     * Must maintain uniqueness. Nullable for no update.
     */
    name?: string | null | undefined;

    /**
     * Optional updated CSS content.
     *
     * Nullable for no update.
     */
    css?: string | null | undefined;
  };

  /**
   * Summary view of FlexOffice UI/Page Builder Themes.
   *
   * Includes identifying fields for listing themes in dropdowns or search
   * results.
   *
   * Excludes detailed CSS and audit fields for concise overview.
   *
   * This type is optimized for UI selection lists.
   */
  export type ISummary = {
    /** Primary key of the theme. */
    id: string & tags.Format<"uuid">;

    /** Unique name of the theme. */
    name: string;
  };
}
