import { tags } from "typia";

/**
 * Audit log records capturing immutable, append-only security and system events
 * for compliance monitoring.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeAuditLog = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /**
   * Type/category of the audit event, e.g., 'login', 'permission_change',
   * 'data_access'.
   */
  event_type: string;

  /**
   * Role or type of the actor performing the action, e.g., 'admin', 'editor',
   * 'viewer'.
   */
  actor_type: string;

  /**
   * Unique identifier of the user who performed the action; nullable if
   * system generated event.
   */
  actor_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Type/category of the target entity affected by the event, e.g., 'page',
   * 'data_source'.
   */
  target_type?: string | null | undefined;

  /** Unique identifier of the target entity involved in the event. */
  target_id?: (string & tags.Format<"uuid">) | null | undefined;

  /**
   * Describes the specific action performed, e.g., 'create', 'update',
   * 'delete'.
   */
  action: string;

  /** Optional detailed description of the audit event. */
  description?: string | null | undefined;

  /** Timestamp when the audit event was recorded. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the audit event record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp marking soft deletion; null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficeAuditLog {
  /** Page request data to filter and paginate audit log search results. */
  export type IRequest = {
    /**
     * Type/category of the audit event, e.g., 'login', 'permission_change',
     * 'data_access'.
     */
    event_type?: string | null | undefined;

    /**
     * Role or type of the actor performing the action, e.g., 'admin',
     * 'editor', 'viewer'.
     */
    actor_type?: string | null | undefined;

    /**
     * Unique identifier of the user who performed the action; nullable if
     * system generated event.
     */
    actor_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Type/category of the target entity affected by the event, e.g.,
     * 'page', 'data_source'.
     */
    target_type?: string | null | undefined;

    /** Unique identifier of the target entity involved in the event. */
    target_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Describes the specific action performed, e.g., 'create', 'update',
     * 'delete'.
     */
    action?: string | null | undefined;

    /** Optional detailed description of the audit event. */
    description?: string | null | undefined;

    /** Timestamp when the audit event was recorded. */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the audit event record was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp marking soft deletion; null if not deleted. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary information about FlexOffice audit log entries */
  export type ISummary = {
    /** Unique identifier of the audit log entry */
    id: string & tags.Format<"uuid">;

    /**
     * Type/category of the audit event, e.g., 'login', 'permission_change',
     * 'data_access'
     */
    event_type: string;

    /**
     * Role or type of the actor performing the action, e.g., 'admin',
     * 'editor', 'viewer'
     */
    actor_type: string;

    /**
     * Unique identifier of the user who performed the action; nullable if
     * system generated event
     */
    actor_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Type/category of the target entity affected by the event, e.g.,
     * 'page', 'data_source'
     */
    target_type?: string | null | undefined;

    /** Unique identifier of the target entity involved in the event */
    target_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Describes the specific action performed, e.g., 'create', 'update',
     * 'delete'
     */
    action: string;

    /** Optional detailed description of the audit event */
    description?: string | null | undefined;

    /** Timestamp when the audit event was recorded */
    created_at: string & tags.Format<"date-time">;
  };
}
