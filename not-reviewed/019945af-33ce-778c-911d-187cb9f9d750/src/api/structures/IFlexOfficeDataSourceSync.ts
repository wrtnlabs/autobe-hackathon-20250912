import { tags } from "typia";

/**
 * Records scheduled and executed synchronization operations for external data
 * sources.
 *
 * Tracks timestamps, status, success, and error details enabling monitoring and
 * retry mechanisms for data refresh workflows.
 *
 * Properties:
 *
 * - Id: Primary Key, UUID.
 * - Flex_office_data_source_id: Foreign key to data source.
 * - Scheduled_at: Scheduled execution time.
 * - Started_at: Sync start time, nullable.
 * - Completed_at: Sync completion time, nullable.
 * - Status: Sync status string.
 * - Error_message: Error details, nullable.
 * - Created_at: Record creation time.
 * - Updated_at: Last update time.
 *
 * All timestamps must be ISO 8601 date-time strings.
 *
 * Status is a string but should be one of 'pending', 'running', 'success',
 * 'failed' as business practice (not enforced explicitly here).
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeDataSourceSync = {
  /** Unique identifier for the sync operation. */
  id: string & tags.Format<"uuid">;

  /** Foreign key referencing the associated data source. */
  flex_office_data_source_id: string & tags.Format<"uuid">;

  /** Scheduled time for execution of the sync. */
  scheduled_at: string & tags.Format<"date-time">;

  /** Actual start time of the sync; null if not started yet. */
  started_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Time when sync finished; null if not finished yet. */
  completed_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Current sync status (e.g., pending, running, success, failed). */
  status: string;

  /** Error message if sync failed, null if no error. */
  error_message?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Last record update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IFlexOfficeDataSourceSync {
  /**
   * Request parameters for searching and paginating data source
   * synchronization records. Allows filtering by data source ID, date ranges,
   * status, and sorting order.
   */
  export type IRequest = {
    /** Optionally filter by data source identifier. */
    flex_office_data_source_id?: string | null | undefined;

    /** Filter scheduled sync operations from this date-time. */
    scheduled_at_from?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter scheduled sync operations up to this date-time. */
    scheduled_at_to?: (string & tags.Format<"date-time">) | null | undefined;

    /** Filter by sync operation status. */
    status?: "pending" | "running" | "success" | "failed" | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limit number of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Field to sort by. */
    sort_by?: string | null | undefined;

    /** Sorting order. */
    sort_order?: "asc" | "desc" | null | undefined;
  };

  /**
   * Payload to create a new synchronization operation for an external data
   * source.
   *
   * Required fields:
   *
   * - Flex_office_data_source_id (UUID)
   * - Scheduled_at (ISO 8601 date-time string)
   * - Status (string)
   *
   * Optional fields:
   *
   * - Started_at (nullable ISO 8601 date-time string)
   * - Completed_at (nullable ISO 8601 date-time string)
   * - Error_message (nullable string)
   */
  export type ICreate = {
    /** Foreign key linking to the data source to be synchronized. */
    flex_office_data_source_id: string & tags.Format<"uuid">;

    /** Scheduled date and time for execution of the sync operation. */
    scheduled_at: string & tags.Format<"date-time">;

    /**
     * Timestamp recording actual start of the sync process; null if not yet
     * started.
     */
    started_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp marking when the sync operation finished; null if ongoing. */
    completed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Status indicator of the sync operation (e.g., pending, running,
     * success, failed).
     */
    status: string;

    /**
     * Error message details if the sync operation failed; null if
     * successful or not attempted.
     */
    error_message?: string | null | undefined;
  };

  /**
   * Fields allowed to update in an existing synchronization record. All
   * fields optional, enabling partial updates.
   *
   * Properties:
   *
   * - Flex_office_data_source_id (optional UUID)
   * - Scheduled_at (optional ISO 8601 date-time string)
   * - Started_at (optional nullable ISO 8601 date-time string)
   * - Completed_at (optional nullable ISO 8601 date-time string)
   * - Status (optional string)
   * - Error_message (optional nullable string)
   */
  export type IUpdate = {
    /** Optional foreign key linking to data source. */
    flex_office_data_source_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional scheduled execution time. */
    scheduled_at?: (string & tags.Format<"date-time">) | undefined;

    /** Optional timestamp of sync start; can be null. */
    started_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional timestamp of sync completion; can be null. */
    completed_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional status update string. */
    status?: string | undefined;

    /** Optional error message if sync failed. */
    error_message?: string | null | undefined;
  };
}
