import { tags } from "typia";

/**
 * FlexOffice marketplace widget entity representing marketplace-available
 * widgets managed for extensibility features. Includes unique widget code,
 * name, version, description, timestamps, and soft deletion support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeMarketplaceWidget = {
  /** Primary unique identifier of the marketplace widget */
  id: string & tags.Format<"uuid">;

  /** Unique code identifier of the marketplace widget */
  widget_code: string;

  /** Human-readable name of the marketplace widget */
  name: string;

  /** Semantic version string following SemVer format */
  version: string;

  /** Optional detailed description of the marketplace widget */
  description?: string | null | undefined;

  /** Creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp indicating deprecation or removal */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficeMarketplaceWidget {
  /**
   * Data required to create a new marketplace widget entity in FlexOffice.
   * Includes unique widget code, name, version, and optional description.
   */
  export type ICreate = {
    /** Unique code identifier of the marketplace widget */
    widget_code: string;

    /** Human-readable name of the marketplace widget */
    name: string;

    /** Semantic version string following SemVer format */
    version: string;

    /** Optional detailed description of the marketplace widget */
    description?: string | null | undefined;
  };

  /**
   * Parameters for searching and paginating marketplace widgets in
   * FlexOffice. Includes filtering, sorting, and pagination options to narrow
   * down widget lists.
   */
  export type IRequest = {
    /** Page number for pagination */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of items per page limit */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Property name to sort by */
    sortBy?: string | null | undefined;

    /** Sort direction, ascending ('asc') or descending ('desc') */
    sortDir?: "asc" | "desc" | null | undefined;

    /** Search term to filter widget properties */
    search?: string | null | undefined;
  };

  /**
   * Properties allowable for updating a FlexOffice marketplace widget. All
   * fields are optional as partial updates are permitted.
   */
  export type IUpdate = {
    /** Unique code identifying the marketplace widget. */
    widget_code?: string | undefined;

    /** Human-friendly widget name. */
    name?: string | undefined;

    /** Version string following semantic versioning for the widget. */
    version?: string | undefined;

    /** Detailed description of the widget's functionality and features. */
    description?: string | null | undefined;

    /**
     * Soft deletion timestamp marking if the widget has been deprecated or
     * removed.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information for FlexOffice marketplace widgets including identity
   * and versioning data, used for listings.
   */
  export type ISummary = {
    /** Primary Key. */
    id: string & tags.Format<"uuid">;

    /** Unique code identifying the marketplace widget. */
    widget_code: string;

    /** Human-friendly widget name. */
    name: string;

    /** Version string following semantic versioning for the widget. */
    version: string;

    /** Timestamp when the widget was created in the marketplace. */
    created_at: string & tags.Format<"date-time">;
  };
}
