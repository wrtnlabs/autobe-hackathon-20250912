import { tags } from "typia";

/**
 * Active editor session record on a UI page within FlexOffice collaboration.
 * Tracks which editor is actively editing a page and session state including
 * soft deletion flag.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficePageEditor = {
  /** Primary Key. Unique identifier of the active editor session. */
  id: string & tags.Format<"uuid">;

  /**
   * Referenced page's flex_office_pages.id. UUID pointing to the UI page this
   * editor session is active on.
   */
  page_id: string & tags.Format<"uuid">;

  /**
   * Referenced editor user's flex_office_editors.id. UUID of the editor user
   * participating in this session.
   */
  editor_id: string & tags.Format<"uuid">;

  /**
   * Timestamp when the editor session started. ISO 8601 combined date and
   * time in UTC.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the editor session was last updated. Useful for
   * concurrency and heartbeat checks.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the editor session was closed or removed (soft delete).
   * Null if the session is active.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficePageEditor {
  /**
   * Page request data for FlexOffice PageEditor, supporting pagination and
   * filtering by page and editor.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Referenced page's ID for filtering. */
    page_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Referenced editor user's ID for filtering. */
    editor_id?: (string & tags.Format<"uuid">) | null | undefined;
  };

  /** Create a new record for an active editor session on a page. */
  export type ICreate = {
    /** Referenced page's ID. */
    page_id: string & tags.Format<"uuid">;

    /** Referenced editor user's ID. */
    editor_id: string & tags.Format<"uuid">;
  };

  /**
   * Properties for updating a page editor session in FlexOffice
   * collaboration. Optional fields to modify assignment and session state.
   */
  export type IUpdate = {
    /**
     * Referenced page's flex_office_pages.id. Optional UUID to re-assign
     * editor session to another page.
     */
    page_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Referenced editor user's flex_office_editors.id. Optional UUID to
     * re-assign editor session to another editor.
     */
    editor_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Timestamp when the editor session was closed or removed (soft
     * delete). Set to null to mark session active, or date-time string when
     * closing session.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summarized information for page editor session listings. */
  export type ISummary = {
    /** Unique identifier of the page editor session. */
    id: string;

    /** Associated UI page ID. */
    page_id: string & tags.Format<"uuid">;

    /** Editor user ID. */
    editor_id: string & tags.Format<"uuid">;
  };
}
