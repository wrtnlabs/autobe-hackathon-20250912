import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Editor users with personal identification and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeEditor = {
  /** Unique identifier of the editor user. */
  id: string & tags.Format<"uuid">;

  /** Full name of the editor user. */
  name: string;

  /** Email address of the editor user. */
  email: string;

  /** Timestamp of account creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IFlexOfficeEditor {
  /** Payload for creating a new editor user account. */
  export type ICreate = {
    /** Full name of the editor user. */
    name: string;

    /** Email address for editor registration. */
    email: string;

    /** Plaintext password for authentication. */
    password: string;
  };

  /** Editor login credentials. */
  export type ILogin = {
    /** Editor user login email. */
    email: string;

    /** Password for authentication. */
    password: string;
  };

  /** Request body for token refresh operation. */
  export type IRefresh = {
    /** Refresh token to renew access JWT */
    refresh_token: string;
  };

  /** Response containing authorized editor tokens. */
  export type IAuthorized = {
    /** Unique identifier of the authenticated editor. */
    id: string & tags.Format<"uuid">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Request parameters for listing editors with filters and pagination. */
  export type IRequest = {
    /** Page number for pagination */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Max records per page */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | undefined;

    /** Search term for editor list */
    search?: string | undefined;
  };

  /**
   * Update object for an Editor user, with optional fields for partial
   * updates.
   *
   * All properties are optional and allow nullable values.
   *
   * Used to modify editor user details like name, email, password hash, and
   * deletion status.
   */
  export type IUpdate = {
    /** Full name of the editor user for display and identification purposes. */
    name?: string | null | undefined;

    /** Editor user login email, unique within the system. */
    email?: string | null | undefined;

    /**
     * Hashed password for authentication. Password is stored securely as a
     * hash.
     */
    password_hash?: string | null | undefined;

    /** Soft delete timestamp; null if the editor account is active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary data for editor users. */
  export type ISummary = {
    /** Unique identifier of the editor. */
    id: string & tags.Format<"uuid">;

    /** Editor user's full name. */
    name: string;

    /** Editor user's email. */
    email: string;
  };
}
