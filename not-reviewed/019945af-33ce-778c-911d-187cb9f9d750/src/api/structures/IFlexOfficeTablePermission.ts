import { tags } from "typia";

/**
 * Permissions scoped to specific database tables in the FlexOffice system.
 * Defines which permissions apply to which tables. Subsidiary entity supporting
 * granular access control.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeTablePermission = {
  /**
   * Primary Key.
   *
   * Unique identifier of the table permission record.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Referenced permission's flex_office_permissions.id.
   *
   * Links this table permission to a specific permission entity.
   */
  permission_id: string & tags.Format<"uuid">;

  /** Name of the database table this permission applies to. */
  table_name: string;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp. Nullable; if present, record is considered
   * deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficeTablePermission {
  /**
   * Request payload for listing flexOffice table permissions with filters.
   *
   * Includes pagination and filter fields.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace AccessControl
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Number of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Referenced permission ID for filtering. */
    permission_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Name of the database table to filter. */
    table_name?: string | null | undefined;
  };

  /**
   * Create model for flexOffice table permission defining permission and
   * target table.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace AccessControl
   */
  export type ICreate = {
    /** Referenced permission's flex_office_permissions.id. */
    permission_id: string & tags.Format<"uuid">;

    /** Name of the database table this permission applies to. */
    table_name: string;
  };

  /**
   * Update operation for FlexOffice table permissions.
   *
   * Allows updating permission association, table name, or soft deletion
   * status.
   */
  export type IUpdate = {
    /**
     * Referenced permission's flex_office_permissions.id.
     *
     * Optional; used for updating this association.
     */
    permission_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Name of the database table this permission applies to.
     *
     * Optional.
     */
    table_name?: string | undefined;

    /**
     * Soft deletion timestamp; nullable.
     *
     * Used to mark this record as deleted or restored.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information of a table permission entity representing the
   * association between a permission key and a specific database table.
   *
   * This summary provides essential identifiers and relevant audit timestamps
   * for listing and management purposes.
   *
   * It enables administrators to view concise details about table-level
   * access control assignments.
   */
  export type ISummary = {
    /**
     * Primary key identifier for the table permission record.
     *
     * This unique UUID distinguishes each table permission entry in the
     * system.
     *
     * Used to reference this specific permission assignment in APIs and
     * internal logic.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Foreign key referencing the associated permission entity.
     *
     * Links the table permission to a defined permission key representing
     * an access right.
     *
     * Critical for enforcing security policies on specified tables.
     */
    permission_id: string & tags.Format<"uuid">;

    /**
     * Name of the database table to which the permission applies.
     *
     * This string identifies the target table within the FlexOffice system
     * database.
     *
     * Supports precise control over which tables access permissions govern.
     */
    table_name: string;

    /**
     * Timestamp marking when this table permission record was created.
     *
     * Serves auditing purposes and chronological tracking of permission
     * assignments.
     */
    created_at: string & tags.Format<"date-time">;

    /**
     * Timestamp marking the last update time of this table permission
     * record.
     *
     * Indicates recent modifications or validation checks on the permission
     * entry.
     */
    updated_at: string & tags.Format<"date-time">;
  };
}
