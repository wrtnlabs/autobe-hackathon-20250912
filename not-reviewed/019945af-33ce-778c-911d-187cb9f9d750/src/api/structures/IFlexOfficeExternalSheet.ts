import { tags } from "typia";

/**
 * Metadata for externally uploaded spreadsheet files, such as Google Sheets and
 * Excel, linked to data sources. Contains file identification, access URLs,
 * sheet counts, synchronization timestamps, and soft deletion data.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficeExternalSheet = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Foreign key referencing the linked data source. */
  flex_office_data_source_id: string & tags.Format<"uuid">;

  /** Original name of the uploaded spreadsheet file. */
  file_name: string;

  /** URL location to access the spreadsheet remotely. */
  file_url: string;

  /** Count of individual sheets contained within the spreadsheet. */
  sheet_count: number & tags.Type<"int32">;

  /** Timestamp of the last successful synchronization of the sheet. */
  last_synced_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp when the metadata record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when this metadata record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp for this spreadsheet metadata. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficeExternalSheet {
  /**
   * Parameters used to filter and paginate external sheet records associated
   * with a data source.
   *
   * Includes optional search criteria and pagination settings.
   *
   * Properties:
   *
   * - Flex_office_data_source_id (optional UUID to filter sheets by data
   *   source)
   * - File_name (optional, nullable string for file name filter)
   * - File_url (optional, nullable string for URL filter)
   * - Sheet_count (optional number to filter by sheet count)
   * - Last_synced_at (optional, nullable ISO 8601 date-time for last sync
   *   filter)
   * - Page (optional, nullable number for pagination page)
   * - Limit (optional, nullable number for pagination limit)
   */
  export type IRequest = {
    /** Filter external sheets by associated data source ID. */
    flex_office_data_source_id?: (string & tags.Format<"uuid">) | undefined;

    /** Filter by exact or partial file name. */
    file_name?: string | null | undefined;

    /** Filter by the virus-checked URL of the uploaded spreadsheet. */
    file_url?: string | null | undefined;

    /** Filter by number of sheets contained within the external spreadsheet. */
    sheet_count?: number | undefined;

    /** Filter by last successful synchronization timestamp. */
    last_synced_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Page index for pagination requests, 1-based. */
    page?: number | null | undefined;

    /** Number of items to return per page. */
    limit?: number | null | undefined;
  };

  /**
   * Payload for creating a new external sheet metadata entry. Includes file
   * name, URL, sheet count, and associated data source ID.
   */
  export type ICreate = {
    /** Foreign key referencing the linked data source. */
    flex_office_data_source_id: string & tags.Format<"uuid">;

    /** Original name of the uploaded spreadsheet file. */
    file_name: string;

    /** URL location to access the spreadsheet remotely. */
    file_url: string;

    /** Count of individual sheets contained within the spreadsheet. */
    sheet_count: number & tags.Type<"int32">;
  };

  /**
   * Payload for updating external sheet metadata. Allows modifying file
   * details and the last synchronization timestamp.
   */
  export type IUpdate = {
    /** Original name of the uploaded spreadsheet file. */
    file_name?: string | undefined;

    /** URL location to access the spreadsheet remotely. */
    file_url?: string | undefined;

    /** Count of individual sheets contained within the spreadsheet. */
    sheet_count?: (number & tags.Type<"int32">) | undefined;

    /** Timestamp of the last successful synchronization of the sheet. */
    last_synced_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summarized information for external sheet listings. */
  export type ISummary = {
    /** Unique identifier. */
    id: string;

    /** Original filename of the sheet. */
    file_name: string;

    /** URL location to access the sheet remotely. */
    file_url: string;

    /** Number of sheets in the document. */
    sheet_count: number & tags.Type<"int32">;

    /** Timestamp of last synchronization, nullable. */
    last_synced_at: (string & tags.Format<"date-time">) | null;

    /** Creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** Soft deletion timestamp, nullable. */
    deleted_at: (string & tags.Format<"date-time">) | null;
  };
}
