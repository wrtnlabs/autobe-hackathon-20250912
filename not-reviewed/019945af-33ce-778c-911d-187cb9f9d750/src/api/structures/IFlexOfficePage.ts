import { tags } from "typia";

/**
 * Represents a UI page in the FlexOffice system that can be customized using
 * the UI/Page Builder. Supports lifecycle management, theming, and soft
 * deletion.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IFlexOfficePage = {
  /** Unique identifier of the UI page */
  id: string & tags.Format<"uuid">;

  /** Associated page theme UUID (nullable) */
  flex_office_page_theme_id?: (string & tags.Format<"uuid">) | null | undefined;

  /** Display name or title of the page */
  name: string;

  /** Detailed description of the page (nullable) */
  description?: string | null | undefined;

  /** Current lifecycle status of the page, e.g., draft, published, archived */
  status: string;

  /** Timestamp when the page was created */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the page was last updated */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp for soft deletion (nullable) */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IFlexOfficePage {
  /**
   * Request parameters for querying UI pages with pagination, filtering, and
   * search capabilities.
   */
  export type IRequest = {
    /** Page number. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Limitation of records per a page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Search keyword to filter pages by name or description. */
    search?: string | null | undefined;

    /** Filter pages by status such as draft, published. */
    status?: string | null | undefined;

    /** Filter pages by associated theme id. */
    flex_office_page_theme_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;
  };

  /** Request body for creating a new UI page in FlexOffice. */
  export type ICreate = {
    /** Optional associated page theme id. */
    flex_office_page_theme_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** The display name or title of the page. */
    name: string;

    /** Optional detailed description of the page. */
    description?: string | null | undefined;

    /**
     * Current lifecycle status of the page, e.g., draft, published,
     * archived.
     */
    status: string;
  };

  /**
   * Model for updating a UI page. All fields are optional except Id, which is
   * path parameter and not included here.
   */
  export type IUpdate = {
    /** Optional UUID of the associated page theme */
    flex_office_page_theme_id?:
      | (string & tags.Format<"uuid">)
      | null
      | undefined;

    /** Display name or title of the page */
    name?: string | undefined;

    /** Detailed description of the page */
    description?: string | null | undefined;

    /** Lifecycle status of the page */
    status?: string | undefined;

    /** Timestamp for soft deletion */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary representation of a UI page including ID, name, status, and
   * creation timestamp.
   */
  export type ISummary = {
    /**
     * Unique identifier of the UI page as UUID.
     *
     * Represents a user-created UI page record from FlexOffice.
     */
    id: string & tags.Format<"uuid">;

    /**
     * Name/title of the UI page.
     *
     * Display name shown to users listing UI pages.
     */
    name: string;

    /**
     * Current status of the page (e.g., draft, published).
     *
     * Important for lifecycle management.
     */
    status: string;

    /** Timestamp when the page was created, ISO 8601 date-time. */
    created_at: string & tags.Format<"date-time">;
  };
}
