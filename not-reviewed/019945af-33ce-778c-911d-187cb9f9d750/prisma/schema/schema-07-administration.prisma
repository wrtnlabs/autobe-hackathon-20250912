/// Audit log records capturing immutable, append-only security and system
/// events for compliance monitoring. Includes event type, actor, target,
/// action details, and timestamps. Used for forensic audits and regulatory
/// compliance.
///
/// @namespace Administration
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model flex_office_audit_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Type/category of the audit event, e.g., 'login', 'permission_change',
  /// 'data_access'.
  event_type String
  
  /// Role or type of the actor performing the action, e.g., 'admin', 'editor',
  /// 'viewer'.
  actor_type String
  
  /// Unique identifier of the user who performed the action; nullable if
  /// system generated event.
  actor_id String?
  
  /// Type/category of the target entity affected by the event, e.g., 'page',
  /// 'data_source'.
  target_type String?
  
  /// Unique identifier of the target entity involved in the event.
  target_id String?
  
  /// Describes the specific action performed, e.g., 'create', 'update',
  /// 'delete'.
  action String
  
  /// Optional detailed description of the audit event.
  description String?
  
  /// Timestamp when the audit event was recorded.
  created_at DateTime
  
  /// Timestamp when the audit event record was last updated.
  updated_at DateTime
  
  /// Timestamp marking soft deletion; null if not deleted.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@index([actor_id, created_at])
  @@index([target_id, created_at])
  @@index([event_type, created_at])
}

/// User activity logs tracking user interactions with the system for
/// monitoring, analytics, and troubleshooting. Records user id, action
/// types, details, and timestamps. Append-only snapshot table for historical
/// analysis.
///
/// @namespace Administration
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model flex_office_user_activity_logs {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Referenced user's {@link flex_office_admins.id}, {@link
  /// flex_office_editors.id}, or {@link flex_office_viewers.id} depending on
  /// role.
  user_id String
  
  /// Type/category of the action performed by the user, e.g., 'login',
  /// 'edit_page', 'view_dashboard'.
  action_type String
  
  /// Optional details providing additional context about the user's action.
  action_details String?
  
  /// IP address from which the user performed the action.
  ip_address String?
  
  /// Timestamp when the user action was recorded.
  created_at DateTime
  
  /// Timestamp when the user action record was last updated.
  updated_at DateTime
  
  /// Soft delete timestamp; null if not deleted.
  deleted_at DateTime?
  
  //----
  // RELATIONS
  //----
  user flex_office_admins @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  @@index([user_id, created_at])
  @@index([action_type, created_at])
}

/// Operational system alerts representing notifications and warnings about
/// system health, security, or performance status. Supports creation,
/// updating, and filtering by severity and status.
///
/// @namespace Administration
/// @author AutoBE - https://github.com/wrtnlabs/autobe
model flex_office_system_alerts {
  //----
  // COLUMNS
  //----
  /// Primary Key.
  id String @id
  
  /// Alert severity level, e.g., 'info', 'warning', 'critical'.
  severity String
  
  /// Detailed alert message describing the issue or event.
  message String
  
  /// Flag indicating whether the alert has been resolved.
  is_resolved Boolean
  
  /// Timestamp when the alert was generated.
  created_at DateTime
  
  /// Timestamp when the alert record was last updated.
  updated_at DateTime
  
  /// Timestamp when the alert was resolved, null if unresolved.
  resolved_at DateTime?
  
  //----
  // RELATIONS
  //----
  @@index([severity, is_resolved, created_at])
}