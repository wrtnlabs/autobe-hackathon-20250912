import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Travel record guest entity represents unauthenticated guests with minimal
 * stored data.
 *
 * Guests can browse public content but cannot record or share locations.
 *
 * Includes primary key id and timestamps for creation and update.
 *
 * This entity supports guest session tracking and is foundational for
 * authentication workflows.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITravelRecordTravelRecordGuest = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITravelRecordTravelRecordGuest {
  /** Request query parameters for listing guest users with pagination support. */
  export type IRequest = {
    /** Page number for pagination */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Record limit per page for pagination */
    limit?: (number & tags.Type<"int32">) | null | undefined;
  };

  /**
   * Request body schema for creating a travel record guest user. No
   * additional fields are required as guests have minimal information.
   */
  export type ICreate = {};

  /**
   * Authorization response containing JWT token.
   *
   * Includes guest's unique ID and token information.
   */
  export type IAuthorized = {
    /** Primary Key identifier of the guest. */
    id: string & tags.Format<"uuid">;

    /** Record creation timestamp. */
    created_at: string & tags.Format<"date-time">;

    /** Record last update timestamp. */
    updated_at: string & tags.Format<"date-time">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Update data for the travel record guest.
   *
   * Only modifiable timestamps can be updated.
   */
  export type IUpdate = {
    /** Record creation timestamp (nullable). */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Record last update timestamp (nullable). */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
