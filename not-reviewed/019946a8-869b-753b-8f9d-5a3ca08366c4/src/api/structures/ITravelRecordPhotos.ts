import { tags } from "typia";

/**
 * Travel record photo entity representing a photo associated with a travel
 * record place, including metadata, audit timestamps, and soft deletion
 * status.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITravelRecordPhotos = {
  /** Unique identifier of the photo record. */
  id: string & tags.Format<"uuid">;

  /** ID of the travel record place that owns this photo. */
  travel_record_place_id: string & tags.Format<"uuid">;

  /** URI of the photo file. */
  file_uri: string;

  /** File size in bytes. */
  file_size: number & tags.Type<"int32">;

  /** Timestamp when photo was uploaded. */
  uploaded_at: string & tags.Format<"date-time">;

  /** Creation datetime of the record. */
  created_at: string & tags.Format<"date-time">;

  /** Last update datetime of the record. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp of soft deletion or null if not deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITravelRecordPhotos {
  /**
   * Request schema for updating photo metadata. All fields are optional
   * allowing partial updates without changing other data.
   */
  export type IUpdate = {
    /** Updated URI of the photo file. */
    file_uri?: string | undefined;

    /** Updated photo file size in bytes. */
    file_size?: (number & tags.Type<"int32">) | undefined;

    /** Updated upload timestamp. */
    uploaded_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft delete timestamp, null means not deleted. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
