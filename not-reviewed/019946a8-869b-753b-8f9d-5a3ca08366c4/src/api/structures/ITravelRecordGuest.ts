import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Guest user entity representing unauthenticated or minimal-access users of the
 * TravelRecord system. Contains ID and timestamps for session tracking.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITravelRecordGuest = {
  /** Unique identifier (UUID) as primary key */
  id: string & tags.Format<"uuid">;

  /** Created timestamp in ISO 8601 format */
  created_at: string & tags.Format<"date-time">;

  /** Last updated timestamp in ISO 8601 format */
  updated_at: string & tags.Format<"date-time">;
};
export namespace ITravelRecordGuest {
  /**
   * Request body for creating a new travel record guest; no properties
   * required.
   */
  export type ICreate = {};

  /**
   * Response body including guest ID and authorization token after successful
   * join or refresh.
   */
  export type IAuthorized = {
    /** Guest user unique ID */
    id: string & tags.Format<"uuid">;

    /** Created timestamp in ISO 8601 format */
    created_at: string & tags.Format<"date-time">;

    /** Last updated timestamp in ISO 8601 format */
    updated_at: string & tags.Format<"date-time">;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /** Request body containing refresh token to obtain new JWT tokens for guest. */
  export type IRefresh = {
    /** Refresh token string */
    refresh_token: string;
  };
}
