import { tags } from "typia";

/**
 * Stores privacy settings for travel records, allowing members to control
 * visibility of their content to friends and the public. Supports privacy
 * levels such as 'public' and 'private'. Linked to member entities, enabling
 * personalized privacy controls. Includes timestamps and soft deletion support
 * for record lifecycle management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITravelRecordPrivacySettings = {
  /**
   * Primary Key.
   *
   * Unique identifier of the privacy setting.
   */
  id: string & tags.Format<"uuid">;

  /** Owning member's ID. */
  member_id: string & tags.Format<"uuid">;

  /** Privacy level indicating visibility: 'public' or 'private'. */
  privacy_level: string;

  /** Timestamp when the privacy setting was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the privacy setting was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the privacy setting was soft deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITravelRecordPrivacySettings {
  /**
   * Request schema for filtered and paginated search of privacy settings.
   * Includes filter properties such as privacy level and timestamps.
   */
  export type IRequest = {
    /** Privacy level indicating visibility: 'public' or 'private'. */
    privacy_level?: string | undefined;

    /** Timestamp when the privacy setting was created. */
    created_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when the privacy setting was last updated. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Create schema for travel record privacy settings. Requires member ID and
   * privacy level as mandatory fields.
   */
  export type ICreate = {
    /** Owning member's unique identifier. */
    member_id: string & tags.Format<"uuid">;

    /** Privacy level indicating visibility: 'public' or 'private'. */
    privacy_level: string;
  };

  /**
   * Update information for a privacy setting, allowing modification of fields
   * like privacy level and deletion status.
   */
  export type IUpdate = {
    /** Privacy level to update to; must be 'public' or 'private'. */
    privacy_level: "public" | "private";

    /** Optional updated_at timestamp, ISO 8601 format. */
    updated_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional deletion timestamp; null if not deleted. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary information about travel record privacy settings. */
  export type ISummary = {
    /** Privacy setting ID. */
    id: string & tags.Format<"uuid">;

    /** Privacy level ('public' or 'private'). */
    privacy_level: string;

    /** Created timestamp. */
    created_at: string & tags.Format<"date-time">;
  };
}
