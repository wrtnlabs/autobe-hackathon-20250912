import { tags } from "typia";

import { IAuthorizationToken } from "./IAuthorizationToken";

/**
 * Administrator user entity representing system administrators with credentials
 * and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITravelRecordAdmin = {
  /** Unique identifier of the admin user */
  id: string & tags.Format<"uuid">;

  /** Official email address of the administrator */
  email: string & tags.Format<"email">;

  /** Display name used in system logs and interfaces */
  display_name: string;

  /** Hashed password for secure authentication */
  password_hash: string;

  /** Record creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Soft deletion timestamp for account deactivation and recovery, or null if
   * not deleted
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITravelRecordAdmin {
  /**
   * Administrator account creation details with email, display name, and
   * hashed password.
   */
  export type ICreate = {
    /**
     * Administrator's official email address for login. Must be a valid
     * unique email.
     */
    email: string & tags.Format<"email">;

    /** Administrator's display name used in system logs and interfaces. */
    display_name: string;

    /**
     * Hashed password for secure authentication. Passwords must be properly
     * hashed before sending.
     */
    password_hash: string;
  };

  /**
   * Authorization response containing JWT token and authentication
   * information for administrator users.
   */
  export type IAuthorized = {
    /** Unique identifier of the authenticated admin user */
    id: string & tags.Format<"uuid">;

    /** Administrator's email address */
    email: string & tags.Format<"email">;

    /** Administrator's display name */
    display_name: string;

    /** Hashed password for secure authentication */
    password_hash: string;

    /** Record creation timestamp */
    created_at: string & tags.Format<"date-time">;

    /** Record last update timestamp */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Soft deletion timestamp for account deactivation and recovery, or
     * null if not deleted
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** JWT token information for authentication */
    token: IAuthorizationToken;
  };

  /**
   * Request body schema for logging in an administrator user, including email
   * and password hash.
   */
  export type ILogin = {
    /** Administrator login email address */
    email: string;

    /** Password hash of the administrator for login verification */
    password_hash: string;
  };

  /**
   * Request body schema for refreshing administrator JWT tokens using refresh
   * token.
   */
  export type IRefresh = {
    /**
     * Refresh token string used to obtain new access tokens for the
     * administrator
     */
    refresh_token: string;
  };
}
