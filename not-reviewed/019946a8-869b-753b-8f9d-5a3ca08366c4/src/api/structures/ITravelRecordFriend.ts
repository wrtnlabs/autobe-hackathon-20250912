import { tags } from "typia";

/**
 * Represents bidirectional friendship relationships between members of the
 * TravelRecord system. Tracks friendship request lifecycle states such as
 * pending, accepted, and rejected. Supports soft deletion to allow logical
 * removal without data loss. Linked to member entities via foreign keys.
 * Enables efficient queries for friend requests, friend lists, and status
 * management.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type ITravelRecordFriend = {
  /**
   * Primary Key.
   *
   * Unique identifier of the friendship.
   */
  id: string & tags.Format<"uuid">;

  /** Requesting member's ID. */
  member_id: string & tags.Format<"uuid">;

  /** Target friend member's ID. */
  friend_member_id: string & tags.Format<"uuid">;

  /** Friendship status: pending, accepted, or rejected. */
  status: string;

  /** Timestamp when the friendship record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the friendship record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the friendship record was soft deleted. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace ITravelRecordFriend {
  /**
   * Friend list request query parameters. Supports filtering, pagination, and
   * sorting.
   */
  export type IRequest = {
    /** Filter by friendship status: pending, accepted, or rejected. */
    status?: string | null | undefined;

    /** Filter by target friend member's id. */
    friend_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Page size limit for pagination. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Sort order specification. */
    sort?: string | null | undefined;

    /** Search expression. */
    search?: string | null | undefined;
  };

  /** Friend relationship creation properties. */
  export type ICreate = {
    /** Requesting member's id. */
    member_id: string & tags.Format<"uuid">;

    /** Target friend member's id. */
    friend_member_id: string & tags.Format<"uuid">;

    /** Friendship status: pending, accepted, or rejected. */
    status: string;
  };

  /**
   * Update schema for a friend relationship allowing modification of
   * friendship status. Only the `status` field is mutable.
   */
  export type IUpdate = {
    /** Friendship status: pending, accepted, or rejected. */
    status?: "pending" | "accepted" | "rejected" | undefined;
  };

  /** Summary information for friendship records in lists. */
  export type ISummary = {
    /** Friendship record ID. */
    id: string & tags.Format<"uuid">;

    /** Friend member ID. */
    friend_member_id: string & tags.Format<"uuid">;

    /** Status of the friendship. */
    status: string;

    /** Created timestamp. */
    created_at: string & tags.Format<"date-time">;
  };
}
