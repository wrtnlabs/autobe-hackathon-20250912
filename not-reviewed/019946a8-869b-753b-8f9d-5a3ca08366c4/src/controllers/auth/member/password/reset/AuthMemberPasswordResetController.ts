import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";

import { ITravelRecordMember } from "../../../../../api/structures/ITravelRecordMember";

@Controller("/auth/member/password/reset")
export class AuthMemberPasswordResetController {
  /**
   * Reset password for TravelRecord member user.
   *
   * Reset the password of a TravelRecord member user upon verification token.
   * Requires a verified reset token and new password hash. This operation
   * updates the password_hash field in travel_record_member.
   *
   * Ensures secure password update flow preventing unauthorized resets.
   * Typically part of the account recovery process.
   *
   * Related operations: changePassword to update password while
   * authenticated.
   *
   * @param connection
   * @param body Password reset details including verification token and new
   *   password hash.
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Post()
  public async resetPassword(
    @TypedBody()
    body: ITravelRecordMember.IResetPassword,
  ): Promise<ITravelRecordMember.IResult> {
    body;
    return typia.random<ITravelRecordMember.IResult>();
  }
}
