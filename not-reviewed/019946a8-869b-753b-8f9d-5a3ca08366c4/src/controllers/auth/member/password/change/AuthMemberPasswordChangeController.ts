import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";

import { ITravelRecordMember } from "../../../../../api/structures/ITravelRecordMember";

@Controller("/auth/member/password/change")
export class AuthMemberPasswordChangeController {
  /**
   * Change password for authenticated TravelRecord member user.
   *
   * Change the password of an authenticated TravelRecord member user by
   * providing the current password and new password hash. Updates
   * password_hash field securely.
   *
   * Ensures that the current password matches before allowing update,
   * preventing unauthorized changes.
   *
   * Related operations: resetPassword for reset flow, login for
   * authentication.
   *
   * @param connection
   * @param body Current and new password hash for password change operation.
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Post()
  public async changePassword(
    @TypedBody()
    body: ITravelRecordMember.IChangePassword,
  ): Promise<ITravelRecordMember.IResult> {
    body;
    return typia.random<ITravelRecordMember.IResult>();
  }
}
