import { Controller } from "@nestjs/common";
import { TypedRoute, TypedBody } from "@nestia/core";
import typia from "typia";

import { ITravelRecordAdmin } from "../../../../api/structures/ITravelRecordAdmin";

@Controller("/auth/admin/refresh")
export class AuthAdminRefreshController {
  /**
   * Refresh JWT tokens for travel_record_admin user.
   *
   * Refresh JWT access tokens for an authenticated administrator user using a
   * valid refresh token.
   *
   * Ensures continued secure access without re-authentication.
   *
   * Used to prolong session longevity.
   *
   * Must be called with valid refresh tokens only.
   *
   * Related to join and login flows.
   *
   * @param connection
   * @param body Refresh token data for administrator
   * @setHeader token.access Authorization
   *
   * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
   */
  @TypedRoute.Post()
  public async refreshAdmin(
    @TypedBody()
    body: ITravelRecordAdmin.IRefresh,
  ): Promise<ITravelRecordAdmin.IAuthorized> {
    body;
    return typia.random<ITravelRecordAdmin.IAuthorized>();
  }
}
