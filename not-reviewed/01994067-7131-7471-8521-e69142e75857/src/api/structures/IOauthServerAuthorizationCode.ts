import { tags } from "typia";

/**
 * OAuth authorization code records. Stores unique code strings, JSONB OAuth
 * request data for robust protocol compliance, and redirect URIs. Linked to
 * OAuth clients. Includes timestamps for creation, update, and soft deletion to
 * support revocation and audit trails.
 *
 * @author AutoBE - https://github.com/wrtnlabs/autobe
 * @namespace Oauth
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IOauthServerAuthorizationCode = {
  /** Unique identifier of the authorization code record */
  id: string & tags.Format<"uuid">;

  /** Reference to the OAuth client requesting authorization. */
  oauth_client_id: string & tags.Format<"uuid">;

  /** Unique authorization code string issued to client. */
  code: string;

  /** OAuth request data as JSONB string for full protocol details. */
  data: string;

  /** Redirect URI used in the authorization flow. */
  redirect_uri: string;

  /** Expiration datetime of the authorization code. */
  expires_at: string & tags.Format<"date-time">;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp for revocation. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IOauthServerAuthorizationCode {
  /** Request type for searching/filtering OAuth authorization codes. */
  export type IRequest = {
    /** Optional text search on authorization code or related fields. */
    search?: string | null | undefined;

    /** Optional filter by OAuth client UUID. */
    oauth_client_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Optional filter: retrieve codes expiring before this date-time. */
    expires_before?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional filter: retrieve codes expiring after this date-time. */
    expires_after?: (string & tags.Format<"date-time">) | null | undefined;

    /** Optional pagination page number. */
    page?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Optional pagination limit per page. */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<0>) | null | undefined;

    /** Optional order by field. */
    orderBy?: "created_at" | "expires_at" | null | undefined;

    /** Optional order direction. */
    orderDirection?: "asc" | "desc" | null | undefined;
  };

  /**
   * Creation input for OAuth authorization codes.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Oauth
   */
  export type ICreate = {
    /** Reference to the OAuth client requesting authorization. */
    oauth_client_id: string & tags.Format<"uuid">;

    /** Unique authorization code string issued to client. */
    code: string;

    /** OAuth request data as JSONB string for full protocol details. */
    data: string;

    /** Redirect URI used in the authorization flow. */
    redirect_uri: string;

    /** Expiration datetime of the authorization code. */
    expires_at: string & tags.Format<"date-time">;
  };

  /**
   * Update input for OAuth authorization codes.
   *
   * @author AutoBE - https://github.com/wrtnlabs/autobe
   * @namespace Oauth
   */
  export type IUpdate = {
    /** Reference to the OAuth client requesting authorization. */
    oauth_client_id?: (string & tags.Format<"uuid">) | undefined;

    /** Unique authorization code string issued to client. */
    code?: string | undefined;

    /** OAuth request data as JSONB string for full protocol details. */
    data?: string | undefined;

    /** Redirect URI used in the authorization flow. */
    redirect_uri?: string | undefined;

    /** Expiration datetime of the authorization code. */
    expires_at?: (string & tags.Format<"date-time">) | undefined;

    /** Soft delete timestamp for revocation. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary information for OAuth authorization codes.
   *
   * Provides minimal fields needed to identify and manage authorization code
   * lifecycle and possession.
   */
  export type ISummary = {
    /** Unique identifier of the authorization code record. */
    id: string & tags.Format<"uuid">;

    /** Identifier of the OAuth client which owns the authorization code. */
    oauth_client_id: string & tags.Format<"uuid">;

    /** The unique authorization code string issued to the client. */
    code: string;

    /**
     * The redirect URI associated with the authorization code in the OAuth
     * flow.
     */
    redirect_uri: string;

    /**
     * Expiration timestamp after which the authorization code becomes
     * invalid.
     */
    expires_at: string & tags.Format<"date-time">;
  };
}
