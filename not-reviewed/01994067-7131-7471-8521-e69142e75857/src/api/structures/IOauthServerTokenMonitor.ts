import { tags } from "typia";

/**
 * Token monitor events capturing access token validations, expirations, and
 * revocations.
 *
 * Each record stores event metadata, including event type, timestamps, client
 * IPs, user agents, and associated OAuth client and token references for audit
 * and security purposes.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IOauthServerTokenMonitor = {
  /**
   * Primary Key.
   *
   * Unique identifier of the token monitor event.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Links to OAuth access token.
   *
   * Reference to the OAuth access token involved in the event.
   */
  access_token_id: string & tags.Format<"uuid">;

  /**
   * OAuth client related to the token event.
   *
   * Identifies the OAuth client associated with the token.
   */
  oauth_client_id: string & tags.Format<"uuid">;

  /**
   * Type of event like 'validation', 'expiration', 'revocation'.
   *
   * Event category describing the token lifecycle action.
   */
  event_type: string;

  /**
   * DateTime when event occurred.
   *
   * Timestamp of the token audit event in ISO 8601 format.
   */
  event_timestamp: string & tags.Format<"date-time">;

  /**
   * IP address origin of the event.
   *
   * Source IP where the token event originated.
   */
  ip_address: string;

  /**
   * User agent of the client; nullable.
   *
   * Optional user agent string for the token event source.
   */
  user_agent?: string | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IOauthServerTokenMonitor {
  /**
   * Request parameters for filtering and paginating OAuth token monitor
   * records.
   */
  export type IRequest = {
    /**
     * Optional filter to specify token event type (e.g. validation,
     * expiration, revocation).
     */
    event_type?: string | undefined;

    /** Optional filter by OAuth client ID (UUID). */
    oauth_client_id?: (string & tags.Format<"uuid">) | undefined;

    /** Optional filter by IP address. */
    ip_address?: string | undefined;

    /** Optional pagination parameter specifying current page number. */
    page?: number | undefined;

    /** Optional pagination parameter specifying records per page. */
    limit?: number | undefined;

    /** Optional pagination sort field. */
    sortField?: string | undefined;

    /** Optional pagination sort direction; enum containing "asc" or "desc". */
    sortDirection?: "asc" | "desc" | undefined;
  };

  /**
   * Input model for creating a token monitor event.
   *
   * Includes details about the related access token, client, event type,
   * time, source IP, and optional user agent.
   */
  export type ICreate = {
    /**
     * Links to OAuth access token.
     *
     * Required.
     */
    access_token_id: string & tags.Format<"uuid">;

    /**
     * OAuth client related to the token event.
     *
     * Required.
     */
    oauth_client_id: string & tags.Format<"uuid">;

    /**
     * Type of event like 'validation', 'expiration', 'revocation'.
     *
     * Required.
     */
    event_type: string;

    /**
     * DateTime when event occurred.
     *
     * Required.
     */
    event_timestamp: string & tags.Format<"date-time">;

    /**
     * IP address origin of the event.
     *
     * Required.
     */
    ip_address: string;

    /** User agent of the client; nullable. */
    user_agent?: string | null | undefined;

    /** Soft deletion timestamp; null if active. */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Model for updating a token monitor event. */
  export type IUpdate = {
    /**
     * Links to OAuth access token.
     *
     * Optional.
     */
    access_token_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * OAuth client related to the token event.
     *
     * Optional.
     */
    oauth_client_id?: (string & tags.Format<"uuid">) | undefined;

    /**
     * Type of event like 'validation', 'expiration', 'revocation'.
     *
     * Optional.
     */
    event_type?: string | undefined;

    /**
     * DateTime when event occurred.
     *
     * Optional.
     */
    event_timestamp?: (string & tags.Format<"date-time">) | undefined;

    /**
     * IP address origin of the event.
     *
     * Optional.
     */
    ip_address?: string | undefined;

    /**
     * User agent of the client; nullable.
     *
     * Optional.
     */
    user_agent?: string | null | undefined;

    /**
     * Soft deletion timestamp; null if active.
     *
     * Optional.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /** Summary information for OAuth server token monitor events. */
  export type ISummary = {
    /** Unique token monitor event ID. */
    id: string;

    /** Type of event such as validation or expiration. */
    event_type: string;

    /** Timestamp of the event. */
    event_timestamp: string & tags.Format<"date-time">;

    /** Origin IP of the event. */
    ip_address: string;

    /** User agent of the client, optional. */
    user_agent?: string | null | undefined;
  };
}
