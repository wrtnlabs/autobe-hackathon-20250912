import { tags } from "typia";

/**
 * OAuth client registered in the system.
 *
 * Includes credentials, metadata, trust flag, and audit timestamps.
 *
 * Supports soft deletion with 'deleted_at' date.
 *
 * Used for OAuth authorization and token issuance.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IOauthServerOauthClient = {
  /** Unique identifier of the OAuth client. */
  id: string & tags.Format<"uuid">;

  /** Unique client identifier string. */
  client_id: string;

  /** Client secret string. */
  client_secret: string;

  /** Redirect URI URL string. */
  redirect_uri: string;

  /** Optional URL string for the client's logo. */
  logo_uri?: string | null | undefined;

  /** Boolean flag indicating if client is trusted for automatic consent. */
  is_trusted: boolean;

  /** Soft delete timestamp with timezone; nullable if client is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

  /** Timestamp of record creation. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last record update. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IOauthServerOauthClient {
  /**
   * Request parameters for paginated search of OAuth clients.
   *
   * Supports pagination, filtering, and searching by attributes such as
   * client_id or trust status.
   */
  export type IRequest = {
    /** Optional current page number for pagination. */
    page?: number | null | undefined;

    /** Optional limits the number of records per page. */
    limit?: number | null | undefined;

    /**
     * Optional search string to filter clients by client_id or other
     * searchable fields.
     */
    search?: string | null | undefined;

    /** Optional boolean filter to return only trusted/untrusted clients. */
    is_trusted?: boolean | null | undefined;
  };

  /**
   * Schema for creating a new OAuth client with mandatory client ID, secret,
   * redirect URI, trust flag, and optional logo URI.
   */
  export type ICreate = {
    /** Unique client identifier used by OAuth clients. */
    client_id: string;

    /** Client secret used for authentication. */
    client_secret: string;

    /** Redirect URI for OAuth response callbacks. */
    redirect_uri: string;

    /** URI to the client's logo image. Optional. */
    logo_uri?: string | null | undefined;

    /**
     * Flag indicating whether the client is trusted, allowing automatic
     * consent.
     */
    is_trusted: boolean;
  };

  /** Schema for updating an existing OAuth client. All fields are optional. */
  export type IUpdate = {
    /** Client secret used for authentication. */
    client_secret?: string | undefined;

    /** Redirect URI for OAuth response callbacks. */
    redirect_uri?: string | undefined;

    /** URI to the client's logo image. Optional. */
    logo_uri?: string | null | undefined;

    /**
     * Flag indicating whether the client is trusted, allowing automatic
     * consent.
     */
    is_trusted?: boolean | undefined;
  };

  /**
   * Summary information for OAuth clients exposing essential identity and
   * trust state.
   */
  export type ISummary = {
    /** Unique identifier of the OAuth client entity */
    id: string & tags.Format<"uuid">;

    /** Unique client identifier string used by OAuth clients */
    client_id: string;

    /** Indicates if the client is trusted enabling automatic consent */
    is_trusted: boolean;

    /** URI to client logo image; nullable */
    logo_uri?: string | null | undefined;

    /** Soft delete timestamp marking when client was deleted; null if active */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;

    /** Timestamp when client record was created */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when client record was last updated */
    updated_at: string & tags.Format<"date-time">;

    /** Client secret used for authentication */
    client_secret?: string | undefined;

    /** Redirect URI for OAuth response callbacks */
    redirect_uri?: string | undefined;
  };
}
