import { tags } from "typia";

/**
 * Association table linking internal users with external social login accounts
 * from various providers. Maintains unique external user IDs per provider,
 * enabling unified user identity management across multiple social OAuth
 * services.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IOauthServerSocialUserLinks = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Internal user reference linked to oauth_server_members.id. */
  user_id: string & tags.Format<"uuid">;

  /**
   * Social OAuth provider reference linked to
   * oauth_server_social_providers.id.
   */
  social_provider_id: string & tags.Format<"uuid">;

  /** Unique user identifier assigned by the social provider. */
  external_user_id: string;

  /** OAuth access token for the user on the social provider. */
  access_token?: string | null | undefined;

  /** OAuth refresh token for the user on the social provider. */
  refresh_token?: string | null | undefined;

  /** Expiration datetime of the OAuth access token. */
  token_expiry?: (string & tags.Format<"date-time">) | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IOauthServerSocialUserLinks {
  /**
   * Association table linking internal users with external social login
   * accounts from various providers. Maintains unique external user IDs per
   * provider, enabling unified user identity management across multiple
   * social OAuth services.
   */
  export type ICreate = {
    /** Internal user reference linked to oauth_server_members.id. */
    user_id: string & tags.Format<"uuid">;

    /**
     * Social OAuth provider reference linked to
     * oauth_server_social_providers.id.
     */
    social_provider_id: string & tags.Format<"uuid">;

    /** Unique user identifier assigned by the social provider. */
    external_user_id: string;

    /** OAuth access token for the user on the social provider. */
    access_token?: string | null | undefined;

    /** OAuth refresh token for the user on the social provider. */
    refresh_token?: string | null | undefined;

    /** Expiration datetime of the OAuth access token. */
    token_expiry?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Association table linking internal users with external social login
   * accounts from various providers. Maintains unique external user IDs per
   * provider, enabling unified user identity management across multiple
   * social OAuth services.
   */
  export type IUpdate = {
    /** Internal user reference linked to oauth_server_members.id. */
    user_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Social OAuth provider reference linked to
     * oauth_server_social_providers.id.
     */
    social_provider_id?: (string & tags.Format<"uuid">) | null | undefined;

    /** Unique user identifier assigned by the social provider. */
    external_user_id?: string | null | undefined;

    /** OAuth access token for the user on the social provider. */
    access_token?: string | null | undefined;

    /** OAuth refresh token for the user on the social provider. */
    refresh_token?: string | null | undefined;

    /** Expiration datetime of the OAuth access token. */
    token_expiry?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
