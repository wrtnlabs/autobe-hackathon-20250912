import { tags } from "typia";

/**
 * System configuration settings for the OAuth server including general
 * parameters and environment-specific options. This primary table holds
 * key-value pairs that control system behavior. It includes timestamps for
 * audit and a soft delete field.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IOauthServerOauthServerConfigs = {
  /** Primary Key. */
  id: string & tags.Format<"uuid">;

  /** Unique configuration key identifying a system setting. */
  key: string;

  /** Value of the configuration setting, stored as string. */
  value?: string | null | undefined;

  /** Detailed explanation of the configuration setting's purpose and usage. */
  description?: string | null | undefined;

  /** Timestamp when the record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp when the record was last updated. */
  updated_at: string & tags.Format<"date-time">;

  /** Timestamp when the record was soft deleted; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IOauthServerOauthServerConfigs {
  /**
   * Parameters to search, filter and paginate OAuth server configuration
   * records.
   */
  export type IRequest = {
    /** Optional filter to search by config key pattern. */
    key?: string | null | undefined;

    /** Optional filter to search by exact value. */
    value?: string | null | undefined;

    /** Optional filter to search by description substring. */
    description?: string | null | undefined;

    /** Optional flag true=active configs, false=deleted configs. */
    is_active?: boolean | null | undefined;

    /** Pagination: page number requested. */
    page?: number | null | undefined;

    /** Pagination: number of records per page. */
    limit?: number | null | undefined;

    /** Sorting order, "asc" or "desc". */
    sortOrder?: "asc" | "desc" | null | undefined;

    /** Optional sorting field name. */
    sortField?: string | null | undefined;
  };

  /**
   * Payload to create a new guest user account entry in the
   * 'oauth_server_guests' table.
   */
  export type ICreate = {
    /** Unique configuration key identifying a system setting. */
    key: string;

    /** Value of the configuration setting, stored as string. */
    value?: string | null | undefined;

    /**
     * Detailed explanation of the configuration setting's purpose and
     * usage.
     */
    description?: string | null | undefined;
  };

  /**
   * Payload to create a new guest user account entry in the
   * 'oauth_server_guests' table.
   */
  export type IUpdate = {
    /** Value of the configuration setting, stored as string. */
    value?: string | null | undefined;

    /**
     * Detailed explanation of the configuration setting's purpose and
     * usage.
     */
    description?: string | null | undefined;
  };

  /**
   * Retrieve a filtered and paginated list of OAuth server configuration
   * settings. The oauth_server_configs table contains key-value configuration
   * pairs used to control various aspects of the OAuth server's behavior.
   *
   * This operation supports advanced filtering by key, value, description,
   * and active status (non-deleted). It also supports pagination and sorting
   * to efficiently handle large numbers of configurations.
   *
   * Security considerations require that only authorized users can access
   * these settings, as exposing configuration details may reveal sensitive
   * system internals.
   *
   * The operation integrates with the oauth_server_configs Prisma model,
   * reflecting the full set of fields including created_at, updated_at, and
   * deleted_at timestamps.
   *
   * Request parameters should allow partial key matching, exact or partial
   * value filtering, and filtering by deleted or active status.
   *
   * Response includes paginated data with summary information about each
   * configuration item.
   */
  export type ISummary = {
    /** Unique configuration key identifying a system setting. */
    key: string;

    /** Value of the configuration setting, stored as string. */
    value?: string | null | undefined;

    /**
     * Detailed explanation of the configuration setting's purpose and
     * usage.
     */
    description?: string | null | undefined;

    /** Timestamp when the record was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the record was last updated. */
    updated_at: string & tags.Format<"date-time">;
  };
}
