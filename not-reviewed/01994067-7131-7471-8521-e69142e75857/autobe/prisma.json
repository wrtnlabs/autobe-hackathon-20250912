{"files":[{"filename":"schema-01-systematic.prisma","namespace":"Systematic","models":[{"name":"oauth_server_configs","description":"System configuration settings for the OAuth server including general parameters and environment-specific options. This primary table holds key-value pairs that control system behavior. It includes timestamps for audit and a soft delete field.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"key","type":"string","nullable":false,"description":"Unique configuration key identifying a system setting."},{"name":"value","type":"string","nullable":true,"description":"Value of the configuration setting, stored as string."},{"name":"description","type":"string","nullable":true,"description":"Detailed explanation of the configuration setting's purpose and usage."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the record was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the record was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the record was soft deleted; null if active."}],"uniqueIndexes":[{"fieldNames":["key"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]},{"name":"oauth_server_redis_caches","description":"Caching metadata and configuration for Redis caches used by the OAuth server, including cache type, TTL, and keys managed. This subsidiary model supports performance optimization by managing Redis cache configurations.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"cache_name","type":"string","nullable":false,"description":"Name of the Redis cache configuration."},{"name":"prefix","type":"string","nullable":true,"description":"Key prefix used for Redis keys in this cache."},{"name":"ttl_seconds","type":"int","nullable":false,"description":"Time to live for cache entries, in seconds."},{"name":"description","type":"string","nullable":true,"description":"Description of the cache purpose and usage."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the cache configuration was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the cache configuration was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp when the cache configuration was soft deleted; null if active."}],"uniqueIndexes":[{"fieldNames":["cache_name"],"unique":true}],"plainIndexes":[{"fieldNames":["cache_name","ttl_seconds"]}],"ginIndexes":[]}]},{"filename":"schema-02-actors.prisma","namespace":"Actors","models":[{"name":"oauth_server_guests","description":"Guest user entity representing unauthenticated or anonymous users who can initiate authentication processes or browse limited services. Contains only auditing timestamps and soft delete support but no authentication fields.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last modification timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp; null when active."}],"uniqueIndexes":[],"plainIndexes":[],"ginIndexes":[]},{"name":"oauth_server_members","description":"Member user entity for registered users supporting local email/password authentication and social authentication. Includes unique email, verified flag, hashed password, and auditing timestamps with soft delete enabled.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Email address for user authentication and communication; unique per user."},{"name":"email_verified","type":"boolean","nullable":false,"description":"Flag indicating if the user's email address is verified."},{"name":"password_hash","type":"string","nullable":false,"description":"Hashed password for authentication; plain passwords are never stored."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp of record creation."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last record update."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp of soft deletion if applicable."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"oauth_server_admins","description":"Administrator user entity with elevated privileges for system management. Stores unique email, verified flag, hashed password, with auditing and soft delete timestamps.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Administrator email address; unique for login and communication."},{"name":"email_verified","type":"boolean","nullable":false,"description":"Indicates whether the administrator's email has been verified."},{"name":"password_hash","type":"string","nullable":false,"description":"Hashed password for administrator authentication."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp of account creation."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp of last account update."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp representing soft deletion status."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[],"ginIndexes":[]},{"name":"oauth_server_developers","description":"Developer user entity representing OAuth client developers with permissions to manage clients and SDKs. Includes unique email, email verification flag, password hash, with auditing and soft delete timestamps.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"email","type":"string","nullable":false,"description":"Developer email address; unique for identification and communication."},{"name":"email_verified","type":"boolean","nullable":false,"description":"Email verification status for developer accounts."},{"name":"password_hash","type":"string","nullable":false,"description":"Hashed password for developer authentication."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record update timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Timestamp marking soft deletion of the developer record."}],"uniqueIndexes":[{"fieldNames":["email"],"unique":true}],"plainIndexes":[],"ginIndexes":[]}]},{"filename":"schema-03-oauth.prisma","namespace":"Oauth","models":[{"name":"oauth_server_authorization_codes","description":"OAuth authorization code records. Stores unique code strings, JSONB OAuth request data for robust protocol compliance, and redirect URIs. Linked to OAuth clients. Includes timestamps for creation, update, and soft deletion to support revocation and audit trails.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"oauth_client_id","type":"uuid","description":"Reference to the OAuth client requesting authorization. {@link oauth_server_oauth_clients.id}","relation":{"name":"oauthClient","targetModel":"oauth_server_oauth_clients"},"unique":false,"nullable":false}],"plainFields":[{"name":"code","type":"string","description":"Unique authorization code string issued to client.","nullable":false},{"name":"data","type":"string","description":"OAuth request data as JSONB string for full protocol details.","nullable":false},{"name":"redirect_uri","type":"string","description":"Redirect URI used in the authorization flow.","nullable":false},{"name":"expires_at","type":"datetime","description":"Expiration datetime of the authorization code.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for revocation.","nullable":true}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["oauth_client_id","created_at"]}],"ginIndexes":[]},{"name":"oauth_server_access_tokens","description":"Stores opaque OAuth access tokens with scopes, expiration, and timestamps. Each token linked to an OAuth client and optionally the authorization code used to grant it. Tokens are unique and managed with creation/update timestamps and soft deletion.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"oauth_client_id","type":"uuid","description":"OAuth client owning this access token. {@link oauth_server_oauth_clients.id}","relation":{"name":"oauthClient","targetModel":"oauth_server_oauth_clients"},"unique":false,"nullable":false},{"name":"authorization_code_id","type":"uuid","description":"Authorization code related to this token, nullable if token is from other grant types. {@link oauth_server_authorization_codes.id}","relation":{"name":"authorizationCode","targetModel":"oauth_server_authorization_codes"},"unique":false,"nullable":true}],"plainFields":[{"name":"token","type":"string","description":"Opaque access token string.","nullable":false},{"name":"scope","type":"string","description":"Space-separated scopes granted for this token.","nullable":false},{"name":"expires_at","type":"datetime","description":"Expiration datetime for the token.","nullable":false},{"name":"created_at","type":"datetime","description":"Token creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Token update timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for token revocation.","nullable":true}],"uniqueIndexes":[{"fieldNames":["token"],"unique":true}],"plainIndexes":[{"fieldNames":["oauth_client_id","expires_at"]}],"ginIndexes":[]},{"name":"oauth_server_refresh_tokens","description":"Refresh tokens allowing clients to renew access tokens without reauthorization. Stored with opaque token string, related client and optionally authorization code, expiration, scopes, and auditing timestamps with soft deletion support.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"oauth_client_id","type":"uuid","description":"OAuth client associated with this refresh token. {@link oauth_server_oauth_clients.id}","relation":{"name":"oauthClient","targetModel":"oauth_server_oauth_clients"},"unique":false,"nullable":false},{"name":"authorization_code_id","type":"uuid","description":"Optional authorization code granting this refresh token. {@link oauth_server_authorization_codes.id}","relation":{"name":"authorizationCode","targetModel":"oauth_server_authorization_codes"},"unique":false,"nullable":true}],"plainFields":[{"name":"token","type":"string","description":"Opaque refresh token string.","nullable":false},{"name":"scope","type":"string","description":"Scopes granted by the refresh token, space-separated.","nullable":false},{"name":"expires_at","type":"datetime","description":"Expiration datetime of the refresh token.","nullable":false},{"name":"created_at","type":"datetime","description":"Creation timestamp of the refresh token.","nullable":false},{"name":"updated_at","type":"datetime","description":"Update timestamp of the refresh token.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for revocation.","nullable":true}],"uniqueIndexes":[{"fieldNames":["token"],"unique":true}],"plainIndexes":[{"fieldNames":["oauth_client_id","expires_at"]}],"ginIndexes":[]},{"name":"oauth_server_id_tokens","description":"OpenID Connect ID tokens issued to clients for identity claims, linked to OAuth clients and optionally authorization codes. Contains token strings, expirations, timestamps, and soft deletion timestamps for lifecycle management.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"oauth_client_id","type":"uuid","description":"OAuth client reference owning this ID token. {@link oauth_server_oauth_clients.id}","relation":{"name":"oauthClient","targetModel":"oauth_server_oauth_clients"},"unique":false,"nullable":false},{"name":"authorization_code_id","type":"uuid","description":"Related authorization code, nullable if not linked. {@link oauth_server_authorization_codes.id}","relation":{"name":"authorizationCode","targetModel":"oauth_server_authorization_codes"},"unique":false,"nullable":true}],"plainFields":[{"name":"token","type":"string","description":"ID token string containing OIDC claims, normally a JWT or opaque token.","nullable":false},{"name":"expires_at","type":"datetime","description":"Expiration timestamp of the ID token.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when ID token was issued.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp when ID token was last updated.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for token revocation.","nullable":true}],"uniqueIndexes":[{"fieldNames":["token"],"unique":true}],"plainIndexes":[{"fieldNames":["oauth_client_id","expires_at"]}],"ginIndexes":[]},{"name":"oauth_server_scopes","description":"Scope definitions for OAuth 2.0 authorization requests. Each scope has a unique code and human-readable description specifying the permission granted. Includes timestamps for auditing and soft delete support for scope deactivation.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","description":"Unique string code identifying the scope.","nullable":false},{"name":"description","type":"string","description":"Text description clarifying the scope's permissions.","nullable":false},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when the scope was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when the scope was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for scope removal, nullable if active."}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at"]}],"ginIndexes":[]}]},{"filename":"schema-04-clients.prisma","namespace":"Clients","models":[{"name":"oauth_server_oauth_clients","description":"OAuth clients registered in the system, representing applications that request OAuth authorization. Includes client credentials, redirect URIs, trust flag, and metadata. This is the main entity for client management in the OAuth server system.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"client_id","type":"string","nullable":false,"description":"Unique client identifier used by OAuth clients."},{"name":"client_secret","type":"string","nullable":false,"description":"Client secret used for authentication."},{"name":"redirect_uri","type":"string","nullable":false,"description":"Redirect URI for OAuth response callbacks."},{"name":"logo_uri","type":"string","nullable":true,"description":"URI to the client's logo image."},{"name":"is_trusted","type":"boolean","nullable":false,"description":"Flag indicating whether the client is trusted, allowing automatic consent."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp; records when the client was deleted."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[{"fieldNames":["client_id"],"unique":true}],"plainIndexes":[{"fieldNames":["deleted_at"]}],"ginIndexes":[]},{"name":"oauth_server_client_profiles","description":"Profile information related to OAuth clients, containing frequently changing metadata such as nickname and description. Linked to the main client entity to allow separation of frequently updated profile data.","material":false,"stance":"subsidiary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"oauth_client_id","type":"uuid","nullable":false,"description":"Belonged OAuth client {@link oauth_server_oauth_clients.id}.","relation":{"name":"client","targetModel":"oauth_server_oauth_clients"},"unique":false}],"plainFields":[{"name":"nickname","type":"string","nullable":false,"description":"Nickname of the OAuth client for display purposes."},{"name":"description","type":"string","nullable":true,"description":"Detailed description of the OAuth client."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp; records when the profile was deleted."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["deleted_at"]}],"ginIndexes":[{"fieldName":"nickname"}]}]},{"filename":"schema-05-social_logins.prisma","namespace":"SocialLogins","models":[{"name":"oauth_server_social_providers","description":"Social login OAuth external providers information, managing client IDs, secrets, and authorization endpoints. Provides configuration for integrating external OAuth systems such as Naver, Google, Apple, and others. Supports multi-tenancy and security management for social login integrations.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"provider_name","type":"string","nullable":false,"description":"Unique provider identifier name, e.g., 'naver', 'google', 'apple'."},{"name":"client_id","type":"string","nullable":false,"description":"Client ID used in OAuth flows for this provider."},{"name":"client_secret","type":"string","nullable":false,"description":"Client secret associated with the client ID."},{"name":"auth_url","type":"uri","nullable":false,"description":"OAuth authorization endpoint URL for the social provider."},{"name":"token_url","type":"uri","nullable":false,"description":"OAuth token endpoint URL for the social provider."},{"name":"user_info_url","type":"uri","nullable":false,"description":"User info API endpoint URL to fetch user details from social provider."},{"name":"scopes","type":"string","nullable":true,"description":"OAuth scopes requested for this provider, space separated."},{"name":"is_active","type":"boolean","nullable":false,"description":"Flag indicating if this social provider integration is active."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp."}],"uniqueIndexes":[{"fieldNames":["provider_name"],"unique":true}],"plainIndexes":[{"fieldNames":["is_active","updated_at"]}],"ginIndexes":[]},{"name":"oauth_server_social_user_links","description":"Association table linking internal users with external social login accounts from various providers. Maintains unique external user IDs per provider, enabling unified user identity management across multiple social OAuth services.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","nullable":false,"description":"Internal user reference linked to oauth_server_members.id.","relation":{"name":"user","targetModel":"oauth_server_members"},"unique":false},{"name":"social_provider_id","type":"uuid","nullable":false,"description":"Social OAuth provider reference linked to oauth_server_social_providers.id.","relation":{"name":"socialProvider","targetModel":"oauth_server_social_providers"},"unique":false}],"plainFields":[{"name":"external_user_id","type":"string","nullable":false,"description":"Unique user identifier assigned by the social provider."},{"name":"access_token","type":"string","nullable":true,"description":"OAuth access token for the user on the social provider."},{"name":"refresh_token","type":"string","nullable":true,"description":"OAuth refresh token for the user on the social provider."},{"name":"token_expiry","type":"datetime","nullable":true,"description":"Expiration datetime of the OAuth access token."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp."}],"uniqueIndexes":[{"fieldNames":["social_provider_id","external_user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["user_id","social_provider_id"]}],"ginIndexes":[{"fieldName":"external_user_id"}]}]},{"filename":"schema-06-user_profiles.prisma","namespace":"UserProfiles","models":[{"name":"oauth_server_user_profiles","description":"Stores volatile user profile information such as nicknames, profile pictures, and biographies that frequently change, decoupled from core user identity data to optimize update operations and API performance.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Foreign key referencing the primary user in the oauth_server_members table.","relation":{"name":"user","targetModel":"oauth_server_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"nickname","type":"string","nullable":true,"description":"User's display nickname which can be updated frequently."},{"name":"profile_picture_url","type":"string","nullable":true,"description":"URL to the user's profile picture, which can be changed often."},{"name":"biography","type":"string","nullable":true,"description":"A short personal biography or description."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when this record was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when this record was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp indicating logical deletion."}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["updated_at"]}],"ginIndexes":[{"fieldName":"nickname"}]},{"name":"oauth_server_game_profiles","description":"Contains player names and identifiers for external games such as PUBG and League of Legends, linked to user profiles for integration with official game APIs.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_profile_id","type":"uuid","description":"Foreign key referencing the user profile in oauth_server_user_profiles.","relation":{"name":"userProfile","targetModel":"oauth_server_user_profiles"},"unique":false,"nullable":false}],"plainFields":[{"name":"platform","type":"string","nullable":false,"description":"Game platform identifier such as 'pubg', 'kakao_pubg', or 'league_of_legends'."},{"name":"player_name","type":"string","nullable":false,"description":"Player's in-game name or identifier."},{"name":"season","type":"string","nullable":true,"description":"Season identifier to track season-specific stats."},{"name":"created_at","type":"datetime","nullable":false,"description":"Timestamp when this record was created."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Timestamp when this record was last updated."},{"name":"deleted_at","type":"datetime","nullable":true,"description":"Soft delete timestamp for logical deletion."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["platform","player_name"]}],"ginIndexes":[{"fieldName":"player_name"}]}]},{"filename":"schema-07-points_coupons.prisma","namespace":"PointsCoupons","models":[{"name":"oauth_server_user_points","description":"Current point balance record associated uniquely with each user in the OAuth server for point-based transactions. Supports soft deletion and includes audit timestamps.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"Associated user's {@link oauth_server_members.id}.","relation":{"name":"user","targetModel":"oauth_server_members"},"unique":true,"nullable":false}],"plainFields":[{"name":"balance","type":"int","description":"Current total points available for the user.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last updated timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id"],"unique":true}],"plainIndexes":[{"fieldNames":["deleted_at","updated_at"]}],"ginIndexes":[]},{"name":"oauth_server_user_point_histories","description":"Transaction history records capturing increments and decrements to user points for audit purposes, linked to the user_points record. Supports soft deletion and audit timestamps.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_point_id","type":"uuid","description":"Related user points record {@link oauth_server_user_points.id}.","relation":{"name":"userPoint","targetModel":"oauth_server_user_points"},"unique":false,"nullable":false}],"plainFields":[{"name":"change_amount","type":"int","description":"Amount of points added or subtracted in this transaction.","nullable":false},{"name":"balance_after_change","type":"int","description":"Point balance after this transaction update.","nullable":false},{"name":"reason","type":"string","description":"Description of the reason for the point change.","nullable":false},{"name":"created_at","type":"datetime","description":"Transaction record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update, usually same as created_at for historical record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp for soft deletion; null if active.","nullable":true}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["user_point_id","created_at"]}],"ginIndexes":[]},{"name":"oauth_server_point_coupons","description":"Coupon code definitions for granting points. Includes unique code, description, point value, usage limits, expiration time, and soft deletion. Enables controlled issuance and management of point coupons.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"code","type":"string","description":"Unique coupon code string used for redemption.","nullable":false},{"name":"description","type":"string","description":"Detailed explanation of the coupon usage and purpose.","nullable":true},{"name":"value","type":"int","description":"Points credited when coupon redeemed.","nullable":false},{"name":"max_issuance","type":"int","description":"Maximum number of times this coupon can be issued or redeemed overall.","nullable":false},{"name":"expire_at","type":"datetime","description":"Expiration datetime after which coupon is invalid and unusable.","nullable":false},{"name":"created_at","type":"datetime","description":"Coupon creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to the coupon record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp indicating coupon deactivation; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["code"],"unique":true}],"plainIndexes":[{"fieldNames":["expire_at","deleted_at"]}],"ginIndexes":[]},{"name":"oauth_server_user_point_coupons","description":"Tracks which coupons have been used by users for point redemption, linking users to coupons. Includes timestamps and soft delete support. Enforces uniqueness on user-coupon pairs to prevent duplicate redemptions.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"user_id","type":"uuid","description":"User who redeemed the coupon {@link oauth_server_members.id}.","relation":{"name":"user","targetModel":"oauth_server_members"},"unique":false,"nullable":false},{"name":"point_coupon_id","type":"uuid","description":"Coupon redeemed {@link oauth_server_point_coupons.id}.","relation":{"name":"pointCoupon","targetModel":"oauth_server_point_coupons"},"unique":false,"nullable":false}],"plainFields":[{"name":"used_at","type":"datetime","description":"Datetime when the coupon was redeemed by the user.","nullable":false},{"name":"created_at","type":"datetime","description":"Record creation timestamp.","nullable":false},{"name":"updated_at","type":"datetime","description":"Record last updated timestamp.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft delete timestamp for usage record; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["user_id","point_coupon_id"],"unique":true}],"plainIndexes":[{"fieldNames":["used_at","deleted_at"]}],"ginIndexes":[]}]},{"filename":"schema-08-audit_logs.prisma","namespace":"AuditLogs","models":[{"name":"oauth_server_audit_logs","description":"Audit logs capturing critical security and operational events including authentication attempts, token issuance, client operations, and system activities for compliance and traceability. This table is append-only capturing immutable event data with timestamps to support audit trails. Does not store sensitive data but records success and failure status with context for monitoring and forensic analysis.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[],"plainFields":[{"name":"event_type","type":"string","nullable":false,"description":"Type of the audited event such as 'authentication_success', 'authentication_failure', 'token_issued', 'client_registered', etc."},{"name":"event_timestamp","type":"datetime","nullable":false,"description":"Timestamp when the event occurred, stored in ISO 8601 format."},{"name":"actor_id","type":"uuid","nullable":true,"description":"Optional UUID identifying the user or client who triggered the event. Nullable if event is system-generated."},{"name":"actor_type","type":"string","nullable":true,"description":"Optional type of the actor triggering the event, e.g., 'user', 'client', 'system'. Nullable when not applicable."},{"name":"event_description","type":"string","nullable":false,"description":"Detailed description providing context or metadata about the event."},{"name":"created_at","type":"datetime","nullable":false,"description":"Record creation timestamp for audit logs."},{"name":"updated_at","type":"datetime","nullable":false,"description":"Record last update timestamp. Usually same as creation time since logs are immutable."}],"uniqueIndexes":[],"plainIndexes":[{"fieldNames":["event_type","event_timestamp"]},{"fieldNames":["actor_id","event_timestamp"]}],"ginIndexes":[{"fieldName":"event_description"}]}]},{"filename":"schema-09-admin.prisma","namespace":"Admin","models":[{"name":"oauth_server_admin_notifications","description":"Stores administrative notifications for OAuth server admins. This includes alert titles, messages, and read status, linked to the admin user. Records creation, update, and soft deletion timestamps for audit and operational purposes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"admin_id","type":"uuid","description":"References the administrator user {@link oauth_server_admins.id} who receives or is associated with the notification.","relation":{"name":"admin","targetModel":"oauth_server_admins"},"unique":false,"nullable":false}],"plainFields":[{"name":"title","type":"string","description":"Title of the notification message.","nullable":false},{"name":"message","type":"string","description":"Detailed notification content providing context to the admin.","nullable":false},{"name":"is_read","type":"boolean","description":"Indicates whether the notification has been read by the admin.","nullable":false},{"name":"created_at","type":"datetime","description":"Timestamp when the notification was initially created.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the last update to the notification.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Timestamp when the notification was soft deleted; null if active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["admin_id","title","created_at"],"unique":true}],"plainIndexes":[{"fieldNames":["created_at","is_read"]}],"ginIndexes":[{"fieldName":"title"},{"fieldName":"message"}]},{"name":"oauth_server_token_monitors","description":"Records monitoring logs for OAuth access token events such as validation, expiration, and revocation. Captures details about event type, timestamps, client IP, user agent, linked access token, and associated OAuth client for audit and security tracking purposes.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"access_token_id","type":"uuid","description":"Links to OAuth access token {@link oauth_server_access_tokens.id} related to the event.","relation":{"name":"accessToken","targetModel":"oauth_server_access_tokens"},"unique":false,"nullable":false},{"name":"oauth_client_id","type":"uuid","description":"References the OAuth client {@link oauth_server_oauth_clients.id} involved with the token event.","relation":{"name":"oauthClient","targetModel":"oauth_server_oauth_clients"},"unique":false,"nullable":false}],"plainFields":[{"name":"event_type","type":"string","description":"Type of token event such as 'validation', 'expiration', or 'revocation'.","nullable":false},{"name":"event_timestamp","type":"datetime","description":"Exact timestamp when the token event occurred.","nullable":false},{"name":"ip_address","type":"string","description":"IP address from which the token event originated.","nullable":false},{"name":"user_agent","type":"string","description":"User agent string of the client environment; nullable if not available.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp for log record creation.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of the last update to the log record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp; null if record is active.","nullable":true}],"uniqueIndexes":[{"fieldNames":["access_token_id","event_timestamp"],"unique":true}],"plainIndexes":[{"fieldNames":["event_timestamp","ip_address"]}],"ginIndexes":[{"fieldName":"user_agent"}]},{"name":"oauth_server_client_secret_regenerations","description":"Historical record of client secret regeneration events for OAuth clients. Tracks time of regeneration, reason for change, and references to admin user and OAuth client. Includes audit timestamps and supports soft deletion for compliance and operational transparency.","material":false,"stance":"primary","primaryField":{"name":"id","type":"uuid","description":"Primary Key."},"foreignFields":[{"name":"oauth_client_id","type":"uuid","description":"References the OAuth client {@link oauth_server_oauth_clients.id} whose secret was regenerated.","relation":{"name":"oauthClient","targetModel":"oauth_server_oauth_clients"},"unique":false,"nullable":false},{"name":"admin_id","type":"uuid","description":"References the administrator {@link oauth_server_admins.id} who performed the secret regeneration.","relation":{"name":"admin","targetModel":"oauth_server_admins"},"unique":false,"nullable":false}],"plainFields":[{"name":"regenerated_at","type":"datetime","description":"Timestamp when the client secret regeneration occurred.","nullable":false},{"name":"reason","type":"string","description":"Optional reason or notes explaining the secret regeneration.","nullable":true},{"name":"created_at","type":"datetime","description":"Timestamp when the record was created for audit.","nullable":false},{"name":"updated_at","type":"datetime","description":"Timestamp of last update to the record.","nullable":false},{"name":"deleted_at","type":"datetime","description":"Soft deletion timestamp; null indicates active record.","nullable":true}],"uniqueIndexes":[{"fieldNames":["oauth_client_id","regenerated_at"],"unique":true}],"plainIndexes":[{"fieldNames":["regenerated_at"]}],"ginIndexes":[]}]}]}