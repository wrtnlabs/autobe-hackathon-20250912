import { tags } from "typia";

/**
 * Chatbot point cooldown record tracking last point award time per member to
 * enforce 1-second cooldown policy. Used for fair point distribution and abuse
 * prevention.
 *
 * Includes references to member, last award timestamp, and audit timestamps.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatbotChatbotPointCooldown = {
  /** Primary Key - unique identifier of cooldown record. */
  id: string & tags.Format<"uuid">;

  /** Referenced member's unique identifier to track cooldown for. */
  chatbot_member_id: string & tags.Format<"uuid">;

  /**
   * Timestamp of the last point awarded to the member. Nullable to indicate
   * no awards yet.
   */
  last_point_time?: (string & tags.Format<"date-time">) | null | undefined;

  /** Record creation timestamp. */
  created_at: string & tags.Format<"date-time">;

  /** Record last update timestamp. */
  updated_at: string & tags.Format<"date-time">;
};
export namespace IChatbotChatbotPointCooldown {
  /**
   * Request parameters for searching and paginating chatbot point cooldown
   * records. Includes filters by member ID and time range, plus pagination
   * parameters.
   *
   * Supports nullable properties for optional filters.
   */
  export type IRequest = {
    /** Optional page number for pagination. */
    page?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional limit of records per page. */
    limit?: (number & tags.Type<"int32">) | null | undefined;

    /** Optional filter by member ID to narrow cooldown records. */
    chatbot_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Optional filter for cooldowns with last_point_time from this
     * timestamp onward.
     */
    last_point_time_from?:
      | (string & tags.Format<"date-time">)
      | null
      | undefined;

    /**
     * Optional filter for cooldowns with last_point_time up to this
     * timestamp.
     */
    last_point_time_to?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
