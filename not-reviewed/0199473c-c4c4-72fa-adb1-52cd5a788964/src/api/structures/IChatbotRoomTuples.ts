import { tags } from "typia";

/**
 * Chatbot room tuple mapping normal and admin rooms for session isolation and
 * authorization
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatbotRoomTuples = {
  /** Primary key UUID of the room tuple */
  id: string & tags.Format<"uuid">;

  /** Identifier for the normal chat room used for member participation */
  normal_room_id: string;

  /**
   * Identifier for the corresponding admin room controlling administrative
   * commands
   */
  admin_room_id: string;

  /** User-friendly display name */
  display_name: string;

  /** Unique business identifier */
  unique_id: string;

  /** Availability flag */
  enabled: boolean;

  /** Creation timestamp */
  created_at: string & tags.Format<"date-time">;

  /** Last update timestamp */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatbotRoomTuples {
  /** Request schema for filtering and paginating chatbot room tuples */
  export type IRequest = {
    /** Filter by normal room ID */
    normal_room_id?: string | null | undefined;

    /** Filter by admin room ID */
    admin_room_id?: string | null | undefined;

    /** Filter by unique business ID */
    unique_id?: string | null | undefined;

    /** Filter by display name */
    display_name?: string | null | undefined;

    /** Filter by enablement status */
    enabled?: boolean | null | undefined;

    /** Pagination page number */
    page?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;

    /** Pagination limit count */
    limit?: (number & tags.Type<"int32"> & tags.Minimum<1>) | null | undefined;
  };

  /** Request schema for creating a new chatbot room tuple mapping. */
  export type ICreate = {
    /**
     * Identifier for the normal chat room used for member participation.
     *
     * Must be provided and uniquely identify the normal room.
     */
    normal_room_id: string;

    /**
     * Identifier for the corresponding admin room controlling
     * administrative commands.
     *
     * Must be provided.
     */
    admin_room_id: string;

    /**
     * User-friendly display name.
     *
     * Required display name to identify this tuple.
     */
    display_name: string;

    /**
     * Unique business identifier for this tuple.
     *
     * Must be unique and is required.
     */
    unique_id: string;

    /**
     * Whether the tuple is enabled/active.
     *
     * Defaults to true if not provided.
     */
    enabled?: boolean | null | undefined;
  };

  /** Request schema for updating an existing chatbot room tuple. */
  export type IUpdate = {
    /**
     * Identifier for the normal chat room.
     *
     * Optional when updating. May remain unchanged.
     */
    normal_room_id?: string | null | undefined;

    /**
     * Identifier for the admin room.
     *
     * Optional when updating.
     */
    admin_room_id?: string | null | undefined;

    /**
     * Display name.
     *
     * Optional update - may revise display text.
     */
    display_name?: string | null | undefined;

    /**
     * Unique business identifier.
     *
     * Optional update - depends on business rules.
     */
    unique_id?: string | null | undefined;

    /**
     * Enabled flag.
     *
     * Optional update.
     */
    enabled?: boolean | null | undefined;
  };

  /**
   * Summary view for chatbot room tuple showing essential routing and status
   * info
   */
  export type ISummary = {
    /** Unique identifier of the chatbot room tuple */
    id: string & tags.Format<"uuid">;

    /** Linked normal room ID */
    normal_room_id: string;

    /** Linked admin room ID */
    admin_room_id: string;

    /** Display name for the tuple */
    display_name: string;

    /** Business unique ID */
    unique_id: string;

    /** Enablement status flag */
    enabled: boolean;
  };
}
