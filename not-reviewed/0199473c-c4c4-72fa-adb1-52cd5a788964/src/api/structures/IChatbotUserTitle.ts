import { tags } from "typia";

/**
 * User title assignment entity representing the association of a user to an
 * assigned title with assignment and audit timestamps.
 *
 * This entity enforces the rule that each user has at most one active title at
 * any time and tracks historical title assignments with soft delete support.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatbotUserTitle = {
  /**
   * Primary Key.
   *
   * Unique user title assignment identifier.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Belonged user's {@link chatbot_members.id}. Ensures one-to-one relation
   * representing the user's assigned title.
   */
  chatbot_member_id: string & tags.Format<"uuid">;

  /**
   * Referenced title's {@link chatbot_titles.id}. The title assigned to the
   * user.
   */
  chatbot_title_id: string & tags.Format<"uuid">;

  /**
   * Timestamp when the title was assigned to the user.
   *
   * ISO 8601 date-time format.
   */
  assigned_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the user-title association record was created.
   *
   * ISO 8601 date-time format.
   */
  created_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the user-title association record was last updated.
   *
   * ISO 8601 date-time format.
   */
  updated_at: string & tags.Format<"date-time">;

  /**
   * Timestamp when the user-title association record was soft-deleted, if
   * applicable.
   *
   * ISO 8601 date-time format or null if not deleted.
   */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatbotUserTitle {
  /**
   * Request parameters for searching and filtering chatbot user titles with
   * pagination support.
   *
   * Supports filters for member association, title id, and assignment date
   * range.
   */
  export type IRequest = {
    /**
     * Page number.
     *
     * Optional for pagination.
     */
    page?: number | null | undefined;

    /**
     * Limit of records per page.
     *
     * Optional for pagination.
     */
    limit?: number | null | undefined;

    /**
     * Search filter by chatbot_member_id.
     *
     * Optional filter parameter, UUID format.
     */
    chatbot_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Search filter by chatbot_title_id.
     *
     * Optional filter parameter, UUID format.
     */
    chatbot_title_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Search filter by assigned_at date range (start).
     *
     * Optional filter parameter, ISO 8601 date-time format.
     */
    assigned_at_gte?: (string & tags.Format<"date-time">) | null | undefined;

    /**
     * Search filter by assigned_at date range (end).
     *
     * Optional filter parameter, ISO 8601 date-time format.
     */
    assigned_at_lte?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Create request to assign a new user title to a member.
   *
   * Includes member and title identifiers with assignment timestamp.
   */
  export type ICreate = {
    /**
     * Belonged user's {@link chatbot_members.id}. Must match existing user
     * UUID.
     */
    chatbot_member_id: string & tags.Format<"uuid">;

    /**
     * Referenced title's {@link chatbot_titles.id}. Must match existing
     * title UUID.
     */
    chatbot_title_id: string & tags.Format<"uuid">;

    /**
     * Timestamp when the title was assigned to the user.
     *
     * ISO 8601 date-time format.
     */
    assigned_at: string & tags.Format<"date-time">;
  };

  /**
   * Update request for modifying a user title assignment.
   *
   * Fields are optional to allow partial updates.
   */
  export type IUpdate = {
    /**
     * Belonged user's {@link chatbot_members.id}.
     *
     * Optional update field, UUID format.
     */
    chatbot_member_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Referenced title's {@link chatbot_titles.id}.
     *
     * Optional update field, UUID format.
     */
    chatbot_title_id?: (string & tags.Format<"uuid">) | null | undefined;

    /**
     * Timestamp when the title was assigned to the user.
     *
     * Optional update field, ISO 8601 date-time format.
     */
    assigned_at?: (string & tags.Format<"date-time">) | null | undefined;
  };

  /**
   * Summary representation of a user title assigned to a chatbot member.
   * Includes key identifiers and assignment timestamp. Suitable for listing
   * user titles succinctly.
   */
  export type ISummary = {
    /** Unique identifier of the user title record. */
    id: string & tags.Format<"uuid">;

    /** Unique identifier of the chatbot member owning this title. */
    chatbot_member_id: string & tags.Format<"uuid">;

    /** Unique identifier of the title assigned to the user. */
    chatbot_title_id: string & tags.Format<"uuid">;

    /** Timestamp when the title was assigned to the user. */
    assigned_at: string & tags.Format<"date-time">;
  };
}
