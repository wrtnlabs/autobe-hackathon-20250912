import { tags } from "typia";

/**
 * Virtual stock items available for trading. Includes unique stock codes,
 * names, initial prices, and soft delete handling. This primary table serves as
 * the master list of stock definitions for the virtual stock trading domain.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatbotStockItems = {
  /**
   * Primary Key.
   *
   * Unique identifier of the stock item.
   */
  id: string & tags.Format<"uuid">;

  /**
   * Unique business code for the stock item.
   *
   * Must be unique across all stock items.
   */
  code: string;

  /**
   * Display name of the stock item.
   *
   * Must be unique. Used for display in UI and identification.
   */
  name: string;

  /**
   * Initial price of the stock item in points.
   *
   * Acceptable range: 100 to 1,000,000.
   */
  initial_price: number &
    tags.Type<"int32"> &
    tags.Minimum<100> &
    tags.Maximum<1000000>;

  /** Timestamp when the stock item was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of the last update to the stock item record. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft deletion timestamp; null if active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatbotStockItems {
  /**
   * Request body schema for updating a chatbot stock item.
   *
   * Includes all necessary fields to update and optionally soft delete the
   * stock item.
   */
  export type IUpdate = {
    /** UUID of the stock item to update. */
    id: string & tags.Format<"uuid">;

    /** Unique business code for the stock item. */
    code: string;

    /** Display name of the stock item. */
    name: string;

    /** Initial price of the stock item. */
    initial_price: number & tags.Type<"int32">;

    /** Optional soft deletion timestamp (nullable). */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
