import { tags } from "typia";

/**
 * Tracks each user's holdings of stock items. Links users to stock items with
 * the quantity held. Ensures uniqueness for the user-item pair and supports
 * soft deletes. Essential for portfolio management in the stock trading
 * system.
 *
 * @autobe Generated by AutoBE - https://github.com/wrtnlabs/autobe
 */
export type IChatbotStockHoldings = {
  /**
   * Primary Key.
   *
   * Unique identifier for the stock holding record.
   */
  id: string & tags.Format<"uuid">;

  /** Owner user of the stock holdings. Reference to chatbot_members.id */
  user_id: string & tags.Format<"uuid">;

  /** Stock item referenced. Reference to chatbot_stock_items.id */
  stock_item_id: string & tags.Format<"uuid">;

  /** Number of stock units held by user. */
  quantity: number & tags.Type<"int32">;

  /** Timestamp of when this holding record was created. */
  created_at: string & tags.Format<"date-time">;

  /** Timestamp of last update to the holding record. */
  updated_at: string & tags.Format<"date-time">;

  /** Soft delete timestamp, null if holding is active. */
  deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
};
export namespace IChatbotStockHoldings {
  /**
   * Summary of a user's stock holdings including reference to stock items and
   * quantity held. Useful for portfolio list views and trading interfaces.
   */
  export type ISummary = {
    /** Unique identifier of the stock holding record. */
    id: string & tags.Format<"uuid">;

    /** Unique identifier of the member owning this holding. */
    user_id: string & tags.Format<"uuid">;

    /** Unique identifier of the stock item held. */
    stock_item_id: string & tags.Format<"uuid">;

    /** Number of stock units held by the user. */
    quantity: number & tags.Type<"int32">;

    /** Timestamp when the holding record was created. */
    created_at: string & tags.Format<"date-time">;

    /** Timestamp when the holding record was last updated. */
    updated_at: string & tags.Format<"date-time">;

    /**
     * Timestamp indicating the holding record was soft-deleted; null if
     * active.
     */
    deleted_at?: (string & tags.Format<"date-time">) | null | undefined;
  };
}
